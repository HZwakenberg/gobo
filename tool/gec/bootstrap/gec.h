#define GE_USE_THREADS

/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Class name mapping as defined in the FreeELKS library. */
#ifndef EIF_INTEGER
#define EIF_INTEGER EIF_INTEGER_32
#endif
#ifndef EIF_CHARACTER
#define EIF_CHARACTER EIF_CHARACTER_8
#endif
#ifndef EIF_REAL
#define EIF_REAL EIF_REAL_32
#endif
#ifndef EIF_DOUBLE
#define EIF_DOUBLE EIF_REAL_64
#endif
#ifndef GE_ms
#if EIF_CHARACTER == EIF_CHARACTER_8
#define GE_ms(s,c) GE_ms8((s),(c))
#else
#define GE_ms(s,c) GE_ms32((s),(c))
#endif
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

/* See https://sourceforge.net/p/predef/wiki/OperatingSystems/ */
#if (defined(macintosh) || defined(Macintosh))
#define EIF_MAC 1
#define EIF_MACOSX 1
#endif
#if (defined(__APPLE__) && defined(__MACH__))
/* Apparently ISE does not define EIF_MASOSX for Mac OS X >=10.4 (see EXECUTION_ENVIRONMENT.available_cpu_count) */
#define EIF_MAC 1
#endif

#if (defined(VMS) || defined(__VMS))
#define EIF_VMS 1
#endif

#if (defined(__VXWORKS__) || defined(__vxworks))
#define EIF_VXWORKS 1
#endif

#define BYTEORDER 0x1234

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <stddef.h>

#define EIF_OS_WINNT 	1
#define EIF_OS_LINUX 	2
#define EIF_OS_DARWIN 	4
#define EIF_OS_VXWORKS	11
#define EIF_OS_VMS	12

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
#define EIF_OS EIF_OS_LINUX
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_WINNT
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_VMS
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_DARWIN
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_VXWORKS
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#ifndef _UINTPTR_T_DEFINED
#define _UINTPTR_T_DEFINED
#ifdef _WIN64
typedef unsigned __int64 uintptr_t;
#else
typedef unsigned int uintptr_t;
#endif
#endif
#endif

/* C type for underlying integer type identifying object's dynamic type. */
typedef uint16_t EIF_TYPE_INDEX;

/*
 * Abstraction representing an Eiffel type.
 * It is made of a compiler type-id,
 * and of some annotations (attached/detachable/separate/variant/frozen).
 */
typedef struct eif_type {
	EIF_TYPE_INDEX id;
	EIF_TYPE_INDEX annotations;
} EIF_TYPE;

/*
 * Since EIF_TYPE and EIF_ENCODED_TYPE have the same size, the encoded version
 * is basically a memcpy version of the EIF_TYPE representation.
 * It is used to provide backward compatibility to most Eiffel and
 * C APIs manipulating types as an INTEGER.
 */
typedef int32_t EIF_ENCODED_TYPE;
typedef EIF_ENCODED_TYPE EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)

/* SCOOP */
#ifdef GE_USE_SCOOP
typedef struct GE_scoop_processor_struct GE_scoop_processor;
#endif

/* Basic Eiffel types */
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
#ifdef GE_USE_SCOOP
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; GE_scoop_processor* scoop_processor;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; GE_scoop_processor* scoop_processor; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; GE_scoop_processor* scoop_processor; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;
#else
typedef struct {EIF_TYPE_INDEX id; uint16_t flags;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;
#endif

/* SCOOP */
typedef uint16_t EIF_SCP_PID; /* Processor ID */
#ifdef GE_USE_SCOOP
#define RTS_PID(o) (EIF_SCP_PID)(intptr_t)(((EIF_REFERENCE)(o))->scoop_processor)
#else
#define RTS_PID(o) (EIF_SCP_PID)0
#endif

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#ifdef __LCC__
/* lcc-win32 reports a constant overflow for -21474836478. */
#define GE_min_int32 (-GE_int32(2147483647)-GE_int32(1))
#else
#define GE_min_int32 GE_int32(-2147483648)
#endif
#define GE_max_int32 GE_int32(2147483647)
#if defined(__LCC__) || defined(__GNUC__) || defined(__MINGW32__)
/* lcc-win32 reports a constant overflow for -9223372036854775808. */
/* gcc and mingw-win64 warn that integer constant is so large that it is unsigned. */
#define GE_min_int64 (-GE_int64(9223372036854775807)-GE_int64(1))
#else
#define GE_min_int64 GE_int64(-9223372036854775808)
#endif
#if defined(__LCC__) && !defined(_WIN64)
/* lcc-win32 does not consider 64 bit constants as constants in case statement. */
#define GE_case_int64(x) ((int32_t)(x))
#define GE_case_nat64(x) ((uint32_t)(x))
#else
#define GE_case_int64(x) (x)
#define GE_case_nat64(x) (x)
#endif

#ifdef _WIN64
#define GE_IS_64_BITS EIF_TRUE
#else
#define GE_IS_64_BITS EIF_TEST(sizeof(void*)==64)
#endif

/* Posix threads */
#if !defined(EIF_WINDOWS)
#define GE_USE_POSIX_THREADS
#endif

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Gobo compiler version.
 * Starts with 6080 (looks like GOBO) followed by 5 digits.
 */
#define GE_compiler_version() 608000001

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
#define OVERHEAD sizeof(EIF_ANY)
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef intptr_t rt_int_ptr;
typedef uintptr_t rt_uint_ptr;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C types used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_THREAD_TYPES_H
#define GE_THREAD_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#define EIF_THREADS
#ifdef GE_USE_POSIX_THREADS
#define EIF_POSIX_THREADS
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef GE_USE_POSIX_THREADS
#include <pthread.h>
#include <semaphore.h>
#elif defined EIF_WINDOWS
#include <windows.h>
#include <process.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS

#define EIF_THR_TYPE            pthread_t
#define EIF_CS_TYPE				pthread_mutex_t
#define EIF_MUTEX_TYPE          pthread_mutex_t
#define EIF_COND_TYPE			pthread_cond_t
#define EIF_SEM_TYPE			sem_t
#define EIF_RWL_TYPE			pthread_rwlock_t

#elif defined EIF_WINDOWS

#define EIF_THR_TYPE            HANDLE
#define EIF_CS_TYPE				CRITICAL_SECTION
#define EIF_MUTEX_TYPE          CRITICAL_SECTION
#define EIF_SEM_TYPE            HANDLE

typedef struct {
		/* Semaphore used to queue up threads waiting for the condition to become signaled. */
	EIF_SEM_TYPE* semaphore;
		/* Serialize access to fields of Current. */
	EIF_CS_TYPE* csection;
		/* Number of waiters. */
	unsigned long num_waiting;
		/* Number of already awoken. */
	unsigned long num_wake;
		/* Number of time we signaled/broadcasted for improving fairness.
		 * This ensures one thread won't steal wakeups from other threads in queue. */
	unsigned long generation;
} EIF_COND_TYPE;

typedef struct {
	EIF_MUTEX_TYPE* m; /* Internal monitor lock. */
	int rwlock; /* >0 = # readers, <0 = writer, 0 = none */
	EIF_COND_TYPE* readers_ok; /* Start waiting readers. */
	unsigned int waiting_writers; /* Number of waiting writers. */
	EIF_COND_TYPE* writers_ok; /* Start a waiting writer. */
} EIF_RWL_TYPE;

#endif

typedef struct {
	unsigned int priority;
	unsigned int stack_size;
} EIF_THR_ATTR_TYPE;

/* Struct for thread context. */
typedef struct GE_thread_context_struct GE_thread_context;
struct GE_thread_context_struct {
	EIF_THR_TYPE thread_id; /* Thread identifier for associated thread. */
	EIF_REFERENCE current; /* Eiffel root object. */
	void (*routine)(EIF_REFERENCE, EIF_INTEGER); /* Eiffel routine. */
	void (*set_terminated)(EIF_REFERENCE, EIF_BOOLEAN); /* Eiffel routine to set {THREAD}.terminated. */
	unsigned int initial_priority; /* Initial priority. */
	EIF_THR_TYPE last_thread_id; /* Last thread created from current thread. */
	volatile int n_children; /* Number of direct thread children. */
	EIF_MUTEX_TYPE* children_mutex; /* Mutex to wait for thread children. */
	EIF_COND_TYPE* children_cond; /* Condition variable to wait for thread children. */
	GE_thread_context* parent_context;	/* Context of parent thread, NULL if main thread. */
	int thread_exiting; /* Has current thread already called GE_thread_exit? */
	volatile int is_alive; /* Is current thread still alive? */
#ifdef GE_USE_SCOOP
	int is_scoop_processor; /* Is current thread a SCOOP processor? */
#endif
		/*
		 * The following may contain Eiffel objects.
		 * Keep a reference to them here so that the GC keeps them alive.
		 * Otherwise they are declared in GE_context, which might 
		 * malloced as "atomic" (i.e. containing no collectable objects)
		 * so that the SCOOP processor can be marked as not used even
		 * if it is still referenced from GE_context.
		*/
	EIF_REFERENCE exception_manager; /* Exception manager */
};

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to implement once features"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_ONCE_H
#define GE_ONCE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Struct to keep track of the call status
 * and results of once features.
 */
typedef struct {
	EIF_BOOLEAN* boolean_value;
	EIF_REFERENCE* boolean_exception;
	unsigned char* boolean_status;
	unsigned int boolean_count;
	EIF_CHARACTER_8* character_8_value;
	EIF_REFERENCE* character_8_exception;
	unsigned char* character_8_status;
	unsigned int character_8_count;
	EIF_CHARACTER_32* character_32_value;
	EIF_REFERENCE* character_32_exception;
	unsigned char* character_32_status;
	unsigned int character_32_count;
	EIF_INTEGER_8* integer_8_value;
	EIF_REFERENCE* integer_8_exception;
	unsigned char* integer_8_status;
	unsigned int integer_8_count;
	EIF_INTEGER_16* integer_16_value;
	EIF_REFERENCE* integer_16_exception;
	unsigned char* integer_16_status;
	unsigned int integer_16_count;
	EIF_INTEGER_32* integer_32_value;
	EIF_REFERENCE* integer_32_exception;
	unsigned char* integer_32_status;
	unsigned int integer_32_count;
	EIF_INTEGER_64* integer_64_value;
	EIF_REFERENCE* integer_64_exception;
	unsigned char* integer_64_status;
	unsigned int integer_64_count;
	EIF_NATURAL_8* natural_8_value;
	EIF_REFERENCE* natural_8_exception;
	unsigned char* natural_8_status;
	unsigned int natural_8_count;
	EIF_NATURAL_16* natural_16_value;
	EIF_REFERENCE* natural_16_exception;
	unsigned char* natural_16_status;
	unsigned int natural_16_count;
	EIF_NATURAL_32* natural_32_value;
	EIF_REFERENCE* natural_32_exception;
	unsigned char* natural_32_status;
	unsigned int natural_32_count;
	EIF_NATURAL_64* natural_64_value;
	EIF_REFERENCE* natural_64_exception;
	unsigned char* natural_64_status;
	unsigned int natural_64_count;
	EIF_POINTER* pointer_value;
	EIF_REFERENCE* pointer_exception;
	unsigned char* pointer_status;
	unsigned int pointer_count;
	EIF_REAL_32* real_32_value;
	EIF_REFERENCE* real_32_exception;
	unsigned char* real_32_status;
	unsigned int real_32_count;
	EIF_REAL_64* real_64_value;
	EIF_REFERENCE* real_64_exception;
	unsigned char* real_64_status;
	unsigned int real_64_count;
	EIF_REFERENCE* reference_value;
	EIF_REFERENCE* reference_exception;
	unsigned char* reference_status;
	unsigned int reference_count;
	EIF_REFERENCE* procedure_exception;
	unsigned char* procedure_status;
	unsigned int procedure_count;
} GE_onces;

/*
 * Variable to keep track of the call status
 * and results of once-per-process features.
 */
extern GE_onces* GE_process_onces;

/*
 * Initialize `GE_process_onces'.
 */
extern void GE_init_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Create a new 'GE_onces' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_onces* GE_new_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Free memory allocated by `a_onces'.
 */
extern void GE_free_onces(GE_onces* a_onces);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_ONCE_H
#include "ge_once.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#endif

#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef struct GE_exception_trace_buffer_struct GE_exception_trace_buffer;
struct GE_exception_trace_buffer_struct {
	char* area;
	uint32_t count;
	uint32_t capacity;
};

/*
 * Information about the feature being executed.
 */
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef GE_USE_CURRENT_IN_EXCEPTION_TRACE
	void* object; /* Current object */
#endif
	const char* class_name;
	const char* feature_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* call; /* Call stack */
	uint32_t in_assertion; /* Is an assertion evaluated? */
	GE_rescue* last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t in_rescue; /* Number of rescue clauses currently being executed */
	EIF_REFERENCE exception_manager; /* Exception manager */
	char raising_exception; /* Is an exception currently being raised? */
	char exception_trace_enabled; /* Should exception trace be displayed? */
	long exception_code; /* Code of the exception currently being raised, 0 otherwise */
	const char* exception_tag; /* Tag of the exception currently being raised, NULL otherwise */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
	int pre_ecma_mapping_status; /* Do we map old names to new name? (i.e. STRING to STRING_8, INTEGER to INTEGER_32, ...). */
#ifdef GE_USE_THREADS
	GE_thread_context* thread; /* Thread context */
	GE_onces* process_onces; /* Cache for status and results of onces-per-process */
	GE_onces* thread_onces; /* Status and results of onces-per-thread */
	void* wel_per_thread_data; /* WEL private data */
#endif
#ifdef GE_USE_SCOOP
	GE_scoop_processor* scoop_processor; /* SCOOP processor executing the current code */
#endif
};
#define TC GE_context

/*
 * Default initialization for `GE_context'.
 */
extern GE_context GE_default_context;

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context(void);

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Free memory allocated in `a_context' for exception handling.
 */
extern void GE_free_exception(GE_context* a_context);

/*
 * Pointer to function to create a new exception manager object
 * (of type ISE_EXCEPTION_MANAGER).
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(GE_context*, EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.last_exception.
 */
extern EIF_REFERENCE (*GE_last_exception)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.once_raise.
 */
extern void (*GE_once_raise)(GE_context*, EIF_REFERENCE, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `a_code'.
 */
extern char* GE_exception_tag(long a_code);

/*
 * Raise an exception with code `a_code'.
 */
extern void GE_raise(long a_code);

/*
 * Raise an exception with code `a_code' and message `msg'.
 */
extern void GE_raise_with_message(long a_code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long a_code, char* a_meaning, char* a_message);

/*
 * Raise exception which was raised the first time a once routine
 * was executed when executing it again.
 */
extern void GE_raise_once_exception(GE_context* a_context, EIF_REFERENCE a_exception);

/*
 * Exception, if any, which was last raised in `a_context'.
 */
extern EIF_REFERENCE GE_last_exception_raised(GE_context* a_context);

/*
 * Jump to execute the rescue of the last routine with a rescue
 * in the call stack.
 */
extern void GE_jump_to_last_rescue(GE_context* a_context);

/*
 * Set `in_assertion' to 'not b'.
 * Return the opposite of previous value.
 */
extern EIF_BOOLEAN GE_check_assert(EIF_BOOLEAN b);

/*
 * Check whether the type id of `obj' is not in `type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if `obj' is Void.
 * `nb' is the number of ids in `type_ids' and is expected to be >0.
 * `type_ids' is sorted in increasing order.
 * Return `obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
extern EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, EIF_TYPE_INDEX type_ids[], int nb);

/*
 * Check whether `obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * If `i' is provided, then include it in the message displayed
 * in the console to make debugging easier when `obj' is Void.
 * Return `obj'.
 */
#define GE_void(obj) ((obj)?(obj):GE_check_void(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);
#ifdef EIF_WORKBENCH
#define GE_void2(obj,i) ((obj)?(obj):GE_check_void2((obj),(i)))
extern EIF_REFERENCE GE_check_void2(EIF_REFERENCE obj, EIF_INTEGER i);
#else
#define GE_void2(obj,i) ((obj)?(obj):GE_check_void(obj))
#endif

/*
 * Check whether `ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return `ptr'.
 */
#define GE_null(ptr) ((ptr)?(ptr):GE_check_null(ptr))
extern void* GE_check_null(void* ptr);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter(void);
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2023, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_THREAD_H
#define GE_THREAD_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS
#include <unistd.h>
#endif

#ifdef GE_USE_POSIX_THREADS
#	define EIF_TSD_VAL_TYPE        void*
#	define EIF_TSD_TYPE            pthread_key_t
#	define EIF_TSD_CREATE(key,msg) \
		if (pthread_key_create(&(key),NULL)) \
			GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (pthread_setspecific((key), (EIF_TSD_VAL_TYPE)(val))) \
			GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) (val = pthread_getspecific(key))
#	define EIF_TSD_GET(val_type,key,val,msg) \
		if (EIF_TSD_GET0(val_type,key,val) == (void*) 0) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) if (pthread_key_delete(key)) GE_raise_with_message(GE_EX_EXT, msg)
#elif defined EIF_WINDOWS
#	define EIF_TSD_VAL_TYPE        LPVOID
#	define EIF_TSD_TYPE            DWORD
#	define EIF_TSD_CREATE(key,msg) \
		if ((key=TlsAlloc())==TLS_OUT_OF_INDEXES) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (!TlsSetValue((key),(EIF_TSD_VAL_TYPE)(val))) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) \
		val=(val_type) TlsGetValue(key)
#	define EIF_TSD_GET(val_type,key,val,msg) \
		EIF_TSD_GET0(val_type,key,val); \
		if (GetLastError() != NO_ERROR) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) \
		if (!TlsFree(key)) GE_raise_with_message(GE_EX_EXT, msg)
#endif

/* Thread priority levels. */
#define EIF_MIN_THR_PRIORITY			0L
#define EIF_BELOW_NORMAL_THR_PRIORITY	100L
#define EIF_DEFAULT_THR_PRIORITY		127L
#define EIF_ABOVE_NORMAL_THR_PRIORITY	154L
#define EIF_MAX_THR_PRIORITY			255L

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
typedef struct {
	EIF_POINTER* boolean_mutex;
	EIF_POINTER* character_8_mutex;
	EIF_POINTER* character_32_mutex;
	EIF_POINTER* integer_8_mutex;
	EIF_POINTER* integer_16_mutex;
	EIF_POINTER* integer_32_mutex;
	EIF_POINTER* integer_64_mutex;
	EIF_POINTER* natural_8_mutex;
	EIF_POINTER* natural_16_mutex;
	EIF_POINTER* natural_32_mutex;
	EIF_POINTER* natural_64_mutex;
	EIF_POINTER* pointer_mutex;
	EIF_POINTER* real_32_mutex;
	EIF_POINTER* real_64_mutex;
	EIF_POINTER* reference_mutex;
	EIF_POINTER* procedure_mutex;
} GE_once_mutexes;

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
extern GE_once_mutexes* GE_process_once_mutexes;

/*
 * Create a new 'GE_once_mutexes' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_once_mutexes* GE_new_once_mutexes(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Keep track of the numbers of once-per-thread features.
 */
extern void GE_thread_onces_set_counts(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/* Global mutex to protect creation of once-per-object data. */
extern EIF_POINTER GE_once_per_object_data_mutex;

/*
 * Initialize data to handle threads.
 * To be called at the beginning of the main function
 * on the main thread.
 */
extern void GE_init_thread(GE_context* a_context);

/*
 * Create a new thread with attributes `attr' and execute
 * Eiffel routine `routine' on object `current'.
 */
extern void GE_thread_create_with_attr(EIF_REFERENCE current, void (*routine)(EIF_REFERENCE, EIF_INTEGER), void (*set_terminated)(EIF_REFERENCE,EIF_BOOLEAN), EIF_THR_ATTR_TYPE* attr, int is_scoop_processor);

/*
 * Execution context of current thread.
 */
extern GE_context* GE_thread_current_context(void);

/*
 * Thead ID of current thread.
 */
extern EIF_POINTER GE_thread_id(void);

/*
 * Thread ID of last thread created from current thread.
 */
extern EIF_POINTER GE_last_thread_created(void);

#ifdef EIF_WINDOWS
/*
 * Support for Windows GUI that requires that all GUI operations are performed in the same thread.
 * Allocate new structure of the given size `a_size', assign it to `wel_per_thread_data'.
 * Return newly allocated memory block. It will be freed automatically on thread termination.
 */
extern void* GE_thread_create_wel_per_thread_data(size_t a_size);
#endif

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated. The calling thread must be the
 * direct parent of the thread, or the function might loop indefinitely.
 */
extern void GE_thread_wait(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE));

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated, or reaching `a_timeout_ms'.
 * The calling thread must be the direct parent of the thread,
 * or the function might loop indefinitely.
 */
extern EIF_BOOLEAN GE_thread_wait_with_timeout(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE), EIF_NATURAL_64 a_timeout_ms);

/*
 * Yields execution to other threads.
 */
extern void GE_thread_yield(void);

/*
 * The calling thread waits for all other children threads to terminate.
 */
extern void GE_thread_join_all(void);

/*
 * Function called to terminate a thread launched by Eiffel with `GE_thread_create_with_attr'.
 * This function must be called from the thread itself (not the parent).
 */
extern void GE_thread_exit(void);

/*
 * Default thread priority level.
 */
extern EIF_INTEGER GE_thread_default_priority(void);

/*
 * Minimum thread priority level.
 */
extern EIF_INTEGER GE_thread_min_priority(void);

/*
 * Maximum thread priority level.
 */
extern EIF_INTEGER GE_thread_max_priority(void);

/*
 * Create a new mutex.
 */
extern EIF_POINTER GE_mutex_create(void);

/*
 * Lock mutex.
 */
extern void GE_mutex_lock(EIF_POINTER a_mutex);

/*
 * Try to lock mutex. Return True on success.
 */
extern EIF_BOOLEAN GE_mutex_try_lock(EIF_POINTER a_mutex);

/*
 * Unlock mutex.
 */
extern void GE_mutex_unlock(EIF_POINTER a_mutex);

/*
 * Destroy and free all resources used by mutex.
 */
extern void GE_mutex_destroy(EIF_POINTER a_mutex);

/*
 * Create a new semaphore allowing `a_count' threads
 * to go into a critical section.
 */
extern EIF_POINTER GE_semaphore_create(EIF_INTEGER a_count);

/*
 * Decrement semaphore count, waiting if necessary
 * until that becomes possible.
 */
extern void GE_semaphore_wait(EIF_POINTER a_semaphore);

/*
 * Has client been successful in decrementing semaphore
 * count without waiting?
 */
extern EIF_BOOLEAN GE_semaphore_try_wait(EIF_POINTER a_semaphore);

/*
 * Increment semaphore count.
 */
extern void GE_semaphore_post(EIF_POINTER a_semaphore);

/*
 * Destroy and free all resources used by semaphore.
 */
extern void GE_semaphore_destroy(EIF_POINTER a_semaphore);

/*
 * Create a new condition variable.
 */
extern EIF_POINTER GE_condition_variable_create(void);

/*
 * Unblock all threads blocked on condition variable.
 */
extern void GE_condition_variable_broadcast(EIF_POINTER a_condition_variable);

/*
 * Unblock one thread blocked on condition variable.
 */
extern void GE_condition_variable_signal(EIF_POINTER a_condition_variable);

/*
 * Block calling thread on condition variable.
 */
extern void GE_condition_variable_wait(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex);

/*
 * Block calling thread on condition variable for at most `a_timeout' milliseconds.
 * Return 1 is we got the condition variable on time, otherwise return 0.
 */
extern EIF_INTEGER GE_condition_variable_wait_with_timeout(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex, EIF_INTEGER a_timeout);

/*
 * Destroy and free all resources used by condition variable.
 */
extern void GE_condition_variable_destroy(EIF_POINTER a_condition_variable);

/*
 * Create a new read-write lock.
 */
extern EIF_POINTER GE_read_write_lock_create(void);

/*
 * Acquire a read lock. Multiple readers can go if there are no writer.
 */
extern void GE_read_write_lock_read_lock(EIF_POINTER a_read_write_lock);

/*
 * Acquire a write lock. Only a single write can proceed.
 */
extern void GE_read_write_lock_write_lock(EIF_POINTER a_read_write_lock);

/*
 * Unlock a read or write lock.
 */
extern void GE_read_write_lock_unlock(EIF_POINTER a_read_write_lock);

/*
 * Destroy and free all resources used by read-write lock.
 */
extern void GE_read_write_lock_destroy(EIF_POINTER a_read_write_lock);

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <string.h>
#ifdef EIF_WINDOWS
#ifdef __LCC__
/* With lcc-win32, stat.h should be included before wchar.h. */
#include <sys/stat.h>
#endif
#include <wchar.h>
#else
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/* Macro used to manipulate native strings, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen _wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */
#define GE_nstr_cat_ascii(dest, src) {							\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR)src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR)0;			\
	}

#else /* not EIF_WINDOWS */

/* Macro used to manipulate native strings, i.e: (char*) */
#define GE_nstrlen strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */
#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement type information"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2023, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_TYPES_H
#define GE_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Type annotations.
 * When a type has no annotation, it means a detachable, non-separate, variant type.
 * In all other cases, there will be an annotation.
 */
#define ANNOTATION_MASK			0x007F	/* All possible annotations. */
#define ATTACHED_FLAG			0x0001
#define DETACHABLE_FLAG			0x0002	/* Only present when overriding an attached type. */
#define SEPARATE_FLAG			0x0004
#define VARIANT_FLAG			0x0008	/* Only present when overriding a frozen/poly type. */
#define UNUSABLE_FLAG			0x0010	/* Reserved for backward compatibility for storables. */
#define FROZEN_FLAG				0x0020
#define POLY_FLAG				0x0040

/*
 * Type flags.
 */
#define GE_TYPE_FLAG_SPECIAL		0x0010
#define GE_TYPE_FLAG_TUPLE			0x0020
#define GE_TYPE_FLAG_EXPANDED		0x0040
#define GE_TYPE_FLAG_DEFERRED		0x0080
#define GE_TYPE_FLAG_NONE			0x0100
#define GE_TYPE_FLAG_BASIC_MASK		0x000F /* One of "BOOLEAN", "CHARACTER_8", "CHARACTER_32", "INTEGER_8", "INTEGER_16", "INTEGER_32", "INTEGER_64", "NATURAL_8", "NATURAL_16", "NATURAL_32", "NATURAL_64", "POINTER", "REAL_32", "REAL_64" */
#define GE_TYPE_FLAG_BOOLEAN		0x0001
#define GE_TYPE_FLAG_CHARACTER_8	0x0002
#define GE_TYPE_FLAG_CHARACTER_32	0x0003
#define GE_TYPE_FLAG_INTEGER_8		0x0004
#define GE_TYPE_FLAG_INTEGER_16		0x0005
#define GE_TYPE_FLAG_INTEGER_32		0x0006
#define GE_TYPE_FLAG_INTEGER_64		0x0007
#define GE_TYPE_FLAG_NATURAL_8		0x0008
#define GE_TYPE_FLAG_NATURAL_16		0x0009
#define GE_TYPE_FLAG_NATURAL_32		0x000A
#define GE_TYPE_FLAG_NATURAL_64		0x000B
#define GE_TYPE_FLAG_POINTER		0x000C
#define GE_TYPE_FLAG_REAL_32		0x000D
#define GE_TYPE_FLAG_REAL_64		0x000E

/*
 * Convention for attribute types.
 * The values are in sync with REFLECTOR_CONSTANTS.
 */
#define GE_TYPE_KIND_INVALID		-1
#define GE_TYPE_KIND_POINTER		0
#define GE_TYPE_KIND_REFERENCE		1
#define GE_TYPE_KIND_CHARACTER_8	2
#define GE_TYPE_KIND_BOOLEAN		3
#define GE_TYPE_KIND_INTEGER_32		4
#define GE_TYPE_KIND_REAL_32		5
#define GE_TYPE_KIND_REAL_64		6
#define GE_TYPE_KIND_EXPANDED		7
#define GE_TYPE_KIND_INTEGER_8		9
#define GE_TYPE_KIND_INTEGER_16		10
#define GE_TYPE_KIND_INTEGER_64 	11
#define GE_TYPE_KIND_CHARACTER_32	12
#define GE_TYPE_KIND_NATURAL_8		13
#define GE_TYPE_KIND_NATURAL_16		14
#define GE_TYPE_KIND_NATURAL_32 	15
#define GE_TYPE_KIND_NATURAL_64 	16

/*
 * Object flags.
 */
#define GE_OBJECT_FLAG_MARKED		0x0001

/*
 * Ancestor relationship between two types X and Y.
 */
#ifdef GE_USE_ANCESTORS
typedef struct {
	EIF_TYPE_INDEX type_id; /* Type id of Y */
	EIF_BOOLEAN conforms; /* Does X conform to Y? */
	void (**qualified_calls)(); /* Function pointers, indexed by call id, when the static type of the target is Y and the dynamic type is X */
} GE_ancestor;
#endif

/*
 * Attribute.
 */
#ifdef GE_USE_ATTRIBUTES
typedef struct {
#ifdef GE_USE_ATTRIBUTE_NAME
	const char* name; /* Attribute name */
#endif
#ifdef GE_USE_ATTRIBUTE_TYPE_ID
	EIF_ENCODED_TYPE type_id; /* Static type id */
#endif
#ifdef GE_USE_ATTRIBUTE_OFFSET
	uint32_t offset; /* Address offset in object */
#endif
} GE_attribute;
#endif

/*
 * Type information.
 */
typedef struct {
	EIF_TYPE_INDEX type_id;
	uint16_t flags;
#ifdef GE_USE_TYPE_GENERATOR
	const char* generator; /* Generator class name */
#endif
#ifdef GE_USE_TYPE_NAME
	const char* name; /* Full type name */
#endif
#ifdef GE_USE_TYPE_GENERIC_PARAMETERS
	EIF_ENCODED_TYPE* generic_parameters;
	uint32_t generic_parameter_count;
#endif
#ifdef GE_USE_ANCESTORS
	GE_ancestor** ancestors;
	uint32_t ancestor_count;
#endif
#ifdef GE_USE_ATTRIBUTES
	GE_attribute** attributes;
	uint32_t attribute_count;
#endif
#ifdef GE_USE_TYPE_OBJECT_SIZE
	uint64_t object_size;
#endif
	EIF_REFERENCE (*new_instance)();
	void (*dispose)(GE_context*, EIF_REFERENCE);
} GE_type_info;

typedef struct {
	EIF_TYPE_INDEX id; /* Type id of the "TYPE [X]" object */
	EIF_INTEGER type_id; /* Type id of the type "X" */
	EIF_BOOLEAN is_special;
	void (*dispose)(GE_context*, EIF_REFERENCE);
	EIF_REFERENCE a1; /* internal_name */
	EIF_REFERENCE a2; /* internal_name_32 */
} EIF_TYPE_OBJ;

/*
 * Types indexed by type id.
 * Generated by the compiler.
 */
extern EIF_TYPE_OBJ GE_types[][2];
extern GE_type_info GE_type_infos[];

/*
 * Number of type infos in `GE_type_infos'.
 * Do not take into account the fake item at index 0.
 */
extern int GE_type_info_count;

/*
 * Encode a EIF_TYPE into a EIF_ENCODED_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_ENCODED_TYPE GE_encoded_type(EIF_TYPE a_type);

/*
 * Decode a EIF_ENCODED_TYPE into a EIF_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_TYPE GE_decoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Type with `a_id' and `a_annotations'.
 */
extern EIF_TYPE GE_new_type(EIF_TYPE_INDEX a_id, EIF_TYPE_INDEX a_annotations);

/*
 * Type of object `obj'.
 */
#define GE_object_type(obj)	GE_new_type(((EIF_REFERENCE)(obj))->id, 0x0)
#define GE_object_encoded_type(obj) GE_encoded_type(GE_object_type(obj))

/*
 * Attachment status of `a_type'.
 */
#define GE_is_attached_type(a_type) EIF_TEST(((a_type).annotations & ATTACHED_FLAG) || GE_is_expanded_type_index((a_type).id))
#define GE_is_attached_encoded_type(a_type) GE_is_attached_type(GE_decoded_type(a_type))

/*
 * Associated detachable type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_non_attached_type(EIF_TYPE a_type);
#define GE_non_attached_encoded_type(a_type) GE_encoded_type(GE_non_attached_type(GE_decoded_type(a_type)))

/*
 * Associated attached type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_attached_type(EIF_TYPE a_type);
#define GE_attached_encoded_type(t) GE_encoded_type(GE_attached_type(GE_decoded_type(t)))

/*
 * Is `a_type' a SPECIAL type?
 */
#define GE_is_special_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_SPECIAL)
#define GE_is_special_encoded_type(a_type) GE_is_special_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_object(obj) GE_is_special_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of user-defined expanded type?
 */
extern EIF_BOOLEAN GE_is_special_of_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_expanded_encoded_type(a_type) GE_is_special_of_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_expanded_object(obj) GE_is_special_of_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type?
 */
extern EIF_BOOLEAN GE_is_special_of_reference_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_encoded_type(a_type) GE_is_special_of_reference_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_object(obj) GE_is_special_of_reference_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type or basic expanded type?
 * (Note that user-defined expanded types are excluded.)
 */
extern EIF_BOOLEAN GE_is_special_of_reference_or_basic_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_or_basic_expanded_encoded_type(a_type) GE_is_special_of_reference_or_basic_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_or_basic_expanded_object(obj) GE_is_special_of_reference_or_basic_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a TUPLE type?
 */
#define GE_is_tuple_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_TUPLE)
#define GE_is_tuple_encoded_type(a_type) GE_is_tuple_type_index(GE_decoded_type(a_type).id)
#define GE_is_tuple_object(obj) GE_is_tuple_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' an expanded type?
 */
#define GE_is_expanded_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_EXPANDED)
#define GE_is_expanded_encoded_type(a_type) GE_is_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_expanded_object(obj) GE_is_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a type whose base class is deferred?
 */
#define GE_is_deferred_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_DEFERRED)
#define GE_is_deferred_encoded_type(a_type) GE_is_deferred_type_index(GE_decoded_type(a_type).id)

/*
 * Does `i'-th field of `a_object + a_physical_offset' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_copy_semantics_field(EIF_INTEGER i, EIF_POINTER a_object, EIF_INTEGER a_physical_offset);

/*
 * Does `i'-th item of special `a_object' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_special_copy_semantics_item(EIF_INTEGER i, EIF_POINTER a_object);

/*
 * Generator class name of `a_type'.
 */
extern EIF_REFERENCE GE_generator_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_of_encoded_type(a_type) GE_generator_of_type_index(GE_decoded_type(a_type).id)
extern EIF_REFERENCE GE_generator_8_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_8_of_encoded_type(a_type) GE_generator_8_of_type_index(GE_decoded_type(a_type).id)

/*
 * Full name of `a_type'.
 */
extern EIF_REFERENCE GE_generating_type_of_encoded_type(EIF_ENCODED_TYPE a_type);
extern EIF_REFERENCE GE_generating_type_8_of_encoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Encoded type whose name is `a_name'.
 * -1 if no such type.
 */
extern EIF_ENCODED_TYPE GE_encoded_type_from_name(EIF_POINTER a_name);

/*
 * Does `a_type_1' conform to `a_type_2'?
 */
extern EIF_BOOLEAN GE_encoded_type_conforms_to(EIF_ENCODED_TYPE a_type_1, EIF_ENCODED_TYPE a_type_2);

/*
 * Number of generic parameters.
 */
extern EIF_INTEGER GE_generic_parameter_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generic_parameter_count_of_encoded_type(a_type) GE_generic_parameter_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Type of `i'-th generic parameter of `a_type'.
 */
extern EIF_INTEGER GE_generic_parameter_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER i);
#define GE_generic_parameter_of_encoded_type(a_type,i) GE_generic_parameter_of_type_index(GE_decoded_type(a_type).id, (i))

/*
 * Number of fields of an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_field_count_of_encoded_type(a_type) GE_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Physical offset of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_offset_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_offset_of_encoded_type(i, a_type) GE_field_offset_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Name of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_POINTER GE_field_name_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_name_of_encoded_type(i, a_type) GE_field_name_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Static type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_static_type_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_static_type_of_encoded_type(i, a_type) GE_field_static_type_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Kind of type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_type_kind_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_type_kind_of_encoded_type(i, a_type) GE_field_type_kind_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Physical size of `a_object'.
 */
extern EIF_NATURAL_64 GE_object_size(EIF_POINTER a_object);

/*
 * Is `i'-th field of objects of type `a_type' a user-defined expanded attribute?
 */
extern EIF_BOOLEAN GE_is_field_expanded_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_is_field_expanded_of_encoded_type(i, a_type) GE_is_field_expanded_of_type_index((i), GE_decoded_type(a_type).id)

#define GE_field_address_at(a_field_offset, a_object, a_physical_offset) ((char*)(a_object) + (a_physical_offset) + (a_field_offset))
#define GE_object_at_offset(a_enclosing, a_physical_offset) (EIF_REFERENCE)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_raw_object_at_offset(a_enclosing, a_physical_offset) (EIF_POINTER)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_object_encoded_type_at_offset(a_enclosing, a_physical_offset) GE_object_encoded_type(GE_raw_object_at_offset((a_enclosing), (a_physical_offset)))
#define GE_boolean_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_pointer_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_raw_reference_field_at(a_field_offset, a_object, a_physical_offset) (EIF_POINTER)*(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_reference_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_set_boolean_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_boolean_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_pointer_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_pointer_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_reference_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_reference_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value

#if defined(GE_USE_ATTRIBUTES) && defined(GE_USE_ATTRIBUTE_OFFSET)
#define GE_field_address(i, a_object, a_physical_offset) GE_field_address_at(GE_type_infos[((EIF_REFERENCE)(a_object))->id].attributes[(i) - 1]->offset, (a_object), (a_physical_offset))
#define GE_boolean_field(i, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_8_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_32_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_8_field(i, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_16_field(i, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_32_field(i, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_64_field(i, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_8_field(i, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_16_field(i, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_32_field(i, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_64_field(i, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_pointer_field(i, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_32_field(i, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_64_field(i, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_reference_field(i, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value) GE_boolean_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value) GE_character_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value) GE_character_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value) GE_integer_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value) GE_integer_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value) GE_integer_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value) GE_integer_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value) GE_natural_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value) GE_natural_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value) GE_natural_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value) GE_natural_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value) GE_pointer_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value) GE_real_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value) GE_real_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value) GE_reference_field((i), (a_object), (a_physical_offset)) = (a_value)
#else
#define GE_boolean_field(i, a_object, a_physical_offset) (EIF_BOOLEAN)0
#define GE_character_8_field(i, a_object, a_physical_offset) (EIF_CHARACTER_8)0
#define GE_character_32_field(i, a_object, a_physical_offset) (EIF_CHARACTER_32)0
#define GE_integer_8_field(i, a_object, a_physical_offset) (EIF_INTEGER_8)0
#define GE_integer_16_field(i, a_object, a_physical_offset) (EIF_INTEGER_16)0
#define GE_integer_32_field(i, a_object, a_physical_offset) (EIF_INTEGER_32)0
#define GE_integer_64_field(i, a_object, a_physical_offset) (EIF_INTEGER_64)0
#define GE_natural_8_field(i, a_object, a_physical_offset) (EIF_NATURAL_8)0
#define GE_natural_16_field(i, a_object, a_physical_offset) (EIF_NATURAL_16)0
#define GE_natural_32_field(i, a_object, a_physical_offset) (EIF_NATURAL_32)0
#define GE_natural_64_field(i, a_object, a_physical_offset) (EIF_NATURAL_64)0
#define GE_pointer_field(i, a_object, a_physical_offset) (EIF_POINTER)0
#define GE_real_32_field(i, a_object, a_physical_offset) (EIF_REAL_32)0
#define GE_real_64_field(i, a_object, a_physical_offset) (EIF_REAL_64)0
#define GE_reference_field(i, a_object, a_physical_offset) (EIF_REFERENCE)0
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value)
#endif

/*
 * Number of non-transient fields of an object of dynamic type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_persistent_field_count_of_type_index(a_type) GE_field_count_of_type_index(a_type)
#define GE_persistent_field_count_of_encoded_type(a_type) GE_persistent_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Is `i'-th field of objects of type `a_type' a transient field?
 * TODO: storable not implemented yet.
 */
#define GE_is_field_transient_of_type_index(i, a_type) EIF_FALSE
#define GE_is_field_transient_of_encoded_type(i, a_type) GE_is_field_transient_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Storable version of objects of type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_storable_version_of_type_index(a_type) EIF_VOID
#define GE_storable_version_of_encoded_type(a_type) GE_storable_version_of_type_index(GE_decoded_type(a_type).id)

/*
 * Get a lock on `GE_mark_object' and `GE_unmark_object' routines so that
 * 2 threads cannot `GE_mark_object' and `GE_unmark_object' at the same time.
 */
extern void GE_lock_marking(void);

/*
 * Release a lock on `GE_mark_object' and `GE_unmark_object', so that another
 * thread can use `GE_mark_object' and `GE_unmark_object'.
 */
extern void GE_unlock_marking(void);

/*
 * Is `obj' marked?
 */
extern EIF_BOOLEAN GE_is_object_marked(EIF_POINTER obj);

/*
 * Mark `obj'.
 */
extern void GE_mark_object(EIF_POINTER obj);

/*
 * Unmark `obj'.
 */
extern void GE_unmark_object(EIF_POINTER obj);

/*
 * New instance of dynamic `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 * `a_type' cannot represent a SPECIAL type, use
 * `GE_new_special_of_reference_instance_of_type_index' instead.
 */
extern EIF_REFERENCE GE_new_instance_of_type_index(GE_context* a_context, EIF_TYPE_INDEX a_type);
#define GE_new_instance_of_encoded_type(a_context, a_type) GE_new_instance_of_type_index((a_context), GE_decoded_type(a_type).id)

/*
 * New instance of dynamic `a_type' that represents
 * a SPECIAL with can contain `a_capacity' elements of reference type.
 * To create a SPECIAL of basic type, use class SPECIAL directly.
 */
extern EIF_REFERENCE GE_new_special_of_reference_instance_of_type_index(GE_context* a_context, EIF_TYPE_INDEX a_type, EIF_INTEGER a_capacity);
#define GE_new_special_of_reference_instance_of_encoded_type(a_context, a_type, a_capacity) GE_new_special_of_reference_instance_of_type_index(a_context), GE_decoded_type(a_type).id, (a_capacity))

/*
 * New instance of tuple of type `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 */
#define GE_new_tuple_instance_of_type_index(a_context, a_type) GE_new_instance_of_type_index((a_context), (a_type))
#define GE_new_tuple_instance_of_encoded_type(a_context, a_type) GE_new_tuple_instance_of_type_index((a_context), GE_decoded_type(a_type).id)

/*
 * New instance of TYPE for object of type `a_type'.
 */
extern EIF_REFERENCE GE_new_type_instance_of_encoded_type(GE_context* a_context, EIF_ENCODED_TYPE a_type);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_STRING_H
#define GE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * New Eiffel empty string of type "STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str32(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr32(EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ms8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_str8(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_8" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ims8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ms32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' 32-bit characters built from `s' by reading
 * groups of four bytes with little-endian byte order.
 */
extern EIF_REFERENCE GE_ms32_from_utf32le(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_str32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing
 * the first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ims32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `c' 32-bit characters built from `s' by reading
 * groups of four bytes with little-endian byte order.
 */
extern EIF_REFERENCE GE_ms32_from_utf32le(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_istr32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `n' native characters found in native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_ims32_from_nstr(EIF_NATIVE_CHAR* s, EIF_INTEGER n);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_istr32_from_nstr(EIF_NATIVE_CHAR* s);

/*
 * New Eiffel string of type "STRING" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'
 */
extern EIF_REFERENCE GE_str(const char* s);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize mutex to determine whether a new
 * console needs to be created.
 */
#ifdef EIF_WINDOWS
extern void GE_init_console(void);
#else
#define GE_init_console()
#endif

/*
 * Create a new DOS console if needed (i.e. in case of a Windows application).
 */
#ifdef EIF_WINDOWS
extern void GE_show_console(void);
#else
#define GE_show_console()
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_GC_H
#define GE_GC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef GE_USE_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */

/* 
 * In the case of multithreaded code, gc.h should be included after the threads header file, 
 * and after defining the appropriate GC_XXXX_THREADS macro. (For 6.2alpha4 and later, 
 * simply defining GC_THREADS should suffice.) The header file gc.h must be included in files 
 * that use either GC or threads primitives, since threads primitives will be redefined to 
 * cooperate with the GC on many platforms. 
 * See: https://hboehm.info/gc/gcinterface.html
*/
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#define GC_THREADS
#define THREAD_LOCAL_ALLOC
#undef GC_NO_THREAD_DECLS
#undef GC_NO_THREAD_REDIRECTS
#endif

#define GC_IGNORE_WARN
#define GC_NOT_DLL
#define PARALLEL_MARK
#define LARGE_CONFIG
#define ALL_INTERIOR_POINTERS
#define ENABLE_DISCLAIM
#define GC_ATOMIC_UNCOLLECTABLE
#define GC_GCJ_SUPPORT
#define JAVA_FINALIZATION
#define NO_EXECUTE_PERMISSION
#define USE_MUNMAP

#include "gc.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * GC initialization.
 */

#ifdef GE_USE_BOEHM_GC
#ifdef GE_USE_THREADS
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads(); \
	GC_enable_incremental()
#else
#define GE_init_gc() \
	GC_INIT(); \
	GC_enable_incremental()
#endif
#else /* No GC */
#define GE_init_gc() /* do nothing */
#endif

/*
 * Memory allocation.
 */

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc(size) GC_MALLOC(size)
#else /* No GC */
#define GE_unprotected_malloc(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc(size) GE_null(GE_unprotected_malloc(size))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic(size) GC_MALLOC_ATOMIC(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic(size) GE_unprotected_malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_atomic(size) GE_null(GE_unprotected_malloc_atomic(size))

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc(nelem, elsize) GC_MALLOC((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc(nelem, elsize) GE_null(GE_unprotected_calloc((nelem), (elsize)))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic(nelem, elsize) GE_calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_uncollectable(size) GC_MALLOC_UNCOLLECTABLE(size)
#else /* No GC */
#define GE_unprotected_malloc_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_uncollectable(size) GE_null(GE_unprotected_malloc_uncollectable(size))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic_uncollectable(size) GC_malloc_atomic_uncollectable(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_atomic_uncollectable(size) GE_null(GE_unprotected_malloc_atomic_uncollectable(size))
/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc_uncollectable(nelem, elsize) GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GE_unprotected_calloc_uncollectable((nelem), (elsize)))


/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
extern void* GE_unprotected_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_unprotected_calloc_atomic_uncollectable(nelem, elsize) GE_unprotected_calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(GE_unprotected_calloc_atomic_uncollectable((nelem), (elsize)))

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_realloc(p, size) GC_REALLOC((p), (size))
#else /* No GC */
#define GE_unprotected_realloc(p, size) realloc((p), (size))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Raise an exception when no-more-memory.
 */
#define GE_realloc(p, size) GE_null(GE_unprotected_realloc((p), (size)))

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_unprotected_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Raise an exception when no-more-memory.
 */
#define GE_recalloc(p, old_nelem, new_nelem, elsize) GE_null(GE_unprotected_recalloc((p), (old_nelem), (new_nelem), (elsize)))

/*
 * Explicitly deallocate an object.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_free(p) GC_FREE(p)
#else /* No GC */
#define GE_free(p) free(p)
#endif

/*
 * When defined, `GE_malloc_cleared' means that `GE_malloc' and
 * `GE_malloc_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_cleared
#else /* No GC */
#endif

/*
 * When defined, `GE_malloc_atomic_cleared' means that `GE_malloc_atomic'
 * and `GE_malloc_atomic_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
/* #define GE_malloc_atomic_cleared */
#else /* No GC */
#endif

/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, (void*)(disp), NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif

/*
 * Register dispose routine `disp' to be called on once-per-object `data' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose_once_per_object_data(void* data, void* disp); /* Call dispose routine `disp' on once-per-object data `data'. */
#define GE_register_dispose_once_per_object_data(data, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(data), (void (*) (void*, void*)) &GE_boehm_dispose_once_per_object_data, (void*)(disp), NULL, NULL)
#else /* No GC */
#define GE_register_dispose_once_per_object_data(data, disp) /* do nothing */
#endif

/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector. */
#define eif_access(obj) (obj)
/* Freeze memory address. */
#define eif_freeze(obj) (obj)
/* The C side adopts an object. */
#define eif_adopt(obj) (obj)
/* The C side protects an object. */
#define eif_protect(obj) (obj)
/* The C side weans adopted object. */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address. */
#define eif_unfreeze(obj)
/* Always frozen since they do not move. */
#define eif_frozen(obj) 1
/* Always frozen since they do not move. */
#define spfrozen(obj) 1

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize data to keep track of object ids.
 */
extern void GE_init_identified(void);

/*
 * Get a new id for `object', assuming it is NOT in the stack.
 */
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
 * Return the object associated with `id'.
 */
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
 * Remove the object associated with `id' from the stack.
 */
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(TC* ac, T1 a1);
extern T0* GE_boxed_pointer1(TC* ac, T1* a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(TC* ac, T2 a1);
extern T0* GE_boxed_pointer2(TC* ac, T2* a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(TC* ac, T3 a1);
extern T0* GE_boxed_pointer3(TC* ac, T3* a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(TC* ac, T4 a1);
extern T0* GE_boxed_pointer4(TC* ac, T4* a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(TC* ac, T5 a1);
extern T0* GE_boxed_pointer5(TC* ac, T5* a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(TC* ac, T6 a1);
extern T0* GE_boxed_pointer6(TC* ac, T6* a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(TC* ac, T7 a1);
extern T0* GE_boxed_pointer7(TC* ac, T7* a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(TC* ac, T8 a1);
extern T0* GE_boxed_pointer8(TC* ac, T8* a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(TC* ac, T9 a1);
extern T0* GE_boxed_pointer9(TC* ac, T9* a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(TC* ac, T10 a1);
extern T0* GE_boxed_pointer10(TC* ac, T10* a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(TC* ac, T11 a1);
extern T0* GE_boxed_pointer11(TC* ac, T11* a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(TC* ac, T12 a1);
extern T0* GE_boxed_pointer12(TC* ac, T12* a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(TC* ac, T13 a1);
extern T0* GE_boxed_pointer13(TC* ac, T13* a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(TC* ac, T14 a1);
extern T0* GE_boxed_pointer14(TC* ac, T14* a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* SPECIAL [CHARACTER_32] */
typedef struct S16 T16;

/* STRING_8 */
typedef struct S17 T17;

/* STRING_32 */
typedef struct S18 T18;

/* IMMUTABLE_STRING_32 */
typedef struct S20 T20;

/* ISE_EXCEPTION_MANAGER */
typedef struct S21 T21;

/* GEC */
typedef struct S25 T25;

/* CELL [detachable EXCEPTION] */
typedef struct S26 T26;

/* HASH_TABLE [INTEGER_32, INTEGER_32] */
typedef struct S27 T27;

/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
typedef struct S28 T28;

/* CELL [NO_MORE_MEMORY] */
typedef struct S29 T29;

/* C_STRING */
typedef struct S30 T30;

/* TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
typedef struct S31 T31;

/* KL_ARGUMENTS */
typedef struct S32 T32;

/* ARRAY [STRING_8] */
typedef struct S33 T33;

/* SPECIAL [STRING_8] */
typedef struct S34 T34;

/* KL_EXCEPTIONS */
typedef struct S35 T35;

/* EXCEPTIONS */
typedef struct S36 T36;

/* KL_STANDARD_FILES */
typedef struct S37 T37;

/* KL_STDERR_FILE */
typedef struct S38 T38;

/* UTF_CONVERTER */
typedef struct S39 T39;
extern T0* GE_boxed39(TC* ac, T39 a1);
extern T0* GE_boxed_pointer39(TC* ac, T39* a1);
typedef struct Sb39 Tb39;

/* ET_ERROR_HANDLER */
typedef struct S41 T41;

/* KL_TEXT_INPUT_FILE */
typedef struct S42 T42;

/* ET_ISE_VARIABLES */
typedef struct S43 T43;

/* AP_FLAG */
typedef struct S44 T44;

/* ET_SYSTEM */
typedef struct S45 T45;

/* AP_PARSER */
typedef struct S47 T47;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S48 T48;

/* AP_STRING_OPTION */
typedef struct S49 T49;

/* UT_VERSION */
typedef struct S51 T51;

/* AP_ENUMERATION_OPTION */
typedef struct S52 T52;

/* AP_BOOLEAN_OPTION */
typedef struct S53 T53;

/* AP_INTEGER_OPTION */
typedef struct S54 T54;

/* ET_NULL_ERROR_HANDLER */
typedef struct S58 T58;

/* ET_ECF_SYSTEM_PARSER */
typedef struct S60 T60;

/* ET_ECF_ERROR_HANDLER */
typedef struct S61 T61;

/* ET_ECF_SETTINGS */
typedef struct S62 T62;

/* ET_ECF_SYSTEM */
typedef struct S63 T63;

/* ET_ECF_TARGET */
typedef struct S64 T64;

/* ET_ECF_CAPABILITIES */
typedef struct S66 T66;

/* ET_ECF_VARIABLES */
typedef struct S67 T67;

/* ET_DYNAMIC_SYSTEM */
typedef struct S68 T68;

/* ET_SYSTEM_PROCESSOR */
typedef struct S69 T69;

/* ET_C_GENERATOR */
typedef struct S72 T72;

/* DT_DATE_TIME */
typedef struct S73 T73;

/* DS_HASH_SET [STRING_8] */
typedef struct S75 T75;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S76 T76;

/* ET_CLASS_TYPE */
typedef struct S77 T77;

/* ET_TOKEN_CONSTANTS */
typedef struct S78 T78;

/* ET_CLASS */
typedef struct S79 T79;

/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S81 T81;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S82 T82;

/* UT_VERSION_NUMBER */
typedef struct S84 T84;

/* UT_MESSAGE */
typedef struct S86 T86;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S87 T87;

/* KL_STRING_ROUTINES */
typedef struct S88 T88;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S91 T91;

/* AP_ERROR */
typedef struct S92 T92;

/* KL_SHELL_COMMAND */
typedef struct S93 T93;

/* GECC */
typedef struct S94 T94;

/* KL_OPERATING_SYSTEM */
typedef struct S95 T95;

/* VOID_TARGET */
typedef struct S97 T97;

/* TYPE [VOID_TARGET] */
#define T98 EIF_TYPE_OBJ

/* ROUTINE_FAILURE */
typedef struct S99 T99;

/* TYPE [ROUTINE_FAILURE] */
#define T100 EIF_TYPE_OBJ

/* OLD_VIOLATION */
typedef struct S101 T101;

/* TYPE [OLD_VIOLATION] */
#define T102 EIF_TYPE_OBJ

/* NO_MORE_MEMORY */
typedef struct S103 T103;

/* INVARIANT_VIOLATION */
typedef struct S104 T104;

/* OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef struct S105 T105;

/* IO_FAILURE */
typedef struct S106 T106;

/* OPERATING_SYSTEM_FAILURE */
typedef struct S107 T107;

/* COM_FAILURE */
typedef struct S108 T108;

/* EIFFEL_RUNTIME_PANIC */
typedef struct S109 T109;

/* PRECONDITION_VIOLATION */
typedef struct S111 T111;

/* POSTCONDITION_VIOLATION */
typedef struct S112 T112;

/* FLOATING_POINT_FAILURE */
typedef struct S113 T113;

/* CHECK_VIOLATION */
typedef struct S114 T114;

/* BAD_INSPECT_VALUE */
typedef struct S115 T115;

/* VARIANT_VIOLATION */
typedef struct S116 T116;

/* LOOP_INVARIANT_VIOLATION */
typedef struct S117 T117;

/* RESCUE_FAILURE */
typedef struct S118 T118;

/* RESUMPTION_FAILURE */
typedef struct S119 T119;

/* CREATE_ON_DEFERRED */
typedef struct S120 T120;

/* EXTERNAL_FAILURE */
typedef struct S121 T121;

/* VOID_ASSIGNED_TO_EXPANDED */
typedef struct S122 T122;

/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef struct S123 T123;

/* MISMATCH_FAILURE */
typedef struct S124 T124;

/* DEVELOPER_EXCEPTION */
typedef struct S125 T125;

/* ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef struct S126 T126;

/* SERIALIZATION_FAILURE */
typedef struct S127 T127;

/* EXECUTION_ENVIRONMENT */
typedef struct S128 T128;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S129 T129;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S130 T130;

/* PRIMES */
typedef struct S131 T131;

/* SPECIAL [INTEGER_32] */
typedef struct S132 T132;

/* SPECIAL [BOOLEAN] */
typedef struct S133 T133;

/* ARGUMENTS_32 */
typedef struct S134 T134;

/* MUTEX */
typedef struct S137 T137;

/* UT_ERROR_HANDLER */
typedef struct S138 T138;

/* KL_STDOUT_FILE */
typedef struct S139 T139;

/* KL_LINKABLE [CHARACTER_8] */
typedef struct S141 T141;

/* MANAGED_POINTER */
typedef struct S143 T143;

/* FILE_INFO */
typedef struct S144 T144;

/* ST_WORD_WRAPPER */
typedef struct S145 T145;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S147 T147;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S148 T148;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S149 T149;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S150 T150;

/* AP_ERROR_HANDLER */
typedef struct S151 T151;

/* DS_LINKABLE [AP_OPTION] */
typedef struct S152 T152;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S153 T153;

/* DS_ARRAYED_LIST [detachable STRING_8] */
typedef struct S154 T154;

/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
typedef struct S155 T155;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S156 T156;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S157 T157;

/* KL_EQUALITY_TESTER [STRING_8] */
typedef struct S158 T158;

/* DS_LINKED_LIST [BOOLEAN] */
typedef struct S161 T161;

/* DS_LINKED_LIST [INTEGER_32] */
typedef struct S164 T164;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S165 T165;

/* ET_ECF_AST_FACTORY */
typedef struct S166 T166;

/* DS_CELL [detachable ET_ECF_SYSTEM] */
typedef struct S167 T167;

/* TUPLE [ET_ECF_TARGET] */
typedef struct S168 T168;

/* PROCEDURE [TUPLE [ET_ECF_TARGET]] */
typedef struct S169 T169;

/* TUPLE */
typedef struct S170 T170;

/* TUPLE [ET_ECF_SYSTEM_PARSER] */
typedef struct S171 T171;

/* XM_ELEMENT */
typedef struct S172 T172;

/* XM_POSITION_TABLE */
typedef struct S173 T173;

/* TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
typedef struct S174 T174;

/* PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
typedef struct S175 T175;

/* TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
typedef struct S176 T176;

/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
typedef struct S178 T178;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S179 T179;

/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S180 T180;

/* XM_EIFFEL_PARSER */
typedef struct S182 T182;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S183 T183;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S186 T186;

/* ET_ECF_STATE */
typedef struct S187 T187;

/* ET_IDENTIFIER */
typedef struct S188 T188;

/* ET_ECF_SYSTEM_CONFIG */
typedef struct S189 T189;

/* ET_ECF_LIBRARY */
typedef struct S191 T191;

/* ET_ADAPTED_LIBRARIES */
typedef struct S192 T192;

/* TUPLE [ET_ADAPTED_LIBRARY] */
typedef struct S194 T194;

/* PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
typedef struct S195 T195;

/* XM_DOCUMENT */
typedef struct S196 T196;

/* ET_COMPRESSED_POSITION */
typedef struct S197 T197;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S199 T199;

/* XM_ATTRIBUTE */
typedef struct S200 T200;

/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
typedef struct S202 T202;

/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
typedef struct S203 T203;

/* ET_ECF_TARGET_PARENT */
typedef struct S204 T204;

/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
typedef struct S205 T205;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
typedef struct S206 T206;

/* ET_ECF_TARGETS */
typedef struct S207 T207;

/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S208 T208;

/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S209 T209;

/* DS_CELL [detachable ET_ECF_LIBRARY] */
typedef struct S211 T211;

/* ET_ECF_ADAPTED_LIBRARY */
typedef struct S212 T212;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
typedef struct S213 T213;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S215 T215;

/* ET_ECF_DOTNET_ASSEMBLY */
typedef struct S216 T216;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef struct S218 T218;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S219 T219;

/* ET_ECF_ERROR */
typedef struct S220 T220;

/* KL_AGENT_HASH_FUNCTION [STRING_8] */
typedef struct S221 T221;

/* TUPLE [STRING_8] */
typedef struct S222 T222;

/* FUNCTION [TUPLE [STRING_8], INTEGER_32] */
typedef struct S223 T223;

/* TUPLE [KL_STRING_ROUTINES] */
typedef struct S224 T224;

/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
typedef struct S226 T226;

/* ET_DYNAMIC_PRIMARY_TYPE */
typedef struct S228 T228;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S229 T229;

/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S230 T230;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
typedef struct S231 T231;

/* TUPLE [ET_CLASS] */
typedef struct S232 T232;

/* PROCEDURE [TUPLE [ET_CLASS]] */
typedef struct S233 T233;

/* TUPLE [INTEGER_32] */
typedef struct S234 T234;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S235 T235;

/* TUPLE [ET_DYNAMIC_SYSTEM] */
typedef struct S236 T236;

/* ET_DYNAMIC_FEATURE */
typedef struct S241 T241;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S245 T245;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S246 T246;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S247 T247;

/* ARRAY [ET_TYPE] */
typedef struct S249 T249;

/* SPECIAL [ET_TYPE] */
typedef struct S250 T250;

/* ET_EXTERNAL_FUNCTION */
typedef struct S258 T258;

/* ET_TUPLE_TYPE */
typedef struct S259 T259;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S260 T260;

/* ET_FORMAL_ARGUMENT */
typedef struct S261 T261;

/* ET_QUERY_LIST */
typedef struct S262 T262;

/* ET_PROCEDURE_LIST */
typedef struct S263 T263;

/* ET_INLINE_SEPARATE_ARGUMENTS */
typedef struct S264 T264;

/* ET_COMPOUND */
typedef struct S265 T265;

/* ET_RESULT */
typedef struct S266 T266;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S267 T267;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S268 T268;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S269 T269;

/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S270 T270;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S271 T271;

/* DS_ARRAYED_LIST [BOOLEAN] */
typedef struct S272 T272;

/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
typedef struct S273 T273;

/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S274 T274;

/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S275 T275;

/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S276 T276;

/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S277 T277;

/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S278 T278;

/* DS_ARRAYED_LIST [ET_RESULT] */
typedef struct S279 T279;

/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
typedef struct S280 T280;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S281 T281;

/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S282 T282;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S283 T283;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S284 T284;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
typedef struct S285 T285;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S286 T286;

/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S287 T287;

/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S288 T288;

/* DS_ARRAYED_LIST [ET_OBJECT_TEST] */
typedef struct S289 T289;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S290 T290;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S291 T291;

/* ET_CURRENT */
typedef struct S293 T293;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S294 T294;

/* ET_QUALIFIED_CALL_INSTRUCTION */
typedef struct S295 T295;

/* ET_QUALIFIED_CALL_EXPRESSION */
typedef struct S298 T298;

/* ET_INLINE_SEPARATE_ARGUMENT */
typedef struct S299 T299;

/* ET_INLINE_SEPARATE_INSTRUCTION */
typedef struct S302 T302;

/* ET_ASSIGNMENT */
typedef struct S303 T303;

/* ET_MANIFEST_TUPLE */
typedef struct S305 T305;

/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
typedef struct S306 T306;

/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
typedef struct S309 T309;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S310 T310;

/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
typedef struct S311 T311;

/* ARRAY [INTEGER_32] */
typedef struct S312 T312;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S313 T313;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
typedef struct S314 T314;

/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S315 T315;

/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S316 T316;

/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S317 T317;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S318 T318;

/* DS_HASH_SET [ET_DYNAMIC_FEATURE] */
typedef struct S319 T319;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef struct S320 T320;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S321 T321;

/* ET_IMPLICIT_TYPE_MARK */
typedef struct S322 T322;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S323 T323;

/* DS_STRING_HASH_TABLE */
typedef struct S324 T324;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S325 T325;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S326 T326;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S327 T327;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S328 T328;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S329 T329;

/* ET_DYNAMIC_EQUALITY_TYPES */
typedef struct S330 T330;

/* ET_OBJECT_TEST */
typedef struct S332 T332;

/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
typedef struct S333 T333;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S334 T334;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S337 T337;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S338 T338;

/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S341 T341;

/* ET_DYNAMIC_SECONDARY_TYPE */
typedef struct S342 T342;

/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
typedef struct S343 T343;

/* ET_CREATE_EXPRESSION */
typedef struct S347 T347;

/* ET_QUALIFIED_CALL */
typedef struct S348 T348;

/* KL_DIRECTORY */
typedef struct S352 T352;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S353 T353;

/* ET_DYNAMIC_INLINED_EXPRESSION */
typedef struct S361 T361;

/* ET_DYNAMIC_CALL_CONTEXT */
typedef struct S362 T362;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S365 T365;

/* PROCEDURE [TUPLE] */
typedef struct S367 T367;

/* TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S368 T368;

/* TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S369 T369;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S370 T370;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S371 T371;

/* UT_INTEGER_FORMATTER */
typedef struct S372 T372;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S377 T377;

/* TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S378 T378;

/* ET_EXTENDED_ATTRIBUTE */
typedef struct S382 T382;

/* ET_ATTRIBUTE */
typedef struct S383 T383;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S384 T384;

/* ET_ITERATION_COMPONENT_LIST */
typedef struct S388 T388;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S390 T390;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
typedef struct S391 T391;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S392 T392;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S394 T394;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S395 T395;

/* ET_SYSTEM_MULTIPROCESSOR */
typedef struct S398 T398;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S399 T399;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S400 T400;

/* TYPE [STRING_8] */
#define T401 EIF_TYPE_OBJ

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S402 T402;

/* ET_FEATURE_CHECKER */
typedef struct S403 T403;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S404 T404;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S405 T405;

/* ET_TYPE_CHECKER */
typedef struct S407 T407;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S409 T409;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S410 T410;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S411 T411;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S412 T412;

/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S413 T413;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S414 T414;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S415 T415;

/* ET_OBJECT_TEST_SCOPE */
typedef struct S416 T416;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S417 T417;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
typedef struct S418 T418;

/* ET_ITERATION_ITEM_SCOPE */
typedef struct S419 T419;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S420 T420;

/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
typedef struct S421 T421;

/* ET_ATTACHMENT_SCOPE */
typedef struct S422 T422;

/* ET_ATTACHMENT_SCOPE_BUILDER */
typedef struct S423 T423;

/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
typedef struct S424 T424;

/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
typedef struct S425 T425;

/* DS_ARRAYED_LIST [ET_NOTE_TERM] */
typedef struct S426 T426;

/* ET_CLIENT_LIST */
typedef struct S427 T427;

/* ET_CLIENT */
typedef struct S428 T428;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S429 T429;

/* ET_ADAPTED_BASE_CLASS_CHECKER */
typedef struct S430 T430;

/* ET_PRECONDITIONS */
typedef struct S431 T431;

/* ET_FEATURE_LIST */
typedef struct S433 T433;

/* ET_UNKNOWN_GROUP */
typedef struct S435 T435;

/* ET_BASE_TYPE_LIST */
typedef struct S437 T437;

/* ET_KEYWORD */
typedef struct S438 T438;

/* ET_CLASS_CODES */
typedef struct S439 T439;

/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S440 T440;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S441 T441;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S442 T442;

/* RX_BYTE_CODE */
typedef struct S447 T447;

/* RX_CHARACTER_SET */
typedef struct S448 T448;

/* RX_CASE_MAPPING */
typedef struct S449 T449;

/* UC_UNICODE_ROUTINES */
typedef struct S451 T451;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S452 T452;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S453 T453;

/* UC_STRING */
typedef struct S454 T454;

/* NATIVE_STRING */
typedef struct S455 T455;

/* TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
typedef struct S456 T456;

/* WORKER_THREAD */
typedef struct S457 T457;

/* UC_UTF8_ROUTINES */
typedef struct S459 T459;

/* PATH */
typedef struct S460 T460;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S461 T461;

/* STD_FILES */
typedef struct S464 T464;

/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef struct S465 T465;

/* DS_CELL [detachable ET_ECF_CONFIG] */
typedef struct S469 T469;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
typedef struct S471 T471;

/* ET_ECF_OPTIONS */
typedef struct S473 T473;

/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
typedef struct S474 T474;

/* XM_NAMESPACE */
typedef struct S475 T475;

/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
typedef struct S476 T476;

/* ET_ECF_REDIRECTION_CONFIG */
typedef struct S478 T478;

/* ET_CLUSTERS */
typedef struct S479 T479;

/* ET_CLASS_NAME_TESTER */
typedef struct S480 T480;

/* ET_PARENT */
typedef struct S482 T482;

/* ET_PARENT_LIST */
typedef struct S483 T483;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S484 T484;

/* ET_MASTER_CLASS */
typedef struct S485 T485;

/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
typedef struct S486 T486;

/* ET_RENAME_LIST */
typedef struct S487 T487;

/* ET_EXPORT_LIST */
typedef struct S488 T488;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S489 T489;

/* ET_NONE_GROUP */
typedef struct S492 T492;

/* ET_LIKE_CURRENT */
typedef struct S493 T493;

/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef struct S494 T494;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S495 T495;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S496 T496;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S497 T497;

/* DT_SYSTEM_CLOCK */
typedef struct S498 T498;

/* ET_EIFFEL_PREPARSER */
typedef struct S499 T499;

/* ET_MASTER_CLASS_CHECKER */
typedef struct S500 T500;

/* ET_EIFFEL_PARSER */
typedef struct S501 T501;

/* ET_PROVIDER_CHECKER */
typedef struct S502 T502;

/* ET_ANCESTOR_BUILDER */
typedef struct S503 T503;

/* ET_FEATURE_FLATTENER */
typedef struct S504 T504;

/* ET_INTERFACE_CHECKER */
typedef struct S505 T505;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S506 T506;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S507 T507;

/* TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
typedef struct S508 T508;

/* ET_AST_NULL_PROCESSOR */
typedef struct S509 T509;

/* ET_AST_FACTORY */
typedef struct S510 T510;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S512 T512;

/* DT_DATE_TIME_DURATION */
typedef struct S513 T513;

/* UT_CONFIG_PARSER */
typedef struct S514 T514;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S515 T515;

/* ET_DO_PROCEDURE */
typedef struct S518 T518;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S520 T520;

/* ET_OBJECT_TEST_LIST */
typedef struct S521 T521;

/* ET_DO_FUNCTION */
typedef struct S522 T522;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S523 T523;

/* ET_DEFERRED_PROCEDURE */
typedef struct S524 T524;

/* KL_PLATFORM */
typedef struct S525 T525;

/* CELL [INTEGER_32] */
typedef struct S526 T526;

/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
typedef struct S527 T527;

/* KL_ANY_ROUTINES */
typedef struct S528 T528;

/* KL_PATHNAME */
typedef struct S530 T530;

/* ARRAY [IMMUTABLE_STRING_32] */
typedef struct S531 T531;

/* SPECIAL [IMMUTABLE_STRING_32] */
typedef struct S532 T532;

/* SPECIAL [NATURAL_8] */
typedef struct S533 T533;

/* TYPED_POINTER [SPECIAL [NATURAL_8]] */
typedef struct S534 T534;
extern T0* GE_boxed534(TC* ac, T534 a1);
extern T0* GE_boxed_pointer534(TC* ac, T534* a1);
typedef struct Sb534 Tb534;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S535 T535;

/* SPECIAL [AP_OPTION] */
typedef struct S537 T537;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S538 T538;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S539 T539;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S540 T540;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S541 T541;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S542 T542;

/* SPECIAL [detachable STRING_8] */
typedef struct S543 T543;

/* KL_SPECIAL_ROUTINES [detachable STRING_8] */
typedef struct S544 T544;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S545 T545;

/* DS_LINKABLE [STRING_8] */
typedef struct S546 T546;

/* DS_LINKABLE [BOOLEAN] */
typedef struct S547 T547;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef struct S548 T548;

/* DS_LINKABLE [INTEGER_32] */
typedef struct S549 T549;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef struct S550 T550;

/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
typedef struct S552 T552;

/* SPECIAL [ET_ECF_LIBRARY] */
typedef struct S553 T553;

/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
typedef struct S556 T556;

/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S557 T557;

/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S560 T560;

/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S561 T561;

/* XM_EIFFEL_SCANNER */
typedef struct S562 T562;

/* XM_DEFAULT_POSITION */
typedef struct S563 T563;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S565 T565;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S566 T566;

/* XM_CALLBACKS_NULL */
typedef struct S567 T567;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S568 T568;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S570 T570;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S572 T572;

/* KL_SPECIAL_ROUTINES [detachable ANY] */
typedef struct S573 T573;

/* SPECIAL [detachable ANY] */
typedef struct S574 T574;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S575 T575;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S576 T576;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S577 T577;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S578 T578;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S579 T579;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S580 T580;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S581 T581;

/* XM_DTD_EXTERNAL_ID */
typedef struct S582 T582;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S583 T583;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S584 T584;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S585 T585;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S586 T586;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S587 T587;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S588 T588;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S589 T589;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S590 T590;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S591 T591;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S592 T592;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef struct S593 T593;

/* DS_BILINKED_LIST [STRING_8] */
typedef struct S594 T594;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S595 T595;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S596 T596;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S597 T597;

/* XM_EIFFEL_DECLARATION */
typedef struct S598 T598;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S599 T599;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S602 T602;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S603 T603;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S605 T605;

/* XM_NAMESPACE_RESOLVER */
typedef struct S606 T606;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S607 T607;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S608 T608;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S609 T609;

/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
typedef struct S610 T610;

/* XM_LINKED_LIST [XM_DOCUMENT_NODE] */
typedef struct S611 T611;

/* SPECIAL [ET_ECF_SYSTEM_CONFIG] */
typedef struct S614 T614;

/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
typedef struct S616 T616;

/* DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
typedef struct S617 T617;

/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
typedef struct S618 T618;

/* SPECIAL [ET_ECF_TARGET] */
typedef struct S619 T619;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
typedef struct S621 T621;

/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S623 T623;

/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
typedef struct S624 T624;

/* SPECIAL [detachable RX_REGULAR_EXPRESSION] */
typedef struct S625 T625;

/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S626 T626;

/* ET_DOTNET_ASSEMBLIES */
typedef struct S627 T627;

/* ET_DOTNET_ASSEMBLY */
typedef struct S628 T628;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S632 T632;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S633 T633;

/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
typedef struct S634 T634;

/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
typedef struct S635 T635;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S636 T636;

/* ET_FEATURE_IDS */
typedef struct S637 T637;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S638 T638;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef struct S639 T639;

/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S642 T642;

/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
typedef struct S643 T643;

/* SPECIAL [ET_MASTER_CLASS] */
typedef struct S644 T644;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S645 T645;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S646 T646;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
typedef struct S648 T648;

/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
typedef struct S649 T649;

/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
typedef struct S650 T650;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S654 T654;

/* ET_SYMBOL */
typedef struct S655 T655;

/* ET_BRACKET_SYMBOL */
typedef struct S656 T656;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S658 T658;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S659 T659;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S661 T661;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S662 T662;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S664 T664;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S665 T665;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S666 T666;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S667 T667;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S668 T668;

/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S669 T669;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S670 T670;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S671 T671;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S672 T672;

/* DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
typedef struct S674 T674;

/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
typedef struct S675 T675;

/* ET_EQUALITY_EXPRESSION */
typedef struct S676 T676;

/* SPECIAL [ET_EQUALITY_EXPRESSION] */
typedef struct S677 T677;

/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
typedef struct S678 T678;

/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S679 T679;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S680 T680;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S681 T681;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S682 T682;

/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S683 T683;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S684 T684;

/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S685 T685;

/* ET_UNQUALIFIED_CALL_EXPRESSION */
typedef struct S686 T686;

/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S687 T687;

/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S688 T688;

/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S689 T689;

/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S690 T690;

/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S691 T691;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S692 T692;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S693 T693;

/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S694 T694;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S695 T695;

/* SPECIAL [ET_RESULT] */
typedef struct S696 T696;

/* DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
typedef struct S697 T697;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S698 T698;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S699 T699;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S700 T700;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S701 T701;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S702 T702;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S703 T703;

/* KL_EQUALITY_TESTER [INTEGER_32] */
typedef struct S704 T704;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
typedef struct S705 T705;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S706 T706;

/* SPECIAL [ET_OBJECT_TEST] */
typedef struct S708 T708;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
typedef struct S709 T709;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
typedef struct S710 T710;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S711 T711;

/* TYPE [INTEGER_32] */
#define T712 EIF_TYPE_OBJ

/* SPECIAL [ET_AGENT] */
typedef struct S713 T713;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S714 T714;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S715 T715;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S716 T716;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S718 T718;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S719 T719;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S720 T720;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S721 T721;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
typedef struct S723 T723;

/* SPECIAL [ET_FEATURE] */
typedef struct S724 T724;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S725 T725;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S726 T726;

/* SPECIAL [ET_CONSTANT] */
typedef struct S727 T727;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S729 T729;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
typedef struct S730 T730;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S731 T731;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef struct S733 T733;

/* SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef struct S734 T734;

/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S736 T736;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef struct S737 T737;

/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S738 T738;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S739 T739;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S740 T740;

/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S741 T741;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S742 T742;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S743 T743;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S744 T744;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S745 T745;

/* TYPE [ET_DYNAMIC_FEATURE] */
#define T747 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef struct S748 T748;

/* TYPED_POINTER [ANY] */
typedef struct S751 T751;
extern T0* GE_boxed751(TC* ac, T751 a1);
extern T0* GE_boxed_pointer751(TC* ac, T751* a1);
typedef struct Sb751 Tb751;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S752 T752;

/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S753 T753;

/* ARRAY [BOOLEAN] */
typedef struct S754 T754;

/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
typedef struct S758 T758;

/* TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
typedef struct S759 T759;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S762 T762;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S763 T763;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S764 T764;

/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
typedef struct S765 T765;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S766 T766;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S767 T767;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S768 T768;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S769 T769;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S770 T770;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S771 T771;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S772 T772;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S773 T773;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S774 T774;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S775 T775;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S776 T776;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S777 T777;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S778 T778;

/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S779 T779;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S780 T780;

/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S781 T781;

/* TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
typedef struct S782 T782;

/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S783 T783;

/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S784 T784;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S785 T785;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S786 T786;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S787 T787;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S788 T788;

/* ET_NAMED_OBJECT_TEST */
typedef struct S791 T791;

/* SPECIAL [ET_NAMED_OBJECT_TEST] */
typedef struct S792 T792;

/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
typedef struct S793 T793;

/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
typedef struct S794 T794;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
typedef struct S795 T795;

/* SPECIAL [ET_ITERATION_COMPONENT] */
typedef struct S796 T796;

/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
typedef struct S798 T798;

/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
typedef struct S799 T799;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S801 T801;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S802 T802;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S803 T803;

/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S804 T804;

/* SPECIAL [ET_ATTACHMENT_SCOPE] */
typedef struct S806 T806;

/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
typedef struct S807 T807;

/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
typedef struct S808 T808;

/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
typedef struct S809 T809;

/* SPECIAL [ET_ASSERTIONS] */
typedef struct S810 T810;

/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
typedef struct S812 T812;

/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
typedef struct S813 T813;

/* SPECIAL [ET_NOTE_TERM] */
typedef struct S815 T815;

/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
typedef struct S816 T816;

/* SPECIAL [ET_CLIENT_ITEM] */
typedef struct S817 T817;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
typedef struct S818 T818;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S819 T819;

/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S820 T820;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S821 T821;

/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
typedef struct S822 T822;

/* SPECIAL [NATURAL_32] */
typedef struct S823 T823;

/* DS_ARRAYED_LIST [RX_CHARACTER_SET] */
typedef struct S824 T824;

/* KL_SPECIAL_ROUTINES [NATURAL_32] */
typedef struct S825 T825;

/* SPECIAL [NATURAL_64] */
typedef struct S826 T826;

/* DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
typedef struct S827 T827;

/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
typedef struct S828 T828;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S829 T829;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S830 T830;

/* KL_INTEGER_ROUTINES */
typedef struct S831 T831;

/* UC_UTF8_STRING */
typedef struct S834 T834;

/* THREAD_ATTRIBUTES */
typedef struct S835 T835;

/* CELL [BOOLEAN] */
typedef struct S836 T836;

/* CHARACTER_PROPERTY */
typedef struct S839 T839;

/* STRING_8_SEARCHER */
typedef struct S840 T840;

/* ET_SYSTEM_ERROR */
typedef struct S841 T841;

/* ET_INTERNAL_ERROR */
typedef struct S842 T842;

/* ET_VALIDITY_ERROR */
typedef struct S843 T843;

/* ET_ECF_NOTE_ELEMENT */
typedef struct S844 T844;

/* ET_ECF_CLUSTERS */
typedef struct S845 T845;

/* ET_ECF_ADAPTED_LIBRARIES */
typedef struct S846 T846;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S847 T847;

/* ET_ECF_FILE_RULES */
typedef struct S848 T848;

/* ET_ECF_EXTERNAL_CFLAGS */
typedef struct S849 T849;

/* ET_ECF_EXTERNAL_INCLUDES */
typedef struct S850 T850;

/* ET_ECF_EXTERNAL_LIBRARIES */
typedef struct S851 T851;

/* ET_ECF_EXTERNAL_LINKER_FLAGS */
typedef struct S852 T852;

/* ET_ECF_EXTERNAL_MAKES */
typedef struct S853 T853;

/* ET_ECF_EXTERNAL_OBJECTS */
typedef struct S854 T854;

/* ET_ECF_EXTERNAL_RESOURCES */
typedef struct S855 T855;

/* DS_ARRAYED_LIST [ET_ECF_ACTION] */
typedef struct S856 T856;

/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
typedef struct S857 T857;

/* ET_ECF_VERSION */
typedef struct S859 T859;

/* ET_ECF_CLUSTER */
typedef struct S860 T860;

/* ET_ECF_EXTERNAL_CFLAG */
typedef struct S861 T861;

/* ET_ECF_EXTERNAL_INCLUDE */
typedef struct S862 T862;

/* ET_ECF_EXTERNAL_LIBRARY */
typedef struct S863 T863;

/* ET_ECF_EXTERNAL_LINKER_FLAG */
typedef struct S864 T864;

/* ET_ECF_EXTERNAL_MAKE */
typedef struct S865 T865;

/* ET_ECF_EXTERNAL_OBJECT */
typedef struct S866 T866;

/* ET_ECF_EXTERNAL_RESOURCE */
typedef struct S867 T867;

/* ET_ECF_FILE_RULE */
typedef struct S868 T868;

/* ET_ECF_ACTION */
typedef struct S869 T869;

/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
typedef struct S870 T870;

/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
typedef struct S871 T871;

/* TUPLE [ET_ECF_OPTIONS] */
typedef struct S872 T872;

/* PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
typedef struct S873 T873;

/* ET_ECF_ROOT_CLASS */
typedef struct S874 T874;

/* ET_ECF_ROOT_ALL_CLASSES */
typedef struct S875 T875;

/* ET_ECF_ORED_CONDITIONS */
typedef struct S876 T876;

/* ET_ECF_ANDED_CONDITIONS */
typedef struct S877 T877;

/* ET_ECF_VISIBLE_CLASS */
typedef struct S878 T878;

/* ET_ECF_BUILD_CONDITION */
typedef struct S880 T880;

/* ET_ECF_CONCURRENCY_CONDITION */
typedef struct S881 T881;

/* ET_ECF_VOID_SAFETY_CONDITION */
typedef struct S882 T882;

/* ET_ECF_CUSTOM_CONDITION */
typedef struct S883 T883;

/* ET_ECF_DOTNET_CONDITION */
typedef struct S884 T884;

/* ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef struct S885 T885;

/* ET_ECF_PLATFORM_CONDITION */
typedef struct S886 T886;

/* ET_ECF_COMPILER_VERSION_CONDITION */
typedef struct S888 T888;

/* ET_ECF_MSIL_CLR_VERSION_CONDITION */
typedef struct S889 T889;

/* UT_COUNTER */
typedef struct S891 T891;

/* KL_AGENT_ROUTINES [ET_CLASS] */
typedef struct S892 T892;

/* TUPLE [UT_COUNTER] */
typedef struct S893 T893;

/* TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
typedef struct S894 T894;

/* TUPLE [ET_UNIVERSE] */
typedef struct S895 T895;

/* PROCEDURE [TUPLE [ET_UNIVERSE]] */
typedef struct S896 T896;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
typedef struct S897 T897;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
typedef struct S898 T898;

/* DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
typedef struct S900 T900;

/* TUPLE [ET_DOTNET_ASSEMBLY] */
typedef struct S901 T901;

/* PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S902 T902;

/* PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S903 T903;

/* TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
typedef struct S904 T904;

/* TUPLE [ET_INTERNAL_UNIVERSE] */
typedef struct S905 T905;

/* PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
typedef struct S906 T906;

/* TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
typedef struct S907 T907;

/* TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef struct S908 T908;

/* TUPLE [ET_SYSTEM_PROCESSOR] */
typedef struct S909 T909;

/* ET_LIBRARY */
typedef struct S910 T910;

/* TUPLE [ET_LIBRARY] */
typedef struct S911 T911;

/* PROCEDURE [TUPLE [ET_LIBRARY]] */
typedef struct S912 T912;

/* DS_HASH_SET [ET_UNIVERSE] */
typedef struct S913 T913;

/* TUPLE [ET_CLUSTER] */
typedef struct S915 T915;

/* PROCEDURE [TUPLE [ET_CLUSTER]] */
typedef struct S916 T916;

/* TUPLE [ET_ECF_SYSTEM] */
typedef struct S917 T917;

/* DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
typedef struct S918 T918;

/* TUPLE [ET_AST_PROCESSOR] */
typedef struct S919 T919;

/* TUPLE [ET_MASTER_CLASS] */
typedef struct S920 T920;

/* PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
typedef struct S921 T921;

/* TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S922 T922;

/* PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S923 T923;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S924 T924;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S925 T925;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S926 T926;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S927 T927;

/* PREDICATE [TUPLE [ET_CLASS]] */
typedef struct S928 T928;

/* TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
typedef struct S930 T930;

/* TUPLE [ET_FLATTENING_STATUS_CHECKER] */
typedef struct S931 T931;

/* TUPLE [ET_INTERFACE_STATUS_CHECKER] */
typedef struct S932 T932;

/* TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef struct S933 T933;

/* TUPLE [BOOLEAN] */
typedef struct S934 T934;

/* TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
typedef struct S935 T935;

/* TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
typedef struct S938 T938;

/* TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
typedef struct S942 T942;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
typedef struct S943 T943;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
typedef struct S944 T944;

/* ET_PARENTHESIS_EXPRESSION */
typedef struct S945 T945;

/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S947 T947;

/* ET_FORMAL_PARAMETER */
typedef struct S948 T948;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S949 T949;
extern T0* GE_boxed949(TC* ac, T949 a1);
extern T0* GE_boxed_pointer949(TC* ac, T949* a1);
typedef struct Sb949 Tb949;

/* TYPED_POINTER [NATURAL_16] */
typedef struct S950 T950;
extern T0* GE_boxed950(TC* ac, T950 a1);
extern T0* GE_boxed_pointer950(TC* ac, T950* a1);
typedef struct Sb950 Tb950;

/* XM_LINKED_LIST [XM_ELEMENT_NODE] */
typedef struct S951 T951;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S953 T953;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S955 T955;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S956 T956;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S957 T957;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S958 T958;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S959 T959;

/* DS_HASH_SET [ET_LIBRARY] */
typedef struct S960 T960;

/* TUPLE [DS_HASH_SET [ET_LIBRARY]] */
typedef struct S961 T961;

/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
typedef struct S962 T962;

/* DS_ARRAYED_LIST [ET_ECF_TARGET] */
typedef struct S963 T963;

/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
typedef struct S964 T964;

/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
typedef struct S966 T966;

/* SPECIAL [ET_QUERY] */
typedef struct S967 T967;

/* ET_ALIAS_NAME_LIST */
typedef struct S968 T968;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S969 T969;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S970 T970;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S971 T971;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S978 T978;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S980 T980;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S981 T981;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S982 T982;

/* CONSOLE */
typedef struct S983 T983;

/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
typedef struct S984 T984;

/* SPECIAL [ET_ECF_NOTE_ELEMENT] */
typedef struct S985 T985;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
typedef struct S986 T986;

/* DS_ARRAYED_LIST [ET_CLUSTER] */
typedef struct S987 T987;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S989 T989;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S990 T990;

/* ET_BRACED_TYPE_LIST */
typedef struct S992 T992;

/* DS_ARRAYED_LIST [ET_MASTER_CLASS] */
typedef struct S993 T993;

/* C_DATE */
typedef struct S994 T994;

/* YY_FILE_BUFFER */
typedef struct S995 T995;

/* KL_STDIN_FILE */
typedef struct S996 T996;

/* YY_BUFFER */
typedef struct S997 T997;

/* YY_UNICODE_FILE_BUFFER */
typedef struct S1001 T1001;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S1002 T1002;

/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1003 T1003;

/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1004 T1004;

/* DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef struct S1005 T1005;

/* DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef struct S1006 T1006;

/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1007 T1007;

/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
typedef struct S1008 T1008;

/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
typedef struct S1009 T1009;

/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
typedef struct S1010 T1010;

/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1011 T1011;

/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1012 T1012;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S1013 T1013;

/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1014 T1014;

/* DS_HASH_SET [ET_NAMED_CLASS] */
typedef struct S1015 T1015;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef struct S1016 T1016;

/* SPECIAL [detachable ET_KEYWORD] */
typedef struct S1017 T1017;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef struct S1018 T1018;

/* ET_AGENT_KEYWORD */
typedef struct S1019 T1019;

/* SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef struct S1020 T1020;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S1021 T1021;

/* ET_PRECURSOR_KEYWORD */
typedef struct S1022 T1022;

/* SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S1023 T1023;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef struct S1024 T1024;

/* SPECIAL [detachable ET_SYMBOL] */
typedef struct S1025 T1025;

/* KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef struct S1026 T1026;

/* SPECIAL [detachable ET_POSITION] */
typedef struct S1027 T1027;

/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S1028 T1028;

/* SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S1030 T1030;

/* KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef struct S1031 T1031;

/* SPECIAL [detachable ET_BREAK] */
typedef struct S1033 T1033;

/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef struct S1034 T1034;

/* SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef struct S1036 T1036;

/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef struct S1037 T1037;

/* SPECIAL [detachable ET_CURRENT] */
typedef struct S1038 T1038;

/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef struct S1039 T1039;

/* ET_FREE_OPERATOR */
typedef struct S1040 T1040;

/* SPECIAL [detachable ET_FREE_OPERATOR] */
typedef struct S1041 T1041;

/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
typedef struct S1042 T1042;

/* SPECIAL [detachable ET_IDENTIFIER] */
typedef struct S1043 T1043;

/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef struct S1044 T1044;

/* SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef struct S1046 T1046;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef struct S1047 T1047;

/* ET_KEYWORD_OPERATOR */
typedef struct S1048 T1048;

/* SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef struct S1049 T1049;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef struct S1050 T1050;

/* SPECIAL [detachable ET_MANIFEST_STRING] */
typedef struct S1051 T1051;

/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef struct S1052 T1052;

/* SPECIAL [detachable ET_REAL_CONSTANT] */
typedef struct S1054 T1054;

/* KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef struct S1055 T1055;

/* SPECIAL [detachable ET_RESULT] */
typedef struct S1056 T1056;

/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef struct S1057 T1057;

/* ET_RETRY_INSTRUCTION */
typedef struct S1058 T1058;

/* SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef struct S1059 T1059;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef struct S1060 T1060;

/* ET_SYMBOL_OPERATOR */
typedef struct S1061 T1061;

/* SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef struct S1062 T1062;

/* KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef struct S1063 T1063;

/* ET_VOID */
typedef struct S1064 T1064;

/* SPECIAL [detachable ET_VOID] */
typedef struct S1065 T1065;

/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S1066 T1066;

/* ET_SEMICOLON_SYMBOL */
typedef struct S1067 T1067;

/* SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S1068 T1068;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef struct S1069 T1069;

/* SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef struct S1070 T1070;

/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S1071 T1071;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S1072 T1072;

/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S1073 T1073;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef struct S1074 T1074;

/* ET_ACROSS_EXPRESSION */
typedef struct S1075 T1075;

/* SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef struct S1076 T1076;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S1077 T1077;

/* ET_ACROSS_INSTRUCTION */
typedef struct S1078 T1078;

/* SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S1079 T1079;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1080 T1080;

/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1081 T1081;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1082 T1082;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1083 T1083;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1084 T1084;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1085 T1085;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1086 T1086;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1087 T1087;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1088 T1088;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1090 T1090;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1091 T1091;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S1092 T1092;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1093 T1093;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef struct S1094 T1094;

/* SPECIAL [detachable ET_AGENT_TARGET] */
typedef struct S1095 T1095;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef struct S1096 T1096;

/* ET_ALIAS_NAME */
typedef struct S1097 T1097;

/* SPECIAL [detachable ET_ALIAS_NAME] */
typedef struct S1098 T1098;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
typedef struct S1099 T1099;

/* SPECIAL [detachable ET_ALIAS_NAME_LIST] */
typedef struct S1100 T1100;

/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef struct S1101 T1101;

/* SPECIAL [detachable ET_ASSIGNER] */
typedef struct S1103 T1103;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef struct S1104 T1104;

/* ET_BRACKET_EXPRESSION */
typedef struct S1105 T1105;

/* SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef struct S1106 T1106;

/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef struct S1107 T1107;

/* ET_CALL_AGENT */
typedef struct S1108 T1108;

/* SPECIAL [detachable ET_CALL_AGENT] */
typedef struct S1109 T1109;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S1110 T1110;

/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S1111 T1111;

/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef struct S1112 T1112;

/* ET_CHECK_INSTRUCTION */
typedef struct S1113 T1113;

/* SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef struct S1114 T1114;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef struct S1115 T1115;

/* SPECIAL [detachable ET_CHOICE] */
typedef struct S1117 T1117;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef struct S1118 T1118;

/* SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef struct S1120 T1120;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef struct S1121 T1121;

/* SPECIAL [detachable ET_CHOICE_ITEM] */
typedef struct S1123 T1123;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef struct S1124 T1124;

/* ET_CHOICE_LIST */
typedef struct S1125 T1125;

/* SPECIAL [detachable ET_CHOICE_LIST] */
typedef struct S1126 T1126;

/* KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef struct S1127 T1127;

/* SPECIAL [detachable ET_CLASS] */
typedef struct S1128 T1128;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef struct S1129 T1129;

/* SPECIAL [detachable ET_CLIENT_ITEM] */
typedef struct S1130 T1130;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef struct S1131 T1131;

/* ET_CLIENTS */
typedef struct S1132 T1132;

/* SPECIAL [detachable ET_CLIENTS] */
typedef struct S1133 T1133;

/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef struct S1134 T1134;

/* SPECIAL [detachable ET_COMPOUND] */
typedef struct S1135 T1135;

/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef struct S1136 T1136;

/* SPECIAL [detachable ET_CONDITIONAL] */
typedef struct S1138 T1138;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
typedef struct S1139 T1139;

/* SPECIAL [detachable ET_CONSTANT] */
typedef struct S1140 T1140;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1141 T1141;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1143 T1143;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1144 T1144;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S1145 T1145;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1146 T1146;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1147 T1147;

/* ET_CONSTRAINT_CREATOR */
typedef struct S1148 T1148;

/* SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1149 T1149;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
typedef struct S1150 T1150;

/* ET_CONSTRAINT_RENAME_LIST */
typedef struct S1151 T1151;

/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
typedef struct S1152 T1152;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1153 T1153;

/* SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1155 T1155;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef struct S1156 T1156;

/* SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef struct S1158 T1158;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1159 T1159;

/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1161 T1161;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1162 T1162;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S1163 T1163;

/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1164 T1164;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef struct S1165 T1165;

/* SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef struct S1166 T1166;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
typedef struct S1167 T1167;

/* ET_CREATION_REGION */
typedef struct S1168 T1168;

/* SPECIAL [detachable ET_CREATION_REGION] */
typedef struct S1169 T1169;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef struct S1170 T1170;

/* ET_CREATOR */
typedef struct S1171 T1171;

/* SPECIAL [detachable ET_CREATOR] */
typedef struct S1172 T1172;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef struct S1173 T1173;

/* ET_CREATOR_LIST */
typedef struct S1174 T1174;

/* SPECIAL [detachable ET_CREATOR_LIST] */
typedef struct S1175 T1175;

/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1176 T1176;

/* ET_DEBUG_INSTRUCTION */
typedef struct S1177 T1177;

/* SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1178 T1178;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S1179 T1179;

/* ET_ELSEIF_EXPRESSION */
typedef struct S1180 T1180;

/* SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S1181 T1181;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S1182 T1182;

/* ET_ELSEIF_EXPRESSION_LIST */
typedef struct S1183 T1183;

/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S1184 T1184;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef struct S1185 T1185;

/* ET_ELSEIF_PART */
typedef struct S1186 T1186;

/* SPECIAL [detachable ET_ELSEIF_PART] */
typedef struct S1187 T1187;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1188 T1188;

/* ET_ELSEIF_PART_LIST */
typedef struct S1189 T1189;

/* SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1190 T1190;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef struct S1191 T1191;

/* SPECIAL [detachable ET_EXPORT] */
typedef struct S1193 T1193;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef struct S1194 T1194;

/* SPECIAL [detachable ET_EXPORT_LIST] */
typedef struct S1195 T1195;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
typedef struct S1196 T1196;

/* SPECIAL [detachable ET_EXPRESSION] */
typedef struct S1197 T1197;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
typedef struct S1198 T1198;

/* SPECIAL [detachable ET_EXPRESSION_ITEM] */
typedef struct S1199 T1199;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1200 T1200;

/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1201 T1201;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1202 T1202;

/* SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1204 T1204;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef struct S1205 T1205;

/* ET_FEATURE_CLAUSE */
typedef struct S1206 T1206;

/* SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef struct S1207 T1207;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1208 T1208;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S1209 T1209;

/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1210 T1210;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef struct S1211 T1211;

/* ET_FEATURE_EXPORT */
typedef struct S1212 T1212;

/* SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef struct S1213 T1213;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef struct S1214 T1214;

/* SPECIAL [detachable ET_FEATURE_NAME] */
typedef struct S1215 T1215;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1216 T1216;

/* SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1218 T1218;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1219 T1219;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1220 T1220;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1221 T1221;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1223 T1223;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1224 T1224;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1225 T1225;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef struct S1226 T1226;

/* SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef struct S1227 T1227;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1228 T1228;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1230 T1230;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1231 T1231;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1232 T1232;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
typedef struct S1233 T1233;

/* ET_IF_EXPRESSION */
typedef struct S1234 T1234;

/* SPECIAL [detachable ET_IF_EXPRESSION] */
typedef struct S1235 T1235;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef struct S1236 T1236;

/* ET_IF_INSTRUCTION */
typedef struct S1237 T1237;

/* SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef struct S1238 T1238;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
typedef struct S1239 T1239;

/* SPECIAL [detachable ET_INLINE_AGENT] */
typedef struct S1240 T1240;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1241 T1241;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1242 T1242;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S1243 T1243;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S1244 T1244;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
typedef struct S1245 T1245;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
typedef struct S1246 T1246;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
typedef struct S1247 T1247;

/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
typedef struct S1248 T1248;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
typedef struct S1249 T1249;

/* ET_INSPECT_EXPRESSION */
typedef struct S1250 T1250;

/* SPECIAL [detachable ET_INSPECT_EXPRESSION] */
typedef struct S1251 T1251;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1252 T1252;

/* ET_INSPECT_INSTRUCTION */
typedef struct S1253 T1253;

/* SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1254 T1254;

/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef struct S1255 T1255;

/* SPECIAL [detachable ET_INSTRUCTION] */
typedef struct S1256 T1256;

/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef struct S1257 T1257;

/* ET_INVARIANTS */
typedef struct S1258 T1258;

/* SPECIAL [detachable ET_INVARIANTS] */
typedef struct S1259 T1259;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1260 T1260;

/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1261 T1261;

/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef struct S1262 T1262;

/* SPECIAL [detachable ET_LIKE_TYPE] */
typedef struct S1264 T1264;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef struct S1265 T1265;

/* ET_LOCAL_VARIABLE */
typedef struct S1266 T1266;

/* SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef struct S1267 T1267;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1268 T1268;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1270 T1270;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1271 T1271;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1272 T1272;

/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef struct S1273 T1273;

/* ET_LOOP_INVARIANTS */
typedef struct S1274 T1274;

/* SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef struct S1275 T1275;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef struct S1276 T1276;

/* ET_MANIFEST_ARRAY */
typedef struct S1277 T1277;

/* SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef struct S1278 T1278;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1279 T1279;

/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1281 T1281;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1282 T1282;

/* ET_MANIFEST_STRING_LIST */
typedef struct S1283 T1283;

/* SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1284 T1284;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef struct S1285 T1285;

/* SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef struct S1286 T1286;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
typedef struct S1287 T1287;

/* ET_NOTE_LIST */
typedef struct S1288 T1288;

/* SPECIAL [detachable ET_NOTE_LIST] */
typedef struct S1289 T1289;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
typedef struct S1290 T1290;

/* SPECIAL [detachable ET_NOTE_ITEM] */
typedef struct S1292 T1292;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
typedef struct S1293 T1293;

/* SPECIAL [detachable ET_NOTE_TERM] */
typedef struct S1294 T1294;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
typedef struct S1295 T1295;

/* SPECIAL [detachable ET_NOTE_TERM_ITEM] */
typedef struct S1297 T1297;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
typedef struct S1298 T1298;

/* ET_NOTE_TERM_LIST */
typedef struct S1299 T1299;

/* SPECIAL [detachable ET_NOTE_TERM_LIST] */
typedef struct S1300 T1300;

/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef struct S1301 T1301;

/* SPECIAL [detachable ET_OBSOLETE] */
typedef struct S1303 T1303;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1304 T1304;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S1305 T1305;

/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1306 T1306;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef struct S1307 T1307;

/* SPECIAL [detachable ET_PARENT] */
typedef struct S1308 T1308;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S1309 T1309;

/* ET_PARENT_CLAUSE_LIST */
typedef struct S1310 T1310;

/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S1311 T1311;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef struct S1312 T1312;

/* SPECIAL [detachable ET_PARENT_ITEM] */
typedef struct S1313 T1313;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef struct S1314 T1314;

/* SPECIAL [detachable ET_PARENT_LIST] */
typedef struct S1315 T1315;

/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef struct S1316 T1316;

/* ET_POSTCONDITIONS */
typedef struct S1317 T1317;

/* SPECIAL [detachable ET_POSTCONDITIONS] */
typedef struct S1318 T1318;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
typedef struct S1319 T1319;

/* SPECIAL [detachable ET_PRECONDITIONS] */
typedef struct S1320 T1320;

/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
typedef struct S1321 T1321;

/* SPECIAL [detachable ET_PROCEDURE] */
typedef struct S1322 T1322;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1323 T1323;

/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1325 T1325;

/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
typedef struct S1326 T1326;

/* ET_QUANTIFIER_EXPRESSION */
typedef struct S1327 T1327;

/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
typedef struct S1328 T1328;

/* KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
typedef struct S1329 T1329;

/* SPECIAL [detachable ET_QUERY] */
typedef struct S1330 T1330;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef struct S1331 T1331;

/* SPECIAL [detachable ET_RENAME_ITEM] */
typedef struct S1333 T1333;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef struct S1334 T1334;

/* SPECIAL [detachable ET_RENAME_LIST] */
typedef struct S1335 T1335;

/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
typedef struct S1336 T1336;

/* ET_REPEAT_INSTRUCTION */
typedef struct S1337 T1337;

/* SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
typedef struct S1338 T1338;

/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1339 T1339;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S1340 T1340;

/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1341 T1341;

/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef struct S1342 T1342;

/* ET_STRIP_EXPRESSION */
typedef struct S1343 T1343;

/* SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef struct S1344 T1344;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
typedef struct S1345 T1345;

/* SPECIAL [detachable ET_TYPE] */
typedef struct S1346 T1346;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
typedef struct S1347 T1347;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT] */
typedef struct S1349 T1349;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1350 T1350;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1352 T1352;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
typedef struct S1353 T1353;

/* ET_TYPE_CONSTRAINT_LIST */
typedef struct S1354 T1354;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
typedef struct S1355 T1355;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef struct S1356 T1356;

/* SPECIAL [detachable ET_TYPE_ITEM] */
typedef struct S1358 T1358;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef struct S1359 T1359;

/* SPECIAL [detachable ET_TYPE_LIST] */
typedef struct S1360 T1360;

/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef struct S1361 T1361;

/* ET_VARIANT */
typedef struct S1362 T1362;

/* SPECIAL [detachable ET_VARIANT] */
typedef struct S1363 T1363;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
typedef struct S1364 T1364;

/* ET_WHEN_EXPRESSION */
typedef struct S1365 T1365;

/* SPECIAL [detachable ET_WHEN_EXPRESSION] */
typedef struct S1366 T1366;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
typedef struct S1367 T1367;

/* ET_WHEN_EXPRESSION_LIST */
typedef struct S1368 T1368;

/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
typedef struct S1369 T1369;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef struct S1370 T1370;

/* ET_WHEN_PART */
typedef struct S1371 T1371;

/* SPECIAL [detachable ET_WHEN_PART] */
typedef struct S1372 T1372;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef struct S1373 T1373;

/* ET_WHEN_PART_LIST */
typedef struct S1374 T1374;

/* SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef struct S1375 T1375;

/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef struct S1376 T1376;

/* SPECIAL [detachable ET_WRITABLE] */
typedef struct S1377 T1377;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S1378 T1378;

/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1379 T1379;

/* ET_PARENT_CHECKER1 */
typedef struct S1380 T1380;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1381 T1381;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1382 T1382;

/* ET_FEATURE_NAME_TESTER */
typedef struct S1383 T1383;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1385 T1385;

/* ET_ALIAS_NAME_TESTER */
typedef struct S1386 T1386;

/* DS_ARRAYED_LIST [ET_CLIENT_LIST] */
typedef struct S1388 T1388;

/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
typedef struct S1389 T1389;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1390 T1390;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1391 T1391;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1392 T1392;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef struct S1393 T1393;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S1394 T1394;

/* ET_SIGNATURE_CHECKER */
typedef struct S1395 T1395;

/* ET_PARENT_CHECKER2 */
typedef struct S1396 T1396;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1397 T1397;

/* ET_BUILTIN_FEATURE_CHECKER */
typedef struct S1398 T1398;

/* ET_PRECURSOR_CHECKER */
typedef struct S1399 T1399;

/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
typedef struct S1400 T1400;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S1401 T1401;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S1402 T1402;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef struct S1403 T1403;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1404 T1404;

/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
typedef struct S1405 T1405;

/* ET_RENAME */
typedef struct S1409 T1409;

/* ET_PARENT_CHECKER3 */
typedef struct S1410 T1410;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef struct S1411 T1411;

/* DS_HASH_SET [ET_QUERY] */
typedef struct S1412 T1412;

/* ET_SUPPLIER_BUILDER */
typedef struct S1413 T1413;

/* ET_PARENT_FEATURE */
typedef struct S1416 T1416;

/* ET_INHERITED_FEATURE */
typedef struct S1417 T1417;

/* SPECIAL [ET_CLASS] */
typedef struct S1418 T1418;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S1419 T1419;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1420 T1420;

/* DS_ARRAYED_STACK [YY_BUFFER] */
typedef struct S1421 T1421;

/* UT_SYNTAX_ERROR */
typedef struct S1422 T1422;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1423 T1423;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1425 T1425;

/* SPECIAL [NATIVE_STRING] */
typedef struct S1426 T1426;

/* ARRAY [detachable STRING_8] */
typedef struct S1427 T1427;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1428 T1428;

/* DS_BILINKABLE [XM_POSITION] */
typedef struct S1430 T1430;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S1431 T1431;

/* DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S1432 T1432;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1433 T1433;

/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1436 T1436;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1437 T1437;

/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S1440 T1440;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S1441 T1441;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1442 T1442;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1443 T1443;

/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1444 T1444;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef struct S1445 T1445;

/* DS_BILINKABLE [STRING_8] */
typedef struct S1446 T1446;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1447 T1447;

/* DS_LINKED_QUEUE [detachable STRING_8] */
typedef struct S1450 T1450;

/* DS_LINKED_QUEUE [STRING_8] */
typedef struct S1451 T1451;

/* KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1452 T1452;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1453 T1453;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1454 T1454;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1455 T1455;

/* SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S1456 T1456;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
typedef struct S1457 T1457;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
typedef struct S1458 T1458;

/* DS_LINKABLE [XM_DOCUMENT_NODE] */
typedef struct S1459 T1459;

/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1461 T1461;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1462 T1462;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1463 T1463;

/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
typedef struct S1464 T1464;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
typedef struct S1465 T1465;

/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
typedef struct S1467 T1467;

/* SPECIAL [ET_CALL_NAME] */
typedef struct S1469 T1469;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
typedef struct S1471 T1471;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
typedef struct S1472 T1472;

/* KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
typedef struct S1473 T1473;

/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
typedef struct S1474 T1474;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
typedef struct S1476 T1476;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
typedef struct S1477 T1477;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1478 T1478;

/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1479 T1479;

/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1480 T1480;

/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1481 T1481;

/* SPECIAL [ET_SYSTEM_PROCESSOR] */
typedef struct S1483 T1483;

/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
typedef struct S1484 T1484;

/* DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
typedef struct S1485 T1485;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
typedef struct S1486 T1486;

/* SPECIAL [ET_ADAPTED_CLASS] */
typedef struct S1488 T1488;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
typedef struct S1489 T1489;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S1490 T1490;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S1491 T1491;

/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
typedef struct S1492 T1492;

/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
typedef struct S1493 T1493;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1494 T1494;

/* KL_SPECIAL_ROUTINES [NATURAL_8] */
typedef struct S1497 T1497;

/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
typedef struct S1498 T1498;

/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
typedef struct S1499 T1499;

/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
typedef struct S1500 T1500;

/* KL_SPECIAL_ROUTINES [NATURAL_64] */
typedef struct S1507 T1507;

/* TYPE [NATURAL_64] */
#define T1508 EIF_TYPE_OBJ

/* TYPE [NATURAL_32] */
#define T1509 EIF_TYPE_OBJ

/* KL_CHARACTER_BUFFER */
typedef struct S1510 T1510;

/* UT_TRISTATE */
typedef struct S1511 T1511;

/* KL_AGENT_ROUTINES [ANY] */
typedef struct S1512 T1512;

/* TUPLE [UT_TRISTATE] */
typedef struct S1513 T1513;

/* TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
typedef struct S1514 T1514;

/* PREDICATE [TUPLE [ET_MASTER_CLASS]] */
typedef struct S1515 T1515;

/* PREDICATE [TUPLE] */
typedef struct S1516 T1516;

/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
typedef struct S1518 T1518;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
typedef struct S1519 T1519;

/* TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1520 T1520;

/* KL_AGENT_ROUTINES [ET_UNIVERSE] */
typedef struct S1521 T1521;

/* PREDICATE [TUPLE [ET_UNIVERSE]] */
typedef struct S1522 T1522;

/* TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
typedef struct S1523 T1523;

/* TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
typedef struct S1524 T1524;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
typedef struct S1526 T1526;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
typedef struct S1527 T1527;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
typedef struct S1528 T1528;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S1529 T1529;

/* XM_COMMENT */
typedef struct S1530 T1530;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1531 T1531;

/* XM_CHARACTER_DATA */
typedef struct S1532 T1532;

/* ET_LIKE_N */
typedef struct S1535 T1535;

/* TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
typedef struct S1538 T1538;

/* KL_STRING_INPUT_STREAM */
typedef struct S1539 T1539;

/* KL_UNICODE_CHARACTER_BUFFER */
typedef struct S1541 T1541;

/* ET_INLINE_SEPARATE_ARGUMENT_LIST */
typedef struct S1543 T1543;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S1544 T1544;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S1545 T1545;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S1546 T1546;

/* ET_VERBATIM_STRING */
typedef struct S1547 T1547;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S1548 T1548;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S1549 T1549;

/* ET_OCTAL_INTEGER_CONSTANT */
typedef struct S1550 T1550;

/* ET_BINARY_INTEGER_CONSTANT */
typedef struct S1551 T1551;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S1552 T1552;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S1553 T1553;

/* ET_TRUE_CONSTANT */
typedef struct S1555 T1555;

/* ET_FALSE_CONSTANT */
typedef struct S1556 T1556;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S1557 T1557;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S1558 T1558;

/* ET_TAGGED_NOTE */
typedef struct S1560 T1560;

/* ET_NOTE */
typedef struct S1561 T1561;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S1562 T1562;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S1563 T1563;

/* ET_TYPE_RENAME_CONSTRAINT */
typedef struct S1564 T1564;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S1565 T1565;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S1566 T1566;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1567 T1567;

/* ET_ALL_EXPORT */
typedef struct S1568 T1568;

/* ET_CONVERT_FUNCTION */
typedef struct S1570 T1570;

/* ET_CONVERT_PROCEDURE */
typedef struct S1571 T1571;

/* ET_ONCE_FUNCTION */
typedef struct S1573 T1573;

/* ET_DEFERRED_FUNCTION */
typedef struct S1574 T1574;

/* ET_ONCE_PROCEDURE */
typedef struct S1576 T1576;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S1577 T1577;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S1578 T1578;

/* ET_ALIAS_FREE_NAME */
typedef struct S1579 T1579;

/* ET_CLASS_ASSERTION */
typedef struct S1582 T1582;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S1583 T1583;

/* ET_LIKE_FEATURE */
typedef struct S1585 T1585;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S1586 T1586;

/* ET_QUALIFIED_LIKE_TYPE */
typedef struct S1587 T1587;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S1588 T1588;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S1589 T1589;

/* ET_LOOP_INSTRUCTION */
typedef struct S1590 T1590;

/* ET_BANG_INSTRUCTION */
typedef struct S1592 T1592;

/* ET_CREATE_INSTRUCTION */
typedef struct S1593 T1593;

/* ET_CHOICE_RANGE */
typedef struct S1594 T1594;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S1595 T1595;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S1597 T1597;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S1598 T1598;

/* ET_FEATURE_ADDRESS */
typedef struct S1599 T1599;

/* ET_CURRENT_ADDRESS */
typedef struct S1600 T1600;

/* ET_RESULT_ADDRESS */
typedef struct S1601 T1601;

/* ET_EXPRESSION_ADDRESS */
typedef struct S1602 T1602;

/* ET_INFIX_EXPRESSION */
typedef struct S1603 T1603;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S1604 T1604;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S1605 T1605;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S1606 T1606;

/* ET_MANIFEST_TYPE */
typedef struct S1607 T1607;

/* ET_PREFIX_EXPRESSION */
typedef struct S1608 T1608;

/* ET_OLD_EXPRESSION */
typedef struct S1609 T1609;

/* ET_OLD_OBJECT_TEST */
typedef struct S1610 T1610;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S1611 T1611;

/* ET_ITERATION_CURSOR */
typedef struct S1612 T1612;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S1613 T1613;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S1614 T1614;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S1615 T1615;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S1616 T1616;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S1617 T1617;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S1618 T1618;

/* ET_AGENT_OPEN_TARGET */
typedef struct S1619 T1619;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S1620 T1620;

/* ET_TAGGED_ASSERTION */
typedef struct S1623 T1623;

/* ET_FILE_POSITION */
typedef struct S1625 T1625;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1627 T1627;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1628 T1628;

/* ET_REDECLARED_FEATURE */
typedef struct S1630 T1630;

/* SPECIAL [NATURAL_16] */
typedef struct S1636 T1636;

/* ARRAY [NATURAL_16] */
typedef struct S1637 T1637;

/* ARRAY [NATURAL_32] */
typedef struct S1638 T1638;

/* DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
typedef struct S1639 T1639;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1640 T1640;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1641 T1641;

/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
typedef struct S1642 T1642;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1643 T1643;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1644 T1644;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1645 T1645;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1646 T1646;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1647 T1647;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1648 T1648;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1649 T1649;

/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
typedef struct S1650 T1650;

/* SPECIAL [ET_ECF_ACTION] */
typedef struct S1651 T1651;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
typedef struct S1652 T1652;

/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1653 T1653;

/* SPECIAL [ET_ECF_OPTIONS] */
typedef struct S1654 T1654;

/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
typedef struct S1657 T1657;

/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
typedef struct S1658 T1658;

/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
typedef struct S1659 T1659;

/* SPECIAL [ET_ECF_VISIBLE_CLASS] */
typedef struct S1660 T1660;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
typedef struct S1661 T1661;

/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
typedef struct S1662 T1662;

/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
typedef struct S1663 T1663;

/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1664 T1664;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
typedef struct S1665 T1665;

/* SPECIAL [ET_DOTNET_ASSEMBLY] */
typedef struct S1666 T1666;

/* DS_HASH_SET_CURSOR [ET_UNIVERSE] */
typedef struct S1668 T1668;

/* SPECIAL [ET_UNIVERSE] */
typedef struct S1669 T1669;

/* KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
typedef struct S1671 T1671;

/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
typedef struct S1672 T1672;

/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
typedef struct S1674 T1674;

/* SPECIAL [ET_INTERNAL_UNIVERSE] */
typedef struct S1675 T1675;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S1676 T1676;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S1677 T1677;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S1678 T1678;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S1679 T1679;

/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
typedef struct S1680 T1680;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1681 T1681;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1682 T1682;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1683 T1683;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef struct S1685 T1685;

/* UC_UTF16_ROUTINES */
typedef struct S1686 T1686;

/* DS_HASH_SET_CURSOR [ET_LIBRARY] */
typedef struct S1687 T1687;

/* KL_SPECIAL_ROUTINES [ET_LIBRARY] */
typedef struct S1688 T1688;

/* SPECIAL [ET_LIBRARY] */
typedef struct S1689 T1689;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
typedef struct S1690 T1690;

/* SPECIAL [ET_ADAPTED_UNIVERSE] */
typedef struct S1691 T1691;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
typedef struct S1692 T1692;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
typedef struct S1693 T1693;

/* SPECIAL [ET_ECF_TARGET_PARENT] */
typedef struct S1694 T1694;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
typedef struct S1695 T1695;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
typedef struct S1696 T1696;

/* SPECIAL [ET_CLUSTER] */
typedef struct S1697 T1697;

/* KL_SPECIAL_ROUTINES [ET_CLUSTER] */
typedef struct S1698 T1698;

/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
typedef struct S1699 T1699;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S1700 T1700;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S1701 T1701;

/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
typedef struct S1702 T1702;

/* YY_UNICODE_BUFFER */
typedef struct S1703 T1703;

/* SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1704 T1704;

/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1705 T1705;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
typedef struct S1706 T1706;

/* SPECIAL [ET_OBJECT_TEST_LIST] */
typedef struct S1707 T1707;

/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
typedef struct S1708 T1708;

/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
typedef struct S1709 T1709;

/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
typedef struct S1710 T1710;

/* SPECIAL [ET_ITERATION_COMPONENT_LIST] */
typedef struct S1711 T1711;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1712 T1712;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1713 T1713;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1714 T1714;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1715 T1715;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1716 T1716;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1717 T1717;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1718 T1718;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1719 T1719;

/* SPECIAL [ET_NAMED_CLASS] */
typedef struct S1720 T1720;

/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
typedef struct S1722 T1722;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1724 T1724;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1725 T1725;

/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1727 T1727;

/* DS_ARRAYED_LIST [NATURAL_32] */
typedef struct S1728 T1728;

/* ET_BASE_TYPE_CONSTRAINT_LIST */
typedef struct S1729 T1729;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1730 T1730;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1731 T1731;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S1734 T1734;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1735 T1735;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S1736 T1736;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S1737 T1737;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S1739 T1739;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1740 T1740;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
typedef struct S1741 T1741;

/* SPECIAL [ET_CLIENT_LIST] */
typedef struct S1742 T1742;

/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
typedef struct S1743 T1743;

/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1745 T1745;

/* KL_SPECIAL_ROUTINES [ET_CLIENT] */
typedef struct S1746 T1746;

/* SPECIAL [ET_CLIENT] */
typedef struct S1747 T1747;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S1748 T1748;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1749 T1749;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1750 T1750;

/* ET_REPLICATED_FEATURE */
typedef struct S1752 T1752;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1753 T1753;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1754 T1754;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1755 T1755;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1756 T1756;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1758 T1758;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1760 T1760;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
typedef struct S1761 T1761;

/* DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
typedef struct S1762 T1762;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1763 T1763;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1764 T1764;

/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef struct S1765 T1765;

/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
typedef struct S1766 T1766;

/* TYPE [ET_FEATURE] */
#define T1767 EIF_TYPE_OBJ

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1769 T1769;

/* TYPE [ET_CLASS] */
#define T1770 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1771 T1771;

/* SPECIAL [ET_RENAME] */
typedef struct S1772 T1772;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1775 T1775;

/* TYPE [ET_RENAME] */
#define T1776 EIF_TYPE_OBJ

/* TYPE [ET_FEATURE_NAME] */
#define T1777 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
typedef struct S1779 T1779;

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef struct S1780 T1780;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef struct S1781 T1781;

/* SPECIAL [YY_BUFFER] */
typedef struct S1782 T1782;

/* KL_SPECIAL_ROUTINES [YY_BUFFER] */
typedef struct S1783 T1783;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1784 T1784;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1785 T1785;

/* TYPE [detachable STRING_8] */
#define T1786 EIF_TYPE_OBJ

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1787 T1787;

/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1788 T1788;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1790 T1790;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1791 T1791;

/* DS_LINKABLE [detachable STRING_8] */
typedef struct S1792 T1792;

/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1793 T1793;

/* TUPLE [ET_ECF_CLUSTER] */
typedef struct S1794 T1794;

/* PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
typedef struct S1795 T1795;

/* TUPLE [ET_ECF_TARGET, STRING_8] */
typedef struct S1796 T1796;

/* TUPLE [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1798 T1798;

/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
typedef struct S1799 T1799;

/* TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1800 T1800;

/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S1801 T1801;

/* PROCEDURE [TUPLE [STRING_8]] */
typedef struct S1804 T1804;

/* TUPLE [ET_ECF_OPTIONS, STRING_8] */
typedef struct S1805 T1805;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S1806 T1806;

/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
typedef struct S1807 T1807;

/* TYPE [detachable DEVELOPER_EXCEPTION] */
#define T1811 EIF_TYPE_OBJ

/* DS_LINKABLE [XM_ELEMENT_NODE] */
typedef struct S1814 T1814;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1818 T1818;

/* ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef struct S1819 T1819;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S1821 T1821;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1822 T1822;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1825 T1825;

/* TUPLE [ET_CLIENT_LIST] */
typedef struct S1829 T1829;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1830 T1830;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S1831 T1831;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1832 T1832;

/* ET_KEYWORD_EXPRESSION */
typedef struct S1834 T1834;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1838 T1838;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1840 T1840;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1841 T1841;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1842 T1842;

/* TUPLE [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1845 T1845;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
typedef struct S1846 T1846;

/* TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
typedef struct S1847 T1847;

/* TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1848 T1848;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
typedef struct S1849 T1849;

/* TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1850 T1850;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
typedef struct S1851 T1851;

/* TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1852 T1852;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
typedef struct S1853 T1853;

/* TUPLE [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1854 T1854;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
typedef struct S1855 T1855;

/* TUPLE [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1856 T1856;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
typedef struct S1857 T1857;

/* TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1858 T1858;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
typedef struct S1859 T1859;

/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1863 T1863;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1866 T1866;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1867 T1867;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1868 T1868;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S1870 T1870;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S1871 T1871;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1872 T1872;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1874 T1874;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S1876 T1876;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S1877 T1877;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S1879 T1879;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S1880 T1880;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1882 T1882;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1883 T1883;

/* SPECIAL [ET_CREATOR] */
typedef struct S1884 T1884;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S1885 T1885;

/* SPECIAL [ET_ELSEIF_EXPRESSION] */
typedef struct S1886 T1886;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
typedef struct S1887 T1887;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S1888 T1888;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S1889 T1889;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S1890 T1890;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S1891 T1891;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S1893 T1893;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S1894 T1894;

/* SPECIAL [ET_NOTE_ITEM] */
typedef struct S1896 T1896;

/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
typedef struct S1897 T1897;

/* SPECIAL [ET_NOTE_TERM_ITEM] */
typedef struct S1898 T1898;

/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
typedef struct S1899 T1899;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S1900 T1900;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S1901 T1901;

/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1903 T1903;

/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1904 T1904;

/* SPECIAL [ET_WHEN_EXPRESSION] */
typedef struct S1905 T1905;

/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
typedef struct S1906 T1906;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S1907 T1907;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S1908 T1908;

/* ET_BASE_TYPE_RENAME_CONSTRAINT */
typedef struct S1910 T1910;

/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
typedef struct S1913 T1913;

/* ET_STANDARD_ONCE_KEYS */
typedef struct S1917 T1917;

/* SPECIAL [ET_ECF_CLUSTER] */
typedef struct S1919 T1919;

/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
typedef struct S1920 T1920;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
typedef struct S1921 T1921;

/* SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1922 T1922;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1923 T1923;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1924 T1924;

/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1925 T1925;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1926 T1926;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1927 T1927;

/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
typedef struct S1928 T1928;

/* SPECIAL [ET_ECF_FILE_RULE] */
typedef struct S1929 T1929;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
typedef struct S1930 T1930;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1931 T1931;

/* SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1932 T1932;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1933 T1933;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1934 T1934;

/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1935 T1935;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1936 T1936;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1937 T1937;

/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1938 T1938;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1939 T1939;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1940 T1940;

/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1941 T1941;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1942 T1942;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1943 T1943;

/* SPECIAL [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1944 T1944;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1945 T1945;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1946 T1946;

/* SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1947 T1947;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1948 T1948;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1949 T1949;

/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1950 T1950;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1951 T1951;

/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1952 T1952;

/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1953 T1953;

/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1954 T1954;

/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
typedef struct S1955 T1955;

/* SPECIAL [ET_ECF_ANDED_CONDITIONS] */
typedef struct S1956 T1956;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
typedef struct S1957 T1957;

/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
typedef struct S1958 T1958;

/* SPECIAL [ET_ECF_CONDITION_ITEM] */
typedef struct S1959 T1959;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
typedef struct S1960 T1960;

/* DS_LINKABLE [CHARACTER_8] */
typedef struct S1962 T1962;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1963 T1963;

/* SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1964 T1964;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1965 T1965;

/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1966 T1966;

/* DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
typedef struct S1967 T1967;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S1968 T1968;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1969 T1969;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1971 T1971;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1972 T1972;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1974 T1974;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1975 T1975;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1976 T1976;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1977 T1977;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1978 T1978;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1979 T1979;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1980 T1980;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1981 T1981;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1982 T1982;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1983 T1983;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1986 T1986;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1987 T1987;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1988 T1988;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1989 T1989;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1990 T1990;

/* SPECIAL [ET_LIKE_FEATURE] */
typedef struct S1991 T1991;

/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
typedef struct S1992 T1992;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
typedef struct S1993 T1993;

/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef struct S1995 T1995;

/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef struct S1996 T1996;

/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef struct S1997 T1997;

/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef struct S1998 T1998;

/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1999 T1999;

/* ET_UNIVERSE_ERROR */
typedef struct S2000 T2000;

/* ET_CLUSTER_ERROR */
typedef struct S2001 T2001;

/* ET_SYNTAX_ERROR */
typedef struct S2002 T2002;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S2003 T2003;

/* AP_OPTION_COMPARATOR */
typedef struct S2004 T2004;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S2005 T2005;

/* ST_SPLITTER */
typedef struct S2011 T2011;

/* KL_CHARACTER_ROUTINES */
typedef struct S2012 T2012;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S2013 T2013;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef struct S2014 T2014;

/* ET_ACTUAL_PARAMETER_SUBLIST */
typedef struct S2015 T2015;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S2016 T2016;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S2018 T2018;

/* ET_PARENTHESIS_INSTRUCTION */
typedef struct S2020 T2020;

/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
typedef struct S2021 T2021;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S2024 T2024;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S2025 T2025;

/* ET_PARENTHESIS_SYMBOL */
typedef struct S2031 T2031;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S2045 T2045;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S2046 T2046;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S2048 T2048;

/* TYPE [ET_NESTED_TYPE_CONTEXT] */
#define T2050 EIF_TYPE_OBJ

/* TYPE [ET_ITERATION_COMPONENT] */
#define T2051 EIF_TYPE_OBJ

/* TYPE [ET_INLINE_SEPARATE_ARGUMENT] */
#define T2053 EIF_TYPE_OBJ

/* SPECIAL [ET_EXPORT] */
typedef struct S2055 T2055;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S2057 T2057;

/* TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
typedef struct S2064 T2064;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S2070 T2070;

/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
typedef struct S2071 T2071;

/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
typedef struct S2074 T2074;

/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
typedef struct S2075 T2075;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S2076 T2076;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S2079 T2079;

/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef struct S2080 T2080;

/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef struct S2083 T2083;

/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef struct S2084 T2084;

/* TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S2090 T2090;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S2091 T2091;

/* ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef struct S2093 T2093;

/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef struct S2094 T2094;

/* TYPE [detachable RX_REGULAR_EXPRESSION] */
#define T2098 EIF_TYPE_OBJ

/* ET_CONVERT_BUILTIN_EXPRESSION */
typedef struct S2100 T2100;

/* ET_CONVERT_FROM_EXPRESSION */
typedef struct S2101 T2101;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S2102 T2102;

/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S2108 T2108;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S2109 T2109;

/* DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
typedef struct S2115 T2115;

/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
typedef struct S2116 T2116;

/* DS_HASH_SET [NATURAL_32] */
typedef struct S2117 T2117;

/* ET_AST_NULL_LEAF */
typedef struct S2118 T2118;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S2119 T2119;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S2120 T2120;

/* TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2121 T2121;

/* TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2122 T2122;

/* TUPLE [ET_ECF_LIBRARY] */
typedef struct S2123 T2123;

/* TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2125 T2125;

/* DS_CELL [detachable ET_CLASS] */
typedef struct S2126 T2126;

/* TUPLE [DS_CELL [detachable ET_CLASS]] */
typedef struct S2127 T2127;

/* TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef struct S2129 T2129;

/* TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2130 T2130;

/* TUPLE [ET_ECF_FILE_RULE] */
typedef struct S2131 T2131;

/* PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S2132 T2132;

/* TUPLE [ET_ECF_FILE_RULES] */
typedef struct S2133 T2133;

/* PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S2134 T2134;

/* TUPLE [ET_ECF_STATE] */
typedef struct S2135 T2135;

/* PREDICATE [TUPLE [STRING_8]] */
typedef struct S2137 T2137;

/* TUPLE [KL_STRING_ROUTINES, STRING_8] */
typedef struct S2138 T2138;

/* TUPLE [DS_HASH_SET [STRING_8]] */
typedef struct S2140 T2140;

/* LX_DFA_WILDCARD */
typedef struct S2142 T2142;

/* TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2143 T2143;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S2146 T2146;

/* TUPLE [LX_WILDCARD] */
typedef struct S2148 T2148;

/* PREDICATE [TUPLE [LX_WILDCARD]] */
typedef struct S2149 T2149;

/* TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
typedef struct S2150 T2150;

/* SPECIAL [LX_WILDCARD] */
typedef struct S2152 T2152;

/* KL_SPECIAL_ROUTINES [LX_WILDCARD] */
typedef struct S2155 T2155;

/* DS_HASH_SET_CURSOR [NATURAL_32] */
typedef struct S2156 T2156;

/* LX_WILDCARD_PARSER */
typedef struct S2157 T2157;

/* LX_DESCRIPTION */
typedef struct S2158 T2158;

/* LX_FULL_DFA */
typedef struct S2159 T2159;

/* TUPLE [ET_GROUP] */
typedef struct S2161 T2161;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
typedef struct S2162 T2162;

/* TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2163 T2163;

/* PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
typedef struct S2164 T2164;

/* DS_ARRAYED_LIST [LX_RULE] */
typedef struct S2166 T2166;

/* LX_START_CONDITIONS */
typedef struct S2167 T2167;

/* LX_ACTION_FACTORY */
typedef struct S2168 T2168;

/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
typedef struct S2169 T2169;

/* LX_SYMBOL_CLASS */
typedef struct S2170 T2170;

/* DS_HASH_TABLE [STRING_32, STRING_8] */
typedef struct S2171 T2171;

/* DS_HASH_SET [LX_SYMBOL_CLASS] */
typedef struct S2172 T2172;

/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
typedef struct S2173 T2173;

/* KL_EQUALITY_TESTER [STRING_32] */
typedef struct S2174 T2174;

/* DS_ARRAYED_STACK [BOOLEAN] */
typedef struct S2175 T2175;

/* KL_SPECIAL_ROUTINES [STRING_32] */
typedef struct S2176 T2176;

/* SPECIAL [STRING_32] */
typedef struct S2177 T2177;

/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
typedef struct S2178 T2178;

/* SPECIAL [LX_SYMBOL_CLASS] */
typedef struct S2179 T2179;

/* KL_SPECIAL_ROUTINES [LX_NFA] */
typedef struct S2180 T2180;

/* LX_NFA */
typedef struct S2181 T2181;

/* SPECIAL [LX_NFA] */
typedef struct S2182 T2182;

/* LX_RULE */
typedef struct S2183 T2183;

/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
typedef struct S2184 T2184;

/* LX_EQUIVALENCE_CLASSES */
typedef struct S2185 T2185;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S2186 T2186;

/* LX_INVALID_UNICODE_CHARACTER_ERROR */
typedef struct S2187 T2187;

/* LX_MISSING_QUOTE_ERROR */
typedef struct S2188 T2188;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S2189 T2189;

/* LX_BAD_CHARACTER_ERROR */
typedef struct S2190 T2190;

/* LX_FULL_AND_META_ERROR */
typedef struct S2191 T2191;

/* LX_FULL_AND_REJECT_ERROR */
typedef struct S2192 T2192;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S2193 T2193;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S2194 T2194;

/* ARRAY [LX_RULE] */
typedef struct S2195 T2195;

/* SPECIAL [LX_RULE] */
typedef struct S2196 T2196;

/* LX_DFA_STATE */
typedef struct S2197 T2197;

/* DS_ARRAYED_LIST [LX_NFA_STATE] */
typedef struct S2198 T2198;

/* DS_ARRAYED_LIST [LX_DFA_STATE] */
typedef struct S2199 T2199;

/* LX_SYMBOL_PARTITIONS */
typedef struct S2200 T2200;

/* KL_ARRAY_ROUTINES [LX_RULE] */
typedef struct S2201 T2201;

/* ARRAY [detachable LX_RULE] */
typedef struct S2202 T2202;

/* SPECIAL [detachable LX_RULE] */
typedef struct S2203 T2203;

/* LX_START_CONDITION */
typedef struct S2204 T2204;

/* LX_TRANSITION_TABLE [LX_DFA_STATE] */
typedef struct S2205 T2205;

/* DS_ARRAYED_LIST [LX_NFA] */
typedef struct S2206 T2206;

/* DS_HASH_TABLE [LX_NFA, INTEGER_32] */
typedef struct S2207 T2207;

/* LX_NFA_STATE */
typedef struct S2208 T2208;

/* ARRAY [detachable LX_SYMBOL_CLASS] */
typedef struct S2209 T2209;

/* SPECIAL [detachable LX_SYMBOL_CLASS] */
typedef struct S2210 T2210;

/* ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
typedef struct S2211 T2211;

/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
typedef struct S2212 T2212;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2213 T2213;

/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
typedef struct S2214 T2214;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S2215 T2215;

/* KL_SPECIAL_ROUTINES [LX_RULE] */
typedef struct S2216 T2216;

/* DS_ARRAYED_LIST_CURSOR [LX_RULE] */
typedef struct S2217 T2217;

/* KL_ARRAY_ROUTINES [STRING_8] */
typedef struct S2218 T2218;

/* SPECIAL [LX_START_CONDITION] */
typedef struct S2219 T2219;

/* KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
typedef struct S2220 T2220;

/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
typedef struct S2221 T2221;

/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
typedef struct S2222 T2222;

/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
typedef struct S2223 T2223;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
typedef struct S2225 T2225;

/* DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
typedef struct S2226 T2226;

/* SPECIAL [detachable SPECIAL [NATURAL_64]] */
typedef struct S2227 T2227;

/* DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
typedef struct S2229 T2229;

/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
typedef struct S2231 T2231;

/* LX_EPSILON_TRANSITION [LX_NFA_STATE] */
typedef struct S2232 T2232;

/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
typedef struct S2235 T2235;

/* LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
typedef struct S2236 T2236;

/* LX_ACTION */
typedef struct S2238 T2238;

/* ARRAY [DS_BILINKABLE [INTEGER_32]] */
typedef struct S2239 T2239;

/* DS_BILINKABLE [INTEGER_32] */
typedef struct S2240 T2240;

/* SPECIAL [DS_BILINKABLE [INTEGER_32]] */
typedef struct S2241 T2241;

/* DS_BUBBLE_SORTER [LX_NFA_STATE] */
typedef struct S2242 T2242;

/* DS_BUBBLE_SORTER [LX_RULE] */
typedef struct S2244 T2244;

/* SPECIAL [LX_NFA_STATE] */
typedef struct S2246 T2246;

/* KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
typedef struct S2248 T2248;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
typedef struct S2249 T2249;

/* SPECIAL [LX_DFA_STATE] */
typedef struct S2251 T2251;

/* KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
typedef struct S2252 T2252;

/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
typedef struct S2253 T2253;

/* KL_ARRAY [LX_RULE] */
typedef struct S2254 T2254;

/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
typedef struct S2255 T2255;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA] */
typedef struct S2256 T2256;

/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
typedef struct S2258 T2258;

/* KL_COMPARABLE_COMPARATOR [LX_RULE] */
typedef struct S2262 T2262;

/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
typedef struct S2265 T2265;

/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2268 T2268;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2269 T2269;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2270 T2270;

/* DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
typedef struct S2271 T2271;

/* KL_ARRAY [STRING_8] */
typedef struct S2272 T2272;

/* DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
typedef struct S2274 T2274;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1* p1; /* pointer */
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2* p1; /* pointer */
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T3* p1; /* pointer */
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T4* p1; /* pointer */
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T5* p1; /* pointer */
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6* p1; /* pointer */
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T7* p1; /* pointer */
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T8* p1; /* pointer */
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T9* p1; /* pointer */
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T10* p1; /* pointer */
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T11* p1; /* pointer */
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T12* p1; /* pointer */
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T13* p1; /* pointer */
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14* p1; /* pointer */
	T14 z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S39 {
	char dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb39 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T39* p1; /* pointer */
	T39 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_16] */
struct S950 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_16] */
struct Sb950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T950* p1; /* pointer */
	T950 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S949 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_8] */
struct Sb949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T949* p1; /* pointer */
	T949 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S751 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [ANY] */
struct Sb751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T751* p1; /* pointer */
	T751 z1; /* item */
};

/* Struct for type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct S534 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct Sb534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T534* p1; /* pointer */
	T534 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T2 z2[1]; /* item */
};

/* Struct for type SPECIAL [CHARACTER_32] */
struct S16 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T3 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type STRING_32 */
struct S18 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type IMMUTABLE_STRING_32 */
struct S20 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* area_lower */
	T6 a4; /* internal_hash_code */
};

/* Struct for type ISE_EXCEPTION_MANAGER */
struct S21 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type GEC */
struct S25 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* error_handler */
	T0* a3; /* version_flag */
	T0* a4; /* ecf_filename */
	T0* a5; /* last_system */
	T0* a6; /* target_option */
	T0* a7; /* setting_option */
	T0* a8; /* capability_option */
	T0* a9; /* variable_option */
	T0* a10; /* finalize_flag */
	T0* a11; /* gelint_flag */
	T0* a12; /* ise_option */
	T0* a13; /* catcall_option */
	T0* a14; /* c_compile_option */
	T0* a15; /* split_option */
	T0* a16; /* split_size_option */
	T0* a17; /* new_instance_types_option */
	T0* a18; /* gc_option */
	T0* a19; /* thread_option */
	T0* a20; /* silent_flag */
	T0* a21; /* no_benchmark_flag */
	T0* a22; /* nested_benchmark_flag */
	T0* a23; /* metrics_flag */
	T0* a24; /* verbose_flag */
	T0* a25; /* ise_version */
	T0* a26; /* override_settings */
	T0* a27; /* override_capabilities */
	T0* a28; /* override_variables */
	T1 a29; /* ecf_gelint_option */
	T0* a30; /* new_instance_types */
	T6 a31; /* split_size */
};

/* Struct for type CELL [detachable EXCEPTION] */
struct S26 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type HASH_TABLE [INTEGER_32, INTEGER_32] */
struct S27 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T6 a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T6 a14; /* ht_deleted_item */
	T6 a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
struct S28 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type CELL [NO_MORE_MEMORY] */
struct S29 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type C_STRING */
struct S30 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
struct S31 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
	T6 z2;
	T6 z3;
	T0* z4;
	T0* z5;
	T0* z6;
	T0* z7;
	T0* z8;
	T0* z9;
	T6 z10;
	T1 z11;
};

/* Struct for type KL_ARGUMENTS */
struct S32 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* program_name */
};

/* Struct for type ARRAY [STRING_8] */
struct S33 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [STRING_8] */
struct S34 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EXCEPTIONS */
struct S35 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type EXCEPTIONS */
struct S36 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STANDARD_FILES */
struct S37 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDERR_FILE */
struct S38 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ERROR_HANDLER */
struct S41 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_verbose */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_ge */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S42 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T0* a2; /* last_string */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* character_buffer */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* last_string_32 */
	T0* a10; /* internal_name */
	T0* a11; /* internal_detachable_name_pointer */
};

/* Struct for type ET_ISE_VARIABLES */
struct S43 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type AP_FLAG */
struct S44 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type ET_SYSTEM */
struct S45 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* integer_type */
	T0* a2; /* boolean_type */
	T0* a3; /* character_type */
	T0* a4; /* character_32_type */
	T0* a5; /* implicit_attachment_type_mark */
	T0* a6; /* current_system */
	T0* a7; /* tuple_type */
	T0* a8; /* pointer_type */
	T0* a9; /* system_object_parents */
	T0* a10; /* any_parents */
	T0* a11; /* system_object_type */
	T0* a12; /* any_type */
	T0* a13; /* register_class_mutex */
	T0* a14; /* external_include_pathnames */
	T0* a15; /* external_object_pathnames */
	T0* a16; /* external_library_pathnames */
	T0* a17; /* external_make_pathnames */
	T0* a18; /* external_resource_pathnames */
	T0* a19; /* external_cflags */
	T0* a20; /* external_linker_flags */
	T1 a21; /* console_application_mode */
	T1 a22; /* total_order_on_reals_mode */
	T1 a23; /* attachment_type_conformance_mode */
	T1 a24; /* scoop_mode */
	T0* a25; /* universe */
	T0* a26; /* name */
	T0* a27; /* libraries */
	T0* a28; /* clusters */
	T0* a29; /* dotnet_assemblies */
	T0* a30; /* master_classes */
	T0* a31; /* master_class_mutex */
	T0* a32; /* system_name */
	T0* a33; /* detachable_any_type */
	T0* a34; /* detachable_separate_any_type */
	T0* a35; /* any_parent */
	T0* a36; /* any_clients */
	T0* a37; /* detachable_tuple_type */
	T0* a38; /* tuple_identity_type */
	T0* a39; /* unfolded_empty_tuple_actual_parameters */
	T0* a40; /* array_any_type */
	T0* a41; /* array_detachable_any_type */
	T0* a42; /* array_none_type */
	T0* a43; /* array_identity_type */
	T0* a44; /* character_8_type */
	T0* a45; /* character_8_convert_feature */
	T0* a46; /* character_32_convert_feature */
	T0* a47; /* double_type */
	T0* a48; /* exception_type */
	T0* a49; /* detachable_exception_type */
	T0* a50; /* exception_manager_type */
	T0* a51; /* function_identity_any_type */
	T0* a52; /* immutable_string_8_type */
	T0* a53; /* immutable_string_32_type */
	T0* a54; /* integer_8_type */
	T0* a55; /* integer_8_convert_feature */
	T0* a56; /* integer_16_type */
	T0* a57; /* integer_16_convert_feature */
	T0* a58; /* integer_32_type */
	T0* a59; /* integer_32_convert_feature */
	T0* a60; /* integer_64_type */
	T0* a61; /* integer_64_convert_feature */
	T0* a62; /* ise_exception_manager_type */
	T0* a63; /* iterable_detachable_separate_any_type */
	T0* a64; /* natural_type */
	T0* a65; /* natural_8_type */
	T0* a66; /* natural_8_convert_feature */
	T0* a67; /* natural_16_type */
	T0* a68; /* natural_16_convert_feature */
	T0* a69; /* natural_32_type */
	T0* a70; /* natural_32_convert_feature */
	T0* a71; /* natural_64_type */
	T0* a72; /* natural_64_convert_feature */
	T0* a73; /* none_type */
	T0* a74; /* detachable_none_type */
	T0* a75; /* predicate_identity_type */
	T0* a76; /* procedure_identity_type */
	T0* a77; /* real_type */
	T0* a78; /* real_32_type */
	T0* a79; /* real_32_convert_feature */
	T0* a80; /* real_64_type */
	T0* a81; /* real_64_convert_feature */
	T0* a82; /* routine_identity_type */
	T0* a83; /* special_any_type */
	T0* a84; /* special_detachable_any_type */
	T0* a85; /* special_identity_type */
	T0* a86; /* string_type */
	T0* a87; /* detachable_string_type */
	T0* a88; /* string_8_type */
	T0* a89; /* detachable_string_8_type */
	T0* a90; /* string_8_convert_feature */
	T0* a91; /* string_32_type */
	T0* a92; /* string_32_convert_feature */
	T0* a93; /* system_string_type */
	T0* a94; /* type_detachable_any_type */
	T0* a95; /* detachable_type_exception_type */
	T0* a96; /* type_detachable_exception_type */
	T0* a97; /* type_detachable_like_current_type */
	T0* a98; /* type_identity_type */
	T0* a99; /* typed_pointer_identity_type */
	T0* a100; /* wide_character_type */
	T1 a101; /* is_read_only */
	T6 a102; /* registered_class_count */
	T1 a103; /* use_obsolete_syntax_mode */
	T1 a104; /* obsolete_iteration_mode */
	T6 a105; /* default_create_seed */
	T6 a106; /* copy_seed */
	T6 a107; /* twin_seed */
	T6 a108; /* is_equal_seed */
	T6 a109; /* routine_call_seed */
	T6 a110; /* function_item_seed */
	T6 a111; /* dispose_seed */
	T6 a112; /* iterable_new_cursor_seed */
	T6 a113; /* iteration_cursor_item_seed */
	T6 a114; /* iteration_cursor_after_seed */
	T6 a115; /* iteration_cursor_forth_seed */
	T6 a116; /* special_item_seed */
	T1 a117; /* target_type_attachment_mode */
	T1 a118; /* is_dotnet */
	T1 a119; /* obsolete_routine_type_mode */
};

/* Struct for type AP_PARSER */
struct S47 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* parameters_description */
	T0* a5; /* help_option */
	T0* a6; /* error_handler */
	T0* a7; /* application_description */
	T0* a8; /* current_options */
	T1 a9; /* is_first_option */
	T0* a10; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S48 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* introduction_option */
	T0* a5; /* parameters_description */
	T0* a6; /* internal_cursor */
};

/* Struct for type AP_STRING_OPTION */
struct S49 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* has_default_parameter */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
	T2 a12; /* short_form */
};

/* Struct for type UT_VERSION */
struct S51 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S52 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* possible_values */
	T0* a5; /* parameter_description */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
	T2 a12; /* short_form */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S53 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T1 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_hidden */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T2 a11; /* short_form */
};

/* Struct for type AP_INTEGER_OPTION */
struct S54 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T6 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T2 a7; /* short_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S58 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_verbose */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_ge */
};

/* Struct for type ET_ECF_SYSTEM_PARSER */
struct S60 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* override_settings */
	T0* a4; /* override_capabilities */
	T0* a5; /* override_variables */
	T0* a6; /* parsed_libraries */
	T0* a7; /* parsed_dotnet_assemblies */
	T0* a8; /* redirected_locations */
	T0* a9; /* xml_parser */
	T0* a10; /* tree_pipe */
	T0* a11; /* error_handler */
	T0* a12; /* ise_version */
	T0* a13; /* ise_eiffel_to_gobo_uuid_mappings */
};

/* Struct for type ET_ECF_ERROR_HANDLER */
struct S61 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_ECF_SETTINGS */
struct S62 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_settings */
	T0* a2; /* secondary_settings */
};

/* Struct for type ET_ECF_SYSTEM */
struct S63 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* register_class_mutex */
	T0* a4; /* external_include_pathnames */
	T0* a5; /* external_object_pathnames */
	T0* a6; /* external_library_pathnames */
	T0* a7; /* external_make_pathnames */
	T0* a8; /* external_resource_pathnames */
	T0* a9; /* external_cflags */
	T0* a10; /* external_linker_flags */
	T1 a11; /* console_application_mode */
	T1 a12; /* total_order_on_reals_mode */
	T0* a13; /* current_system */
	T0* a14; /* universe */
	T0* a15; /* libraries */
	T0* a16; /* clusters */
	T0* a17; /* dotnet_assemblies */
	T0* a18; /* implicit_attachment_type_mark */
	T0* a19; /* master_classes */
	T0* a20; /* master_class_mutex */
	T0* a21; /* system_name */
	T0* a22; /* any_type */
	T0* a23; /* detachable_any_type */
	T0* a24; /* detachable_separate_any_type */
	T0* a25; /* any_parent */
	T0* a26; /* any_parents */
	T0* a27; /* any_clients */
	T0* a28; /* tuple_type */
	T0* a29; /* detachable_tuple_type */
	T0* a30; /* tuple_identity_type */
	T0* a31; /* unfolded_empty_tuple_actual_parameters */
	T0* a32; /* array_any_type */
	T0* a33; /* array_detachable_any_type */
	T0* a34; /* array_none_type */
	T0* a35; /* array_identity_type */
	T0* a36; /* boolean_type */
	T0* a37; /* character_type */
	T0* a38; /* character_8_type */
	T0* a39; /* character_8_convert_feature */
	T0* a40; /* character_32_type */
	T0* a41; /* character_32_convert_feature */
	T0* a42; /* double_type */
	T0* a43; /* exception_type */
	T0* a44; /* detachable_exception_type */
	T0* a45; /* exception_manager_type */
	T0* a46; /* function_identity_any_type */
	T0* a47; /* immutable_string_8_type */
	T0* a48; /* immutable_string_32_type */
	T0* a49; /* integer_type */
	T0* a50; /* integer_8_type */
	T0* a51; /* integer_8_convert_feature */
	T0* a52; /* integer_16_type */
	T0* a53; /* integer_16_convert_feature */
	T0* a54; /* integer_32_type */
	T0* a55; /* integer_32_convert_feature */
	T0* a56; /* integer_64_type */
	T0* a57; /* integer_64_convert_feature */
	T0* a58; /* ise_exception_manager_type */
	T0* a59; /* iterable_detachable_separate_any_type */
	T0* a60; /* natural_type */
	T0* a61; /* natural_8_type */
	T0* a62; /* natural_8_convert_feature */
	T0* a63; /* natural_16_type */
	T0* a64; /* natural_16_convert_feature */
	T0* a65; /* natural_32_type */
	T0* a66; /* natural_32_convert_feature */
	T0* a67; /* natural_64_type */
	T0* a68; /* natural_64_convert_feature */
	T0* a69; /* none_type */
	T0* a70; /* detachable_none_type */
	T0* a71; /* pointer_type */
	T0* a72; /* predicate_identity_type */
	T0* a73; /* procedure_identity_type */
	T0* a74; /* real_type */
	T0* a75; /* real_32_type */
	T0* a76; /* real_32_convert_feature */
	T0* a77; /* real_64_type */
	T0* a78; /* real_64_convert_feature */
	T0* a79; /* routine_identity_type */
	T0* a80; /* special_any_type */
	T0* a81; /* special_detachable_any_type */
	T0* a82; /* special_identity_type */
	T0* a83; /* string_type */
	T0* a84; /* detachable_string_type */
	T0* a85; /* string_8_type */
	T0* a86; /* detachable_string_8_type */
	T0* a87; /* string_8_convert_feature */
	T0* a88; /* string_32_type */
	T0* a89; /* string_32_convert_feature */
	T0* a90; /* system_object_type */
	T0* a91; /* system_object_parents */
	T0* a92; /* system_string_type */
	T0* a93; /* type_detachable_any_type */
	T0* a94; /* detachable_type_exception_type */
	T0* a95; /* type_detachable_exception_type */
	T0* a96; /* type_detachable_like_current_type */
	T0* a97; /* type_identity_type */
	T0* a98; /* typed_pointer_identity_type */
	T0* a99; /* wide_character_type */
	T1 a100; /* is_read_only */
	T6 a101; /* registered_class_count */
	T0* a102; /* targets */
	T0* a103; /* library_target */
	T0* a104; /* selected_target */
	T0* a105; /* root_type */
	T0* a106; /* root_creation */
	T6 a107; /* default_create_seed */
	T1 a108; /* inlining_mode */
	T6 a109; /* inlining_size */
	T1 a110; /* scoop_mode */
	T1 a111; /* attachment_type_conformance_mode */
	T1 a112; /* use_boehm_gc */
	T6 a113; /* routine_call_seed */
	T6 a114; /* function_item_seed */
	T6 a115; /* dispose_seed */
	T6 a116; /* is_equal_seed */
	T1 a117; /* trace_mode */
	T1 a118; /* exception_trace_mode */
	T6 a119; /* twin_seed */
	T1 a120; /* line_generation_mode */
	T1 a121; /* multithreaded_mode */
	T6 a122; /* copy_seed */
	T0* a123; /* ecf_namespace */
	T0* a124; /* ecf_version */
	T0* a125; /* description */
	T0* a126; /* notes */
	T0* a127; /* uuid */
	T1 a128; /* is_preparsed */
	T0* a129; /* scm_read_mapping_builder */
	T0* a130; /* scm_write_mapping_builder */
	T1 a131; /* use_obsolete_syntax_mode */
	T1 a132; /* obsolete_iteration_mode */
	T1 a133; /* is_dotnet */
	T1 a134; /* obsolete_routine_type_mode */
	T1 a135; /* target_type_attachment_mode */
	T6 a136; /* iterable_new_cursor_seed */
	T6 a137; /* iteration_cursor_item_seed */
	T6 a138; /* iteration_cursor_after_seed */
	T6 a139; /* iteration_cursor_forth_seed */
	T6 a140; /* special_item_seed */
};

/* Struct for type ET_ECF_TARGET */
struct S64 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* settings */
	T0* a2; /* capabilities */
	T0* a3; /* options */
	T0* a4; /* system_config */
	T0* a5; /* root */
	T0* a6; /* variables */
	T0* a7; /* name */
	T0* a8; /* parent */
	T0* a9; /* description */
	T0* a10; /* precompiled_library */
	T0* a11; /* version */
	T1 a12; /* is_abstract */
	T0* a13; /* clusters */
	T0* a14; /* libraries */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* file_rules */
	T0* a17; /* class_mappings */
	T0* a18; /* external_cflags */
	T0* a19; /* external_includes */
	T0* a20; /* external_libraries */
	T0* a21; /* external_linker_flags */
	T0* a22; /* external_makes */
	T0* a23; /* external_objects */
	T0* a24; /* external_resources */
	T0* a25; /* pre_compile_actions */
	T0* a26; /* post_compile_actions */
	T0* a27; /* notes */
};

/* Struct for type ET_ECF_CAPABILITIES */
struct S66 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_use_capabilities */
	T0* a2; /* primary_support_capabilities */
	T0* a3; /* secondary_capabilities */
};

/* Struct for type ET_ECF_VARIABLES */
struct S67 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* secondary_variables */
	T0* a2; /* primary_variables */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S68 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dynamic_types */
	T1 a3; /* catcall_error_mode */
	T0* a4; /* current_system */
	T0* a5; /* system_processor */
	T0* a6; /* dynamic_generic_types_by_name */
	T0* a7; /* null_dynamic_type_set_builder */
	T1 a8; /* full_class_checking */
	T1 a9; /* catcall_warning_mode */
	T0* a10; /* new_instance_types */
	T0* a11; /* dynamic_type_set_builder */
	T0* a12; /* unknown_type */
	T0* a13; /* boolean_type */
	T0* a14; /* character_8_type */
	T0* a15; /* character_32_type */
	T0* a16; /* immutable_string_8_type */
	T0* a17; /* immutable_string_32_type */
	T0* a18; /* integer_8_type */
	T0* a19; /* integer_16_type */
	T0* a20; /* integer_32_type */
	T0* a21; /* integer_64_type */
	T0* a22; /* natural_8_type */
	T0* a23; /* natural_16_type */
	T0* a24; /* natural_32_type */
	T0* a25; /* natural_64_type */
	T0* a26; /* real_32_type */
	T0* a27; /* real_64_type */
	T0* a28; /* pointer_type */
	T0* a29; /* string_8_type */
	T0* a30; /* string_32_type */
	T0* a31; /* special_character_8_type */
	T0* a32; /* special_character_32_type */
	T0* a33; /* ise_exception_manager_type */
	T0* a34; /* any_type */
	T0* a35; /* none_type */
	T0* a36; /* root_type */
	T0* a37; /* root_creation_procedure */
	T0* a38; /* special_count_feature */
	T0* a39; /* special_capacity_feature */
	T0* a40; /* special_item_feature */
	T0* a41; /* array_area_feature */
	T0* a42; /* array_lower_feature */
	T0* a43; /* array_upper_feature */
	T0* a44; /* typed_pointer_to_pointer_feature */
	T0* a45; /* routine_closed_operands_feature */
	T0* a46; /* routine_rout_disp_feature */
	T0* a47; /* routine_set_rout_disp_final_feature */
	T0* a48; /* ise_exception_manager_init_exception_manager_feature */
	T0* a49; /* ise_exception_manager_last_exception_feature */
	T0* a50; /* ise_exception_manager_once_raise_feature */
	T0* a51; /* ise_exception_manager_set_exception_data_feature */
	T0* a52; /* ise_runtime_type_conforms_to_feature */
	T1 a53; /* in_dynamic_primary_type */
	T0* a54; /* ise_runtime_new_type_instance_of_feature */
	T1 a55; /* in_create_meta_type */
	T1 a56; /* all_attributes_used */
	T0* a57; /* ise_runtime_reference_field_feature */
	T0* a58; /* ise_runtime_set_reference_field_feature */
};

/* Struct for type ET_SYSTEM_PROCESSOR */
struct S69 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* interface_checker */
	T0* a2; /* stop_request */
	T0* a3; /* eiffel_parser */
	T0* a4; /* error_handler */
	T0* a5; /* implementation_checker */
	T1 a6; /* benchmark_shown */
	T0* a7; /* ise_version */
	T0* a8; /* eiffel_preparser */
	T0* a9; /* master_class_checker */
	T0* a10; /* provider_checker */
	T0* a11; /* ancestor_builder */
	T0* a12; /* feature_flattener */
	T0* a13; /* processed_class_count_stack */
	T0* a14; /* ast_factory */
	T0* a15; /* dotnet_assembly_consumer */
	T0* a16; /* ecma_version */
	T1 a17; /* nested_benchmark_shown */
	T1 a18; /* metrics_shown */
	T1 a19; /* flat_mode */
	T1 a20; /* flat_dbc_mode */
	T1 a21; /* preparse_shallow_mode */
	T1 a22; /* preparse_single_mode */
	T1 a23; /* preparse_multiple_mode */
	T1 a24; /* unknown_builtin_reported */
	T1 a25; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a26; /* use_attribute_keyword */
	T1 a27; /* use_note_keyword */
	T1 a28; /* use_reference_keyword */
	T1 a29; /* use_attached_keyword */
	T1 a30; /* use_detachable_keyword */
	T1 a31; /* cluster_dependence_enabled */
	T6 a32; /* postponed_class_count */
	T6 a33; /* processed_class_count */
	T1 a34; /* preparse_override_mode */
	T1 a35; /* preparse_readonly_mode */
	T1 a36; /* suppliers_enabled */
	T1 a37; /* providers_enabled */
	T1 a38; /* use_cluster_dependence_pathnames */
};

/* Struct for type ET_C_GENERATOR */
struct S72 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* system_processor */
	T0* a5; /* current_dynamic_system */
	T0* a6; /* dynamic_types */
	T1 a7; /* short_names */
	T1 a8; /* split_mode */
	T6 a9; /* split_threshold */
	T1 a10; /* use_boehm_gc */
	T0* a11; /* system_name */
	T0* a12; /* current_file */
	T0* a13; /* header_file */
	T0* a14; /* current_type */
	T0* a15; /* current_feature */
	T0* a16; /* extra_dynamic_type_sets */
	T0* a17; /* current_dynamic_type_sets */
	T0* a18; /* current_function_header_buffer */
	T0* a19; /* current_function_body_buffer */
	T0* a20; /* current_separate_function_header_buffer */
	T0* a21; /* current_separate_function_body_buffer */
	T0* a22; /* temp_variables */
	T0* a23; /* used_temp_variables */
	T0* a24; /* free_temp_variables */
	T0* a25; /* frozen_temp_variables */
	T0* a26; /* volatile_temp_variables */
	T0* a27; /* unused_equality_expressions */
	T0* a28; /* unused_equality_types */
	T0* a29; /* unused_object_equality_types */
	T0* a30; /* unused_unqualified_call_expressions */
	T0* a31; /* unused_qualified_call_expressions */
	T0* a32; /* unused_actual_argument_lists */
	T0* a33; /* unused_result_expressions */
	T0* a34; /* unused_identifiers */
	T0* a35; /* conforming_types */
	T0* a36; /* non_conforming_types */
	T0* a37; /* equality_type_set */
	T0* a38; /* equality_common_types */
	T0* a39; /* equality_common_reference_types */
	T0* a40; /* unused_standalone_type_sets */
	T0* a41; /* operand_stack */
	T0* a42; /* call_operands */
	T0* a43; /* attachment_dynamic_type_ids */
	T0* a44; /* target_dynamic_type_ids */
	T0* a45; /* target_dynamic_types */
	T0* a46; /* standalone_type_sets */
	T0* a47; /* deep_twin_types */
	T0* a48; /* deep_equal_types */
	T0* a49; /* deep_feature_target_type_sets */
	T0* a50; /* current_object_tests */
	T0* a51; /* current_object_test_locals */
	T0* a52; /* current_iteration_cursors */
	T0* a53; /* current_inline_separate_arguments */
	T0* a54; /* current_equalities */
	T0* a55; /* current_agents */
	T0* a56; /* agent_open_operands */
	T0* a57; /* agent_closed_operands */
	T0* a58; /* agent_target */
	T0* a59; /* agent_arguments */
	T0* a60; /* agent_instruction */
	T0* a61; /* agent_expression */
	T0* a62; /* agent_inline_separate_argument */
	T0* a63; /* agent_controlled_target_instruction */
	T0* a64; /* agent_expression_assignment */
	T0* a65; /* agent_controlled_target_expression */
	T0* a66; /* agent_closed_operands_type */
	T0* a67; /* agent_manifest_tuple */
	T0* a68; /* separate_call_arguments */
	T0* a69; /* separate_call_instruction */
	T0* a70; /* separate_call_expression */
	T0* a71; /* separate_arguments */
	T0* a72; /* formal_arguments */
	T0* a73; /* manifest_array_types */
	T0* a74; /* big_manifest_array_types */
	T0* a75; /* manifest_tuple_types */
	T0* a76; /* once_features */
	T0* a77; /* once_per_process_counts */
	T0* a78; /* once_per_thread_counts */
	T0* a79; /* constant_features */
	T0* a80; /* inline_constants */
	T0* a81; /* dispose_procedures */
	T0* a82; /* dynamic_type_id_set_names */
	T0* a83; /* used_inlined_operands */
	T0* a84; /* unused_inlined_operands */
	T0* a85; /* used_call_contexts */
	T0* a86; /* unused_call_contexts */
	T6 a87; /* max_nested_inlining_count */
	T0* a88; /* called_features */
	T0* a89; /* called_static_features */
	T0* a90; /* inlined_features */
	T0* a91; /* included_header_filenames */
	T0* a92; /* included_cpp_header_filenames */
	T0* a93; /* included_runtime_header_files */
	T0* a94; /* included_runtime_c_files */
	T0* a95; /* c_filenames */
	T1 a96; /* finalize_mode */
	T0* a97; /* locals_written_in_body */
	T0* a98; /* locals_written_in_rescue */
	T0* a99; /* locals_written */
	T0* a100; /* locals_read_in_body */
	T0* a101; /* locals_read_in_rescue */
	T0* a102; /* locals_read */
	T0* a103; /* volatile_locals */
	T0* a104; /* volatile_object_test_locals */
	T0* a105; /* volatile_iteration_cursors */
	T0* a106; /* volatile_inline_separate_arguments */
	T0* a107; /* external_c_regexp */
	T0* a108; /* external_c_macro_regexp */
	T0* a109; /* external_c_struct_regexp */
	T0* a110; /* external_c_inline_regexp */
	T0* a111; /* old_external_c_regexp */
	T0* a112; /* old_external_c_macro_regexp */
	T0* a113; /* old_external_c_struct_regexp */
	T0* a114; /* external_cpp_regexp */
	T0* a115; /* external_cpp_macro_regexp */
	T0* a116; /* external_cpp_struct_regexp */
	T0* a117; /* external_cpp_inline_regexp */
	T0* a118; /* external_dllwin_regexp */
	T0* a119; /* old_external_dllwin32_regexp */
	T1 a120; /* in_static_feature */
	T1 a121; /* type_info_ancestors_used */
	T1 a122; /* type_info_attributes_used */
	T1 a123; /* type_info_attribute_name_used */
	T1 a124; /* type_info_attribute_type_id_used */
	T1 a125; /* type_info_attribute_offset_used */
	T1 a126; /* type_info_generator_used */
	T1 a127; /* type_info_name_used */
	T1 a128; /* type_info_generic_parameters_used */
	T1 a129; /* type_info_object_size_used */
	T0* a130; /* c_file */
	T6 a131; /* c_file_size */
	T6 a132; /* current_separate_call_count */
	T0* a133; /* cpp_file */
	T6 a134; /* cpp_file_size */
	T6 a135; /* indentation */
	T0* a136; /* call_target_type */
	T0* a137; /* assignment_target */
	T1 a138; /* in_operand */
	T1 a139; /* in_procedure_call_target */
	T0* a140; /* current_agent */
	T0* a141; /* inlining_context */
	T1 a142; /* has_rescue */
	T1 a143; /* result_written */
	T1 a144; /* result_read */
	T1 a145; /* call_target_check_void */
	T6 a146; /* nested_inlining_count */
	T1 a147; /* volatile_result */
	T1 a148; /* has_retry */
};

/* Struct for type DT_DATE_TIME */
struct S73 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S75 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* internal_cursor */
	T6 a3; /* count */
	T0* a4; /* item_storage */
	T0* a5; /* equality_tester */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* hash_function */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S76 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* dynamic_type_set_count */
	T1 a2; /* has_fatal_error */
	T0* a3; /* current_dynamic_system */
	T0* a4; /* feature_checker */
	T0* a5; /* current_dynamic_type */
	T0* a6; /* current_dynamic_feature */
	T0* a7; /* dynamic_type_sets */
	T0* a8; /* object_id_dynamic_type_set */
	T0* a9; /* constant_indexes */
	T1 a10; /* catcall_error_mode */
	T1 a11; /* catcall_warning_mode */
	T1 a12; /* no_debug */
	T1 a13; /* no_assertion */
	T1 a14; /* is_built */
	T0* a15; /* alive_conforming_descendants_per_type */
	T0* a16; /* type_checker */
	T0* a17; /* current_type */
	T0* a18; /* current_class */
	T0* a19; /* current_feature */
	T0* a20; /* current_feature_impl */
	T0* a21; /* current_class_impl */
	T0* a22; /* enclosing_inline_agents */
	T0* a23; /* unused_overloaded_procedures_list */
	T0* a24; /* unused_overloaded_queries_list */
	T0* a25; /* unused_overloaded_features_list */
	T0* a26; /* unused_call_infos */
	T0* a27; /* unused_contexts */
	T0* a28; /* current_context */
	T0* a29; /* current_target_type */
	T0* a30; /* current_object_test_types */
	T0* a31; /* current_object_test_scope */
	T0* a32; /* object_test_scope_builder */
	T0* a33; /* current_iteration_cursor_types */
	T0* a34; /* current_iteration_item_types */
	T0* a35; /* current_iteration_item_scope */
	T0* a36; /* current_inline_separate_argument_types */
	T0* a37; /* current_inline_separate_argument_scope */
	T0* a38; /* current_initialization_scope */
	T0* a39; /* current_attachment_scope */
	T0* a40; /* attachment_scope_builder */
	T0* a41; /* unused_attachment_scopes */
	T0* a42; /* assertions_by_feature */
	T0* a43; /* common_ancestor_type_list */
	T0* a44; /* note_term_list */
	T0* a45; /* vape_non_descendant_clients */
	T0* a46; /* vape_creation_clients */
	T0* a47; /* vape_client */
	T0* a48; /* unused_adapted_base_classes */
	T0* a49; /* adapted_base_class_checker */
	T0* a50; /* system_processor */
	T6 a51; /* current_index */
	T6 a52; /* result_index */
	T6 a53; /* attached_result_index */
	T6 a54; /* void_index */
	T1 a55; /* in_precursor */
	T1 a56; /* in_static_feature */
	T1 a57; /* in_rescue */
	T0* a58; /* current_inline_agent */
	T0* a59; /* supplier_handler */
	T1 a60; /* in_invariant */
	T1 a61; /* in_precondition */
	T1 a62; /* in_postcondition */
	T1 a63; /* in_check_instruction */
	T0* a64; /* precursor_procedures */
	T0* a65; /* precursor_queries */
};

/* Struct for type ET_CLASS_TYPE */
struct S77 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
	T0* a4; /* named_base_class */
	T1 a5; /* tuple_actual_parameters_unfolded_1 */
	T1 a6; /* tuple_actual_parameters_unfolded_2 */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S78 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLASS */
struct S79 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* group */
	T0* a2; /* status_mutex */
	T1 a3; /* unprotected_is_parsed */
	T1 a4; /* unprotected_has_syntax_error */
	T1 a5; /* unprotected_ancestors_built */
	T1 a6; /* unprotected_has_ancestors_error */
	T1 a7; /* unprotected_features_flattened */
	T1 a8; /* unprotected_has_flattening_error */
	T1 a9; /* unprotected_interface_checked */
	T1 a10; /* unprotected_has_interface_error */
	T1 a11; /* unprotected_implementation_checked */
	T1 a12; /* unprotected_has_implementation_error */
	T0* a13; /* name */
	T6 a14; /* id */
	T0* a15; /* ancestors */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* queries */
	T0* a18; /* procedures */
	T0* a19; /* class_keyword */
	T0* a20; /* end_keyword */
	T0* a21; /* processing_mutex */
	T0* a22; /* formal_parameter_types_mutex */
	T0* a23; /* named_base_class */
	T6 a24; /* time_stamp */
	T8 a25; /* class_code */
	T1 a26; /* tuple_actual_parameters_unfolded_1 */
	T1 a27; /* tuple_actual_parameters_unfolded_2 */
	T1 a28; /* is_checking_implementation */
	T0* a29; /* formal_parameters */
	T6 a30; /* index */
	T0* a31; /* class_mark */
	T1 a32; /* has_deferred_features */
	T0* a33; /* formal_parameter_types */
	T1 a34; /* is_ignored */
	T0* a35; /* parent_clauses */
	T0* a36; /* suppliers */
	T1 a37; /* redeclared_signatures_checked */
	T0* a38; /* invariants */
	T0* a39; /* filename */
	T1 a40; /* unprotected_is_marked */
	T0* a41; /* creators */
	T0* a42; /* convert_features */
	T0* a43; /* providers */
	T1 a44; /* is_interface */
	T0* a45; /* external_keyword */
	T0* a46; /* frozen_keyword */
	T0* a47; /* feature_clauses */
	T0* a48; /* first_note_clause */
	T0* a49; /* second_note_clause */
	T6 a50; /* tuple_constraint_position */
	T0* a51; /* obsolete_message */
	T6 a52; /* registered_feature_count */
	T6 a53; /* registered_inline_constant_count */
	T0* a54; /* leading_break */
	T1 a55; /* has_utf8_bom */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
struct S81 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S82 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S84 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_MESSAGE */
struct S86 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S87 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* match_count */
	T0* a2; /* subject */
	T6 a3; /* subject_end */
	T6 a4; /* subject_start */
	T0* a5; /* offset_vector */
	T6 a6; /* offset_vector_count */
	T6 a7; /* brastart_capacity */
	T0* a8; /* brastart_vector */
	T6 a9; /* brastart_lower */
	T6 a10; /* brastart_count */
	T6 a11; /* eptr_capacity */
	T0* a12; /* eptr_vector */
	T6 a13; /* eptr_lower */
	T6 a14; /* eptr_upper */
	T0* a15; /* byte_code */
	T0* a16; /* internal_start_bits */
	T0* a17; /* pattern_buffer */
	T6 a18; /* subexpression_count */
	T0* a19; /* pattern */
	T6 a20; /* pattern_count */
	T6 a21; /* pattern_position */
	T6 a22; /* code_index */
	T6 a23; /* maxbackrefs */
	T10 a24; /* optchanged */
	T7 a25; /* first_character */
	T7 a26; /* required_character */
	T6 a27; /* regexp_countlits */
	T0* a28; /* start_bits */
	T0* a29; /* error_message */
	T1 a30; /* is_anchored */
	T0* a31; /* character_case_mapping */
	T0* a32; /* word_set */
	T6 a33; /* subject_next_start */
	T6 a34; /* error_code */
	T6 a35; /* error_position */
	T1 a36; /* is_startline */
	T1 a37; /* is_caseless */
	T1 a38; /* is_bol */
	T1 a39; /* is_eol */
	T1 a40; /* is_multiline */
	T1 a41; /* is_dotall */
	T1 a42; /* is_extended */
	T1 a43; /* is_empty_allowed */
	T1 a44; /* is_dollar_endonly */
	T1 a45; /* is_greedy */
	T1 a46; /* is_strict */
	T1 a47; /* is_ichanged */
	T6 a48; /* first_matched_index */
	T6 a49; /* eptr */
	T6 a50; /* offset_top */
	T1 a51; /* is_matching_caseless */
	T1 a52; /* is_matching_multiline */
	T1 a53; /* is_matching_dotall */
};

/* Struct for type KL_STRING_ROUTINES */
struct S88 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S91 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type AP_ERROR */
struct S92 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type KL_SHELL_COMMAND */
struct S93 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* command */
	T6 a3; /* return_code */
	T1 a4; /* is_system_code */
};

/* Struct for type GECC */
struct S94 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* error_handler */
	T0* a3; /* version_flag */
	T0* a4; /* script_filename */
	T0* a5; /* thread_option */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S95 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type VOID_TARGET */
struct S97 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ROUTINE_FAILURE */
struct S99 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* routine_name */
	T0* a4; /* class_name */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OLD_VIOLATION */
struct S101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type NO_MORE_MEMORY */
struct S103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* internal_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type INVARIANT_VIOLATION */
struct S104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T1 a3; /* is_entry */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* signal_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type IO_FAILURE */
struct S106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* internal_code */
	T6 a4; /* error_code */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_FAILURE */
struct S107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* error_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type COM_FAILURE */
struct S108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* hresult_code */
	T0* a4; /* exception_information */
	T6 a5; /* hresult */
	T0* a6; /* c_description */
	T0* a7; /* recipient_name */
	T0* a8; /* type_name */
};

/* Struct for type EIFFEL_RUNTIME_PANIC */
struct S109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* internal_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type PRECONDITION_VIOLATION */
struct S111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type POSTCONDITION_VIOLATION */
struct S112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type FLOATING_POINT_FAILURE */
struct S113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CHECK_VIOLATION */
struct S114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type BAD_INSPECT_VALUE */
struct S115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VARIANT_VIOLATION */
struct S116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type LOOP_INVARIANT_VIOLATION */
struct S117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESCUE_FAILURE */
struct S118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESUMPTION_FAILURE */
struct S119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CREATE_ON_DEFERRED */
struct S120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXTERNAL_FAILURE */
struct S121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VOID_ASSIGNED_TO_EXPANDED */
struct S122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type MISMATCH_FAILURE */
struct S124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type DEVELOPER_EXCEPTION */
struct S125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type SERIALIZATION_FAILURE */
struct S127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* return_code */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PRIMES */
struct S131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 z2[1]; /* item */
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T1 z2[1]; /* item */
};

/* Struct for type ARGUMENTS_32 */
struct S134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type MUTEX */
struct S137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* owner_thread_id */
	T14 a2; /* mutex_pointer */
};

/* Struct for type UT_ERROR_HANDLER */
struct S138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type KL_STDOUT_FILE */
struct S139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_LINKABLE [CHARACTER_8] */
struct S141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type MANAGED_POINTER */
struct S143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* item */
	T1 a2; /* is_shared */
	T6 a3; /* count */
};

/* Struct for type FILE_INFO */
struct S144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* buffered_file_info */
	T1 a2; /* is_following_symlinks */
	T1 a3; /* exists */
	T0* a4; /* internal_file_name */
	T0* a5; /* internal_name_pointer */
};

/* Struct for type ST_WORD_WRAPPER */
struct S145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type AP_ERROR_HANDLER */
struct S151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_LINKABLE [AP_OPTION] */
struct S152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable STRING_8] */
struct S154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
struct S155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EQUALITY_TESTER [STRING_8] */
struct S158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
};

/* Struct for type ET_ECF_AST_FACTORY */
struct S166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_CELL [detachable ET_ECF_SYSTEM] */
struct S167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_TARGET] */
struct S168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_TARGET]] */
struct S169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE */
struct S170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER] */
struct S171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type XM_ELEMENT */
struct S172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* parent */
	T0* a4; /* children */
};

/* Struct for type XM_POSITION_TABLE */
struct S173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
};

/* Struct for type TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
struct S174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
struct S175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
struct S176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
struct S178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T6 a10; /* capacity */
	T0* a11; /* equality_tester */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EIFFEL_PARSER */
struct S182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* dtd_callbacks */
	T0* a14; /* last_string_value */
	T0* a15; /* yyss */
	T0* a16; /* yyspecial_routines1 */
	T6 a17; /* yyvsc1 */
	T0* a18; /* yyvs1 */
	T0* a19; /* yyspecial_routines2 */
	T6 a20; /* yyvsc2 */
	T0* a21; /* yyvs2 */
	T0* a22; /* yyspecial_routines3 */
	T6 a23; /* yyvsc3 */
	T0* a24; /* yyvs3 */
	T0* a25; /* yyspecial_routines4 */
	T6 a26; /* yyvsc4 */
	T0* a27; /* yyvs4 */
	T0* a28; /* yyspecial_routines5 */
	T6 a29; /* yyvsc5 */
	T0* a30; /* yyvs5 */
	T0* a31; /* yyspecial_routines6 */
	T6 a32; /* yyvsc6 */
	T0* a33; /* yyvs6 */
	T0* a34; /* yyspecial_routines7 */
	T6 a35; /* yyvsc7 */
	T0* a36; /* yyvs7 */
	T0* a37; /* yyspecial_routines8 */
	T6 a38; /* yyvsc8 */
	T0* a39; /* yyvs8 */
	T0* a40; /* yyspecial_routines9 */
	T6 a41; /* yyvsc9 */
	T0* a42; /* yyvs9 */
	T0* a43; /* yyspecial_routines10 */
	T6 a44; /* yyvsc10 */
	T0* a45; /* yyvs10 */
	T0* a46; /* yyspecial_routines11 */
	T6 a47; /* yyvsc11 */
	T0* a48; /* yyvs11 */
	T0* a49; /* yytranslate */
	T0* a50; /* yyr1 */
	T0* a51; /* yytypes1 */
	T0* a52; /* yytypes2 */
	T0* a53; /* yydefact */
	T0* a54; /* yydefgoto */
	T0* a55; /* yypact */
	T0* a56; /* yypgoto */
	T0* a57; /* yytable */
	T0* a58; /* yycheck */
	T6 a59; /* yy_parsing_status */
	T6 a60; /* yy_suspended_yystacksize */
	T6 a61; /* yy_suspended_yystate */
	T6 a62; /* yy_suspended_yyn */
	T6 a63; /* yy_suspended_yychar1 */
	T6 a64; /* yy_suspended_index */
	T6 a65; /* yy_suspended_yyss_top */
	T6 a66; /* yy_suspended_yy_goto */
	T6 a67; /* yyssp */
	T6 a68; /* error_count */
	T1 a69; /* yy_lookahead_needed */
	T6 a70; /* yyerrstatus */
	T6 a71; /* last_token */
	T6 a72; /* yyvsp1 */
	T6 a73; /* yyvsp2 */
	T6 a74; /* yyvsp3 */
	T6 a75; /* yyvsp4 */
	T6 a76; /* yyvsp5 */
	T6 a77; /* yyvsp6 */
	T6 a78; /* yyvsp7 */
	T6 a79; /* yyvsp8 */
	T6 a80; /* yyvsp9 */
	T6 a81; /* yyvsp10 */
	T6 a82; /* yyvsp11 */
	T0* a83; /* last_detachable_any_value */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* start */
	T0* a2; /* tree */
	T0* a3; /* error */
	T0* a4; /* last */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* source_parser */
	T0* a4; /* current_element */
	T0* a5; /* namespace_cache */
	T0* a6; /* next */
};

/* Struct for type ET_ECF_STATE */
struct S187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* ise_version */
};

/* Struct for type ET_IDENTIFIER */
struct S188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* index */
	T2 a3; /* status_code */
	T0* a4; /* name */
	T6 a5; /* compressed_position */
	T6 a6; /* hash_code */
};

/* Struct for type ET_ECF_SYSTEM_CONFIG */
struct S189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* universe */
	T0* a4; /* ecf_namespace */
	T0* a5; /* ecf_version */
	T0* a6; /* description */
	T0* a7; /* notes */
	T0* a8; /* targets */
	T1 a9; /* is_read_only */
	T0* a10; /* uuid */
	T0* a11; /* library_target */
};

/* Struct for type ET_ECF_LIBRARY */
struct S191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* ecf_namespace */
	T0* a4; /* ecf_version */
	T0* a5; /* description */
	T0* a6; /* notes */
	T0* a7; /* targets */
	T1 a8; /* is_read_only */
	T0* a9; /* uuid */
	T0* a10; /* library_target */
	T0* a11; /* current_system */
	T0* a12; /* library */
	T0* a13; /* libraries */
	T0* a14; /* clusters */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* implicit_attachment_type_mark */
	T0* a17; /* master_classes */
	T0* a18; /* master_class_mutex */
	T0* a19; /* any_type */
	T0* a20; /* detachable_any_type */
	T0* a21; /* detachable_separate_any_type */
	T0* a22; /* any_parent */
	T0* a23; /* any_parents */
	T0* a24; /* any_clients */
	T0* a25; /* tuple_type */
	T0* a26; /* detachable_tuple_type */
	T0* a27; /* tuple_identity_type */
	T0* a28; /* unfolded_empty_tuple_actual_parameters */
	T0* a29; /* array_any_type */
	T0* a30; /* array_detachable_any_type */
	T0* a31; /* array_none_type */
	T0* a32; /* array_identity_type */
	T0* a33; /* boolean_type */
	T0* a34; /* character_type */
	T0* a35; /* character_8_type */
	T0* a36; /* character_8_convert_feature */
	T0* a37; /* character_32_type */
	T0* a38; /* character_32_convert_feature */
	T0* a39; /* double_type */
	T0* a40; /* exception_type */
	T0* a41; /* detachable_exception_type */
	T0* a42; /* exception_manager_type */
	T0* a43; /* function_identity_any_type */
	T0* a44; /* immutable_string_8_type */
	T0* a45; /* immutable_string_32_type */
	T0* a46; /* integer_type */
	T0* a47; /* integer_8_type */
	T0* a48; /* integer_8_convert_feature */
	T0* a49; /* integer_16_type */
	T0* a50; /* integer_16_convert_feature */
	T0* a51; /* integer_32_type */
	T0* a52; /* integer_32_convert_feature */
	T0* a53; /* integer_64_type */
	T0* a54; /* integer_64_convert_feature */
	T0* a55; /* ise_exception_manager_type */
	T0* a56; /* iterable_detachable_separate_any_type */
	T0* a57; /* natural_type */
	T0* a58; /* natural_8_type */
	T0* a59; /* natural_8_convert_feature */
	T0* a60; /* natural_16_type */
	T0* a61; /* natural_16_convert_feature */
	T0* a62; /* natural_32_type */
	T0* a63; /* natural_32_convert_feature */
	T0* a64; /* natural_64_type */
	T0* a65; /* natural_64_convert_feature */
	T0* a66; /* none_type */
	T0* a67; /* detachable_none_type */
	T0* a68; /* pointer_type */
	T0* a69; /* predicate_identity_type */
	T0* a70; /* procedure_identity_type */
	T0* a71; /* real_type */
	T0* a72; /* real_32_type */
	T0* a73; /* real_32_convert_feature */
	T0* a74; /* real_64_type */
	T0* a75; /* real_64_convert_feature */
	T0* a76; /* routine_identity_type */
	T0* a77; /* special_any_type */
	T0* a78; /* special_detachable_any_type */
	T0* a79; /* special_identity_type */
	T0* a80; /* string_type */
	T0* a81; /* detachable_string_type */
	T0* a82; /* string_8_type */
	T0* a83; /* detachable_string_8_type */
	T0* a84; /* string_8_convert_feature */
	T0* a85; /* string_32_type */
	T0* a86; /* string_32_convert_feature */
	T0* a87; /* system_object_type */
	T0* a88; /* system_object_parents */
	T0* a89; /* system_string_type */
	T0* a90; /* type_detachable_any_type */
	T0* a91; /* detachable_type_exception_type */
	T0* a92; /* type_detachable_exception_type */
	T0* a93; /* type_detachable_like_current_type */
	T0* a94; /* type_identity_type */
	T0* a95; /* typed_pointer_identity_type */
	T0* a96; /* wide_character_type */
	T0* a97; /* selected_target */
	T1 a98; /* obsolete_iteration_mode */
	T1 a99; /* obsolete_routine_type_mode */
	T1 a100; /* is_preparsed */
	T1 a101; /* use_obsolete_syntax_mode */
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type TUPLE [ET_ADAPTED_LIBRARY] */
struct S194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
struct S195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type XM_DOCUMENT */
struct S196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_element */
	T0* a2; /* children */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_ATTRIBUTE */
struct S200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
struct S202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* special_key_routines */
	T0* a15; /* key_storage */
	T0* a16; /* equality_tester */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
struct S203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* position */
	T0* a3; /* internal_cursor */
	T0* a4; /* key_storage */
	T0* a5; /* item_storage */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* equality_tester */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_ECF_TARGET_PARENT */
struct S204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* location_id */
	T0* a3; /* target */
};

/* Struct for type DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
struct S205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
struct S206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_TARGETS */
struct S207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
};

/* Struct for type DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_CELL [detachable ET_ECF_LIBRARY] */
struct S211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARY */
struct S212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* classname_prefix */
	T1 a7; /* is_read_only */
	T1 a8; /* use_application_options */
	T0* a9; /* options */
	T0* a10; /* class_options */
	T0* a11; /* class_renamings */
	T0* a12; /* visible_classes */
	T0* a13; /* conditions */
	T0* a14; /* notes */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
struct S213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_DOTNET_ASSEMBLY */
struct S216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* implicit_attachment_type_mark */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_identity_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_identity_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_identity_any_type */
	T0* a34; /* immutable_string_8_type */
	T0* a35; /* immutable_string_32_type */
	T0* a36; /* integer_type */
	T0* a37; /* integer_8_type */
	T0* a38; /* integer_8_convert_feature */
	T0* a39; /* integer_16_type */
	T0* a40; /* integer_16_convert_feature */
	T0* a41; /* integer_32_type */
	T0* a42; /* integer_32_convert_feature */
	T0* a43; /* integer_64_type */
	T0* a44; /* integer_64_convert_feature */
	T0* a45; /* ise_exception_manager_type */
	T0* a46; /* iterable_detachable_separate_any_type */
	T0* a47; /* natural_type */
	T0* a48; /* natural_8_type */
	T0* a49; /* natural_8_convert_feature */
	T0* a50; /* natural_16_type */
	T0* a51; /* natural_16_convert_feature */
	T0* a52; /* natural_32_type */
	T0* a53; /* natural_32_convert_feature */
	T0* a54; /* natural_64_type */
	T0* a55; /* natural_64_convert_feature */
	T0* a56; /* none_type */
	T0* a57; /* detachable_none_type */
	T0* a58; /* pointer_type */
	T0* a59; /* predicate_identity_type */
	T0* a60; /* procedure_identity_type */
	T0* a61; /* real_type */
	T0* a62; /* real_32_type */
	T0* a63; /* real_32_convert_feature */
	T0* a64; /* real_64_type */
	T0* a65; /* real_64_convert_feature */
	T0* a66; /* routine_identity_type */
	T0* a67; /* special_any_type */
	T0* a68; /* special_detachable_any_type */
	T0* a69; /* special_identity_type */
	T0* a70; /* string_type */
	T0* a71; /* detachable_string_type */
	T0* a72; /* string_8_type */
	T0* a73; /* detachable_string_8_type */
	T0* a74; /* string_8_convert_feature */
	T0* a75; /* string_32_type */
	T0* a76; /* string_32_convert_feature */
	T0* a77; /* system_object_type */
	T0* a78; /* system_object_parents */
	T0* a79; /* system_string_type */
	T0* a80; /* type_detachable_any_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* type_detachable_like_current_type */
	T0* a84; /* type_identity_type */
	T0* a85; /* typed_pointer_identity_type */
	T0* a86; /* wide_character_type */
	T1 a87; /* is_read_only */
	T1 a88; /* is_preparsed */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* assembly_culture */
	T0* a7; /* assembly_key */
	T0* a8; /* assembly_name */
	T0* a9; /* assembly_version */
	T0* a10; /* classname_prefix */
	T1 a11; /* is_read_only */
	T0* a12; /* options */
	T0* a13; /* class_options */
	T0* a14; /* class_renamings */
	T0* a15; /* conditions */
	T0* a16; /* notes */
	T0* a17; /* name */
	T0* a18; /* dotnet_assembly */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T0* a5; /* key_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* slots_position */
	T0* a12; /* hash_function */
	T6 a13; /* capacity */
	T0* a14; /* equality_tester */
	T6 a15; /* modulus */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* clashes */
	T0* a19; /* slots */
	T0* a20; /* special_key_routines */
};

/* Struct for type ET_ECF_ERROR */
struct S220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* system_config */
	T0* a4; /* position */
	T0* a5; /* code */
};

/* Struct for type KL_AGENT_HASH_FUNCTION [STRING_8] */
struct S221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* hash_agent */
};

/* Struct for type TUPLE [STRING_8] */
struct S222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type FUNCTION [TUPLE [STRING_8], INTEGER_32] */
struct S223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [KL_STRING_ROUTINES] */
struct S224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
struct S226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE */
struct S228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* attribute_count */
	T0* a2; /* queries */
	T1 a3; /* is_alive */
	T6 a4; /* id */
	T0* a5; /* base_type */
	T0* a6; /* base_class */
	T0* a7; /* separate_type */
	T0* a8; /* attached_separate_type */
	T0* a9; /* attached_type */
	T0* a10; /* meta_type */
	T0* a11; /* conforming_ancestors */
	T0* a12; /* procedures_by_seed */
	T0* a13; /* procedures */
	T0* a14; /* queries_by_seed */
	T1 a15; /* has_redefined_copy_routine */
	T1 a16; /* has_redefined_is_equal_routine */
	T1 a17; /* has_once_per_object_routines */
	T6 a18; /* hash_code */
	T0* a19; /* next_type */
	T1 a20; /* has_reference_attributes */
	T0* a21; /* query_calls */
	T1 a22; /* has_static */
	T0* a23; /* procedure_calls */
	T0* a24; /* equality_expressions */
	T0* a25; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T0* a4; /* equality_tester */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
struct S231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type TUPLE [ET_CLASS] */
struct S232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_CLASS]] */
struct S233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [INTEGER_32] */
struct S234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T1 a3; /* catcall_error_mode */
	T1 a4; /* catcall_warning_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
	T0* a7; /* alive_conforming_descendants_per_type */
};

/* Struct for type TUPLE [ET_DYNAMIC_SYSTEM] */
struct S236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T0* a4; /* target_type */
	T1 a5; /* is_generated */
	T1 a6; /* is_inlined */
	T8 a7; /* builtin_class_code */
	T8 a8; /* builtin_feature_code */
	T0* a9; /* result_type_set */
	T1 a10; /* is_copy_routine */
	T1 a11; /* is_is_equal_routine */
	T0* a12; /* procedure_calls */
	T0* a13; /* query_calls */
	T1 a14; /* is_regular */
	T0* a15; /* first_precursor */
	T1 a16; /* is_creation */
	T0* a17; /* other_precursors */
	T1 a18; /* is_built */
	T1 a19; /* is_address */
	T1 a20; /* is_static_generated */
	T1 a21; /* is_separate_creation */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T6 a3; /* index */
	T0* a4; /* implementation_class */
};

/* Struct for type ARRAY [ET_TYPE] */
struct S249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T6 a2; /* first_seed */
	T0* a3; /* iteration_components */
	T0* a4; /* implementation_class */
	T0* a5; /* object_tests */
	T0* a6; /* implementation_feature */
	T0* a7; /* other_seeds */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T0* a10; /* preconditions */
	T6 a11; /* hash_code */
	T8 a12; /* builtin_class_code */
	T8 a13; /* builtin_feature_code */
	T0* a14; /* postconditions */
	T0* a15; /* assigner */
	T0* a16; /* frozen_keyword */
	T0* a17; /* extended_name */
	T0* a18; /* declared_type */
	T0* a19; /* language */
	T0* a20; /* obsolete_message */
	T0* a21; /* alias_clause */
	T0* a22; /* clients */
	T0* a23; /* is_keyword */
	T0* a24; /* end_keyword */
	T0* a25; /* semicolon */
	T0* a26; /* feature_clause */
	T0* a27; /* first_note */
	T0* a28; /* inline_separate_arguments */
	T1 a29; /* validity_checked */
	T1 a30; /* has_validity_error */
	T6 a31; /* id */
	T6 a32; /* version */
	T0* a33; /* synonym */
};

/* Struct for type ET_TUPLE_TYPE */
struct S259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T0* a2; /* type_mark */
	T0* a3; /* named_base_class */
	T0* a4; /* tuple_keyword */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type ET_QUERY_LIST */
struct S262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
	T6 a4; /* declared_attribute_count */
	T6 a5; /* attribute_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENTS */
struct S264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* separate_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_COMPOUND */
struct S265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_RESULT */
struct S266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [BOOLEAN] */
struct S272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
struct S273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
struct S274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
struct S277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
struct S278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_RESULT] */
struct S279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
struct S280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* clashes */
	T0* a4; /* slots */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T0* a3; /* dynamic_types */
	T1 a4; /* is_never_void */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
struct S285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* capacity */
	T6 a5; /* count */
	T6 a6; /* free_slot */
	T6 a7; /* slots_position */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
struct S287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T6 a3; /* position */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
struct S288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
struct S289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_CURRENT */
struct S293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type ET_QUALIFIED_CALL_INSTRUCTION */
struct S295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type ET_QUALIFIED_CALL_EXPRESSION */
struct S298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* arguments */
	T0* a4; /* qualified_name */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT */
struct S299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* expression */
	T0* a2; /* as_keyword */
	T0* a3; /* name */
};

/* Struct for type ET_INLINE_SEPARATE_INSTRUCTION */
struct S302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_ASSIGNMENT */
struct S303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T1 a4; /* no_target_twin */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
	T6 a5; /* index */
};

/* Struct for type ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
struct S306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
struct S309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
struct S311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S312 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
struct S314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S315 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
struct S317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_FEATURE] */
struct S319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* mode */
	T14 a3; /* file_pointer */
	T1 a4; /* descriptor_available */
	T0* a5; /* last_string_32 */
	T0* a6; /* last_string */
	T0* a7; /* internal_name */
	T0* a8; /* internal_detachable_name_pointer */
};

/* Struct for type ET_IMPLICIT_TYPE_MARK */
struct S322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_expanded_mark */
	T1 a2; /* is_separate_mark */
	T1 a3; /* is_attached_mark */
	T1 a4; /* is_reference_mark */
	T1 a5; /* is_detachable_mark */
	T1 a6; /* is_non_separate_mark */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* separate_type */
	T0* a8; /* attached_separate_type */
	T0* a9; /* attached_type */
	T0* a10; /* meta_type */
	T0* a11; /* conforming_ancestors */
	T0* a12; /* queries_by_seed */
	T0* a13; /* procedures_by_seed */
	T0* a14; /* procedures */
	T1 a15; /* has_redefined_copy_routine */
	T0* a16; /* item_type_sets */
	T1 a17; /* has_redefined_is_equal_routine */
	T1 a18; /* has_once_per_object_routines */
	T1 a19; /* has_reference_attributes */
	T6 a20; /* hash_code */
	T0* a21; /* next_type */
	T0* a22; /* query_calls */
	T1 a23; /* has_static */
	T0* a24; /* procedure_calls */
	T0* a25; /* equality_expressions */
	T0* a26; /* object_equality_expressions */
};

/* Struct for type DS_STRING_HASH_TABLE */
struct S324 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T0* a5; /* key_equality_tester */
	T0* a6; /* slots */
	T0* a7; /* hash_function */
	T0* a8; /* key_storage */
	T0* a9; /* clashes */
	T6 a10; /* count */
	T6 a11; /* capacity */
	T6 a12; /* slots_position */
	T6 a13; /* free_slot */
	T6 a14; /* last_position */
	T0* a15; /* internal_keys */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* equality_tester */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_static_generated */
	T0* a2; /* target_type */
	T0* a3; /* static_feature */
	T0* a4; /* dynamic_type_sets */
	T0* a5; /* current_feature */
	T6 a6; /* id */
	T0* a7; /* result_type_set */
	T1 a8; /* is_regular */
	T1 a9; /* is_creation */
	T1 a10; /* is_address */
	T8 a11; /* builtin_class_code */
	T8 a12; /* builtin_feature_code */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T1 a15; /* is_built */
	T1 a16; /* is_copy_routine */
	T1 a17; /* is_generated */
	T1 a18; /* is_inlined */
	T1 a19; /* is_is_equal_routine */
	T0* a20; /* parent_type */
	T0* a21; /* query_calls */
	T0* a22; /* procedure_calls */
	T1 a23; /* is_separate_creation */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
struct S329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_DYNAMIC_EQUALITY_TYPES */
struct S330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left */
	T0* a2; /* right */
};

/* Struct for type ET_OBJECT_TEST */
struct S332 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* attached_keyword */
	T0* a3; /* declared_type */
	T0* a4; /* expression */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
struct S333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left */
	T0* a2; /* right */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_feature */
	T0* a2; /* static_call */
	T0* a3; /* target_type_set */
	T0* a4; /* result_type_set */
	T0* a5; /* current_type */
	T0* a6; /* next */
	T1 a7; /* is_generated */
	T1 a8; /* force_result_boxing */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T1 a2; /* is_generated */
	T0* a3; /* next */
	T0* a4; /* static_call */
	T0* a5; /* current_feature */
	T0* a6; /* current_type */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* separate_type */
	T0* a8; /* attached_separate_type */
	T0* a9; /* attached_type */
	T0* a10; /* meta_type */
	T0* a11; /* conforming_ancestors */
	T0* a12; /* queries_by_seed */
	T0* a13; /* procedures_by_seed */
	T0* a14; /* procedures */
	T0* a15; /* item_type_set */
	T1 a16; /* has_redefined_copy_routine */
	T1 a17; /* has_redefined_is_equal_routine */
	T1 a18; /* has_once_per_object_routines */
	T1 a19; /* has_reference_attributes */
	T6 a20; /* hash_code */
	T0* a21; /* next_type */
	T0* a22; /* query_calls */
	T1 a23; /* has_static */
	T0* a24; /* procedure_calls */
	T0* a25; /* equality_expressions */
	T0* a26; /* object_equality_expressions */
};

/* Struct for type DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
struct S341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_SECONDARY_TYPE */
struct S342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_type */
	T0* a2; /* meta_type */
	T0* a3; /* type_mark */
	T0* a4; /* internal_base_type */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
struct S343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* creation_call */
	T0* a3; /* internal_separate_target */
	T0* a4; /* default_create_name */
	T0* a5; /* creation_type */
	T0* a6; /* create_keyword */
	T0* a7; /* creation_region */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* qualified_name */
};

/* Struct for type KL_DIRECTORY */
struct S352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* string_name */
	T0* a6; /* entry_buffer */
	T1 a7; /* old_end_of_input */
	T14 a8; /* directory_pointer */
	T14 a9; /* last_entry_pointer */
	T0* a10; /* lastentry */
	T0* a11; /* internal_name */
	T0* a12; /* internal_detachable_name_pointer */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
struct S353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_DYNAMIC_INLINED_EXPRESSION */
struct S361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dynamic_type_set */
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* context */
};

/* Struct for type ET_DYNAMIC_CALL_CONTEXT */
struct S362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_feature */
	T0* a2; /* arguments */
	T0* a3; /* target */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type PROCEDURE [TUPLE] */
struct S367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
struct S378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_EXTENDED_ATTRIBUTE */
struct S382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* object_tests */
	T0* a5; /* implementation_feature */
	T0* a6; /* other_seeds */
	T0* a7; /* first_precursor */
	T0* a8; /* other_precursors */
	T0* a9; /* preconditions */
	T6 a10; /* hash_code */
	T0* a11; /* postconditions */
	T0* a12; /* assigner */
	T0* a13; /* declared_type */
	T0* a14; /* locals */
	T0* a15; /* rescue_clause */
	T0* a16; /* compound */
	T0* a17; /* frozen_keyword */
	T0* a18; /* extended_name */
	T0* a19; /* obsolete_message */
	T0* a20; /* clients */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_note */
	T0* a25; /* inline_separate_arguments */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type ET_ATTRIBUTE */
struct S383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* object_tests */
	T0* a5; /* implementation_feature */
	T0* a6; /* other_seeds */
	T0* a7; /* first_precursor */
	T0* a8; /* other_precursors */
	T6 a9; /* hash_code */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* frozen_keyword */
	T0* a13; /* extended_name */
	T0* a14; /* clients */
	T0* a15; /* semicolon */
	T0* a16; /* feature_clause */
	T0* a17; /* first_note */
	T0* a18; /* inline_separate_arguments */
	T1 a19; /* validity_checked */
	T1 a20; /* has_validity_error */
	T6 a21; /* id */
	T6 a22; /* version */
	T0* a23; /* synonym */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type ET_ITERATION_COMPONENT_LIST */
struct S388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
struct S391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
	T6 z4;
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* object_tests */
	T0* a5; /* constant */
	T0* a6; /* implementation_feature */
	T0* a7; /* other_seeds */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T6 a10; /* hash_code */
	T0* a11; /* assigner */
	T0* a12; /* declared_type */
	T0* a13; /* frozen_keyword */
	T0* a14; /* extended_name */
	T0* a15; /* clients */
	T0* a16; /* is_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_note */
	T0* a20; /* inline_separate_arguments */
	T1 a21; /* validity_checked */
	T1 a22; /* has_validity_error */
	T6 a23; /* id */
	T6 a24; /* version */
	T0* a25; /* synonym */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constant */
	T6 a2; /* id */
	T6 a3; /* first_seed */
	T0* a4; /* iteration_components */
	T0* a5; /* implementation_class */
	T0* a6; /* object_tests */
	T0* a7; /* implementation_feature */
	T0* a8; /* other_seeds */
	T0* a9; /* first_precursor */
	T0* a10; /* other_precursors */
	T6 a11; /* hash_code */
	T0* a12; /* assigner */
	T0* a13; /* declared_type */
	T0* a14; /* frozen_keyword */
	T0* a15; /* extended_name */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* unique_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_note */
	T0* a22; /* inline_separate_arguments */
	T1 a23; /* validity_checked */
	T1 a24; /* has_validity_error */
	T6 a25; /* version */
	T0* a26; /* synonym */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T11 a1; /* value */
	T0* a2; /* sign */
	T0* a3; /* literal */
	T1 a4; /* has_overflow */
	T6 a5; /* compressed_position */
	T6 a6; /* index */
	T0* a7; /* cast_type */
	T0* a8; /* type */
};

/* Struct for type ET_SYSTEM_MULTIPROCESSOR */
struct S398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* interface_checker */
	T0* a2; /* stop_request */
	T0* a3; /* eiffel_parser */
	T0* a4; /* error_handler */
	T0* a5; /* implementation_checker */
	T1 a6; /* benchmark_shown */
	T0* a7; /* ise_version */
	T0* a8; /* other_processors */
	T0* a9; /* eiffel_preparser */
	T0* a10; /* master_class_checker */
	T0* a11; /* provider_checker */
	T0* a12; /* ancestor_builder */
	T0* a13; /* feature_flattener */
	T0* a14; /* ecma_version */
	T1 a15; /* nested_benchmark_shown */
	T1 a16; /* metrics_shown */
	T1 a17; /* flat_mode */
	T1 a18; /* flat_dbc_mode */
	T0* a19; /* processed_class_count_stack */
	T0* a20; /* ast_factory */
	T0* a21; /* dotnet_assembly_consumer */
	T1 a22; /* use_attribute_keyword */
	T1 a23; /* use_note_keyword */
	T1 a24; /* use_reference_keyword */
	T1 a25; /* use_attached_keyword */
	T1 a26; /* use_detachable_keyword */
	T1 a27; /* preparse_shallow_mode */
	T1 a28; /* preparse_single_mode */
	T1 a29; /* preparse_multiple_mode */
	T1 a30; /* unknown_builtin_reported */
	T1 a31; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a32; /* cluster_dependence_enabled */
	T6 a33; /* postponed_class_count */
	T6 a34; /* processed_class_count */
	T1 a35; /* preparse_override_mode */
	T1 a36; /* preparse_readonly_mode */
	T1 a37; /* suppliers_enabled */
	T1 a38; /* providers_enabled */
	T1 a39; /* use_cluster_dependence_pathnames */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CHECKER */
struct S403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_checker */
	T0* a2; /* current_type */
	T0* a3; /* current_class */
	T0* a4; /* current_feature */
	T0* a5; /* current_feature_impl */
	T0* a6; /* current_class_impl */
	T0* a7; /* enclosing_inline_agents */
	T0* a8; /* unused_overloaded_procedures_list */
	T0* a9; /* unused_overloaded_queries_list */
	T0* a10; /* unused_overloaded_features_list */
	T0* a11; /* unused_call_infos */
	T0* a12; /* unused_contexts */
	T0* a13; /* current_context */
	T0* a14; /* current_target_type */
	T0* a15; /* current_object_test_types */
	T0* a16; /* current_object_test_scope */
	T0* a17; /* object_test_scope_builder */
	T0* a18; /* current_iteration_cursor_types */
	T0* a19; /* current_iteration_item_types */
	T0* a20; /* current_iteration_item_scope */
	T0* a21; /* current_inline_separate_argument_types */
	T0* a22; /* current_inline_separate_argument_scope */
	T0* a23; /* current_initialization_scope */
	T0* a24; /* current_attachment_scope */
	T0* a25; /* attachment_scope_builder */
	T0* a26; /* unused_attachment_scopes */
	T0* a27; /* assertions_by_feature */
	T0* a28; /* common_ancestor_type_list */
	T0* a29; /* note_term_list */
	T0* a30; /* vape_non_descendant_clients */
	T0* a31; /* vape_creation_clients */
	T0* a32; /* vape_client */
	T0* a33; /* unused_adapted_base_classes */
	T0* a34; /* adapted_base_class_checker */
	T0* a35; /* system_processor */
	T1 a36; /* has_fatal_error */
	T1 a37; /* in_static_feature */
	T1 a38; /* in_precondition */
	T0* a39; /* supplier_handler */
	T1 a40; /* in_invariant */
	T0* a41; /* precursor_queries */
	T0* a42; /* precursor_procedures */
	T1 a43; /* in_postcondition */
	T1 a44; /* in_precursor */
	T1 a45; /* in_rescue */
	T0* a46; /* current_inline_agent */
	T1 a47; /* in_check_instruction */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* equality_tester */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_cursor */
	T6 a8; /* found_position */
	T0* a9; /* item_storage */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* count */
	T6 a8; /* modulus */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* special_item_routines */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* equality_tester */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_TYPE_CHECKER */
struct S407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_context */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* constraint_context */
	T0* a5; /* current_class */
	T0* a6; /* target_context */
	T0* a7; /* other_context */
	T0* a8; /* adapted_base_class_checker */
	T0* a9; /* adapted_base_classes */
	T0* a10; /* system_processor */
	T0* a11; /* supplier_handler */
	T1 a12; /* has_fatal_error */
	T1 a13; /* class_interface_error_only */
	T1 a14; /* in_qualified_anchored_type */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S413 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* object_tests */
	T6 a2; /* hidden_count */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* scope */
	T1 a5; /* is_negated */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
struct S418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T0* a3; /* key_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ITERATION_ITEM_SCOPE */
struct S419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* iteration_components */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
struct S420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
struct S421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* inline_separate_arguments */
};

/* Struct for type ET_ATTACHMENT_SCOPE */
struct S422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* locals_attached */
	T0* a2; /* arguments_attached */
	T0* a3; /* attributes_attached */
	T1 a4; /* result_attached */
	T1 a5; /* is_code_unreachable */
};

/* Struct for type ET_ATTACHMENT_SCOPE_BUILDER */
struct S423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* scope */
	T1 a2; /* is_negated */
};

/* Struct for type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
struct S424 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
struct S425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T6 a13; /* modulus */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* special_item_routines */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_NOTE_TERM] */
struct S426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_CLIENT_LIST */
struct S427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CLIENT */
struct S428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* named_base_class */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_ADAPTED_BASE_CLASS_CHECKER */
struct S430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class_impl */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T1 a4; /* feature_flattening_error_only */
	T1 a5; /* has_fatal_error */
	T1 a6; /* class_interface_error_only */
};

/* Struct for type ET_PRECONDITIONS */
struct S431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* require_keyword */
	T0* a6; /* else_keyword */
};

/* Struct for type ET_FEATURE_LIST */
struct S433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S435 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T1 a2; /* use_obsolete_syntax */
	T0* a3; /* cached_absolute_pathname */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_KEYWORD */
struct S438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_CLASS_CODES */
struct S439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
struct S440 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
struct S441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
struct S442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type RX_BYTE_CODE */
struct S447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
};

/* Struct for type RX_CHARACTER_SET */
struct S448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_empty */
	T1 a2; /* is_negated */
	T11 a3; /* first_set */
	T11 a4; /* second_set */
	T11 a5; /* third_set */
	T11 a6; /* fourth_set */
	T0* a7; /* other_sets */
	T1 a8; /* is_reverted */
};

/* Struct for type RX_CASE_MAPPING */
struct S449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type UC_STRING */
struct S454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type NATIVE_STRING */
struct S455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* unit_count */
};

/* Struct for type TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
struct S456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
	T0* z4;
};

/* Struct for type WORKER_THREAD */
struct S457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* thread_procedure */
	T0* a2; /* launch_mutex */
	T14 a3; /* thread_id */
	T1 a4; /* terminated */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PATH */
struct S460 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_name */
	T0* a2; /* storage */
	T1 a3; /* is_normalized */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type STD_FILES */
struct S464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_output */
};

/* Struct for type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S465 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_state */
	T1 a2; /* internal_overflowed */
	T11 a3; /* part1 */
	T11 a4; /* part2 */
	T0* a5; /* leading_separators */
	T0* a6; /* trailing_separators */
	T6 a7; /* sign */
	T6 a8; /* conversion_type */
	T2 a9; /* internal_lookahead */
	T1 a10; /* leading_separators_acceptable */
	T1 a11; /* trailing_separators_acceptable */
};

/* Struct for type DS_CELL [detachable ET_ECF_CONFIG] */
struct S469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
struct S471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_OPTIONS */
struct S473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_assertions */
	T0* a2; /* primary_debugs */
	T0* a3; /* primary_warnings */
	T0* a4; /* primary_options */
	T0* a5; /* description */
	T0* a6; /* secondary_options */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
struct S474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type XM_NAMESPACE */
struct S475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
struct S476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_ECF_REDIRECTION_CONFIG */
struct S478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uuid */
	T0* a2; /* location */
	T0* a3; /* filename */
	T0* a4; /* universe */
	T0* a5; /* message */
	T0* a6; /* ecf_namespace */
	T0* a7; /* ecf_version */
};

/* Struct for type ET_CLUSTERS */
struct S479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT */
struct S482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
	T0* a3; /* exports */
	T0* a4; /* undefines */
	T0* a5; /* redefines */
	T0* a6; /* selects */
	T0* a7; /* end_keyword */
};

/* Struct for type ET_PARENT_LIST */
struct S483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* inherit_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* clients_clause */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ET_MASTER_CLASS */
struct S485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* mapped_class */
	T0* a2; /* first_overriding_class */
	T0* a3; /* intrinsic_class */
	T0* a4; /* name */
	T0* a5; /* universe */
	T0* a6; /* status_mutex */
	T0* a7; /* processing_mutex */
	T1 a8; /* unprotected_is_marked */
	T0* a9; /* first_imported_class */
	T0* a10; /* other_imported_classes */
	T0* a11; /* first_local_ignored_class */
	T0* a12; /* other_local_ignored_classes */
	T0* a13; /* first_local_override_class */
	T0* a14; /* other_local_override_classes */
	T0* a15; /* first_local_non_override_class */
	T0* a16; /* other_local_non_override_classes */
	T0* a17; /* first_local_hidden_class */
	T1 a18; /* is_modified */
	T0* a19; /* other_overriding_classes */
	T0* a20; /* other_local_hidden_classes */
};

/* Struct for type ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
struct S486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_mark */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_RENAME_LIST */
struct S487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* rename_keyword */
};

/* Struct for type ET_EXPORT_LIST */
struct S488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* export_keyword */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* keyword */
};

/* Struct for type ET_NONE_GROUP */
struct S492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* universe */
	T0* a2; /* name */
	T1 a3; /* use_obsolete_syntax */
	T0* a4; /* cached_absolute_pathname */
};

/* Struct for type ET_LIKE_CURRENT */
struct S493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
	T1 a4; /* is_controlled */
};

/* Struct for type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tuple_type */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* separate_type */
	T0* a8; /* attached_separate_type */
	T0* a9; /* meta_type */
	T0* a10; /* attached_type */
	T0* a11; /* conforming_ancestors */
	T1 a12; /* has_redefined_is_equal_routine */
	T1 a13; /* has_redefined_copy_routine */
	T0* a14; /* open_operand_tuple_type_set */
	T0* a15; /* set_rout_disp_final_feature */
	T0* a16; /* next_type */
	T1 a17; /* has_once_per_object_routines */
	T0* a18; /* procedures */
	T1 a19; /* has_static */
	T0* a20; /* query_calls */
	T0* a21; /* procedure_calls */
	T0* a22; /* open_operand_type_sets */
	T6 a23; /* hash_code */
	T0* a24; /* queries_by_seed */
	T0* a25; /* procedures_by_seed */
	T1 a26; /* has_reference_attributes */
	T0* a27; /* equality_expressions */
	T0* a28; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* separate_type */
	T0* a8; /* attached_separate_type */
	T0* a9; /* meta_type */
	T0* a10; /* attached_type */
	T0* a11; /* conforming_ancestors */
	T1 a12; /* has_redefined_is_equal_routine */
	T1 a13; /* has_redefined_copy_routine */
	T0* a14; /* open_operand_tuple_type_set */
	T0* a15; /* set_rout_disp_final_feature */
	T0* a16; /* next_type */
	T1 a17; /* has_once_per_object_routines */
	T0* a18; /* procedures */
	T1 a19; /* has_static */
	T0* a20; /* query_calls */
	T0* a21; /* procedure_calls */
	T0* a22; /* open_operand_type_sets */
	T0* a23; /* result_type_set */
	T6 a24; /* hash_code */
	T0* a25; /* queries_by_seed */
	T0* a26; /* procedures_by_seed */
	T1 a27; /* has_reference_attributes */
	T0* a28; /* equality_expressions */
	T0* a29; /* object_equality_expressions */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T0* a8; /* local_clock */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* system_processor */
	T6 a3; /* last_text_count */
	T6 a4; /* last_literal_start */
	T0* a5; /* filename */
	T0* a6; /* group */
	T0* a7; /* verbatim_marker */
	T6 a8; /* verbatim_marker_count */
	T0* a9; /* verbatim_open_white_characters */
	T0* a10; /* verbatim_close_white_characters */
	T0* a11; /* yy_pushed_start_conditions */
	T0* a12; /* input_buffer */
	T0* a13; /* yy_state_stack */
	T6 a14; /* yy_start_state */
	T6 a15; /* yy_line */
	T6 a16; /* yy_column */
	T6 a17; /* yy_position */
	T6 a18; /* yy_start */
	T6 a19; /* yy_end */
	T6 a20; /* line */
	T6 a21; /* column */
	T6 a22; /* position */
	T0* a23; /* yy_nxt */
	T0* a24; /* yy_chk */
	T0* a25; /* yy_base */
	T0* a26; /* yy_def */
	T0* a27; /* yy_ec */
	T0* a28; /* yy_meta */
	T0* a29; /* yy_accept */
	T0* a30; /* yy_acclist */
	T0* a31; /* yy_content */
	T0* a32; /* yy_content_area */
	T0* a33; /* yy_unicode_content_area */
	T0* a34; /* last_classname */
	T1 a35; /* class_keyword_found */
	T6 a36; /* last_token */
	T1 a37; /* yy_more_flag */
	T6 a38; /* yy_more_len */
	T6 a39; /* yy_state_count */
	T6 a40; /* yy_last_accepting_state */
	T6 a41; /* yy_last_accepting_cpos */
	T6 a42; /* yy_lp */
	T6 a43; /* yy_looking_for_trail_begin */
	T6 a44; /* yy_full_match */
	T6 a45; /* yy_full_state */
	T6 a46; /* yy_full_lp */
	T1 a47; /* yy_rejected */
	T6 a48; /* last_literal_end */
	T6 a49; /* pushed_start_condition_count */
	T6 a50; /* ms_column */
	T6 a51; /* ms_line */
	T6 a52; /* last_break_end */
	T6 a53; /* last_comment_end */
	T3 a54; /* verbatim_opening_character */
};

/* Struct for type ET_MASTER_CLASS_CHECKER */
struct S500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a4; /* last_local_variables_stack */
	T0* a5; /* last_keywords */
	T0* a6; /* last_symbols */
	T0* a7; /* last_object_tests_stack */
	T0* a8; /* last_object_tests_pool */
	T0* a9; /* last_iteration_components_stack */
	T0* a10; /* last_iteration_components_pool */
	T0* a11; /* last_inline_separate_arguments_stack */
	T0* a12; /* last_inline_separate_arguments_pool */
	T0* a13; /* assertions */
	T0* a14; /* assertion_counters */
	T0* a15; /* assertion_kinds */
	T6 a16; /* assertion_kind */
	T0* a17; /* queries */
	T0* a18; /* procedures */
	T0* a19; /* constraints */
	T0* a20; /* providers */
	T0* a21; /* current_class */
	T0* a22; /* system_processor */
	T6 a23; /* last_text_count */
	T6 a24; /* last_literal_start */
	T0* a25; /* filename */
	T0* a26; /* group */
	T0* a27; /* verbatim_marker */
	T6 a28; /* verbatim_marker_count */
	T0* a29; /* verbatim_open_white_characters */
	T0* a30; /* verbatim_close_white_characters */
	T0* a31; /* yyss */
	T0* a32; /* yy_pushed_start_conditions */
	T0* a33; /* input_buffer */
	T0* a34; /* yyspecial_routines1 */
	T6 a35; /* yyvsc1 */
	T0* a36; /* yyvs1 */
	T0* a37; /* yyspecial_routines2 */
	T6 a38; /* yyvsc2 */
	T0* a39; /* yyvs2 */
	T0* a40; /* yyspecial_routines3 */
	T6 a41; /* yyvsc3 */
	T0* a42; /* yyvs3 */
	T0* a43; /* yyspecial_routines4 */
	T6 a44; /* yyvsc4 */
	T0* a45; /* yyvs4 */
	T0* a46; /* yyspecial_routines5 */
	T6 a47; /* yyvsc5 */
	T0* a48; /* yyvs5 */
	T0* a49; /* yyspecial_routines6 */
	T6 a50; /* yyvsc6 */
	T0* a51; /* yyvs6 */
	T0* a52; /* yyspecial_routines7 */
	T6 a53; /* yyvsc7 */
	T0* a54; /* yyvs7 */
	T0* a55; /* yyspecial_routines8 */
	T6 a56; /* yyvsc8 */
	T0* a57; /* yyvs8 */
	T0* a58; /* yyspecial_routines9 */
	T6 a59; /* yyvsc9 */
	T0* a60; /* yyvs9 */
	T0* a61; /* yyspecial_routines10 */
	T6 a62; /* yyvsc10 */
	T0* a63; /* yyvs10 */
	T0* a64; /* yyspecial_routines11 */
	T6 a65; /* yyvsc11 */
	T0* a66; /* yyvs11 */
	T0* a67; /* yyspecial_routines12 */
	T6 a68; /* yyvsc12 */
	T0* a69; /* yyvs12 */
	T0* a70; /* yyspecial_routines13 */
	T6 a71; /* yyvsc13 */
	T0* a72; /* yyvs13 */
	T0* a73; /* yyspecial_routines14 */
	T6 a74; /* yyvsc14 */
	T0* a75; /* yyvs14 */
	T0* a76; /* yyspecial_routines15 */
	T6 a77; /* yyvsc15 */
	T0* a78; /* yyvs15 */
	T0* a79; /* yyspecial_routines16 */
	T6 a80; /* yyvsc16 */
	T0* a81; /* yyvs16 */
	T0* a82; /* yyspecial_routines17 */
	T6 a83; /* yyvsc17 */
	T0* a84; /* yyvs17 */
	T0* a85; /* yyspecial_routines18 */
	T6 a86; /* yyvsc18 */
	T0* a87; /* yyvs18 */
	T0* a88; /* yyspecial_routines19 */
	T6 a89; /* yyvsc19 */
	T0* a90; /* yyvs19 */
	T0* a91; /* yyspecial_routines20 */
	T6 a92; /* yyvsc20 */
	T0* a93; /* yyvs20 */
	T0* a94; /* yyspecial_routines21 */
	T6 a95; /* yyvsc21 */
	T0* a96; /* yyvs21 */
	T0* a97; /* yyspecial_routines22 */
	T6 a98; /* yyvsc22 */
	T0* a99; /* yyvs22 */
	T0* a100; /* yyspecial_routines23 */
	T6 a101; /* yyvsc23 */
	T0* a102; /* yyvs23 */
	T0* a103; /* yyspecial_routines24 */
	T6 a104; /* yyvsc24 */
	T0* a105; /* yyvs24 */
	T0* a106; /* yyspecial_routines25 */
	T6 a107; /* yyvsc25 */
	T0* a108; /* yyvs25 */
	T0* a109; /* yyspecial_routines26 */
	T6 a110; /* yyvsc26 */
	T0* a111; /* yyvs26 */
	T0* a112; /* yyspecial_routines27 */
	T6 a113; /* yyvsc27 */
	T0* a114; /* yyvs27 */
	T0* a115; /* yyspecial_routines28 */
	T6 a116; /* yyvsc28 */
	T0* a117; /* yyvs28 */
	T0* a118; /* yyspecial_routines29 */
	T6 a119; /* yyvsc29 */
	T0* a120; /* yyvs29 */
	T0* a121; /* yyspecial_routines30 */
	T6 a122; /* yyvsc30 */
	T0* a123; /* yyvs30 */
	T0* a124; /* yyspecial_routines31 */
	T6 a125; /* yyvsc31 */
	T0* a126; /* yyvs31 */
	T0* a127; /* yyspecial_routines32 */
	T6 a128; /* yyvsc32 */
	T0* a129; /* yyvs32 */
	T0* a130; /* yyspecial_routines33 */
	T6 a131; /* yyvsc33 */
	T0* a132; /* yyvs33 */
	T0* a133; /* yyspecial_routines34 */
	T6 a134; /* yyvsc34 */
	T0* a135; /* yyvs34 */
	T0* a136; /* yyspecial_routines35 */
	T6 a137; /* yyvsc35 */
	T0* a138; /* yyvs35 */
	T0* a139; /* yyspecial_routines36 */
	T6 a140; /* yyvsc36 */
	T0* a141; /* yyvs36 */
	T0* a142; /* yyspecial_routines37 */
	T6 a143; /* yyvsc37 */
	T0* a144; /* yyvs37 */
	T0* a145; /* yyspecial_routines38 */
	T6 a146; /* yyvsc38 */
	T0* a147; /* yyvs38 */
	T0* a148; /* yyspecial_routines39 */
	T6 a149; /* yyvsc39 */
	T0* a150; /* yyvs39 */
	T0* a151; /* yyspecial_routines40 */
	T6 a152; /* yyvsc40 */
	T0* a153; /* yyvs40 */
	T0* a154; /* yyspecial_routines41 */
	T6 a155; /* yyvsc41 */
	T0* a156; /* yyvs41 */
	T0* a157; /* yyspecial_routines42 */
	T6 a158; /* yyvsc42 */
	T0* a159; /* yyvs42 */
	T0* a160; /* yyspecial_routines43 */
	T6 a161; /* yyvsc43 */
	T0* a162; /* yyvs43 */
	T0* a163; /* yyspecial_routines44 */
	T6 a164; /* yyvsc44 */
	T0* a165; /* yyvs44 */
	T0* a166; /* yyspecial_routines45 */
	T6 a167; /* yyvsc45 */
	T0* a168; /* yyvs45 */
	T0* a169; /* yyspecial_routines46 */
	T6 a170; /* yyvsc46 */
	T0* a171; /* yyvs46 */
	T0* a172; /* yyspecial_routines47 */
	T6 a173; /* yyvsc47 */
	T0* a174; /* yyvs47 */
	T0* a175; /* yyspecial_routines48 */
	T6 a176; /* yyvsc48 */
	T0* a177; /* yyvs48 */
	T0* a178; /* yyspecial_routines49 */
	T6 a179; /* yyvsc49 */
	T0* a180; /* yyvs49 */
	T0* a181; /* yyspecial_routines50 */
	T6 a182; /* yyvsc50 */
	T0* a183; /* yyvs50 */
	T0* a184; /* yyspecial_routines51 */
	T6 a185; /* yyvsc51 */
	T0* a186; /* yyvs51 */
	T0* a187; /* yyspecial_routines52 */
	T6 a188; /* yyvsc52 */
	T0* a189; /* yyvs52 */
	T0* a190; /* yyspecial_routines53 */
	T6 a191; /* yyvsc53 */
	T0* a192; /* yyvs53 */
	T0* a193; /* yyspecial_routines54 */
	T6 a194; /* yyvsc54 */
	T0* a195; /* yyvs54 */
	T0* a196; /* yyspecial_routines55 */
	T6 a197; /* yyvsc55 */
	T0* a198; /* yyvs55 */
	T0* a199; /* yyspecial_routines56 */
	T6 a200; /* yyvsc56 */
	T0* a201; /* yyvs56 */
	T0* a202; /* yyspecial_routines57 */
	T6 a203; /* yyvsc57 */
	T0* a204; /* yyvs57 */
	T0* a205; /* yyspecial_routines58 */
	T6 a206; /* yyvsc58 */
	T0* a207; /* yyvs58 */
	T0* a208; /* yyspecial_routines59 */
	T6 a209; /* yyvsc59 */
	T0* a210; /* yyvs59 */
	T0* a211; /* yyspecial_routines60 */
	T6 a212; /* yyvsc60 */
	T0* a213; /* yyvs60 */
	T0* a214; /* yyspecial_routines61 */
	T6 a215; /* yyvsc61 */
	T0* a216; /* yyvs61 */
	T0* a217; /* yyspecial_routines62 */
	T6 a218; /* yyvsc62 */
	T0* a219; /* yyvs62 */
	T0* a220; /* yyspecial_routines63 */
	T6 a221; /* yyvsc63 */
	T0* a222; /* yyvs63 */
	T0* a223; /* yyspecial_routines64 */
	T6 a224; /* yyvsc64 */
	T0* a225; /* yyvs64 */
	T0* a226; /* yyspecial_routines65 */
	T6 a227; /* yyvsc65 */
	T0* a228; /* yyvs65 */
	T0* a229; /* yyspecial_routines66 */
	T6 a230; /* yyvsc66 */
	T0* a231; /* yyvs66 */
	T0* a232; /* yyspecial_routines67 */
	T6 a233; /* yyvsc67 */
	T0* a234; /* yyvs67 */
	T0* a235; /* yyspecial_routines68 */
	T6 a236; /* yyvsc68 */
	T0* a237; /* yyvs68 */
	T0* a238; /* yyspecial_routines69 */
	T6 a239; /* yyvsc69 */
	T0* a240; /* yyvs69 */
	T0* a241; /* yyspecial_routines70 */
	T6 a242; /* yyvsc70 */
	T0* a243; /* yyvs70 */
	T0* a244; /* yyspecial_routines71 */
	T6 a245; /* yyvsc71 */
	T0* a246; /* yyvs71 */
	T0* a247; /* yyspecial_routines72 */
	T6 a248; /* yyvsc72 */
	T0* a249; /* yyvs72 */
	T0* a250; /* yyspecial_routines73 */
	T6 a251; /* yyvsc73 */
	T0* a252; /* yyvs73 */
	T0* a253; /* yyspecial_routines74 */
	T6 a254; /* yyvsc74 */
	T0* a255; /* yyvs74 */
	T0* a256; /* yyspecial_routines75 */
	T6 a257; /* yyvsc75 */
	T0* a258; /* yyvs75 */
	T0* a259; /* yyspecial_routines76 */
	T6 a260; /* yyvsc76 */
	T0* a261; /* yyvs76 */
	T0* a262; /* yyspecial_routines77 */
	T6 a263; /* yyvsc77 */
	T0* a264; /* yyvs77 */
	T0* a265; /* yyspecial_routines78 */
	T6 a266; /* yyvsc78 */
	T0* a267; /* yyvs78 */
	T0* a268; /* yyspecial_routines79 */
	T6 a269; /* yyvsc79 */
	T0* a270; /* yyvs79 */
	T0* a271; /* yyspecial_routines80 */
	T6 a272; /* yyvsc80 */
	T0* a273; /* yyvs80 */
	T0* a274; /* yyspecial_routines81 */
	T6 a275; /* yyvsc81 */
	T0* a276; /* yyvs81 */
	T0* a277; /* yyspecial_routines82 */
	T6 a278; /* yyvsc82 */
	T0* a279; /* yyvs82 */
	T0* a280; /* yyspecial_routines83 */
	T6 a281; /* yyvsc83 */
	T0* a282; /* yyvs83 */
	T0* a283; /* yyspecial_routines84 */
	T6 a284; /* yyvsc84 */
	T0* a285; /* yyvs84 */
	T0* a286; /* yyspecial_routines85 */
	T6 a287; /* yyvsc85 */
	T0* a288; /* yyvs85 */
	T0* a289; /* yyspecial_routines86 */
	T6 a290; /* yyvsc86 */
	T0* a291; /* yyvs86 */
	T0* a292; /* yyspecial_routines87 */
	T6 a293; /* yyvsc87 */
	T0* a294; /* yyvs87 */
	T0* a295; /* yyspecial_routines88 */
	T6 a296; /* yyvsc88 */
	T0* a297; /* yyvs88 */
	T0* a298; /* yyspecial_routines89 */
	T6 a299; /* yyvsc89 */
	T0* a300; /* yyvs89 */
	T0* a301; /* yyspecial_routines90 */
	T6 a302; /* yyvsc90 */
	T0* a303; /* yyvs90 */
	T0* a304; /* yyspecial_routines91 */
	T6 a305; /* yyvsc91 */
	T0* a306; /* yyvs91 */
	T0* a307; /* yyspecial_routines92 */
	T6 a308; /* yyvsc92 */
	T0* a309; /* yyvs92 */
	T0* a310; /* yyspecial_routines93 */
	T6 a311; /* yyvsc93 */
	T0* a312; /* yyvs93 */
	T0* a313; /* yyspecial_routines94 */
	T6 a314; /* yyvsc94 */
	T0* a315; /* yyvs94 */
	T0* a316; /* yyspecial_routines95 */
	T6 a317; /* yyvsc95 */
	T0* a318; /* yyvs95 */
	T0* a319; /* yyspecial_routines96 */
	T6 a320; /* yyvsc96 */
	T0* a321; /* yyvs96 */
	T0* a322; /* yyspecial_routines97 */
	T6 a323; /* yyvsc97 */
	T0* a324; /* yyvs97 */
	T0* a325; /* yyspecial_routines98 */
	T6 a326; /* yyvsc98 */
	T0* a327; /* yyvs98 */
	T0* a328; /* yyspecial_routines99 */
	T6 a329; /* yyvsc99 */
	T0* a330; /* yyvs99 */
	T0* a331; /* yyspecial_routines100 */
	T6 a332; /* yyvsc100 */
	T0* a333; /* yyvs100 */
	T0* a334; /* yyspecial_routines101 */
	T6 a335; /* yyvsc101 */
	T0* a336; /* yyvs101 */
	T0* a337; /* yyspecial_routines102 */
	T6 a338; /* yyvsc102 */
	T0* a339; /* yyvs102 */
	T0* a340; /* yyspecial_routines103 */
	T6 a341; /* yyvsc103 */
	T0* a342; /* yyvs103 */
	T0* a343; /* yyspecial_routines104 */
	T6 a344; /* yyvsc104 */
	T0* a345; /* yyvs104 */
	T0* a346; /* yyspecial_routines105 */
	T6 a347; /* yyvsc105 */
	T0* a348; /* yyvs105 */
	T0* a349; /* yyspecial_routines106 */
	T6 a350; /* yyvsc106 */
	T0* a351; /* yyvs106 */
	T0* a352; /* yyspecial_routines107 */
	T6 a353; /* yyvsc107 */
	T0* a354; /* yyvs107 */
	T0* a355; /* yyspecial_routines108 */
	T6 a356; /* yyvsc108 */
	T0* a357; /* yyvs108 */
	T0* a358; /* yyspecial_routines109 */
	T6 a359; /* yyvsc109 */
	T0* a360; /* yyvs109 */
	T0* a361; /* yyspecial_routines110 */
	T6 a362; /* yyvsc110 */
	T0* a363; /* yyvs110 */
	T0* a364; /* yyspecial_routines111 */
	T6 a365; /* yyvsc111 */
	T0* a366; /* yyvs111 */
	T0* a367; /* yyspecial_routines112 */
	T6 a368; /* yyvsc112 */
	T0* a369; /* yyvs112 */
	T0* a370; /* yyspecial_routines113 */
	T6 a371; /* yyvsc113 */
	T0* a372; /* yyvs113 */
	T0* a373; /* yyspecial_routines114 */
	T6 a374; /* yyvsc114 */
	T0* a375; /* yyvs114 */
	T0* a376; /* yyspecial_routines115 */
	T6 a377; /* yyvsc115 */
	T0* a378; /* yyvs115 */
	T0* a379; /* yyspecial_routines116 */
	T6 a380; /* yyvsc116 */
	T0* a381; /* yyvs116 */
	T0* a382; /* yyspecial_routines117 */
	T6 a383; /* yyvsc117 */
	T0* a384; /* yyvs117 */
	T0* a385; /* yyspecial_routines118 */
	T6 a386; /* yyvsc118 */
	T0* a387; /* yyvs118 */
	T0* a388; /* yyspecial_routines119 */
	T6 a389; /* yyvsc119 */
	T0* a390; /* yyvs119 */
	T0* a391; /* yyspecial_routines120 */
	T6 a392; /* yyvsc120 */
	T0* a393; /* yyvs120 */
	T0* a394; /* yyspecial_routines121 */
	T6 a395; /* yyvsc121 */
	T0* a396; /* yyvs121 */
	T0* a397; /* yyspecial_routines122 */
	T6 a398; /* yyvsc122 */
	T0* a399; /* yyvs122 */
	T0* a400; /* yyspecial_routines123 */
	T6 a401; /* yyvsc123 */
	T0* a402; /* yyvs123 */
	T0* a403; /* yyspecial_routines124 */
	T6 a404; /* yyvsc124 */
	T0* a405; /* yyvs124 */
	T0* a406; /* yyspecial_routines125 */
	T6 a407; /* yyvsc125 */
	T0* a408; /* yyvs125 */
	T0* a409; /* yyspecial_routines126 */
	T6 a410; /* yyvsc126 */
	T0* a411; /* yyvs126 */
	T0* a412; /* yyspecial_routines127 */
	T6 a413; /* yyvsc127 */
	T0* a414; /* yyvs127 */
	T0* a415; /* yyspecial_routines128 */
	T6 a416; /* yyvsc128 */
	T0* a417; /* yyvs128 */
	T0* a418; /* yyspecial_routines129 */
	T6 a419; /* yyvsc129 */
	T0* a420; /* yyvs129 */
	T0* a421; /* yyspecial_routines130 */
	T6 a422; /* yyvsc130 */
	T0* a423; /* yyvs130 */
	T0* a424; /* yyspecial_routines131 */
	T6 a425; /* yyvsc131 */
	T0* a426; /* yyvs131 */
	T0* a427; /* yyspecial_routines132 */
	T6 a428; /* yyvsc132 */
	T0* a429; /* yyvs132 */
	T0* a430; /* yyspecial_routines133 */
	T6 a431; /* yyvsc133 */
	T0* a432; /* yyvs133 */
	T0* a433; /* yyspecial_routines134 */
	T6 a434; /* yyvsc134 */
	T0* a435; /* yyvs134 */
	T0* a436; /* yyspecial_routines135 */
	T6 a437; /* yyvsc135 */
	T0* a438; /* yyvs135 */
	T0* a439; /* yyspecial_routines136 */
	T6 a440; /* yyvsc136 */
	T0* a441; /* yyvs136 */
	T0* a442; /* yyspecial_routines137 */
	T6 a443; /* yyvsc137 */
	T0* a444; /* yyvs137 */
	T0* a445; /* yyspecial_routines138 */
	T6 a446; /* yyvsc138 */
	T0* a447; /* yyvs138 */
	T0* a448; /* yytranslate */
	T0* a449; /* yyr1 */
	T0* a450; /* yytypes1 */
	T0* a451; /* yytypes2 */
	T0* a452; /* yydefact */
	T0* a453; /* yydefgoto */
	T0* a454; /* yypact */
	T0* a455; /* yypgoto */
	T0* a456; /* yytable */
	T0* a457; /* yycheck */
	T0* a458; /* yy_state_stack */
	T6 a459; /* yy_start_state */
	T6 a460; /* yy_line */
	T6 a461; /* yy_column */
	T6 a462; /* yy_position */
	T6 a463; /* yy_start */
	T6 a464; /* yy_end */
	T6 a465; /* line */
	T6 a466; /* column */
	T6 a467; /* position */
	T0* a468; /* yy_nxt */
	T0* a469; /* yy_chk */
	T0* a470; /* yy_base */
	T0* a471; /* yy_def */
	T0* a472; /* yy_ec */
	T0* a473; /* yy_meta */
	T0* a474; /* yy_accept */
	T0* a475; /* yy_acclist */
	T0* a476; /* yy_content */
	T0* a477; /* yy_content_area */
	T0* a478; /* yy_unicode_content_area */
	T6 a479; /* time_stamp */
	T0* a480; /* last_class */
	T6 a481; /* yy_parsing_status */
	T6 a482; /* yy_suspended_yystacksize */
	T6 a483; /* yy_suspended_yystate */
	T6 a484; /* yy_suspended_yyn */
	T6 a485; /* yy_suspended_yychar1 */
	T6 a486; /* yy_suspended_index */
	T6 a487; /* yy_suspended_yyss_top */
	T6 a488; /* yy_suspended_yy_goto */
	T6 a489; /* yyssp */
	T6 a490; /* error_count */
	T1 a491; /* yy_lookahead_needed */
	T6 a492; /* yyerrstatus */
	T6 a493; /* last_token */
	T0* a494; /* last_clients */
	T0* a495; /* last_export_clients */
	T0* a496; /* last_feature_clause */
	T6 a497; /* last_literal_end */
	T1 a498; /* yy_rejected */
	T6 a499; /* yy_state_count */
	T6 a500; /* yy_full_match */
	T6 a501; /* yy_lp */
	T6 a502; /* yy_looking_for_trail_begin */
	T6 a503; /* yy_full_lp */
	T6 a504; /* yy_full_state */
	T6 a505; /* pushed_start_condition_count */
	T1 a506; /* yy_more_flag */
	T6 a507; /* yy_more_len */
	T6 a508; /* yy_last_accepting_state */
	T6 a509; /* yy_last_accepting_cpos */
	T6 a510; /* yyvsp1 */
	T6 a511; /* yyvsp2 */
	T6 a512; /* yyvsp3 */
	T6 a513; /* yyvsp4 */
	T6 a514; /* yyvsp5 */
	T6 a515; /* yyvsp6 */
	T6 a516; /* yyvsp7 */
	T6 a517; /* yyvsp8 */
	T6 a518; /* yyvsp9 */
	T6 a519; /* yyvsp10 */
	T6 a520; /* yyvsp11 */
	T6 a521; /* yyvsp12 */
	T6 a522; /* yyvsp13 */
	T6 a523; /* yyvsp14 */
	T6 a524; /* yyvsp15 */
	T6 a525; /* yyvsp16 */
	T6 a526; /* yyvsp17 */
	T6 a527; /* yyvsp18 */
	T6 a528; /* yyvsp19 */
	T6 a529; /* yyvsp20 */
	T6 a530; /* yyvsp21 */
	T6 a531; /* yyvsp22 */
	T6 a532; /* yyvsp23 */
	T6 a533; /* yyvsp24 */
	T6 a534; /* yyvsp25 */
	T6 a535; /* yyvsp26 */
	T6 a536; /* yyvsp27 */
	T6 a537; /* yyvsp28 */
	T6 a538; /* yyvsp29 */
	T6 a539; /* yyvsp30 */
	T6 a540; /* yyvsp31 */
	T6 a541; /* yyvsp32 */
	T6 a542; /* yyvsp33 */
	T6 a543; /* yyvsp34 */
	T6 a544; /* yyvsp35 */
	T6 a545; /* yyvsp36 */
	T6 a546; /* yyvsp37 */
	T6 a547; /* yyvsp38 */
	T6 a548; /* yyvsp39 */
	T6 a549; /* yyvsp40 */
	T6 a550; /* yyvsp41 */
	T6 a551; /* yyvsp42 */
	T6 a552; /* yyvsp43 */
	T6 a553; /* yyvsp44 */
	T6 a554; /* yyvsp45 */
	T6 a555; /* yyvsp46 */
	T6 a556; /* yyvsp47 */
	T6 a557; /* yyvsp48 */
	T6 a558; /* yyvsp49 */
	T6 a559; /* yyvsp50 */
	T6 a560; /* yyvsp51 */
	T6 a561; /* yyvsp52 */
	T6 a562; /* yyvsp53 */
	T6 a563; /* yyvsp54 */
	T6 a564; /* yyvsp55 */
	T6 a565; /* yyvsp56 */
	T6 a566; /* yyvsp57 */
	T6 a567; /* yyvsp58 */
	T6 a568; /* yyvsp59 */
	T6 a569; /* yyvsp60 */
	T6 a570; /* yyvsp61 */
	T6 a571; /* yyvsp62 */
	T6 a572; /* yyvsp63 */
	T6 a573; /* yyvsp64 */
	T6 a574; /* yyvsp65 */
	T6 a575; /* yyvsp66 */
	T6 a576; /* yyvsp67 */
	T6 a577; /* yyvsp68 */
	T6 a578; /* yyvsp69 */
	T6 a579; /* yyvsp70 */
	T6 a580; /* yyvsp71 */
	T6 a581; /* yyvsp72 */
	T6 a582; /* yyvsp73 */
	T6 a583; /* yyvsp74 */
	T6 a584; /* yyvsp75 */
	T6 a585; /* yyvsp76 */
	T6 a586; /* yyvsp77 */
	T6 a587; /* yyvsp78 */
	T6 a588; /* yyvsp79 */
	T6 a589; /* yyvsp80 */
	T6 a590; /* yyvsp81 */
	T6 a591; /* yyvsp82 */
	T6 a592; /* yyvsp83 */
	T6 a593; /* yyvsp84 */
	T6 a594; /* yyvsp85 */
	T6 a595; /* yyvsp86 */
	T6 a596; /* yyvsp87 */
	T6 a597; /* yyvsp88 */
	T6 a598; /* yyvsp89 */
	T6 a599; /* yyvsp90 */
	T6 a600; /* yyvsp91 */
	T6 a601; /* yyvsp92 */
	T6 a602; /* yyvsp93 */
	T6 a603; /* yyvsp94 */
	T6 a604; /* yyvsp95 */
	T6 a605; /* yyvsp96 */
	T6 a606; /* yyvsp97 */
	T6 a607; /* yyvsp98 */
	T6 a608; /* yyvsp99 */
	T6 a609; /* yyvsp100 */
	T6 a610; /* yyvsp101 */
	T6 a611; /* yyvsp102 */
	T6 a612; /* yyvsp103 */
	T6 a613; /* yyvsp104 */
	T6 a614; /* yyvsp105 */
	T6 a615; /* yyvsp106 */
	T6 a616; /* yyvsp107 */
	T6 a617; /* yyvsp108 */
	T6 a618; /* yyvsp109 */
	T6 a619; /* yyvsp110 */
	T6 a620; /* yyvsp111 */
	T6 a621; /* yyvsp112 */
	T6 a622; /* yyvsp113 */
	T6 a623; /* yyvsp114 */
	T6 a624; /* yyvsp115 */
	T6 a625; /* yyvsp116 */
	T6 a626; /* yyvsp117 */
	T6 a627; /* yyvsp118 */
	T6 a628; /* yyvsp119 */
	T6 a629; /* yyvsp120 */
	T6 a630; /* yyvsp121 */
	T6 a631; /* yyvsp122 */
	T6 a632; /* yyvsp123 */
	T6 a633; /* yyvsp124 */
	T6 a634; /* yyvsp125 */
	T6 a635; /* yyvsp126 */
	T6 a636; /* yyvsp127 */
	T6 a637; /* yyvsp128 */
	T6 a638; /* yyvsp129 */
	T6 a639; /* yyvsp130 */
	T6 a640; /* yyvsp131 */
	T6 a641; /* yyvsp132 */
	T6 a642; /* yyvsp133 */
	T6 a643; /* yyvsp134 */
	T6 a644; /* yyvsp135 */
	T6 a645; /* yyvsp136 */
	T6 a646; /* yyvsp137 */
	T6 a647; /* yyvsp138 */
	T0* a648; /* last_detachable_any_value */
	T0* a649; /* last_detachable_et_keyword_value */
	T0* a650; /* last_detachable_et_agent_keyword_value */
	T0* a651; /* last_detachable_et_precursor_keyword_value */
	T0* a652; /* last_detachable_et_symbol_value */
	T0* a653; /* last_detachable_et_position_value */
	T0* a654; /* last_detachable_et_boolean_constant_value */
	T0* a655; /* last_detachable_et_break_value */
	T0* a656; /* last_detachable_et_character_constant_value */
	T0* a657; /* last_detachable_et_current_value */
	T0* a658; /* last_detachable_et_free_operator_value */
	T0* a659; /* last_detachable_et_identifier_value */
	T0* a660; /* last_detachable_et_integer_constant_value */
	T0* a661; /* last_detachable_et_keyword_operator_value */
	T0* a662; /* last_detachable_et_manifest_string_value */
	T0* a663; /* last_detachable_et_real_constant_value */
	T0* a664; /* last_detachable_et_result_value */
	T0* a665; /* last_detachable_et_retry_instruction_value */
	T0* a666; /* last_detachable_et_symbol_operator_value */
	T0* a667; /* last_detachable_et_void_value */
	T0* a668; /* last_detachable_et_semicolon_symbol_value */
	T0* a669; /* last_detachable_et_bracket_symbol_value */
	T0* a670; /* last_detachable_et_question_mark_symbol_value */
	T0* a671; /* last_formal_arguments */
	T0* a672; /* last_local_variables */
	T0* a673; /* last_object_tests */
	T0* a674; /* last_iteration_components */
	T0* a675; /* last_inline_separate_arguments */
	T6 a676; /* last_break_end */
	T6 a677; /* last_comment_end */
	T6 a678; /* ms_column */
	T6 a679; /* ms_line */
	T6 a680; /* break_kind */
	T3 a681; /* verbatim_opening_character */
	T1 a682; /* has_natural_64_overflow */
	T11 a683; /* last_natural_64 */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* conforming_ancestors */
	T0* a4; /* parent_checker */
	T0* a5; /* formal_parameter_checker */
	T0* a6; /* parent_context */
	T0* a7; /* current_class */
	T0* a8; /* system_processor */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* a11; /* anchored_type_checker */
	T0* a12; /* signature_checker */
	T0* a13; /* parent_checker */
	T0* a14; /* formal_parameter_checker */
	T0* a15; /* builtin_feature_checker */
	T0* a16; /* precursor_checker */
	T0* a17; /* precursors */
	T0* a18; /* current_class */
	T0* a19; /* system_processor */
	T1 a20; /* has_signature_error */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* qualified_anchored_type_checker */
	T0* a3; /* unfolded_tuple_actual_parameters_resolver */
	T0* a4; /* old_name_rename_table */
	T0* a5; /* new_name_rename_table */
	T0* a6; /* new_alias_name_rename_table */
	T0* a7; /* current_class */
	T0* a8; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
	T0* a3; /* feature_checker */
	T0* a4; /* named_features */
	T0* a5; /* feature_adaptation_resolver */
	T0* a6; /* dotnet_feature_adaptation_resolver */
	T0* a7; /* signature_checker */
	T0* a8; /* parent_checker3 */
	T0* a9; /* precursor_procedures */
	T0* a10; /* precursor_queries */
	T0* a11; /* supplier_builder */
	T0* a12; /* no_suppliers */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
struct S508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AST_FACTORY */
struct S510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type UT_CONFIG_PARSER */
struct S514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T0* a7; /* last_string_value */
	T6 a8; /* line_nb */
	T0* a9; /* yyss */
	T0* a10; /* input_buffer */
	T6 a11; /* yy_end */
	T6 a12; /* yy_position */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_parsing_status */
	T6 a16; /* yy_suspended_yystacksize */
	T6 a17; /* yy_suspended_yystate */
	T6 a18; /* yy_suspended_yyn */
	T6 a19; /* yy_suspended_yychar1 */
	T6 a20; /* yy_suspended_index */
	T6 a21; /* yy_suspended_yyss_top */
	T6 a22; /* yy_suspended_yy_goto */
	T0* a23; /* yyr1 */
	T6 a24; /* yyssp */
	T0* a25; /* yypgoto */
	T0* a26; /* yycheck */
	T0* a27; /* yytable */
	T0* a28; /* yydefgoto */
	T6 a29; /* error_count */
	T1 a30; /* yy_lookahead_needed */
	T6 a31; /* yyerrstatus */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yydefact */
	T0* a36; /* yy_pushed_start_conditions */
	T0* a37; /* yyspecial_routines1 */
	T6 a38; /* yyvsc1 */
	T0* a39; /* yyvs1 */
	T0* a40; /* yyspecial_routines2 */
	T6 a41; /* yyvsc2 */
	T0* a42; /* yyvs2 */
	T0* a43; /* yyspecial_routines3 */
	T6 a44; /* yyvsc3 */
	T0* a45; /* yyvs3 */
	T0* a46; /* yytypes1 */
	T0* a47; /* yytypes2 */
	T6 a48; /* yy_start */
	T6 a49; /* yyvsp1 */
	T6 a50; /* yyvsp2 */
	T6 a51; /* yyvsp3 */
	T1 a52; /* yy_more_flag */
	T6 a53; /* yy_more_len */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T6 a57; /* yy_start_state */
	T0* a58; /* yy_state_stack */
	T6 a59; /* yy_state_count */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_unicode_content_area */
	T0* a62; /* yy_accept */
	T6 a63; /* yy_last_accepting_state */
	T6 a64; /* yy_last_accepting_cpos */
	T0* a65; /* yy_content */
	T0* a66; /* yy_ec */
	T0* a67; /* yy_chk */
	T0* a68; /* yy_base */
	T0* a69; /* yy_def */
	T0* a70; /* yy_meta */
	T0* a71; /* yy_nxt */
	T6 a72; /* yy_lp */
	T0* a73; /* yy_acclist */
	T6 a74; /* yy_looking_for_trail_begin */
	T6 a75; /* yy_full_match */
	T6 a76; /* yy_full_state */
	T6 a77; /* yy_full_lp */
	T1 a78; /* yy_rejected */
	T0* a79; /* last_detachable_any_value */
	T6 a80; /* if_level */
	T6 a81; /* ignored_level */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DO_PROCEDURE */
struct S518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* iteration_components */
	T0* a2; /* implementation_class */
	T0* a3; /* arguments */
	T0* a4; /* rescue_clause */
	T0* a5; /* locals */
	T0* a6; /* object_tests */
	T0* a7; /* compound */
	T6 a8; /* first_seed */
	T0* a9; /* implementation_feature */
	T0* a10; /* other_seeds */
	T0* a11; /* extended_name */
	T6 a12; /* hash_code */
	T0* a13; /* end_keyword */
	T0* a14; /* clients */
	T1 a15; /* validity_checked */
	T1 a16; /* has_validity_error */
	T0* a17; /* preconditions */
	T0* a18; /* first_precursor */
	T0* a19; /* other_precursors */
	T0* a20; /* postconditions */
	T0* a21; /* inline_separate_arguments */
	T0* a22; /* frozen_keyword */
	T0* a23; /* obsolete_message */
	T0* a24; /* is_keyword */
	T0* a25; /* semicolon */
	T0* a26; /* feature_clause */
	T0* a27; /* first_note */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DO_FUNCTION */
struct S522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T6 a2; /* first_seed */
	T0* a3; /* iteration_components */
	T0* a4; /* implementation_class */
	T0* a5; /* object_tests */
	T0* a6; /* rescue_clause */
	T0* a7; /* locals */
	T0* a8; /* compound */
	T0* a9; /* implementation_feature */
	T0* a10; /* other_seeds */
	T0* a11; /* first_precursor */
	T0* a12; /* other_precursors */
	T0* a13; /* preconditions */
	T6 a14; /* hash_code */
	T0* a15; /* postconditions */
	T0* a16; /* assigner */
	T0* a17; /* frozen_keyword */
	T0* a18; /* extended_name */
	T0* a19; /* declared_type */
	T0* a20; /* obsolete_message */
	T0* a21; /* clients */
	T0* a22; /* is_keyword */
	T0* a23; /* end_keyword */
	T0* a24; /* semicolon */
	T0* a25; /* feature_clause */
	T0* a26; /* first_note */
	T0* a27; /* inline_separate_arguments */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T6 a30; /* id */
	T6 a31; /* version */
	T0* a32; /* synonym */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* targets */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* arguments */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T0* a7; /* object_tests */
	T0* a8; /* extended_name */
	T0* a9; /* deferred_keyword */
	T6 a10; /* hash_code */
	T0* a11; /* end_keyword */
	T0* a12; /* clients */
	T1 a13; /* validity_checked */
	T1 a14; /* has_validity_error */
	T0* a15; /* preconditions */
	T0* a16; /* first_precursor */
	T0* a17; /* other_precursors */
	T0* a18; /* postconditions */
	T0* a19; /* frozen_keyword */
	T0* a20; /* obsolete_message */
	T0* a21; /* is_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_note */
	T0* a25; /* inline_separate_arguments */
	T6 a26; /* id */
	T6 a27; /* version */
	T0* a28; /* synonym */
};

/* Struct for type KL_PLATFORM */
struct S525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type CELL [INTEGER_32] */
struct S526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
struct S527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T0* a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T0* a14; /* ht_deleted_item */
	T0* a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type KL_ANY_ROUTINES */
struct S528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_PATHNAME */
struct S530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* drive */
	T0* a3; /* hostname */
	T0* a4; /* sharename */
	T1 a5; /* is_relative */
	T0* a6; /* components */
};

/* Struct for type ARRAY [IMMUTABLE_STRING_32] */
struct S531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
	T1 a4; /* object_comparison */
};

/* Struct for type SPECIAL [IMMUTABLE_STRING_32] */
struct S532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T8 z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S535 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S537 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable STRING_8] */
struct S543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable STRING_8] */
struct S544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type DS_LINKABLE [STRING_8] */
struct S546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKABLE [BOOLEAN] */
struct S547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [INTEGER_32] */
struct S549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S550 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
struct S552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_LIBRARY] */
struct S553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
struct S556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
struct S557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
struct S561 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* yy_state_stack */
	T6 a20; /* yy_state_count */
	T0* a21; /* yy_content_area */
	T0* a22; /* yy_unicode_content_area */
	T0* a23; /* yy_accept */
	T6 a24; /* yy_last_accepting_state */
	T6 a25; /* yy_last_accepting_cpos */
	T0* a26; /* yy_content */
	T0* a27; /* yy_ec */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T0* a39; /* input_buffer */
	T1 a40; /* yy_rejected */
	T0* a41; /* yy_pushed_start_conditions */
	T0* a42; /* last_string_value */
	T0* a43; /* last_error */
	T6 a44; /* pushed_start_condition_count */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* row */
	T6 a2; /* column */
	T0* a3; /* source_name */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S565 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S567 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* equality_tester */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S570 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S572 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ANY] */
struct S573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ANY] */
struct S574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S575 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S580 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S591 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* default_value */
	T2 a3; /* type */
	T1 a4; /* is_list_type */
	T0* a5; /* enumeration_list */
	T2 a6; /* value */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S593 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S594 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* equality_tester */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* encoding */
	T0* a2; /* version */
	T1 a3; /* stand_alone */
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S602 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T0* a35; /* yy_nxt */
	T0* a36; /* yy_chk */
	T0* a37; /* yy_base */
	T0* a38; /* yy_def */
	T0* a39; /* yy_ec */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_accept */
	T0* a42; /* yy_content */
	T0* a43; /* yy_content_area */
	T0* a44; /* yy_unicode_content_area */
	T6 a45; /* last_token */
	T0* a46; /* input_filter */
	T0* a47; /* input_stream */
	T0* a48; /* input_resolver */
	T0* a49; /* yy_acclist */
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* yy_state_stack */
	T6 a22; /* yy_state_count */
	T0* a23; /* yy_content_area */
	T0* a24; /* yy_unicode_content_area */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_content */
	T0* a29; /* yy_ec */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T0* a41; /* input_buffer */
	T1 a42; /* yy_rejected */
	T0* a43; /* yy_pushed_start_conditions */
	T0* a44; /* last_string_value */
	T0* a45; /* last_error */
	T6 a46; /* pushed_start_condition_count */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a38; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a40; /* yy_def */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_meta */
	T0* a43; /* yy_accept */
	T0* a44; /* yy_content */
	T0* a45; /* yy_content_area */
	T0* a46; /* yy_unicode_content_area */
	T6 a47; /* last_token */
	T0* a48; /* input_filter */
	T0* a49; /* input_stream */
	T0* a50; /* input_resolver */
	T0* a51; /* yy_acclist */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* element_local_part */
	T0* a3; /* element_prefix */
	T0* a4; /* context */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S609 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
struct S610 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
struct S611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ECF_SYSTEM_CONFIG] */
struct S614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
struct S616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
struct S617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
struct S618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_TARGET] */
struct S619 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
struct S621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
struct S624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable RX_REGULAR_EXPRESSION] */
struct S625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_DOTNET_ASSEMBLY */
struct S628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* implicit_attachment_type_mark */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_identity_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_identity_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_identity_any_type */
	T0* a34; /* immutable_string_8_type */
	T0* a35; /* immutable_string_32_type */
	T0* a36; /* integer_type */
	T0* a37; /* integer_8_type */
	T0* a38; /* integer_8_convert_feature */
	T0* a39; /* integer_16_type */
	T0* a40; /* integer_16_convert_feature */
	T0* a41; /* integer_32_type */
	T0* a42; /* integer_32_convert_feature */
	T0* a43; /* integer_64_type */
	T0* a44; /* integer_64_convert_feature */
	T0* a45; /* ise_exception_manager_type */
	T0* a46; /* iterable_detachable_separate_any_type */
	T0* a47; /* natural_type */
	T0* a48; /* natural_8_type */
	T0* a49; /* natural_8_convert_feature */
	T0* a50; /* natural_16_type */
	T0* a51; /* natural_16_convert_feature */
	T0* a52; /* natural_32_type */
	T0* a53; /* natural_32_convert_feature */
	T0* a54; /* natural_64_type */
	T0* a55; /* natural_64_convert_feature */
	T0* a56; /* none_type */
	T0* a57; /* detachable_none_type */
	T0* a58; /* pointer_type */
	T0* a59; /* predicate_identity_type */
	T0* a60; /* procedure_identity_type */
	T0* a61; /* real_type */
	T0* a62; /* real_32_type */
	T0* a63; /* real_32_convert_feature */
	T0* a64; /* real_64_type */
	T0* a65; /* real_64_convert_feature */
	T0* a66; /* routine_identity_type */
	T0* a67; /* special_any_type */
	T0* a68; /* special_detachable_any_type */
	T0* a69; /* special_identity_type */
	T0* a70; /* string_type */
	T0* a71; /* detachable_string_type */
	T0* a72; /* string_8_type */
	T0* a73; /* detachable_string_8_type */
	T0* a74; /* string_8_convert_feature */
	T0* a75; /* string_32_type */
	T0* a76; /* string_32_convert_feature */
	T0* a77; /* system_object_type */
	T0* a78; /* system_object_parents */
	T0* a79; /* system_string_type */
	T0* a80; /* type_detachable_any_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* type_detachable_like_current_type */
	T0* a84; /* type_identity_type */
	T0* a85; /* typed_pointer_identity_type */
	T0* a86; /* wide_character_type */
	T1 a87; /* is_read_only */
	T1 a88; /* is_preparsed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
struct S634 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
struct S635 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* modulus */
	T0* a2; /* key_equality_tester */
	T0* a3; /* item_storage */
	T0* a4; /* slots */
	T0* a5; /* hash_function */
	T0* a6; /* key_storage */
	T0* a7; /* clashes */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* count */
	T0* a13; /* equality_tester */
	T6 a14; /* found_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S636 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_FEATURE_IDS */
struct S637 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S638 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S639 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
struct S643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_MASTER_CLASS] */
struct S644 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S645 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S646 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
struct S648 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
struct S649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* modulus */
	T0* a2; /* key_equality_tester */
	T0* a3; /* item_storage */
	T0* a4; /* slots */
	T0* a5; /* hash_function */
	T0* a6; /* key_storage */
	T0* a7; /* clashes */
	T0* a8; /* equality_tester */
	T6 a9; /* capacity */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T0* a13; /* special_item_routines */
	T0* a14; /* special_key_routines */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
struct S650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* modulus */
	T0* a2; /* key_equality_tester */
	T0* a3; /* item_storage */
	T0* a4; /* slots */
	T0* a5; /* hash_function */
	T0* a6; /* key_storage */
	T0* a7; /* clashes */
	T6 a8; /* position */
	T6 a9; /* count */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* free_slot */
	T6 a13; /* last_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_SYMBOL */
struct S655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* break */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S656 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* break */
	T6 a4; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S668 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
struct S674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
struct S675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type SPECIAL [ET_EQUALITY_EXPRESSION] */
struct S677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
struct S678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
struct S679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
struct S680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
struct S681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_UNQUALIFIED_CALL_EXPRESSION */
struct S686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S687 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
struct S689 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
struct S690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
struct S691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
struct S694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
struct S697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S698 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S701 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_EQUALITY_TESTER [INTEGER_32] */
struct S704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
struct S705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
struct S706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_OBJECT_TEST] */
struct S708 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
struct S709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
struct S710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
struct S723 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
struct S730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
struct S741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
struct S742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
struct S743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
struct S745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
struct S752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* slots */
	T0* a14; /* clashes */
	T0* a15; /* special_item_routines */
	T0* a16; /* key_storage */
	T0* a17; /* special_key_routines */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
struct S753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
struct S758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
struct S759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
struct S765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S766 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S767 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S770 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S773 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S779 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
struct S782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S786 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S788 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_NAMED_OBJECT_TEST */
struct S791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* attached_keyword */
	T0* a4; /* declared_type */
	T0* a5; /* expression */
	T0* a6; /* as_keyword */
};

/* Struct for type SPECIAL [ET_NAMED_OBJECT_TEST] */
struct S792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
struct S793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
struct S794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* special_routines */
	T0* a3; /* storage */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
struct S795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ITERATION_COMPONENT] */
struct S796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
struct S798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
struct S799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
struct S801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
struct S802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
struct S803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
struct S804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ATTACHMENT_SCOPE] */
struct S806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
struct S807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
struct S808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
struct S809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ASSERTIONS] */
struct S810 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
struct S812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
struct S813 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_NOTE_TERM] */
struct S815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
struct S816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_CLIENT_ITEM] */
struct S817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
struct S818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
struct S822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type SPECIAL [NATURAL_32] */
struct S823 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T10 z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [RX_CHARACTER_SET] */
struct S824 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_32] */
struct S825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S826 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T11 z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
struct S827 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* position */
	T0* a3; /* internal_cursor */
	T6 a4; /* found_position */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T0* a7; /* key_equality_tester */
	T0* a8; /* key_storage */
	T0* a9; /* slots */
	T0* a10; /* hash_function */
	T0* a11; /* clashes */
	T0* a12; /* internal_keys */
	T6 a13; /* capacity */
	T6 a14; /* free_slot */
	T6 a15; /* last_position */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* equality_tester */
	T0* a19; /* special_item_routines */
	T0* a20; /* special_key_routines */
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
struct S828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UC_UTF8_STRING */
struct S834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type THREAD_ATTRIBUTES */
struct S835 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* shared */
	T14 a2; /* internal_item */
	T0* a3; /* managed_pointer */
};

/* Struct for type CELL [BOOLEAN] */
struct S836 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
};

/* Struct for type CHARACTER_PROPERTY */
struct S839 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type STRING_8_SEARCHER */
struct S840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* deltas */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type ET_ECF_NOTE_ELEMENT */
struct S844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* attributes */
	T0* a3; /* elements */
	T0* a4; /* content */
};

/* Struct for type ET_ECF_CLUSTERS */
struct S845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARIES */
struct S846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S847 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_FILE_RULES */
struct S848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* file_rules */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAGS */
struct S849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDES */
struct S850 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARIES */
struct S851 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAGS */
struct S852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_MAKES */
struct S853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECTS */
struct S854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCES */
struct S855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ACTION] */
struct S856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
struct S857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* eifgens_location */
	T0* a7; /* classname_prefix */
	T1 a8; /* is_read_only */
	T1 a9; /* use_application_options */
	T0* a10; /* options */
	T0* a11; /* class_options */
	T0* a12; /* class_renamings */
	T0* a13; /* visible_classes */
	T0* a14; /* conditions */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type ET_ECF_VERSION */
struct S859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_release */
	T6 a4; /* internal_build */
	T0* a5; /* product */
	T0* a6; /* company */
	T0* a7; /* copyright */
};

/* Struct for type ET_ECF_CLUSTER */
struct S860 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* target */
	T0* a6; /* description */
	T1 a7; /* is_hidden */
	T0* a8; /* classname_prefix */
	T1 a9; /* is_read_only */
	T1 a10; /* is_recursive */
	T0* a11; /* conditioned_subclusters */
	T0* a12; /* conditioned_file_rules */
	T0* a13; /* options */
	T0* a14; /* class_options */
	T0* a15; /* class_renamings */
	T0* a16; /* class_mappings */
	T0* a17; /* visible_classes */
	T0* a18; /* provider_groups */
	T0* a19; /* conditions */
	T0* a20; /* notes */
	T1 a21; /* is_override */
	T0* a22; /* overridden_group */
	T1 a23; /* overridden_constraint_enabled */
	T1 a24; /* scm_mapping_constraint_enabled */
	T0* a25; /* subclusters */
	T1 a26; /* use_obsolete_syntax */
	T0* a27; /* scm_read_mapping */
	T0* a28; /* scm_write_mapping */
	T1 a29; /* is_implicit */
	T0* a30; /* file_rules */
	T0* a31; /* parent */
	T0* a32; /* provider_constraint */
	T0* a33; /* dependant_constraint */
	T1 a34; /* is_preparsed */
	T1 a35; /* is_abstract */
	T0* a36; /* cached_absolute_pathname */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAG */
struct S861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDE */
struct S862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARY */
struct S863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAG */
struct S864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_MAKE */
struct S865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECT */
struct S866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCE */
struct S867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_FILE_RULE */
struct S868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* exclude */
	T0* a2; /* include */
	T0* a3; /* exclude_regexp */
	T0* a4; /* include_regexp */
	T0* a5; /* conditions */
	T0* a6; /* description */
};

/* Struct for type ET_ECF_ACTION */
struct S869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* command_name */
	T0* a2; /* description */
	T1 a3; /* must_succeed */
	T0* a4; /* working_directory */
	T0* a5; /* conditions */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
struct S870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_keys */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
struct S871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_ECF_OPTIONS] */
struct S872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
struct S873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ECF_ROOT_CLASS */
struct S874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* creation_procedure_name */
	T0* a3; /* cluster_name */
};

/* Struct for type ET_ECF_ROOT_ALL_CLASSES */
struct S875 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_ORED_CONDITIONS */
struct S876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type ET_ECF_ANDED_CONDITIONS */
struct S877 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type ET_ECF_VISIBLE_CLASS */
struct S878 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* feature_name */
	T0* a3; /* new_class_name */
	T0* a4; /* new_feature_name */
};

/* Struct for type ET_ECF_BUILD_CONDITION */
struct S880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_CONCURRENCY_CONDITION */
struct S881 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_VOID_SAFETY_CONDITION */
struct S882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_CUSTOM_CONDITION */
struct S883 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* value */
	T0* a3; /* match */
	T1 a4; /* is_excluded */
};

/* Struct for type ET_ECF_DOTNET_CONDITION */
struct S884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_PLATFORM_CONDITION */
struct S886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_COMPILER_VERSION_CONDITION */
struct S888 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type ET_ECF_MSIL_CLR_VERSION_CONDITION */
struct S889 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type UT_COUNTER */
struct S891 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type KL_AGENT_ROUTINES [ET_CLASS] */
struct S892 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [UT_COUNTER] */
struct S893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
struct S894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_UNIVERSE] */
struct S895 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_UNIVERSE]] */
struct S896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
struct S897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
struct S898 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
struct S900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T0* a13; /* internal_cursor */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLY] */
struct S901 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
struct S904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_INTERNAL_UNIVERSE] */
struct S905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
struct S906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
struct S907 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_SYSTEM_PROCESSOR] */
struct S909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_LIBRARY */
struct S910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_system */
	T0* a2; /* library */
	T0* a3; /* name */
	T0* a4; /* libraries */
	T0* a5; /* clusters */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* implicit_attachment_type_mark */
	T0* a8; /* master_classes */
	T0* a9; /* master_class_mutex */
	T0* a10; /* any_type */
	T0* a11; /* detachable_any_type */
	T0* a12; /* detachable_separate_any_type */
	T0* a13; /* any_parent */
	T0* a14; /* any_parents */
	T0* a15; /* any_clients */
	T0* a16; /* tuple_type */
	T0* a17; /* detachable_tuple_type */
	T0* a18; /* tuple_identity_type */
	T0* a19; /* unfolded_empty_tuple_actual_parameters */
	T0* a20; /* array_any_type */
	T0* a21; /* array_detachable_any_type */
	T0* a22; /* array_none_type */
	T0* a23; /* array_identity_type */
	T0* a24; /* boolean_type */
	T0* a25; /* character_type */
	T0* a26; /* character_8_type */
	T0* a27; /* character_8_convert_feature */
	T0* a28; /* character_32_type */
	T0* a29; /* character_32_convert_feature */
	T0* a30; /* double_type */
	T0* a31; /* exception_type */
	T0* a32; /* detachable_exception_type */
	T0* a33; /* exception_manager_type */
	T0* a34; /* function_identity_any_type */
	T0* a35; /* immutable_string_8_type */
	T0* a36; /* immutable_string_32_type */
	T0* a37; /* integer_type */
	T0* a38; /* integer_8_type */
	T0* a39; /* integer_8_convert_feature */
	T0* a40; /* integer_16_type */
	T0* a41; /* integer_16_convert_feature */
	T0* a42; /* integer_32_type */
	T0* a43; /* integer_32_convert_feature */
	T0* a44; /* integer_64_type */
	T0* a45; /* integer_64_convert_feature */
	T0* a46; /* ise_exception_manager_type */
	T0* a47; /* iterable_detachable_separate_any_type */
	T0* a48; /* natural_type */
	T0* a49; /* natural_8_type */
	T0* a50; /* natural_8_convert_feature */
	T0* a51; /* natural_16_type */
	T0* a52; /* natural_16_convert_feature */
	T0* a53; /* natural_32_type */
	T0* a54; /* natural_32_convert_feature */
	T0* a55; /* natural_64_type */
	T0* a56; /* natural_64_convert_feature */
	T0* a57; /* none_type */
	T0* a58; /* detachable_none_type */
	T0* a59; /* pointer_type */
	T0* a60; /* predicate_identity_type */
	T0* a61; /* procedure_identity_type */
	T0* a62; /* real_type */
	T0* a63; /* real_32_type */
	T0* a64; /* real_32_convert_feature */
	T0* a65; /* real_64_type */
	T0* a66; /* real_64_convert_feature */
	T0* a67; /* routine_identity_type */
	T0* a68; /* special_any_type */
	T0* a69; /* special_detachable_any_type */
	T0* a70; /* special_identity_type */
	T0* a71; /* string_type */
	T0* a72; /* detachable_string_type */
	T0* a73; /* string_8_type */
	T0* a74; /* detachable_string_8_type */
	T0* a75; /* string_8_convert_feature */
	T0* a76; /* string_32_type */
	T0* a77; /* string_32_convert_feature */
	T0* a78; /* system_object_type */
	T0* a79; /* system_object_parents */
	T0* a80; /* system_string_type */
	T0* a81; /* type_detachable_any_type */
	T0* a82; /* detachable_type_exception_type */
	T0* a83; /* type_detachable_exception_type */
	T0* a84; /* type_detachable_like_current_type */
	T0* a85; /* type_identity_type */
	T0* a86; /* typed_pointer_identity_type */
	T0* a87; /* wide_character_type */
	T1 a88; /* is_read_only */
	T1 a89; /* is_preparsed */
};

/* Struct for type TUPLE [ET_LIBRARY] */
struct S911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_LIBRARY]] */
struct S912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_HASH_SET [ET_UNIVERSE] */
struct S913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type TUPLE [ET_CLUSTER] */
struct S915 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_CLUSTER]] */
struct S916 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM] */
struct S917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
struct S918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type TUPLE [ET_AST_PROCESSOR] */
struct S919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_MASTER_CLASS] */
struct S920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
struct S921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S927 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type PREDICATE [TUPLE [ET_CLASS]] */
struct S928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
struct S930 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_FLATTENING_STATUS_CHECKER] */
struct S931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_INTERFACE_STATUS_CHECKER] */
struct S932 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [BOOLEAN] */
struct S934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1;
};

/* Struct for type TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
struct S935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
struct S938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
struct S942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
struct S943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
struct S944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_PARENTHESIS_EXPRESSION */
struct S945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* implementation_class */
	T0* a4; /* type_mark */
};

/* Struct for type XM_LINKED_LIST [XM_ELEMENT_NODE] */
struct S951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S955 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* impl */
	T0* a4; /* utf_queue */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [ET_LIBRARY] */
struct S960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* special_item_routines */
	T0* a7; /* item_storage */
	T0* a8; /* clashes */
	T0* a9; /* slots */
	T6 a10; /* found_position */
	T0* a11; /* internal_cursor */
	T6 a12; /* slots_position */
	T6 a13; /* count */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_LIBRARY]] */
struct S961 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
struct S962 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET] */
struct S963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
struct S964 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
struct S966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S967 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIAS_NAME_LIST */
struct S968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S978 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type CONSOLE */
struct S983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* file_pointer */
	T0* a2; /* last_string_32 */
	T6 a3; /* mode */
	T0* a4; /* last_string */
	T0* a5; /* internal_name */
	T0* a6; /* internal_detachable_name_pointer */
	T2 a7; /* last_character */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
struct S984 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_NOTE_ELEMENT] */
struct S985 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
struct S986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLUSTER] */
struct S987 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S990 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
struct S993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* equality_tester */
	T0* a6; /* internal_cursor */
};

/* Struct for type C_DATE */
struct S994 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* millisecond_now */
	T0* a2; /* internal_item */
	T1 a3; /* is_utc */
};

/* Struct for type YY_FILE_BUFFER */
struct S995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T6 a6; /* count */
	T1 a7; /* filled */
	T0* a8; /* file */
	T1 a9; /* beginning_of_line */
	T6 a10; /* capacity */
	T1 a11; /* end_of_file */
	T1 a12; /* interactive */
};

/* Struct for type KL_STDIN_FILE */
struct S996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* character_buffer */
};

/* Struct for type YY_BUFFER */
struct S997 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T6 a6; /* count */
	T1 a7; /* filled */
	T1 a8; /* beginning_of_line */
	T6 a9; /* capacity */
};

/* Struct for type YY_UNICODE_FILE_BUFFER */
struct S1001 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* has_utf8_bom */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
	T1 a10; /* end_of_file */
	T1 a11; /* interactive */
	T6 a12; /* encoding */
	T0* a13; /* file */
	T6 a14; /* default_encoding */
	T1 a15; /* beginning_of_line */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S1002 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S1005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S1006 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S1007 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
struct S1008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
struct S1009 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
struct S1010 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1011 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S1013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S1014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_NAMED_CLASS] */
struct S1015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S1016 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD] */
struct S1017 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S1018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S1019 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S1020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S1021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S1022 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S1023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S1024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_SYMBOL] */
struct S1025 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S1026 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_POSITION] */
struct S1027 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S1028 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S1030 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S1031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BREAK] */
struct S1033 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S1034 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S1036 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S1037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CURRENT] */
struct S1038 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S1039 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FREE_OPERATOR */
struct S1040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* break */
	T0* a5; /* operator_name */
	T6 a6; /* seed */
};

/* Struct for type SPECIAL [detachable ET_FREE_OPERATOR] */
struct S1041 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
struct S1042 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_IDENTIFIER] */
struct S1043 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S1044 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S1046 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S1047 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S1048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S1049 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S1050 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING] */
struct S1051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S1052 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_REAL_CONSTANT] */
struct S1054 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S1055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RESULT] */
struct S1056 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S1057 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S1058 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S1059 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S1060 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S1061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* break */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S1062 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S1063 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VOID */
struct S1064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type SPECIAL [detachable ET_VOID] */
struct S1065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S1066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S1067 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S1068 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S1069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S1070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S1071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S1072 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S1073 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S1074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_EXPRESSION */
struct S1075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* item_name */
	T0* a3; /* as_keyword */
	T0* a4; /* unfolded_cursor_name */
	T0* a5; /* across_keyword */
	T0* a6; /* iterable_expression */
	T0* a7; /* until_conditional */
	T0* a8; /* iteration_conditional */
	T0* a9; /* end_keyword */
	T1 a10; /* is_all */
	T1 a11; /* has_cursor_name */
	T0* a12; /* invariant_part */
	T0* a13; /* variant_part */
	T0* a14; /* new_cursor_expression */
	T0* a15; /* cursor_item_expression */
	T0* a16; /* cursor_after_expression */
	T0* a17; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S1076 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S1077 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_INSTRUCTION */
struct S1078 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item_name */
	T0* a2; /* as_keyword */
	T0* a3; /* unfolded_cursor_name */
	T0* a4; /* across_keyword */
	T0* a5; /* iterable_expression */
	T0* a6; /* from_compound */
	T0* a7; /* until_conditional */
	T0* a8; /* loop_compound */
	T0* a9; /* end_keyword */
	T1 a10; /* has_cursor_name */
	T0* a11; /* invariant_part */
	T0* a12; /* variant_part */
	T0* a13; /* new_cursor_expression */
	T0* a14; /* cursor_item_expression */
	T0* a15; /* cursor_after_expression */
	T0* a16; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S1079 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S1080 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S1081 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S1082 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S1083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S1084 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S1085 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S1086 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S1087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1088 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1090 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S1092 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S1094 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_TARGET] */
struct S1095 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S1096 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ALIAS_NAME */
struct S1097 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T0* a4; /* convert_keyword */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME] */
struct S1098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
struct S1099 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME_LIST] */
struct S1100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S1101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ASSIGNER] */
struct S1103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S1104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S1105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* target */
	T0* a3; /* name */
	T0* a4; /* arguments */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S1106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S1107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CALL_AGENT */
struct S1108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* target */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* implicit_result */
};

/* Struct for type SPECIAL [detachable ET_CALL_AGENT] */
struct S1109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S1110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S1111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S1112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S1113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S1114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S1115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE] */
struct S1117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S1118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S1120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S1121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_ITEM] */
struct S1123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S1124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHOICE_LIST */
struct S1125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CHOICE_LIST] */
struct S1126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S1127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLASS] */
struct S1128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S1129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLIENT_ITEM] */
struct S1130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S1131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLIENTS */
struct S1132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CLIENTS] */
struct S1133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S1134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_COMPOUND] */
struct S1135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S1136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONDITIONAL] */
struct S1138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
struct S1139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTANT] */
struct S1140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S1145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S1147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S1148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S1149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
struct S1150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_RENAME_LIST */
struct S1151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* end_keyword */
	T0* a2; /* rename_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
struct S1152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S1153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S1155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S1156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S1158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S1162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S1163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* convert_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S1164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S1165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S1166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
struct S1167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATION_REGION */
struct S1168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* left_symbol */
	T0* a3; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_CREATION_REGION] */
struct S1169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S1170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATOR */
struct S1171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type SPECIAL [detachable ET_CREATOR] */
struct S1172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S1173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATOR_LIST */
struct S1174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CREATOR_LIST] */
struct S1175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S1176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S1177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S1178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
struct S1179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION */
struct S1180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_keyword */
	T0* a3; /* then_expression */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
struct S1181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S1182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION_LIST */
struct S1183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S1184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S1185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART */
struct S1186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART] */
struct S1187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S1188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S1189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S1190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S1191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT] */
struct S1193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S1194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT_LIST] */
struct S1195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
struct S1196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPRESSION] */
struct S1197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
struct S1198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPRESSION_ITEM] */
struct S1199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S1202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S1204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S1205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S1206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S1207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S1209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S1211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S1212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S1213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S1214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME] */
struct S1215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S1216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S1218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S1219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S1220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S1226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S1227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
struct S1233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_EXPRESSION */
struct S1234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* conditional */
	T0* a3; /* then_keyword */
	T0* a4; /* then_expression */
	T0* a5; /* else_keyword */
	T0* a6; /* else_expression */
	T0* a7; /* end_keyword */
	T0* a8; /* elseif_parts */
};

/* Struct for type SPECIAL [detachable ET_IF_EXPRESSION] */
struct S1235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S1236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_INSTRUCTION */
struct S1237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S1238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
struct S1239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_AGENT] */
struct S1240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
struct S1241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
struct S1242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S1243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S1244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
struct S1245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
struct S1246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
struct S1247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
struct S1248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
struct S1249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INSPECT_EXPRESSION */
struct S1250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* conditional */
	T0* a3; /* when_parts */
	T0* a4; /* end_keyword */
	T0* a5; /* else_part */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_EXPRESSION] */
struct S1251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S1252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S1253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S1254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S1255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INSTRUCTION] */
struct S1256 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S1257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INVARIANTS */
struct S1258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a3; /* storage */
	T6 a4; /* count */
	T0* a5; /* object_tests */
	T0* a6; /* iteration_components */
	T0* a7; /* inline_separate_arguments */
	T1 a8; /* validity_checked */
	T1 a9; /* has_validity_error */
};

/* Struct for type SPECIAL [detachable ET_INVARIANTS] */
struct S1259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S1262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LIKE_TYPE] */
struct S1264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S1265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S1266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S1267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S1273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S1274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S1275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S1276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S1277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T0* a3; /* left_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S1278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S1279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S1281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S1282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S1283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S1284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S1285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S1286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
struct S1287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_NOTE_LIST */
struct S1288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* note_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_NOTE_LIST] */
struct S1289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
struct S1290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_ITEM] */
struct S1292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
struct S1293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM] */
struct S1294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
struct S1295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM_ITEM] */
struct S1297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
struct S1298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_NOTE_TERM_LIST */
struct S1299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM_LIST] */
struct S1300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S1301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_OBSOLETE] */
struct S1303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S1305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S1307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT] */
struct S1308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
struct S1309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT_CLAUSE_LIST */
struct S1310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
struct S1311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S1312 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_ITEM] */
struct S1313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S1314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_LIST] */
struct S1315 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S1316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_POSTCONDITIONS */
struct S1317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* ensure_keyword */
	T0* a6; /* then_keyword */
};

/* Struct for type SPECIAL [detachable ET_POSTCONDITIONS] */
struct S1318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
struct S1319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PRECONDITIONS] */
struct S1320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
struct S1321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PROCEDURE] */
struct S1322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
struct S1326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_QUANTIFIER_EXPRESSION */
struct S1327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* item_name */
	T0* a3; /* unfolded_cursor_name */
	T0* a4; /* quantifier_symbol */
	T0* a5; /* colon_symbol */
	T0* a6; /* iterable_expression */
	T0* a7; /* bar_symbol */
	T0* a8; /* iteration_expression */
	T1 a9; /* is_all */
	T0* a10; /* new_cursor_expression */
	T0* a11; /* cursor_item_expression */
	T0* a12; /* cursor_after_expression */
	T0* a13; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
struct S1328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
struct S1329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUERY] */
struct S1330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S1331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_ITEM] */
struct S1333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S1334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_LIST] */
struct S1335 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
struct S1336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_REPEAT_INSTRUCTION */
struct S1337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item_name */
	T0* a2; /* unfolded_cursor_name */
	T0* a3; /* open_repeat_symbol */
	T0* a4; /* colon_symbol */
	T0* a5; /* iterable_expression */
	T0* a6; /* bar_symbol */
	T0* a7; /* loop_compound */
	T0* a8; /* close_repeat_symbol */
	T0* a9; /* new_cursor_expression */
	T0* a10; /* cursor_item_expression */
	T0* a11; /* cursor_after_expression */
	T0* a12; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
struct S1338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S1340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* feature_keyword */
	T0* a3; /* static_type */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
};

/* Struct for type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S1342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S1343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S1344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
struct S1345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE] */
struct S1346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
struct S1347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT] */
struct S1349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
struct S1350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
struct S1352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
struct S1353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_TYPE_CONSTRAINT_LIST */
struct S1354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
struct S1355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S1356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_ITEM] */
struct S1358 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S1359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_LIST] */
struct S1360 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S1361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VARIANT */
struct S1362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type SPECIAL [detachable ET_VARIANT] */
struct S1363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
struct S1364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_EXPRESSION */
struct S1365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_keyword */
	T0* a3; /* then_expression */
};

/* Struct for type SPECIAL [detachable ET_WHEN_EXPRESSION] */
struct S1366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
struct S1367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_EXPRESSION_LIST */
struct S1368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
struct S1369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S1370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART */
struct S1371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART] */
struct S1372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S1373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S1374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S1375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S1376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_WRITABLE] */
struct S1377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S1378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
struct S1379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1381 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* all_base_types */
	T0* a3; /* base_types */
	T0* a4; /* formal_dependencies */
	T0* a5; /* base_type_dependencies */
	T0* a6; /* recursive_formal_constraints */
	T0* a7; /* recursive_formal_constraints_to_be_processed */
	T0* a8; /* current_class */
	T0* a9; /* system_processor */
	T0* a10; /* current_formal */
	T0* a11; /* current_type_constraint */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T6 a4; /* position */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* position */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* count */
	T6 a10; /* free_slot */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
struct S1388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
struct S1389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T0* a17; /* internal_keys */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* rename_table */
	T0* a3; /* export_table */
	T0* a4; /* undefine_table */
	T0* a5; /* redefine_table */
	T0* a6; /* select_table */
	T0* a7; /* replicable_features */
	T0* a8; /* current_class */
	T0* a9; /* system_processor */
	T0* a10; /* free_parent_feature */
	T0* a11; /* parent_feature_list */
	T0* a12; /* free_inherited_feature */
	T0* a13; /* inherited_feature_list */
	T0* a14; /* free_redeclared_feature */
	T0* a15; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dotnet_features */
	T0* a3; /* other_dotnet_features */
	T0* a4; /* current_class */
	T0* a5; /* system_processor */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_feature */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* parent_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T6 a5; /* processing_mode */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_BUILTIN_FEATURE_CHECKER */
struct S1398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* builtin_features */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_feature */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
struct S1400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S1401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_class */
	T0* a4; /* adapted_base_class_checker */
	T0* a5; /* adapted_base_classes */
	T0* a6; /* target_context */
	T0* a7; /* other_context */
	T0* a8; /* classes_to_be_processed */
	T0* a9; /* system_processor */
	T1 a10; /* in_qualified_anchored_type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T6 a3; /* position */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
struct S1405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* position */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T0* a5; /* key_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T0* a15; /* internal_cursor */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_RENAME */
struct S1409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S1411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S1412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S1413 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* supplier_classes */
	T0* a2; /* current_class */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
	T1 a9; /* has_other_deferred */
	T1 a10; /* has_other_effective */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S1418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S1419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_STACK [YY_BUFFER] */
struct S1421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [NATIVE_STRING] */
struct S1426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [detachable STRING_8] */
struct S1427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* code */
};

/* Struct for type DS_BILINKABLE [XM_POSITION] */
struct S1430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S1431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S1432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1436 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1440 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [STRING_8] */
struct S1446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* context */
};

/* Struct for type DS_LINKED_QUEUE [detachable STRING_8] */
struct S1450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S1451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
};

/* Struct for type KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ADAPTED_LIBRARY] */
struct S1456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
struct S1457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
struct S1458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_LINKABLE [XM_DOCUMENT_NODE] */
struct S1459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
struct S1464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
struct S1465 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
struct S1467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_NAME] */
struct S1469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
struct S1471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
struct S1472 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
struct S1473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
struct S1474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
struct S1476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
struct S1477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
struct S1479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
struct S1480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
struct S1481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_SYSTEM_PROCESSOR] */
struct S1483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
struct S1484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
struct S1485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
struct S1486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ADAPTED_CLASS] */
struct S1488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
struct S1489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S1490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S1491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
struct S1492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
struct S1493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
struct S1494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_8] */
struct S1497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
struct S1498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
struct S1499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
struct S1500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_64] */
struct S1507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S1510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type UT_TRISTATE */
struct S1511 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* value */
};

/* Struct for type KL_AGENT_ROUTINES [ANY] */
struct S1512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [UT_TRISTATE] */
struct S1513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
struct S1514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type PREDICATE [TUPLE [ET_MASTER_CLASS]] */
struct S1515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type PREDICATE [TUPLE] */
struct S1516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
struct S1518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* last_position */
	T6 a3; /* capacity */
	T6 a4; /* slots_position */
	T6 a5; /* count */
	T6 a6; /* modulus */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
struct S1519 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type KL_AGENT_ROUTINES [ET_UNIVERSE] */
struct S1521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PREDICATE [TUPLE [ET_UNIVERSE]] */
struct S1522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
struct S1523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
struct S1524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
struct S1526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
struct S1527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
struct S1528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S1529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* agent_type */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type XM_COMMENT */
struct S1530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type ET_LIKE_N */
struct S1535 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* previous */
	T0* a3; /* type_mark */
	T0* a4; /* like_keyword */
};

/* Struct for type TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
struct S1538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* string */
	T6 a5; /* location */
};

/* Struct for type KL_UNICODE_CHARACTER_BUFFER */
struct S1541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_unicode_special */
	T2 a2; /* invalid_character */
	T0* a3; /* unicode_area */
	T0* a4; /* area */
	T3 a5; /* invalid_unicode_character */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT_LIST */
struct S1543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S1544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T1 a3; /* has_invalid_code */
	T3 a4; /* value */
	T6 a5; /* compressed_position */
	T0* a6; /* literal */
	T0* a7; /* type */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S1545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S1546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T1 a4; /* has_invalid_code */
	T6 a5; /* compressed_position */
	T0* a6; /* literal */
	T0* a7; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S1547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* marker */
	T0* a7; /* open_white_characters */
	T0* a8; /* close_white_characters */
	T1 a9; /* is_left_aligned */
	T0* a10; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S1548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T6 a6; /* compressed_position */
	T0* a7; /* literal */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S1549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T6 a6; /* compressed_position */
	T0* a7; /* literal */
	T0* a8; /* type */
};

/* Struct for type ET_OCTAL_INTEGER_CONSTANT */
struct S1550 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T6 a6; /* compressed_position */
	T0* a7; /* literal */
	T0* a8; /* type */
};

/* Struct for type ET_BINARY_INTEGER_CONSTANT */
struct S1551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T6 a6; /* compressed_position */
	T0* a7; /* literal */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S1552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S1553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S1555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S1556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S1557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S1558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_TAGGED_NOTE */
struct S1560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* terms */
};

/* Struct for type ET_NOTE */
struct S1561 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* terms */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S1562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S1563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* constraint_base_types */
	T0* a5; /* implementation_class */
	T0* a6; /* type_mark */
	T6 a7; /* index */
	T0* a8; /* name */
	T0* a9; /* recursive_formal_constraints */
};

/* Struct for type ET_TYPE_RENAME_CONSTRAINT */
struct S1564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S1565 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S1566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1567 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type ET_ALL_EXPORT */
struct S1568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S1570 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S1571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S1573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T6 a2; /* first_seed */
	T0* a3; /* iteration_components */
	T0* a4; /* implementation_class */
	T0* a5; /* object_tests */
	T0* a6; /* compound */
	T0* a7; /* implementation_feature */
	T0* a8; /* other_seeds */
	T0* a9; /* first_precursor */
	T0* a10; /* other_precursors */
	T0* a11; /* preconditions */
	T6 a12; /* hash_code */
	T0* a13; /* postconditions */
	T0* a14; /* assigner */
	T0* a15; /* frozen_keyword */
	T0* a16; /* extended_name */
	T0* a17; /* keys */
	T0* a18; /* first_note */
	T0* a19; /* declared_type */
	T0* a20; /* obsolete_message */
	T0* a21; /* locals */
	T0* a22; /* rescue_clause */
	T0* a23; /* clients */
	T0* a24; /* is_keyword */
	T0* a25; /* end_keyword */
	T0* a26; /* semicolon */
	T0* a27; /* feature_clause */
	T0* a28; /* inline_separate_arguments */
	T1 a29; /* validity_checked */
	T1 a30; /* has_validity_error */
	T6 a31; /* id */
	T6 a32; /* version */
	T0* a33; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S1574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T6 a2; /* first_seed */
	T0* a3; /* iteration_components */
	T0* a4; /* implementation_class */
	T0* a5; /* object_tests */
	T0* a6; /* implementation_feature */
	T0* a7; /* other_seeds */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T0* a10; /* preconditions */
	T6 a11; /* hash_code */
	T0* a12; /* postconditions */
	T0* a13; /* assigner */
	T0* a14; /* declared_type */
	T0* a15; /* frozen_keyword */
	T0* a16; /* extended_name */
	T0* a17; /* obsolete_message */
	T0* a18; /* clients */
	T0* a19; /* is_keyword */
	T0* a20; /* deferred_keyword */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_note */
	T0* a25; /* inline_separate_arguments */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S1576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* object_tests */
	T0* a5; /* arguments */
	T0* a6; /* compound */
	T0* a7; /* implementation_feature */
	T0* a8; /* other_seeds */
	T0* a9; /* first_precursor */
	T0* a10; /* other_precursors */
	T0* a11; /* preconditions */
	T6 a12; /* hash_code */
	T0* a13; /* postconditions */
	T0* a14; /* keys */
	T0* a15; /* first_note */
	T0* a16; /* extended_name */
	T0* a17; /* frozen_keyword */
	T0* a18; /* obsolete_message */
	T0* a19; /* locals */
	T0* a20; /* rescue_clause */
	T0* a21; /* clients */
	T0* a22; /* is_keyword */
	T0* a23; /* end_keyword */
	T0* a24; /* semicolon */
	T0* a25; /* feature_clause */
	T0* a26; /* inline_separate_arguments */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S1577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* object_tests */
	T0* a5; /* arguments */
	T0* a6; /* implementation_feature */
	T0* a7; /* other_seeds */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T0* a10; /* preconditions */
	T6 a11; /* hash_code */
	T8 a12; /* builtin_class_code */
	T8 a13; /* builtin_feature_code */
	T0* a14; /* postconditions */
	T0* a15; /* extended_name */
	T0* a16; /* frozen_keyword */
	T0* a17; /* language */
	T0* a18; /* obsolete_message */
	T0* a19; /* alias_clause */
	T0* a20; /* clients */
	T0* a21; /* is_keyword */
	T0* a22; /* end_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_note */
	T0* a26; /* inline_separate_arguments */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S1578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* alias_names */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S1579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T0* a5; /* convert_keyword */
	T6 a6; /* seed */
};

/* Struct for type ET_CLASS_ASSERTION */
struct S1582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_keyword */
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S1583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_LIKE_FEATURE */
struct S1585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* like_keyword */
	T6 a4; /* seed */
	T1 a5; /* is_procedure */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S1586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* qualified_name */
	T0* a3; /* like_keyword */
	T0* a4; /* target_type */
	T0* a5; /* implementation_class */
	T0* a6; /* left_brace */
	T0* a7; /* right_brace */
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S1587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* qualified_name */
	T0* a3; /* target_type */
	T0* a4; /* implementation_class */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S1588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S1589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S1590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S1592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
	T0* a6; /* default_create_name */
	T0* a7; /* internal_separate_target */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S1593 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
	T0* a5; /* creation_region */
	T0* a6; /* default_create_name */
	T0* a7; /* internal_separate_target */
};

/* Struct for type ET_CHOICE_RANGE */
struct S1594 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S1595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parenthesis_call */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S1597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S1598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T1 a2; /* is_parent_prefixed */
	T0* a3; /* parent_name */
	T0* a4; /* precursor_keyword */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
	T0* a7; /* parent_type */
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S1599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S1600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S1601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S1602 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S1603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* name */
	T0* a4; /* right */
	T1 a5; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S1604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S1605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S1606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_MANIFEST_TYPE */
struct S1607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_brace */
	T0* a3; /* type */
	T0* a4; /* right_brace */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S1608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S1609 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type ET_OLD_OBJECT_TEST */
struct S1610 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* left_brace */
	T0* a4; /* attached_keyword */
	T0* a5; /* as_keyword */
	T0* a6; /* colon */
	T0* a7; /* declared_type */
	T0* a8; /* right_brace */
	T0* a9; /* expression */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S1611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type ET_ITERATION_CURSOR */
struct S1612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* at_symbol */
	T0* a3; /* item_name */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S1613 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* iteration_components */
	T0* a9; /* inline_separate_arguments */
	T0* a10; /* actual_arguments */
	T0* a11; /* preconditions */
	T0* a12; /* locals */
	T0* a13; /* compound */
	T0* a14; /* postconditions */
	T0* a15; /* rescue_clause */
	T0* a16; /* target */
	T6 a17; /* attached_result_index */
	T6 a18; /* result_index */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S1614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* iteration_components */
	T0* a9; /* inline_separate_arguments */
	T0* a10; /* actual_arguments */
	T0* a11; /* preconditions */
	T0* a12; /* locals */
	T0* a13; /* keys */
	T0* a14; /* compound */
	T0* a15; /* postconditions */
	T0* a16; /* rescue_clause */
	T0* a17; /* target */
	T6 a18; /* attached_result_index */
	T6 a19; /* result_index */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S1615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* iteration_components */
	T0* a6; /* inline_separate_arguments */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* alias_clause */
	T0* a10; /* postconditions */
	T0* a11; /* formal_arguments */
	T0* a12; /* declared_type */
	T0* a13; /* end_keyword */
	T0* a14; /* implicit_result */
	T0* a15; /* target */
	T6 a16; /* attached_result_index */
	T6 a17; /* result_index */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S1616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* iteration_components */
	T0* a7; /* inline_separate_arguments */
	T0* a8; /* actual_arguments */
	T0* a9; /* preconditions */
	T0* a10; /* locals */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* target */
	T6 a15; /* attached_result_index */
	T6 a16; /* result_index */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S1617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* iteration_components */
	T0* a7; /* inline_separate_arguments */
	T0* a8; /* actual_arguments */
	T0* a9; /* preconditions */
	T0* a10; /* locals */
	T0* a11; /* keys */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* target */
	T6 a16; /* attached_result_index */
	T6 a17; /* result_index */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S1618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* iteration_components */
	T0* a6; /* inline_separate_arguments */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* alias_clause */
	T0* a10; /* postconditions */
	T0* a11; /* formal_arguments */
	T0* a12; /* end_keyword */
	T0* a13; /* target */
	T6 a14; /* attached_result_index */
	T6 a15; /* result_index */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S1619 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* type */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S1620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S1623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* untagged_assertion */
};

/* Struct for type ET_FILE_POSITION */
struct S1625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T0* a3; /* parent_feature */
	T6 a4; /* first_seed */
	T0* a5; /* other_seeds */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type SPECIAL [NATURAL_16] */
struct S1636 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T9 z2[1]; /* item */
};

/* Struct for type ARRAY [NATURAL_16] */
struct S1637 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ARRAY [NATURAL_32] */
struct S1638 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
struct S1639 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
struct S1640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
struct S1642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
struct S1643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
struct S1644 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
struct S1645 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1646 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
struct S1647 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
struct S1648 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
struct S1649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
struct S1650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_ACTION] */
struct S1651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
struct S1652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
struct S1653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ECF_OPTIONS] */
struct S1654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
struct S1657 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
struct S1658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
struct S1659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_VISIBLE_CLASS] */
struct S1660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
struct S1661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
struct S1662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
struct S1663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
struct S1665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DOTNET_ASSEMBLY] */
struct S1666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
struct S1668 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_UNIVERSE] */
struct S1669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
struct S1671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
struct S1672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
struct S1674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INTERNAL_UNIVERSE] */
struct S1675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
struct S1680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_LIBRARY] */
struct S1687 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
struct S1688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_LIBRARY] */
struct S1689 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
struct S1690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_UNIVERSE] */
struct S1691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
struct S1692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
struct S1693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_TARGET_PARENT] */
struct S1694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
struct S1695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
struct S1696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_CLUSTER] */
struct S1697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
struct S1698 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
struct S1699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S1700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S1701 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
struct S1702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type YY_UNICODE_BUFFER */
struct S1703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T6 a6; /* count */
	T1 a7; /* filled */
	T1 a8; /* beginning_of_line */
	T6 a9; /* capacity */
};

/* Struct for type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
struct S1706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_OBJECT_TEST_LIST] */
struct S1707 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
struct S1708 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
struct S1709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
struct S1710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ITERATION_COMPONENT_LIST] */
struct S1711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1717 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_NAMED_CLASS] */
struct S1720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
struct S1722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S1725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
struct S1727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [NATURAL_32] */
struct S1728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_BASE_TYPE_CONSTRAINT_LIST */
struct S1729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S1734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S1736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S1737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S1739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
struct S1741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT_LIST] */
struct S1742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
struct S1743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT] */
struct S1746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT] */
struct S1747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
struct S1761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
struct S1762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S1765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
struct S1766 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
struct S1779 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S1780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S1781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [YY_BUFFER] */
struct S1782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [YY_BUFFER] */
struct S1783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1788 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1790 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type DS_LINKABLE [detachable STRING_8] */
struct S1792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type TUPLE [ET_ECF_CLUSTER] */
struct S1794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
struct S1795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_TARGET, STRING_8] */
struct S1796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_ECF_ADAPTED_LIBRARY] */
struct S1798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
struct S1799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
struct S1801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type PROCEDURE [TUPLE [STRING_8]] */
struct S1804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_OPTIONS, STRING_8] */
struct S1805 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S1806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* position */
	T6 a8; /* last_position */
	T6 a9; /* capacity */
	T6 a10; /* slots_position */
	T6 a11; /* count */
	T6 a12; /* free_slot */
	T0* a13; /* equality_tester */
	T6 a14; /* modulus */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
struct S1807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* count */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type DS_LINKABLE [XM_ELEMENT_NODE] */
struct S1814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S1819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* name */
	T0* a3; /* parenthesis_call */
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S1821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
	T0* a3; /* group_pathnames */
	T0* a4; /* pathname_buffer */
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_CLIENT_LIST] */
struct S1829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1832 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* expression */
	T0* a2; /* keyword */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S1840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S1842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_CFLAG] */
struct S1845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
struct S1846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
struct S1847 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
struct S1848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
struct S1849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
struct S1850 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
struct S1851 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
struct S1853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_MAKE] */
struct S1854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
struct S1855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_OBJECT] */
struct S1856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
struct S1857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
struct S1858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
struct S1859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S1870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S1871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S1877 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S1879 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S1880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S1883 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S1884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S1885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ELSEIF_EXPRESSION] */
struct S1886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
struct S1887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S1888 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S1889 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S1890 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S1891 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S1894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_NOTE_ITEM] */
struct S1896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
struct S1897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_NOTE_TERM_ITEM] */
struct S1898 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
struct S1899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S1900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S1901 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
struct S1903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
struct S1904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_WHEN_EXPRESSION] */
struct S1905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
struct S1906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S1907 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S1908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BASE_TYPE_RENAME_CONSTRAINT */
struct S1910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
struct S1913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type ET_STANDARD_ONCE_KEYS */
struct S1917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_CLUSTER] */
struct S1919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
struct S1920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
struct S1921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
struct S1922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
struct S1923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
struct S1924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1927 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
struct S1928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_FILE_RULE] */
struct S1929 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
struct S1930 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
struct S1931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
struct S1932 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
struct S1933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
struct S1934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
struct S1935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
struct S1936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
struct S1937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
struct S1938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
struct S1939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1940 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
struct S1943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_MAKE] */
struct S1944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
struct S1945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
struct S1946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
struct S1947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
struct S1948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
struct S1949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
struct S1950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
struct S1951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
struct S1952 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
struct S1953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
struct S1954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
struct S1955 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_ANDED_CONDITIONS] */
struct S1956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
struct S1957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
struct S1958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_CONDITION_ITEM] */
struct S1959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
struct S1960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_LINKABLE [CHARACTER_8] */
struct S1962 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
struct S1964 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
struct S1965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
struct S1966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
struct S1967 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1972 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1974 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1975 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1978 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1979 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1987 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
struct S1990 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a11; /* item_storage */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type SPECIAL [ET_LIKE_FEATURE] */
struct S1991 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
struct S1992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
struct S1993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S1995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S1996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S1997 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S1998 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_UNIVERSE_ERROR */
struct S2000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* universe */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S2001 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S2002 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S2003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S2004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S2005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ST_SPLITTER */
struct S2011 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S2012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S2013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S2014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_parameters */
	T6 a3; /* tuple_position */
	T0* a4; /* tuple_type */
};

/* Struct for type ET_ACTUAL_PARAMETER_SUBLIST */
struct S2015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T6 a2; /* upper */
	T6 a3; /* lower */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S2016 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S2018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIS_INSTRUCTION */
struct S2020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
struct S2021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_arguments */
	T0* a3; /* left_symbol */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S2024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S2025 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIS_SYMBOL */
struct S2031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S2045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S2046 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S2048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S2055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S2057 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
struct S2064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T8 z3;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S2070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
struct S2071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
struct S2074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
struct S2075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
struct S2076 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
struct S2079 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S2080 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S2083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S2084 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S2090 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S2091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S2093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S2094 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_CONVERT_BUILTIN_EXPRESSION */
struct S2100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_FROM_EXPRESSION */
struct S2101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* type */
	T6 a3; /* index */
	T0* a4; /* expression */
	T0* a5; /* convert_feature */
	T0* a6; /* internal_separate_target */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S2102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* convert_feature */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S2108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S2109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
struct S2115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
struct S2116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET [NATURAL_32] */
struct S2117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_AST_NULL_LEAF */
struct S2118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type TUPLE [ET_ECF_LIBRARY] */
struct S2123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type DS_CELL [detachable ET_CLASS] */
struct S2126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [DS_CELL [detachable ET_CLASS]] */
struct S2127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S2129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type TUPLE [ET_ECF_FILE_RULE] */
struct S2131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
struct S2132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_FILE_RULES] */
struct S2133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
struct S2134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_STATE] */
struct S2135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [STRING_8]] */
struct S2137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [KL_STRING_ROUTINES, STRING_8] */
struct S2138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [DS_HASH_SET [STRING_8]] */
struct S2140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type LX_DFA_WILDCARD */
struct S2142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T6 a3; /* subject_start */
	T6 a4; /* subject_end */
	T6 a5; /* match_count */
	T6 a6; /* matched_start */
	T6 a7; /* matched_end */
	T0* a8; /* yy_ec */
	T6 a9; /* yyNull_equiv_class */
	T6 a10; /* yyMax_symbol_equiv_class */
	T6 a11; /* yyNb_rows */
	T0* a12; /* pattern */
	T1 a13; /* is_case_insensitive */
	T0* a14; /* subject */
};

/* Struct for type TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S2146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TUPLE [LX_WILDCARD] */
struct S2148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [LX_WILDCARD]] */
struct S2149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
struct S2150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type SPECIAL [LX_WILDCARD] */
struct S2152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
struct S2155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [NATURAL_32] */
struct S2156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type LX_WILDCARD_PARSER */
struct S2157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* unions_of_concatenations_of_symbol_classes_by_utf8_character_class */
	T0* a12; /* buffer */
	T6 a13; /* maximum_used_symbol */
	T0* a14; /* description */
	T0* a15; /* last_string_value */
	T0* a16; /* last_string_32_value */
	T0* a17; /* last_lx_symbol_class_value */
	T0* a18; /* error_handler */
	T0* a19; /* name_definitions */
	T0* a20; /* character_classes */
	T0* a21; /* character_classes_by_name */
	T0* a22; /* equiv_character_classes */
	T0* a23; /* utf8_character_classes_by_name */
	T0* a24; /* utf8_mode */
	T6 a25; /* line_nb */
	T0* a26; /* eiffel_verbatim_marker */
	T0* a27; /* yyss */
	T0* a28; /* input_buffer */
	T6 a29; /* yy_end */
	T6 a30; /* yy_position */
	T6 a31; /* yy_line */
	T6 a32; /* yy_column */
	T6 a33; /* yy_parsing_status */
	T6 a34; /* yy_suspended_yystacksize */
	T6 a35; /* yy_suspended_yystate */
	T6 a36; /* yy_suspended_yyn */
	T6 a37; /* yy_suspended_yychar1 */
	T6 a38; /* yy_suspended_index */
	T6 a39; /* yy_suspended_yyss_top */
	T6 a40; /* yy_suspended_yy_goto */
	T0* a41; /* yyr1 */
	T6 a42; /* yyssp */
	T0* a43; /* yypgoto */
	T0* a44; /* yycheck */
	T0* a45; /* yytable */
	T0* a46; /* yydefgoto */
	T6 a47; /* error_count */
	T1 a48; /* yy_lookahead_needed */
	T6 a49; /* yyerrstatus */
	T0* a50; /* yypact */
	T6 a51; /* last_token */
	T0* a52; /* yytranslate */
	T0* a53; /* yydefact */
	T0* a54; /* yy_pushed_start_conditions */
	T0* a55; /* yyspecial_routines1 */
	T6 a56; /* yyvsc1 */
	T0* a57; /* yyvs1 */
	T0* a58; /* yyspecial_routines2 */
	T6 a59; /* yyvsc2 */
	T0* a60; /* yyvs2 */
	T0* a61; /* yyspecial_routines3 */
	T6 a62; /* yyvsc3 */
	T0* a63; /* yyvs3 */
	T0* a64; /* yyspecial_routines4 */
	T6 a65; /* yyvsc4 */
	T0* a66; /* yyvs4 */
	T0* a67; /* yyspecial_routines5 */
	T6 a68; /* yyvsc5 */
	T0* a69; /* yyvs5 */
	T0* a70; /* yytypes1 */
	T0* a71; /* yytypes2 */
	T6 a72; /* yy_start */
	T6 a73; /* yyvsp1 */
	T6 a74; /* yyvsp2 */
	T6 a75; /* yyvsp3 */
	T6 a76; /* yyvsp4 */
	T6 a77; /* yyvsp5 */
	T1 a78; /* yy_more_flag */
	T6 a79; /* yy_more_len */
	T6 a80; /* line */
	T6 a81; /* column */
	T6 a82; /* position */
	T6 a83; /* yy_start_state */
	T0* a84; /* yy_state_stack */
	T6 a85; /* yy_state_count */
	T0* a86; /* yy_content_area */
	T0* a87; /* yy_unicode_content_area */
	T0* a88; /* yy_accept */
	T6 a89; /* yy_last_accepting_state */
	T6 a90; /* yy_last_accepting_cpos */
	T0* a91; /* yy_content */
	T0* a92; /* yy_ec */
	T0* a93; /* yy_chk */
	T0* a94; /* yy_base */
	T0* a95; /* yy_def */
	T0* a96; /* yy_meta */
	T0* a97; /* yy_nxt */
	T6 a98; /* yy_lp */
	T0* a99; /* yy_acclist */
	T6 a100; /* yy_looking_for_trail_begin */
	T6 a101; /* yy_full_match */
	T6 a102; /* yy_full_state */
	T6 a103; /* yy_full_lp */
	T1 a104; /* yy_rejected */
	T0* a105; /* last_detachable_any_value */
	T6 a106; /* last_integer_value */
	T1 a107; /* in_trail_context */
	T0* a108; /* rule */
	T1 a109; /* has_trail_context */
	T6 a110; /* head_count */
	T6 a111; /* head_line */
	T6 a112; /* head_column */
	T6 a113; /* trail_count */
	T6 a114; /* i_ */
	T6 a115; /* rule_line_nb */
	T1 a116; /* has_bol_context */
};

/* Struct for type LX_DESCRIPTION */
struct S2158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* maximum_symbol */
	T1 a2; /* utf8_mode */
	T1 a3; /* equiv_classes_used */
	T1 a4; /* full_table */
	T1 a5; /* meta_equiv_classes_used */
	T1 a6; /* reject_used */
	T1 a7; /* variable_trail_context */
	T0* a8; /* rules */
	T0* a9; /* start_conditions */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T1 a12; /* inspect_used */
	T0* a13; /* eof_rules */
	T0* a14; /* eiffel_header */
	T1 a15; /* case_insensitive */
	T0* a16; /* equiv_classes */
	T1 a17; /* bol_needed */
	T0* a18; /* input_filename */
	T1 a19; /* has_utf8_enconding */
	T1 a20; /* actions_separated */
	T0* a21; /* eiffel_code */
	T1 a22; /* pre_action_used */
	T1 a23; /* post_action_used */
	T1 a24; /* pre_eof_action_used */
	T1 a25; /* post_eof_action_used */
	T1 a26; /* line_used */
	T1 a27; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S2159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T0* a3; /* yy_ec */
	T6 a4; /* yyNb_rows */
	T6 a5; /* yyNull_equiv_class */
	T6 a6; /* yyMax_symbol_equiv_class */
	T0* a7; /* input_filename */
	T1 a8; /* has_utf8_enconding */
	T6 a9; /* array_size */
	T1 a10; /* inspect_used */
	T1 a11; /* actions_separated */
	T0* a12; /* eiffel_code */
	T0* a13; /* eiffel_header */
	T1 a14; /* bol_needed */
	T1 a15; /* pre_action_used */
	T1 a16; /* post_action_used */
	T1 a17; /* pre_eof_action_used */
	T1 a18; /* post_eof_action_used */
	T1 a19; /* line_pragma */
	T0* a20; /* yy_start_conditions */
	T6 a21; /* yyNb_rules */
	T0* a22; /* yy_rules */
	T6 a23; /* yyEnd_of_buffer */
	T1 a24; /* yyLine_used */
	T1 a25; /* yyPosition_used */
	T6 a26; /* minimum_symbol */
	T6 a27; /* maximum_symbol */
	T0* a28; /* states */
	T6 a29; /* backing_up_count */
	T0* a30; /* partitions */
	T6 a31; /* start_states_count */
	T1 a32; /* yyBacking_up */
	T0* a33; /* yy_eof_rules */
};

/* Struct for type TUPLE [ET_GROUP] */
struct S2161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
struct S2162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
struct S2163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
struct S2164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_ARRAYED_LIST [LX_RULE] */
struct S2166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S2167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S2168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
struct S2169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* position */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T0* a9; /* equality_tester */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_SYMBOL_CLASS */
struct S2170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* upper */
	T1 a2; /* is_empty */
	T1 a3; /* is_negated */
	T11 a4; /* first_set */
	T11 a5; /* second_set */
	T11 a6; /* third_set */
	T11 a7; /* fourth_set */
	T0* a8; /* other_sets */
	T6 a9; /* lower */
};

/* Struct for type DS_HASH_TABLE [STRING_32, STRING_8] */
struct S2171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [LX_SYMBOL_CLASS] */
struct S2172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
struct S2173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type KL_EQUALITY_TESTER [STRING_32] */
struct S2174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_STACK [BOOLEAN] */
struct S2175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_32] */
struct S2176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [STRING_32] */
struct S2177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
struct S2178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_SYMBOL_CLASS] */
struct S2179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA] */
struct S2180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_NFA */
struct S2181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type SPECIAL [LX_NFA] */
struct S2182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_RULE */
struct S2183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
struct S2184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S2185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_upper */
	T0* a2; /* storage */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S2186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_INVALID_UNICODE_CHARACTER_ERROR */
struct S2187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S2188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S2189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S2190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S2191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S2192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S2193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S2194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ARRAY [LX_RULE] */
struct S2195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [LX_RULE] */
struct S2196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_DFA_STATE */
struct S2197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA_STATE] */
struct S2198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_DFA_STATE] */
struct S2199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S2200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* new_upper */
};

/* Struct for type KL_ARRAY_ROUTINES [LX_RULE] */
struct S2201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ARRAY [detachable LX_RULE] */
struct S2202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable LX_RULE] */
struct S2203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_START_CONDITION */
struct S2204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type LX_TRANSITION_TABLE [LX_DFA_STATE] */
struct S2205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* lower */
	T6 a2; /* upper */
	T6 a3; /* minimum_label */
	T6 a4; /* second_minimum_label */
	T6 a5; /* maximum_label */
	T0* a6; /* transitions */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA] */
struct S2206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
struct S2207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S2208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type ARRAY [detachable LX_SYMBOL_CLASS] */
struct S2209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable LX_SYMBOL_CLASS] */
struct S2210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
struct S2211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
struct S2212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
struct S2214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S2215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_RULE] */
struct S2216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
struct S2217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_ARRAY_ROUTINES [STRING_8] */
struct S2218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_START_CONDITION] */
struct S2219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
struct S2220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
struct S2221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
struct S2222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
struct S2223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
struct S2225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
struct S2226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [detachable SPECIAL [NATURAL_64]] */
struct S2227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
struct S2229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
struct S2231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
struct S2232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
};

/* Struct for type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
struct S2235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
struct S2236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_ACTION */
struct S2238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
};

/* Struct for type ARRAY [DS_BILINKABLE [INTEGER_32]] */
struct S2239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_BILINKABLE [INTEGER_32] */
struct S2240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
struct S2241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_BUBBLE_SORTER [LX_NFA_STATE] */
struct S2242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type DS_BUBBLE_SORTER [LX_RULE] */
struct S2244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type SPECIAL [LX_NFA_STATE] */
struct S2246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
struct S2248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
struct S2249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [LX_DFA_STATE] */
struct S2251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
struct S2252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
struct S2253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_ARRAY [LX_RULE] */
struct S2254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
struct S2255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
struct S2256 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
struct S2258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_RULE] */
struct S2262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
struct S2265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
struct S2271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_ARRAY [STRING_8] */
struct S2272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
struct S2274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T16 GE_default16;
extern T17 GE_default17;
extern T18 GE_default18;
extern T20 GE_default20;
extern T21 GE_default21;
extern T25 GE_default25;
extern T26 GE_default26;
extern T27 GE_default27;
extern T28 GE_default28;
extern T29 GE_default29;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T34 GE_default34;
extern T35 GE_default35;
extern T36 GE_default36;
extern T37 GE_default37;
extern T38 GE_default38;
extern T39 GE_default39;
extern T41 GE_default41;
extern T42 GE_default42;
extern T43 GE_default43;
extern T44 GE_default44;
extern T45 GE_default45;
extern T47 GE_default47;
extern T48 GE_default48;
extern T49 GE_default49;
extern T51 GE_default51;
extern T52 GE_default52;
extern T53 GE_default53;
extern T54 GE_default54;
extern T58 GE_default58;
extern T60 GE_default60;
extern T61 GE_default61;
extern T62 GE_default62;
extern T63 GE_default63;
extern T64 GE_default64;
extern T66 GE_default66;
extern T67 GE_default67;
extern T68 GE_default68;
extern T69 GE_default69;
extern T72 GE_default72;
extern T73 GE_default73;
extern T75 GE_default75;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T79 GE_default79;
extern T81 GE_default81;
extern T82 GE_default82;
extern T84 GE_default84;
extern T86 GE_default86;
extern T87 GE_default87;
extern T88 GE_default88;
extern T91 GE_default91;
extern T92 GE_default92;
extern T93 GE_default93;
extern T94 GE_default94;
extern T95 GE_default95;
extern T97 GE_default97;
extern T99 GE_default99;
extern T101 GE_default101;
extern T103 GE_default103;
extern T104 GE_default104;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T111 GE_default111;
extern T112 GE_default112;
extern T113 GE_default113;
extern T114 GE_default114;
extern T115 GE_default115;
extern T116 GE_default116;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T125 GE_default125;
extern T126 GE_default126;
extern T127 GE_default127;
extern T128 GE_default128;
extern T129 GE_default129;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T137 GE_default137;
extern T138 GE_default138;
extern T139 GE_default139;
extern T141 GE_default141;
extern T143 GE_default143;
extern T144 GE_default144;
extern T145 GE_default145;
extern T147 GE_default147;
extern T148 GE_default148;
extern T149 GE_default149;
extern T150 GE_default150;
extern T151 GE_default151;
extern T152 GE_default152;
extern T153 GE_default153;
extern T154 GE_default154;
extern T155 GE_default155;
extern T156 GE_default156;
extern T157 GE_default157;
extern T158 GE_default158;
extern T161 GE_default161;
extern T164 GE_default164;
extern T165 GE_default165;
extern T166 GE_default166;
extern T167 GE_default167;
extern T168 GE_default168;
extern T169 GE_default169;
extern T170 GE_default170;
extern T171 GE_default171;
extern T172 GE_default172;
extern T173 GE_default173;
extern T174 GE_default174;
extern T175 GE_default175;
extern T176 GE_default176;
extern T178 GE_default178;
extern T179 GE_default179;
extern T180 GE_default180;
extern T182 GE_default182;
extern T183 GE_default183;
extern T186 GE_default186;
extern T187 GE_default187;
extern T188 GE_default188;
extern T189 GE_default189;
extern T191 GE_default191;
extern T192 GE_default192;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T197 GE_default197;
extern T199 GE_default199;
extern T200 GE_default200;
extern T202 GE_default202;
extern T203 GE_default203;
extern T204 GE_default204;
extern T205 GE_default205;
extern T206 GE_default206;
extern T207 GE_default207;
extern T208 GE_default208;
extern T209 GE_default209;
extern T211 GE_default211;
extern T212 GE_default212;
extern T213 GE_default213;
extern T215 GE_default215;
extern T216 GE_default216;
extern T218 GE_default218;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T224 GE_default224;
extern T226 GE_default226;
extern T228 GE_default228;
extern T229 GE_default229;
extern T230 GE_default230;
extern T231 GE_default231;
extern T232 GE_default232;
extern T233 GE_default233;
extern T234 GE_default234;
extern T235 GE_default235;
extern T236 GE_default236;
extern T241 GE_default241;
extern T245 GE_default245;
extern T246 GE_default246;
extern T247 GE_default247;
extern T249 GE_default249;
extern T250 GE_default250;
extern T258 GE_default258;
extern T259 GE_default259;
extern T260 GE_default260;
extern T261 GE_default261;
extern T262 GE_default262;
extern T263 GE_default263;
extern T264 GE_default264;
extern T265 GE_default265;
extern T266 GE_default266;
extern T267 GE_default267;
extern T268 GE_default268;
extern T269 GE_default269;
extern T270 GE_default270;
extern T271 GE_default271;
extern T272 GE_default272;
extern T273 GE_default273;
extern T274 GE_default274;
extern T275 GE_default275;
extern T276 GE_default276;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T283 GE_default283;
extern T284 GE_default284;
extern T285 GE_default285;
extern T286 GE_default286;
extern T287 GE_default287;
extern T288 GE_default288;
extern T289 GE_default289;
extern T290 GE_default290;
extern T291 GE_default291;
extern T293 GE_default293;
extern T294 GE_default294;
extern T295 GE_default295;
extern T298 GE_default298;
extern T299 GE_default299;
extern T302 GE_default302;
extern T303 GE_default303;
extern T305 GE_default305;
extern T306 GE_default306;
extern T309 GE_default309;
extern T310 GE_default310;
extern T311 GE_default311;
extern T312 GE_default312;
extern T313 GE_default313;
extern T314 GE_default314;
extern T315 GE_default315;
extern T316 GE_default316;
extern T317 GE_default317;
extern T318 GE_default318;
extern T319 GE_default319;
extern T320 GE_default320;
extern T321 GE_default321;
extern T322 GE_default322;
extern T323 GE_default323;
extern T324 GE_default324;
extern T325 GE_default325;
extern T326 GE_default326;
extern T327 GE_default327;
extern T328 GE_default328;
extern T329 GE_default329;
extern T330 GE_default330;
extern T332 GE_default332;
extern T333 GE_default333;
extern T334 GE_default334;
extern T337 GE_default337;
extern T338 GE_default338;
extern T341 GE_default341;
extern T342 GE_default342;
extern T343 GE_default343;
extern T347 GE_default347;
extern T348 GE_default348;
extern T352 GE_default352;
extern T353 GE_default353;
extern T361 GE_default361;
extern T362 GE_default362;
extern T365 GE_default365;
extern T367 GE_default367;
extern T368 GE_default368;
extern T369 GE_default369;
extern T370 GE_default370;
extern T371 GE_default371;
extern T372 GE_default372;
extern T377 GE_default377;
extern T378 GE_default378;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T388 GE_default388;
extern T390 GE_default390;
extern T391 GE_default391;
extern T392 GE_default392;
extern T394 GE_default394;
extern T395 GE_default395;
extern T398 GE_default398;
extern T399 GE_default399;
extern T400 GE_default400;
extern T402 GE_default402;
extern T403 GE_default403;
extern T404 GE_default404;
extern T405 GE_default405;
extern T407 GE_default407;
extern T409 GE_default409;
extern T410 GE_default410;
extern T411 GE_default411;
extern T412 GE_default412;
extern T413 GE_default413;
extern T414 GE_default414;
extern T415 GE_default415;
extern T416 GE_default416;
extern T417 GE_default417;
extern T418 GE_default418;
extern T419 GE_default419;
extern T420 GE_default420;
extern T421 GE_default421;
extern T422 GE_default422;
extern T423 GE_default423;
extern T424 GE_default424;
extern T425 GE_default425;
extern T426 GE_default426;
extern T427 GE_default427;
extern T428 GE_default428;
extern T429 GE_default429;
extern T430 GE_default430;
extern T431 GE_default431;
extern T433 GE_default433;
extern T435 GE_default435;
extern T437 GE_default437;
extern T438 GE_default438;
extern T439 GE_default439;
extern T440 GE_default440;
extern T441 GE_default441;
extern T442 GE_default442;
extern T447 GE_default447;
extern T448 GE_default448;
extern T449 GE_default449;
extern T451 GE_default451;
extern T452 GE_default452;
extern T453 GE_default453;
extern T454 GE_default454;
extern T455 GE_default455;
extern T456 GE_default456;
extern T457 GE_default457;
extern T459 GE_default459;
extern T460 GE_default460;
extern T461 GE_default461;
extern T464 GE_default464;
extern T465 GE_default465;
extern T469 GE_default469;
extern T471 GE_default471;
extern T473 GE_default473;
extern T474 GE_default474;
extern T475 GE_default475;
extern T476 GE_default476;
extern T478 GE_default478;
extern T479 GE_default479;
extern T480 GE_default480;
extern T482 GE_default482;
extern T483 GE_default483;
extern T484 GE_default484;
extern T485 GE_default485;
extern T486 GE_default486;
extern T487 GE_default487;
extern T488 GE_default488;
extern T489 GE_default489;
extern T492 GE_default492;
extern T493 GE_default493;
extern T494 GE_default494;
extern T495 GE_default495;
extern T496 GE_default496;
extern T497 GE_default497;
extern T498 GE_default498;
extern T499 GE_default499;
extern T500 GE_default500;
extern T501 GE_default501;
extern T502 GE_default502;
extern T503 GE_default503;
extern T504 GE_default504;
extern T505 GE_default505;
extern T506 GE_default506;
extern T507 GE_default507;
extern T508 GE_default508;
extern T509 GE_default509;
extern T510 GE_default510;
extern T512 GE_default512;
extern T513 GE_default513;
extern T514 GE_default514;
extern T515 GE_default515;
extern T518 GE_default518;
extern T520 GE_default520;
extern T521 GE_default521;
extern T522 GE_default522;
extern T523 GE_default523;
extern T524 GE_default524;
extern T525 GE_default525;
extern T526 GE_default526;
extern T527 GE_default527;
extern T528 GE_default528;
extern T530 GE_default530;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T534 GE_default534;
extern T535 GE_default535;
extern T537 GE_default537;
extern T538 GE_default538;
extern T539 GE_default539;
extern T540 GE_default540;
extern T541 GE_default541;
extern T542 GE_default542;
extern T543 GE_default543;
extern T544 GE_default544;
extern T545 GE_default545;
extern T546 GE_default546;
extern T547 GE_default547;
extern T548 GE_default548;
extern T549 GE_default549;
extern T550 GE_default550;
extern T552 GE_default552;
extern T553 GE_default553;
extern T556 GE_default556;
extern T557 GE_default557;
extern T560 GE_default560;
extern T561 GE_default561;
extern T562 GE_default562;
extern T563 GE_default563;
extern T565 GE_default565;
extern T566 GE_default566;
extern T567 GE_default567;
extern T568 GE_default568;
extern T570 GE_default570;
extern T572 GE_default572;
extern T573 GE_default573;
extern T574 GE_default574;
extern T575 GE_default575;
extern T576 GE_default576;
extern T577 GE_default577;
extern T578 GE_default578;
extern T579 GE_default579;
extern T580 GE_default580;
extern T581 GE_default581;
extern T582 GE_default582;
extern T583 GE_default583;
extern T584 GE_default584;
extern T585 GE_default585;
extern T586 GE_default586;
extern T587 GE_default587;
extern T588 GE_default588;
extern T589 GE_default589;
extern T590 GE_default590;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T596 GE_default596;
extern T597 GE_default597;
extern T598 GE_default598;
extern T599 GE_default599;
extern T602 GE_default602;
extern T603 GE_default603;
extern T605 GE_default605;
extern T606 GE_default606;
extern T607 GE_default607;
extern T608 GE_default608;
extern T609 GE_default609;
extern T610 GE_default610;
extern T611 GE_default611;
extern T614 GE_default614;
extern T616 GE_default616;
extern T617 GE_default617;
extern T618 GE_default618;
extern T619 GE_default619;
extern T621 GE_default621;
extern T623 GE_default623;
extern T624 GE_default624;
extern T625 GE_default625;
extern T626 GE_default626;
extern T627 GE_default627;
extern T628 GE_default628;
extern T632 GE_default632;
extern T633 GE_default633;
extern T634 GE_default634;
extern T635 GE_default635;
extern T636 GE_default636;
extern T637 GE_default637;
extern T638 GE_default638;
extern T639 GE_default639;
extern T642 GE_default642;
extern T643 GE_default643;
extern T644 GE_default644;
extern T645 GE_default645;
extern T646 GE_default646;
extern T648 GE_default648;
extern T649 GE_default649;
extern T650 GE_default650;
extern T654 GE_default654;
extern T655 GE_default655;
extern T656 GE_default656;
extern T658 GE_default658;
extern T659 GE_default659;
extern T661 GE_default661;
extern T662 GE_default662;
extern T664 GE_default664;
extern T665 GE_default665;
extern T666 GE_default666;
extern T667 GE_default667;
extern T668 GE_default668;
extern T669 GE_default669;
extern T670 GE_default670;
extern T671 GE_default671;
extern T672 GE_default672;
extern T674 GE_default674;
extern T675 GE_default675;
extern T676 GE_default676;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T681 GE_default681;
extern T682 GE_default682;
extern T683 GE_default683;
extern T684 GE_default684;
extern T685 GE_default685;
extern T686 GE_default686;
extern T687 GE_default687;
extern T688 GE_default688;
extern T689 GE_default689;
extern T690 GE_default690;
extern T691 GE_default691;
extern T692 GE_default692;
extern T693 GE_default693;
extern T694 GE_default694;
extern T695 GE_default695;
extern T696 GE_default696;
extern T697 GE_default697;
extern T698 GE_default698;
extern T699 GE_default699;
extern T700 GE_default700;
extern T701 GE_default701;
extern T702 GE_default702;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T706 GE_default706;
extern T708 GE_default708;
extern T709 GE_default709;
extern T710 GE_default710;
extern T711 GE_default711;
extern T713 GE_default713;
extern T714 GE_default714;
extern T715 GE_default715;
extern T716 GE_default716;
extern T718 GE_default718;
extern T719 GE_default719;
extern T720 GE_default720;
extern T721 GE_default721;
extern T723 GE_default723;
extern T724 GE_default724;
extern T725 GE_default725;
extern T726 GE_default726;
extern T727 GE_default727;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T733 GE_default733;
extern T734 GE_default734;
extern T736 GE_default736;
extern T737 GE_default737;
extern T738 GE_default738;
extern T739 GE_default739;
extern T740 GE_default740;
extern T741 GE_default741;
extern T742 GE_default742;
extern T743 GE_default743;
extern T744 GE_default744;
extern T745 GE_default745;
extern T748 GE_default748;
extern T751 GE_default751;
extern T752 GE_default752;
extern T753 GE_default753;
extern T754 GE_default754;
extern T758 GE_default758;
extern T759 GE_default759;
extern T762 GE_default762;
extern T763 GE_default763;
extern T764 GE_default764;
extern T765 GE_default765;
extern T766 GE_default766;
extern T767 GE_default767;
extern T768 GE_default768;
extern T769 GE_default769;
extern T770 GE_default770;
extern T771 GE_default771;
extern T772 GE_default772;
extern T773 GE_default773;
extern T774 GE_default774;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T778 GE_default778;
extern T779 GE_default779;
extern T780 GE_default780;
extern T781 GE_default781;
extern T782 GE_default782;
extern T783 GE_default783;
extern T784 GE_default784;
extern T785 GE_default785;
extern T786 GE_default786;
extern T787 GE_default787;
extern T788 GE_default788;
extern T791 GE_default791;
extern T792 GE_default792;
extern T793 GE_default793;
extern T794 GE_default794;
extern T795 GE_default795;
extern T796 GE_default796;
extern T798 GE_default798;
extern T799 GE_default799;
extern T801 GE_default801;
extern T802 GE_default802;
extern T803 GE_default803;
extern T804 GE_default804;
extern T806 GE_default806;
extern T807 GE_default807;
extern T808 GE_default808;
extern T809 GE_default809;
extern T810 GE_default810;
extern T812 GE_default812;
extern T813 GE_default813;
extern T815 GE_default815;
extern T816 GE_default816;
extern T817 GE_default817;
extern T818 GE_default818;
extern T819 GE_default819;
extern T820 GE_default820;
extern T821 GE_default821;
extern T822 GE_default822;
extern T823 GE_default823;
extern T824 GE_default824;
extern T825 GE_default825;
extern T826 GE_default826;
extern T827 GE_default827;
extern T828 GE_default828;
extern T829 GE_default829;
extern T830 GE_default830;
extern T831 GE_default831;
extern T834 GE_default834;
extern T835 GE_default835;
extern T836 GE_default836;
extern T839 GE_default839;
extern T840 GE_default840;
extern T841 GE_default841;
extern T842 GE_default842;
extern T843 GE_default843;
extern T844 GE_default844;
extern T845 GE_default845;
extern T846 GE_default846;
extern T847 GE_default847;
extern T848 GE_default848;
extern T849 GE_default849;
extern T850 GE_default850;
extern T851 GE_default851;
extern T852 GE_default852;
extern T853 GE_default853;
extern T854 GE_default854;
extern T855 GE_default855;
extern T856 GE_default856;
extern T857 GE_default857;
extern T859 GE_default859;
extern T860 GE_default860;
extern T861 GE_default861;
extern T862 GE_default862;
extern T863 GE_default863;
extern T864 GE_default864;
extern T865 GE_default865;
extern T866 GE_default866;
extern T867 GE_default867;
extern T868 GE_default868;
extern T869 GE_default869;
extern T870 GE_default870;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T874 GE_default874;
extern T875 GE_default875;
extern T876 GE_default876;
extern T877 GE_default877;
extern T878 GE_default878;
extern T880 GE_default880;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T884 GE_default884;
extern T885 GE_default885;
extern T886 GE_default886;
extern T888 GE_default888;
extern T889 GE_default889;
extern T891 GE_default891;
extern T892 GE_default892;
extern T893 GE_default893;
extern T894 GE_default894;
extern T895 GE_default895;
extern T896 GE_default896;
extern T897 GE_default897;
extern T898 GE_default898;
extern T900 GE_default900;
extern T901 GE_default901;
extern T902 GE_default902;
extern T903 GE_default903;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T907 GE_default907;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T911 GE_default911;
extern T912 GE_default912;
extern T913 GE_default913;
extern T915 GE_default915;
extern T916 GE_default916;
extern T917 GE_default917;
extern T918 GE_default918;
extern T919 GE_default919;
extern T920 GE_default920;
extern T921 GE_default921;
extern T922 GE_default922;
extern T923 GE_default923;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T927 GE_default927;
extern T928 GE_default928;
extern T930 GE_default930;
extern T931 GE_default931;
extern T932 GE_default932;
extern T933 GE_default933;
extern T934 GE_default934;
extern T935 GE_default935;
extern T938 GE_default938;
extern T942 GE_default942;
extern T943 GE_default943;
extern T944 GE_default944;
extern T945 GE_default945;
extern T947 GE_default947;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T951 GE_default951;
extern T953 GE_default953;
extern T955 GE_default955;
extern T956 GE_default956;
extern T957 GE_default957;
extern T958 GE_default958;
extern T959 GE_default959;
extern T960 GE_default960;
extern T961 GE_default961;
extern T962 GE_default962;
extern T963 GE_default963;
extern T964 GE_default964;
extern T966 GE_default966;
extern T967 GE_default967;
extern T968 GE_default968;
extern T969 GE_default969;
extern T970 GE_default970;
extern T971 GE_default971;
extern T978 GE_default978;
extern T980 GE_default980;
extern T981 GE_default981;
extern T982 GE_default982;
extern T983 GE_default983;
extern T984 GE_default984;
extern T985 GE_default985;
extern T986 GE_default986;
extern T987 GE_default987;
extern T989 GE_default989;
extern T990 GE_default990;
extern T992 GE_default992;
extern T993 GE_default993;
extern T994 GE_default994;
extern T995 GE_default995;
extern T996 GE_default996;
extern T997 GE_default997;
extern T1001 GE_default1001;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1004 GE_default1004;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1007 GE_default1007;
extern T1008 GE_default1008;
extern T1009 GE_default1009;
extern T1010 GE_default1010;
extern T1011 GE_default1011;
extern T1012 GE_default1012;
extern T1013 GE_default1013;
extern T1014 GE_default1014;
extern T1015 GE_default1015;
extern T1016 GE_default1016;
extern T1017 GE_default1017;
extern T1018 GE_default1018;
extern T1019 GE_default1019;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1022 GE_default1022;
extern T1023 GE_default1023;
extern T1024 GE_default1024;
extern T1025 GE_default1025;
extern T1026 GE_default1026;
extern T1027 GE_default1027;
extern T1028 GE_default1028;
extern T1030 GE_default1030;
extern T1031 GE_default1031;
extern T1033 GE_default1033;
extern T1034 GE_default1034;
extern T1036 GE_default1036;
extern T1037 GE_default1037;
extern T1038 GE_default1038;
extern T1039 GE_default1039;
extern T1040 GE_default1040;
extern T1041 GE_default1041;
extern T1042 GE_default1042;
extern T1043 GE_default1043;
extern T1044 GE_default1044;
extern T1046 GE_default1046;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1054 GE_default1054;
extern T1055 GE_default1055;
extern T1056 GE_default1056;
extern T1057 GE_default1057;
extern T1058 GE_default1058;
extern T1059 GE_default1059;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1062 GE_default1062;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1070 GE_default1070;
extern T1071 GE_default1071;
extern T1072 GE_default1072;
extern T1073 GE_default1073;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1076 GE_default1076;
extern T1077 GE_default1077;
extern T1078 GE_default1078;
extern T1079 GE_default1079;
extern T1080 GE_default1080;
extern T1081 GE_default1081;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1084 GE_default1084;
extern T1085 GE_default1085;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1094 GE_default1094;
extern T1095 GE_default1095;
extern T1096 GE_default1096;
extern T1097 GE_default1097;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1100 GE_default1100;
extern T1101 GE_default1101;
extern T1103 GE_default1103;
extern T1104 GE_default1104;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1107 GE_default1107;
extern T1108 GE_default1108;
extern T1109 GE_default1109;
extern T1110 GE_default1110;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1113 GE_default1113;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1120 GE_default1120;
extern T1121 GE_default1121;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1125 GE_default1125;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1129 GE_default1129;
extern T1130 GE_default1130;
extern T1131 GE_default1131;
extern T1132 GE_default1132;
extern T1133 GE_default1133;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1136 GE_default1136;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1141 GE_default1141;
extern T1143 GE_default1143;
extern T1144 GE_default1144;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1147 GE_default1147;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1151 GE_default1151;
extern T1152 GE_default1152;
extern T1153 GE_default1153;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1161 GE_default1161;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1164 GE_default1164;
extern T1165 GE_default1165;
extern T1166 GE_default1166;
extern T1167 GE_default1167;
extern T1168 GE_default1168;
extern T1169 GE_default1169;
extern T1170 GE_default1170;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1175 GE_default1175;
extern T1176 GE_default1176;
extern T1177 GE_default1177;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1185 GE_default1185;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1188 GE_default1188;
extern T1189 GE_default1189;
extern T1190 GE_default1190;
extern T1191 GE_default1191;
extern T1193 GE_default1193;
extern T1194 GE_default1194;
extern T1195 GE_default1195;
extern T1196 GE_default1196;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1201 GE_default1201;
extern T1202 GE_default1202;
extern T1204 GE_default1204;
extern T1205 GE_default1205;
extern T1206 GE_default1206;
extern T1207 GE_default1207;
extern T1208 GE_default1208;
extern T1209 GE_default1209;
extern T1210 GE_default1210;
extern T1211 GE_default1211;
extern T1212 GE_default1212;
extern T1213 GE_default1213;
extern T1214 GE_default1214;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1218 GE_default1218;
extern T1219 GE_default1219;
extern T1220 GE_default1220;
extern T1221 GE_default1221;
extern T1223 GE_default1223;
extern T1224 GE_default1224;
extern T1225 GE_default1225;
extern T1226 GE_default1226;
extern T1227 GE_default1227;
extern T1228 GE_default1228;
extern T1230 GE_default1230;
extern T1231 GE_default1231;
extern T1232 GE_default1232;
extern T1233 GE_default1233;
extern T1234 GE_default1234;
extern T1235 GE_default1235;
extern T1236 GE_default1236;
extern T1237 GE_default1237;
extern T1238 GE_default1238;
extern T1239 GE_default1239;
extern T1240 GE_default1240;
extern T1241 GE_default1241;
extern T1242 GE_default1242;
extern T1243 GE_default1243;
extern T1244 GE_default1244;
extern T1245 GE_default1245;
extern T1246 GE_default1246;
extern T1247 GE_default1247;
extern T1248 GE_default1248;
extern T1249 GE_default1249;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1252 GE_default1252;
extern T1253 GE_default1253;
extern T1254 GE_default1254;
extern T1255 GE_default1255;
extern T1256 GE_default1256;
extern T1257 GE_default1257;
extern T1258 GE_default1258;
extern T1259 GE_default1259;
extern T1260 GE_default1260;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1264 GE_default1264;
extern T1265 GE_default1265;
extern T1266 GE_default1266;
extern T1267 GE_default1267;
extern T1268 GE_default1268;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1272 GE_default1272;
extern T1273 GE_default1273;
extern T1274 GE_default1274;
extern T1275 GE_default1275;
extern T1276 GE_default1276;
extern T1277 GE_default1277;
extern T1278 GE_default1278;
extern T1279 GE_default1279;
extern T1281 GE_default1281;
extern T1282 GE_default1282;
extern T1283 GE_default1283;
extern T1284 GE_default1284;
extern T1285 GE_default1285;
extern T1286 GE_default1286;
extern T1287 GE_default1287;
extern T1288 GE_default1288;
extern T1289 GE_default1289;
extern T1290 GE_default1290;
extern T1292 GE_default1292;
extern T1293 GE_default1293;
extern T1294 GE_default1294;
extern T1295 GE_default1295;
extern T1297 GE_default1297;
extern T1298 GE_default1298;
extern T1299 GE_default1299;
extern T1300 GE_default1300;
extern T1301 GE_default1301;
extern T1303 GE_default1303;
extern T1304 GE_default1304;
extern T1305 GE_default1305;
extern T1306 GE_default1306;
extern T1307 GE_default1307;
extern T1308 GE_default1308;
extern T1309 GE_default1309;
extern T1310 GE_default1310;
extern T1311 GE_default1311;
extern T1312 GE_default1312;
extern T1313 GE_default1313;
extern T1314 GE_default1314;
extern T1315 GE_default1315;
extern T1316 GE_default1316;
extern T1317 GE_default1317;
extern T1318 GE_default1318;
extern T1319 GE_default1319;
extern T1320 GE_default1320;
extern T1321 GE_default1321;
extern T1322 GE_default1322;
extern T1323 GE_default1323;
extern T1325 GE_default1325;
extern T1326 GE_default1326;
extern T1327 GE_default1327;
extern T1328 GE_default1328;
extern T1329 GE_default1329;
extern T1330 GE_default1330;
extern T1331 GE_default1331;
extern T1333 GE_default1333;
extern T1334 GE_default1334;
extern T1335 GE_default1335;
extern T1336 GE_default1336;
extern T1337 GE_default1337;
extern T1338 GE_default1338;
extern T1339 GE_default1339;
extern T1340 GE_default1340;
extern T1341 GE_default1341;
extern T1342 GE_default1342;
extern T1343 GE_default1343;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1346 GE_default1346;
extern T1347 GE_default1347;
extern T1349 GE_default1349;
extern T1350 GE_default1350;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1354 GE_default1354;
extern T1355 GE_default1355;
extern T1356 GE_default1356;
extern T1358 GE_default1358;
extern T1359 GE_default1359;
extern T1360 GE_default1360;
extern T1361 GE_default1361;
extern T1362 GE_default1362;
extern T1363 GE_default1363;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1367 GE_default1367;
extern T1368 GE_default1368;
extern T1369 GE_default1369;
extern T1370 GE_default1370;
extern T1371 GE_default1371;
extern T1372 GE_default1372;
extern T1373 GE_default1373;
extern T1374 GE_default1374;
extern T1375 GE_default1375;
extern T1376 GE_default1376;
extern T1377 GE_default1377;
extern T1378 GE_default1378;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1381 GE_default1381;
extern T1382 GE_default1382;
extern T1383 GE_default1383;
extern T1385 GE_default1385;
extern T1386 GE_default1386;
extern T1388 GE_default1388;
extern T1389 GE_default1389;
extern T1390 GE_default1390;
extern T1391 GE_default1391;
extern T1392 GE_default1392;
extern T1393 GE_default1393;
extern T1394 GE_default1394;
extern T1395 GE_default1395;
extern T1396 GE_default1396;
extern T1397 GE_default1397;
extern T1398 GE_default1398;
extern T1399 GE_default1399;
extern T1400 GE_default1400;
extern T1401 GE_default1401;
extern T1402 GE_default1402;
extern T1403 GE_default1403;
extern T1404 GE_default1404;
extern T1405 GE_default1405;
extern T1409 GE_default1409;
extern T1410 GE_default1410;
extern T1411 GE_default1411;
extern T1412 GE_default1412;
extern T1413 GE_default1413;
extern T1416 GE_default1416;
extern T1417 GE_default1417;
extern T1418 GE_default1418;
extern T1419 GE_default1419;
extern T1420 GE_default1420;
extern T1421 GE_default1421;
extern T1422 GE_default1422;
extern T1423 GE_default1423;
extern T1425 GE_default1425;
extern T1426 GE_default1426;
extern T1427 GE_default1427;
extern T1428 GE_default1428;
extern T1430 GE_default1430;
extern T1431 GE_default1431;
extern T1432 GE_default1432;
extern T1433 GE_default1433;
extern T1436 GE_default1436;
extern T1437 GE_default1437;
extern T1440 GE_default1440;
extern T1441 GE_default1441;
extern T1442 GE_default1442;
extern T1443 GE_default1443;
extern T1444 GE_default1444;
extern T1445 GE_default1445;
extern T1446 GE_default1446;
extern T1447 GE_default1447;
extern T1450 GE_default1450;
extern T1451 GE_default1451;
extern T1452 GE_default1452;
extern T1453 GE_default1453;
extern T1454 GE_default1454;
extern T1455 GE_default1455;
extern T1456 GE_default1456;
extern T1457 GE_default1457;
extern T1458 GE_default1458;
extern T1459 GE_default1459;
extern T1461 GE_default1461;
extern T1462 GE_default1462;
extern T1463 GE_default1463;
extern T1464 GE_default1464;
extern T1465 GE_default1465;
extern T1467 GE_default1467;
extern T1469 GE_default1469;
extern T1471 GE_default1471;
extern T1472 GE_default1472;
extern T1473 GE_default1473;
extern T1474 GE_default1474;
extern T1476 GE_default1476;
extern T1477 GE_default1477;
extern T1478 GE_default1478;
extern T1479 GE_default1479;
extern T1480 GE_default1480;
extern T1481 GE_default1481;
extern T1483 GE_default1483;
extern T1484 GE_default1484;
extern T1485 GE_default1485;
extern T1486 GE_default1486;
extern T1488 GE_default1488;
extern T1489 GE_default1489;
extern T1490 GE_default1490;
extern T1491 GE_default1491;
extern T1492 GE_default1492;
extern T1493 GE_default1493;
extern T1494 GE_default1494;
extern T1497 GE_default1497;
extern T1498 GE_default1498;
extern T1499 GE_default1499;
extern T1500 GE_default1500;
extern T1507 GE_default1507;
extern T1510 GE_default1510;
extern T1511 GE_default1511;
extern T1512 GE_default1512;
extern T1513 GE_default1513;
extern T1514 GE_default1514;
extern T1515 GE_default1515;
extern T1516 GE_default1516;
extern T1518 GE_default1518;
extern T1519 GE_default1519;
extern T1520 GE_default1520;
extern T1521 GE_default1521;
extern T1522 GE_default1522;
extern T1523 GE_default1523;
extern T1524 GE_default1524;
extern T1526 GE_default1526;
extern T1527 GE_default1527;
extern T1528 GE_default1528;
extern T1529 GE_default1529;
extern T1530 GE_default1530;
extern T1531 GE_default1531;
extern T1532 GE_default1532;
extern T1535 GE_default1535;
extern T1538 GE_default1538;
extern T1539 GE_default1539;
extern T1541 GE_default1541;
extern T1543 GE_default1543;
extern T1544 GE_default1544;
extern T1545 GE_default1545;
extern T1546 GE_default1546;
extern T1547 GE_default1547;
extern T1548 GE_default1548;
extern T1549 GE_default1549;
extern T1550 GE_default1550;
extern T1551 GE_default1551;
extern T1552 GE_default1552;
extern T1553 GE_default1553;
extern T1555 GE_default1555;
extern T1556 GE_default1556;
extern T1557 GE_default1557;
extern T1558 GE_default1558;
extern T1560 GE_default1560;
extern T1561 GE_default1561;
extern T1562 GE_default1562;
extern T1563 GE_default1563;
extern T1564 GE_default1564;
extern T1565 GE_default1565;
extern T1566 GE_default1566;
extern T1567 GE_default1567;
extern T1568 GE_default1568;
extern T1570 GE_default1570;
extern T1571 GE_default1571;
extern T1573 GE_default1573;
extern T1574 GE_default1574;
extern T1576 GE_default1576;
extern T1577 GE_default1577;
extern T1578 GE_default1578;
extern T1579 GE_default1579;
extern T1582 GE_default1582;
extern T1583 GE_default1583;
extern T1585 GE_default1585;
extern T1586 GE_default1586;
extern T1587 GE_default1587;
extern T1588 GE_default1588;
extern T1589 GE_default1589;
extern T1590 GE_default1590;
extern T1592 GE_default1592;
extern T1593 GE_default1593;
extern T1594 GE_default1594;
extern T1595 GE_default1595;
extern T1597 GE_default1597;
extern T1598 GE_default1598;
extern T1599 GE_default1599;
extern T1600 GE_default1600;
extern T1601 GE_default1601;
extern T1602 GE_default1602;
extern T1603 GE_default1603;
extern T1604 GE_default1604;
extern T1605 GE_default1605;
extern T1606 GE_default1606;
extern T1607 GE_default1607;
extern T1608 GE_default1608;
extern T1609 GE_default1609;
extern T1610 GE_default1610;
extern T1611 GE_default1611;
extern T1612 GE_default1612;
extern T1613 GE_default1613;
extern T1614 GE_default1614;
extern T1615 GE_default1615;
extern T1616 GE_default1616;
extern T1617 GE_default1617;
extern T1618 GE_default1618;
extern T1619 GE_default1619;
extern T1620 GE_default1620;
extern T1623 GE_default1623;
extern T1625 GE_default1625;
extern T1627 GE_default1627;
extern T1628 GE_default1628;
extern T1630 GE_default1630;
extern T1636 GE_default1636;
extern T1637 GE_default1637;
extern T1638 GE_default1638;
extern T1639 GE_default1639;
extern T1640 GE_default1640;
extern T1641 GE_default1641;
extern T1642 GE_default1642;
extern T1643 GE_default1643;
extern T1644 GE_default1644;
extern T1645 GE_default1645;
extern T1646 GE_default1646;
extern T1647 GE_default1647;
extern T1648 GE_default1648;
extern T1649 GE_default1649;
extern T1650 GE_default1650;
extern T1651 GE_default1651;
extern T1652 GE_default1652;
extern T1653 GE_default1653;
extern T1654 GE_default1654;
extern T1657 GE_default1657;
extern T1658 GE_default1658;
extern T1659 GE_default1659;
extern T1660 GE_default1660;
extern T1661 GE_default1661;
extern T1662 GE_default1662;
extern T1663 GE_default1663;
extern T1664 GE_default1664;
extern T1665 GE_default1665;
extern T1666 GE_default1666;
extern T1668 GE_default1668;
extern T1669 GE_default1669;
extern T1671 GE_default1671;
extern T1672 GE_default1672;
extern T1674 GE_default1674;
extern T1675 GE_default1675;
extern T1676 GE_default1676;
extern T1677 GE_default1677;
extern T1678 GE_default1678;
extern T1679 GE_default1679;
extern T1680 GE_default1680;
extern T1681 GE_default1681;
extern T1682 GE_default1682;
extern T1683 GE_default1683;
extern T1685 GE_default1685;
extern T1686 GE_default1686;
extern T1687 GE_default1687;
extern T1688 GE_default1688;
extern T1689 GE_default1689;
extern T1690 GE_default1690;
extern T1691 GE_default1691;
extern T1692 GE_default1692;
extern T1693 GE_default1693;
extern T1694 GE_default1694;
extern T1695 GE_default1695;
extern T1696 GE_default1696;
extern T1697 GE_default1697;
extern T1698 GE_default1698;
extern T1699 GE_default1699;
extern T1700 GE_default1700;
extern T1701 GE_default1701;
extern T1702 GE_default1702;
extern T1703 GE_default1703;
extern T1704 GE_default1704;
extern T1705 GE_default1705;
extern T1706 GE_default1706;
extern T1707 GE_default1707;
extern T1708 GE_default1708;
extern T1709 GE_default1709;
extern T1710 GE_default1710;
extern T1711 GE_default1711;
extern T1712 GE_default1712;
extern T1713 GE_default1713;
extern T1714 GE_default1714;
extern T1715 GE_default1715;
extern T1716 GE_default1716;
extern T1717 GE_default1717;
extern T1718 GE_default1718;
extern T1719 GE_default1719;
extern T1720 GE_default1720;
extern T1722 GE_default1722;
extern T1724 GE_default1724;
extern T1725 GE_default1725;
extern T1727 GE_default1727;
extern T1728 GE_default1728;
extern T1729 GE_default1729;
extern T1730 GE_default1730;
extern T1731 GE_default1731;
extern T1734 GE_default1734;
extern T1735 GE_default1735;
extern T1736 GE_default1736;
extern T1737 GE_default1737;
extern T1739 GE_default1739;
extern T1740 GE_default1740;
extern T1741 GE_default1741;
extern T1742 GE_default1742;
extern T1743 GE_default1743;
extern T1745 GE_default1745;
extern T1746 GE_default1746;
extern T1747 GE_default1747;
extern T1748 GE_default1748;
extern T1749 GE_default1749;
extern T1750 GE_default1750;
extern T1752 GE_default1752;
extern T1753 GE_default1753;
extern T1754 GE_default1754;
extern T1755 GE_default1755;
extern T1756 GE_default1756;
extern T1758 GE_default1758;
extern T1760 GE_default1760;
extern T1761 GE_default1761;
extern T1762 GE_default1762;
extern T1763 GE_default1763;
extern T1764 GE_default1764;
extern T1765 GE_default1765;
extern T1766 GE_default1766;
extern T1769 GE_default1769;
extern T1771 GE_default1771;
extern T1772 GE_default1772;
extern T1775 GE_default1775;
extern T1779 GE_default1779;
extern T1780 GE_default1780;
extern T1781 GE_default1781;
extern T1782 GE_default1782;
extern T1783 GE_default1783;
extern T1784 GE_default1784;
extern T1785 GE_default1785;
extern T1787 GE_default1787;
extern T1788 GE_default1788;
extern T1790 GE_default1790;
extern T1791 GE_default1791;
extern T1792 GE_default1792;
extern T1793 GE_default1793;
extern T1794 GE_default1794;
extern T1795 GE_default1795;
extern T1796 GE_default1796;
extern T1798 GE_default1798;
extern T1799 GE_default1799;
extern T1800 GE_default1800;
extern T1801 GE_default1801;
extern T1804 GE_default1804;
extern T1805 GE_default1805;
extern T1806 GE_default1806;
extern T1807 GE_default1807;
extern T1814 GE_default1814;
extern T1818 GE_default1818;
extern T1819 GE_default1819;
extern T1821 GE_default1821;
extern T1822 GE_default1822;
extern T1825 GE_default1825;
extern T1829 GE_default1829;
extern T1830 GE_default1830;
extern T1831 GE_default1831;
extern T1832 GE_default1832;
extern T1834 GE_default1834;
extern T1838 GE_default1838;
extern T1840 GE_default1840;
extern T1841 GE_default1841;
extern T1842 GE_default1842;
extern T1845 GE_default1845;
extern T1846 GE_default1846;
extern T1847 GE_default1847;
extern T1848 GE_default1848;
extern T1849 GE_default1849;
extern T1850 GE_default1850;
extern T1851 GE_default1851;
extern T1852 GE_default1852;
extern T1853 GE_default1853;
extern T1854 GE_default1854;
extern T1855 GE_default1855;
extern T1856 GE_default1856;
extern T1857 GE_default1857;
extern T1858 GE_default1858;
extern T1859 GE_default1859;
extern T1863 GE_default1863;
extern T1866 GE_default1866;
extern T1867 GE_default1867;
extern T1868 GE_default1868;
extern T1870 GE_default1870;
extern T1871 GE_default1871;
extern T1872 GE_default1872;
extern T1874 GE_default1874;
extern T1876 GE_default1876;
extern T1877 GE_default1877;
extern T1879 GE_default1879;
extern T1880 GE_default1880;
extern T1882 GE_default1882;
extern T1883 GE_default1883;
extern T1884 GE_default1884;
extern T1885 GE_default1885;
extern T1886 GE_default1886;
extern T1887 GE_default1887;
extern T1888 GE_default1888;
extern T1889 GE_default1889;
extern T1890 GE_default1890;
extern T1891 GE_default1891;
extern T1893 GE_default1893;
extern T1894 GE_default1894;
extern T1896 GE_default1896;
extern T1897 GE_default1897;
extern T1898 GE_default1898;
extern T1899 GE_default1899;
extern T1900 GE_default1900;
extern T1901 GE_default1901;
extern T1903 GE_default1903;
extern T1904 GE_default1904;
extern T1905 GE_default1905;
extern T1906 GE_default1906;
extern T1907 GE_default1907;
extern T1908 GE_default1908;
extern T1910 GE_default1910;
extern T1913 GE_default1913;
extern T1917 GE_default1917;
extern T1919 GE_default1919;
extern T1920 GE_default1920;
extern T1921 GE_default1921;
extern T1922 GE_default1922;
extern T1923 GE_default1923;
extern T1924 GE_default1924;
extern T1925 GE_default1925;
extern T1926 GE_default1926;
extern T1927 GE_default1927;
extern T1928 GE_default1928;
extern T1929 GE_default1929;
extern T1930 GE_default1930;
extern T1931 GE_default1931;
extern T1932 GE_default1932;
extern T1933 GE_default1933;
extern T1934 GE_default1934;
extern T1935 GE_default1935;
extern T1936 GE_default1936;
extern T1937 GE_default1937;
extern T1938 GE_default1938;
extern T1939 GE_default1939;
extern T1940 GE_default1940;
extern T1941 GE_default1941;
extern T1942 GE_default1942;
extern T1943 GE_default1943;
extern T1944 GE_default1944;
extern T1945 GE_default1945;
extern T1946 GE_default1946;
extern T1947 GE_default1947;
extern T1948 GE_default1948;
extern T1949 GE_default1949;
extern T1950 GE_default1950;
extern T1951 GE_default1951;
extern T1952 GE_default1952;
extern T1953 GE_default1953;
extern T1954 GE_default1954;
extern T1955 GE_default1955;
extern T1956 GE_default1956;
extern T1957 GE_default1957;
extern T1958 GE_default1958;
extern T1959 GE_default1959;
extern T1960 GE_default1960;
extern T1962 GE_default1962;
extern T1963 GE_default1963;
extern T1964 GE_default1964;
extern T1965 GE_default1965;
extern T1966 GE_default1966;
extern T1967 GE_default1967;
extern T1968 GE_default1968;
extern T1969 GE_default1969;
extern T1971 GE_default1971;
extern T1972 GE_default1972;
extern T1974 GE_default1974;
extern T1975 GE_default1975;
extern T1976 GE_default1976;
extern T1977 GE_default1977;
extern T1978 GE_default1978;
extern T1979 GE_default1979;
extern T1980 GE_default1980;
extern T1981 GE_default1981;
extern T1982 GE_default1982;
extern T1983 GE_default1983;
extern T1986 GE_default1986;
extern T1987 GE_default1987;
extern T1988 GE_default1988;
extern T1989 GE_default1989;
extern T1990 GE_default1990;
extern T1991 GE_default1991;
extern T1992 GE_default1992;
extern T1993 GE_default1993;
extern T1995 GE_default1995;
extern T1996 GE_default1996;
extern T1997 GE_default1997;
extern T1998 GE_default1998;
extern T1999 GE_default1999;
extern T2000 GE_default2000;
extern T2001 GE_default2001;
extern T2002 GE_default2002;
extern T2003 GE_default2003;
extern T2004 GE_default2004;
extern T2005 GE_default2005;
extern T2011 GE_default2011;
extern T2012 GE_default2012;
extern T2013 GE_default2013;
extern T2014 GE_default2014;
extern T2015 GE_default2015;
extern T2016 GE_default2016;
extern T2018 GE_default2018;
extern T2020 GE_default2020;
extern T2021 GE_default2021;
extern T2024 GE_default2024;
extern T2025 GE_default2025;
extern T2031 GE_default2031;
extern T2045 GE_default2045;
extern T2046 GE_default2046;
extern T2048 GE_default2048;
extern T2055 GE_default2055;
extern T2057 GE_default2057;
extern T2064 GE_default2064;
extern T2070 GE_default2070;
extern T2071 GE_default2071;
extern T2074 GE_default2074;
extern T2075 GE_default2075;
extern T2076 GE_default2076;
extern T2079 GE_default2079;
extern T2080 GE_default2080;
extern T2083 GE_default2083;
extern T2084 GE_default2084;
extern T2090 GE_default2090;
extern T2091 GE_default2091;
extern T2093 GE_default2093;
extern T2094 GE_default2094;
extern T2100 GE_default2100;
extern T2101 GE_default2101;
extern T2102 GE_default2102;
extern T2108 GE_default2108;
extern T2109 GE_default2109;
extern T2115 GE_default2115;
extern T2116 GE_default2116;
extern T2117 GE_default2117;
extern T2118 GE_default2118;
extern T2119 GE_default2119;
extern T2120 GE_default2120;
extern T2121 GE_default2121;
extern T2122 GE_default2122;
extern T2123 GE_default2123;
extern T2125 GE_default2125;
extern T2126 GE_default2126;
extern T2127 GE_default2127;
extern T2129 GE_default2129;
extern T2130 GE_default2130;
extern T2131 GE_default2131;
extern T2132 GE_default2132;
extern T2133 GE_default2133;
extern T2134 GE_default2134;
extern T2135 GE_default2135;
extern T2137 GE_default2137;
extern T2138 GE_default2138;
extern T2140 GE_default2140;
extern T2142 GE_default2142;
extern T2143 GE_default2143;
extern T2146 GE_default2146;
extern T2148 GE_default2148;
extern T2149 GE_default2149;
extern T2150 GE_default2150;
extern T2152 GE_default2152;
extern T2155 GE_default2155;
extern T2156 GE_default2156;
extern T2157 GE_default2157;
extern T2158 GE_default2158;
extern T2159 GE_default2159;
extern T2161 GE_default2161;
extern T2162 GE_default2162;
extern T2163 GE_default2163;
extern T2164 GE_default2164;
extern T2166 GE_default2166;
extern T2167 GE_default2167;
extern T2168 GE_default2168;
extern T2169 GE_default2169;
extern T2170 GE_default2170;
extern T2171 GE_default2171;
extern T2172 GE_default2172;
extern T2173 GE_default2173;
extern T2174 GE_default2174;
extern T2175 GE_default2175;
extern T2176 GE_default2176;
extern T2177 GE_default2177;
extern T2178 GE_default2178;
extern T2179 GE_default2179;
extern T2180 GE_default2180;
extern T2181 GE_default2181;
extern T2182 GE_default2182;
extern T2183 GE_default2183;
extern T2184 GE_default2184;
extern T2185 GE_default2185;
extern T2186 GE_default2186;
extern T2187 GE_default2187;
extern T2188 GE_default2188;
extern T2189 GE_default2189;
extern T2190 GE_default2190;
extern T2191 GE_default2191;
extern T2192 GE_default2192;
extern T2193 GE_default2193;
extern T2194 GE_default2194;
extern T2195 GE_default2195;
extern T2196 GE_default2196;
extern T2197 GE_default2197;
extern T2198 GE_default2198;
extern T2199 GE_default2199;
extern T2200 GE_default2200;
extern T2201 GE_default2201;
extern T2202 GE_default2202;
extern T2203 GE_default2203;
extern T2204 GE_default2204;
extern T2205 GE_default2205;
extern T2206 GE_default2206;
extern T2207 GE_default2207;
extern T2208 GE_default2208;
extern T2209 GE_default2209;
extern T2210 GE_default2210;
extern T2211 GE_default2211;
extern T2212 GE_default2212;
extern T2213 GE_default2213;
extern T2214 GE_default2214;
extern T2215 GE_default2215;
extern T2216 GE_default2216;
extern T2217 GE_default2217;
extern T2218 GE_default2218;
extern T2219 GE_default2219;
extern T2220 GE_default2220;
extern T2221 GE_default2221;
extern T2222 GE_default2222;
extern T2223 GE_default2223;
extern T2225 GE_default2225;
extern T2226 GE_default2226;
extern T2227 GE_default2227;
extern T2229 GE_default2229;
extern T2231 GE_default2231;
extern T2232 GE_default2232;
extern T2235 GE_default2235;
extern T2236 GE_default2236;
extern T2238 GE_default2238;
extern T2239 GE_default2239;
extern T2240 GE_default2240;
extern T2241 GE_default2241;
extern T2242 GE_default2242;
extern T2244 GE_default2244;
extern T2246 GE_default2246;
extern T2248 GE_default2248;
extern T2249 GE_default2249;
extern T2251 GE_default2251;
extern T2252 GE_default2252;
extern T2253 GE_default2253;
extern T2254 GE_default2254;
extern T2255 GE_default2255;
extern T2256 GE_default2256;
extern T2258 GE_default2258;
extern T2262 GE_default2262;
extern T2265 GE_default2265;
extern T2268 GE_default2268;
extern T2269 GE_default2269;
extern T2270 GE_default2270;
extern T2271 GE_default2271;
extern T2272 GE_default2272;
extern T2274 GE_default2274;

extern T0* GE_new_str8(T6 c);
extern T0* GE_new_str32(T6 c);
extern T0* GE_new_istr8(T6 c);
extern T0* GE_new_istr32(T6 c);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [CHARACTER_32] */
extern T0* GE_new16(TC* ac, T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(TC* ac, T1 initialize);
/* New instance of type STRING_32 */
extern T0* GE_new18(TC* ac, T1 initialize);
/* New instance of type IMMUTABLE_STRING_32 */
extern T0* GE_new20(TC* ac, T1 initialize);
/* New instance of type ISE_EXCEPTION_MANAGER */
extern T0* GE_new21(TC* ac, T1 initialize);
/* New instance of type GEC */
extern T0* GE_new25(TC* ac, T1 initialize);
/* New instance of type CELL [detachable EXCEPTION] */
extern T0* GE_new26(TC* ac, T1 initialize);
/* New instance of type HASH_TABLE [INTEGER_32, INTEGER_32] */
extern T0* GE_new27(TC* ac, T1 initialize);
/* New instance of type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
extern T0* GE_new28(TC* ac, T1 initialize);
/* New instance of type CELL [NO_MORE_MEMORY] */
extern T0* GE_new29(TC* ac, T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new30(TC* ac, T1 initialize);
/* New instance of type TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
extern T0* GE_new31(TC* ac, T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new32(TC* ac, T1 initialize);
/* New instance of type ARRAY [STRING_8] */
extern T0* GE_new33(TC* ac, T1 initialize);
/* New instance of type SPECIAL [STRING_8] */
extern T0* GE_new34(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new35(TC* ac, T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new36(TC* ac, T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new37(TC* ac, T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new38(TC* ac, T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new41(TC* ac, T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new42(TC* ac, T1 initialize);
/* New instance of type ET_ISE_VARIABLES */
extern T0* GE_new43(TC* ac, T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new44(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new45(TC* ac, T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new47(TC* ac, T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new48(TC* ac, T1 initialize);
/* New instance of type AP_STRING_OPTION */
extern T0* GE_new49(TC* ac, T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new51(TC* ac, T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new52(TC* ac, T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new53(TC* ac, T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new54(TC* ac, T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new58(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM_PARSER */
extern T0* GE_new60(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ERROR_HANDLER */
extern T0* GE_new61(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SETTINGS */
extern T0* GE_new62(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM */
extern T0* GE_new63(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGET */
extern T0* GE_new64(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CAPABILITIES */
extern T0* GE_new66(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VARIABLES */
extern T0* GE_new67(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new68(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM_PROCESSOR */
extern T0* GE_new69(TC* ac, T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new72(TC* ac, T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new73(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [STRING_8] */
extern T0* GE_new75(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new76(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new77(TC* ac, T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new78(TC* ac, T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new79(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new81(TC* ac, T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new82(TC* ac, T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new84(TC* ac, T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new86(TC* ac, T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new87(TC* ac, T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new88(TC* ac, T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new91(TC* ac, T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new92(TC* ac, T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new93(TC* ac, T1 initialize);
/* New instance of type GECC */
extern T0* GE_new94(TC* ac, T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new95(TC* ac, T1 initialize);
/* New instance of type VOID_TARGET */
extern T0* GE_new97(TC* ac, T1 initialize);
/* New instance of type ROUTINE_FAILURE */
extern T0* GE_new99(TC* ac, T1 initialize);
/* New instance of type OLD_VIOLATION */
extern T0* GE_new101(TC* ac, T1 initialize);
/* New instance of type NO_MORE_MEMORY */
extern T0* GE_new103(TC* ac, T1 initialize);
/* New instance of type INVARIANT_VIOLATION */
extern T0* GE_new104(TC* ac, T1 initialize);
/* New instance of type OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new105(TC* ac, T1 initialize);
/* New instance of type IO_FAILURE */
extern T0* GE_new106(TC* ac, T1 initialize);
/* New instance of type OPERATING_SYSTEM_FAILURE */
extern T0* GE_new107(TC* ac, T1 initialize);
/* New instance of type COM_FAILURE */
extern T0* GE_new108(TC* ac, T1 initialize);
/* New instance of type EIFFEL_RUNTIME_PANIC */
extern T0* GE_new109(TC* ac, T1 initialize);
/* New instance of type PRECONDITION_VIOLATION */
extern T0* GE_new111(TC* ac, T1 initialize);
/* New instance of type POSTCONDITION_VIOLATION */
extern T0* GE_new112(TC* ac, T1 initialize);
/* New instance of type FLOATING_POINT_FAILURE */
extern T0* GE_new113(TC* ac, T1 initialize);
/* New instance of type CHECK_VIOLATION */
extern T0* GE_new114(TC* ac, T1 initialize);
/* New instance of type BAD_INSPECT_VALUE */
extern T0* GE_new115(TC* ac, T1 initialize);
/* New instance of type VARIANT_VIOLATION */
extern T0* GE_new116(TC* ac, T1 initialize);
/* New instance of type LOOP_INVARIANT_VIOLATION */
extern T0* GE_new117(TC* ac, T1 initialize);
/* New instance of type RESCUE_FAILURE */
extern T0* GE_new118(TC* ac, T1 initialize);
/* New instance of type RESUMPTION_FAILURE */
extern T0* GE_new119(TC* ac, T1 initialize);
/* New instance of type CREATE_ON_DEFERRED */
extern T0* GE_new120(TC* ac, T1 initialize);
/* New instance of type EXTERNAL_FAILURE */
extern T0* GE_new121(TC* ac, T1 initialize);
/* New instance of type VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new122(TC* ac, T1 initialize);
/* New instance of type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new123(TC* ac, T1 initialize);
/* New instance of type MISMATCH_FAILURE */
extern T0* GE_new124(TC* ac, T1 initialize);
/* New instance of type DEVELOPER_EXCEPTION */
extern T0* GE_new125(TC* ac, T1 initialize);
/* New instance of type ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new126(TC* ac, T1 initialize);
/* New instance of type SERIALIZATION_FAILURE */
extern T0* GE_new127(TC* ac, T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new128(TC* ac, T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new129(TC* ac, T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new130(TC* ac, T1 initialize);
/* New instance of type PRIMES */
extern T0* GE_new131(TC* ac, T1 initialize);
/* New instance of type SPECIAL [INTEGER_32] */
extern T0* GE_new132(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [BOOLEAN] */
extern T0* GE_new133(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARGUMENTS_32 */
extern T0* GE_new134(TC* ac, T1 initialize);
/* New instance of type MUTEX */
extern T0* GE_new137(TC* ac, T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new138(TC* ac, T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new139(TC* ac, T1 initialize);
/* New instance of type KL_LINKABLE [CHARACTER_8] */
extern T0* GE_new141(TC* ac, T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new143(TC* ac, T1 initialize);
/* New instance of type FILE_INFO */
extern T0* GE_new144(TC* ac, T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new145(TC* ac, T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new147(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_OPTION] */
extern T0* GE_new148(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new149(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [STRING_8] */
extern T0* GE_new150(TC* ac, T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new151(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [AP_OPTION] */
extern T0* GE_new152(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new153(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable STRING_8] */
extern T0* GE_new154(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
extern T0* GE_new155(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [STRING_8] */
extern T0* GE_new156(TC* ac, T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new157(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [STRING_8] */
extern T0* GE_new158(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [BOOLEAN] */
extern T0* GE_new161(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [INTEGER_32] */
extern T0* GE_new164(TC* ac, T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new165(TC* ac, T1 initialize);
/* New instance of type ET_ECF_AST_FACTORY */
extern T0* GE_new166(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_SYSTEM] */
extern T0* GE_new167(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET] */
extern T0* GE_new168(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_TARGET]] */
extern T0* GE_new169(TC* ac, T1 initialize);
/* New instance of type TUPLE */
extern T0* GE_new170(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER] */
extern T0* GE_new171(TC* ac, T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new172(TC* ac, T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new173(TC* ac, T1 initialize);
/* New instance of type TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
extern T0* GE_new174(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
extern T0* GE_new175(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
extern T0* GE_new176(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new178(TC* ac, T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new179(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new180(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new182(TC* ac, T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new183(TC* ac, T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new186(TC* ac, T1 initialize);
/* New instance of type ET_ECF_STATE */
extern T0* GE_new187(TC* ac, T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new188(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM_CONFIG */
extern T0* GE_new189(TC* ac, T1 initialize);
/* New instance of type ET_ECF_LIBRARY */
extern T0* GE_new191(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new192(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_LIBRARY] */
extern T0* GE_new194(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
extern T0* GE_new195(TC* ac, T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new196(TC* ac, T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new197(TC* ac, T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new199(TC* ac, T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new200(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
extern T0* GE_new202(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new203(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGET_PARENT */
extern T0* GE_new204(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new205(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
extern T0* GE_new206(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGETS */
extern T0* GE_new207(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new208(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new209(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_LIBRARY] */
extern T0* GE_new211(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new212(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
extern T0* GE_new213(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new215(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new216(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new218(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_8, STRING_8] */
extern T0* GE_new219(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ERROR */
extern T0* GE_new220(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_HASH_FUNCTION [STRING_8] */
extern T0* GE_new221(TC* ac, T1 initialize);
/* New instance of type TUPLE [STRING_8] */
extern T0* GE_new222(TC* ac, T1 initialize);
/* New instance of type FUNCTION [TUPLE [STRING_8], INTEGER_32] */
extern T0* GE_new223(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_STRING_ROUTINES] */
extern T0* GE_new224(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
extern T0* GE_new226(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE */
extern T0* GE_new228(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new229(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new230(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
extern T0* GE_new231(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLASS] */
extern T0* GE_new232(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_CLASS]] */
extern T0* GE_new233(TC* ac, T1 initialize);
/* New instance of type TUPLE [INTEGER_32] */
extern T0* GE_new234(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new235(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new236(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new241(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new245(TC* ac, T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new246(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new247(TC* ac, T1 initialize);
/* New instance of type ARRAY [ET_TYPE] */
extern T0* GE_new249(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE] */
extern T0* GE_new250(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new258(TC* ac, T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new259(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new260(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new261(TC* ac, T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new262(TC* ac, T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new263(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENTS */
extern T0* GE_new264(TC* ac, T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new265(TC* ac, T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new266(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new267(TC* ac, T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new268(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_IDENTIFIER] */
extern T0* GE_new269(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new270(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new271(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [BOOLEAN] */
extern T0* GE_new272(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new273(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new274(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new275(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new276(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new277(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new278(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_RESULT] */
extern T0* GE_new279(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
extern T0* GE_new280(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new281(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new282(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_EXPRESSION] */
extern T0* GE_new283(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EXPRESSION] */
extern T0* GE_new284(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
extern T0* GE_new285(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new286(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new287(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new288(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
extern T0* GE_new289(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [INTEGER_32] */
extern T0* GE_new290(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_AGENT] */
extern T0* GE_new291(TC* ac, T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new293(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new294(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new295(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new298(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT */
extern T0* GE_new299(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_INSTRUCTION */
extern T0* GE_new302(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new303(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new305(TC* ac, T1 initialize);
/* New instance of type ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
extern T0* GE_new306(TC* ac, T1 initialize);
/* New instance of type ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
extern T0* GE_new309(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new310(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
extern T0* GE_new311(TC* ac, T1 initialize);
/* New instance of type ARRAY [INTEGER_32] */
extern T0* GE_new312(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new313(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new314(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new315(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new316(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new317(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
extern T0* GE_new318(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_FEATURE] */
extern T0* GE_new319(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, STRING_8] */
extern T0* GE_new320(TC* ac, T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new321(TC* ac, T1 initialize);
/* New instance of type ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new322(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new323(TC* ac, T1 initialize);
/* New instance of type DS_STRING_HASH_TABLE */
extern T0* GE_new324(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new325(TC* ac, T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new326(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new327(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new328(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new329(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_TYPES */
extern T0* GE_new330(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new332(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
extern T0* GE_new333(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new334(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new337(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new338(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new341(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SECONDARY_TYPE */
extern T0* GE_new342(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
extern T0* GE_new343(TC* ac, T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new347(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new348(TC* ac, T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new352(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new353(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_INLINED_EXPRESSION */
extern T0* GE_new361(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_CALL_CONTEXT */
extern T0* GE_new362(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [INTEGER_32] */
extern T0* GE_new365(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE] */
extern T0* GE_new367(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new368(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new369(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new370(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new371(TC* ac, T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new372(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new377(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new378(TC* ac, T1 initialize);
/* New instance of type ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new382(TC* ac, T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new383(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new384(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_COMPONENT_LIST */
extern T0* GE_new388(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new390(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
extern T0* GE_new391(TC* ac, T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new392(TC* ac, T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new394(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new395(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM_MULTIPROCESSOR */
extern T0* GE_new398(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [STRING_8] */
extern T0* GE_new399(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_8] */
extern T0* GE_new400(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [INTEGER_32] */
extern T0* GE_new402(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new403(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new404(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new405(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new407(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
extern T0* GE_new409(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new410(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new411(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new412(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new413(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new414(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new415(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new416(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new417(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
extern T0* GE_new418(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_ITEM_SCOPE */
extern T0* GE_new419(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new420(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
extern T0* GE_new421(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE */
extern T0* GE_new422(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new423(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new424(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new425(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NOTE_TERM] */
extern T0* GE_new426(TC* ac, T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new427(TC* ac, T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new428(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new429(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_BASE_CLASS_CHECKER */
extern T0* GE_new430(TC* ac, T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new431(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new433(TC* ac, T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new435(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new437(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new438(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_CODES */
extern T0* GE_new439(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new440(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new441(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new442(TC* ac, T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new447(TC* ac, T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new448(TC* ac, T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new449(TC* ac, T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new451(TC* ac, T1 initialize);
/* New instance of type ARRAY [RX_CHARACTER_SET] */
extern T0* GE_new452(TC* ac, T1 initialize);
/* New instance of type SPECIAL [RX_CHARACTER_SET] */
extern T0* GE_new453(TC* ac, T6 a1, T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new454(TC* ac, T1 initialize);
/* New instance of type NATIVE_STRING */
extern T0* GE_new455(TC* ac, T1 initialize);
/* New instance of type TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
extern T0* GE_new456(TC* ac, T1 initialize);
/* New instance of type WORKER_THREAD */
extern T0* GE_new457(TC* ac, T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new459(TC* ac, T1 initialize);
/* New instance of type PATH */
extern T0* GE_new460(TC* ac, T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new461(TC* ac, T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new464(TC* ac, T1 initialize);
/* New instance of type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new465(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_CONFIG] */
extern T0* GE_new469(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
extern T0* GE_new471(TC* ac, T1 initialize);
/* New instance of type ET_ECF_OPTIONS */
extern T0* GE_new473(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new474(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new475(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
extern T0* GE_new476(TC* ac, T1 initialize);
/* New instance of type ET_ECF_REDIRECTION_CONFIG */
extern T0* GE_new478(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new479(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new480(TC* ac, T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new482(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new483(TC* ac, T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new484(TC* ac, T1 initialize);
/* New instance of type ET_MASTER_CLASS */
extern T0* GE_new485(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
extern T0* GE_new486(TC* ac, T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new487(TC* ac, T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new488(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new489(TC* ac, T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new492(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new493(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new494(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new495(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new496(TC* ac, T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new497(TC* ac, T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new498(TC* ac, T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new499(TC* ac, T1 initialize);
/* New instance of type ET_MASTER_CLASS_CHECKER */
extern T0* GE_new500(TC* ac, T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new501(TC* ac, T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new502(TC* ac, T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new503(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new504(TC* ac, T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new505(TC* ac, T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new506(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLASS] */
extern T0* GE_new507(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new508(TC* ac, T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new509(TC* ac, T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new510(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new512(TC* ac, T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new513(TC* ac, T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new514(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
extern T0* GE_new515(TC* ac, T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new518(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new520(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new521(TC* ac, T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new522(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new523(TC* ac, T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new524(TC* ac, T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new525(TC* ac, T1 initialize);
/* New instance of type CELL [INTEGER_32] */
extern T0* GE_new526(TC* ac, T1 initialize);
/* New instance of type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
extern T0* GE_new527(TC* ac, T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new528(TC* ac, T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new530(TC* ac, T1 initialize);
/* New instance of type ARRAY [IMMUTABLE_STRING_32] */
extern T0* GE_new531(TC* ac, T1 initialize);
/* New instance of type SPECIAL [IMMUTABLE_STRING_32] */
extern T0* GE_new532(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [NATURAL_8] */
extern T0* GE_new533(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new535(TC* ac, T1 initialize);
/* New instance of type SPECIAL [AP_OPTION] */
extern T0* GE_new537(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_OPTION] */
extern T0* GE_new538(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new539(TC* ac, T1 initialize);
/* New instance of type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new540(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new541(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [STRING_8] */
extern T0* GE_new542(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable STRING_8] */
extern T0* GE_new543(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable STRING_8] */
extern T0* GE_new544(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new545(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [STRING_8] */
extern T0* GE_new546(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [BOOLEAN] */
extern T0* GE_new547(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new548(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [INTEGER_32] */
extern T0* GE_new549(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new550(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new552(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_LIBRARY] */
extern T0* GE_new553(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
extern T0* GE_new556(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new557(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new560(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new561(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new562(TC* ac, T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new563(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_POSITION] */
extern T0* GE_new565(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
extern T0* GE_new566(TC* ac, T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new567(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new568(TC* ac, T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new570(TC* ac, T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new572(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new573(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ANY] */
extern T0* GE_new574(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new575(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new576(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new577(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new578(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new579(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new580(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new581(TC* ac, T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new582(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new583(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new584(TC* ac, T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new585(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new586(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new587(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new588(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new589(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new590(TC* ac, T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new591(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new592(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new593(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [STRING_8] */
extern T0* GE_new594(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new595(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [BOOLEAN] */
extern T0* GE_new596(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
extern T0* GE_new597(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new598(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_DECLARATION] */
extern T0* GE_new599(TC* ac, T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new602(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new603(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new605(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new606(TC* ac, T1 initialize);
/* New instance of type ARRAY [XM_CALLBACKS_FILTER] */
extern T0* GE_new607(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_CALLBACKS_FILTER] */
extern T0* GE_new608(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET [XM_NAMESPACE] */
extern T0* GE_new609(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
extern T0* GE_new610(TC* ac, T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
extern T0* GE_new611(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new614(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new616(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
extern T0* GE_new617(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new618(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET] */
extern T0* GE_new619(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
extern T0* GE_new621(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new623(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new624(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new625(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new626(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new627(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY */
extern T0* GE_new628(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
extern T0* GE_new632(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new633(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
extern T0* GE_new634(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
extern T0* GE_new635(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new636(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new637(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_FEATURE] */
extern T0* GE_new638(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
extern T0* GE_new639(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new642(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
extern T0* GE_new643(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_MASTER_CLASS] */
extern T0* GE_new644(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
extern T0* GE_new645(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new646(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
extern T0* GE_new648(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
extern T0* GE_new649(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
extern T0* GE_new650(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new654(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new655(TC* ac, T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new656(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new658(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE] */
extern T0* GE_new659(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new661(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new662(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INSTRUCTION] */
extern T0* GE_new664(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
extern T0* GE_new665(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new666(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new667(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new668(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new669(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new670(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new671(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new672(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new674(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new675(TC* ac, T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new676(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new677(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new678(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new679(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new680(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new681(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new682(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new683(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new684(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new685(TC* ac, T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new686(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new687(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new688(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new689(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new690(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new691(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new692(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new693(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new694(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RESULT] */
extern T0* GE_new695(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RESULT] */
extern T0* GE_new696(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
extern T0* GE_new697(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new698(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new699(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new700(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION] */
extern T0* GE_new701(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
extern T0* GE_new702(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
extern T0* GE_new703(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [INTEGER_32] */
extern T0* GE_new704(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
extern T0* GE_new705(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new706(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST] */
extern T0* GE_new708(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
extern T0* GE_new709(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
extern T0* GE_new710(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [INTEGER_32] */
extern T0* GE_new711(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT] */
extern T0* GE_new713(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT] */
extern T0* GE_new714(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
extern T0* GE_new715(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new716(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
extern T0* GE_new718(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new719(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new720(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new721(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
extern T0* GE_new723(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE] */
extern T0* GE_new724(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE] */
extern T0* GE_new725(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new726(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONSTANT] */
extern T0* GE_new727(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
extern T0* GE_new729(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new730(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_CONSTANT] */
extern T0* GE_new731(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
extern T0* GE_new733(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new734(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new736(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new737(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new738(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new739(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new740(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new741(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new742(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new743(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new744(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new745(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
extern T0* GE_new748(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new752(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new753(TC* ac, T1 initialize);
/* New instance of type ARRAY [BOOLEAN] */
extern T0* GE_new754(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new758(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new759(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new762(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE] */
extern T0* GE_new763(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
extern T0* GE_new764(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
extern T0* GE_new765(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
extern T0* GE_new766(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new767(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
extern T0* GE_new768(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new769(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PROCEDURE] */
extern T0* GE_new770(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new771(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new772(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new773(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUERY] */
extern T0* GE_new774(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new775(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new776(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new777(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FEATURE] */
extern T0* GE_new778(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new779(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new780(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new781(TC* ac, T1 initialize);
/* New instance of type TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new782(TC* ac, T1 initialize);
/* New instance of type SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new783(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new784(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new785(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new786(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new787(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new788(TC* ac, T1 initialize);
/* New instance of type ET_NAMED_OBJECT_TEST */
extern T0* GE_new791(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new792(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new793(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new794(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
extern T0* GE_new795(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ITERATION_COMPONENT] */
extern T0* GE_new796(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
extern T0* GE_new798(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
extern T0* GE_new799(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new801(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new802(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new803(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new804(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new806(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new807(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new808(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new809(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTIONS] */
extern T0* GE_new810(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
extern T0* GE_new812(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
extern T0* GE_new813(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_TERM] */
extern T0* GE_new815(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
extern T0* GE_new816(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_ITEM] */
extern T0* GE_new817(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
extern T0* GE_new818(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new819(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new820(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new821(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new822(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATURAL_32] */
extern T0* GE_new823(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [RX_CHARACTER_SET] */
extern T0* GE_new824(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_32] */
extern T0* GE_new825(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATURAL_64] */
extern T0* GE_new826(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
extern T0* GE_new827(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
extern T0* GE_new828(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ARRAY [INTEGER_32]] */
extern T0* GE_new829(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
extern T0* GE_new830(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new831(TC* ac, T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new834(TC* ac, T1 initialize);
/* New instance of type THREAD_ATTRIBUTES */
extern T0* GE_new835(TC* ac, T1 initialize);
/* New instance of type CELL [BOOLEAN] */
extern T0* GE_new836(TC* ac, T1 initialize);
/* New instance of type CHARACTER_PROPERTY */
extern T0* GE_new839(TC* ac, T1 initialize);
/* New instance of type STRING_8_SEARCHER */
extern T0* GE_new840(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new841(TC* ac, T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new842(TC* ac, T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new843(TC* ac, T1 initialize);
/* New instance of type ET_ECF_NOTE_ELEMENT */
extern T0* GE_new844(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CLUSTERS */
extern T0* GE_new845(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new846(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new847(TC* ac, T1 initialize);
/* New instance of type ET_ECF_FILE_RULES */
extern T0* GE_new848(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAGS */
extern T0* GE_new849(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new850(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new851(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAGS */
extern T0* GE_new852(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKES */
extern T0* GE_new853(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new854(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCES */
extern T0* GE_new855(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ACTION] */
extern T0* GE_new856(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
extern T0* GE_new857(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VERSION */
extern T0* GE_new859(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CLUSTER */
extern T0* GE_new860(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAG */
extern T0* GE_new861(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new862(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new863(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAG */
extern T0* GE_new864(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKE */
extern T0* GE_new865(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new866(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCE */
extern T0* GE_new867(TC* ac, T1 initialize);
/* New instance of type ET_ECF_FILE_RULE */
extern T0* GE_new868(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ACTION */
extern T0* GE_new869(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new870(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new871(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_OPTIONS] */
extern T0* GE_new872(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
extern T0* GE_new873(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ROOT_CLASS */
extern T0* GE_new874(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new875(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ORED_CONDITIONS */
extern T0* GE_new876(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ANDED_CONDITIONS */
extern T0* GE_new877(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VISIBLE_CLASS */
extern T0* GE_new878(TC* ac, T1 initialize);
/* New instance of type ET_ECF_BUILD_CONDITION */
extern T0* GE_new880(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new881(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VOID_SAFETY_CONDITION */
extern T0* GE_new882(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new883(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DOTNET_CONDITION */
extern T0* GE_new884(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new885(TC* ac, T1 initialize);
/* New instance of type ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new886(TC* ac, T1 initialize);
/* New instance of type ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new888(TC* ac, T1 initialize);
/* New instance of type ET_ECF_MSIL_CLR_VERSION_CONDITION */
extern T0* GE_new889(TC* ac, T1 initialize);
/* New instance of type UT_COUNTER */
extern T0* GE_new891(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_CLASS] */
extern T0* GE_new892(TC* ac, T1 initialize);
/* New instance of type TUPLE [UT_COUNTER] */
extern T0* GE_new893(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
extern T0* GE_new894(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_UNIVERSE] */
extern T0* GE_new895(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_UNIVERSE]] */
extern T0* GE_new896(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
extern T0* GE_new897(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new898(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new900(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new901(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new902(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new903(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new904(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new905(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new906(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new907(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new908(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new909(TC* ac, T1 initialize);
/* New instance of type ET_LIBRARY */
extern T0* GE_new910(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_LIBRARY] */
extern T0* GE_new911(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_LIBRARY]] */
extern T0* GE_new912(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_UNIVERSE] */
extern T0* GE_new913(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLUSTER] */
extern T0* GE_new915(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_CLUSTER]] */
extern T0* GE_new916(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM] */
extern T0* GE_new917(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new918(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new919(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_MASTER_CLASS] */
extern T0* GE_new920(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new921(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new922(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new923(TC* ac, T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new924(TC* ac, T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new925(TC* ac, T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new926(TC* ac, T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new927(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_CLASS]] */
extern T0* GE_new928(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new930(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new931(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new932(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new933(TC* ac, T1 initialize);
/* New instance of type TUPLE [BOOLEAN] */
extern T0* GE_new934(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
extern T0* GE_new935(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
extern T0* GE_new938(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new942(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
extern T0* GE_new943(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
extern T0* GE_new944(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_EXPRESSION */
extern T0* GE_new945(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new947(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new948(TC* ac, T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_ELEMENT_NODE] */
extern T0* GE_new951(TC* ac, T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new953(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new955(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new956(TC* ac, T1 initialize);
/* New instance of type DS_PAIR [XM_POSITION, XM_NODE] */
extern T0* GE_new957(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new958(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [INTEGER_32] */
extern T0* GE_new959(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_LIBRARY] */
extern T0* GE_new960(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_LIBRARY]] */
extern T0* GE_new961(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
extern T0* GE_new962(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET] */
extern T0* GE_new963(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new964(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
extern T0* GE_new966(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_QUERY] */
extern T0* GE_new967(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_ALIAS_NAME_LIST */
extern T0* GE_new968(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUERY] */
extern T0* GE_new969(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PROCEDURE] */
extern T0* GE_new970(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
extern T0* GE_new971(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new978(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new980(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
extern T0* GE_new981(TC* ac, T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new982(TC* ac, T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new983(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new984(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new985(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new986(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLUSTER] */
extern T0* GE_new987(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_ITEM] */
extern T0* GE_new989(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
extern T0* GE_new990(TC* ac, T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new992(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
extern T0* GE_new993(TC* ac, T1 initialize);
/* New instance of type C_DATE */
extern T0* GE_new994(TC* ac, T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new995(TC* ac, T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new996(TC* ac, T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new997(TC* ac, T1 initialize);
/* New instance of type YY_UNICODE_FILE_BUFFER */
extern T0* GE_new1001(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [INTEGER_32] */
extern T0* GE_new1002(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1003(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1004(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new1005(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new1006(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1007(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
extern T0* GE_new1008(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1009(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1010(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1011(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1012(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
extern T0* GE_new1013(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1014(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_NAMED_CLASS] */
extern T0* GE_new1015(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new1016(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new1017(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new1018(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new1019(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new1020(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new1021(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new1022(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new1023(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new1024(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new1025(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new1026(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSITION] */
extern T0* GE_new1027(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new1028(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new1030(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new1031(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BREAK] */
extern T0* GE_new1033(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new1034(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new1036(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new1037(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new1038(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new1039(TC* ac, T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new1040(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new1041(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
extern T0* GE_new1042(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IDENTIFIER] */
extern T0* GE_new1043(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new1044(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new1046(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new1047(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new1048(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new1049(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new1050(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new1051(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new1052(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new1054(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new1055(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RESULT] */
extern T0* GE_new1056(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new1057(TC* ac, T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new1058(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new1059(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new1060(TC* ac, T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new1061(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new1062(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new1063(TC* ac, T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new1064(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_VOID] */
extern T0* GE_new1065(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new1066(TC* ac, T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new1067(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new1068(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new1069(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new1070(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new1071(TC* ac, T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new1072(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new1073(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new1074(TC* ac, T1 initialize);
/* New instance of type ET_ACROSS_EXPRESSION */
extern T0* GE_new1075(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new1076(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new1077(TC* ac, T1 initialize);
/* New instance of type ET_ACROSS_INSTRUCTION */
extern T0* GE_new1078(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new1079(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1080(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1081(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1082(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1083(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1084(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1085(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new1086(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new1087(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1088(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1090(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new1091(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new1092(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new1093(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new1094(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new1095(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new1096(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new1097(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new1098(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
extern T0* GE_new1099(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME_LIST] */
extern T0* GE_new1100(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new1101(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new1103(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new1104(TC* ac, T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new1105(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new1106(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new1107(TC* ac, T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new1108(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new1109(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1110(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1111(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new1112(TC* ac, T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new1113(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new1114(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new1115(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new1117(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new1118(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new1120(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new1121(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new1123(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new1124(TC* ac, T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new1125(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new1126(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new1127(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLASS] */
extern T0* GE_new1128(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1129(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1130(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new1131(TC* ac, T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new1132(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new1133(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new1134(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new1135(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new1136(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new1138(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
extern T0* GE_new1139(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTANT] */
extern T0* GE_new1140(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1141(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1143(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1144(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new1145(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1146(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1147(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new1148(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1149(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
extern T0* GE_new1150(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_RENAME_LIST */
extern T0* GE_new1151(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
extern T0* GE_new1152(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1153(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1155(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1156(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1158(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1159(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1161(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1162(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new1163(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1164(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1165(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1166(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
extern T0* GE_new1167(TC* ac, T1 initialize);
/* New instance of type ET_CREATION_REGION */
extern T0* GE_new1168(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATION_REGION] */
extern T0* GE_new1169(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new1170(TC* ac, T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new1171(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new1172(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new1173(TC* ac, T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new1174(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new1175(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1176(TC* ac, T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new1177(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1178(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1179(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION */
extern T0* GE_new1180(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1181(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new1182(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION_LIST */
extern T0* GE_new1183(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new1184(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new1185(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new1186(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new1187(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1188(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new1189(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1190(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new1191(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new1193(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new1194(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new1195(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
extern T0* GE_new1196(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPRESSION] */
extern T0* GE_new1197(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new1198(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new1199(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1200(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1201(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1202(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1204(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1205(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new1206(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1207(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1208(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new1209(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1210(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1211(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new1212(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1213(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new1214(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new1215(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1216(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1218(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1219(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1220(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1221(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1223(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1224(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1225(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1226(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1227(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1228(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1230(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1231(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1232(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
extern T0* GE_new1233(TC* ac, T1 initialize);
/* New instance of type ET_IF_EXPRESSION */
extern T0* GE_new1234(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_EXPRESSION] */
extern T0* GE_new1235(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1236(TC* ac, T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new1237(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1238(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
extern T0* GE_new1239(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_AGENT] */
extern T0* GE_new1240(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1241(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1242(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new1243(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new1244(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
extern T0* GE_new1245(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
extern T0* GE_new1246(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
extern T0* GE_new1247(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
extern T0* GE_new1248(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
extern T0* GE_new1249(TC* ac, T1 initialize);
/* New instance of type ET_INSPECT_EXPRESSION */
extern T0* GE_new1250(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_EXPRESSION] */
extern T0* GE_new1251(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1252(TC* ac, T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new1253(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1254(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new1255(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new1256(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new1257(TC* ac, T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new1258(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new1259(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1260(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1261(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new1262(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new1264(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1265(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new1266(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1267(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1268(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1270(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1271(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1272(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1273(TC* ac, T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new1274(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1275(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1276(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new1277(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1278(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1279(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1281(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1282(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new1283(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1284(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1285(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1286(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
extern T0* GE_new1287(TC* ac, T1 initialize);
/* New instance of type ET_NOTE_LIST */
extern T0* GE_new1288(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_LIST] */
extern T0* GE_new1289(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
extern T0* GE_new1290(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_ITEM] */
extern T0* GE_new1292(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
extern T0* GE_new1293(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM] */
extern T0* GE_new1294(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
extern T0* GE_new1295(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM_ITEM] */
extern T0* GE_new1297(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
extern T0* GE_new1298(TC* ac, T1 initialize);
/* New instance of type ET_NOTE_TERM_LIST */
extern T0* GE_new1299(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM_LIST] */
extern T0* GE_new1300(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new1301(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new1303(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1304(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new1305(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1306(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new1307(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT] */
extern T0* GE_new1308(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new1309(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CLAUSE_LIST */
extern T0* GE_new1310(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new1311(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new1312(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new1313(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new1314(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new1315(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1316(TC* ac, T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new1317(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1318(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
extern T0* GE_new1319(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECONDITIONS] */
extern T0* GE_new1320(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
extern T0* GE_new1321(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PROCEDURE] */
extern T0* GE_new1322(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1323(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1325(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
extern T0* GE_new1326(TC* ac, T1 initialize);
/* New instance of type ET_QUANTIFIER_EXPRESSION */
extern T0* GE_new1327(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
extern T0* GE_new1328(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
extern T0* GE_new1329(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUERY] */
extern T0* GE_new1330(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new1331(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new1333(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new1334(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new1335(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
extern T0* GE_new1336(TC* ac, T1 initialize);
/* New instance of type ET_REPEAT_INSTRUCTION */
extern T0* GE_new1337(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
extern T0* GE_new1338(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1339(TC* ac, T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new1340(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1341(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1342(TC* ac, T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new1343(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1344(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
extern T0* GE_new1345(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE] */
extern T0* GE_new1346(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
extern T0* GE_new1347(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT] */
extern T0* GE_new1349(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1350(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1352(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
extern T0* GE_new1353(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_CONSTRAINT_LIST */
extern T0* GE_new1354(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
extern T0* GE_new1355(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new1356(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new1358(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new1359(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new1360(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new1361(TC* ac, T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new1362(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new1363(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
extern T0* GE_new1364(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_EXPRESSION */
extern T0* GE_new1365(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_EXPRESSION] */
extern T0* GE_new1366(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
extern T0* GE_new1367(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_EXPRESSION_LIST */
extern T0* GE_new1368(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
extern T0* GE_new1369(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new1370(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new1371(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new1372(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1373(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new1374(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1375(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new1376(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new1377(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
extern T0* GE_new1378(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1379(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new1380(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1381(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1382(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1383(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1385(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1386(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
extern T0* GE_new1388(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1389(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1390(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1391(TC* ac, T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1392(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1393(TC* ac, T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1394(TC* ac, T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1395(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1396(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1397(TC* ac, T1 initialize);
/* New instance of type ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1398(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1399(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1400(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_CLASS] */
extern T0* GE_new1401(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1402(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1403(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1404(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
extern T0* GE_new1405(TC* ac, T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new1409(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1410(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_PROCEDURE] */
extern T0* GE_new1411(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_QUERY] */
extern T0* GE_new1412(TC* ac, T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new1413(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1416(TC* ac, T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1417(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLASS] */
extern T0* GE_new1418(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS] */
extern T0* GE_new1419(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
extern T0* GE_new1420(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [YY_BUFFER] */
extern T0* GE_new1421(TC* ac, T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1422(TC* ac, T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1423(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1425(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATIVE_STRING] */
extern T0* GE_new1426(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARRAY [detachable STRING_8] */
extern T0* GE_new1427(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1428(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_POSITION] */
extern T0* GE_new1430(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
extern T0* GE_new1431(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [XM_EIFFEL_SCANNER] */
extern T0* GE_new1432(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1433(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1436(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1437(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1440(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1441(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1442(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1443(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1444(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1445(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [STRING_8] */
extern T0* GE_new1446(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1447(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [detachable STRING_8] */
extern T0* GE_new1450(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [STRING_8] */
extern T0* GE_new1451(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [XM_NAMESPACE] */
extern T0* GE_new1452(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
extern T0* GE_new1453(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
extern T0* GE_new1454(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_NAMESPACE] */
extern T0* GE_new1455(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1456(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1457(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1458(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [XM_DOCUMENT_NODE] */
extern T0* GE_new1459(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1461(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1462(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1463(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1464(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
extern T0* GE_new1465(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
extern T0* GE_new1467(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CALL_NAME] */
extern T0* GE_new1469(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
extern T0* GE_new1471(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
extern T0* GE_new1472(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
extern T0* GE_new1473(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
extern T0* GE_new1474(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
extern T0* GE_new1476(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
extern T0* GE_new1477(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1478(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1479(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1480(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1481(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1483(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1484(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1485(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
extern T0* GE_new1486(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_CLASS] */
extern T0* GE_new1488(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
extern T0* GE_new1489(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1490(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
extern T0* GE_new1491(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1492(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
extern T0* GE_new1493(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1494(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_8] */
extern T0* GE_new1497(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1498(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
extern T0* GE_new1499(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
extern T0* GE_new1500(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_64] */
extern T0* GE_new1507(TC* ac, T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new1510(TC* ac, T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new1511(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ANY] */
extern T0* GE_new1512(TC* ac, T1 initialize);
/* New instance of type TUPLE [UT_TRISTATE] */
extern T0* GE_new1513(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
extern T0* GE_new1514(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new1515(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE] */
extern T0* GE_new1516(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1518(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1519(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1520(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1521(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_UNIVERSE]] */
extern T0* GE_new1522(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
extern T0* GE_new1523(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
extern T0* GE_new1524(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new1526(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
extern T0* GE_new1527(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new1528(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new1529(TC* ac, T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new1530(TC* ac, T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1531(TC* ac, T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new1532(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_N */
extern T0* GE_new1535(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1538(TC* ac, T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new1539(TC* ac, T1 initialize);
/* New instance of type KL_UNICODE_CHARACTER_BUFFER */
extern T0* GE_new1541(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT_LIST */
extern T0* GE_new1543(TC* ac, T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new1544(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new1545(TC* ac, T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new1546(TC* ac, T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new1547(TC* ac, T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new1548(TC* ac, T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new1549(TC* ac, T1 initialize);
/* New instance of type ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new1550(TC* ac, T1 initialize);
/* New instance of type ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new1551(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new1552(TC* ac, T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new1553(TC* ac, T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new1555(TC* ac, T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new1556(TC* ac, T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new1557(TC* ac, T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new1558(TC* ac, T1 initialize);
/* New instance of type ET_TAGGED_NOTE */
extern T0* GE_new1560(TC* ac, T1 initialize);
/* New instance of type ET_NOTE */
extern T0* GE_new1561(TC* ac, T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new1562(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new1563(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_RENAME_CONSTRAINT */
extern T0* GE_new1564(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new1565(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1566(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1567(TC* ac, T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new1568(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new1570(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new1571(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new1573(TC* ac, T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new1574(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new1576(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new1577(TC* ac, T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new1578(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new1579(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_ASSERTION */
extern T0* GE_new1582(TC* ac, T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1583(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new1585(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new1586(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new1587(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new1588(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new1589(TC* ac, T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new1590(TC* ac, T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new1592(TC* ac, T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new1593(TC* ac, T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new1594(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new1595(TC* ac, T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new1597(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new1598(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new1599(TC* ac, T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new1600(TC* ac, T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new1601(TC* ac, T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new1602(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new1603(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new1604(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new1605(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new1606(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new1607(TC* ac, T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new1608(TC* ac, T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new1609(TC* ac, T1 initialize);
/* New instance of type ET_OLD_OBJECT_TEST */
extern T0* GE_new1610(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new1611(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_CURSOR */
extern T0* GE_new1612(TC* ac, T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new1613(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new1614(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new1615(TC* ac, T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1616(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1617(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1618(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new1619(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new1620(TC* ac, T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new1623(TC* ac, T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new1625(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_QUERY] */
extern T0* GE_new1627(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_PROCEDURE] */
extern T0* GE_new1628(TC* ac, T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1630(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATURAL_16] */
extern T0* GE_new1636(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARRAY [NATURAL_16] */
extern T0* GE_new1637(TC* ac, T1 initialize);
/* New instance of type ARRAY [NATURAL_32] */
extern T0* GE_new1638(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
extern T0* GE_new1639(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1640(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1641(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
extern T0* GE_new1642(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1643(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1644(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1645(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1646(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1647(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1648(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1649(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
extern T0* GE_new1650(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ACTION] */
extern T0* GE_new1651(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
extern T0* GE_new1652(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1653(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_OPTIONS] */
extern T0* GE_new1654(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
extern T0* GE_new1657(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new1658(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1659(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1660(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1661(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1662(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1663(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1664(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1665(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1666(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
extern T0* GE_new1668(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_UNIVERSE] */
extern T0* GE_new1669(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1671(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1672(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1674(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1675(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1676(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1677(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1678(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1679(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
extern T0* GE_new1680(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1681(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1682(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1683(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [CHARACTER_8] */
extern T0* GE_new1685(TC* ac, T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new1686(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_LIBRARY] */
extern T0* GE_new1687(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
extern T0* GE_new1688(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LIBRARY] */
extern T0* GE_new1689(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
extern T0* GE_new1690(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1691(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1692(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1693(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1694(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1695(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1696(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLUSTER] */
extern T0* GE_new1697(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
extern T0* GE_new1698(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
extern T0* GE_new1699(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_ITEM] */
extern T0* GE_new1700(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
extern T0* GE_new1701(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
extern T0* GE_new1702(TC* ac, T1 initialize);
/* New instance of type YY_UNICODE_BUFFER */
extern T0* GE_new1703(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1704(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1705(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
extern T0* GE_new1706(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST_LIST] */
extern T0* GE_new1707(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1708(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1709(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1710(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1711(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1712(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1713(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1714(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1715(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new1716(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
extern T0* GE_new1717(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
extern T0* GE_new1718(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1719(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_CLASS] */
extern T0* GE_new1720(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
extern T0* GE_new1722(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
extern T0* GE_new1724(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1725(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1727(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [NATURAL_32] */
extern T0* GE_new1728(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_CONSTRAINT_LIST */
extern T0* GE_new1729(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1730(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new1731(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME] */
extern T0* GE_new1734(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
extern T0* GE_new1735(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
extern T0* GE_new1736(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ALIAS_NAME] */
extern T0* GE_new1737(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
extern T0* GE_new1739(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1740(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
extern T0* GE_new1741(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new1742(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
extern T0* GE_new1743(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1745(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT] */
extern T0* GE_new1746(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT] */
extern T0* GE_new1747(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE_NAME] */
extern T0* GE_new1748(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1749(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1750(TC* ac, T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1752(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
extern T0* GE_new1753(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1754(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1755(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_FEATURE] */
extern T0* GE_new1756(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1758(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
extern T0* GE_new1760(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
extern T0* GE_new1761(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
extern T0* GE_new1762(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1763(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1764(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new1765(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1766(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CLASS] */
extern T0* GE_new1769(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1771(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RENAME] */
extern T0* GE_new1772(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME] */
extern T0* GE_new1775(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
extern T0* GE_new1779(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1780(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_QUERY] */
extern T0* GE_new1781(TC* ac, T1 initialize);
/* New instance of type SPECIAL [YY_BUFFER] */
extern T0* GE_new1782(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [YY_BUFFER] */
extern T0* GE_new1783(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TARGET] */
extern T0* GE_new1784(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
extern T0* GE_new1785(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1787(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1788(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1790(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1791(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [detachable STRING_8] */
extern T0* GE_new1792(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1793(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_CLUSTER] */
extern T0* GE_new1794(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
extern T0* GE_new1795(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new1796(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1798(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
extern T0* GE_new1799(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1800(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new1801(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [STRING_8]] */
extern T0* GE_new1804(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new1805(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, STRING_8] */
extern T0* GE_new1806(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
extern T0* GE_new1807(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [XM_ELEMENT_NODE] */
extern T0* GE_new1814(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1818(TC* ac, T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new1819(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new1821(TC* ac, T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1822(TC* ac, T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1825(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLIENT_LIST] */
extern T0* GE_new1829(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1830(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1831(TC* ac, T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1832(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1834(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1838(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1840(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1841(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1842(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1845(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
extern T0* GE_new1846(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
extern T0* GE_new1847(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1848(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new1849(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1850(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new1851(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1852(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
extern T0* GE_new1853(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1854(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
extern T0* GE_new1855(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1856(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new1857(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1858(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
extern T0* GE_new1859(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1863(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1866(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1867(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1868(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE_ITEM] */
extern T0* GE_new1870(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
extern T0* GE_new1871(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1872(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1874(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1876(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1877(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RENAME_ITEM] */
extern T0* GE_new1879(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
extern T0* GE_new1880(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1882(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1883(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CREATOR] */
extern T0* GE_new1884(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CREATOR] */
extern T0* GE_new1885(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1886(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1887(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_PART] */
extern T0* GE_new1888(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
extern T0* GE_new1889(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_CLAUSE] */
extern T0* GE_new1890(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
extern T0* GE_new1891(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1893(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1894(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_ITEM] */
extern T0* GE_new1896(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
extern T0* GE_new1897(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_TERM_ITEM] */
extern T0* GE_new1898(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
extern T0* GE_new1899(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_LIST] */
extern T0* GE_new1900(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
extern T0* GE_new1901(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1903(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1904(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_EXPRESSION] */
extern T0* GE_new1905(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
extern T0* GE_new1906(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_PART] */
extern T0* GE_new1907(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
extern T0* GE_new1908(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_RENAME_CONSTRAINT */
extern T0* GE_new1910(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1913(TC* ac, T1 initialize);
/* New instance of type ET_STANDARD_ONCE_KEYS */
extern T0* GE_new1917(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CLUSTER] */
extern T0* GE_new1919(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
extern T0* GE_new1920(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
extern T0* GE_new1921(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1922(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1923(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1924(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1925(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1926(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1927(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
extern T0* GE_new1928(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_FILE_RULE] */
extern T0* GE_new1929(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
extern T0* GE_new1930(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1931(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1932(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1933(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1934(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1935(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1936(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1937(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1938(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1939(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1940(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1941(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1942(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1943(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1944(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1945(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1946(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1947(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1948(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1949(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1950(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1951(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1952(TC* ac, T1 initialize);
/* New instance of type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1953(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1954(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1955(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1956(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1957(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1958(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1959(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1960(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [CHARACTER_8] */
extern T0* GE_new1962(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1963(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1964(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1965(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1966(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
extern T0* GE_new1967(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
extern T0* GE_new1968(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1969(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1971(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1972(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1974(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
extern T0* GE_new1975(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_ADAPTED_FEATURE] */
extern T0* GE_new1976(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
extern T0* GE_new1977(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_FEATURE] */
extern T0* GE_new1978(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1979(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new1980(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1981(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
extern T0* GE_new1982(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1983(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1986(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1987(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1988(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_DOTNET_FEATURE] */
extern T0* GE_new1989(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1990(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_FEATURE] */
extern T0* GE_new1991(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
extern T0* GE_new1992(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
extern T0* GE_new1993(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new1995(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new1996(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new1997(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new1998(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1999(TC* ac, T1 initialize);
/* New instance of type ET_UNIVERSE_ERROR */
extern T0* GE_new2000(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new2001(TC* ac, T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new2002(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new2003(TC* ac, T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new2004(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [AP_OPTION] */
extern T0* GE_new2005(TC* ac, T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new2011(TC* ac, T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new2012(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new2013(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new2014(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new2015(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new2016(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new2018(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_INSTRUCTION */
extern T0* GE_new2020(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new2021(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new2024(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new2025(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_SYMBOL */
extern T0* GE_new2031(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new2045(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new2046(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new2048(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPORT] */
extern T0* GE_new2055(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPORT] */
extern T0* GE_new2057(TC* ac, T1 initialize);
/* New instance of type TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
extern T0* GE_new2064(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new2070(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
extern T0* GE_new2071(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
extern T0* GE_new2074(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
extern T0* GE_new2075(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new2076(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new2079(TC* ac, T1 initialize);
/* New instance of type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new2080(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new2083(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new2084(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new2090(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new2091(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new2093(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new2094(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new2100(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new2101(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new2102(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new2108(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
extern T0* GE_new2109(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
extern T0* GE_new2115(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
extern T0* GE_new2116(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [NATURAL_32] */
extern T0* GE_new2117(TC* ac, T1 initialize);
/* New instance of type ET_AST_NULL_LEAF */
extern T0* GE_new2118(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2119(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2120(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2121(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2122(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_LIBRARY] */
extern T0* GE_new2123(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2125(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_CLASS] */
extern T0* GE_new2126(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new2127(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new2129(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2130(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_FILE_RULE] */
extern T0* GE_new2131(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new2132(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_FILE_RULES] */
extern T0* GE_new2133(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new2134(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_STATE] */
extern T0* GE_new2135(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [STRING_8]] */
extern T0* GE_new2137(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_STRING_ROUTINES, STRING_8] */
extern T0* GE_new2138(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [STRING_8]] */
extern T0* GE_new2140(TC* ac, T1 initialize);
/* New instance of type LX_DFA_WILDCARD */
extern T0* GE_new2142(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2143(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_PARENT_FEATURE] */
extern T0* GE_new2146(TC* ac, T1 initialize);
/* New instance of type TUPLE [LX_WILDCARD] */
extern T0* GE_new2148(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [LX_WILDCARD]] */
extern T0* GE_new2149(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
extern T0* GE_new2150(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_WILDCARD] */
extern T0* GE_new2152(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
extern T0* GE_new2155(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [NATURAL_32] */
extern T0* GE_new2156(TC* ac, T1 initialize);
/* New instance of type LX_WILDCARD_PARSER */
extern T0* GE_new2157(TC* ac, T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new2158(TC* ac, T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new2159(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_GROUP] */
extern T0* GE_new2161(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
extern T0* GE_new2162(TC* ac, T1 initialize);
/* New instance of type TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2163(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new2164(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_RULE] */
extern T0* GE_new2166(TC* ac, T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new2167(TC* ac, T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new2168(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
extern T0* GE_new2169(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new2170(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_32, STRING_8] */
extern T0* GE_new2171(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [LX_SYMBOL_CLASS] */
extern T0* GE_new2172(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
extern T0* GE_new2173(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [STRING_32] */
extern T0* GE_new2174(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [BOOLEAN] */
extern T0* GE_new2175(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_32] */
extern T0* GE_new2176(TC* ac, T1 initialize);
/* New instance of type SPECIAL [STRING_32] */
extern T0* GE_new2177(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
extern T0* GE_new2178(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_SYMBOL_CLASS] */
extern T0* GE_new2179(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA] */
extern T0* GE_new2180(TC* ac, T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new2181(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_NFA] */
extern T0* GE_new2182(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new2183(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
extern T0* GE_new2184(TC* ac, T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new2185(TC* ac, T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new2186(TC* ac, T1 initialize);
/* New instance of type LX_INVALID_UNICODE_CHARACTER_ERROR */
extern T0* GE_new2187(TC* ac, T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new2188(TC* ac, T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new2189(TC* ac, T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new2190(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new2191(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new2192(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new2193(TC* ac, T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new2194(TC* ac, T1 initialize);
/* New instance of type ARRAY [LX_RULE] */
extern T0* GE_new2195(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_RULE] */
extern T0* GE_new2196(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new2197(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA_STATE] */
extern T0* GE_new2198(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_DFA_STATE] */
extern T0* GE_new2199(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new2200(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [LX_RULE] */
extern T0* GE_new2201(TC* ac, T1 initialize);
/* New instance of type ARRAY [detachable LX_RULE] */
extern T0* GE_new2202(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable LX_RULE] */
extern T0* GE_new2203(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new2204(TC* ac, T1 initialize);
/* New instance of type LX_TRANSITION_TABLE [LX_DFA_STATE] */
extern T0* GE_new2205(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA] */
extern T0* GE_new2206(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
extern T0* GE_new2207(TC* ac, T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new2208(TC* ac, T1 initialize);
/* New instance of type ARRAY [detachable LX_SYMBOL_CLASS] */
extern T0* GE_new2209(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable LX_SYMBOL_CLASS] */
extern T0* GE_new2210(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
extern T0* GE_new2211(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
extern T0* GE_new2212(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2213(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
extern T0* GE_new2214(TC* ac, T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new2215(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_RULE] */
extern T0* GE_new2216(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
extern T0* GE_new2217(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [STRING_8] */
extern T0* GE_new2218(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_START_CONDITION] */
extern T0* GE_new2219(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
extern T0* GE_new2220(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
extern T0* GE_new2221(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
extern T0* GE_new2222(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
extern T0* GE_new2223(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
extern T0* GE_new2225(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
extern T0* GE_new2226(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable SPECIAL [NATURAL_64]] */
extern T0* GE_new2227(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
extern T0* GE_new2229(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
extern T0* GE_new2231(TC* ac, T1 initialize);
/* New instance of type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2232(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2235(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2236(TC* ac, T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new2238(TC* ac, T1 initialize);
/* New instance of type ARRAY [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new2239(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [INTEGER_32] */
extern T0* GE_new2240(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new2241(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_NFA_STATE] */
extern T0* GE_new2242(TC* ac, T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_RULE] */
extern T0* GE_new2244(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_NFA_STATE] */
extern T0* GE_new2246(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
extern T0* GE_new2248(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
extern T0* GE_new2249(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_DFA_STATE] */
extern T0* GE_new2251(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
extern T0* GE_new2252(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
extern T0* GE_new2253(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY [LX_RULE] */
extern T0* GE_new2254(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
extern T0* GE_new2255(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
extern T0* GE_new2256(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
extern T0* GE_new2258(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_RULE] */
extern T0* GE_new2262(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
extern T0* GE_new2265(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2268(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2269(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2270(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
extern T0* GE_new2271(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY [STRING_8] */
extern T0* GE_new2272(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
extern T0* GE_new2274(TC* ac, T1 initialize);
/* GEC.execute */
extern T0* T25c62(TC* ac);
/* GEC.execute_with_arguments */
extern void T25f63(TC* ac, T0* C, T0* a1);
/* GEC.execute_with_arguments_and_error_handler */
extern void T25f64(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.report_cannot_read_error */
extern void T25f68(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T58f192(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T58f194(TC* ac, T0* C, T0* a1);
/* MUTEX.unlock */
extern void T137f12(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_unlock */
extern void T137f15(TC* ac, T0* C, T14 a1);
/* MUTEX.default_pointer */
extern T14 T137f3(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_has_error */
extern void T58f196(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T58f194p1(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T165f4(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T165f7(TC* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T165f5(TC* ac, T0* C, T0* a1);
/* MUTEX.lock */
extern void T137f11(TC* ac, T0* C);
/* MUTEX.current_thread_id */
extern T14 T137f4(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_lock */
extern void T137f14(TC* ac, T0* C, T14 a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T58f11(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T2003f12(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T2003f7(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T2003f6(TC* ac, T0* C);
/* KL_ARGUMENTS.make */
extern T0* T32c6(TC* ac);
/* KL_ARGUMENTS.argument */
extern T0* T32f3(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.as_string_8 */
extern T0* T20f10(TC* ac, T0* C);
/* STRING_8.put_code */
extern void T17f67(TC* ac, T0* C, T10 a1, T6 a2);
/* STRING_8.reset_hash_codes */
extern void T17f54(TC* ac, T0* C);
/* STRING_8.valid_code */
extern T1 T17f38(TC* ac, T0* C, T10 a1);
/* NATURAL_32.is_less_equal */
extern T1 T10f5(TC* ac, volatile T10* C, T10 a1);
/* INTEGER_32.to_natural_32 */
extern T10 T6f21(TC* ac, volatile T6* C);
/* IMMUTABLE_STRING_32.code */
extern T10 T20f6(TC* ac, T0* C, T6 a1);
/* STRING_8.set_count */
extern void T17f62(TC* ac, T0* C, T6 a1);
/* STRING_8.make */
extern void T17f48(TC* ac, T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c48(TC* ac, T6 a1);
/* SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c11(TC* ac, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f14(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].extend */
extern void T15f18(TC* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f17(TC* ac, volatile T6* C, T6 a1);
/* INTEGER_32.is_less_equal */
extern T1 T6f15(TC* ac, volatile T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern void T15f15(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c15(TC* ac, T6 a1);
/* ARGUMENTS_32.argument */
extern T0* T134f2(TC* ac, T0* C, T6 a1);
/* ARRAY [IMMUTABLE_STRING_32].item */
extern T0* T531f5(TC* ac, T0* C, T6 a1);
/* ARGUMENTS_32.internal_argument_array */
extern T0* T134f3(TC* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].put */
extern void T531f8(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [IMMUTABLE_STRING_32].compare_objects */
extern void T531f7(TC* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].make_filled */
extern T0* T531c6(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [IMMUTABLE_STRING_32].make_filled_area */
extern void T531f9(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].make_filled */
extern T0* T532c6(TC* ac, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].fill_with */
extern void T532f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [IMMUTABLE_STRING_32].extend */
extern void T532f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern void T532f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern T0* T532c4(TC* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_empty */
extern T0* T20c14(TC* ac);
/* IMMUTABLE_STRING_32.make */
extern void T20f17(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make */
extern T0* T20c17(TC* ac, T6 a1);
/* SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c8(TC* ac, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].fill_with */
extern void T16f11(TC* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].extend */
extern void T16f15(TC* ac, T0* C, T3 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern void T16f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c12(TC* ac, T6 a1);
/* KL_ARGUMENTS.internal_arguments */
extern T0* T32f4(TC* ac, T0* C);
/* ARGUMENTS_32.default_create */
extern T0* T134c5(TC* ac);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T88f11(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.to_string_32 */
extern T0* T834f19(TC* ac, T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T834f16(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T459f3(TC* ac, T0* C, T2 a1);
/* CHARACTER_8.is_less_equal */
extern T1 T2f9(TC* ac, volatile T2* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f14(TC* ac, volatile T2* C, T2 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f10(TC* ac, volatile T2* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T834f14(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T834f48(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T834f72(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T834f93(TC* ac, T0* C);
/* UC_UTF8_STRING.utf8 */
extern T0* T834f42(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T459c55(TC* ac);
/* STRING_32.append_code */
extern void T18f25(TC* ac, T0* C, T10 a1);
/* STRING_32.put_code */
extern void T18f31(TC* ac, T0* C, T10 a1, T6 a2);
/* STRING_32.reset_hash_codes */
extern void T18f30(TC* ac, T0* C);
/* STRING_32.set_count */
extern void T18f29(TC* ac, T0* C, T6 a1);
/* STRING_32.resize */
extern void T18f28(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f4(TC* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f5(TC* ac, T0* C, T6 a1);
/* STRING_32.capacity */
extern T6 T18f5(TC* ac, T0* C);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T834f15(TC* ac, T0* C, T6 a1);
/* NATURAL_32.to_integer_32 */
extern T6 T10f13(TC* ac, volatile T10* C);
/* UC_UTF8_STRING.code_at_byte_index */
extern T10 T834f41(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.natural_32_encoded_next_value */
extern T10 T459f5(TC* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.natural_32_encoded_first_value */
extern T10 T459f4(TC* ac, T0* C, T2 a1);
/* STRING_32.make */
extern void T18f23(TC* ac, T0* C, T6 a1);
/* STRING_32.make */
extern T0* T18c23(TC* ac, T6 a1);
/* UC_STRING.to_string_32 */
extern T0* T454f55(TC* ac, T0* C);
/* UC_STRING.next_byte_index */
extern T6 T454f33(TC* ac, T0* C, T6 a1);
/* UC_STRING.byte_item */
extern T2 T454f36(TC* ac, T0* C, T6 a1);
/* UC_STRING.old_item */
extern T2 T454f53(TC* ac, T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T454f86(TC* ac, T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T454f99(TC* ac, T0* C);
/* UC_STRING.utf8 */
extern T0* T454f40(TC* ac, T0* C);
/* UC_STRING.item_code_at_byte_index */
extern T6 T454f32(TC* ac, T0* C, T6 a1);
/* UC_STRING.code_at_byte_index */
extern T10 T454f38(TC* ac, T0* C, T6 a1);
/* STRING_8.to_string_32 */
extern T0* T17f30(TC* ac, T0* C);
/* STRING_8.code */
extern T10 T17f10(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append_string_general */
extern void T834f73(TC* ac, T0* C, T0* a1);
extern T1 T834f73ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_string_general */
extern void T834f73p1(TC* ac, T0* C, T0* a1);
extern T1 T834f73p1ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.append */
extern void T834f73p0(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.reset_hash_codes */
extern void T834f96(TC* ac, T0* C);
/* UC_UTF8_STRING.old_set_count */
extern void T834f89(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append_code */
extern void T834f78(TC* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.append_item_code */
extern void T834f102(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T834f109(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T834f110(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T834f98(TC* ac, T0* C, T2 a1, T6 a2);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T831f2(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern T0* T834f56(TC* ac, T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T831c5(TC* ac);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T834f97(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T459f9(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.natural_32_code_byte_count */
extern T6 T459f20(TC* ac, T0* C, T10 a1);
/* STRING_32.code */
extern T10 T18f7(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.code */
extern T10 T834f46(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.byte_index */
extern T6 T834f11(TC* ac, T0* C, T6 a1);
/* UC_STRING.code */
extern T10 T454f8(TC* ac, T0* C, T6 a1);
/* UC_STRING.byte_index */
extern T6 T454f37(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T834f95(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(TC* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T834f59(TC* ac, T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T834f59p1(TC* ac, T0* C);
/* STRING_32.count */
extern T6 T18f2(TC* ac, T0* C);
/* UC_UTF8_STRING.count */
extern T6 T834f1(TC* ac, T0* C);
/* UC_STRING.count */
extern T6 T454f1(TC* ac, T0* C);
/* STRING_8.count */
extern T6 T17f2(TC* ac, T0* C);
/* UC_UTF8_STRING.append */
extern void T834f94(TC* ac, T0* C, T0* a1);
extern T1 T834f94ot1(TC* ac, T0* a1);
extern T1 T834f94ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern T0* T834f63(TC* ac, T0* C);
/* UC_STRING.make_empty */
extern T0* T454c106(TC* ac);
/* UC_STRING.make */
extern void T454f80(TC* ac, T0* C, T6 a1);
/* UC_STRING.make */
extern T0* T454c80(TC* ac, T6 a1);
/* UC_STRING.old_set_count */
extern void T454f83(TC* ac, T0* C, T6 a1);
/* UC_STRING.reset_hash_codes */
extern void T454f90(TC* ac, T0* C);
/* UC_STRING.byte_capacity */
extern T6 T454f57(TC* ac, T0* C);
/* UC_STRING.capacity */
extern T6 T454f57p1(TC* ac, T0* C);
/* UC_STRING.make */
extern void T454f80p1(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.gobo_append_substring */
extern void T834f75(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T834f100(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T834f100ot1(TC* ac, T0* a1);
extern T1 T834f100ot2(TC* ac, T0* a1);
extern T1 T834f100ot3(TC* ac, T0* a1);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T834f99(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T459f8(TC* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.character_8_byte_count */
extern T6 T459f13(TC* ac, T0* C, T2 a1);
/* UC_STRING.item */
extern T2 T454f21(TC* ac, T0* C, T6 a1);
/* UC_STRING.character_item_at_byte_index */
extern T2 T454f47(TC* ac, T0* C, T6 a1);
/* UC_STRING.integer_ */
extern T0* T454f56(TC* ac, T0* C);
/* KL_PLATFORM.maximum_character_code */
extern T6 T525f2(TC* ac, T0* C);
/* UC_STRING.platform */
extern T0* T454f43(TC* ac, T0* C);
/* KL_PLATFORM.default_create */
extern T0* T525c3(TC* ac);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T459f7(TC* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T459f6(TC* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T834f9(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T834f43(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.platform */
extern T0* T834f45(TC* ac, T0* C);
/* UC_UTF8_STRING.cloned_string */
extern T0* T834f31(TC* ac, T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T834f24(TC* ac, T0* C);
/* UC_UTF8_STRING.copy */
extern void T834f88(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T834f88p1(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].force */
extern void T15f17(TC* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* INTEGER_32.is_greater_equal */
extern T1 T6f14(TC* ac, volatile T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append */
extern void T834f94p1(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.area_lower */
extern T6 T834f47(TC* ac, T0* C);
/* UC_STRING.area_lower */
extern T6 T454f17(TC* ac, T0* C);
/* STRING_8.area_lower */
extern T6 T17f9(TC* ac, T0* C);
/* UC_UTF8_STRING.area */
extern T0* T834f2(TC* ac, T0* C);
/* UC_STRING.area */
extern T0* T454f2(TC* ac, T0* C);
/* STRING_8.area */
extern T0* T17f1(TC* ac, T0* C);
/* UC_UTF8_STRING.additional_space */
extern T6 T834f60(TC* ac, T0* C);
/* INTEGER_32.max */
extern T6 T6f16(TC* ac, volatile T6* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T459f2(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T459f2ot1(TC* ac, T0* a1);
extern T1 T459f2ot2(TC* ac, T0* a1);
extern T1 T459f2ot3(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.character_32_byte_count */
extern T6 T459f15(TC* ac, T0* C, T3 a1);
/* UC_UTF8_STRING.character_32_item */
extern T3 T834f13(TC* ac, T0* C, T6 a1);
/* STRING_32.item */
extern T3 T18f12(TC* ac, T0* C, T6 a1);
/* UC_STRING.character_32_item */
extern T3 T454f27(TC* ac, T0* C, T6 a1);
/* STRING_8.character_32_item */
extern T3 T17f11(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T834f12(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.shifted_byte_index */
extern T6 T454f62(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern T0* T459f14(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T459f11(TC* ac, T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T528c2(TC* ac);
/* KL_ANY_ROUTINES.same_types */
extern T1 T528f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].same_type */
extern T1 T2198f18(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.same_type */
extern T1 T2197f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].same_type */
extern T1 T290f42(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.same_type */
extern T1 T834f22(TC* ac, T0* C, T0* a1);
/* STRING_32.same_type */
extern T1 T18f18(TC* ac, T0* C, T0* a1);
/* STRING_8.same_type */
extern T1 T17f19(TC* ac, T0* C, T0* a1);
/* UC_STRING.same_type */
extern T1 T454f31(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.same_type */
extern T1 T130f26(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.same_type */
extern T1 T129f29(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.any_ */
extern T0* T834f40(TC* ac, T0* C);
/* UC_STRING.append_string_general */
extern void T454f74(TC* ac, T0* C, T0* a1);
extern T1 T454f74ot1(TC* ac, T0* a1);
/* UC_STRING.append_string_general */
extern void T454f74p1(TC* ac, T0* C, T0* a1);
extern T1 T454f74p1ot1(TC* ac, T0* a1);
/* UC_STRING.append */
extern void T454f74p0(TC* ac, T0* C, T0* a1);
/* UC_STRING.append_code */
extern void T454f79(TC* ac, T0* C, T10 a1);
/* UC_STRING.append_item_code */
extern void T454f98(TC* ac, T0* C, T6 a1);
/* UC_STRING.put_code_at_byte_index */
extern void T454f104(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_STRING.put_byte */
extern void T454f105(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.old_put */
extern void T454f92(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.resize_byte_storage */
extern void T454f91(TC* ac, T0* C, T6 a1);
/* UC_STRING.resize */
extern void T454f89(TC* ac, T0* C, T6 a1);
/* UC_STRING.append */
extern void T454f94(TC* ac, T0* C, T0* a1);
extern T1 T454f94ot1(TC* ac, T0* a1);
extern T1 T454f94ot2(TC* ac, T0* a1);
/* UC_STRING.dummy_uc_string */
extern T0* T454f61(TC* ac, T0* C);
/* UC_STRING.gobo_append_substring */
extern void T454f75(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.put_substring_at_byte_index */
extern void T454f95(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T454f95ot1(TC* ac, T0* a1);
extern T1 T454f95ot2(TC* ac, T0* a1);
extern T1 T454f95ot3(TC* ac, T0* a1);
/* UC_STRING.put_character_at_byte_index */
extern void T454f93(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_STRING.cloned_string */
extern T0* T454f46(TC* ac, T0* C);
/* UC_STRING.twin */
extern T0* T454f54(TC* ac, T0* C);
/* UC_STRING.copy */
extern void T454f82(TC* ac, T0* C, T0* a1);
/* UC_STRING.copy */
extern void T454f82p1(TC* ac, T0* C, T0* a1);
/* UC_STRING.append */
extern void T454f94p1(TC* ac, T0* C, T0* a1);
/* UC_STRING.additional_space */
extern T6 T454f58(TC* ac, T0* C);
/* UC_STRING.any_ */
extern T0* T454f48(TC* ac, T0* C);
/* STRING_8.append_string_general */
extern void T17f72(TC* ac, T0* C, T0* a1);
extern T1 T17f72ot1(TC* ac, T0* a1);
/* STRING_8.append */
extern void T17f72p1(TC* ac, T0* C, T0* a1);
/* STRING_8.append_code */
extern void T17f60(TC* ac, T0* C, T10 a1);
/* STRING_8.resize */
extern void T17f53(TC* ac, T0* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f7(TC* ac, T0* C);
/* STRING_8.append */
extern void T17f52(TC* ac, T0* C, T0* a1);
/* STRING_8.additional_space */
extern T6 T17f8(TC* ac, T0* C);
/* KL_STRING_ROUTINES.as_readable_string_general_no_uc_string */
extern T0* T88f16(TC* ac, T0* C, T0* a1);
extern T1 T88f16ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.as_string */
extern T0* T834f18(TC* ac, T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T834f49(TC* ac, T0* C);
/* UC_STRING.as_string */
extern T0* T454f9(TC* ac, T0* C);
/* UC_STRING.to_utf8 */
extern T0* T454f39(TC* ac, T0* C);
/* KL_STRING_ROUTINES.appended_string_8 */
extern T0* T88f17(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T88f17ot1(TC* ac, T0* a1);
extern T1 T88f17ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_string */
extern void T834f77(TC* ac, T0* C, T0* a1);
/* UC_STRING.append_string */
extern void T454f77(TC* ac, T0* C, T0* a1);
/* STRING_8.append_string */
extern void T17f49(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat_string_8 */
extern T0* T88f18(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T88f18ot1(TC* ac, T0* a1);
extern T1 T88f18ot2(TC* ac, T0* a1);
/* UC_STRING.make_from_string_general */
extern T0* T454c71(TC* ac, T0* a1);
extern T1 T454f71ot1(TC* ac, T0* a1);
/* UC_STRING.make_from_substring_general */
extern void T454f88(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T454f88ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.plus */
extern T0* T834f8(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T834f82(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T834c82(TC* ac, T6 a1);
/* UC_UTF8_STRING.make */
extern void T834f82p1(TC* ac, T0* C, T6 a1);
/* STRING_8.plus */
extern T0* T17f5(TC* ac, T0* C, T0* a1);
/* STRING_8.new_string */
extern T0* T17f6(TC* ac, T0* C, T6 a1);
/* UC_STRING.plus */
extern T0* T454f18(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_string_8 */
extern T0* T834f30(TC* ac, T0* C);
/* UC_UTF8_STRING.put_code */
extern void T834f90(TC* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_item_code */
extern void T834f108(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_right */
extern void T834f106(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_left */
extern void T834f105(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.to_string_8 */
extern T0* T454f11(TC* ac, T0* C);
/* UC_STRING.put_code */
extern void T454f84(TC* ac, T0* C, T10 a1, T6 a2);
/* UC_STRING.put_item_code */
extern void T454f101(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.move_bytes_right */
extern void T454f103(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.move_bytes_left */
extern void T454f102(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.to_string_8 */
extern T0* T17f32(TC* ac, T0* C);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T834f17(TC* ac, T0* C, T0* a1);
/* UC_STRING.prefixed_string */
extern T0* T454f22(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.gobo_plus_general */
extern T0* T834f29(TC* ac, T0* C, T0* a1);
/* UC_STRING.gobo_plus_general */
extern T0* T454f10(TC* ac, T0* C, T0* a1);
/* ARRAY [STRING_8].item */
extern T0* T33f4(TC* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].valid_index */
extern T1 T33f5(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T834f39(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T461f13(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T461f17(TC* ac, T0* C, T0* a1, T6 a2);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f27(TC* ac, volatile T10* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f10(TC* ac, volatile T3* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T461f23(TC* ac, T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T461f15(TC* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T982f7(TC* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f15(TC* ac, volatile T11* C, T11 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern T0* T461f14(TC* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T982c13(TC* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f18(TC* ac, volatile T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f32(TC* ac, volatile T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f19(TC* ac, volatile T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f15(TC* ac, volatile T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f18(TC* ac, volatile T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f6(TC* ac, volatile T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f9(TC* ac, volatile T4* C);
/* SPECIAL [NATURAL_64].extend */
extern void T826f13(TC* ac, T0* C, T11 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern void T826f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern T0* T826c11(TC* ac, T6 a1);
/* STRING_8.has */
extern T1 T17f43(TC* ac, T0* C, T2 a1);
/* INTEGER_32.to_natural_64 */
extern T11 T6f30(TC* ac, volatile T6* C);
/* CHARACTER_8.is_digit */
extern T1 T2f26(TC* ac, volatile T2* C);
/* NATURAL_8.is_greater */
extern T1 T8f5(TC* ac, volatile T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f12(TC* ac, volatile T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern T0* T2f15(TC* ac, volatile T2* C);
/* SPECIAL [NATURAL_8].extend */
extern void T533f7(TC* ac, T0* C, T8 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern void T533f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern T0* T533c6(TC* ac, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T461f22(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T834f58(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T461f21(TC* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T461f20(TC* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T461f19(TC* ac, T0* C, T0* a1);
/* STRING_8.make_from_string */
extern T0* T17c82(TC* ac, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T461f18(TC* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T461c16(TC* ac);
/* UC_STRING.to_integer */
extern T6 T454f30(TC* ac, T0* C);
/* UC_STRING.ctoi_convertor */
extern T0* T454f52(TC* ac, T0* C);
/* STRING_8.to_integer */
extern T6 T17f22(TC* ac, T0* C);
/* STRING_8.ctoi_convertor */
extern T0* T17f26(TC* ac, T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T834f38(TC* ac, T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T834f57(TC* ac, T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T461f12(TC* ac, T0* C);
/* UC_STRING.is_integer */
extern T1 T454f29(TC* ac, T0* C);
/* UC_STRING.is_valid_integer_or_natural */
extern T1 T454f51(TC* ac, T0* C, T6 a1);
/* STRING_8.is_integer */
extern T1 T17f29(TC* ac, T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f39(TC* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T88f23(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T88f23ot1(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T88f10(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.append_substring_general */
extern void T834f80(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.append_substring_general */
extern void T454f72(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.append_substring_general */
extern void T17f71(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_ROUTINES.appended_substring_8 */
extern T0* T88f15(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T88f15ot1(TC* ac, T0* a1);
extern T1 T88f15ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_substring */
extern void T834f79(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.append_substring */
extern void T454f76(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.append_substring */
extern void T17f73(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T834f23(TC* ac, T0* C, T6 a1);
/* UC_STRING.new_empty_string */
extern T0* T454f42(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append_character */
extern void T834f74(TC* ac, T0* C, T2 a1);
/* UC_STRING.append_character */
extern void T454f73(TC* ac, T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f51(TC* ac, T0* C, T2 a1);
/* STRING_8.item */
extern T2 T17f17(TC* ac, T0* C, T6 a1);
/* INTEGER_32.is_greater */
extern T1 T6f4(TC* ac, volatile T6* C, T6 a1);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T88f2(TC* ac, T0* C, T0* a1, T6 a2);
extern T1 T88f2ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.old_wipe_out */
extern void T834f84(TC* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T834f101(TC* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T834f84p1(TC* ac, T0* C);
/* UC_STRING.old_wipe_out */
extern void T454f81(TC* ac, T0* C);
/* UC_STRING.wipe_out */
extern void T454f96(TC* ac, T0* C);
/* UC_STRING.wipe_out */
extern void T454f81p1(TC* ac, T0* C);
/* STRING_8.wipe_out */
extern void T17f61(TC* ac, T0* C);
/* STRING_8.twin */
extern T0* T17f13(TC* ac, T0* C);
/* STRING_8.copy */
extern void T17f64(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T2003f9(TC* ac, T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T88c22(TC* ac);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T2001f12(TC* ac, T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T2001f7(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T2001f6(TC* ac, T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T2001f9(TC* ac, T0* C);
/* ET_UNIVERSE_ERROR.default_message */
extern T0* T2000f12(TC* ac, T0* C);
/* ET_UNIVERSE_ERROR.message */
extern T0* T2000f7(TC* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.arguments */
extern T0* T2000f6(TC* ac, T0* C);
/* ET_UNIVERSE_ERROR.string_ */
extern T0* T2000f9(TC* ac, T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T2002f11(TC* ac, T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T2002f14(TC* ac, T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T2002f12(TC* ac, T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T2002f16(TC* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1423f5(TC* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1423f3(TC* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1423f6(TC* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1423f4(TC* ac, T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1422f5(TC* ac, T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1422f3(TC* ac, T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1422f6(TC* ac, T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1422f4(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T843f41(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T843f16(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T843f13(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T843f40(TC* ac, T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T842f5(TC* ac, T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T842f7(TC* ac, T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T842f6(TC* ac, T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T842f9(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T841f5(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T841f7(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T841f6(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T841f9(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T326f5(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T326f3(TC* ac, T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T326f6(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T326f4(TC* ac, T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T84f3(TC* ac, T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T84f5(TC* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T84f7(TC* ac, T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T84f6(TC* ac, T0* C);
/* AP_ERROR.default_message */
extern T0* T92f17(TC* ac, T0* C);
/* AP_ERROR.message */
extern T0* T92f18(TC* ac, T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T92f20(TC* ac, T0* C);
/* AP_ERROR.string_ */
extern T0* T92f19(TC* ac, T0* C);
/* UT_MESSAGE.default_message */
extern T0* T86f3(TC* ac, T0* C);
/* UT_MESSAGE.message */
extern T0* T86f5(TC* ac, T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T86f7(TC* ac, T0* C);
/* UT_MESSAGE.string_ */
extern T0* T86f6(TC* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T82f3(TC* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T82f5(TC* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T82f7(TC* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T82f6(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_error */
extern void T41f192(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T41f194(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_error */
extern void T41f196(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T41f194p1(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T38f7(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T38f8(TC* ac, T0* C);
/* ET_ERROR_HANDLER.message */
extern T0* T41f11(TC* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T82c8(TC* ac, T0* a1);
/* ARRAY [STRING_8].put */
extern void T33f8(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make_filled */
extern T0* T33c7(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [STRING_8].make_filled_area */
extern void T33f9(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].make_filled */
extern T0* T34c7(TC* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_8].fill_with */
extern void T34f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].extend */
extern void T34f10(TC* ac, T0* C, T0* a1);
/* SPECIAL [STRING_8].make_empty */
extern void T34f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].make_empty */
extern T0* T34c8(TC* ac, T6 a1);
/* GEC.process_system */
extern void T25f67(TC* ac, T0* C, T0* a1);
/* GEC.compile_c_code */
extern void T25f77(TC* ac, T0* C, T0* a1);
/* GECC.execute_with_arguments */
extern T0* T94c10(TC* ac, T0* a1);
/* GECC.execute_with_arguments_and_error_handler */
extern void T94f11(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature GECC.execute_with_arguments_and_error_handler */
extern T0* T94f11ac1(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* PROCEDURE [TUPLE].set_rout_disp_final */
extern void T367f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* GECC.report_cannot_read_error */
extern void T94f15(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T138f9(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T138f11(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.message */
extern T0* T138f5(TC* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2215f5(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T2215f3(TC* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2215f6(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2215f4(TC* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T2194f5(TC* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T2194f3(TC* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T2194f6(TC* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T2194f4(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T2193f5(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T2193f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T2193f6(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T2193f4(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T2192f5(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T2192f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T2192f6(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T2192f4(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T2191f5(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T2191f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T2191f6(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T2191f4(TC* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T2190f5(TC* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T2190f3(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T2190f6(TC* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T2190f4(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2189f5(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T2189f3(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2189f6(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2189f4(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T2188f5(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T2188f3(TC* ac, T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T2188f6(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T2188f4(TC* ac, T0* C);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.default_message */
extern T0* T2187f5(TC* ac, T0* C);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.message */
extern T0* T2187f3(TC* ac, T0* C, T0* a1);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.arguments */
extern T0* T2187f6(TC* ac, T0* C);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.string_ */
extern T0* T2187f4(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T2186f5(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T2186f3(TC* ac, T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T2186f6(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T2186f4(TC* ac, T0* C);
/* GECC.process_lines */
extern void T94f13(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [STRING_8].remove_first */
extern void T150f27(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].remove */
extern void T150f32(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].keep_head */
extern void T34f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].set_count */
extern void T34f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].move_left */
extern void T150f37(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_left */
extern void T150f36(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T542f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].remove_last */
extern void T150f35(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_last_cursors_after */
extern void T150f38(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T542f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_after */
extern void T542f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T150f7(TC* ac, T0* C);
/* GECC.process */
extern void T94f14(TC* ac, T0* C, T0* a1, T6 a2);
/* WORKER_THREAD.launch */
extern void T457f10(TC* ac, T0* C);
/* WORKER_THREAD.launch_with_attributes */
extern void T457f12(TC* ac, T0* C, T0* a1);
/* WORKER_THREAD.last_created_thread */
extern T14 T457f6(TC* ac, T0* C);
/* WORKER_THREAD.thr_set_terminated */
extern void T457f14(TC* ac, T0* C, T1 a1);
/* WORKER_THREAD.thr_set_terminated */
extern void T457a14(T0* C, T1 a1);
/* WORKER_THREAD.thr_main */
extern void T457f13(TC* ac, T0* C, T6 a1);
/* WORKER_THREAD.thr_main */
extern void T457a13(T0* C, T6 a1);
/* WORKER_THREAD.execute_procedure */
extern void T457f16(TC* ac, T0* C);
/* WORKER_THREAD.default_pointer */
extern T14 T457f8(TC* ac, T0* C);
/* WORKER_THREAD.create_thread_with_attr */
extern void T457f15(TC* ac, T0* C, T0* a1, T14 a2, T14 a3, T14 a4);
/* THREAD_ATTRIBUTES.item */
extern T14 T835f4(TC* ac, T0* C);
/* WORKER_THREAD.is_launchable */
extern T1 T457f5(TC* ac, T0* C);
/* MUTEX.is_set */
extern T1 T137f5(TC* ac, T0* C);
/* CELL [BOOLEAN].put */
extern void T836f2(TC* ac, T0* C, T1 a1);
/* CELL [BOOLEAN].put */
extern T0* T836c2(TC* ac, T1 a1);
/* WORKER_THREAD.is_last_launch_successful_cell */
extern T0* T457f7(TC* ac, T0* C);
/* THREAD_ATTRIBUTES.make */
extern T0* T835c7(TC* ac);
/* THREAD_ATTRIBUTES.set_priority */
extern void T835f9(TC* ac, T0* C, T6 a1);
/* THREAD_ATTRIBUTES.c_set_priority */
extern void T835f10(TC* ac, T0* C, T14 a1, T6 a2);
/* THREAD_ATTRIBUTES.default_priority */
extern T6 T835f5(TC* ac, T0* C);
/* THREAD_ATTRIBUTES.mem_make */
extern void T835f8(TC* ac, T0* C);
/* MANAGED_POINTER.make */
extern T0* T143c10(TC* ac, T6 a1);
/* EXCEPTIONS.raise */
extern void T36f4(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.raise */
extern void T125f18(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.raise */
extern void T21f19(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.code */
extern T6 T125f10(TC* ac, T0* C);
/* C_STRING.item */
extern T14 T30f4(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T21f9(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T21f17(TC* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern void T26f2(TC* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern T0* T26c2(TC* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception_cell */
extern T0* T21f2(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T125f13(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T21f8(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.is_ignored */
extern T1 T125f9(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T21f13(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].has */
extern T1 T27f34(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].same_keys */
extern T1 T27f26(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].hash_code_of */
extern T6 T27f25(TC* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f25(TC* ac, volatile T6* C);
/* ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern T0* T21f3(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].make */
extern T0* T27c35(TC* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_filled */
extern T0* T132c9(TC* ac, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].fill_with */
extern void T132f12(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].extend */
extern void T132f13(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_filled */
extern T0* T133c5(TC* ac, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].fill_with */
extern void T133f8(TC* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].extend */
extern void T133f10(TC* ac, T0* C, T1 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern void T133f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern T0* T133c7(TC* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern void T132f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern T0* T132c8(TC* ac, T6 a1);
/* PRIMES.higher_prime */
extern T6 T131f1(TC* ac, T0* C, T6 a1);
/* PRIMES.is_prime */
extern T1 T131f3(TC* ac, T0* C, T6 a1);
/* PRIMES.default_create */
extern T0* T131c5(TC* ac);
/* DEVELOPER_EXCEPTION.exception_manager */
extern T0* T125f8(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.set_description */
extern void T125f15(TC* ac, T0* C, T0* a1);
/* C_STRING.set_count */
extern void T30f8(TC* ac, T0* C, T6 a1);
/* MANAGED_POINTER.resize */
extern void T143f11(TC* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f15(TC* ac, volatile T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14f18(TC* ac, volatile T14* C, T14 a1, T6 a2, T6 a3);
/* POINTER.memory_realloc */
extern T14 T14f6(TC* ac, volatile T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14f9(TC* ac, volatile T14* C, T14 a1, T6 a2);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T39f16(TC* ac, volatile T39* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* MANAGED_POINTER.put_natural_8 */
extern void T143f15(TC* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f19(TC* ac, volatile T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f20(TC* ac, volatile T14* C, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f22(TC* ac, volatile T10* C);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T39f12(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3);
/* CELL [INTEGER_32].put */
extern void T526f2(TC* ac, T0* C, T6 a1);
/* CELL [INTEGER_32].put */
extern T0* T526c2(TC* ac, T6 a1);
/* C_STRING.make_empty */
extern void T30f7(TC* ac, T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T30c7(TC* ac, T6 a1);
/* DEVELOPER_EXCEPTION.default_create */
extern T0* T125c12(TC* ac);
/* EXCEPTIONS.default_create */
extern T0* T36c3(TC* ac);
/* MANAGED_POINTER.default_pointer */
extern T14 T143f4(TC* ac, T0* C);
/* POINTER.memory_calloc */
extern T14 T14f5(TC* ac, volatile T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f8(TC* ac, volatile T14* C, T6 a1, T6 a2);
/* MANAGED_POINTER.increment_counter */
extern void T143f12(TC* ac, T0* C);
/* THREAD_ATTRIBUTES.structure_size */
extern T6 T835f6(TC* ac, T0* C);
/* WORKER_THREAD.make */
extern T0* T457c9(TC* ac, T0* a1);
/* WORKER_THREAD.thread_make */
extern void T457f11(TC* ac, T0* C);
/* GECC.thread_count */
extern T6 T94f7(TC* ac, T0* C);
/* AP_INTEGER_OPTION.parameter */
extern T6 T54f14(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T164f7(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].is_empty */
extern T1 T164f6(TC* ac, T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T54f13(TC* ac, T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T54f16(TC* ac, T0* C);
/* MUTEX.make */
extern T0* T137c10(TC* ac);
/* MUTEX.eif_thr_mutex_create */
extern T14 T137f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T150f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T150f25(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [STRING_8].force */
extern void T400f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T150f31(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].aliased_resized_area */
extern T0* T400f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].aliased_resized_area */
extern T0* T34f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T150f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T150f15(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.ends_with */
extern T1 T834f27(TC* ac, T0* C, T0* a1);
/* STRING_8.area_upper */
extern T6 T17f24(TC* ac, T0* C);
/* UC_UTF8_STRING.area_upper */
extern T6 T834f51(TC* ac, T0* C);
/* UC_STRING.ends_with */
extern T1 T454f16(TC* ac, T0* C, T0* a1);
/* UC_STRING.area_upper */
extern T6 T454f45(TC* ac, T0* C);
/* STRING_8.ends_with */
extern T1 T17f20(TC* ac, T0* C, T0* a1);
/* STRING_8.starts_with */
extern T1 T17f16(TC* ac, T0* C, T0* a1);
/* STRING_8.is_empty */
extern T1 T17f14(TC* ac, T0* C);
/* STRING_8.adjust */
extern void T17f63(TC* ac, T0* C);
/* STRING_8.right_adjust */
extern void T17f69(TC* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f6(TC* ac, volatile T2* C);
/* STRING_8.left_adjust */
extern void T17f68(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T42f64(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T42f69(TC* ac, T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER_8].put_right */
extern void T141f4(TC* ac, T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER_8].make */
extern T0* T141c3(TC* ac, T2 a1);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T42f68(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T42f72(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T42f30(TC* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T42f26(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T42f32(TC* ac, T0* C, T14 a1);
/* KL_STRING_ROUTINES.wipe_out */
extern void T88f24(TC* ac, T0* C, T0* a1);
/* STRING_8.keep_head */
extern void T17f66(TC* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T42f28(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T150f21(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T150c21(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].set_internal_cursor */
extern void T150f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T150f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T542c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T400f1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T400c3(TC* ac);
/* GECC.parse_arguments */
extern void T94f12(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_info_message */
extern void T138f8(TC* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T139f9(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T147f12(TC* ac, T0* C, T0* a1);
/* AP_PARSER.full_usage_instruction */
extern T0* T47f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T149f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T149f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T539f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T149f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T539f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T149f23(TC* ac, T0* C, T0* a1);
/* AP_PARSER.alternative_usage_instruction */
extern T0* T47f21(TC* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T145f5(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.substring */
extern T0* T834f21(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T834c83(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.make_from_substring_general */
extern void T834f103(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.substring */
extern T0* T454f14(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.make_from_substring */
extern T0* T454c85(TC* ac, T0* a1, T6 a2, T6 a3);
/* STRING_8.substring */
extern T0* T17f12(TC* ac, T0* C, T6 a1, T6 a2);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T145f12(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.put */
extern void T834f87(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.put */
extern void T454f108(TC* ac, T0* C, T2 a1, T6 a2);
/* STRING_8.put */
extern void T17f75(TC* ac, T0* C, T2 a1, T6 a2);
/* ST_WORD_WRAPPER.is_space */
extern T1 T145f8(TC* ac, T0* C, T2 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T88f6(TC* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T145f4(TC* ac, T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T145f10(TC* ac, T0* C, T6 a1);
/* AP_PARSER.wrapper */
extern T0* T47f12(TC* ac, T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T145f11(TC* ac, T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T145c9(TC* ac);
/* STRING_8.make_filled */
extern T0* T17c58(TC* ac, T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f65(TC* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.keep_head */
extern void T834f86(TC* ac, T0* C, T6 a1);
/* UC_STRING.keep_head */
extern void T454f97(TC* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T130f2(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern T0* T130f15(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T130f14(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T129f2(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T129f18(TC* ac, T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.secondary_directory_separator */
extern T2 T129f26(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern T0* T129f17(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T129f16(TC* ac, T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T47f27(TC* ac, T0* C);
/* AP_PARSER.file_system */
extern T0* T47f26(TC* ac, T0* C);
/* AP_PARSER.unix_file_system */
extern T0* T47f15(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T130c31(TC* ac);
/* KL_OPERATING_SYSTEM.is_unix */
extern T1 T95f2(TC* ac, T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T95f4(TC* ac, T0* C);
/* PATH.utf_8_name */
extern T0* T460f6(TC* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_string_to_utf_8_string_8 */
extern T0* T39f3(TC* ac, volatile T39* C, T0* a1);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T39f15(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* STRING_8.extend */
extern void T17f56(TC* ac, T0* C, T2 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T39f6(TC* ac, volatile T39* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T465f12(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T465f19(TC* ac, T0* C, T0* a1, T6 a2);
extern T1 T465f19ot1(TC* ac, T0* a1);
extern T1 T465f19ot2(TC* ac, T0* a1);
/* STRING_32.area_lower */
extern T6 T18f9(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T465f22(TC* ac, T0* C, T2 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T465f16(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern T0* T465f15(TC* ac, T0* C);
/* CHARACTER_8.to_hexa_digit */
extern T8 T2f28(TC* ac, volatile T2* C);
/* INTEGER_8.to_natural_8 */
extern T8 T4f5(TC* ac, volatile T4* C);
/* NATURAL_8.to_integer_8 */
extern T4 T8f17(TC* ac, volatile T8* C);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f27(TC* ac, volatile T2* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T465f18(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern T0* T39f7(TC* ac, volatile T39* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T465f21(TC* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T465f20(TC* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T465c17(TC* ac);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T39f5(TC* ac, volatile T39* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T465f14(TC* ac, T0* C);
/* STRING_32.substring */
extern T0* T18f13(TC* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [CHARACTER_32].copy_data */
extern void T16f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_32].force */
extern void T16f14(TC* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].move_data */
extern void T16f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.new_string */
extern T0* T18f19(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.substring */
extern T0* T20f5(TC* ac, T0* C, T6 a1, T6 a2);
/* IMMUTABLE_STRING_32.empty_string */
extern T0* T20f7(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T20f16(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern T0* T20c16(TC* ac, T0* a1, T6 a2, T6 a3);
/* IMMUTABLE_STRING_32.item */
extern T3 T20f8(TC* ac, T0* C, T6 a1);
/* STRING_8.grow */
extern void T17f55(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.count */
extern T6 T20f2(TC* ac, T0* C);
/* PATH.name */
extern T0* T460f4(TC* ac, T0* C);
/* UTF_CONVERTER.utf_8_string_8_to_escaped_string_32 */
extern T0* T39f8(TC* ac, volatile T39* C, T0* a1);
/* UTF_CONVERTER.utf_8_string_8_into_escaped_string_32 */
extern void T39f20(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* UTF_CONVERTER.escape_code_into */
extern void T39f24(TC* ac, volatile T39* C, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f12(TC* ac, volatile T9* C);
/* NATURAL_16.to_hex_character */
extern T2 T9f15(TC* ac, volatile T9* C);
/* CHARACTER_8.plus */
extern T2 T2f32(TC* ac, volatile T2* C, T6 a1);
/* CHARACTER_8.minus */
extern T2 T2f31(TC* ac, volatile T2* C, T6 a1);
/* NATURAL_16.to_integer_32 */
extern T6 T9f5(TC* ac, volatile T9* C);
/* STRING_32.append_string_general */
extern void T18f24(TC* ac, T0* C, T0* a1);
extern T1 T18f24ot1(TC* ac, T0* a1);
/* STRING_32.append */
extern void T18f24p1(TC* ac, T0* C, T0* a1);
/* STRING_32.append */
extern void T18f27(TC* ac, T0* C, T0* a1);
/* STRING_32.additional_space */
extern T6 T18f6(TC* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f14(TC* ac, volatile T8* C);
/* NATURAL_8.to_hex_character */
extern T2 T8f21(TC* ac, volatile T8* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f25(TC* ac, volatile T8* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f10(TC* ac, volatile T9* C, T9 a1);
/* STRING_32.append_character */
extern void T18f32(TC* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f12(TC* ac, volatile T8* C);
/* STRING_32.extend */
extern void T18f36(TC* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f9(TC* ac, volatile T8* C, T8 a1);
/* STRING_32.grow */
extern void T18f35(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string */
extern T0* T20c15(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_to_escaped_string_32 */
extern T0* T39f11(TC* ac, volatile T39* C, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_into_escaped_string_32 */
extern void T39f23(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* NATURAL_32.is_greater_equal */
extern T1 T10f15(TC* ac, volatile T10* C, T10 a1);
/* EXECUTION_ENVIRONMENT.current_working_path */
extern T0* T128f3(TC* ac, T0* C);
/* PATH.make_from_pointer */
extern T0* T460c17(TC* ac, T14 a1);
/* PATH.reset_internal_data */
extern void T460f20(TC* ac, T0* C);
/* PATH.normalize */
extern void T460f19(TC* ac, T0* C);
/* STRING_8.remove_tail */
extern void T17f59(TC* ac, T0* C, T6 a1);
/* PATH.directory_separator */
extern T2 T460f13(TC* ac, T0* C);
/* STRING_8.remove_head */
extern void T17f74(TC* ac, T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f78(TC* ac, T0* C, T6 a1);
/* PATH.root_end_position */
extern T6 T460f12(TC* ac, T0* C);
/* PATH.next_directory_separator */
extern T6 T460f15(TC* ac, T0* C, T6 a1);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f8(TC* ac, volatile T2* C, T2 a1);
/* CHARACTER_8.as_lower */
extern T2 T2f25(TC* ac, volatile T2* C);
/* CHARACTER_8.lower_value */
extern T0* T2f29(TC* ac, volatile T2* C);
/* PATH.is_character */
extern T1 T460f8(TC* ac, T0* C, T0* a1, T6 a2, T2 a3);
/* C_STRING.substring_8 */
extern T0* T30f3(TC* ac, T0* C, T6 a1, T6 a2);
/* C_STRING.read_substring_into */
extern void T30f12(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f8(TC* ac, volatile T8* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T143f5(TC* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T949f4(TC* ac, volatile T949* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T949f6(TC* ac, volatile T949* C, T14 a1, T14 a2, T6 a3);
/* C_STRING.make_shared_from_pointer_and_count */
extern void T30f10(TC* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.make_shared_from_pointer_and_count */
extern T0* T30c10(TC* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T143c14(TC* ac, T14 a1, T6 a2);
/* PATH.unit_size */
extern T6 T460f5(TC* ac, T0* C);
/* PATH.pointer_length_in_bytes */
extern T6 T460f7(TC* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f9(TC* ac, volatile T11* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f8(TC* ac, volatile T11* C, T11 a1);
/* PATH.c_pointer_length_in_bytes */
extern T11 T460f14(TC* ac, T0* C, T14 a1);
/* PATH.make_from_string */
extern T0* T460c16(TC* ac, T0* a1);
/* PATH.internal_append_into */
extern void T460f18(TC* ac, T0* C, T0* a1, T0* a2, T2 a3);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_16le_string_8 */
extern void T39f19(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f23(TC* ac, volatile T10* C);
/* NATURAL_32.is_greater */
extern T1 T10f11(TC* ac, volatile T10* C, T10 a1);
/* EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T128f5(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_OPERATING_SYSTEM.execution_environment */
extern T0* T95f5(TC* ac, T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T128c10(TC* ac);
/* STRING_8.is_equal */
extern T1 T17f34(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T95f3(TC* ac, T0* C, T0* a1);
/* STRING_32.to_string_8 */
extern T0* T18f15(TC* ac, T0* C);
/* STRING_32.is_valid_as_string_8 */
extern T1 T18f14(TC* ac, T0* C);
/* EXECUTION_ENVIRONMENT.item */
extern T0* T128f2(TC* ac, T0* C, T0* a1);
/* NATIVE_STRING.string */
extern T0* T455f6(TC* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T39f10(TC* ac, volatile T39* C, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T39f22(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T39f26(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T39f9(TC* ac, volatile T39* C, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T39f21(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T39f25(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_16.to_natural_32 */
extern T10 T9f13(TC* ac, volatile T9* C);
/* MANAGED_POINTER.read_natural_16 */
extern T9 T143f6(TC* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_16].memory_copy */
extern void T950f4(TC* ac, volatile T950* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_16].c_memcpy */
extern void T950f6(TC* ac, volatile T950* C, T14 a1, T14 a2, T6 a3);
/* NATIVE_STRING.make_from_pointer */
extern T0* T455c10(TC* ac, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T143c13(TC* ac, T14 a1, T6 a2);
/* POINTER.memory_alloc */
extern T14 T14f11(TC* ac, volatile T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f12(TC* ac, volatile T14* C, T6 a1);
/* NATIVE_STRING.unit_size */
extern T6 T455f5(TC* ac, T0* C);
/* NATIVE_STRING.pointer_length_in_bytes */
extern T6 T455f4(TC* ac, T0* C, T14 a1);
/* NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T455f8(TC* ac, T0* C, T14 a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T128f4(TC* ac, T0* C, T14 a1);
/* NATIVE_STRING.item */
extern T14 T455f3(TC* ac, T0* C);
/* NATIVE_STRING.make */
extern T0* T455c9(TC* ac, T0* a1);
/* NATIVE_STRING.set_string */
extern void T455f12(TC* ac, T0* C, T0* a1);
/* NATIVE_STRING.set_substring */
extern void T455f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T39f18(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T39f17(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* MANAGED_POINTER.put_natural_16 */
extern void T143f16(TC* ac, T0* C, T9 a1, T6 a2);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T39f13(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.upper_cell */
extern T0* T455f7(TC* ac, T0* C);
/* NATIVE_STRING.make_empty */
extern void T455f11(TC* ac, T0* C, T6 a1);
/* AP_PARSER.windows_file_system */
extern T0* T47f14(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T129c34(TC* ac);
/* AP_PARSER.operating_system */
extern T0* T47f13(TC* ac, T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T95c6(TC* ac);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T48f20(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T48f22(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T48f23(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T153f9(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T48f24(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T153f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T48f9(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T48f11(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T48f8(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T48f10(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T48f19(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T48f21(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T48f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].off */
extern T1 T153f6(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T147f14(TC* ac, T0* C);
/* CHARACTER_8.out */
extern T0* T2f4(TC* ac, volatile T2* C);
/* AP_FLAG.example */
extern T0* T44f11(TC* ac, T0* C);
/* STRING_8.make_empty */
extern T0* T17c57(TC* ac);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T149f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T149f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T149f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T149f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T539f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T149f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T149f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T539f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T149f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T539f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T539f6(TC* ac, T0* C);
/* AP_PARSER.usage_instruction */
extern T0* T47f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T148f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T148f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T535f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T148f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T535f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T148f26(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.example */
extern T0* T54f15(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T53f17(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T52f13(TC* ac, T0* C);
/* AP_STRING_OPTION.example */
extern T0* T49f18(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.is_hidden */
extern T1 T147f6(TC* ac, T0* C);
/* AP_INTEGER_OPTION.is_hidden */
extern T1 T54f8(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.is_hidden */
extern T1 T53f7(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.is_hidden */
extern T1 T52f8(TC* ac, T0* C);
/* AP_FLAG.is_hidden */
extern T1 T44f6(TC* ac, T0* C);
/* AP_STRING_OPTION.is_hidden */
extern T1 T49f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T148f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T148f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T148f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T148f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].after */
extern T1 T535f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T148f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T148f23(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_after */
extern void T535f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T148f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T535f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].before */
extern T1 T535f6(TC* ac, T0* C);
/* GECC.report_version_number */
extern void T94f16(TC* ac, T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T138f10(TC* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T84c8(TC* ac, T0* a1);
/* AP_PARSER.parse_array */
extern void T47f44(TC* ac, T0* C, T0* a1);
/* AP_PARSER.parse_list */
extern void T47f45(TC* ac, T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T47f49(TC* ac, T0* C);
/* AP_PARSER.exceptions */
extern T0* T47f31(TC* ac, T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T35c1(TC* ac);
/* AP_ERROR_HANDLER.report_error_message */
extern void T151f10(TC* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T151f10p1(TC* ac, T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T47f48(TC* ac, T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T92c23(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T147f10(TC* ac, T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T54f17(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T53f13(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T52f15(TC* ac, T0* C);
/* AP_FLAG.name */
extern T0* T44f10(TC* ac, T0* C);
/* AP_STRING_OPTION.name */
extern T0* T49f14(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.occurrences */
extern T6 T147f5(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T53f14(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T52f16(TC* ac, T0* C);
/* AP_FLAG.occurrences */
extern T6 T44f1(TC* ac, T0* C);
/* AP_STRING_OPTION.occurrences */
extern T6 T49f17(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.maximum_occurrences */
extern T6 T147f8(TC* ac, T0* C);
/* AP_INTEGER_OPTION.maximum_occurrences */
extern T6 T54f10(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.maximum_occurrences */
extern T6 T53f9(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.maximum_occurrences */
extern T6 T52f10(TC* ac, T0* C);
/* AP_FLAG.maximum_occurrences */
extern T6 T44f8(TC* ac, T0* C);
/* AP_STRING_OPTION.maximum_occurrences */
extern T6 T49f10(TC* ac, T0* C);
/* AP_ERROR_HANDLER.report_error */
extern void T151f9(TC* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T151f6(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T92c22(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T147f13(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T53f16(TC* ac, T0* C);
/* AP_STRING_OPTION.was_found */
extern T1 T49f13(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.is_mandatory */
extern T1 T147f7(TC* ac, T0* C);
/* AP_INTEGER_OPTION.is_mandatory */
extern T1 T54f9(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.is_mandatory */
extern T1 T53f8(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.is_mandatory */
extern T1 T52f9(TC* ac, T0* C);
/* AP_FLAG.is_mandatory */
extern T1 T44f7(TC* ac, T0* C);
/* AP_STRING_OPTION.is_mandatory */
extern T1 T49f9(TC* ac, T0* C);
/* AP_PARSER.parse_argument */
extern void T47f47(TC* ac, T0* C, T0* a1);
/* AP_PARSER.parse_short */
extern void T47f51(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T147f26(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T147f27(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T147f18(TC* ac, T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T151f11(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T147f17(TC* ac, T0* C, T0* a1);
/* AP_PARSER.full_help_text */
extern T0* T47f35(TC* ac, T0* C);
/* AP_PARSER.option_help_text */
extern T0* T47f40(TC* ac, T0* C, T0* a1, T6 a2);
/* AP_DISPLAY_HELP_FLAG.description */
extern T0* T147f1(TC* ac, T0* C);
/* AP_INTEGER_OPTION.description */
extern T0* T54f3(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.description */
extern T0* T53f3(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.description */
extern T0* T52f3(TC* ac, T0* C);
/* AP_FLAG.description */
extern T0* T44f2(TC* ac, T0* C);
/* AP_STRING_OPTION.description */
extern T0* T49f3(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T147f19(TC* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T54f21(TC* ac, T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T54f22(TC* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T54f21p1(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T53f24(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T53f25(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T53f24p1(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T52f23(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T52f24(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T52f23p1(TC* ac, T0* C);
/* AP_FLAG.names */
extern T0* T44f16(TC* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T49f22(TC* ac, T0* C);
/* AP_STRING_OPTION.has_long_form */
extern T1 T49f23(TC* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T49f22p1(TC* ac, T0* C);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T2005f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T2005f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T2005f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T312f14(TC* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].move_data */
extern void T132f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T132f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].force */
extern void T132f11(TC* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T132f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].capacity */
extern T6 T312f7(TC* ac, T0* C);
/* ARRAY [INTEGER_32].set_area */
extern void T312f16(TC* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T132f5(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].make_empty_area */
extern void T312f15(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T312f6(TC* ac, T0* C);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T312f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T148f28(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T148f27(TC* ac, T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T2004f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T88f21(TC* ac, T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T2004f2(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.long_form */
extern T0* T147f4(TC* ac, T0* C);
/* AP_INTEGER_OPTION.long_form */
extern T0* T54f6(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.long_form */
extern T0* T53f6(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.long_form */
extern T0* T52f7(TC* ac, T0* C);
/* AP_FLAG.long_form */
extern T0* T44f3(TC* ac, T0* C);
/* AP_STRING_OPTION.long_form */
extern T0* T49f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T148f16(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].item */
extern T6 T312f4(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T312f12(TC* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].make_filled */
extern T0* T312c10(TC* ac, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].make_filled_area */
extern void T312f13(TC* ac, T0* C, T6 a1, T6 a2);
/* AP_PARSER.all_options */
extern T0* T47f25(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T148f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T148c17(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].set_internal_cursor */
extern void T148f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T148f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T535c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T538f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [AP_OPTION].make_empty */
extern T0* T537c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T538c3(TC* ac);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T2005c2(TC* ac, T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T2004c3(TC* ac);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T54f29(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T92c21(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T164f10(TC* ac, T0* C, T6 a1);
/* DS_LINKABLE [INTEGER_32].put_right */
extern void T549f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [INTEGER_32].make */
extern T0* T549c3(TC* ac, T6 a1);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T53f32(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern T0* T53f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T150f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T150f39(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T53f23(TC* ac, T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T179c3(TC* ac);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T150f18(TC* ac, T0* C, T0* a1);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T179f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T88f7(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T88f7ot1(TC* ac, T0* a1);
extern T1 T88f7ot2(TC* ac, T0* a1);
/* CHARACTER_32.lower */
extern T3 T3f6(TC* ac, volatile T3* C);
/* CHARACTER_PROPERTY.to_lower */
extern T3 T839f1(TC* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_lower_table_16 */
extern T0* T839f19(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_15 */
extern T0* T839f18(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_14 */
extern T0* T839f17(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_13 */
extern T0* T839f16(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_12 */
extern T0* T839f15(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_11 */
extern T0* T839f14(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_10 */
extern T0* T839f13(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_9 */
extern T0* T839f12(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_8 */
extern T0* T839f11(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_7 */
extern T0* T839f10(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_6 */
extern T0* T839f9(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_5 */
extern T0* T839f8(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_4 */
extern T0* T839f7(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_3 */
extern T0* T839f6(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_2 */
extern T0* T839f5(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_1 */
extern T0* T839f4(TC* ac, T0* C);
/* CHARACTER_32.plus */
extern T3 T3f13(TC* ac, volatile T3* C, T10 a1);
/* CHARACTER_32.is_less_equal */
extern T1 T3f12(TC* ac, volatile T3* C, T3 a1);
/* CHARACTER_32.is_less */
extern T1 T3f15(TC* ac, volatile T3* C, T3 a1);
/* CHARACTER_32.properties */
extern T0* T3f9(TC* ac, volatile T3* C);
/* CHARACTER_PROPERTY.make */
extern T0* T839c37(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T451f2(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern T0* T451f7(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern T0* T451f10(TC* ac, T0* C);
/* SPECIAL [ARRAY [INTEGER_32]].make_filled */
extern T0* T829c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ARRAY [INTEGER_32]].fill_with */
extern void T829f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ARRAY [INTEGER_32]].extend */
extern void T829f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [ARRAY [INTEGER_32]].make_empty */
extern void T829f6(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern T0* T451f17(TC* ac, T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T831f1(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T451f28(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern T0* T451f9(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern T0* T451f27(TC* ac, T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_filled */
extern T0* T830c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].fill_with */
extern void T830f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].extend */
extern void T830f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_empty */
extern void T830f6(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern T0* T451f8(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern T0* T451f26(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern T0* T451f25(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern T0* T451f24(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern T0* T451f23(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern T0* T451f22(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern T0* T451f21(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern T0* T451f20(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern T0* T451f19(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern T0* T451f18(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern T0* T451f16(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern T0* T451f15(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern T0* T451f14(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern T0* T451f13(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern T0* T451f12(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern T0* T451f11(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_natural_32_code */
extern T1 T451f1(TC* ac, T0* C, T10 a1);
/* KL_STRING_ROUTINES.unicode */
extern T0* T88f13(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T451c57(TC* ac);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T179f2(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.true_strings */
extern T0* T53f21(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T161f10(TC* ac, T0* C, T1 a1);
/* DS_LINKABLE [BOOLEAN].put_right */
extern void T547f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [BOOLEAN].make */
extern T0* T547c3(TC* ac, T1 a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T52f33(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T156f14(TC* ac, T0* C, T0* a1);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T157f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [detachable STRING_8].force_last */
extern void T154f19(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].force */
extern void T544f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable STRING_8].fill_with */
extern void T543f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].extend */
extern void T543f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable STRING_8].resize */
extern void T154f20(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].aliased_resized_area */
extern T0* T544f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].aliased_resized_area */
extern T0* T543f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].new_capacity */
extern T6 T154f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].extendible */
extern T1 T154f11(TC* ac, T0* C, T6 a1);
/* AP_FLAG.record_occurrence */
extern void T44f24(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.record_occurrence */
extern void T49f31(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T92c25(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T150f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T150f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T542f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].before */
extern T1 T542f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T542f5(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T147f9(TC* ac, T0* C);
/* AP_INTEGER_OPTION.needs_parameter */
extern T1 T54f5(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.needs_parameter */
extern T1 T53f5(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.needs_parameter */
extern T1 T52f6(TC* ac, T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T44f12(TC* ac, T0* C);
/* AP_STRING_OPTION.needs_parameter */
extern T1 T49f6(TC* ac, T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T92c24(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.short_form */
extern T2 T147f2(TC* ac, T0* C);
/* AP_INTEGER_OPTION.short_form */
extern T2 T54f7(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.short_form */
extern T2 T53f11(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.short_form */
extern T2 T52f12(TC* ac, T0* C);
/* AP_FLAG.short_form */
extern T2 T44f4(TC* ac, T0* C);
/* AP_STRING_OPTION.short_form */
extern T2 T49f12(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.has_short_form */
extern T1 T147f3(TC* ac, T0* C);
/* AP_INTEGER_OPTION.has_short_form */
extern T1 T54f11(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_short_form */
extern T1 T53f10(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_short_form */
extern T1 T52f11(TC* ac, T0* C);
/* AP_FLAG.has_short_form */
extern T1 T44f5(TC* ac, T0* C);
/* AP_STRING_OPTION.has_short_form */
extern T1 T49f11(TC* ac, T0* C);
/* AP_PARSER.parse_long */
extern void T47f50(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T92c26(TC* ac, T0* a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T147f11(TC* ac, T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T54f18(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T53f15(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T52f17(TC* ac, T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T44f13(TC* ac, T0* C);
/* AP_STRING_OPTION.allows_parameter */
extern T1 T49f16(TC* ac, T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T88f1(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T88f1ot1(TC* ac, T0* a1);
extern T1 T88f1ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.same_string_general */
extern T1 T834f35(TC* ac, T0* C, T0* a1);
extern T1 T834f35ot1(TC* ac, T0* a1);
/* UC_STRING.same_string_general */
extern T1 T454f26(TC* ac, T0* C, T0* a1);
extern T1 T454f26ot1(TC* ac, T0* a1);
/* STRING_8.same_string_general */
extern T1 T17f18(TC* ac, T0* C, T0* a1);
/* STRING_8.same_characters_general */
extern T1 T17f25(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T834f34(TC* ac, T0* C, T0* a1);
extern T1 T834f34ot1(TC* ac, T0* a1);
/* UC_STRING.same_unicode_string */
extern T1 T454f25(TC* ac, T0* C, T0* a1);
extern T1 T454f25ot1(TC* ac, T0* a1);
/* AP_PARSER.string_ */
extern T0* T47f33(TC* ac, T0* C);
/* UC_UTF8_STRING.index_of */
extern T6 T834f28(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T834f52(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.index_of */
extern T6 T454f24(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.index_of_item_code */
extern T6 T454f49(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f36(TC* ac, T0* C, T2 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T150f24(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T150f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T150f33(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T150f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T150f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T150f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T150f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T150f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T150f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T150f29(TC* ac, T0* C, T0* a1);
/* AP_PARSER.reset_parser */
extern void T47f46(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T147f25(TC* ac, T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T54f28(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T164c8(TC* ac);
/* DS_LINKED_LIST [INTEGER_32].set_internal_cursor */
extern void T164f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T164f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T550c3(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T53f31(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T161c8(TC* ac);
/* DS_LINKED_LIST [BOOLEAN].set_internal_cursor */
extern void T161f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T161f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T548c3(TC* ac, T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T52f31(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].make */
extern T0* T154c13(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].set_internal_cursor */
extern void T154f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable STRING_8].new_cursor */
extern T0* T154f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].make */
extern T0* T155c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].make */
extern T0* T544f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable STRING_8].make_empty */
extern void T543f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable STRING_8].make_empty */
extern T0* T543c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].default_create */
extern T0* T544c3(TC* ac);
/* AP_FLAG.reset */
extern void T44f22(TC* ac, T0* C);
/* AP_STRING_OPTION.reset */
extern void T49f30(TC* ac, T0* C);
/* AP_ERROR_HANDLER.reset */
extern void T151f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_array */
extern T0* T150c22(TC* ac, T0* a1);
/* ARRAY [STRING_8].count */
extern T6 T33f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T149f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T541f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T540f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T540f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T149f19(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T541f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T540f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T149f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T149f10(TC* ac, T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T48c13(TC* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T48f17(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T48f18(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T48f7(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T153c7(TC* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T48f16(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T48f15(TC* ac, T0* C, T0* a1);
/* AP_FLAG.set_description */
extern void T44f18(TC* ac, T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T44c19(TC* ac, T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T44f21(TC* ac, T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T44f23(TC* ac, T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T44f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T148f18(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].force */
extern void T538f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_OPTION].fill_with */
extern void T537f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].extend */
extern void T537f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T148f22(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].aliased_resized_area */
extern T0* T538f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].aliased_resized_area */
extern T0* T537f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T148f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T148f13(TC* ac, T0* C, T6 a1);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T54f25(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T54f24(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T54c23(TC* ac, T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T54f27(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T54f26(TC* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T54f26p1(TC* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T54f26p0(TC* ac, T0* C);
/* AP_PARSER.set_parameters_description */
extern void T47f43(TC* ac, T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T47f42(TC* ac, T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T47c41(TC* ac);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T147f21(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T147c20(TC* ac, T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T147f24(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T147f23(TC* ac, T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T147f22(TC* ac, T0* C);
/* AP_PARSER.make */
extern void T47f41p1(TC* ac, T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T151c7(TC* ac);
/* KL_STANDARD_FILES.output */
extern T0* T37f2(TC* ac, T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T139c5(TC* ac);
/* AP_ERROR_HANDLER.std */
extern T0* T151f5(TC* ac, T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T37c4(TC* ac);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T149c14(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T149f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T149f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T539c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T541f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T540c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T541c3(TC* ac);
/* GECC.ise_variables */
extern T0* T94f8(TC* ac, T0* C);
/* ET_ISE_VARIABLES.default_create */
extern T0* T43c17(TC* ac);
/* GECC.arguments */
extern T0* T94f6(TC* ac, T0* C);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T138c7(TC* ac);
/* UT_ERROR_HANDLER.std */
extern T0* T138f4(TC* ac, T0* C);
/* INTEGER_32.out */
extern T0* T6f7(TC* ac, volatile T6* C);
/* STRING_8.append_integer */
extern void T17f50(TC* ac, T0* C, T6 a1);
/* GEC.c_compile_using_gecc */
extern T1 T25f59(TC* ac, T0* C);
/* GEC.string_ */
extern T0* T25f53(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T52f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].last */
extern T0* T154f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].is_empty */
extern T1 T154f8(TC* ac, T0* C);
/* GEC.c_compile_using_make */
extern T1 T25f58(TC* ac, T0* C);
/* KL_SHELL_COMMAND.execute */
extern void T93f11(TC* ac, T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern T0* T93f5(TC* ac, T0* C);
/* KL_SHELL_COMMAND.system */
extern void T93f12(TC* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T93f7(TC* ac, T0* C, T14 a1);
/* KL_SHELL_COMMAND.default_shell */
extern T0* T93f6(TC* ac, T0* C);
/* STRING_32.make_empty */
extern T0* T18c22(TC* ac);
/* KL_SHELL_COMMAND.item */
extern T0* T93f8(TC* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T93f9(TC* ac, T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T834f25(TC* ac, T0* C);
/* UC_STRING.old_is_empty */
extern T1 T454f19(TC* ac, T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T93c10(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T130f1(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T130f8(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T130f17(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T130f13(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern T0* T130f23(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T130f12(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T129f1(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T88f19(TC* ac, T0* C, T0* a1, T0* a2);
/* STRING_32.plus */
extern T0* T18f17(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.as_string_32 */
extern T0* T834f20(TC* ac, T0* C);
/* STRING_32.as_string_32 */
extern T0* T18f16(TC* ac, T0* C);
/* UC_STRING.as_string_32 */
extern T0* T454f63(TC* ac, T0* C);
/* STRING_8.as_string_32 */
extern T0* T17f41(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T129f15(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T129f14(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T129f8(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T129f13(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T129f25(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T129f6(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T129f12(TC* ac, T0* C, T0* a1);
/* GEC.file_system */
extern T0* T25f57(TC* ac, T0* C);
/* GEC.unix_file_system */
extern T0* T25f61(TC* ac, T0* C);
/* GEC.windows_file_system */
extern T0* T25f60(TC* ac, T0* C);
/* GEC.c_compile_using_script */
extern T1 T25f56(TC* ac, T0* C);
/* KL_OPERATING_SYSTEM.is_windows */
extern T1 T95f1(TC* ac, T0* C);
/* GEC.operating_system */
extern T0* T25f55(TC* ac, T0* C);
/* GEC.no_c_compile */
extern T1 T25f51(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.dynamic_feature_count */
extern T6 T68f73(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.procedures */
extern T0* T496f18(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.procedures */
extern T0* T495f18(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.procedures */
extern T0* T323f14(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.procedures */
extern T0* T338f14(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.procedures */
extern T0* T228f13(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.queries */
extern T0* T496f6(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.queries */
extern T0* T495f6(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.queries */
extern T0* T323f6(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.queries */
extern T0* T338f6(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.queries */
extern T0* T228f2(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T81f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.alive_dynamic_type_count */
extern T6 T68f74(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_alive */
extern T1 T496f4(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_alive */
extern T1 T495f4(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_alive */
extern T1 T323f4(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_alive */
extern T1 T338f4(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_alive */
extern T1 T228f3(TC* ac, T0* C);
/* KL_STDOUT_FILE.put_new_line */
extern void T139f8(TC* ac, T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T139f7(TC* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.put_integer_64 */
extern void T139f11(TC* ac, T0* C, T7 a1);
/* KL_STDOUT_FILE.put_character */
extern void T139f10(TC* ac, T0* C, T2 a1);
/* CONSOLE.put_character */
extern void T983f24(TC* ac, T0* C, T2 a1);
/* CONSOLE.console_pc */
extern void T983f28(TC* ac, T0* C, T14 a1, T2 a2);
/* KL_STDOUT_FILE.console */
extern T0* T139f1(TC* ac, T0* C);
/* STD_FILES.output */
extern T0* T464f3(TC* ac, T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T983c23(TC* ac, T0* a1);
/* CONSOLE.set_write_mode */
extern void T983f26(TC* ac, T0* C);
/* CONSOLE.console_def */
extern T14 T983f13(TC* ac, T0* C, T6 a1);
/* CONSOLE.make_with_name */
extern void T983f25(TC* ac, T0* C, T0* a1);
/* CONSOLE.make_with_name */
extern void T983f25p1(TC* ac, T0* C, T0* a1);
/* CONSOLE.default_pointer */
extern T14 T983f10(TC* ac, T0* C);
/* CONSOLE.set_name */
extern void T983f29(TC* ac, T0* C, T0* a1);
/* FILE_INFO.file_name_to_pointer */
extern T0* T144f11(TC* ac, T0* C, T0* a1, T0* a2);
/* C_STRING.set_string */
extern void T30f11(TC* ac, T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T30f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* INTEGER_32.do_nothing */
extern void T6f37(TC* ac, volatile T6* C);
/* FILE_INFO.multi_byte_to_utf_16 */
extern T6 T144f10(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* FILE_INFO.default_pointer */
extern T14 T144f9(TC* ac, T0* C);
/* C_STRING.make */
extern T0* T30c9(TC* ac, T0* a1);
/* CONSOLE.buffered_file_info */
extern T0* T983f11(TC* ac, T0* C);
/* FILE_INFO.make */
extern T0* T144c22(TC* ac);
/* FILE_INFO.make_filled_area */
extern void T144f24(TC* ac, T0* C, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].make_filled */
extern T0* T533c5(TC* ac, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].fill_with */
extern void T533f8(TC* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* FILE_INFO.stat_size */
extern T6 T144f7(TC* ac, T0* C);
/* KL_STDOUT_FILE.io */
extern T0* T139f4(TC* ac, T0* C);
/* STD_FILES.set_output_default */
extern void T464f6(TC* ac, T0* C);
/* STD_FILES.default_create */
extern T0* T464c5(TC* ac);
/* INTEGER_32.to_integer_64 */
extern T7 T6f22(TC* ac, volatile T6* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T165f6(TC* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T165f10(TC* ac, T0* C, T7 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T165f8(TC* ac, T0* C, T2 a1);
/* KL_STDOUT_FILE.put_string */
extern void T139f6(TC* ac, T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T983f22(TC* ac, T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T983f27(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_ROUTINES.as_readable_string_8_no_uc_string */
extern T0* T88f4(TC* ac, T0* C, T0* a1);
extern T1 T88f4ot1(TC* ac, T0* a1);
/* KL_STDOUT_FILE.string_ */
extern T0* T139f2(TC* ac, T0* C);
/* ET_C_GENERATOR.generate */
extern void T72f632(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].wipe_out */
extern void T219f53(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_wipe_out */
extern void T219f70(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_wipe_out */
extern void T219f69(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_wipe_out */
extern void T219f68(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_wipe_out */
extern void T219f67(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T219f59(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors_after */
extern void T219f66(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T325f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_after */
extern void T325f17(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T72f637(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.generate_compilation_makefile */
extern void T72f678(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T72f639(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T72f168(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T326c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T72f638(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T321f35(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T321f40(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T321f18(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T321f48(TC* ac, T0* C, T14 a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T321f33(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T321f34(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T321f31(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T321f43(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T321f50(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T321f12(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.expanded_string */
extern T0* T324f23(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_STRING_HASH_TABLE.value */
extern T0* T324f49(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.item_storage_item */
extern T0* T324f30(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.position_of_key */
extern T6 T324f22(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.clashes_item */
extern T6 T324f28(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.key_storage_item */
extern T0* T324f27(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.hash_position */
extern T6 T324f26(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T834f10(TC* ac, T0* C);
/* UC_UTF8_STRING.string */
extern T0* T834f37(TC* ac, T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T834f10p1(TC* ac, T0* C);
/* UC_STRING.hash_code */
extern T6 T454f13(TC* ac, T0* C);
/* UC_STRING.string */
extern T0* T454f44(TC* ac, T0* C);
/* UC_STRING.hash_code */
extern T6 T454f13p1(TC* ac, T0* C);
/* STRING_8.hash_code */
extern T6 T17f28(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.slots_item */
extern T6 T324f24(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.string_ */
extern T0* T324f32(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T321f21(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T321f19(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T321f30(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T321f17(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T321f20(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T321f42(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T321f42p1(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T321f23(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T321f22(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T321f14(TC* ac, T0* C);
/* UC_UTF8_STRING.as_string_8 */
extern T0* T834f26(TC* ac, T0* C);
/* UC_UTF8_STRING.valid_code */
extern T1 T834f50(TC* ac, T0* C, T10 a1);
/* UC_STRING.as_string_8 */
extern T0* T454f12(TC* ac, T0* C);
/* UC_STRING.valid_code */
extern T1 T454f41(TC* ac, T0* C, T10 a1);
/* STRING_8.as_string_8 */
extern T0* T17f27(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T321c29(TC* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T321f41(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T321f41p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.set_name */
extern void T321f49(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T321f26(TC* ac, T0* C);
/* KL_STRING_ROUTINES.as_string_no_uc_string */
extern T0* T88f5(TC* ac, T0* C, T0* a1);
extern T1 T88f5ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.operating_system */
extern T0* T72f167(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_shell_script */
extern void T72f677(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* KL_TEXT_OUTPUT_FILE.change_mode */
extern void T321f39(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T321f47(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T321f52(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T321f16(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T321f27(TC* ac, T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T130f11(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T42f33(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T42f35(TC* ac, T0* C);
/* FILE_INFO.is_plain */
extern T1 T144f13(TC* ac, T0* C);
/* FILE_INFO.file_info */
extern T6 T144f14(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern T0* T42f29(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T42f73(TC* ac, T0* C);
/* FILE_INFO.fast_update */
extern void T144f23(TC* ac, T0* C, T0* a1, T0* a2);
/* FILE_INFO.eif_file_stat */
extern T6 T144f12(TC* ac, T0* C, T14 a1, T14 a2, T1 a3);
/* KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T42f24(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T42f15(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T42f31(TC* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T42f23(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_name */
extern T0* T42f13(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.reset */
extern void T42f74(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern T0* T130f22(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T129f11(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T129f24(TC* ac, T0* C);
/* UC_UTF8_STRING.remove_tail */
extern void T834f76(TC* ac, T0* C, T6 a1);
/* UC_STRING.remove_tail */
extern void T454f78(TC* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T130f10(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T129f10(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.file_system */
extern T0* T72f154(TC* ac, T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T72f564(TC* ac, T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T72f563(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T325f5(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_item */
extern T0* T324f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T219f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T219f33(TC* ac, T0* C, T6 a1);
/* ET_ISE_VARIABLES.ise_platform_value */
extern T0* T43f7(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T91f4(TC* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T91f2(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern T0* T91f1(TC* ac, T0* C);
/* ET_ISE_VARIABLES.execution_environment */
extern T0* T43f3(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T91c16(TC* ac);
/* ET_C_GENERATOR.ise_variables */
extern T0* T72f244(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T325f16(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_forth */
extern void T324f81(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.add_traversing_cursor */
extern void T324f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T325f19(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.remove_traversing_cursor */
extern void T324f82(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T219f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T219f79(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T219f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T219f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T325f4(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T325f15(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_start */
extern void T324f80(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.cursor_off */
extern T1 T324f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].off */
extern T1 T325f11(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.is_empty */
extern T1 T324f53(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T219f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T219f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T219f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].back */
extern void T325f14(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_back */
extern void T324f79(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_before */
extern void T325f20(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_back */
extern void T219f86(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T325f9(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_key */
extern T0* T324f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T219f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T219f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].is_last */
extern T1 T325f7(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_is_last */
extern T1 T324f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_is_last */
extern T1 T219f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].before */
extern T1 T325f6(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].finish */
extern void T325f13(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_finish */
extern void T324f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_finish */
extern void T219f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T219f22(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T325c12(TC* ac, T0* a1);
/* DS_STRING_HASH_TABLE.item */
extern T0* T324f21(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.search_position */
extern void T324f60(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.add_external_c_files */
extern void T72f676(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_DIRECTORY.close */
extern void T352f36(TC* ac, T0* C);
/* KL_DIRECTORY.old_close */
extern void T352f37(TC* ac, T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T352f19(TC* ac, T0* C);
/* KL_DIRECTORY.dir_close */
extern void T352f41(TC* ac, T0* C, T14 a1);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T88f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T88f14(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
extern T1 T88f14ot1(TC* ac, T0* a1);
/* STRING_8.substring_index */
extern T6 T17f31(TC* ac, T0* C, T0* a1, T6 a2);
/* STRING_8_SEARCHER.substring_index */
extern T6 T840f2(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T840f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.internal_initialize_deltas */
extern void T840f6(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern T0* T17f40(TC* ac, T0* C);
/* STRING_8_SEARCHER.make */
extern T0* T840c5(TC* ac);
/* UC_UTF8_STRING.substring_index */
extern T6 T834f32(TC* ac, T0* C, T0* a1, T6 a2);
/* UC_STRING.substring_index */
extern T6 T454f59(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.scoop_mode */
extern T1 T72f307(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T321f32(TC* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T321f44(TC* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T321f51(TC* ac, T0* C, T14 a1, T2 a2);
/* ET_C_GENERATOR.use_threads */
extern T1 T72f240(TC* ac, T0* C);
/* ET_C_GENERATOR.multithreaded_mode */
extern T1 T72f523(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T219f52(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T219f64(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T219f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T219f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T219f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T219f31(TC* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].hash_code */
extern T6 T221f2(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T219f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T219f77(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area_with_default */
extern T0* T402f1(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].aliased_resized_area_with_default */
extern T0* T132f4(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern T0* T219f42(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T402c6(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T219f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T219f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T219f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T219f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T219f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T219f61(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T219f60(TC* ac, T0* C, T0* a1);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T953f1(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T953f2(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.extension */
extern T0* T130f9(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.extension */
extern T0* T129f9(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T352f35(TC* ac, T0* C);
/* KL_DIRECTORY.last_entry_8 */
extern T0* T352f17(TC* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_8 */
extern T0* T144f15(TC* ac, T0* C, T14 a1);
/* C_STRING.string_8 */
extern T0* T30f5(TC* ac, T0* C);
/* C_STRING.c_strlen */
extern T6 T30f6(TC* ac, T0* C, T14 a1);
/* C_STRING.make_shared_from_pointer */
extern T0* T30c14(TC* ac, T14 a1);
/* FILE_INFO.utf_16_to_multi_byte */
extern T6 T144f19(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_DIRECTORY.file_info */
extern T0* T352f26(TC* ac, T0* C);
/* KL_DIRECTORY.last_entry_32 */
extern T0* T352f16(TC* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_32 */
extern T0* T144f16(TC* ac, T0* C, T14 a1);
/* FILE_INFO.pointer_length_in_bytes */
extern T6 T144f20(TC* ac, T0* C, T14 a1);
/* FILE_INFO.c_pointer_length_in_bytes */
extern T11 T144f21(TC* ac, T0* C, T14 a1);
/* KL_DIRECTORY.readentry */
extern void T352f40(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_next */
extern T14 T352f24(TC* ac, T0* C, T14 a1);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T72f757(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.is_open_read */
extern T1 T352f23(TC* ac, T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T352f15(TC* ac, T0* C);
/* KL_DIRECTORY.open_read */
extern void T352f34(TC* ac, T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T352f39(TC* ac, T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T352f21(TC* ac, T0* C, T14 a1);
/* KL_DIRECTORY.internal_name_pointer */
extern T0* T352f20(TC* ac, T0* C);
/* KL_DIRECTORY.old_is_readable */
extern T1 T352f14(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T352f30(TC* ac, T0* C, T14 a1);
/* KL_DIRECTORY.old_exists */
extern T1 T352f13(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T352f29(TC* ac, T0* C, T14 a1);
/* KL_DIRECTORY.make */
extern void T352f33(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T352c33(TC* ac, T0* a1);
/* KL_DIRECTORY.old_make */
extern void T352f38(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make_with_name */
extern void T352f42(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.set_name */
extern void T352f43(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T352f25(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T87f79(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T87f57(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T87f55(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T87f58(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T87f236(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T219f49(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern T0* T72f585(TC* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T157c2(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T219f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T219c48(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T219f58(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T219f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_internal_cursor */
extern void T219f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T219f83(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T219f82(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T219f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T219f80(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.found_item */
extern T0* T324f31(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.found */
extern T1 T324f25(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.search */
extern void T324f57(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.force */
extern void T324f56(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_STRING_HASH_TABLE.key_storage_put */
extern void T324f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_STRING_HASH_TABLE.slots_put */
extern void T324f66(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_STRING_HASH_TABLE.clashes_put */
extern void T324f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_STRING_HASH_TABLE.resize */
extern void T324f64(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.clashes_resize */
extern void T324f72(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.special_integer_ */
extern T0* T324f48(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.key_storage_resize */
extern void T324f71(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.item_storage_resize */
extern void T324f70(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.slots_resize */
extern void T324f69(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.new_modulus */
extern T6 T324f45(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.new_capacity */
extern T6 T324f35(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.item_storage_put */
extern void T324f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_STRING_HASH_TABLE.unset_found_item */
extern void T324f62(TC* ac, T0* C);
/* UC_UTF8_STRING.starts_with */
extern T1 T834f33(TC* ac, T0* C, T0* a1);
/* UC_STRING.starts_with */
extern T1 T454f15(TC* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T91f3(TC* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.expanded_string */
extern T0* T91f5(TC* ac, T0* C, T0* a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T87f232(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T87f313(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T87f327(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T87f325(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T87f340(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T87f151(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T87f237(TC* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T87f303(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T87f302(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern T6 T87f59(TC* ac, T0* C);
/* KL_PLATFORM.maximum_integer */
extern T6 T525f1(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T87f194(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T87f301(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T10 T447f8(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T87f300(TC* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T447f5(TC* ac, T0* C, T6 a1, T10 a2);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].item */
extern T0* T824f9(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T87f299(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T87f305(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern T0* T87f152(TC* ac, T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T448c16(TC* ac, T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T448f17(TC* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T448f14(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].force */
extern void T827f60(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_put */
extern void T827f78(TC* ac, T0* C, T10 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_32].force */
extern void T825f6(TC* ac, T0* C, T0* a1, T10 a2, T6 a3);
/* SPECIAL [NATURAL_32].fill_with */
extern void T823f9(TC* ac, T0* C, T10 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].extend */
extern void T823f11(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_put */
extern void T827f77(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_put */
extern void T827f76(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_item */
extern T6 T827f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_item */
extern T6 T827f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].hash_position */
extern T6 T827f28(TC* ac, T0* C, T10 a1);
/* NATURAL_32.hash_code */
extern T6 T10f29(TC* ac, volatile T10* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].resize */
extern void T827f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_resize */
extern void T827f93(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].special_integer_ */
extern T0* T827f49(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_resize */
extern void T827f92(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].aliased_resized_area */
extern T0* T825f3(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATURAL_32].aliased_resized_area */
extern T0* T823f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_resize */
extern void T827f91(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].aliased_resized_area */
extern T0* T1507f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATURAL_64].aliased_resized_area */
extern T0* T826f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_item */
extern T10 T827f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_resize */
extern void T827f90(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_modulus */
extern T6 T827f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_capacity */
extern T6 T827f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_put */
extern void T827f65(TC* ac, T0* C, T11 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_64].force */
extern void T1507f4(TC* ac, T0* C, T0* a1, T11 a2, T6 a3);
/* SPECIAL [NATURAL_64].fill_with */
extern void T826f12(TC* ac, T0* C, T11 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].search_position */
extern void T827f61(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].unset_found_item */
extern void T827f64(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].value */
extern T11 T827f34(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_item */
extern T11 T827f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].position_of_key */
extern T6 T827f22(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].has */
extern T1 T827f33(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_map */
extern T0* T827c50(TC* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_with_equality_testers */
extern void T827f62(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_sparse_container */
extern void T827f83(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].set_internal_cursor */
extern void T827f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_cursor */
extern T0* T827f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].make */
extern T0* T828c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_slots */
extern void T827f97(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_clashes */
extern void T827f96(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_key_storage */
extern void T827f95(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].make */
extern T0* T825f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].make_empty */
extern void T823f10(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].make_empty */
extern T0* T823c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].default_create */
extern T0* T825c5(TC* ac);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_item_storage */
extern void T827f94(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].make */
extern T0* T1507f2(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].default_create */
extern T0* T1507c3(TC* ac);
/* RX_CHARACTER_SET.masks */
extern T0* T448f9(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].make_filled */
extern T0* T826c9(TC* ac, T11 a1, T6 a2);
/* RX_CHARACTER_SET.make_empty */
extern void T448f11(TC* ac, T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T448c11(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern T0* T87f167(TC* ac, T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T448f10(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item */
extern T11 T827f36(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T87f338(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T87f86(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T87f85(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T87f84(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T87f348(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T87f347(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T87f298(TC* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T10 T447f6(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T87f296(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T87f277(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T10 T447f7(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T87f54(TC* ac, T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T10 T449f4(TC* ac, T0* C, T10 a1);
/* NATURAL_32.to_integer_64 */
extern T7 T10f16(TC* ac, volatile T10* C);
/* RX_CASE_MAPPING.to_lower */
extern T10 T449f3(TC* ac, T0* C, T10 a1);
/* INTEGER_64.to_natural_32 */
extern T10 T7f6(TC* ac, volatile T7* C);
/* INTEGER_64.is_greater_equal */
extern T1 T7f5(TC* ac, volatile T7* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_subject */
extern void T87f345(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T87f326(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T87f341(TC* ac, T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T87f70(TC* ac, T0* C);
/* ET_C_GENERATOR.execution_environment */
extern T0* T72f166(TC* ac, T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T72f165(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T87f312(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T150f17(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.current_system */
extern T0* T72f379(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T87f311(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T87f324(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T87f310(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T87f310p1(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T87f323(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T87f235(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T10 T87f189(TC* ac, T0* C, T10 a1, T10 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T10 T87f234(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T87f322(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T87f233(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T10 T87f149(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T10 T87f132(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T10 T87f130(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T10 T87f128(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T87f321(TC* ac, T0* C, T10 a1, T1 a2, T1 a3, T7 a4);
/* RX_BYTE_CODE.set_count */
extern void T447f15(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T87f64(TC* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T447f14(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T87f339(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern T0* T87f148(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern T6 T87f147(TC* ac, T0* C);
/* RX_BYTE_CODE.append_character */
extern void T447f16(TC* ac, T0* C, T10 a1);
/* RX_BYTE_CODE.put_character */
extern void T447f22(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T447f21(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].aliased_resized_area_with_default */
extern T0* T825f2(TC* ac, T0* C, T0* a1, T10 a2, T6 a3);
/* SPECIAL [NATURAL_32].aliased_resized_area_with_default */
extern T0* T823f4(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.special_natural_32_ */
extern T0* T447f9(TC* ac, T0* C);
/* INTEGER_64.is_less_equal */
extern T1 T7f10(TC* ac, volatile T7* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T7 T87f141(TC* ac, T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T10 T87f224(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern T0* T87f249(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T10 T87f223(TC* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer_32 */
extern T6 T7f14(TC* ac, volatile T7* C);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T7 T87f218(TC* ac, T0* C, T10 a1);
/* INTEGER_64.is_greater */
extern T1 T7f7(TC* ac, volatile T7* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T10 T87f135(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T87f337(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T10 T87f133(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T10 T87f131(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T10 T87f129(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T10 T87f110(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T87f344(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T7 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T447f20(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T447f19(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T447f18(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T87f346(TC* ac, T0* C, T10 a1, T6 a2, T6 a3, T6 a4, T10 a5, T10 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T87f343(TC* ac, T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T447f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].force_last */
extern void T824f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].force */
extern void T1499f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_CHARACTER_SET].fill_with */
extern void T453f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_CHARACTER_SET].extend */
extern void T453f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].resize */
extern void T824f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].aliased_resized_area */
extern T0* T1499f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [RX_CHARACTER_SET].aliased_resized_area */
extern T0* T453f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].new_capacity */
extern T6 T824f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].extendible */
extern T1 T824f7(TC* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.set_negated */
extern void T448f15(TC* ac, T0* C, T1 a1);
/* RX_CHARACTER_SET.add_set */
extern void T448f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].wipe_out */
extern void T827f59(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_wipe_out */
extern void T827f82(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_wipe_out */
extern void T827f81(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_wipe_out */
extern void T827f80(TC* ac, T0* C);
/* SPECIAL [NATURAL_32].keep_head */
extern void T823f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].set_count */
extern void T823f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_wipe_out */
extern void T827f79(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].keep_head */
extern void T826f14(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].set_count */
extern void T826f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].move_all_cursors_after */
extern void T827f67(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_next_cursor */
extern void T828f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_after */
extern void T828f13(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].forth */
extern void T828f11(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_forth */
extern void T827f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].add_traversing_cursor */
extern void T827f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_position */
extern void T828f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove_traversing_cursor */
extern void T827f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].force_new */
extern void T827f58(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].replace_found_item */
extern void T827f57(TC* ac, T0* C, T11 a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].item */
extern T11 T828f6(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_item */
extern T11 T827f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].found_item */
extern T11 T827f32(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].found */
extern T1 T827f31(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].search */
extern void T827f56(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].key */
extern T10 T828f7(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_key */
extern T10 T827f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].after */
extern T1 T828f4(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_iterator */
extern T0* T827f23(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].start */
extern void T828f12(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_start */
extern void T827f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_off */
extern T1 T827f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].off */
extern T1 T828f9(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].forth */
extern void T827f53(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove */
extern void T827f55(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove_position */
extern void T827f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_keep_head */
extern void T827f89(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_keep_head */
extern void T827f88(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].move_cursors_forth */
extern void T827f87(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].internal_set_key_equality_tester */
extern void T827f86(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_for_iteration */
extern T10 T827f30(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].after */
extern T1 T827f25(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_after */
extern T1 T827f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].start */
extern void T827f51(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].copy */
extern void T827f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].copy */
extern void T827f54p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_clashes */
extern void T827f73(TC* ac, T0* C);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T132f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T132f17(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_slots */
extern void T827f72(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_key_storage */
extern void T827f71(TC* ac, T0* C);
/* SPECIAL [NATURAL_32].resized_area */
extern T0* T823f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].copy_data */
extern void T823f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [NATURAL_32].force */
extern void T823f16(TC* ac, T0* C, T10 a1, T6 a2);
/* SPECIAL [NATURAL_32].move_data */
extern void T823f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].overlapping_move */
extern void T823f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].non_overlapping_move */
extern void T823f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_item_storage */
extern void T827f70(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].resized_area */
extern T0* T826f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].copy_data */
extern void T826f15(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [NATURAL_64].force */
extern void T826f18(TC* ac, T0* C, T11 a1, T6 a2);
/* SPECIAL [NATURAL_64].move_data */
extern void T826f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_64].overlapping_move */
extern void T826f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_64].non_overlapping_move */
extern void T826f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].valid_cursor */
extern T1 T827f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].twin */
extern T0* T827f48(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].is_empty */
extern T1 T827f41(TC* ac, T0* C);
/* RX_CHARACTER_SET.add_negated_set */
extern void T448f12(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].replace */
extern void T827f52(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_for_iteration */
extern T11 T827f27(TC* ac, T0* C);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T452f4(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern T0* T87f159(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern T0* T87f76(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern T0* T87f248(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern T0* T87f247(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern T0* T87f246(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern T0* T87f245(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern T0* T87f244(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern T0* T87f243(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern T0* T87f242(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern T0* T87f241(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern T0* T87f239(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T87f157(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern T0* T87f240(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T87f155(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T87f88(TC* ac, T0* C, T6 a1, T7 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T87f342(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T87f61(TC* ac, T0* C, T10 a1);
/* RX_BYTE_CODE.append_integer */
extern void T447f13(TC* ac, T0* C, T10 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T447f12(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T87f320(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T87f319(TC* ac, T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T447f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].wipe_out */
extern void T824f11(TC* ac, T0* C);
/* SPECIAL [RX_CHARACTER_SET].keep_head */
extern void T453f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [RX_CHARACTER_SET].set_count */
extern void T453f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].move_all_cursors_after */
extern void T824f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].set_next_cursor */
extern void T1500f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].set_after */
extern void T1500f6(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T87f318(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T87f318p1(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T87c309(TC* ac);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make_filled */
extern T0* T402f2(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T87f309p1(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T87f317(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T87f336(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T87f335(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T87f334(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T87f333(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T87f332(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T87f331(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T87f330(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T87f329(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T87f328(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T87f316(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T87f315(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern T0* T87f75(TC* ac, T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T449c6(TC* ac, T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T449f8(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T449f7(TC* ac, T0* C);
/* RX_CASE_MAPPING.clear */
extern void T449f9(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [NATURAL_32].make_filled */
extern T0* T825f1(TC* ac, T0* C, T10 a1, T6 a2);
/* SPECIAL [NATURAL_32].make_filled */
extern T0* T823c7(TC* ac, T10 a1, T6 a2);
/* RX_CASE_MAPPING.special_natural_32_ */
extern T0* T449f5(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T87f314(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T87f314p1(TC* ac, T0* C);
/* STRING_32.wipe_out */
extern void T18f26(TC* ac, T0* C);
/* STRING_32.twin */
extern T0* T18f8(TC* ac, T0* C);
/* STRING_32.copy */
extern void T18f33(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].resized_area */
extern T0* T16f6(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern T0* T87f74(TC* ac, T0* C);
/* RX_BYTE_CODE.make */
extern T0* T447c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].make */
extern T0* T824c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].set_internal_cursor */
extern void T824f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].new_cursor */
extern T0* T824f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].make */
extern T0* T1500c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].make */
extern T0* T1499f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [RX_CHARACTER_SET].make_empty */
extern T0* T453c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].default_create */
extern T0* T1499c3(TC* ac);
/* ET_C_GENERATOR.c_config */
extern T0* T72f164(TC* ac, T0* C);
/* UT_CONFIG_PARSER.parse_file */
extern void T514f185(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T514f189(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T514f202(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T514f201(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T573f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ANY].fill_with */
extern void T574f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ANY].extend */
extern void T574f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T573f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T574f4(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T514f200(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].force */
extern void T596f4(TC* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area */
extern T0* T596f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].aliased_resized_area */
extern T0* T133f4(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T514f140(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T219f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T219f87(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.process_include */
extern void T514f214(TC* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1423c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].put */
extern void T1421f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].force */
extern void T1783f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [YY_BUFFER].fill_with */
extern void T1782f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [YY_BUFFER].extend */
extern void T1782f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].put */
extern void T1002f9(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T514f166(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_full */
extern T1 T1421f5(TC* ac, T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T514f213(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove */
extern void T219f88(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_position */
extern void T219f89(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_keep_head */
extern void T219f93(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_keep_head */
extern void T219f92(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_forth */
extern void T219f91(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].internal_set_key_equality_tester */
extern void T219f90(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T514f137(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T514f199(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.accept */
extern void T514f198(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T514f196(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T514f212(TC* ac, T0* C, T0* a1);
extern T1 T514f212ot1(TC* ac, T0* a1);
/* UT_SYNTAX_ERROR.make */
extern T0* T1422c8(TC* ac, T0* a1, T6 a2);
/* KL_STDIN_FILE.name */
extern T0* T996f6(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T958f26(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern T0* T1539f6(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.name */
extern T0* T42f4(TC* ac, T0* C);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T514f211(TC* ac, T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T514f195(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T514f210(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T514f219(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.item */
extern T2 T1510f9(TC* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T995f22(TC* ac, T0* C, T1 a1);
/* YY_BUFFER.set_beginning_of_line */
extern void T997f16(TC* ac, T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T514f165(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T514f159(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T1510f3(TC* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T514f158(TC* ac, T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T514f154(TC* ac, T0* C);
/* UT_CONFIG_PARSER.text */
extern T0* T514f153(TC* ac, T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T514f217(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T514f209(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T514f218(TC* ac, T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T514f132(TC* ac, T0* C);
extern T1 T514f132ot1(TC* ac, T0* a1);
/* KL_STDIN_FILE.close */
extern void T996f13(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T958f38(TC* ac, T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T996f5(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T958f27(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T42f39(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].remove */
extern void T1421f10(TC* ac, T0* C);
/* SPECIAL [YY_BUFFER].keep_head */
extern void T1782f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].set_count */
extern void T1782f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T1002f11(TC* ac, T0* C);
/* SPECIAL [INTEGER_32].keep_head */
extern void T132f14(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].set_count */
extern void T132f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T1002f5(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].item */
extern T0* T1421f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_empty */
extern T1 T1421f6(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T514f208(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T514f205(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T1510f6(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.as_unicode_special */
extern T0* T1510f5(TC* ac, T0* C);
/* YY_FILE_BUFFER.fill */
extern void T995f21(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T1510f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.read_to_string */
extern T6 T996f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f83(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* CONSOLE.read_stream */
extern void T983f32(TC* ac, T0* C, T6 a1);
/* CONSOLE.read_stream_thread_aware */
extern void T983f34(TC* ac, T0* C, T6 a1);
/* C_STRING.read_string_into */
extern void T30f15(TC* ac, T0* C, T0* a1);
/* CONSOLE.console_readstream */
extern T6 T983f18(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* CONSOLE.read_data_buffer */
extern T0* T983f17(TC* ac, T0* C);
/* KL_STDIN_FILE.any_ */
extern T0* T996f10(TC* ac, T0* C);
/* CONSOLE.end_of_file */
extern T1 T983f12(TC* ac, T0* C);
/* CONSOLE.console_eof */
extern T1 T983f14(TC* ac, T0* C, T14 a1);
/* KL_STDIN_FILE.console */
extern T0* T996f7(TC* ac, T0* C);
/* STD_FILES.input */
extern T0* T464f4(TC* ac, T0* C);
/* CONSOLE.make_open_stdin */
extern T0* T983c30(TC* ac, T0* a1);
/* CONSOLE.set_read_mode */
extern void T983f33(TC* ac, T0* C);
/* KL_STDIN_FILE.io */
extern T0* T996f9(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T958f28(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T958f28p1(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1539f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1539f10(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T42f38(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern T0* T42f48(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.make */
extern T0* T1510c11(TC* ac, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T42f37(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T42f45(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f8(TC* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T42f46(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.put */
extern void T1510f12(TC* ac, T0* C, T2 a1, T6 a2);
/* KL_STDIN_FILE.last_character */
extern T2 T996f2(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T958f19(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1685f4(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.last_character */
extern T2 T42f6(TC* ac, T0* C);
/* KL_STDIN_FILE.end_of_file */
extern T1 T996f1(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T958f18(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T42f34(TC* ac, T0* C);
/* KL_STDIN_FILE.read_character */
extern void T996f14(TC* ac, T0* C);
/* CONSOLE.read_character */
extern void T983f31(TC* ac, T0* C);
/* CONSOLE.console_readchar */
extern T2 T983f15(TC* ac, T0* C, T14 a1);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T958f32(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1685f6(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1685f8(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T958f34(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T958f36(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T958f37(TC* ac, T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1685f7(TC* ac, T0* C, T2 a1);
/* DS_LINKABLE [CHARACTER_8].put_right */
extern void T1962f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [CHARACTER_8].make */
extern T0* T1962c3(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T459f58(TC* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.append_natural_32_code_to_utf8 */
extern void T459f57(TC* ac, T0* C, T0* a1, T10 a2);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T958f22(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T958f17(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern T0* T958f25(TC* ac, T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1686f7(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1686f6(TC* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1686f5(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1686f4(TC* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1686f3(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern T0* T958f20(TC* ac, T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1686c16(TC* ac);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T958f24(TC* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T958f23(TC* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T958f35(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T958f33(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T459f42(TC* ac, T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T459f44(TC* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1686f2(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1686f1(TC* ac, T0* C, T6 a1, T6 a2);
/* YY_FILE_BUFFER.compact_left */
extern void T995f24(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T1510f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.resize */
extern void T995f26(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T1510f14(TC* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern T6 T995f13(TC* ac, T0* C);
/* YY_BUFFER.fill */
extern void T997f14(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T995f19(TC* ac, T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T997f13(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T514f131(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T514f130(TC* ac, T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T514f207(TC* ac, T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T86c8(TC* ac, T0* a1);
/* UT_CONFIG_PARSER.report_invalid_unicode_character_error */
extern void T514f206(TC* ac, T0* C, T10 a1);
/* NATURAL_32.to_hex_string */
extern T0* T10f28(TC* ac, volatile T10* C);
/* NATURAL_32.to_hex_character */
extern T2 T10f30(TC* ac, volatile T10* C);
/* KL_CHARACTER_BUFFER.item_code */
extern T10 T1510f4(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_at_beginning_of_line */
extern T6 T514f99(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].force */
extern void T402f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area */
extern T0* T402f4(TC* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T514f105(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T514f194(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T514f203(TC* ac, T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T514f215(TC* ac, T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T514f220(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T514f221(TC* ac, T0* C);
/* SPECIAL [BOOLEAN].keep_head */
extern void T133f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].set_count */
extern void T133f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].keep_head */
extern void T574f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].set_count */
extern void T574f9(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.abort */
extern void T514f197(TC* ac, T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T514f188(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T514f193(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T995f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_BUFFER.set_position */
extern void T997f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T514f104(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T995c18(TC* ac, T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T995f17(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T995c17(TC* ac, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T995f23(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.set_file_with_size */
extern void T995f25(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.flush */
extern void T995f27(TC* ac, T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T995f15(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T72f568(TC* ac, T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T514f184(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T514c183(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T1002c8(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T402f3(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].make */
extern T0* T1421c8(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].make */
extern T0* T1783f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].make_empty */
extern T0* T1782c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].default_create */
extern T0* T1783c2(TC* ac);
/* UT_CONFIG_PARSER.string_equality_tester */
extern T0* T514f97(TC* ac, T0* C);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T514f187(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T514f192(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern T0* T514f82(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T514f178(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T402f5(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern T0* T514f139(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern T0* T514f138(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern T0* T514f136(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern T0* T514f133(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern T0* T514f127(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern T0* T514f126(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern T0* T514f123(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern T0* T514f119(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern T0* T514f116(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T514f223(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yyarray_subcopy */
extern void T514f225(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T959f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T312f17(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UT_CONFIG_PARSER.integer_array_ */
extern T0* T514f182(TC* ac, T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T959c2(TC* ac);
/* UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T514f222(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T514f191(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T596f1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T596c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T573f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].make_empty */
extern T0* T574c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T573c3(TC* ac);
/* UT_CONFIG_PARSER.make_scanner */
extern void T514f186(TC* ac, T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T514f190(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T514f204(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T514f204p1(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T514f216(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern T0* T514f173(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T514f181(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern T0* T514f172(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern T0* T514f171(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T514f224(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_array_subcopy */
extern void T514f226(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* UT_CONFIG_PARSER.yy_def_template */
extern T0* T514f170(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern T0* T514f169(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern T0* T514f168(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern T0* T514f167(TC* ac, T0* C);
/* UT_CONFIG_PARSER.empty_buffer */
extern T0* T514f83(TC* ac, T0* C);
/* YY_BUFFER.make */
extern T0* T997c12(TC* ac, T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T997f17(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T1510f15(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_CHARACTER_BUFFER.fill_from_substring */
extern void T1510f17(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_BUFFER.new_default_buffer */
extern T0* T997f11(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.put_new */
extern void T324f59(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_STRING_HASH_TABLE.set_key_equality_tester */
extern void T324f58(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.make_map */
extern T0* T324c55(TC* ac, T6 a1);
/* DS_STRING_HASH_TABLE.make_with_equality_testers */
extern void T324f61(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_STRING_HASH_TABLE.make_sparse_container */
extern void T324f68(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.set_internal_cursor */
extern void T324f77(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.new_cursor */
extern T0* T324f47(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.make_slots */
extern void T324f76(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_clashes */
extern void T324f75(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_key_storage */
extern void T324f74(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_item_storage */
extern void T324f73(TC* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.right_adjust */
extern void T88f26(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T88f25(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T834f85(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T834f104(TC* ac, T0* C, T6 a1);
/* UC_STRING.remove_head */
extern void T454f107(TC* ac, T0* C, T6 a1);
/* UC_STRING.keep_tail */
extern void T454f110(TC* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T130f3(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T129f3(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.generate_c_code */
extern void T72f636(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern T0* T72f325(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T241c49(TC* ac, T0* a1, T0* a2, T0* a3);
extern T1 T241f49ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T1577f46(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T637f7(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T258f74(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T1576f46(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T1574f31(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T1573f57(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T522f34(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T394f33(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T392f32(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T382f32(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T383f31(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T524f31(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T518f37(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_set_reference_field_feature */
extern void T68f112(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.use_all_attributes */
extern void T68f113(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T496f82(TC* ac, T0* C, T0* a1);
extern T1 T496f82ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T496f40(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T258f34(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T258f53(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T78c1563(TC* ac);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T496f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_function */
extern void T496f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T496f33(TC* ac, T0* C);
/* ET_CLASS.is_basic */
extern T1 T79f186(TC* ac, T0* C);
/* ET_CLASS_CODES.is_basic */
extern T1 T439f34(TC* ac, T0* C, T8 a1);
/* ET_CLASS.class_codes */
extern T0* T79f126(TC* ac, T0* C);
/* ET_CLASS_CODES.default_create */
extern T0* T439c35(TC* ac);
/* ET_DYNAMIC_PRECURSOR.is_builtin_any_is_equal */
extern T1 T327f37(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_any_is_equal */
extern T1 T241f26(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once_per_object */
extern T1 T327f24(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_object */
extern T1 T1577f55(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_object */
extern T1 T524f47(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_object */
extern T1 T1576f34(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T1917f3(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T1917f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T1917f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.value */
extern T0* T1547f1(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.value */
extern T0* T1546f1(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.value */
extern T0* T1545f1(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T1917f9(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T1283f7(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T1547f17(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T1546f17(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T1545f16(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.item */
extern T0* T1283f8(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.standard_once_keys */
extern T0* T1576f33(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T1917c13(TC* ac);
/* ET_DO_PROCEDURE.is_once_per_object */
extern T1 T518f51(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_object */
extern T1 T258f71(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_object */
extern T1 T1574f33(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_object */
extern T1 T1573f58(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.standard_once_keys */
extern T0* T1573f39(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_object */
extern T1 T522f53(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_object */
extern T1 T394f50(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_object */
extern T1 T392f48(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_object */
extern T1 T382f47(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_object */
extern T1 T383f48(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_object */
extern T1 T241f45(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T229f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].force */
extern void T639f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].fill_with */
extern void T638f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].extend */
extern void T638f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern T0* T229f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T639c3(TC* ac);
/* ET_DYNAMIC_FEATURE_LIST.resize */
extern void T229f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T639f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T638f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T229f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T229f6(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T496f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T235f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T76f127(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T58f202(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T58f212(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T58f215(TC* ac, T0* C, T1 a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T842c13(TC* ac);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T41f202(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T41f212(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_internal_error */
extern void T41f215(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T76f85(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T76f115(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T76f125(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_dynamic_types */
extern void T76f126(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T1529f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T281f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T523f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T2094f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T2093f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T334f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T337f15(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1529f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T281f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T523f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1425f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T496f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T495f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T323f86(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T338f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.propagate_can_be_void */
extern void T228f84(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.propagate_can_be_void */
extern void T342f31(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T2094f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T2094f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T235f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T76f576(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T76f138(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_primary_type */
extern T1 T496f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T287f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T287f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T287f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T496f24(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T495f23(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T323f20(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T338f20(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.hash_code */
extern T6 T228f18(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T287f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T287f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T287f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_equality_tester */
extern T0* T287f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T287f22(TC* ac, T0* C, T6 a1);
/* ET_CLASS.is_none */
extern T1 T79f183(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_none */
extern T1 T860f41(TC* ac, T0* C);
/* ET_NONE_GROUP.is_none */
extern T1 T492f5(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T435f11(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_primary_type */
extern T1 T495f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_primary_type */
extern T1 T323f31(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_primary_type */
extern T1 T338f31(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.conforms_to_primary_type */
extern T1 T228f38(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T327f56(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T241f52(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T328f3(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T235f12(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T68f77(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T235f27(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T496f41(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS.seeded_query */
extern T0* T79f187(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T262f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T495f41(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_function */
extern void T495f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T495f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.register_feature_seeds */
extern void T495f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_IDS.item */
extern T6 T637f6(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.other_seeds */
extern T0* T1577f7(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.other_seeds */
extern T0* T258f7(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.other_seeds */
extern T0* T1576f8(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.other_seeds */
extern T0* T1574f7(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.other_seeds */
extern T0* T1573f8(TC* ac, T0* C);
/* ET_DO_FUNCTION.other_seeds */
extern T0* T522f10(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.other_seeds */
extern T0* T394f8(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.other_seeds */
extern T0* T392f7(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.other_seeds */
extern T0* T382f6(TC* ac, T0* C);
/* ET_ATTRIBUTE.other_seeds */
extern T0* T383f6(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.other_seeds */
extern T0* T524f6(TC* ac, T0* C);
/* ET_DO_PROCEDURE.other_seeds */
extern T0* T518f10(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].force_last */
extern void T635f34(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_put */
extern void T635f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_put */
extern void T635f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_put */
extern void T635f40(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_item */
extern T6 T635f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].hash_position */
extern T6 T635f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].resize */
extern void T635f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_resize */
extern void T635f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].special_integer_ */
extern T0* T635f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_resize */
extern void T635f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_resize */
extern void T635f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_item */
extern T6 T635f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_item */
extern T6 T635f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_resize */
extern void T635f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_modulus */
extern T6 T635f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_capacity */
extern T6 T635f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_put */
extern void T635f38(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].search_position */
extern void T635f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].unset_found_item */
extern void T635f36(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.first_seed */
extern T6 T1577f1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.first_seed */
extern T6 T1576f1(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.first_seed */
extern T6 T524f5(TC* ac, T0* C);
/* ET_DO_PROCEDURE.first_seed */
extern T6 T518f8(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T495f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T323f42(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_function */
extern void T323f77(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T323f76(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.register_feature_seeds */
extern void T323f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T323f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_reference_item */
extern void T235f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_reference_item */
extern void T76f129(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_basic */
extern T1 T342f12(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.base_class */
extern T0* T342f13(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T267f4(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T188f51(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.string_ */
extern T0* T188f55(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern T0* T78f101(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T323f32(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T241f25(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T258f55(TC* ac, T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T188f52(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T1574f41(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T1573f43(TC* ac, T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T522f40(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T394f59(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T392f57(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.name */
extern T0* T382f56(TC* ac, T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T383f58(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T323f27p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T338f40(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_function */
extern void T338f79(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T338f78(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.register_feature_seeds */
extern void T338f77(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T338f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T241f57(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_builtin_special_item */
extern T1 T241f22(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T338f27p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_query */
extern T0* T228f48(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.put_function */
extern void T228f77(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_attribute */
extern void T228f76(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.register_feature_seeds */
extern void T228f74(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.new_dynamic_query */
extern T0* T228f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T495f33(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T323f29(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T338f29(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_basic */
extern T1 T228f47(TC* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T2093f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T2093f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T334f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T334f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T235f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T76f567(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f567ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T76f572(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T267f3(TC* ac, T0* C, T6 a1);
/* ET_INFIX_OR_ELSE_OPERATOR.seed */
extern T6 T1605f3(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.seed */
extern T6 T1604f3(TC* ac, T0* C);
/* ET_FREE_OPERATOR.seed */
extern T6 T1040f6(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.seed */
extern T6 T1048f4(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.seed */
extern T6 T1061f4(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.seed */
extern T6 T2031f1(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.seed */
extern T6 T656f4(TC* ac, T0* C);
/* ET_IDENTIFIER.seed */
extern T6 T188f1(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T2102f1(TC* ac, T0* C);
/* ET_CALL_AGENT.name */
extern T0* T1108f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.name */
extern T0* T1608f2(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.name */
extern T0* T1603f3(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.name */
extern T0* T945f2(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.name */
extern T0* T1105f3(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T298f8(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T334f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T334f21p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T334f21p1ot1(TC* ac, T0* a1);
extern T1 T334f21p1ot2(TC* ac, T0* a1);
extern T1 T334f21p1ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T1529f20(TC* ac, T0* C, T0* a1);
extern T1 T1529f20ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.force_last */
extern void T280f21(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T441f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].fill_with */
extern void T440f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].extend */
extern void T440f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.fixed_array */
extern T0* T280f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].default_create */
extern T0* T441c3(TC* ac);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.hash_position */
extern T6 T280f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.modulus */
extern T6 T280f14(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.resize */
extern void T280f18(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.special_integer_ */
extern T0* T280f7(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T441f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T440f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.new_modulus */
extern T6 T280f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.new_capacity */
extern T6 T280f15(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.capacity */
extern T6 T280f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.put_last */
extern void T280f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.append_last */
extern void T280f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T1529f12(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.make_with_capacity */
extern T0* T280c17(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T441f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].make_empty */
extern T0* T440c5(TC* ac, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1529f9(TC* ac, T0* C, T0* a1);
extern T1 T1529f9ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1529f9p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1529f11(TC* ac, T0* C, T0* a1);
extern T1 T1529f11ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1529f11p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.index_of */
extern T6 T342f24(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T496f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T495f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T323f61(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T338f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.index_of */
extern T6 T228f60(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.index_of */
extern T6 T280f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.has_type */
extern T1 T280f13(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.has_type */
extern T1 T342f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T496f39(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T495f39(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T323f41(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T338f42(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.has_type */
extern T1 T228f29(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.dynamic_type */
extern T0* T280f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SECONDARY_TYPE.dynamic_type */
extern T0* T342f18(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T496f36(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T495f36(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T323f38(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T338f39(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_type */
extern T0* T228f64(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.count */
extern T6 T280f1(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.count */
extern T6 T342f17(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T496f35(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T495f35(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T323f37(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T338f38(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.count */
extern T6 T228f63(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.conforms_to_type */
extern T1 T342f8(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T259f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T486f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T1072f38(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T1072f14(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T1072f16(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T1072f13(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_detachable_mark */
extern T1 T1061f76(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_question_mark */
extern T1 T1061f19(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T1061f22(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_detachable */
extern T1 T1061f18(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T656f11(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T656f24(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T656f8(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable */
extern T1 T656f23(TC* ac, T0* C);
/* ET_SYMBOL.is_detachable_mark */
extern T1 T655f59(TC* ac, T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T655f72(TC* ac, T0* C);
/* ET_SYMBOL.tokens */
extern T0* T655f56(TC* ac, T0* C);
/* ET_SYMBOL.is_detachable */
extern T1 T655f71(TC* ac, T0* C);
/* ET_KEYWORD.is_detachable_mark */
extern T1 T438f9(TC* ac, T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T438f18(TC* ac, T0* C);
/* ET_KEYWORD.is_detachable */
extern T1 T438f17(TC* ac, T0* C);
/* ET_KEYWORD.tokens */
extern T0* T438f22(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_detachable_mark */
extern T1 T322f5(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T486f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T1072f25(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T1072f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T1072f11(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attached_mark */
extern T1 T1061f26(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bang */
extern T1 T1061f17(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attached */
extern T1 T1061f16(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T656f10(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T656f22(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached */
extern T1 T656f21(TC* ac, T0* C);
/* ET_SYMBOL.is_attached_mark */
extern T1 T655f58(TC* ac, T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T655f70(TC* ac, T0* C);
/* ET_SYMBOL.is_attached */
extern T1 T655f69(TC* ac, T0* C);
/* ET_KEYWORD.is_attached_mark */
extern T1 T438f21(TC* ac, T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T438f12(TC* ac, T0* C);
/* ET_KEYWORD.is_attached */
extern T1 T438f11(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attached_mark */
extern T1 T322f3(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_attached */
extern T1 T259f23(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T486f6(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attachment_mark */
extern T1 T1061f13(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T656f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T1072f20(TC* ac, T0* C);
/* ET_SYMBOL.is_attachment_mark */
extern T1 T655f57(TC* ac, T0* C);
/* ET_KEYWORD.is_attachment_mark */
extern T1 T438f7(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T322f8(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T77f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T77f14(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_reference_mark */
extern T1 T1061f8(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_reference */
extern T1 T1061f24(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T656f15(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T656f27(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T1072f7(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T1072f18(TC* ac, T0* C);
/* ET_SYMBOL.is_reference_mark */
extern T1 T655f64(TC* ac, T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T655f76(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T486f7(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_reference */
extern T1 T486f13(TC* ac, T0* C);
/* ET_KEYWORD.is_reference_mark */
extern T1 T438f8(TC* ac, T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T438f16(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_reference_mark */
extern T1 T322f4(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expanded_mark */
extern T1 T1061f7(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expanded */
extern T1 T1061f23(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T656f14(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T656f26(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T1072f6(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T1072f17(TC* ac, T0* C);
/* ET_SYMBOL.is_expanded_mark */
extern T1 T655f63(TC* ac, T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T655f75(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T486f3(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expanded */
extern T1 T486f10(TC* ac, T0* C);
/* ET_KEYWORD.is_expanded_mark */
extern T1 T438f4(TC* ac, T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T438f13(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expanded_mark */
extern T1 T322f1(TC* ac, T0* C);
/* ET_CLASS.is_expanded */
extern T1 T79f172(TC* ac, T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T79f92(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_attached */
extern T1 T77f16(TC* ac, T0* C);
/* ET_CLASS.is_type_attached_with_type_mark */
extern T1 T79f173(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_attached */
extern T1 T79f93(TC* ac, T0* C);
/* ET_CLASS.current_system */
extern T0* T79f100(TC* ac, T0* C);
/* ET_ECF_LIBRARY.current_system */
extern T0* T191f11(TC* ac, T0* C);
/* ET_SYSTEM.current_system */
extern T0* T45f6(TC* ac, T0* C);
/* ET_ECF_SYSTEM.current_system */
extern T0* T63f13(TC* ac, T0* C);
/* ET_ECF_LIBRARY.implicit_attachment_type_mark */
extern T0* T191f16(TC* ac, T0* C);
/* ET_SYSTEM.implicit_attachment_type_mark */
extern T0* T45f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM.implicit_attachment_type_mark */
extern T0* T63f18(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.type_mark */
extern T0* T496f51(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T496f60(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.type_mark */
extern T0* T495f51(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T495f60(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.type_mark */
extern T0* T342f3(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.type_mark */
extern T0* T338f54(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T338f32(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.type_mark */
extern T0* T323f52(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.type_mark */
extern T0* T228f53(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.tokens */
extern T0* T228f36(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T496f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T495f56(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T323f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T338f66(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.conforms_to_type */
extern T1 T228f39(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T327f30(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T286f4(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.index */
extern T6 T2046f3(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.index */
extern T6 T2048f1(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.index */
extern T6 T1620f5(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.index */
extern T6 T2102f2(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.index */
extern T6 T2101f3(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.index */
extern T6 T2100f1(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.index */
extern T6 T1072f3(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.index */
extern T6 T395f6(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.index */
extern T6 T1551f1(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.index */
extern T6 T1550f1(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.index */
extern T6 T1549f1(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.index */
extern T6 T1548f1(TC* ac, T0* C);
/* ET_VERBATIM_STRING.index */
extern T6 T1547f2(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.index */
extern T6 T1546f2(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.index */
extern T6 T1544f1(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.index */
extern T6 T347f1(TC* ac, T0* C);
/* ET_OBJECT_TEST.index */
extern T6 T332f1(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.index */
extern T6 T1618f1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.index */
extern T6 T1617f1(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.index */
extern T6 T1616f1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.index */
extern T6 T1615f1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.index */
extern T6 T1614f1(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.index */
extern T6 T1613f1(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.index */
extern T6 T1612f1(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.index */
extern T6 T1611f1(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.index */
extern T6 T1610f1(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.index */
extern T6 T1609f1(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.index */
extern T6 T1608f1(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.index */
extern T6 T1607f1(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.index */
extern T6 T1606f1(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.index */
extern T6 T1603f1(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.index */
extern T6 T1602f1(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.index */
extern T6 T1601f1(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.index */
extern T6 T1600f1(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.index */
extern T6 T1599f1(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.index */
extern T6 T1598f1(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.index */
extern T6 T1558f1(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.index */
extern T6 T1557f1(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.index */
extern T6 T1556f1(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.index */
extern T6 T1555f1(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.index */
extern T6 T1553f2(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.index */
extern T6 T1552f2(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.index */
extern T6 T1545f2(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.index */
extern T6 T1343f1(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.index */
extern T6 T1340f1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.index */
extern T6 T1327f1(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.index */
extern T6 T1305f1(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.index */
extern T6 T1277f1(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.index */
extern T6 T1250f1(TC* ac, T0* C);
/* ET_IF_EXPRESSION.index */
extern T6 T1234f1(TC* ac, T0* C);
/* ET_CALL_AGENT.index */
extern T6 T1108f1(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.index */
extern T6 T1105f1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.index */
extern T6 T1075f1(TC* ac, T0* C);
/* ET_VOID.index */
extern T6 T1064f1(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.index */
extern T6 T791f1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.index */
extern T6 T686f1(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.index */
extern T6 T676f1(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.index */
extern T6 T361f2(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.index */
extern T6 T305f5(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.index */
extern T6 T298f2(TC* ac, T0* C);
/* ET_CURRENT.index */
extern T6 T293f1(TC* ac, T0* C);
/* ET_RESULT.index */
extern T6 T266f1(TC* ac, T0* C);
/* ET_IDENTIFIER.index */
extern T6 T188f2(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T241f33(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T305f6(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T2048f13(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T2102f11(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T2101f12(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T2100f10(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T1551f9(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T1550f9(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T1549f9(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T1548f9(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T395f17(TC* ac, T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T1547f11(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T1546f11(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T1544f9(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.expression_item */
extern T0* T1612f4(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.expression_item */
extern T0* T1327f18(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.expression_item */
extern T0* T1075f22(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T1611f11(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T791f7(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression_item */
extern T0* T1610f13(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T1599f4(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T686f8(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1618f16(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1617f18(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1616f18(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1615f38(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1614f44(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1613f41(TC* ac, T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T1108f9(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T1343f10(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T1277f10(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T1305f9(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T1105f8(TC* ac, T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T332f14(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T1609f4(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T1608f20(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T1607f9(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T1606f8(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T676f8(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T1603f8(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T1602f4(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T1601f4(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T1600f4(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T1598f12(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T1340f8(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.expression_item */
extern T0* T1250f8(TC* ac, T0* C);
/* ET_IF_EXPRESSION.expression_item */
extern T0* T1234f9(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T347f15(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T1558f12(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T1557f12(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T1556f16(TC* ac, T0* C);
/* ET_VOID.expression_item */
extern T0* T1064f16(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T1555f16(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T1553f13(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T1552f13(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T1545f32(TC* ac, T0* C);
/* ET_RESULT.expression_item */
extern T0* T266f8(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T298f12(TC* ac, T0* C);
/* ET_CURRENT.expression_item */
extern T0* T293f10(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T305f15(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.expression_item */
extern T0* T361f7(TC* ac, T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T188f54(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.item */
extern T0* T305f12(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T2048f16(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.actual_argument */
extern T0* T361f17(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T2102f16(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T2101f17(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T2100f15(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T2045f8(TC* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T1092f7(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T2048f18(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.agent_actual_argument */
extern T0* T361f19(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T2102f18(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T2101f19(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T2100f17(TC* ac, T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T188f104(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1551f47(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1550f47(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1549f47(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1548f47(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T395f37(TC* ac, T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T1547f38(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T1546f34(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1544f33(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.agent_actual_argument */
extern T0* T1612f20(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.agent_actual_argument */
extern T0* T1327f34(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T1075f35(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T1611f22(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T791f24(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T1610f27(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T1599f20(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T686f23(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T1620f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1618f34(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1617f40(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1616f36(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1615f35(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1614f41(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1613f37(TC* ac, T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T1108f26(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T1343f27(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T305f27(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T1277f27(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T1305f22(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T1105f24(TC* ac, T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T332f22(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T1609f20(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T1608f25(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T1607f21(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T1606f22(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T676f20(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T1603f25(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T1602f20(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T1601f20(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T1600f20(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T1598f24(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T1340f24(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T298f25(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.agent_actual_argument */
extern T0* T1250f23(TC* ac, T0* C);
/* ET_IF_EXPRESSION.agent_actual_argument */
extern T0* T1234f26(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T347f31(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1558f32(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1557f32(TC* ac, T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T293f30(TC* ac, T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T266f30(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T1556f29(TC* ac, T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T1064f28(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T1555f29(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T1072f36(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T1553f31(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T1552f31(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T1545f33(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T1092f9(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T188f74(TC* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T1551f11(TC* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1550f11(TC* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1549f11(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T1548f11(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T395f19(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T1547f13(TC* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T1546f13(TC* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T1544f11(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_CURSOR.actual_argument */
extern T0* T1612f10(TC* ac, T0* C, T6 a1);
/* ET_QUANTIFIER_EXPRESSION.actual_argument */
extern T0* T1327f20(TC* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T1075f24(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T1611f10(TC* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T791f14(TC* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T1610f17(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T1599f10(TC* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T686f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1618f20(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1617f22(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1616f21(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1615f22(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1614f24(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1613f23(TC* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T1108f14(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T1343f16(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T305f9(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T1277f17(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T1305f11(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T1105f12(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.actual_argument */
extern T0* T332f7(TC* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T1609f10(TC* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T1608f9(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T1607f11(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T1606f10(TC* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T676f10(TC* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T1603f10(TC* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T1602f10(TC* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T1601f10(TC* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T1600f10(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T1598f14(TC* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T1340f14(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T298f14(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.actual_argument */
extern T0* T1250f12(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.actual_argument */
extern T0* T1234f16(TC* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T347f18(TC* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T1558f17(TC* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T1557f17(TC* ac, T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T293f15(TC* ac, T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T266f15(TC* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T1556f18(TC* ac, T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T1064f18(TC* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T1555f18(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T1553f19(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T1552f19(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T1545f18(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T2021f7(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.item */
extern T0* T2021f10(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T294f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T294f5(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_agent_type */
extern T1 T496f66(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_agent_type */
extern T1 T495f66(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T323f63(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T338f65(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_agent_type */
extern T1 T228f62(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T327f46(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T241f47(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_procedure_call */
extern T1 T327f45(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_procedure_call */
extern T1 T241f46(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.actual_argument_count */
extern T6 T2048f15(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.actual_argument_count */
extern T6 T361f16(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.actual_argument_count */
extern T6 T2102f15(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument_count */
extern T6 T2101f16(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument_count */
extern T6 T2100f14(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.count */
extern T6 T2045f1(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.count */
extern T6 T1092f3(TC* ac, T0* C);
/* ET_IDENTIFIER.actual_argument_count */
extern T6 T188f73(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument_count */
extern T6 T1551f10(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument_count */
extern T6 T1550f10(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument_count */
extern T6 T1549f10(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument_count */
extern T6 T1548f10(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument_count */
extern T6 T395f18(TC* ac, T0* C);
/* ET_VERBATIM_STRING.actual_argument_count */
extern T6 T1547f12(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument_count */
extern T6 T1546f12(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T1544f10(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.actual_argument_count */
extern T6 T1612f9(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.actual_argument_count */
extern T6 T1327f19(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.actual_argument_count */
extern T6 T1075f23(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.actual_argument_count */
extern T6 T1611f9(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.actual_argument_count */
extern T6 T791f13(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.actual_argument_count */
extern T6 T1610f16(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.actual_argument_count */
extern T6 T1599f9(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument_count */
extern T6 T686f10(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T1618f19(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T1617f21(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T1616f20(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T1615f21(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T1614f23(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T1613f22(TC* ac, T0* C);
/* ET_CALL_AGENT.actual_argument_count */
extern T6 T1108f13(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.actual_argument_count */
extern T6 T1343f15(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.actual_argument_count */
extern T6 T305f7(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.actual_argument_count */
extern T6 T1277f16(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument_count */
extern T6 T1305f10(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.actual_argument_count */
extern T6 T1105f11(TC* ac, T0* C);
/* ET_OBJECT_TEST.actual_argument_count */
extern T6 T332f6(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.actual_argument_count */
extern T6 T1609f9(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.actual_argument_count */
extern T6 T1608f8(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.actual_argument_count */
extern T6 T1607f10(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument_count */
extern T6 T1606f9(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.actual_argument_count */
extern T6 T676f9(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.actual_argument_count */
extern T6 T1603f9(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.actual_argument_count */
extern T6 T1602f9(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.actual_argument_count */
extern T6 T1601f9(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.actual_argument_count */
extern T6 T1600f9(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.actual_argument_count */
extern T6 T1598f13(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.actual_argument_count */
extern T6 T1340f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument_count */
extern T6 T298f13(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.actual_argument_count */
extern T6 T1250f11(TC* ac, T0* C);
/* ET_IF_EXPRESSION.actual_argument_count */
extern T6 T1234f15(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.actual_argument_count */
extern T6 T347f17(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T1558f16(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T1557f16(TC* ac, T0* C);
/* ET_CURRENT.actual_argument_count */
extern T6 T293f14(TC* ac, T0* C);
/* ET_RESULT.actual_argument_count */
extern T6 T266f14(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.actual_argument_count */
extern T6 T1556f17(TC* ac, T0* C);
/* ET_VOID.actual_argument_count */
extern T6 T1064f17(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.actual_argument_count */
extern T6 T1555f17(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument_count */
extern T6 T1553f18(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.actual_argument_count */
extern T6 T1552f18(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.actual_argument_count */
extern T6 T1545f17(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.count */
extern T6 T2021f1(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.count */
extern T6 T294f1(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T2102f19(TC* ac, T0* C);
/* ET_CALL_AGENT.arguments */
extern T0* T1108f5(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T1608f10(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.right */
extern T0* T1603f4(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments */
extern T0* T945f3(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments */
extern T0* T1105f4(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments */
extern T0* T298f3(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.dynamic_feature */
extern T0* T334f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T334f9(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T2102f20(TC* ac, T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T188f44(TC* ac, T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T1108f29(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T1608f11(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T1040f24(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T1048f24(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T1061f97(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T1603f11(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T1605f15(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T1604f15(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_tuple_label */
extern T1 T945f6(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T2031f43(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T1105f9(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T656f97(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T298f6(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T337f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T337f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T235f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T76f568(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f568ot1(TC* ac, T0* a1);
extern T1 T76f568ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T76f573(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_INSTRUCTION.name */
extern T0* T2020f2(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T295f5(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.name */
extern T0* T1588f4(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T337f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T337f17ot1(TC* ac, T0* a1);
extern T1 T337f17ot2(TC* ac, T0* a1);
extern T1 T337f17ot3(TC* ac, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T1588f19(TC* ac, T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T1588f18(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T1105f19(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T298f20(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.arguments */
extern T0* T2020f3(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.arguments */
extern T0* T295f3(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T1588f15(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.dynamic_feature */
extern T0* T337f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T496f43(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure */
extern void T496f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_any_copy */
extern T1 T327f31(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_any_copy */
extern T1 T241f24(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T496f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.seeded_procedure */
extern T0* T79f185(TC* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T263f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T495f43(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure */
extern void T495f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T495f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T235f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T76f132(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T241f51(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T1529c15(TC* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_expanded */
extern T1 T342f5(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_expanded */
extern T1 T259f18(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.is_empty */
extern T1 T286f8(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T267f8(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T495f57p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T323f45(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure */
extern void T323f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T323f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put_reference */
extern void T235f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put_reference */
extern void T76f130(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern T0* T78f102(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T1577f36(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T524f34(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T1576f39(TC* ac, T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T518f44(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T323f30p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T338f45(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure */
extern void T338f80(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T338f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_builtin_special_extend */
extern T1 T241f36(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_special_put */
extern T1 T241f35(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T338f30p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_procedure */
extern T0* T228f32(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.put_procedure */
extern void T228f75(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.new_dynamic_procedure */
extern T0* T228f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T337f10(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_tuple_label */
extern T1 T2020f6(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T295f6(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T1588f16(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1529f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1529f17ot1(TC* ac, T0* a1);
extern T1 T1529f17ot2(TC* ac, T0* a1);
/* ET_SYSTEM_PROCESSOR.is_ise */
extern T1 T69f42(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.is_ise */
extern T1 T398f44(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1529f17p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1529f17p1ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.count */
extern T6 T523f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_types */
extern T0* T523f4(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.dynamic_types */
extern T0* T342f21(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T496f63(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T495f63(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T323f60(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T338f62(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_types */
extern T0* T228f59(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T281f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T281f15(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T523f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T523f17p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T523f17p1ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T523f12(TC* ac, T0* C, T0* a1);
extern T1 T523f12ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T523f12p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T523f13(TC* ac, T0* C, T0* a1);
extern T1 T523f13ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T523f13p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T496f84(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T495f84(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T323f85(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T338f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRIMARY_TYPE.put_type_from_type_set */
extern void T228f83(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SECONDARY_TYPE.put_type_from_type_set */
extern void T342f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T523f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1425f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].force */
extern void T1785f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].fill_with */
extern void T1784f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].extend */
extern void T1784f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern T0* T1425f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1785c3(TC* ac);
/* ET_DYNAMIC_TARGET_LIST.resize */
extern void T1425f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1785f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1784f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1425f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1425f7(TC* ac, T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1425f3(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1425f5(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1425f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1425c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1785f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].make_empty */
extern T0* T1784c5(TC* ac, T6 a1);
/* ET_DYNAMIC_SECONDARY_TYPE.put_target */
extern void T342f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_never_void */
extern T1 T342f15(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T496f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T496f37(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T495f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T495f37(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T323f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T323f36(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T338f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T338f36(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.put_target */
extern void T228f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.is_never_void */
extern T1 T228f27(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T496f68(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T495f29(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T323f65(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T338f67(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_expanded */
extern T1 T228f41(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.static_type */
extern T0* T1529f1(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.static_type */
extern T0* T281f1(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.static_type */
extern T0* T523f1(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T496f52(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T495f53(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T323f55(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T338f56(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.static_type */
extern T0* T228f55(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.static_type */
extern T0* T342f6(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T229f12(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T327f35(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T495f40(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T323f43(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T338f43(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_PRIMARY_TYPE.is_builtin_attribute */
extern T1 T228f50(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T1577f38(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T524f41(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T1576f40(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T518f45(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T327f28(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T241f34(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.register_feature_seeds */
extern void T496f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T496f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T496f55p1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].value */
extern T0* T635f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_item */
extern T0* T635f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].position_of_key */
extern T6 T635f24(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.first_seed */
extern T6 T258f2(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.first_seed */
extern T6 T1574f2(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.first_seed */
extern T6 T1573f2(TC* ac, T0* C);
/* ET_DO_FUNCTION.first_seed */
extern T6 T522f2(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.first_seed */
extern T6 T394f3(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.first_seed */
extern T6 T392f1(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.first_seed */
extern T6 T382f1(TC* ac, T0* C);
/* ET_ATTRIBUTE.first_seed */
extern T6 T383f1(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_map */
extern T0* T635c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T635f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_sparse_container */
extern void T635f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].set_internal_cursor */
extern void T635f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_cursor */
extern T0* T635f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32].make */
extern T0* T1465c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_slots */
extern void T635f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_clashes */
extern void T635f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_key_storage */
extern void T635f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_item_storage */
extern void T635f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T639f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].make_empty */
extern T0* T638c5(TC* ac, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T229c10(TC* ac, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T258f36(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T1574f36(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T1573f36(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T522f35(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T394f53(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T392f49(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_attribute */
extern T1 T382f48(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_attribute */
extern T1 T383f50(TC* ac, T0* C);
/* ET_QUERY_LIST.item */
extern T0* T262f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T495f82(TC* ac, T0* C, T0* a1);
extern T1 T495f82ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T495f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T323f83(TC* ac, T0* C, T0* a1);
extern T1 T323f83ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T323f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T338f85(TC* ac, T0* C, T0* a1);
extern T1 T338f85ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T338f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.use_all_attributes */
extern void T228f82(TC* ac, T0* C, T0* a1);
extern T1 T228f82ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_query */
extern T0* T228f44(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T235f23(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T76f128(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T76f131(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T229f3(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.attribute_count */
extern T6 T496f5(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attribute_count */
extern T6 T495f5(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attribute_count */
extern T6 T323f5(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attribute_count */
extern T6 T338f5(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attribute_count */
extern T6 T228f1(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_reference_field_feature */
extern void T68f111(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_new_type_instance_of_feature */
extern void T68f110(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.attached_type */
extern T0* T496f10(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attached_type */
extern T0* T495f10(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attached_type */
extern T0* T323f9(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attached_type */
extern T0* T338f9(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attached_type */
extern T0* T228f9(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T68f98(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T235f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T76f124(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.meta_type */
extern T0* T496f9(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.meta_type */
extern T0* T495f9(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.meta_type */
extern T0* T323f10(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.meta_type */
extern T0* T338f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.meta_type */
extern T0* T228f10(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.meta_type */
extern T0* T342f2(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T68f108(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T68f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T496f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T495f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T323f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T338f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_meta_type */
extern void T228f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.set_meta_type */
extern void T342f27(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.dynamic_primary_type */
extern T0* T68f59(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.initialize_dynamic_types */
extern void T68f97(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_SYSTEM.propagate_alive_conforming_descendants */
extern void T68f107(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T235f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T405f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T405f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T405f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T978f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T978f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T405f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_after */
extern void T978f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T405f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T405f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T405f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T405f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T405f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T405f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T978f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T405f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T405f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T405f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].off */
extern T1 T978f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T405f20(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T76f109(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_attribute_type_sets */
extern void T68f106(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.initialize_predicate_type */
extern void T68f105(TC* ac, T0* C, T0* a1);
extern T1 T68f105ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_set_rout_disp_final_feature */
extern void T496f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_set_rout_disp_final_feature */
extern void T495f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attribute_position */
extern void T496f80(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.index_of */
extern T6 T229f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attribute_position */
extern void T495f80(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TUPLE_TYPE.set_attribute_position */
extern void T323f82(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attribute_position */
extern void T338f84(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attribute_position */
extern void T228f81(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_predicate_class */
extern T1 T79f80(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_function_type */
extern void T68f104(TC* ac, T0* C, T0* a1);
extern T1 T68f104ot1(TC* ac, T0* a1);
/* ET_CLASS.is_function_class */
extern T1 T79f79(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_procedure_type */
extern void T68f103(TC* ac, T0* C, T0* a1);
extern T1 T68f103ot1(TC* ac, T0* a1);
/* ET_CLASS.is_procedure_class */
extern T1 T79f78(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_typed_pointer_type */
extern void T68f102(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_typed_pointer_class */
extern T1 T79f77(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_array_type */
extern void T68f101(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_array_class */
extern T1 T79f76(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_special_type */
extern void T68f100(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_special_class */
extern T1 T79f75(TC* ac, T0* C);
/* ET_CLASS.canonical_to_text */
extern T0* T79f133(TC* ac, T0* C);
/* ET_TUPLE_TYPE.canonical_to_text */
extern T0* T259f16(TC* ac, T0* C);
/* ET_CLASS_TYPE.canonical_to_text */
extern T0* T77f13(TC* ac, T0* C);
/* ET_CLASS.has_interface_error */
extern T1 T79f96(TC* ac, T0* C);
/* ET_CLASS.interface_checked */
extern T1 T79f94(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T68f96(TC* ac, T0* C);
/* ET_CLASS.has_implementation_error */
extern T1 T79f111(TC* ac, T0* C);
/* ET_CLASS.implementation_checked */
extern T1 T79f109(TC* ac, T0* C);
/* ET_CLASS.process */
extern void T79f273(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1410f12(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1410f8(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1410f9(TC* ac, T0* C, T0* a1);
extern T1 T1410f9ot1(TC* ac, T0* a1);
extern T1 T1410f9ot2(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T1563f98(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1397f22(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1381f42(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1410f20(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1396f23(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1380f24(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1679f17(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1678f20(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1677f17(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1676f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1403f20(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1402f31(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1395f33(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1394f23(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1393f20(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1392f23(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T407f44(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T948f95(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1410f18(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1397f15(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1396f21(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1381f34(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1380f20(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1679f16(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1678f19(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1677f16(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1676f16(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1403f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1402f30(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1395f32(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1394f22(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1393f19(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1392f22(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T407f43(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T1587f94(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1397f21(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T1381f41(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1381f44(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1381f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc1a_error */
extern void T58f598(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T58f213(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T58f214(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T58f193(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T58f195(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vggc1a */
extern T0* T843c1270(TC* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T843f917(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T1587f17(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T1587f90(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.lower_name */
extern T0* T188f10(TC* ac, T0* C);
/* UC_UTF8_STRING.as_lower */
extern T0* T834f61(TC* ac, T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T834f91(TC* ac, T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T834f62(TC* ac, T0* C);
/* UC_STRING.as_lower */
extern T0* T454f20(TC* ac, T0* C);
/* UC_STRING.to_lower */
extern void T454f87(TC* ac, T0* C);
/* UC_STRING.unicode */
extern T0* T454f60(TC* ac, T0* C);
/* STRING_8.as_lower */
extern T0* T17f33(TC* ac, T0* C);
/* STRING_8.to_lower */
extern void T17f76(TC* ac, T0* C);
/* STRING_8.to_lower_area */
extern void T17f79(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CHARACTER_8.lower */
extern T2 T2f23(TC* ac, volatile T2* C);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T1587f45(TC* ac, T0* C);
/* ET_LIKE_FEATURE.append_to_string */
extern void T1585f94(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T1586f94(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T1586f42(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T1563f94(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T1563f33(TC* ac, T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T188f11(TC* ac, T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T834f65(TC* ac, T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T834f111(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T451f29(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern T0* T451f31(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern T0* T451f38(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern T0* T451f45(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern T0* T451f37(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern T0* T451f56(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern T0* T451f36(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern T0* T451f55(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern T0* T451f54(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern T0* T451f53(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern T0* T451f52(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern T0* T451f51(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern T0* T451f50(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern T0* T451f49(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern T0* T451f48(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern T0* T451f47(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern T0* T451f46(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern T0* T451f44(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern T0* T451f43(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern T0* T451f42(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern T0* T451f41(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern T0* T451f40(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern T0* T451f39(TC* ac, T0* C);
/* UC_STRING.as_upper */
extern T0* T454f66(TC* ac, T0* C);
/* UC_STRING.to_upper */
extern void T454f109(TC* ac, T0* C);
/* STRING_8.as_upper */
extern T0* T17f35(TC* ac, T0* C);
/* STRING_8.to_upper */
extern void T17f77(TC* ac, T0* C);
/* STRING_8.to_upper_area */
extern void T17f80(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CHARACTER_8.upper */
extern T2 T2f24(TC* ac, volatile T2* C);
/* CHARACTER_8.upper_value */
extern T0* T2f30(TC* ac, volatile T2* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T948f91(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T948f34(TC* ac, T0* C);
/* ET_CLASS.append_to_string */
extern void T79f277(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T636f33(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T1563f75(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T948f77(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T636f22(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T1563f43(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T1563f32(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T1563f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T948f44(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T948f30(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T948f8(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T636f5(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T636f11(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_to_string */
extern void T259f130(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T2015f26(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1832f5(TC* ac, T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T188f70(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T1587f38(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T1586f35(TC* ac, T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T1585f35(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T1583f5(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T247f31(TC* ac, T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T493f26(TC* ac, T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T259f56(TC* ac, T0* C);
/* ET_CLASS.label */
extern T0* T79f150(TC* ac, T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T77f52(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T2015f18(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T494f16(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T2014f18(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T245f5(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T1585f37(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T1587f41(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T1586f37(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1832f7(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1583f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T247f11(TC* ac, T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T493f16(TC* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T259f48(TC* ac, T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T79f136(TC* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T77f47(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T245f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T245f31(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T2015f4(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T245f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T247f85(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T247f38(TC* ac, T0* C);
/* ET_CLASS_TYPE.append_to_string */
extern void T77f138(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T494f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T2014f23(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T494f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T2014f17(TC* ac, T0* C);
/* ET_LIKE_CURRENT.append_to_string */
extern void T493f87(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.append_to_string_with_space */
extern void T322f34(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.expandedness_text */
extern T0* T322f12(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T322f15(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_expandedness_mark */
extern T1 T322f17(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_reference */
extern T1 T322f24(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expanded */
extern T1 T322f23(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.separateness_text */
extern T0* T322f11(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_separateness_mark */
extern T1 T322f16(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separate */
extern T1 T322f22(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.attachment_text */
extern T0* T322f10(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_attachment_mark */
extern T1 T322f14(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_question_mark */
extern T1 T322f21(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_bang */
extern T1 T322f20(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_detachable */
extern T1 T322f19(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attached */
extern T1 T322f18(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.append_to_string_with_space */
extern void T486f25(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.expandedness_text */
extern T0* T486f16(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.tokens */
extern T0* T486f18(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_expandedness_mark */
extern T1 T486f20(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.separateness_text */
extern T0* T486f15(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_separateness_mark */
extern T1 T486f19(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_separateness_mark */
extern T1 T438f29(TC* ac, T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T438f15(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_separate_mark */
extern T1 T486f5(TC* ac, T0* C);
/* ET_KEYWORD.is_separate_mark */
extern T1 T438f6(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.attachment_text */
extern T0* T486f14(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_attachment_mark */
extern T1 T486f17(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_attachment_mark */
extern T1 T1061f96(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_attachment_mark */
extern T1 T656f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_attachment_mark */
extern T1 T1072f4(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_attachment_mark */
extern T1 T655f60(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_attachment_mark */
extern T1 T438f28(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string_with_space */
extern void T1061f151(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.expandedness_text */
extern T0* T1061f83(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_expandedness_mark */
extern T1 T1061f107(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.separateness_text */
extern T0* T1061f82(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_separateness_mark */
extern T1 T1061f106(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separate */
extern T1 T1061f25(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separate_mark */
extern T1 T1061f9(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.attachment_text */
extern T0* T1061f81(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_to_string_with_space */
extern void T656f132(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.expandedness_text */
extern T0* T656f83(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_expandedness_mark */
extern T1 T656f105(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.separateness_text */
extern T0* T656f82(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_separateness_mark */
extern T1 T656f104(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T656f28(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T656f16(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.attachment_text */
extern T0* T656f81(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string_with_space */
extern void T1072f48(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.expandedness_text */
extern T0* T1072f28(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_expandedness_mark */
extern T1 T1072f32(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.separateness_text */
extern T0* T1072f27(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_separateness_mark */
extern T1 T1072f31(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T1072f19(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T1072f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.attachment_text */
extern T0* T1072f26(TC* ac, T0* C);
/* ET_SYMBOL.append_to_string_with_space */
extern void T655f107(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.expandedness_text */
extern T0* T655f84(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_expandedness_mark */
extern T1 T655f90(TC* ac, T0* C);
/* ET_SYMBOL.separateness_text */
extern T0* T655f83(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_separateness_mark */
extern T1 T655f89(TC* ac, T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T655f77(TC* ac, T0* C);
/* ET_SYMBOL.is_separate_mark */
extern T1 T655f65(TC* ac, T0* C);
/* ET_SYMBOL.attachment_text */
extern T0* T655f82(TC* ac, T0* C);
/* ET_KEYWORD.append_to_string_with_space */
extern void T438f49(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.expandedness_text */
extern T0* T438f26(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_expandedness_mark */
extern T1 T438f30(TC* ac, T0* C);
/* ET_KEYWORD.separateness_text */
extern T0* T438f25(TC* ac, T0* C);
/* ET_KEYWORD.attachment_text */
extern T0* T438f24(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T1586f46(TC* ac, T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T1585f47(TC* ac, T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T493f43(TC* ac, T0* C);
/* ET_CLASS.upper_name */
extern T0* T79f178(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T1058f18(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.column */
extern T6 T2031f41(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T395f40(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T1551f31(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T1550f31(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T1549f31(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T1548f31(TC* ac, T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T1547f23(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T1546f23(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T1544f21(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T1072f35(TC* ac, T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T1040f31(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T1022f20(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T1019f11(TC* ac, T0* C);
/* ET_KEYWORD.column */
extern T6 T438f20(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T1048f12(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T1558f7(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T1557f7(TC* ac, T0* C);
/* ET_CURRENT.column */
extern T6 T293f11(TC* ac, T0* C);
/* ET_RESULT.column */
extern T6 T266f11(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T1556f6(TC* ac, T0* C);
/* ET_VOID.column */
extern T6 T1064f6(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T1555f6(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T1553f8(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T1552f8(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T1545f8(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T1061f12(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T656f18(TC* ac, T0* C);
/* ET_SYMBOL.column */
extern T6 T655f66(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T197f7(TC* ac, T0* C);
/* ET_IDENTIFIER.column */
extern T6 T188f49(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T1058f16(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.line */
extern T6 T2031f40(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T395f39(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T1551f30(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T1550f30(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T1549f30(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T1548f30(TC* ac, T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T1547f22(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T1546f22(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T1544f20(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T1072f34(TC* ac, T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T1040f30(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T1022f19(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T1019f10(TC* ac, T0* C);
/* ET_KEYWORD.line */
extern T6 T438f19(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T1048f11(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T1558f6(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T1557f6(TC* ac, T0* C);
/* ET_CURRENT.line */
extern T6 T293f9(TC* ac, T0* C);
/* ET_RESULT.line */
extern T6 T266f10(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T1556f5(TC* ac, T0* C);
/* ET_VOID.line */
extern T6 T1064f5(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T1555f5(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T1553f7(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T1552f7(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T1545f7(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T1061f11(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T656f7(TC* ac, T0* C);
/* ET_SYMBOL.line */
extern T6 T655f6(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T197f6(TC* ac, T0* C);
/* ET_IDENTIFIER.line */
extern T6 T188f48(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.filename */
extern T0* T843f21(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_cluster */
extern T1 T860f45(TC* ac, T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T492f9(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T435f10(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T843f19(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern T0* T843f12(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T197c12(TC* ac);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T843f15(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T1587f5(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T1551f32(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1550f32(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1549f32(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T1548f32(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T395f41(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_null_position */
extern T1 T1547f24(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T1546f24(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T1544f22(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T1558f8(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T1557f8(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_null_position */
extern T1 T1556f7(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_null_position */
extern T1 T1555f7(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T1553f9(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T1552f9(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T1545f9(TC* ac, T0* C);
/* ET_CURRENT.is_null_position */
extern T1 T293f12(TC* ac, T0* C);
/* ET_IDENTIFIER.is_null_position */
extern T1 T188f56(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T1587f40(TC* ac, T0* C);
/* ET_LIKE_FEATURE.like_keyword */
extern T0* T1585f3(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.like_keyword */
extern T0* T1586f3(TC* ac, T0* C);
/* ET_LIKE_CURRENT.like_keyword */
extern T0* T493f2(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.is_null */
extern T1 T197f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T1072f33(TC* ac, T0* C);
/* ET_KEYWORD.is_null_position */
extern T1 T438f37(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T1061f20(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_null_position */
extern T1 T656f96(TC* ac, T0* C);
/* ET_SYMBOL.is_null_position */
extern T1 T655f73(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.position */
extern T0* T322f26(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_position */
extern T0* T78f802(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.position */
extern T0* T486f23(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T1061f5(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T656f5(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T1072f30(TC* ac, T0* C);
/* ET_SYMBOL.position */
extern T0* T655f61(TC* ac, T0* C);
/* ET_KEYWORD.position */
extern T0* T438f31(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_implicit_mark */
extern T1 T322f25(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T486f22(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_implicit_mark */
extern T1 T1061f84(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T656f84(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T1072f29(TC* ac, T0* C);
/* ET_SYMBOL.is_implicit_mark */
extern T1 T655f85(TC* ac, T0* C);
/* ET_KEYWORD.is_implicit_mark */
extern T1 T438f35(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T1586f41(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T1563f67(TC* ac, T0* C);
/* ET_IDENTIFIER.position */
extern T0* T188f33(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T948f69(TC* ac, T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T259f74(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T247f42(TC* ac, T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T1585f44(TC* ac, T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T493f40(TC* ac, T0* C);
/* ET_CURRENT.position */
extern T0* T293f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vggc1_error */
extern T1 T58f186(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc1a_error */
extern void T41f598(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T41f213(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T41f214(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_info */
extern void T41f193(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T41f195(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vggc1_error */
extern T1 T41f186(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1381f12(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1381f24(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1410f17(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1396f20(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T1380f19(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1380f22(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1380f23(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T58f597(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T843c1269(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T58f185(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T41f597(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T41f185(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1380f6(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1380f12(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1679f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1679f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1676f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1676f15(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_type */
extern void T407f29(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T407f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].wipe_out */
extern void T765f14(TC* ac, T0* C);
/* SPECIAL [ET_ADAPTED_CLASS].keep_head */
extern void T1488f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_CLASS].set_count */
extern void T1488f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_all_cursors_after */
extern void T765f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_next_cursor */
extern void T1489f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_after */
extern void T1489f6(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T246f58(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T246f60(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].keep_head */
extern void T659f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].keep_head */
extern void T250f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].set_count */
extern void T250f10(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern T0* T246f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T659c3(TC* ac);
/* ET_TYPE_CHECKER.tokens */
extern T0* T407f20(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.keep_first */
extern void T246f66(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T246f68(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T246f11(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T246f70(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0e_error */
extern void T58f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0e */
extern T0* T843c1119(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T258f59(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T1574f45(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T1573f48(TC* ac, T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T522f48(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T394f66(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T392f65(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T382f59(TC* ac, T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T383f61(TC* ac, T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T259f30(TC* ac, T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T77f30(TC* ac, T0* C);
/* ET_CLASS.to_text */
extern T0* T79f74(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_constraint_type */
extern T0* T259f114(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.type */
extern T0* T1910f1(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_constraint_type */
extern T0* T77f114(TC* ac, T0* C);
/* ET_CLASS.type_constraint_type */
extern T0* T79f233(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T2031f13(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.name */
extern T0* T2031f38(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T2031f39(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T656f98(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T656f106(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T1605f16(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T1605f20(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T1605f14(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T1604f16(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T1604f20(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T1604f14(TC* ac, T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T1040f25(TC* ac, T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T1040f33(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T1048f25(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T1048f31(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T1048f7(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T1061f98(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T1061f108(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_not_symbol_name */
extern T0* T78f897(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_xor_symbol_name */
extern T0* T78f895(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_or_else_symbol_name */
extern T0* T78f891(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_or_symbol_name */
extern T0* T78f890(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_implies_symbol_name */
extern T0* T78f885(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_and_then_symbol_name */
extern T0* T78f880(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_and_symbol_name */
extern T0* T78f879(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.position */
extern T0* T2031f37(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T1605f41(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T1604f41(TC* ac, T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T1040f12(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T1048f5(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vgmc_error */
extern T1 T58f119(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgmc0e_error */
extern void T41f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vgmc_error */
extern T1 T41f119(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T246f44(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T246f52(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T246f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T246f15ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T246f57(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].force */
extern void T659f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE].fill_with */
extern void T250f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].extend */
extern void T250f9(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1563f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f15ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.root_context */
extern T0* T259f15(TC* ac, T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T77f20(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.root_context */
extern T0* T246f1(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T1563f34(TC* ac, T0* C);
/* ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T259f35(TC* ac, T0* C);
/* ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T259f36(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T246c56(TC* ac, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T246f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T659f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].make_empty */
extern T0* T250c5(TC* ac, T6 a1);
/* ET_CLASS_TYPE.as_nested_type_context */
extern T0* T77f37(TC* ac, T0* C);
/* ET_CLASS_TYPE.to_nested_type_context */
extern T0* T77f38(TC* ac, T0* C);
/* ET_CLASS.as_nested_type_context */
extern T0* T79f85(TC* ac, T0* C);
/* ET_CLASS.to_nested_type_context */
extern T0* T79f86(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T246f7(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1563f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f14ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T948f21(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f21ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T948f47(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T1563f35(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T948f36(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T1587f32(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f32ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T1587f46(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T322f13(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T78f50(TC* ac, T0* C, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5, T1 a6);
/* ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern T0* T78f93(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.make */
extern T0* T322c27(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern T0* T78f92(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T322f33(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern T0* T78f91(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T322f32(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_type_mark */
extern T0* T78f90(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_non_separate_mark */
extern void T322f29(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_reference_type_mark */
extern T0* T78f89(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_expanded_type_mark */
extern T0* T78f88(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern T0* T78f23(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T322f30(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern T0* T78f87(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern T0* T78f86(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern T0* T78f85(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T322f28(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern T0* T78f84(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_reference_type_mark */
extern T0* T78f83(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_expanded_type_mark */
extern T0* T78f82(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern T0* T78f81(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern T0* T78f80(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern T0* T78f79(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern T0* T78f25(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T322f31(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern T0* T78f78(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern T0* T78f77(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_type_mark */
extern T0* T78f76(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_reference_type_mark */
extern T0* T78f75(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_expanded_type_mark */
extern T0* T78f74(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern T0* T78f24(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern T0* T78f73(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern T0* T78f72(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separate_mark */
extern T1 T322f2(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T486f4(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_non_separate_mark */
extern T1 T486f11(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T1072f10(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_non_separate_mark */
extern T1 T1072f15(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separateness_mark */
extern T1 T1061f15(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_non_separate_mark */
extern T1 T1061f21(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T656f20(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_non_separate_mark */
extern T1 T656f25(TC* ac, T0* C);
/* ET_SYMBOL.is_separateness_mark */
extern T1 T655f68(TC* ac, T0* C);
/* ET_SYMBOL.is_non_separate_mark */
extern T1 T655f74(TC* ac, T0* C);
/* ET_KEYWORD.is_separateness_mark */
extern T1 T438f5(TC* ac, T0* C);
/* ET_KEYWORD.is_non_separate_mark */
extern T1 T438f14(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T322f9(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T486f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T1072f9(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expandedness_mark */
extern T1 T1061f14(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T656f19(TC* ac, T0* C);
/* ET_SYMBOL.is_expandedness_mark */
extern T1 T655f67(TC* ac, T0* C);
/* ET_KEYWORD.is_expandedness_mark */
extern T1 T438f23(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T322f7(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T486f21(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.overridden_type_mark */
extern T0* T1061f6(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T656f13(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T1072f5(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.overridden_type_mark */
extern T0* T655f62(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.overridden_type_mark */
extern T0* T438f27(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.adapted_base_class_with_seeded_feature */
extern T0* T1585f46(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS.adapted_base_class_with_seeded_feature */
extern T0* T79f219(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T259f76(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T247f44(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T247f44ot1(TC* ac, T0* a1);
extern T1 T247f44ot2(TC* ac, T0* a1);
extern T1 T247f44ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T247f8(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.adapted_base_class_with_seeded_feature */
extern T0* T1563f42(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1563f42ot1(TC* ac, T0* a1);
extern T1 T1563f42ot2(TC* ac, T0* a1);
extern T1 T1563f42ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.adapted_base_class_with_seeded_feature */
extern T0* T948f43(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T948f43ot1(TC* ac, T0* a1);
extern T1 T948f43ot2(TC* ac, T0* a1);
extern T1 T948f43ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T77f78(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T260f6(TC* ac, T0* C, T6 a1);
/* ET_CLASS.seeded_feature */
extern T0* T79f203(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.index */
extern T6 T1585f41(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T1585f40(TC* ac, T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T188f12(TC* ac, T0* C);
/* ET_LIKE_FEATURE.tokens */
extern T0* T1585f39(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T1587f7(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1587f7ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T1587f43(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T1586f45(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1586f45ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.adapted_base_class_with_named_feature */
extern T0* T1563f41(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f41ot1(TC* ac, T0* a1);
extern T1 T1563f41ot2(TC* ac, T0* a1);
extern T1 T1563f41ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.named_feature */
extern T0* T259f122(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_procedure */
extern T0* T259f125(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T79f103(TC* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T263f5(TC* ac, T0* C, T0* a1);
extern T1 T263f5ot1(TC* ac, T0* a1);
/* ET_ALIAS_NAME_LIST.has_call_name */
extern T1 T968f4(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T1579f17(TC* ac, T0* C, T0* a1);
extern T1 T1579f17ot1(TC* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T1579f7(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.operator_name */
extern T0* T1579f8(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T1040f53(TC* ac, T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T1040f9(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T1579f51(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T1579f9(TC* ac, T0* C);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T1097f15(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.is_prefix_not_symbol */
extern T1 T656f126(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not_symbol */
extern T1 T1605f40(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not_symbol */
extern T1 T1604f40(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not_symbol */
extern T1 T1040f29(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not_symbol */
extern T1 T1048f30(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not_symbol */
extern T1 T1061f104(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not_symbol */
extern T1 T2031f36(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not_symbol */
extern T1 T1579f48(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not_symbol */
extern T1 T1097f78(TC* ac, T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T1097f79(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not_symbol */
extern T1 T188f99(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T656f125(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T1605f39(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T1604f39(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T1040f28(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T1048f29(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T1061f103(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T2031f35(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T1579f47(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T1097f77(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T188f98(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T656f124(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T1605f38(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T1604f38(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T1040f52(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T1048f54(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T1061f128(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T2031f34(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T1579f46(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T1097f76(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T188f97(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T656f123(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T1605f37(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T1604f37(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T1040f51(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T1048f53(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T1061f127(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T2031f33(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T1579f45(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T1097f75(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T188f96(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T656f122(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T1605f36(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T1604f36(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T1040f50(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T1048f52(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T1061f126(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T2031f32(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T1579f44(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T1097f74(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T188f95(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor_symbol */
extern T1 T656f121(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor_symbol */
extern T1 T1605f35(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor_symbol */
extern T1 T1604f35(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor_symbol */
extern T1 T1040f49(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor_symbol */
extern T1 T1048f51(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor_symbol */
extern T1 T1061f125(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor_symbol */
extern T1 T2031f31(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor_symbol */
extern T1 T1579f43(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor_symbol */
extern T1 T1097f73(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor_symbol */
extern T1 T188f94(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T656f120(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T1605f34(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T1604f34(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T1040f48(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T1048f50(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T1061f124(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T2031f30(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T1579f42(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T1097f72(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T188f93(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T656f119(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T1605f33(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T1604f33(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T1040f47(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T1048f49(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T1061f123(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T2031f29(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T1579f41(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T1097f71(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T188f92(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T656f118(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T1605f32(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T1604f32(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T1040f46(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T1048f48(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T1061f122(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T2031f28(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T1579f40(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T1097f70(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T188f91(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T656f117(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T1605f31(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T1604f31(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T1040f45(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T1048f47(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T1061f121(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T2031f27(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T1579f39(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T1097f69(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T188f90(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else_symbol */
extern T1 T656f92(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_else_symbol */
extern T1 T1605f10(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else_symbol */
extern T1 T1604f10(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else_symbol */
extern T1 T1040f19(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else_symbol */
extern T1 T1048f19(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else_symbol */
extern T1 T1061f92(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else_symbol */
extern T1 T2031f9(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else_symbol */
extern T1 T1579f38(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else_symbol */
extern T1 T1097f68(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else_symbol */
extern T1 T188f40(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T656f87(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_else */
extern T1 T1605f5(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T1604f5(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T1040f14(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T1048f14(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T1061f87(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T2031f4(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T1579f37(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T1097f67(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T188f35(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_symbol */
extern T1 T656f95(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_symbol */
extern T1 T1605f13(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_symbol */
extern T1 T1604f13(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_symbol */
extern T1 T1040f22(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_symbol */
extern T1 T1048f22(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_symbol */
extern T1 T1061f95(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_symbol */
extern T1 T2031f12(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_symbol */
extern T1 T1579f36(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_symbol */
extern T1 T1097f66(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_symbol */
extern T1 T188f43(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T656f90(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T1605f8(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T1604f8(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T1040f17(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T1048f17(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T1061f90(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T2031f7(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T1579f35(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T1097f65(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T188f38(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T656f116(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T1605f30(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T1604f30(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T1040f44(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T1048f46(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T1061f120(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T2031f26(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T1579f34(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T1097f64(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T188f89(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T656f115(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T1605f29(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T1604f29(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T1040f43(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T1048f45(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T1061f119(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T2031f25(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T1579f33(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T1097f63(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T188f88(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T656f114(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T1605f28(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T1604f28(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T1040f42(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T1048f44(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T1061f118(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T2031f24(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T1579f32(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T1097f62(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T188f87(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T656f113(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T1605f27(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T1604f27(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T1040f41(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T1048f43(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T1061f117(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T2031f23(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T1579f31(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T1097f61(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T188f86(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies_symbol */
extern T1 T656f93(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies_symbol */
extern T1 T1605f11(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies_symbol */
extern T1 T1604f11(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies_symbol */
extern T1 T1040f20(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies_symbol */
extern T1 T1048f20(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies_symbol */
extern T1 T1061f93(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies_symbol */
extern T1 T2031f10(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies_symbol */
extern T1 T1579f30(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies_symbol */
extern T1 T1097f60(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies_symbol */
extern T1 T188f41(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T656f88(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T1605f6(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T1604f6(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T1040f15(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T1048f15(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T1061f88(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T2031f5(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T1579f29(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T1097f59(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T188f36(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T656f112(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T1605f26(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T1604f26(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T1040f40(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T1048f42(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T1061f116(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T2031f22(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T1579f28(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T1097f58(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T188f85(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T656f111(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T1605f25(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T1604f25(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T1040f39(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T1048f41(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T1061f115(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T2031f21(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T1579f27(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T1097f57(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T188f84(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T656f110(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T1605f24(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T1604f24(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T1040f38(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T1048f40(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T1061f114(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T2031f20(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T1579f26(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T1097f56(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T188f83(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T656f109(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T1605f23(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T1604f23(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T1040f37(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T1048f39(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T1061f113(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T2031f19(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T1579f25(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T1097f55(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T188f82(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then_symbol */
extern T1 T656f91(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then_symbol */
extern T1 T1605f9(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_then_symbol */
extern T1 T1604f9(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then_symbol */
extern T1 T1040f18(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then_symbol */
extern T1 T1048f18(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then_symbol */
extern T1 T1061f91(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then_symbol */
extern T1 T2031f8(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then_symbol */
extern T1 T1579f24(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then_symbol */
extern T1 T1097f54(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then_symbol */
extern T1 T188f39(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T656f86(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T1605f4(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_then */
extern T1 T1604f4(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T1040f13(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T1048f13(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T1061f86(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T2031f45(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T1579f23(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T1097f53(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T188f34(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_symbol */
extern T1 T656f94(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_symbol */
extern T1 T1605f12(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_symbol */
extern T1 T1604f12(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_symbol */
extern T1 T1040f21(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_symbol */
extern T1 T1048f21(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_symbol */
extern T1 T1061f94(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_symbol */
extern T1 T2031f11(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_symbol */
extern T1 T1579f22(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_symbol */
extern T1 T1097f52(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_symbol */
extern T1 T188f42(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T656f89(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T1605f7(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T1604f7(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T1040f16(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T1048f16(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T1061f89(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T2031f6(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T1579f21(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T1097f51(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T188f37(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T656f108(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T1605f22(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T1604f22(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_parenthesis */
extern T1 T1040f36(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T1048f38(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T1061f112(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_parenthesis */
extern T1 T2031f18(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T1579f13(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_parenthesis */
extern T1 T1097f11(TC* ac, T0* C);
/* ET_IDENTIFIER.is_parenthesis */
extern T1 T188f81(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bracket */
extern T1 T656f107(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T1605f21(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T1604f21(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T1040f35(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T1048f37(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T1061f111(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T2031f17(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T1579f12(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T1097f10(TC* ac, T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T188f80(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_names */
extern T0* T1577f54(TC* ac, T0* C);
/* ET_IDENTIFIER.alias_names */
extern T0* T188f57(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.alias_names */
extern T0* T524f35(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.alias_names */
extern T0* T1576f47(TC* ac, T0* C);
/* ET_DO_PROCEDURE.alias_names */
extern T0* T518f38(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.hash_code */
extern T6 T1577f11(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.hash_code */
extern T6 T524f10(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.hash_code */
extern T6 T1576f12(TC* ac, T0* C);
/* ET_DO_PROCEDURE.hash_code */
extern T6 T518f12(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_feature */
extern T0* T1910f11(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_procedure */
extern T0* T1910f14(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.index_of_old_name */
extern T6 T1151f9(TC* ac, T0* C, T0* a1);
/* ET_RENAME.rename_pair */
extern T0* T1409f5(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.rename_pair */
extern T0* T1151f7(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.item */
extern T0* T1151f10(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.index_of_new_name */
extern T6 T1151f8(TC* ac, T0* C, T0* a1);
extern T1 T1151f8ot1(TC* ac, T0* a1);
/* ET_CLASS.named_feature */
extern T0* T79f181(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_feature */
extern T0* T77f121(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_procedure */
extern T0* T77f124(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.adapted_base_class_with_named_feature */
extern T0* T948f42(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f42ot1(TC* ac, T0* a1);
extern T1 T948f42ot2(TC* ac, T0* a1);
extern T1 T948f42ot3(TC* ac, T0* a1);
/* ET_CLASS.adapted_base_class_with_named_feature */
extern T0* T79f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.adapted_base_class_with_named_feature */
extern T0* T259f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.adapted_base_class_with_named_feature */
extern T0* T247f43(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f43ot1(TC* ac, T0* a1);
extern T1 T247f43ot2(TC* ac, T0* a1);
extern T1 T247f43ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.adapted_base_class_with_named_feature */
extern T0* T77f77(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T1586f40(TC* ac, T0* C);
/* ET_LIKE_CURRENT.adapted_base_class_with_seeded_feature */
extern T0* T493f42(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.adapted_base_class_with_seeded_feature */
extern T0* T246f51(TC* ac, T0* C, T6 a1);
extern T1 T246f51ot1(TC* ac, T0* a1);
/* ET_LIKE_N.adapted_base_class_with_seeded_feature */
extern T0* T1535f33(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T246f36(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T259f99(TC* ac, T0* C, T6 a1);
/* ET_CLASS.context_adapted_base_class_with_seeded_feature */
extern T0* T79f235(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T77f105(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.adapted_base_class_with_named_feature */
extern T0* T1585f45(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.adapted_base_class_with_named_feature */
extern T0* T1587f6(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f6ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.adapted_base_class_with_named_feature */
extern T0* T1586f44(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f44ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.adapted_base_class_with_named_feature */
extern T0* T493f41(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.adapted_base_class_with_named_feature */
extern T0* T246f50(TC* ac, T0* C, T0* a1);
extern T1 T246f50ot1(TC* ac, T0* a1);
/* ET_LIKE_N.adapted_base_class_with_named_feature */
extern T0* T1535f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T259f98(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_adapted_base_class_with_named_feature */
extern T0* T79f234(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T77f104(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T1586f27(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f27ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T1586f43(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T1585f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T1585f42(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T493f10(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T246f30(TC* ac, T0* C, T0* a1);
extern T1 T246f30ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T1535f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.tokens */
extern T0* T1535f14(TC* ac, T0* C);
/* ET_LIKE_N.overridden_type_mark */
extern T0* T1535f13(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T259f42(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T79f119(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T77f42(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T493f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T79f137(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T259f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T77f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T948f46(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T247f34(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f34ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T247f7(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1563f23(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f23ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T948f25(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f25ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached */
extern T1 T259f105(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_attached */
extern T1 T79f260(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.is_type_attached */
extern T1 T1910f7(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_attached_type */
extern T1 T1729f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_attached */
extern T1 T77f113(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.is_type_expanded */
extern T1 T1910f6(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_expanded_type */
extern T1 T1729f9(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T1587f31(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f31ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T1586f26(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f26ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T1585f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T493f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T259f70(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T77f71(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T79f198(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T246f34(TC* ac, T0* C, T0* a1);
extern T1 T246f34ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T1535f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T247f33(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f33ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1563f27(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f27ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T246f5(TC* ac, T0* C);
/* ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T259f33(TC* ac, T0* C);
/* ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T77f34(TC* ac, T0* C);
/* ET_CLASS.attachment_type_conformance_mode */
extern T1 T79f83(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T948f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f12ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1587f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1587f15ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T246f8(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1586f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1586f14ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1585f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T247f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f18ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T493f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T246f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T246f26ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T1535f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T259f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T77f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T79f168(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T79f165(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T259f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T77f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_root_context */
extern T1 T259f14(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_root_context */
extern T1 T77f19(TC* ac, T0* C);
/* ET_CLASS.is_root_context */
extern T1 T79f130(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T246f19(TC* ac, T0* C);
extern T1 T246f19ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T259f51(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T259f57(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T259f57ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T1563f61(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1563f16(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f16ot1(TC* ac, T0* a1);
extern T1 T1563f16ot2(TC* ac, T0* a1);
extern T1 T1563f16ot3(TC* ac, T0* a1);
/* ET_CLASS.type_with_type_mark */
extern T0* T79f68(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.make */
extern T0* T77c135(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make_generic */
extern T0* T77c134(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.overridden_type_mark */
extern T0* T79f91(TC* ac, T0* C, T0* a1);
/* ET_CLASS.tokens */
extern T0* T79f179(TC* ac, T0* C);
/* ET_CLASS.is_separate */
extern T1 T79f97(TC* ac, T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T79f108(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T259f27(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T259f127(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.make */
extern T0* T259c126(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern T0* T78f100(TC* ac, T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T259f24(TC* ac, T0* C);
/* ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T259f8(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_separate */
extern T1 T259f22(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_with_type_mark */
extern T0* T77f27(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.overridden_type_mark */
extern T0* T77f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.tokens */
extern T0* T77f17(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T77f15(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T247f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T247c83(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T948f48(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1563f46(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T247f4(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.implementation_class */
extern T0* T948f3(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.implementation_class */
extern T0* T1563f5(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T1587f9(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f9ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T1586f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f22ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T1585f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T247f6(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f6ot1(TC* ac, T0* a1);
extern T1 T247f6ot2(TC* ac, T0* a1);
extern T1 T247f6ot3(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T493f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T246f16(TC* ac, T0* C, T0* a1);
extern T1 T246f16ot1(TC* ac, T0* a1);
/* ET_LIKE_N.named_type_with_type_mark */
extern T0* T1535f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_named_type_with_type_mark */
extern T0* T79f167(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T77f63(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T259f65(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_type_with_type_mark */
extern T0* T79f153(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T259f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T77f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T948f14(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f14ot1(TC* ac, T0* a1);
extern T1 T948f14ot2(TC* ac, T0* a1);
extern T1 T948f14ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T948f62(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T1587f30(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T1586f20(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type */
extern T0* T1585f20(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T247f29(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T493f24(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T79f148(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T259f54(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T77f50(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T77f55(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T77f65(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T77f65ot1(TC* ac, T0* a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T79f157(TC* ac, T0* C, T6 a1);
/* ET_CLASS.base_type_actual */
extern T0* T79f182(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T246f22(TC* ac, T0* C, T6 a1);
extern T1 T246f22ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T1563f18(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1563f18ot1(TC* ac, T0* a1);
extern T1 T1563f18ot2(TC* ac, T0* a1);
extern T1 T1563f18ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T948f16(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T948f16ot1(TC* ac, T0* a1);
extern T1 T948f16ot2(TC* ac, T0* a1);
extern T1 T948f16ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T1585f23(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T1587f11(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1587f11ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T1586f23(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1586f23ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T493f33(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_N.base_type_actual */
extern T0* T1535f6(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T247f14(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T247f14ot1(TC* ac, T0* a1);
extern T1 T247f14ot2(TC* ac, T0* a1);
extern T1 T247f14ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T259f50(TC* ac, T0* C);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T259f45(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T259f53(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T77f54(TC* ac, T0* C);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T77f45(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T77f49(TC* ac, T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T79f156(TC* ac, T0* C);
/* ET_CLASS.base_type_actual_count */
extern T6 T79f145(TC* ac, T0* C, T0* a1);
/* ET_CLASS.formal_parameter_count */
extern T6 T79f152(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T246f21(TC* ac, T0* C);
extern T1 T246f21ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1563f17(TC* ac, T0* C, T0* a1);
extern T1 T1563f17ot1(TC* ac, T0* a1);
extern T1 T1563f17ot2(TC* ac, T0* a1);
extern T1 T1563f17ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T948f15(TC* ac, T0* C, T0* a1);
extern T1 T948f15ot1(TC* ac, T0* a1);
extern T1 T948f15ot2(TC* ac, T0* a1);
extern T1 T948f15ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T1585f11(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T1587f10(TC* ac, T0* C, T0* a1);
extern T1 T1587f10ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T1586f11(TC* ac, T0* C, T0* a1);
extern T1 T1586f11ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T493f17(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_type_actual_count */
extern T6 T1535f5(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T247f13(TC* ac, T0* C, T0* a1);
extern T1 T247f13ot1(TC* ac, T0* a1);
extern T1 T247f13ot2(TC* ac, T0* a1);
extern T1 T247f13ot3(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1563f45(TC* ac, T0* C, T0* a1);
/* ET_CLASS.ancestor */
extern T0* T79f155(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T437f4(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_unknown */
extern T1 T79f99(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_unknown */
extern T1 T860f42(TC* ac, T0* C);
/* ET_NONE_GROUP.is_unknown */
extern T1 T492f10(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_unknown */
extern T1 T435f4(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T246f20(TC* ac, T0* C);
/* ET_MASTER_CLASS.actual_class */
extern T0* T485f42(TC* ac, T0* C);
/* ET_CLASS.actual_class */
extern T0* T79f87(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T246f27(TC* ac, T0* C);
extern T1 T246f27ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T1563f20(TC* ac, T0* C, T0* a1);
extern T1 T1563f20ot1(TC* ac, T0* a1);
extern T1 T1563f20ot2(TC* ac, T0* a1);
extern T1 T1563f20ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.named_base_class */
extern T0* T948f18(TC* ac, T0* C, T0* a1);
extern T1 T948f18ot1(TC* ac, T0* a1);
extern T1 T948f18ot2(TC* ac, T0* a1);
extern T1 T948f18ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.named_base_class */
extern T0* T1585f25(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T1587f16(TC* ac, T0* C, T0* a1);
extern T1 T1587f16ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T1586f25(TC* ac, T0* C, T0* a1);
extern T1 T1586f25ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.named_base_class */
extern T0* T493f6(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_base_class */
extern T0* T1535f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_base_class_in_context */
extern T0* T79f151(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T247f19(TC* ac, T0* C, T0* a1);
extern T1 T247f19ot1(TC* ac, T0* a1);
extern T1 T247f19ot2(TC* ac, T0* a1);
extern T1 T247f19ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T77f8(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T259f5(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class */
extern T0* T259f3(TC* ac, T0* C);
/* ET_CLASS_TYPE.named_base_class */
extern T0* T77f4(TC* ac, T0* C);
/* ET_CLASS.named_base_class */
extern T0* T79f23(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T948f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f13ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T1585f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T1587f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1587f8ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T1586f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1586f21ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T493f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T259f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T77f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T79f164(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T1535f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T247f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f5ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.put */
extern void T246f65(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T246f9(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T246f10(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T246f62(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_0 */
extern T0* T78f245(TC* ac, T0* C);
/* ET_LIKE_N.make_zero */
extern T0* T1535c43(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern T0* T78f260(TC* ac, T0* C);
/* ET_KEYWORD.make_like */
extern T0* T438c57(TC* ac);
/* ET_KEYWORD.make_token */
extern void T438f50(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T438f51(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T246f17(TC* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T259f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1563f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f13ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T948f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f11ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1587f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1587f13ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1586f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1586f13ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T1585f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T247f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f16ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T493f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T246f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T246f24ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T1535f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T259f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T79f161(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T77f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T79f146(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T259f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T2015f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T1563f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T948f45(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T1587f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T1586f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T1585f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T247f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T493f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T79f190(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T259f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T245f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.is_type_separate_with_type_mark */
extern T1 T259f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.scoop_mode */
extern T1 T246f6(TC* ac, T0* C);
/* ET_TUPLE_TYPE.scoop_mode */
extern T1 T259f34(TC* ac, T0* C);
/* ET_CLASS.scoop_mode */
extern T1 T79f84(TC* ac, T0* C);
/* ET_CLASS_TYPE.scoop_mode */
extern T1 T77f35(TC* ac, T0* C);
/* ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T77f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T259f25(TC* ac, T0* C);
/* ET_CLASS.same_named_type_with_type_marks */
extern T1 T79f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1563f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f12ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T948f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f10ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T1587f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1587f12ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T1586f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1586f12ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T1585f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T247f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f15ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T493f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T246f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T246f23ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T1535f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T259f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T79f160(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T77f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T79f115(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T636f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T77f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_separate_with_type_mark */
extern T1 T79f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T77f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T79f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T259f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T77f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T494f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T2014f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.is_generic */
extern T1 T77f18(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_type */
extern T0* T78f144(TC* ac, T0* C);
/* ET_LIKE_CURRENT.make */
extern T0* T493c85(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern T0* T78f29(TC* ac, T0* C);
/* ET_CURRENT.make */
extern T0* T293c35(TC* ac);
/* ET_CURRENT.make_token */
extern void T293f37(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T293f38(TC* ac, T0* C);
/* ET_CURRENT.tokens */
extern T0* T293f5(TC* ac, T0* C);
/* ET_LIKE_CURRENT.tokens */
extern T0* T493f13(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T246f18(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T246f61(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.resize */
extern void T246f63(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].aliased_resized_area */
extern T0* T659f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].aliased_resized_area */
extern T0* T250f4(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T246f12(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.reset_context_if_multiple_constraints */
extern void T430f11(TC* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.detachable_like_current */
extern T0* T78f154(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_keyword */
extern T0* T78f141(TC* ac, T0* C);
/* ET_KEYWORD.make_detachable */
extern T0* T438c48(TC* ac);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T246f39(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_like_current */
extern T0* T78f803(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_keyword */
extern T0* T78f328(TC* ac, T0* C);
/* ET_KEYWORD.make_attached */
extern T0* T438c68(TC* ac);
/* ET_ADAPTED_BASE_CLASS_CHECKER.tokens */
extern T0* T430f7(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T246f40(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].item */
extern T0* T765f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].is_empty */
extern T1 T765f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T58f557(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T843c1232(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T58f165(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1c_error */
extern void T41f557(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T41f165(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T58f554(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T843c1229(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.name */
extern T0* T1585f2(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T58f88(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2b_error */
extern void T41f554(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T41f88(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T1585f64(TC* ac, T0* C, T0* a1);
/* ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T79f251(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T636f23(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1563f73(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T948f75(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T259f94(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T2015f13(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T245f21(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T247f62(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T77f100(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T494f13(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T2014f13(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T1587f63(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T1586f66(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T493f60(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T1587f97(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T188f124(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T1586f100(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.named_query */
extern T0* T259f123(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_query */
extern T0* T1910f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_query */
extern T0* T77f122(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_query */
extern T0* T79f102(TC* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T262f6(TC* ac, T0* C, T0* a1);
extern T1 T262f6ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION.alias_names */
extern T0* T258f56(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.alias_names */
extern T0* T1574f42(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.alias_names */
extern T0* T1573f44(TC* ac, T0* C);
/* ET_DO_FUNCTION.alias_names */
extern T0* T522f42(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_names */
extern T0* T394f67(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_names */
extern T0* T392f62(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.alias_names */
extern T0* T382f60(TC* ac, T0* C);
/* ET_ATTRIBUTE.alias_names */
extern T0* T383f24(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.hash_code */
extern T6 T258f11(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.hash_code */
extern T6 T1574f11(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.hash_code */
extern T6 T1573f12(TC* ac, T0* C);
/* ET_DO_FUNCTION.hash_code */
extern T6 T522f14(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.hash_code */
extern T6 T394f11(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.hash_code */
extern T6 T392f10(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.hash_code */
extern T6 T382f10(TC* ac, T0* C);
/* ET_ATTRIBUTE.hash_code */
extern T6 T383f9(TC* ac, T0* C);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T407f15(TC* ac, T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T407f26(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].first */
extern T0* T765f7(TC* ac, T0* C);
/* ET_TYPE_CHECKER.check_adapted_base_classes_validity */
extern void T407f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ADAPTED_BASE_CLASS_CHECKER.check_adapted_base_classes_validity */
extern void T430f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T430f12ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0a_error */
extern void T58f592(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgmc0a */
extern T0* T843c1265(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgmc0a_error */
extern void T41f592(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgmc0d_error */
extern void T58f591(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0d */
extern T0* T843c1264(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0d_error */
extern void T41f591(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_TUPLE_TYPE.adapted_class_base_type_index_of_label */
extern T6 T259f124(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T259f119(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T2015f22(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T188f62(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T245f26(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.base_type_index_of_label */
extern T6 T1910f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.index_of_label */
extern T6 T79f261(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T636f26(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T77f132(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T494f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T2014f19(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.adapted_class_base_type_index_of_label */
extern T6 T77f130(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.adapted_class_base_type_index_of_label */
extern T6 T79f257(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T246f55(TC* ac, T0* C, T0* a1);
extern T1 T246f55ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1563f82(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f82ot1(TC* ac, T0* a1);
extern T1 T1563f82ot2(TC* ac, T0* a1);
extern T1 T1563f82ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T948f84(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f84ot1(TC* ac, T0* a1);
extern T1 T948f84ot2(TC* ac, T0* a1);
extern T1 T948f84ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T1585f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T1587f86(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f86ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T1586f89(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f89ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T493f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.base_type_index_of_label */
extern T6 T1535f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T79f262(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T247f81(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f81ot1(TC* ac, T0* a1);
extern T1 T247f81ot2(TC* ac, T0* a1);
extern T1 T247f81ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T77f133(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T259f120(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgmc0c_error */
extern void T58f590(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0c */
extern T0* T843c1263(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T1577f33(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T524f46(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T1576f36(TC* ac, T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T518f48(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgmc0c_error */
extern void T41f590(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vgmc0b_error */
extern void T58f589(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0b */
extern T0* T843c1262(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0b_error */
extern void T41f589(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ADAPTED_BASE_CLASS_CHECKER.error_handler */
extern T0* T430f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].put_last */
extern void T765f17(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].force */
extern void T1486f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_CLASS].fill_with */
extern void T1488f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_CLASS].extend */
extern void T1488f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].remove */
extern void T765f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_left */
extern void T765f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_cursors_left */
extern void T765f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_position */
extern void T1489f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].remove_last */
extern void T765f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_last_cursors_after */
extern void T765f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].keep_first */
extern void T765f15(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_fatal_error */
extern void T430f14(TC* ac, T0* C);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_class_interface_error_only */
extern void T430f13(TC* ac, T0* C, T1 a1);
/* ET_NESTED_TYPE_CONTEXT.add_adapted_base_classes_to_list */
extern void T246f67(TC* ac, T0* C, T0* a1);
extern T1 T246f67ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.add_adapted_base_classes_to_list */
extern void T1563f93(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f93ot1(TC* ac, T0* a1);
extern T1 T1563f93ot2(TC* ac, T0* a1);
extern T1 T1563f93ot3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].force_last */
extern void T765f23(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].resize */
extern void T765f24(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].aliased_resized_area */
extern T0* T1486f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_CLASS].aliased_resized_area */
extern T0* T1488f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].new_capacity */
extern T6 T765f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].extendible */
extern T1 T765f10(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.add_adapted_base_classes_to_list */
extern void T948f90(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f90ot1(TC* ac, T0* a1);
extern T1 T948f90ot2(TC* ac, T0* a1);
extern T1 T948f90ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.add_adapted_base_classes_to_list */
extern void T1585f103(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.add_adapted_base_classes_to_list */
extern void T1587f98(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f98ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.add_adapted_base_classes_to_list */
extern void T1586f101(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f101ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.add_adapted_base_classes_to_list */
extern void T493f96(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.add_adapted_base_classes_to_list */
extern void T1535f45(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_adapted_base_classes_to_list */
extern void T79f337(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.add_adapted_base_classes_to_list */
extern void T247f92(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f92ot1(TC* ac, T0* a1);
extern T1 T247f92ot2(TC* ac, T0* a1);
extern T1 T247f92ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.add_adapted_base_classes_to_list */
extern void T77f145(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.add_adapted_base_classes_to_list */
extern void T259f135(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_add_adapted_base_classes_to_list */
extern void T259f136(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_add_adapted_base_classes_to_list */
extern void T77f147(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_add_adapted_base_classes_to_list */
extern void T79f338(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T246f64(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T407f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T1413f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.add_supplier */
extern void T1413f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].force_last */
extern void T1015f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_put */
extern void T1015f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_put */
extern void T1015f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_item */
extern T6 T1015f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].hash_position */
extern T6 T1015f31(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.hash_code */
extern T6 T485f32(TC* ac, T0* C);
/* ET_CLASS.hash_code */
extern T6 T79f189(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].resize */
extern void T1015f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_resize */
extern void T1015f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].special_integer_ */
extern T0* T1015f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_resize */
extern void T1015f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_resize */
extern void T1015f70(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1722f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1720f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_item */
extern T0* T1015f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_item */
extern T0* T1015f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_item */
extern T6 T1015f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_resize */
extern void T1015f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_modulus */
extern T6 T1015f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_capacity */
extern T6 T1015f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_put */
extern void T1015f56(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].force */
extern void T1722f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].fill_with */
extern void T1720f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].extend */
extern void T1720f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].search_position */
extern void T1015f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].key_equality_tester */
extern T0* T1015f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].unset_found_item */
extern void T1015f46(TC* ac, T0* C);
/* ET_CLASS.root_context */
extern T0* T79f132(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T1587f42(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T1586f39(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1678f10(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1678f11(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1678f12(TC* ac, T0* C);
/* ET_CLASS.has_flattening_error */
extern T1 T79f129(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_flattening_error */
extern T1 T485f34(TC* ac, T0* C);
/* ET_CLASS.features_flattened */
extern T1 T79f128(TC* ac, T0* C);
/* ET_MASTER_CLASS.features_flattened */
extern T1 T485f33(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1677f6(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1677f7(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1402f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1402f25(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1402f11(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1402f12(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1402f27(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T1401f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T1401f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T1401f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T1401f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T1401f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T1401f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T1401f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T1401f31(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T1401f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T1401f53(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].aliased_resized_area */
extern T0* T1419f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].aliased_resized_area */
extern T0* T1418f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T1401f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T1401f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T1401f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T1401f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T1401f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T1401f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T1401f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS].force */
extern void T1419f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS].fill_with */
extern void T1418f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].extend */
extern void T1418f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T1401f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T1401f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T1401f38(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.add_adapted_base_classes_to_list */
extern void T1402f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T1402f28ot1(TC* ac, T0* a1);
extern T1 T1402f28ot2(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.implementation_class */
extern T0* T1577f3(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.implementation_class */
extern T0* T524f3(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.implementation_class */
extern T0* T1576f3(TC* ac, T0* C);
/* ET_DO_PROCEDURE.implementation_class */
extern T0* T518f2(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.implementation_class */
extern T0* T258f4(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.implementation_class */
extern T0* T1574f4(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.implementation_class */
extern T0* T1573f4(TC* ac, T0* C);
/* ET_DO_FUNCTION.implementation_class */
extern T0* T522f4(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.implementation_class */
extern T0* T394f5(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.implementation_class */
extern T0* T392f3(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.implementation_class */
extern T0* T382f3(TC* ac, T0* C);
/* ET_ATTRIBUTE.implementation_class */
extern T0* T383f3(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.copy_to_type_context */
extern void T246f69(TC* ac, T0* C, T0* a1);
/* ET_CLASS.copy_to_type_context */
extern void T79f336(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1394f13(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1394f19(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1403f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1403f15(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1393f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1393f15(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1395f20(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1395f26(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1395f25(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1392f11(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1392f17(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1392f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T1586f95(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1397f20(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T1381f40(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1410f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1396f19(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T1380f18(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1679f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1676f12(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T407f28(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1678f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1677f5(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1402f18(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1394f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1403f9(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1393f9(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1395f19(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1392f10(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T1585f95(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1397f19(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1381f39(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1410f15(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1396f18(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1380f17(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1679f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1676f11(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T407f27(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T407f33(TC* ac, T0* C, T0* a1);
extern T1 T407f33ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T58f556(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T843c1231(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T41f556(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T58f555(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T843c1230(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T41f555(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T1585f102(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T394f46(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T392f45(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T383f44(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T382f45(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T258f47(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T1577f68(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T1576f63(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T1574f64(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T1573f68(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T522f66(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T518f61(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T524f59(TC* ac, T0* C);
/* ET_IDENTIFIER.set_argument */
extern void T188f131(TC* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T260f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T261f6(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1830f6(TC* ac, T0* C);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T1585f101(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1678f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1677f4(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1402f17(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1402f24(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1394f11(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1394f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force_relation */
extern void T1761f15(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put_indexed_relation */
extern void T1761f17(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].replace */
extern void T753f14(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].item */
extern T0* T753f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T271f20(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T271f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].reset */
extern void T1761f14(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force */
extern void T1761f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put */
extern void T1761f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].put_last */
extern void T753f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1480f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].fill_with */
extern void T1479f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].extend */
extern void T1479f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T271f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].put_new */
extern void T1990f36(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_put */
extern void T1990f51(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].force */
extern void T1992f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].fill_with */
extern void T1991f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].extend */
extern void T1991f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_put */
extern void T1990f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_put */
extern void T1990f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_put */
extern void T1990f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_item */
extern T6 T1990f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].hash_position */
extern T6 T1990f32(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T1585f88(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_item */
extern T6 T1990f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].unset_found_item */
extern void T1990f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].put_last */
extern void T1762f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].resize */
extern void T753f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1480f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1479f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T271f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].resize */
extern void T1990f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_resize */
extern void T1990f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].special_integer_ */
extern T0* T1990f23(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_resize */
extern void T1990f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1992f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1991f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_resize */
extern void T1990f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_item */
extern T0* T1990f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_resize */
extern void T1990f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_modulus */
extern T6 T1990f21(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].resize */
extern void T1762f15(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].capacity */
extern T6 T1761f9(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].count */
extern T6 T1761f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].index_of */
extern T6 T1761f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found_item */
extern T6 T1990f28(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_item */
extern T6 T1990f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found */
extern T1 T1990f27(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search */
extern void T1990f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search_position */
extern void T1990f59(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1403f8(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1393f8(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1395f18(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1392f9(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1392f16(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1392f6(TC* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1392f19(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T247f89(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1397f18(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1381f38(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1381f45(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.type_constraint_type */
extern T0* T493f78(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint_type */
extern T0* T247f77(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint_type */
extern T0* T1587f81(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint_type */
extern T0* T1586f84(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type_constraint_type */
extern T0* T1585f83(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.type */
extern T0* T1564f1(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1410f14(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1396f17(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1380f16(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1679f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1676f10(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T407f31(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1678f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1677f9(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1402f21(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1394f15(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1403f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1393f12(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1395f22(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1392f13(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T493f92(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1397f17(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1381f37(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1410f13(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1396f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1380f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1679f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1676f9(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T407f41(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T407f42(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1678f16(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1677f11(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1402f23(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1394f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1403f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1393f14(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1395f24(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1392f15(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T259f132(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1397f16(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1397f23(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1381f36(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1381f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER1.add_base_type_dependency */
extern void T1381f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER1.add_n_items_to_list */
extern void T1381f29(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T271f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T271f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T271f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].force_last */
extern void T1727f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].force */
extern void T1965f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].fill_with */
extern void T1964f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].extend */
extern void T1964f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].resize */
extern void T1727f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1965f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1964f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].new_capacity */
extern T6 T1727f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].extendible */
extern T1 T1727f8(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.make */
extern T0* T1910c15(TC* ac, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.renames */
extern T0* T493f83(TC* ac, T0* C);
/* ET_TUPLE_TYPE.renames */
extern T0* T259f121(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.renames */
extern T0* T247f82(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.renames */
extern T0* T1587f85(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.renames */
extern T0* T1586f88(TC* ac, T0* C);
/* ET_LIKE_FEATURE.renames */
extern T0* T1585f87(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.renames */
extern T0* T1564f2(TC* ac, T0* C);
/* ET_CLASS_TYPE.renames */
extern T0* T77f115(TC* ac, T0* C);
/* ET_CLASS.renames */
extern T0* T79f250(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T259f91(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T1563f71(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T948f73(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T1587f61(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T1586f64(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T1585f62(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T247f59(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T493f58(TC* ac, T0* C);
/* ET_CLASS.is_named_type */
extern T1 T79f245(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T77f93(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1410f11(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_tuple_type_validity */
extern void T1410f19(TC* ac, T0* C, T0* a1);
extern T1 T1410f19ot1(TC* ac, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1396f14(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1396f22(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1380f13(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1380f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T58f596(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T843c1268(TC* ac, T0* a1, T0* a2);
/* ET_COMPRESSED_POSITION.to_text */
extern T0* T197f9(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.append_to_string */
extern void T197f14(TC* ac, T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T831f6(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_COMPRESSED_POSITION.integer_ */
extern T0* T197f10(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position_to_text */
extern T0* T1072f43(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_position_to_string */
extern void T1072f53(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T1072f44(TC* ac, T0* C);
/* ET_KEYWORD.position_to_text */
extern T0* T438f42(TC* ac, T0* C);
/* ET_KEYWORD.append_position_to_string */
extern void T438f102(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T438f43(TC* ac, T0* C);
/* ET_IDENTIFIER.position_to_text */
extern T0* T188f113(TC* ac, T0* C);
/* ET_IDENTIFIER.append_position_to_string */
extern void T188f143(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T188f118(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position_to_text */
extern T0* T1061f129(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_position_to_string */
extern void T1061f159(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T1061f130(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.position_to_text */
extern T0* T656f127(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_position_to_string */
extern void T656f135(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T656f128(TC* ac, T0* C);
/* ET_SYMBOL.position_to_text */
extern T0* T655f91(TC* ac, T0* C);
/* ET_SYMBOL.append_position_to_string */
extern void T655f122(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T655f92(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T58f184(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T41f596(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T41f184(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1679f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1679f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1679f6(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1676f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1676f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS.has_syntax_error */
extern T1 T79f122(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_syntax_error */
extern T1 T485f44(TC* ac, T0* C);
/* ET_CLASS.is_parsed */
extern T1 T79f121(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_parsed */
extern T1 T485f43(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1676f6(TC* ac, T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T79f101(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_preparsed */
extern T1 T485f37(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T407f32(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T407f36(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.reset_fatal_error */
extern void T407f40(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1678f15(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1678f18(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1677f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1677f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1677f15(TC* ac, T0* C);
/* ET_CLASS.has_ancestors_error */
extern T1 T79f127(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_ancestors_error */
extern T1 T485f46(TC* ac, T0* C);
/* ET_CLASS.ancestors_built */
extern T1 T79f120(TC* ac, T0* C);
/* ET_MASTER_CLASS.ancestors_built */
extern T1 T485f45(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1402f22(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1402f26(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1402f16(TC* ac, T0* C, T1 a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1394f16(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1394f20(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1403f13(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1403f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1393f13(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1393f17(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1395f23(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1395f30(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1395f29(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1392f14(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1392f18(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1392f21(TC* ac, T0* C, T1 a1);
/* ET_CLASS_TYPE.process */
extern void T77f140(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1397f12(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1397f13(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T58f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T843c1237(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.types_to_text */
extern T0* T259f117(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_types_to_string */
extern void T259f138(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.types_to_text */
extern T0* T247f80(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_types_to_string */
extern void T247f94(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.types_to_text */
extern T0* T493f81(TC* ac, T0* C);
/* ET_LIKE_CURRENT.append_types_to_string */
extern void T493f99(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.types_to_text */
extern T0* T1587f84(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_types_to_string */
extern void T1587f100(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.types_to_text */
extern T0* T1586f87(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_types_to_string */
extern void T1586f105(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.types_to_text */
extern T0* T1585f86(TC* ac, T0* C);
/* ET_LIKE_FEATURE.append_types_to_string */
extern void T1585f107(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.types_to_text */
extern T0* T1354f9(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.append_types_to_string */
extern void T1354f16(TC* ac, T0* C, T0* a1);
/* ET_TYPE_RENAME_CONSTRAINT.types_to_text */
extern T0* T1564f5(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.append_types_to_string */
extern void T1564f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS.types_to_text */
extern T0* T79f258(TC* ac, T0* C);
/* ET_CLASS.append_types_to_string */
extern void T79f342(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.types_to_text */
extern T0* T77f112(TC* ac, T0* C);
/* ET_CLASS_TYPE.append_types_to_string */
extern void T77f146(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T1563f11(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T948f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T247f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T58f169(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T41f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T41f169(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1397f7(TC* ac, T0* C);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T77f144(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T2014c20(TC* ac, T0* a1, T0* a2, T6 a3);
/* ET_IDENTIFIER.set_position */
extern void T188f125(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_ECF_LIBRARY.tuple_type */
extern T0* T191f25(TC* ac, T0* C);
/* ET_SYSTEM.tuple_type */
extern T0* T45f7(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tuple_type */
extern T0* T63f28(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T2015c23(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T79f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_constraint */
extern T1 T1587f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T1587f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T1587f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1587f14ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T1586f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1586f24ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T1585f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T79f154(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1563f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1563f21ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1563f28(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f28ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T1563f37(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T948f38(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T1587f35(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f35ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T1586f30(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f30ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T1585f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T247f37(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f37ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T493f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T246f35(TC* ac, T0* C, T0* a1);
extern T1 T246f35ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T1535f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T259f71(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T77f72(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T79f199(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference_with_type_mark */
extern T1 T79f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T259f68(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T259f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T77f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T948f26(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f26ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T948f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T948f19ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1587f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1587f26ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1586f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1586f16ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T1585f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T247f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T247f26ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T493f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T246f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T246f28ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T1535f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T259f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T77f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T79f162(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T259f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T77f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.is_dotnet */
extern T1 T79f107(TC* ac, T0* C);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T79f110(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T860f43(TC* ac, T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T492f22(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T435f5(TC* ac, T0* C);
/* ET_CLASS.is_system_object_class */
extern T1 T79f106(TC* ac, T0* C);
/* ET_CLASS.conforming_ancestor */
extern T0* T79f105(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T494f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T259f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T2014f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1563f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1563f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1563f19ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1563f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1563f26ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.recursive_formal_constraints */
extern T0* T948f35(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T948f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T948f24ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1587f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1587f28ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1586f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1586f18ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1585f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T247f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T247f32ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T493f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T246f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T246f33ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1535f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T259f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T77f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T79f197(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T79f194(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.conforms_to_type_with_type_marks */
extern T1 T1910f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_BASE_TYPE_CONSTRAINT_LIST.conforms_to_type_with_type_marks */
extern T1 T1729f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T259f67(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T77f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T948f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T948f17ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T948f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T1587f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T1586f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T1585f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T247f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T493f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T79f147(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T77f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T2015f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T636f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T245f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T79f82(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T259f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1563f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1563f22ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T948f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T948f20ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1587f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1587f27ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1586f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1586f17ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T1585f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T247f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T247f27ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T493f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T246f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T246f29ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T1535f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T259f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T77f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T79f163(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T259f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T2015f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T245f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T77f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T79f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T247f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T247f17ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T77f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T493f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T246f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T246f25ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T1535f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T259f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T77f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T79f166(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint */
extern T0* T247f79(TC* ac, T0* C, T6 a1);
/* ET_LIKE_CURRENT.type_constraint */
extern T0* T493f80(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint */
extern T0* T1587f83(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint */
extern T0* T1586f86(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.type_constraint */
extern T0* T1585f85(TC* ac, T0* C, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.type_constraint */
extern T0* T1354f8(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.current_type_constraint */
extern T0* T77f131(TC* ac, T0* C);
/* ET_TUPLE_TYPE.current_type_constraint */
extern T0* T259f113(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.current_type_constraint */
extern T0* T247f76(TC* ac, T0* C);
/* ET_LIKE_CURRENT.current_type_constraint */
extern T0* T493f77(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.current_type_constraint */
extern T0* T1587f80(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.current_type_constraint */
extern T0* T1586f83(TC* ac, T0* C);
/* ET_LIKE_FEATURE.current_type_constraint */
extern T0* T1585f82(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.current_type_constraint */
extern T0* T1564f6(TC* ac, T0* C);
/* ET_CLASS.current_type_constraint */
extern T0* T79f259(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.item */
extern T0* T1354f7(TC* ac, T0* C, T6 a1);
/* ET_TYPE_RENAME_CONSTRAINT.type_constraint */
extern T0* T1564f4(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint_count */
extern T6 T247f78(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_constraint_count */
extern T6 T493f79(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint_count */
extern T6 T1587f82(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint_count */
extern T6 T1586f85(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type_constraint_count */
extern T6 T1585f84(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.count */
extern T6 T1354f3(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.count */
extern T6 T1564f3(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_constraint */
extern T1 T1586f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T1586f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_to_constraint */
extern T1 T1585f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_constraint_with_type_marks */
extern T1 T1585f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_constraint */
extern T1 T247f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T247f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_to_constraint */
extern T1 T493f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_constraint_with_type_marks */
extern T1 T493f67(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_to_constraint */
extern T1 T79f230(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_constraint_with_type_marks */
extern T1 T79f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_to_constraint */
extern T1 T259f96(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T259f110(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_to_constraint */
extern T1 T77f102(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T77f120(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_constraint */
extern T1 T1563f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_constraint_with_type_marks */
extern T1 T1563f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER.conforms_to_constraint */
extern T1 T948f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_constraint_with_type_marks */
extern T1 T948f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_LIBRARY.detachable_separate_any_type */
extern T0* T191f21(TC* ac, T0* C);
/* ET_SYSTEM.detachable_separate_any_type */
extern T0* T45f34(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_separate_any_type */
extern T0* T63f24(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T948f31(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1397f14(TC* ac, T0* C);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T77f143(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.unfolded_empty_tuple_actual_parameters */
extern T0* T191f28(TC* ac, T0* C);
/* ET_SYSTEM.unfolded_empty_tuple_actual_parameters */
extern T0* T45f39(TC* ac, T0* C);
/* ET_ECF_SYSTEM.unfolded_empty_tuple_actual_parameters */
extern T0* T63f31(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.position */
extern T0* T2015f17(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T2015f21(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1832f11(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1583f11(TC* ac, T0* C);
/* ET_CLASS.is_routine_class */
extern T1 T79f174(TC* ac, T0* C);
/* ET_ECF_LIBRARY.obsolete_routine_type_mode */
extern T1 T191f99(TC* ac, T0* C);
/* ET_SYSTEM.obsolete_routine_type_mode */
extern T1 T45f119(TC* ac, T0* C);
/* ET_ECF_SYSTEM.obsolete_routine_type_mode */
extern T1 T63f134(TC* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T79f334(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1397f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1381f32(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1381f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T58f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T843c1236(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T58f168(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T41f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T41f168(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T1587f64(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T1586f67(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T1585f65(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T247f63(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T493f61(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T79f229(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T259f95(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T77f101(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T1563f68(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T948f70(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T58f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T843c1235(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T41f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T58f559(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T843c1234(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T58f167(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T41f559(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T41f167(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T1381f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T58f558(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T843c1233(TC* ac, T0* a1, T0* a2);
/* ET_CLASS_TYPE.upper_name */
extern T0* T77f76(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T58f166(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T41f558(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T41f166(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T58f222(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T843c922(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T58f29(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T41f222(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T41f29(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1396f11(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1396f12(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1396f8(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1396f7(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1396f13(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.current_universe */
extern T0* T1396f6(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1380f10(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1380f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.current_universe */
extern T0* T1380f7(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T407f30(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T407f35(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1563f39(TC* ac, T0* C, T0* a1);
extern T1 T1563f39ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T948f40(TC* ac, T0* C, T0* a1);
extern T1 T948f40ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1587f66(TC* ac, T0* C, T0* a1);
extern T1 T1587f66ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1586f69(TC* ac, T0* C, T0* a1);
extern T1 T1586f69ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1585f67(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T247f65(TC* ac, T0* C, T0* a1);
extern T1 T247f65ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T493f63(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T246f48(TC* ac, T0* C);
extern T1 T246f48ot1(TC* ac, T0* a1);
/* ET_LIKE_N.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1535f30(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T79f237(TC* ac, T0* C);
/* ET_CLASS.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T79f231(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T636f24(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1563f76(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T948f78(TC* ac, T0* C, T0* a1);
/* ET_CLASS.ancestors_built_successfully */
extern T1 T79f171(TC* ac, T0* C);
/* ET_TUPLE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T259f97(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T2015f14(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1832f9(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1832f3(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T1587f39(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T1586f36(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T1585f36(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T247f10(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T493f15(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T259f11(TC* ac, T0* C);
/* ET_CLASS.type */
extern T0* T79f135(TC* ac, T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T77f21(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1587f78(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1586f81(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1585f80(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1583f9(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T1583f3(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T247f72(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T493f75(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T259f106(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T79f252(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T77f125(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T245f22(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T77f103(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T494f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T2014f14(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.current_system */
extern T0* T407f18(TC* ac, T0* C);
/* ET_TYPE_CHECKER.current_universe */
extern T0* T407f21(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1679f4(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1679f5(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1678f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1677f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1677f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1676f4(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1676f5(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1402f20(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1394f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1403f11(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1403f16(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.current_universe */
extern T0* T1403f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1393f11(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1393f16(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1563f70(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T948f72(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T1587f68(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T1586f71(TC* ac, T0* C);
/* ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T1585f69(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T247f67(TC* ac, T0* C);
/* ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T493f69(TC* ac, T0* C);
/* ET_CLASS.has_identifier_anchored_type */
extern T1 T79f239(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T636f25(TC* ac, T0* C);
/* ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T259f101(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T2015f15(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T245f23(TC* ac, T0* C);
/* ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T77f109(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T494f15(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T2014f15(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1393f5(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1395f21(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1395f28(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1395f16(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1395f27(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1395f8(TC* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1392f12(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T58f553(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T843c1228(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T58f164(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T41f553(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T41f164(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T1577f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_deferred */
extern T1 T79f70(TC* ac, T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T79f95(TC* ac, T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T438f36(TC* ac, T0* C);
/* ET_CLASS.is_creation_exported_to */
extern T1 T79f238(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T1174f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T1171f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.has_feature_name */
extern T1 T1171f14(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_descendant */
extern T1 T1132f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T79f232(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T437f3(TC* ac, T0* C, T0* a1);
/* ET_CLIENT.base_class */
extern T0* T428f3(TC* ac, T0* C);
/* ET_CLIENTS.has_class */
extern T1 T1132f11(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T427f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENT_LIST.has_class */
extern T1 T427f8(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T1171f11(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T524f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T1576f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T518f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T58f552(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T843c1227(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T41f552(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.position */
extern T0* T79f223(TC* ac, T0* C);
/* ET_NOTE_LIST.position */
extern T0* T1288f9(TC* ac, T0* C);
/* ET_NOTE.position */
extern T0* T1561f3(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.position */
extern T0* T1299f6(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.tokens */
extern T0* T1299f8(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T1551f16(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T1550f16(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T1549f16(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T1548f16(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T395f11(TC* ac, T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T1547f29(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T1546f27(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T1544f23(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.position */
extern T0* T1562f6(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T347f14(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T1558f10(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T1557f10(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T1556f11(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T1555f11(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T1553f11(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T1552f11(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T1545f11(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.first */
extern T0* T1299f7(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.is_empty */
extern T1 T1299f5(TC* ac, T0* C);
/* ET_NOTE.tag */
extern T0* T1561f4(TC* ac, T0* C);
/* ET_TAGGED_NOTE.position */
extern T0* T1560f4(TC* ac, T0* C);
/* ET_NOTE_LIST.first */
extern T0* T1288f11(TC* ac, T0* C);
/* ET_NOTE_LIST.is_empty */
extern T1 T1288f10(TC* ac, T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T77f75(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T1148f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS.features_flattened_successfully */
extern T1 T79f240(TC* ac, T0* C);
/* ET_TUPLE_TYPE.base_class */
extern T0* T259f12(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.base_class */
extern T0* T1910f10(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_constraint */
extern T0* T259f116(TC* ac, T0* C, T6 a1);
/* ET_CLASS.type_constraint */
extern T0* T79f244(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.type_constraint */
extern T0* T1910f4(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.type_constraint */
extern T0* T1729f7(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.item */
extern T0* T1729f13(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.type_constraint */
extern T0* T77f108(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T1148f7(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T1148f10(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.type_constraint_count */
extern T6 T259f115(TC* ac, T0* C);
/* ET_CLASS.type_constraint_count */
extern T6 T79f243(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.count */
extern T6 T1910f3(TC* ac, T0* C);
/* ET_BASE_TYPE_CONSTRAINT_LIST.count */
extern T6 T1729f4(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_constraint_count */
extern T6 T77f107(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.constraint_base_types */
extern T0* T948f33(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1410f5(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.index */
extern T6 T1563f7(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.index */
extern T6 T948f2(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T247f3(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T1148f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T948f32(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T636f7(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T494f4(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T2014f16(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T2015f20(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T636f10(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T245f8(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.count */
extern T6 T494f3(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.count */
extern T6 T2014f1(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T2015f19(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.count */
extern T6 T636f1(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.count */
extern T6 T245f1(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1410f10(TC* ac, T0* C);
/* ET_CLASS.interface_checked_successfully */
extern T1 T79f131(TC* ac, T0* C);
/* ET_CLASS.base_class */
extern T0* T79f72(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.process_class */
extern void T1396f15(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1380f14(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1397f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1381f31(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1679f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1676f8(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1678f17(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1677f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1403f18(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1402f29(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1395f31(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1394f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1393f18(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1392f20(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T407f39(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.process_class */
extern void T502f7(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.internal_process_class */
extern void T502f9(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T502f10(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].forth */
extern void T1680f12(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_forth */
extern void T1015f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].add_traversing_cursor */
extern void T1015f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_next_cursor */
extern void T1680f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_position */
extern void T1680f15(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].remove_traversing_cursor */
extern void T1015f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_after */
extern void T1680f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T58f564(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T58f378(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcdep */
extern T0* T2001c25(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].forth */
extern void T2116f11(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_forth */
extern void T2115f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].add_traversing_cursor */
extern void T2115f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_next_cursor */
extern void T2116f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_position */
extern void T2116f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].remove_traversing_cursor */
extern void T2115f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_after */
extern void T2116f13(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_item */
extern T6 T2115f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].key */
extern T0* T2116f4(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_key */
extern T0* T2115f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_item */
extern T0* T2115f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].after */
extern T1 T2116f6(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].start */
extern void T2116f10(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_start */
extern void T2115f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_off */
extern T1 T2115f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].off */
extern T1 T2116f8(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_cursor */
extern T0* T2115f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].make */
extern T0* T2116c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].is_empty */
extern T1 T2115f29(TC* ac, T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T492f12(TC* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_lower_name */
extern T0* T492f14(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.string_ */
extern T0* T492f16(TC* ac, T0* C);
/* ET_SYSTEM.relative_lower_name */
extern T0* T45f125(TC* ac, T0* C, T0* a1, T2 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].item */
extern T0* T964f9(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.string_ */
extern T0* T45f132(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T964f10(TC* ac, T0* C);
/* ET_LIBRARY.shortest_path */
extern T0* T910f99(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.shortest_path */
extern T0* T910f99ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LIBRARY.shortest_path */
extern T0* T910f99ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.shortest_path */
extern T0* T910f99ac3(TC* ac, T0* a1, T0* a2);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].negated */
extern T1 T1521f1(TC* ac, T0* C, T0* a1, T0* a2);
/* PREDICATE [TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T1522f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PROCEDURE [TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T896f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LIBRARY.insert_in_hash_table */
extern void T910f170(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].force_first */
extern void T964f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put */
extern void T964f15(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T964f18(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].set_position */
extern void T1693f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_right */
extern void T964f17(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].force */
extern void T1692f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].fill_with */
extern void T1691f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].extend */
extern void T1691f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put_last */
extern void T964f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].resize */
extern void T964f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1692f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1691f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T964f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].extendible */
extern T1 T964f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].before */
extern T1 T1519f4(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].back */
extern void T1519f16(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_back */
extern void T1518f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].add_traversing_cursor */
extern void T1518f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_next_cursor */
extern void T1519f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_position */
extern void T1519f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].remove_traversing_cursor */
extern void T1518f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_before */
extern void T1519f19(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_item */
extern T6 T1518f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].finish */
extern void T1519f15(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_finish */
extern void T1518f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_off */
extern T1 T1518f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].off */
extern T1 T1519f10(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].is_empty */
extern T1 T1518f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].forth */
extern void T1519f14(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_forth */
extern void T1518f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_after */
extern void T1519f17(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].go_after */
extern void T1519f13(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_go_after */
extern void T1518f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].has */
extern T1 T1518f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].search_position */
extern void T1518f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].hash_position */
extern T6 T1518f24(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.hash_code */
extern T6 T45f131(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T216f92(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T628f92(TC* ac, T0* C);
/* ET_LIBRARY.hash_code */
extern T6 T910f93(TC* ac, T0* C);
/* ET_ECF_LIBRARY.hash_code */
extern T6 T191f104(TC* ac, T0* C);
/* ET_ECF_SYSTEM.hash_code */
extern T6 T63f145(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_item */
extern T0* T1518f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_item */
extern T6 T1518f32(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.universes_do_if */
extern void T45f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T215f12(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T626f7(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T192f11(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].item */
extern T0* T610f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T216f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T627f8(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].item */
extern T0* T1464f9(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T628f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.universes_do_if */
extern void T191f192(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.universes_do_if */
extern void T910f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_if */
extern void T63f285(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.universe_actions */
extern T0* T910f102(TC* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1521c2(TC* ac);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].item */
extern T6 T1519f9(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_item */
extern T6 T1518f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_item */
extern T6 T1518f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].key */
extern T0* T1519f7(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_key */
extern T0* T1518f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].after */
extern T1 T1519f5(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].start */
extern void T1519f12(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_start */
extern void T1518f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_cursor */
extern T0* T1518f21(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].make */
extern T0* T1519c11(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].force_last */
extern void T1518f37(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_put */
extern void T1518f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].force */
extern void T1671f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].fill_with */
extern void T1669f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].extend */
extern void T1669f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_put */
extern void T1518f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_put */
extern void T1518f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].resize */
extern void T1518f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_resize */
extern void T1518f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].special_integer_ */
extern T0* T1518f28(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_resize */
extern void T1518f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].aliased_resized_area */
extern T0* T1671f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_UNIVERSE].aliased_resized_area */
extern T0* T1669f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_resize */
extern void T1518f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_resize */
extern void T1518f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_modulus */
extern T6 T1518f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_capacity */
extern T6 T1518f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_put */
extern void T1518f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].unset_found_item */
extern void T1518f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_map */
extern T0* T1518c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_with_equality_testers */
extern void T1518f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_sparse_container */
extern void T1518f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].set_internal_cursor */
extern void T1518f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_slots */
extern void T1518f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_clashes */
extern void T1518f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_key_storage */
extern void T1518f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].make */
extern T0* T1671f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNIVERSE].make_empty */
extern T0* T1669c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1671c3(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_item_storage */
extern void T1518f51(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].make */
extern T0* T964c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T964f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T964f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].make */
extern T0* T1693c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].make */
extern T0* T1692f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T1691c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].default_create */
extern T0* T1692c3(TC* ac);
/* ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T628f99(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T628f99ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T628f99ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T628f99ac3(TC* ac, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T628f168(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T628f102(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f98(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f98ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f98ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f98ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T216f166(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T216f101(TC* ac, T0* C);
/* ET_ECF_LIBRARY.shortest_path */
extern T0* T191f108(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T191f108ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T191f108ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T191f108ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.insert_in_hash_table */
extern void T191f196(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_LIBRARY.universe_actions */
extern T0* T191f110(TC* ac, T0* C);
/* ET_ECF_SYSTEM.shortest_path */
extern T0* T63f154(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T63f154ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T63f154ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T63f154ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.insert_in_hash_table */
extern void T63f245(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_SYSTEM.universe_actions */
extern T0* T63f142(TC* ac, T0* C);
/* ET_SYSTEM.shortest_path */
extern T0* T45f130(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.shortest_path */
extern T0* T45f130ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_SYSTEM.shortest_path */
extern T0* T45f130ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.shortest_path */
extern T0* T45f130ac3(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.insert_in_hash_table */
extern void T45f207(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_SYSTEM.universe_actions */
extern T0* T45f133(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T216f97(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T628f98(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T218f23(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T212f21(TC* ac, T0* C);
/* ET_LIBRARY.adapted_universe */
extern T0* T910f94(TC* ac, T0* C, T0* a1);
extern T1 T910f94ot1(TC* ac, T0* a1);
extern T1 T910f94ot2(TC* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T215f5(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T192f5(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T628f94(TC* ac, T0* C, T0* a1);
extern T1 T628f94ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].has */
extern T1 T1464f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T216f94(TC* ac, T0* C, T0* a1);
extern T1 T216f94ot1(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.adapted_universe */
extern T0* T191f105(TC* ac, T0* C, T0* a1);
extern T1 T191f105ot1(TC* ac, T0* a1);
extern T1 T191f105ot2(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.adapted_universe */
extern T0* T63f155(TC* ac, T0* C, T0* a1);
extern T1 T63f155ot1(TC* ac, T0* a1);
extern T1 T63f155ot2(TC* ac, T0* a1);
/* ET_SYSTEM.adapted_universe */
extern T0* T45f129(TC* ac, T0* C, T0* a1);
extern T1 T45f129ot1(TC* ac, T0* a1);
extern T1 T45f129ot2(TC* ac, T0* a1);
/* ET_SYSTEM.lower_name */
extern T0* T45f128(TC* ac, T0* C);
/* ET_ECF_SYSTEM.relative_lower_name */
extern T0* T63f156(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.string_ */
extern T0* T63f160(TC* ac, T0* C);
/* ET_ECF_SYSTEM.lower_name */
extern T0* T63f159(TC* ac, T0* C);
/* ET_NONE_GROUP.lower_name */
extern T0* T492f15(TC* ac, T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T492f11(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T435f13(TC* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T435f15(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.string_ */
extern T0* T435f17(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T435f16(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T435f23(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_system */
extern T0* T78f223(TC* ac, T0* C);
/* ET_SYSTEM.make */
extern T0* T45c138(TC* ac, T0* a1);
/* ET_SYSTEM.set_kernel_types */
extern void T45f143(TC* ac, T0* C);
/* ET_SYSTEM.set_wide_character_type */
extern void T45f185(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_marked */
extern void T485f51(TC* ac, T0* C, T1 a1);
/* ET_CLASS.set_marked */
extern void T79f278(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM.master_class */
extern T0* T45f120(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].force_last_new */
extern void T230f49(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T230f56(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].force */
extern void T645f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].fill_with */
extern void T646f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].extend */
extern void T646f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T230f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].force */
extern void T643f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].fill_with */
extern void T644f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].extend */
extern void T644f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_put */
extern void T230f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_put */
extern void T230f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T230f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T230f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].resize */
extern void T230f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T230f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T230f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T230f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].aliased_resized_area */
extern T0* T645f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].aliased_resized_area */
extern T0* T646f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T230f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T643f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T644f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T230f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T230f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_resize */
extern void T230f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T230f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T230f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T230f46(TC* ac, T0* C);
/* ET_MASTER_CLASS.make */
extern T0* T485c50(TC* ac, T0* a1, T0* a2);
/* ET_MASTER_CLASS.tokens */
extern T0* T485f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found_item */
extern T0* T230f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T230f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found */
extern T1 T230f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search */
extern void T230f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search_position */
extern void T230f51(TC* ac, T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T480f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_class_name */
extern T1 T188f53(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern T0* T78f33(TC* ac, T0* C);
/* ET_SYSTEM.tokens */
extern T0* T45f122(TC* ac, T0* C);
/* ET_SYSTEM.set_typed_pointer_type */
extern void T45f184(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T245f28(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].force */
extern void T658f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T654f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T654f8(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T245f11(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T658c3(TC* ac);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T245c27(TC* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T245f27p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T658f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T654c5(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern T0* T78f213(TC* ac, T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T655c93(TC* ac);
/* ET_SYMBOL.make_leaf */
extern void T655f97(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern T0* T78f212(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T656c129(TC* ac);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T656f130(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T245f9(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern T0* T78f126(TC* ac, T0* C);
/* ET_SYSTEM.set_type_type */
extern void T45f183(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern T0* T78f125(TC* ac, T0* C);
/* ET_SYSTEM.set_system_string_type */
extern void T45f182(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern T0* T78f153(TC* ac, T0* C);
/* ET_SYSTEM.set_system_object_type */
extern void T45f181(TC* ac, T0* C);
/* ET_PARENT_LIST.put_first */
extern void T483f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].force */
extern void T990f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].fill_with */
extern void T989f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].extend */
extern void T989f7(TC* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.fixed_array */
extern T0* T483f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T990c2(TC* ac);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T483c11(TC* ac, T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T483f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T990f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].make_empty */
extern T0* T989c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern T0* T78f259(TC* ac, T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T438c56(TC* ac);
/* ET_PARENT_LIST.tokens */
extern T0* T483f9(TC* ac, T0* C);
/* ET_PARENT.make */
extern T0* T482c11(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern T0* T78f99(TC* ac, T0* C);
/* ET_KEYWORD.make_end */
extern T0* T438c45(TC* ac);
/* ET_PARENT.tokens */
extern T0* T482f9(TC* ac, T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T482f8(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern T0* T78f129(TC* ac, T0* C);
/* ET_SYSTEM.set_string_type */
extern void T45f180(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern T0* T78f152(TC* ac, T0* C);
/* ET_SYSTEM.set_string_32_type */
extern void T45f179(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T484c6(TC* ac, T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T992c8(TC* ac);
/* ET_BRACED_TYPE_LIST.make */
extern void T992f8p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T1701f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].make_empty */
extern T0* T1700c4(TC* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern T0* T992f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T1701c2(TC* ac);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern T0* T78f723(TC* ac, T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T655c112(TC* ac);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern T0* T78f722(TC* ac, T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T655c111(TC* ac);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T992f5(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern T0* T78f151(TC* ac, T0* C);
/* ET_SYSTEM.set_string_8_type */
extern void T45f178(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern T0* T78f150(TC* ac, T0* C);
/* ET_SYSTEM.set_special_type */
extern void T45f177(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern T0* T78f124(TC* ac, T0* C);
/* ET_SYSTEM.set_routine_type */
extern void T45f176(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern T0* T78f123(TC* ac, T0* C);
/* ET_SYSTEM.set_real_64_type */
extern void T45f175(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern T0* T78f117(TC* ac, T0* C);
/* ET_SYSTEM.set_real_32_type */
extern void T45f174(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern T0* T78f116(TC* ac, T0* C);
/* ET_SYSTEM.set_real_type */
extern void T45f173(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern T0* T78f36(TC* ac, T0* C);
/* ET_SYSTEM.set_procedure_type */
extern void T45f172(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern T0* T78f122(TC* ac, T0* C);
/* ET_SYSTEM.set_predicate_type */
extern void T45f171(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern T0* T78f121(TC* ac, T0* C);
/* ET_SYSTEM.set_pointer_type */
extern void T45f170(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern T0* T78f118(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_64_type */
extern void T45f169(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern T0* T78f115(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_32_type */
extern void T45f168(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern T0* T78f114(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_16_type */
extern void T45f167(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern T0* T78f113(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_8_type */
extern void T45f166(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern T0* T78f112(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_type */
extern void T45f165(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern T0* T78f35(TC* ac, T0* C);
/* ET_SYSTEM.set_iterable_type */
extern void T45f164(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iterable_class_name */
extern T0* T78f131(TC* ac, T0* C);
/* ET_SYSTEM.set_ise_exception_manager_type */
extern void T45f163(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern T0* T78f149(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_64_type */
extern void T45f162(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern T0* T78f111(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_32_type */
extern void T45f161(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern T0* T78f110(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_16_type */
extern void T45f160(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern T0* T78f109(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_8_type */
extern void T45f159(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern T0* T78f108(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_type */
extern void T45f158(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern T0* T78f34(TC* ac, T0* C);
/* ET_SYSTEM.set_immutable_string_32_type */
extern void T45f157(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_32_class_name */
extern T0* T78f148(TC* ac, T0* C);
/* ET_SYSTEM.set_immutable_string_8_type */
extern void T45f156(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_8_class_name */
extern T0* T78f147(TC* ac, T0* C);
/* ET_SYSTEM.set_function_type */
extern void T45f155(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern T0* T78f120(TC* ac, T0* C);
/* ET_SYSTEM.set_exception_manager_type */
extern void T45f154(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern T0* T78f146(TC* ac, T0* C);
/* ET_SYSTEM.set_exception_type */
extern void T45f153(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_class_name */
extern T0* T78f145(TC* ac, T0* C);
/* ET_SYSTEM.set_double_type */
extern void T45f152(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern T0* T78f37(TC* ac, T0* C);
/* ET_SYSTEM.set_character_32_type */
extern void T45f151(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern T0* T78f107(TC* ac, T0* C);
/* ET_SYSTEM.set_character_8_type */
extern void T45f150(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern T0* T78f106(TC* ac, T0* C);
/* ET_SYSTEM.set_character_type */
extern void T45f149(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern T0* T78f32(TC* ac, T0* C);
/* ET_SYSTEM.set_boolean_type */
extern void T45f148(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern T0* T78f105(TC* ac, T0* C);
/* ET_SYSTEM.set_array_type */
extern void T45f147(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern T0* T78f127(TC* ac, T0* C);
/* ET_SYSTEM.set_tuple_type */
extern void T45f146(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T494c18(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern T0* T78f119(TC* ac, T0* C);
/* ET_SYSTEM.set_none_type */
extern void T45f145(TC* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_class */
extern void T485f52(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T485f56(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.update_intrinsic_class */
extern void T485f58(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_intrinsic_class */
extern void T485f59(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T485f59ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T485f59ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T485f59ac3(TC* ac, T0* a1);
extern T1 T485f59ot1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T921f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_MASTER_CLASS.is_marked */
extern T1 T485f21(TC* ac, T0* C);
/* ET_MASTER_CLASS.mark_overridden */
extern void T485f57(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_overriding_class */
extern void T485f68(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_last */
extern void T993f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].resize */
extern void T993f22(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_capacity */
extern T6 T993f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].extendible */
extern T1 T993f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].make */
extern T0* T993c14(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].set_internal_cursor */
extern void T993f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_cursor */
extern T0* T993f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].make */
extern T0* T1702c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].make */
extern T0* T643f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].make_empty */
extern T0* T644c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].default_create */
extern T0* T643c3(TC* ac);
/* ET_MASTER_CLASS.is_override */
extern T1 T485f26(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_override */
extern T1 T79f113(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].do_all */
extern void T993f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].item */
extern T0* T993f11(TC* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.unmark_overridden */
extern void T485f60(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_overriding_class */
extern void T485f67(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_first */
extern void T993f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove */
extern void T993f17(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].keep_head */
extern void T644f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].set_count */
extern void T644f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_left */
extern void T993f26(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_left */
extern void T993f25(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_position */
extern void T1702f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_last */
extern void T993f24(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_last_cursors_after */
extern void T993f31(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_next_cursor */
extern void T1702f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_after */
extern void T1702f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].first */
extern T0* T993f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].is_empty */
extern T1 T993f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].delete */
extern void T993f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_all_cursors_after */
extern void T993f27(TC* ac, T0* C);
/* ET_CLASS.is_unknown_class */
extern T1 T79f114(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern T0* T78f94(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_first */
extern void T507f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put */
extern void T507f23(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_right */
extern void T507f26(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1420f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_right */
extern void T507f25(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T507f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T507f21(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T507f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T507f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T507c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].set_internal_cursor */
extern void T507f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T507f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1420c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T1419f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS].make_empty */
extern T0* T1418c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T1419c3(TC* ac);
/* ET_MASTER_CLASS.add_first_local_override_class */
extern void T485f55(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_in_override_group */
extern T1 T79f112(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_override */
extern T1 T860f21(TC* ac, T0* C);
/* ET_NONE_GROUP.is_override */
extern T1 T492f6(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_override */
extern T1 T435f7(TC* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T485f54(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_group */
extern void T79f265(TC* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T492c30(TC* ac, T0* a1);
/* ET_SYSTEM.register_class */
extern void T45f186(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T79f272(TC* ac, T0* C, T6 a1);
/* ET_CLASS.make */
extern void T79f271(TC* ac, T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T79c271(TC* ac, T0* a1);
/* ET_CLASS_CODES.class_code */
extern T8 T439f1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found_item */
extern T8 T822f28(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_item */
extern T8 T822f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found */
extern T1 T822f29(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search */
extern void T822f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search_position */
extern void T822f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].hash_position */
extern T6 T822f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_item */
extern T0* T822f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_item */
extern T6 T822f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_item */
extern T6 T822f26(TC* ac, T0* C, T6 a1);
/* ET_CLASS_CODES.codes_by_name */
extern T0* T439f2(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern T0* T78f132(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern T0* T78f130(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern T0* T78f128(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].force_last */
extern void T822f37(TC* ac, T0* C, T8 a1, T0* a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_put */
extern void T822f45(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_put */
extern void T822f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_put */
extern void T822f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].resize */
extern void T822f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_resize */
extern void T822f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].special_integer_ */
extern T0* T822f31(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_resize */
extern void T822f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_resize */
extern void T822f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].aliased_resized_area */
extern T0* T1497f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATURAL_8].aliased_resized_area */
extern T0* T533f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_resize */
extern void T822f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_modulus */
extern T6 T822f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_capacity */
extern T6 T822f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_put */
extern void T822f41(TC* ac, T0* C, T8 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_8].force */
extern void T1497f4(TC* ac, T0* C, T0* a1, T8 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].unset_found_item */
extern void T822f40(TC* ac, T0* C);
/* ET_CLASS_CODES.tokens */
extern T0* T439f6(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_key_equality_tester */
extern void T822f36(TC* ac, T0* C, T0* a1);
/* ET_CLASS_CODES.class_name_tester */
extern T0* T439f4(TC* ac, T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T480c2(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_map */
extern T0* T822c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_with_equality_testers */
extern void T822f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_sparse_container */
extern void T822f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_internal_cursor */
extern void T822f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_cursor */
extern T0* T822f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME].make */
extern T0* T1498c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_slots */
extern void T822f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_clashes */
extern void T822f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_key_storage */
extern void T822f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T645f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].make_empty */
extern T0* T646c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T645c3(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_item_storage */
extern void T822f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].make */
extern T0* T1497f2(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].default_create */
extern T0* T1497c3(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_group */
extern T0* T78f2(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.make */
extern T0* T435c31(TC* ac);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern T0* T78f98(TC* ac, T0* C);
/* ET_KEYWORD.make_class */
extern T0* T438c44(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern T0* T78f97(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T263c8(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T971f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].make_empty */
extern T0* T970c5(TC* ac, T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern T0* T263f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T971c3(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern T0* T78f96(TC* ac, T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T262c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T969f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].make_empty */
extern T0* T967c5(TC* ac, T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern T0* T262f7(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T969c3(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern T0* T78f95(TC* ac, T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T437c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T981f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].make_empty */
extern T0* T980c5(TC* ac, T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern T0* T437f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T981c3(TC* ac);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern T0* T78f143(TC* ac, T0* C);
/* ET_SYSTEM.set_any_type */
extern void T45f144(TC* ac, T0* C);
/* ET_CLIENT_LIST.put_first */
extern void T427f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].force */
extern void T818f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].fill_with */
extern void T817f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].extend */
extern void T817f8(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.fixed_array */
extern T0* T427f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].default_create */
extern T0* T818c3(TC* ac);
/* ET_CLIENT.make */
extern T0* T428c6(TC* ac, T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T427c13(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].make */
extern T0* T818f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].make_empty */
extern T0* T817c5(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_mark */
extern T0* T78f142(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.make */
extern T0* T486c24(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.separate_keyword */
extern T0* T78f103(TC* ac, T0* C);
/* ET_KEYWORD.make_separate */
extern T0* T438c46(TC* ac);
/* ET_SYSTEM.make_adapted */
extern void T45f142(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.default_read_only_value */
extern T1 T45f123(TC* ac, T0* C);
/* ET_SYSTEM.set_unknown_kernel_types */
extern void T45f141(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern T0* T78f140(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern T0* T78f139(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T245c32(TC* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern void T245f32p1(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern T0* T78f138(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern T0* T78f137(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern T0* T78f136(TC* ac, T0* C);
/* ET_CLIENT_LIST.make */
extern T0* T427c15(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_parents */
extern T0* T78f135(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parent */
extern T0* T78f134(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_type */
extern T0* T78f133(TC* ac, T0* C);
/* ET_SYSTEM.set_system_name */
extern void T45f140(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.initialize */
extern void T45f139(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T215c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T626c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T626f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T626f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1463c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1462f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1461c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1462c3(TC* ac);
/* ET_CLUSTERS.make_empty */
extern T0* T479c3(TC* ac);
/* DS_ARRAYED_LIST [ET_CLUSTER].make */
extern T0* T987c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].set_internal_cursor */
extern void T987f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_cursor */
extern T0* T987f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER].make */
extern T0* T1699c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].make */
extern T0* T1698f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLUSTER].make_empty */
extern T0* T1697c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].default_create */
extern T0* T1698c3(TC* ac);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T192c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].make */
extern T0* T610c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T610f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T610f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY].make */
extern T0* T1458c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].make */
extern T0* T1457f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1456c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].default_create */
extern T0* T1457c3(TC* ac);
/* ET_SYSTEM.initialize */
extern void T45f139p1(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T230f39(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern T0* T45f121(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_map */
extern T0* T230c38(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T230f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T230f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_internal_cursor */
extern void T230f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T230f26(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].make */
extern T0* T642c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_slots */
extern void T230f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_clashes */
extern void T230f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T230f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T230f42(TC* ac, T0* C, T6 a1);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T435f6(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T435f12(TC* ac, T0* C);
/* ET_ECF_CLUSTER.full_lower_name */
extern T0* T860f48(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T860f50(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T860f50p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_lower_name */
extern T0* T191f109(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.string_ */
extern T0* T191f112(TC* ac, T0* C);
/* ET_ECF_LIBRARY.lower_name */
extern T0* T191f111(TC* ac, T0* C);
/* ET_ECF_CLUSTER.string_ */
extern T0* T860f56(TC* ac, T0* C);
/* ET_ECF_CLUSTER.lower_name */
extern T0* T860f60(TC* ac, T0* C);
/* ET_ECF_CLUSTER.current_system */
extern T0* T860f46(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T58f171(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcdep_error */
extern void T41f564(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T41f378(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T41f171(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T58f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcpro */
extern T0* T2001c24(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T58f170(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcpro_error */
extern void T41f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T41f170(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T1821f8(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1821f8ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1821f8ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1821f8ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1821f8ac4(TC* ac, T0* a1, T0* a2);
extern T1 T1821f8ot1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [STRING_8]].set_rout_disp_final */
extern void T2137f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PREDICATE [TUPLE [LX_WILDCARD]].set_rout_disp_final */
extern void T2149f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T1821f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* LX_DFA_WILDCARD.recognizes */
extern T1 T2142f15(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.longest_end_position */
extern T6 T2142f16(TC* ac, T0* C, T0* a1, T6 a2);
/* LX_DFA_WILDCARD.set_subject */
extern void T2142f21(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.is_compiled */
extern T1 T2142f17(TC* ac, T0* C);
/* ET_ECF_LIBRARY.full_name */
extern T0* T191f117(TC* ac, T0* C, T2 a1);
/* ET_ECF_LIBRARY.relative_name */
extern T0* T191f118(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.name */
extern T0* T216f5(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.name */
extern T0* T628f5(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.name */
extern T0* T218f17(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.name */
extern T0* T212f15(TC* ac, T0* C);
/* ET_ECF_CLUSTER.universe */
extern T0* T860f4(TC* ac, T0* C);
/* ET_NONE_GROUP.universe */
extern T0* T492f1(TC* ac, T0* C);
/* ET_ECF_CLUSTER.parent */
extern T0* T860f31(TC* ac, T0* C);
/* ET_NONE_GROUP.parent */
extern T0* T492f19(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.parent */
extern T0* T435f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].there_exists */
extern T1 T150f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.full_name */
extern T0* T860f63(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T860f66(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T860f66p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.relative_name */
extern T0* T63f162(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.full_name */
extern T0* T492f18(TC* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_name */
extern T0* T492f21(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_name */
extern T0* T45f135(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.full_name */
extern T0* T435f19(TC* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_name */
extern T0* T435f22(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T1821f7(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].there_exists */
extern T1 T2115f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_item */
extern T0* T2115f25(TC* ac, T0* C, T6 a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T1821f5(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T1821f18(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.absolute_pathname */
extern T0* T860f64(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T130f5(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T130f19(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.item */
extern T0* T530f8(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable STRING_8].item */
extern T0* T1427f4(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T530f7(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T530f11(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.set_canonical */
extern void T530f21(TC* ac, T0* C);
/* KL_PATHNAME.append_current */
extern void T530f23(TC* ac, T0* C);
/* KL_PATHNAME.append_name */
extern void T530f28(TC* ac, T0* C, T0* a1);
/* ARRAY [detachable STRING_8].force */
extern void T1427f11(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].move_data */
extern void T543f10(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].overlapping_move */
extern void T543f12(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].force */
extern void T543f13(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].non_overlapping_move */
extern void T543f11(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [detachable STRING_8].capacity */
extern T6 T1427f7(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].set_area */
extern void T1427f14(TC* ac, T0* C, T0* a1);
/* ARRAY [detachable STRING_8].make_empty_area */
extern void T1427f13(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable STRING_8].additional_space */
extern T6 T1427f6(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].empty_area */
extern T1 T1427f5(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].put */
extern void T1427f10(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T130f20(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T530f24(TC* ac, T0* C);
/* KL_PATHNAME.set_relative */
extern void T530f22(TC* ac, T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T530c20(TC* ac);
/* ARRAY [detachable STRING_8].make_filled */
extern T0* T1427c9(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable STRING_8].make_filled_area */
extern void T1427f12(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].make_filled */
extern T0* T543c8(TC* ac, T0* a1, T6 a2);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T129f5(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T129f22(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T129f21(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T530f27(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T530f26(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T530f25(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.file_system */
extern T0* T860f51(TC* ac, T0* C);
/* ET_ECF_CLUSTER.unix_file_system */
extern T0* T860f53(TC* ac, T0* C);
/* ET_ECF_CLUSTER.windows_file_system */
extern T0* T860f52(TC* ac, T0* C);
/* ET_ECF_CLUSTER.operating_system */
extern T0* T860f61(TC* ac, T0* C);
/* ET_ECF_CLUSTER.full_pathname */
extern T0* T860f38(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T130f7(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T129f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.filename */
extern T0* T191f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T189f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM.filename */
extern T0* T63f2(TC* ac, T0* C);
/* ET_ECF_SETTINGS.value */
extern T0* T62f5(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].found_item */
extern T0* T219f21(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].found */
extern T1 T219f39(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].search */
extern void T219f56(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T130f6(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T130f4(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T130f18(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T129f4(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T129f20(TC* ac, T0* C);
/* ET_ECF_VARIABLES.interpreted_string */
extern T0* T67f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_VARIABLES.expanded_string */
extern T0* T67f9(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_VARIABLES.value */
extern T0* T67f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_VARIABLES.string_ */
extern T0* T67f5(TC* ac, T0* C);
/* UC_UTF8_STRING.has */
extern T1 T834f70(TC* ac, T0* C, T2 a1);
/* UC_STRING.has */
extern T1 T454f70(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.execution_environment */
extern T0* T860f68(TC* ac, T0* C);
/* ET_NONE_GROUP.absolute_pathname */
extern T0* T492f20(TC* ac, T0* C);
/* ET_NONE_GROUP.file_system */
extern T0* T492f25(TC* ac, T0* C);
/* ET_NONE_GROUP.unix_file_system */
extern T0* T492f29(TC* ac, T0* C);
/* ET_NONE_GROUP.windows_file_system */
extern T0* T492f28(TC* ac, T0* C);
/* ET_NONE_GROUP.operating_system */
extern T0* T492f27(TC* ac, T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T492f24(TC* ac, T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T492f26(TC* ac, T0* C);
/* ET_NONE_GROUP.execution_environment */
extern T0* T492f23(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T435f21(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.file_system */
extern T0* T435f26(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T435f30(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T435f29(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.operating_system */
extern T0* T435f28(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T435f25(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T435f27(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.execution_environment */
extern T0* T435f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].item */
extern T0* T1680f4(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_item */
extern T0* T1015f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].after */
extern T1 T1680f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].start */
extern void T1680f10(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_start */
extern void T1015f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_off */
extern T1 T1015f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].off */
extern T1 T1680f6(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].is_empty */
extern T1 T1015f25(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].new_cursor */
extern T0* T1015f19(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].make */
extern T0* T1680c9(TC* ac, T0* a1);
/* ET_CLASS.first_non_override_overridden_class */
extern T0* T79f202(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T507f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T507f10(TC* ac, T0* C);
/* ET_CLASS.master_class_in_universe */
extern T0* T79f209(TC* ac, T0* C);
/* ET_ECF_LIBRARY.master_class */
extern T0* T191f114(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_class */
extern T0* T63f147(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T502f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T860f59(TC* ac, T0* C);
/* ET_ECF_CLUSTER.cluster */
extern T0* T860f44(TC* ac, T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T492f7(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T435f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T58f217(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T41f217(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PROVIDER_CHECKER.set_fatal_error */
extern void T502f8(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern T0* T502c6(TC* ac, T0* a1);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T502f3(TC* ac, T0* C);
/* ET_PROVIDER_CHECKER.error_handler */
extern T0* T502f4(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T504f33(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T504f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T504f38(TC* ac, T0* C);
extern T1 T504f38ot1(TC* ac, T0* a1);
extern T1 T504f38ot2(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T1382f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T1382f62(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1382f61(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1382f60(TC* ac, T0* C);
/* SPECIAL [ET_FEATURE_NAME].keep_head */
extern void T1734f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].set_count */
extern void T1734f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1382f59(TC* ac, T0* C);
/* SPECIAL [ET_FLATTENED_FEATURE].keep_head */
extern void T1731f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].set_count */
extern void T1731f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T1382f58(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1382f57(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1730f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_after */
extern void T1730f10(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T504f49(TC* ac, T0* C);
/* ET_SYSTEM.set_special_item_seed */
extern void T45f198(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_special_item_seed */
extern void T63f273(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T45f197(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T63f272(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.forth_feature_name */
extern T0* T78f268(TC* ac, T0* C);
/* ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T45f196(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T63f271(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.after_feature_name */
extern T0* T78f267(TC* ac, T0* C);
/* ET_SYSTEM.set_iteration_cursor_item_seed */
extern void T45f195(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_item_seed */
extern void T63f270(TC* ac, T0* C, T6 a1);
/* ET_CLASS.is_iteration_cursor_class */
extern T1 T79f177(TC* ac, T0* C);
/* ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T45f194(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T63f269(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern T0* T78f266(TC* ac, T0* C);
/* ET_CLASS.is_iterable_class */
extern T1 T79f176(TC* ac, T0* C);
/* ET_SYSTEM.set_dispose_seed */
extern void T45f193(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dispose_seed */
extern void T63f268(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern T0* T78f265(TC* ac, T0* C);
/* ET_CLASS.is_disposable_class */
extern T1 T79f175(TC* ac, T0* C);
/* ET_SYSTEM.set_function_item_seed */
extern void T45f192(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_function_item_seed */
extern void T63f267(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern T0* T78f6(TC* ac, T0* C);
/* ET_SYSTEM.set_routine_call_seed */
extern void T45f191(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_routine_call_seed */
extern void T63f266(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern T0* T78f264(TC* ac, T0* C);
/* ET_SYSTEM.set_is_equal_seed */
extern void T45f190(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_is_equal_seed */
extern void T63f265(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern T0* T78f263(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T58f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T843c913(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T58f21(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T41f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T41f21(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_twin_seed */
extern void T45f189(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_twin_seed */
extern void T63f264(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T1577f69(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T258f48(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T1576f64(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T518f62(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T1574f65(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T1573f69(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T522f67(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T394f47(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T392f46(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T382f46(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T383f45(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T524f60(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern T0* T78f262(TC* ac, T0* C);
/* ET_SYSTEM.set_copy_seed */
extern void T45f188(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_copy_seed */
extern void T63f263(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern T0* T78f261(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T58f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T843c911(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T58f19(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T41f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T41f19(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T58f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T843c915(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T58f23(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T41f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T41f23(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T45f187(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_default_create_seed */
extern void T63f262(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T504f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T1382f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T1382f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T1382f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T1382f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T1382f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T1382f29(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1383f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T1382f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T1382f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T1382f23(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern T0* T78f3(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T504f21(TC* ac, T0* C);
/* ET_CLASS.is_any_class */
extern T1 T79f125(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T504f48(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T1163f6(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T1571f6(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T1570f5(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T1163f7(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T504f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T58f323(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T843c1002(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T58f60(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T41f323(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T41f60(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T58f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T843c1001(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T41f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T58f321(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T843c1000(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T58f59(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T41f321(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T41f59(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T1577f39(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once */
extern T1 T1576f41(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T518f47(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T524f43(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T58f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T843c999(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T58f34(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T41f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T41f34(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T58f319(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T843c998(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T41f319(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T1171f8(TC* ac, T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T1171f13(TC* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T1174f6(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T58f318(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T843c997(TC* ac, T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T1171f7(TC* ac, T0* C);
/* ET_CREATOR.first */
extern T0* T1171f12(TC* ac, T0* C);
/* ET_CLIENTS.position */
extern T0* T1132f13(TC* ac, T0* C);
/* ET_CLIENT.position */
extern T0* T428f5(TC* ac, T0* C);
/* ET_CLIENTS.first */
extern T0* T1132f16(TC* ac, T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T1132f15(TC* ac, T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T1171f10(TC* ac, T0* C);
extern T1 T1171f10ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T58f58(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T41f318(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T41f58(TC* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T1174f5(TC* ac, T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T1174f4(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T504f46(TC* ac, T0* C);
extern T1 T504f46ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T58f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T843c996(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T58f57(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T41f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T41f57(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T58f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T843c995(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T58f56(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T41f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T41f56(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T258f54(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T1574f40(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T1573f40(TC* ac, T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T522f39(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T394f57(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T392f55(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T382f52(TC* ac, T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T383f54(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T58f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T843c994(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T58f55(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T41f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T41f55(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T58f314(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T843c993(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T58f54(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T41f314(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T41f54(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T58f313(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T843c992(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T41f313(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION.assigner */
extern T0* T258f15(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.assigner */
extern T0* T1574f13(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.assigner */
extern T0* T1573f14(TC* ac, T0* C);
/* ET_DO_FUNCTION.assigner */
extern T0* T522f16(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.assigner */
extern T0* T394f12(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.assigner */
extern T0* T392f11(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.assigner */
extern T0* T382f12(TC* ac, T0* C);
/* ET_ATTRIBUTE.assigner */
extern T0* T383f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T58f309(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T843f988(TC* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T843c987(TC* ac, T0* a1);
/* ET_VALIDITY_ERROR.ast_position */
extern T0* T843f198(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T58f51(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T41f309(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T41f51(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T58f308(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T843c986(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T58f50(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T41f308(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T41f50(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T58f307(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T843c985(TC* ac, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1417f22(TC* ac, T0* C);
/* ET_PARENT_FEATURE.name */
extern T0* T1416f13(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1416f19(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T41f307(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T1382f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T1382f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1382f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T1382f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].off */
extern T1 T1730f4(TC* ac, T0* C);
/* ET_CLASS.set_has_deferred_features */
extern void T79f302(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T1385f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T1385f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1385f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1385f50(TC* ac, T0* C);
/* SPECIAL [ET_ALIAS_NAME].keep_head */
extern void T1737f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].set_count */
extern void T1737f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1385f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T1385f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1385f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1740f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_after */
extern void T1740f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T1382f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T1382f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1382f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1730f12(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T504f45(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1395f11(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1763f10(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1764f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1764f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1763f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1764f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1763f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1395f15(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1395f15ot1(TC* ac, T0* a1);
extern T1 T1395f15ot2(TC* ac, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T260f7(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1395f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T79f220(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T1535f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1563f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f51ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T948f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f53ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1587f52(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1586f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T1585f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T247f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f50ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T493f49(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T79f216(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T636f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1563f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1563f52(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f52ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1535f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1563f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f53ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T948f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f55ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1587f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1586f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1585f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T247f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f56ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T493f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T79f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T259f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T77f90(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T948f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f54ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T948f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T259f82(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T77f85(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T494f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T259f83(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T2014f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T1587f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T1586f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T1585f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T247f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T493f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type */
extern T1 T79f217(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T77f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T2015f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T245f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T1585f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T1535f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1563f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f57ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T948f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f59ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1587f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1586f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T1585f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T1585f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T247f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f68ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T493f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T79f241(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T259f102(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T77f110(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T259f86(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T1535f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1563f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f54ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T948f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f56ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1587f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1586f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1585f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T247f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f57ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T493f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T79f222(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T259f89(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T77f91(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T247f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f55ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T77f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1587f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1535f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1563f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f58ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T948f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f60ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1587f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T1587f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1586f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T1586f77(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1585f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T247f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f69ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T493f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T79f242(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T259f103(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T77f111(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1586f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T493f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T1535f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1563f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f56ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T948f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f58ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1587f67(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1586f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T1585f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T247f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f66ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T493f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T493f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T79f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T259f100(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T77f106(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1395f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T58f376(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T843c1055(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T58f89(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T41f376(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T41f89(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T58f375(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T843c1054(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T41f375(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1763f6(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1763f9(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1764f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1764f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1763f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1764f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1763c8(TC* ac, T0* a1);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1417f12(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1630f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T1577f62(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T258f41(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T524f53(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T1576f57(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T518f55(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T1574f58(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T1573f62(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T522f60(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T394f40(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T392f39(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T382f39(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T383f38(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_adapted */
extern T1 T1417f17(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_adapted */
extern T1 T1630f16(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T1577f67(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T258f46(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T524f58(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T1576f62(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T518f60(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T1574f63(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T1573f67(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T522f65(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T394f45(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T392f44(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T382f44(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T383f43(TC* ac, T0* C);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1416f14(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1395f14(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T58f374(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T843c1053(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T58f90(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T41f374(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T41f90(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T58f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T843c1052(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T41f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T58f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T843c1051(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T41f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1395f13(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1395f13ot1(TC* ac, T0* a1);
extern T1 T1395f13ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T58f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T843c1050(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T58f69(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T41f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T41f69(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T58f370(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T843c1049(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T41f370(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T58f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T843c1048(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T41f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1417f14(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1630f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T1577f64(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T258f43(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T524f55(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T1576f59(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T518f57(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T1574f60(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T1573f64(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T522f62(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T394f42(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T392f41(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T382f41(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T383f40(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1417f13(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_redeclared */
extern T1 T1630f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T1577f63(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T258f42(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T524f54(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T1576f58(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T518f56(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T1574f59(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T1573f63(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T522f61(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T394f41(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T392f40(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T382f40(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T383f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last_new */
extern void T1385f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T1385f47(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].force */
extern void T1739f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].fill_with */
extern void T1737f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].extend */
extern void T1737f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T1385f46(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].force */
extern void T1735f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].fill_with */
extern void T1731f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].extend */
extern void T1731f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T1385f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T1385f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T1385f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T1385f28(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.hash_code */
extern T6 T1097f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T1385f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T1385f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T1385f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T1385f56(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1739f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1737f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T1385f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1735f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1731f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T1385f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T1385f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T1385f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T1385f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T1385f27(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T58f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T843c984(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T1579f10(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_name */
extern T0* T1579f49(TC* ac, T0* C);
/* ET_ALIAS_NAME.alias_lower_name */
extern T0* T1097f7(TC* ac, T0* C);
/* ET_ALIAS_NAME.alias_name */
extern T0* T1097f19(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T1579f11(TC* ac, T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T1097f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T58f39(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T41f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T41f39(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T58f305(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T843c983(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T41f305(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3b_error */
extern void T58f304(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3b */
extern T0* T843c982(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfav3_error */
extern T1 T58f38(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav3b_error */
extern void T41f304(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav3_error */
extern T1 T41f38(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T58f303(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T843c981(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T58f37(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T41f303(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T41f37(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T58f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T843c980(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T41f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T58f301(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T843c979(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T41f301(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3c_error */
extern void T58f300(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3c */
extern T0* T843c978(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3c_error */
extern void T41f300(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T58f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T843c977(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T41f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T58f298(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T843c976(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T41f298(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T58f297(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T843c975(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T41f297(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3d_error */
extern void T58f296(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3d */
extern T0* T843c974(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3d_error */
extern void T41f296(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T58f295(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T843c973(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T41f295(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1417f16(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1630f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T1577f66(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T258f45(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T524f57(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T1576f61(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T518f59(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T1574f62(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T1573f66(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T522f64(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T394f44(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T392f43(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T382f43(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T383f42(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_inherited */
extern T1 T1417f15(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1630f14(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T1577f65(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T258f44(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T524f56(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T1576f60(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T518f58(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T1574f61(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T1573f65(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T522f63(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T394f43(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T392f42(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T382f42(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T383f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_key */
extern T0* T1385f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T1385f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T1385f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T1385f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T1385f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T1385f41(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1386f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1382f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T1382f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1730f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T1382f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T1382f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T1382f31(TC* ac, T0* C);
/* ET_CLASS.set_redeclared_signatures_checked */
extern void T79f301(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T504f44(TC* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1394f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].wipe_out */
extern void T1761f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T753f19(TC* ac, T0* C);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].keep_head */
extern void T1479f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].set_count */
extern void T1479f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T753f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1481f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_after */
extern void T1481f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T271f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T271f25(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T672f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_after */
extern void T672f6(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].wipe_out */
extern void T1990f34(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_wipe_out */
extern void T1990f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_wipe_out */
extern void T1990f42(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T1990f41(TC* ac, T0* C);
/* SPECIAL [ET_LIKE_FEATURE].keep_head */
extern void T1991f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].set_count */
extern void T1991f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T1990f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1990f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_next_cursor */
extern void T2079f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_after */
extern void T2079f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].wipe_out */
extern void T1762f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1762f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_next_cursor */
extern void T1993f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_after */
extern void T1993f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T58f368(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T843c1047(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].forth */
extern void T1993f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_forth */
extern void T1762f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_position */
extern void T1993f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1762f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1762f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].go_after */
extern void T1993f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_go_after */
extern void T1762f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].off */
extern T1 T1993f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].before */
extern T1 T1993f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].item */
extern T0* T1993f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_item */
extern T0* T1762f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].after */
extern T1 T1993f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].start */
extern void T1993f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_start */
extern void T1762f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].new_cursor */
extern T0* T1762f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].make */
extern T0* T1993c9(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T41f368(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1394f6(TC* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1394f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].is_empty */
extern T1 T1762f6(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].sort */
extern void T1761f11(TC* ac, T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T754f4(TC* ac, T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T754f6(TC* ac, T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make_filled */
extern T0* T754c5(TC* ac, T1 a1, T6 a2, T6 a3);
/* ARRAY [BOOLEAN].make_filled_area */
extern void T754f7(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].item */
extern T0* T1762f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].make */
extern T0* T1762c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].set_internal_cursor */
extern void T1762f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].make */
extern T0* T1992f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].make_empty */
extern T0* T1991c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].default_create */
extern T0* T1992c3(TC* ac);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T753f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].twin */
extern T0* T753f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].copy */
extern void T753f15(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1479f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1479f10(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1479f14(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].move_data */
extern void T1479f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1479f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1479f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].make_empty */
extern T0* T1479c6(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T753f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1481c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].set_internal_cursor */
extern void T753f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T753f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T271f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T271f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T271f27(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T271f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T672c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].set_internal_cursor */
extern void T271f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T271f14(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T1577f58(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T524f38(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T1576f52(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T518f41(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T1577f57(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T524f37(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T1576f51(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T518f40(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T1577f56(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_deferred */
extern T1 T524f36(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T1576f50(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T518f39(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.item */
extern T0* T263f7(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T58f294(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T843c972(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T58f49(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T41f294(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T41f49(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T1587f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T1586f32(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T1563f60(TC* ac, T0* C, T0* a1);
extern T1 T1563f60ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T948f64(TC* ac, T0* C, T0* a1);
extern T1 T948f64ot1(TC* ac, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T79f213(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T636f17(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T1585f32(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T259f73(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T2015f9(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T245f18(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T247f41(TC* ac, T0* C, T0* a1);
extern T1 T247f41ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T77f74(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T494f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T2014f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T493f39(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T58f293(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T843c971(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T41f293(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.has_unqualified_anchored_type */
extern T1 T1587f18(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_unqualified_anchored_type */
extern T1 T1586f31(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_unqualified_anchored_type */
extern T1 T1563f65(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_unqualified_anchored_type */
extern T1 T948f67(TC* ac, T0* C);
/* ET_CLASS.has_unqualified_anchored_type */
extern T1 T79f212(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_unqualified_anchored_type */
extern T1 T636f16(TC* ac, T0* C);
/* ET_LIKE_FEATURE.has_unqualified_anchored_type */
extern T1 T1585f31(TC* ac, T0* C);
/* ET_TUPLE_TYPE.has_unqualified_anchored_type */
extern T1 T259f72(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_unqualified_anchored_type */
extern T1 T2015f8(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_unqualified_anchored_type */
extern T1 T245f17(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_unqualified_anchored_type */
extern T1 T247f40(TC* ac, T0* C);
/* ET_CLASS_TYPE.has_unqualified_anchored_type */
extern T1 T77f73(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T494f9(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T2014f8(TC* ac, T0* C);
/* ET_LIKE_CURRENT.has_unqualified_anchored_type */
extern T1 T493f38(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T258f70(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T1574f32(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once */
extern T1 T1573f52(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T522f52(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T394f49(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T392f47(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T382f34(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T383f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav5a_error */
extern void T58f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav5a */
extern T0* T843c948(TC* ac, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.lower_name */
extern T0* T1579f16(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T1579f50(TC* ac, T0* C);
/* ET_ALIAS_NAME.lower_name */
extern T0* T1097f14(TC* ac, T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T1097f20(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vfav5_error */
extern T1 T58f40(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav5a_error */
extern void T41f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vfav5_error */
extern T1 T41f40(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T1579f14(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T1097f12(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T1579f15(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T1097f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1k_error */
extern void T58f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1k */
extern T0* T843c970(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1k_error */
extern void T41f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T58f291(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T843c969(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T41f291(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4d_error */
extern void T58f290(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4d */
extern T0* T843c968(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T58f36(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav4d_error */
extern void T41f290(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T41f36(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T1579f58(TC* ac, T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T1097f111(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T1579f19(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T1097f17(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T258f63(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T1574f51(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T1573f51(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T522f49(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T394f48(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T392f34(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T382f33(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T383f46(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T58f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T843c967(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T41f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4c_error */
extern void T58f288(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4c */
extern T0* T843c966(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4c_error */
extern void T41f288(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T1579f57(TC* ac, T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T1097f110(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T1579f18(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T1097f16(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T258f62(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T1574f50(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T1573f50(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T522f45(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_prefixable */
extern T1 T394f35(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_prefixable */
extern T1 T392f28(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_prefixable */
extern T1 T382f65(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_prefixable */
extern T1 T383f33(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav3a_error */
extern void T58f287(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav3a */
extern T0* T843c965(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav3a_error */
extern void T41f287(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T258f61(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T1574f47(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T1573f49(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_parenthesisable */
extern T1 T522f44(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T394f29(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T392f26(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T382f64(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_parenthesisable */
extern T1 T383f27(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4b_error */
extern void T58f286(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4b */
extern T0* T843c964(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4b_error */
extern void T41f286(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T58f285(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T843c963(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T41f285(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T258f60(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T1574f46(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T1573f45(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T522f43(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T394f27(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T392f66(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T382f63(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T383f25(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T58f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T843c962(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4a_error */
extern void T41f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME_LIST.head_has_alias_name */
extern T1 T968f6(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T1579f20(TC* ac, T0* C, T0* a1);
extern T1 T1579f20ot1(TC* ac, T0* a1);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T1097f18(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.item */
extern T0* T968f5(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T58f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T843c961(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T58f48(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T41f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T41f48(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T258f50(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T1574f39(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T1573f38(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T522f38(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T394f58(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T392f56(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T382f55(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T383f57(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T258f49(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_deferred */
extern T1 T1574f37(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T1573f37(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T522f36(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T394f56(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T392f54(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T382f51(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T383f53(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T504f43(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1393f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T504f42(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1395f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T504f41(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T58f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T843c991(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T58f53(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T41f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T41f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T1382f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T1382f40(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T58f311(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T843c990(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T58f42(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T41f311(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T41f42(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T770f17(TC* ac, T0* C);
/* SPECIAL [ET_PROCEDURE].keep_head */
extern void T970f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].set_count */
extern void T970f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T770f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1490f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_after */
extern void T1490f10(TC* ac, T0* C);
/* ET_CLASS.set_procedures */
extern void T79f300(TC* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T263f10(TC* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T263f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].force */
extern void T971f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].fill_with */
extern void T970f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].extend */
extern void T970f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T770f7(TC* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1628f3(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1628f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T770f36(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T770f35(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1825f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern T0* T504f26(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1628c2(TC* ac, T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1825c2(TC* ac);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T774f17(TC* ac, T0* C);
/* SPECIAL [ET_QUERY].keep_head */
extern void T967f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].set_count */
extern void T967f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T774f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T1491f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_after */
extern void T1491f10(TC* ac, T0* C);
/* ET_CLASS.set_queries */
extern void T79f299(TC* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_attribute_count */
extern void T262f14(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.set_attribute_count */
extern void T262f13(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T262f12(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T262f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].force */
extern void T969f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUERY].fill_with */
extern void T967f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].extend */
extern void T967f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T774f7(TC* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1627f3(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1627f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T774f36(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T774f35(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1822f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern T0* T504f25(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1627c2(TC* ac, T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1822c2(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T1382f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T1382f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_before */
extern void T1730f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T774f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T774f24(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].aliased_resized_area */
extern T0* T969f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].aliased_resized_area */
extern T0* T967f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T774f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T774f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T770f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T770f24(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].aliased_resized_area */
extern T0* T971f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].aliased_resized_area */
extern T0* T970f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T770f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T770f10(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.flattened_feature */
extern T0* T1417f3(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.flattened_feature */
extern T0* T1630f2(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T1577f59(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T258f38(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T524f50(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T1576f54(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T518f52(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T1574f55(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T1573f59(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T522f57(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T394f37(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T392f36(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T382f36(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T383f35(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T504f40(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T504f52(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T58f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T843c1009(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.alias_lower_names */
extern T0* T843f254(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T58f64(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T41f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T41f64(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T58f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T843c1008(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T58f63(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T41f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T41f63(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.same_alias_names */
extern T1 T968f8(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.has_alias_name */
extern T1 T968f10(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.first */
extern T0* T968f9(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T58f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T843c1007(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T41f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T58f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T843c1006(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T41f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1417f33(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1417f32(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T1577f123(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T258f126(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T524f113(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T1576f119(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T518f116(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T1574f116(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T1573f122(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T522f119(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T394f114(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T392f111(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T382f119(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T383f107(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T1577f114(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T258f117(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T524f104(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T1576f110(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T518f107(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T1574f107(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T1573f113(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T522f110(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T394f105(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T392f102(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T382f110(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T383f98(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T1577f107(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T258f110(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T524f97(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T1576f104(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T518f101(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T1574f100(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T1573f107(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T522f104(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T394f97(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T392f96(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T382f104(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T383f93(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T504f54(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1630f32(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1417f36(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1630f31(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1417f35(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T637f10(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T637f8(TC* ac, T0* C);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T637f4(TC* ac, T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T637f3(TC* ac, T0* C);
/* ET_FEATURE_IDS.copy */
extern void T637f12(TC* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T959f1(TC* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T312f9(TC* ac, T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T312f19(TC* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T132f7(TC* ac, T0* C);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T637f5(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1630f20(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1417f21(TC* ac, T0* C);
/* ET_FEATURE_IDS.make */
extern T0* T637c9(TC* ac, T6 a1);
/* ET_FEATURE_IDS.put */
extern void T637f13(TC* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize_with_default */
extern void T959f4(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].conservative_resize_with_default */
extern void T312f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FEATURE_IDS.remove */
extern void T637f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.id */
extern T6 T1577f29(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.id */
extern T6 T258f31(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.id */
extern T6 T524f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.id */
extern T6 T1576f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE.id */
extern T6 T518f28(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.id */
extern T6 T1574f28(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.id */
extern T6 T1573f31(TC* ac, T0* C);
/* ET_DO_FUNCTION.id */
extern T6 T522f30(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.id */
extern T6 T394f2(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.id */
extern T6 T392f23(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.id */
extern T6 T382f28(TC* ac, T0* C);
/* ET_ATTRIBUTE.id */
extern T6 T383f21(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T1577f115(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T258f118(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T524f105(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T1576f111(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T518f108(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T1574f108(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T1573f114(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T522f111(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T394f106(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T392f103(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_version */
extern void T382f111(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T383f99(TC* ac, T0* C, T6 a1);
/* ET_CLASS.register_feature */
extern void T79f303(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T1577f90(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T258f92(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T524f84(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T1576f84(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T518f85(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T1574f83(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T1573f86(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T522f84(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T394f84(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T392f83(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_id */
extern void T382f85(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T383f80(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T1577f82(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T1577f113(TC* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_PROCEDURE.set_inline_separate_arguments */
extern void T1577f100(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_iteration_components */
extern void T1577f99(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T1577f98(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_note */
extern void T1577f108(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T1577f111(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T1577f110(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T1577f101(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T1577f109(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T1577f102(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T1577f106(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T1577f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T1577f104(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T1577f103(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T1577c89(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T1577f48(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T258f83(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T258f116(TC* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_FUNCTION.set_inline_separate_arguments */
extern void T258f102(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_iteration_components */
extern void T258f101(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T258f100(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_note */
extern void T258f111(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T258f114(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T258f113(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T258f103(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T258f112(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T258f104(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T258f109(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T258f108(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T258f107(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T258f106(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T258f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T258c91(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T524f71(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_inline_separate_arguments */
extern void T524f91(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_iteration_components */
extern void T524f90(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T524f89(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_note */
extern void T524f98(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T524f102(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T524f101(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T524f92(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T524f100(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T524f99(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T524f93(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T524f96(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T524f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T524f94(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T524c80(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.make */
extern void T524f80p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern T0* T78f269(TC* ac, T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T438c58(TC* ac);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T524f42(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T1576f74(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_inline_separate_arguments */
extern void T1576f94(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_iteration_components */
extern void T1576f93(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T1576f92(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_note */
extern void T1576f105(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T1576f108(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T1576f107(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T1576f95(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T1576f106(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T1576f96(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T1576f103(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T1576f102(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T1576f101(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T1576f99(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T1576f98(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T1576f97(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T1576c83(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T1576f35(TC* ac, T0* C);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T518f72(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_inline_separate_arguments */
extern void T518f92(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_iteration_components */
extern void T518f91(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T518f90(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_note */
extern void T518f102(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T518f105(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T518f104(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T518f93(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T518f103(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T518f94(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T518f100(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T518f99(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T518f98(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T518f97(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T518f96(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T518f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T1574f74(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_inline_separate_arguments */
extern void T1574f93(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_iteration_components */
extern void T1574f92(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T1574f91(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_note */
extern void T1574f101(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T1574f105(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T1574f104(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T1574f94(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T1574f103(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T1574f102(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T1574f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T1574f99(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T1574f98(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T1574f97(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T1574f96(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T1574c82(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.make */
extern void T1574f82p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T1574f49(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T1573f77(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_inline_separate_arguments */
extern void T1573f96(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_iteration_components */
extern void T1573f95(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T1573f94(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_note */
extern void T1573f108(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T1573f111(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T1573f110(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T1573f97(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T1573f109(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T1573f98(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T1573f106(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T1573f105(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T1573f104(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T1573f102(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T1573f101(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T1573f100(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T1573f99(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T1573c85(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T1573f41(TC* ac, T0* C);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T522f75(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_inline_separate_arguments */
extern void T522f94(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_iteration_components */
extern void T522f93(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T522f92(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_note */
extern void T522f105(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T522f108(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T522f107(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T522f95(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T522f106(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T522f96(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T522f103(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T522f102(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T522f101(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T522f100(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T522f99(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T522f98(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T522f97(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T522c83(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T522f51(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T394f76(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_constant */
extern void T394f103(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_inline_separate_arguments */
extern void T394f94(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_iteration_components */
extern void T394f93(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T394f92(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_note */
extern void T394f102(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T394f101(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T394f100(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T394f95(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T394f99(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T394f98(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T394f96(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T394c83(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T395c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T395f67(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern T0* T78f1558(TC* ac, T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T438c66(TC* ac);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern T0* T78f734(TC* ac, T0* C);
/* ET_KEYWORD.make_is */
extern T0* T438c70(TC* ac);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T394f63(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T392f75(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_inline_separate_arguments */
extern void T392f93(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_iteration_components */
extern void T392f92(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T392f91(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_note */
extern void T392f100(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T392f99(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T392f98(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T392f94(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T392f97(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T392f95(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T392c82(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T392f61(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T382f75(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_inline_separate_arguments */
extern void T382f95(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_iteration_components */
extern void T382f94(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T382f93(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_note */
extern void T382f105(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T382f108(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T382f107(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T382f96(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T382f106(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T382f103(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T382f102(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T382f101(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T382f100(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T382f99(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T382f98(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T382f97(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.make */
extern T0* T382c84(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.make */
extern void T382f84p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T382f62(TC* ac, T0* C);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T383f70(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_inline_separate_arguments */
extern void T383f90(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_iteration_components */
extern void T383f89(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T383f88(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_note */
extern void T383f96(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T383f95(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T383f94(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T383f91(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_assigner */
extern void T383f92(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T383c79(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T383f56(TC* ac, T0* C);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1416f21(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.extended_name */
extern T0* T1577f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.extended_name */
extern T0* T258f17(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.extended_name */
extern T0* T524f8(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.extended_name */
extern T0* T1576f16(TC* ac, T0* C);
/* ET_DO_PROCEDURE.extended_name */
extern T0* T518f11(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.extended_name */
extern T0* T1574f16(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.extended_name */
extern T0* T1573f16(TC* ac, T0* C);
/* ET_DO_FUNCTION.extended_name */
extern T0* T522f18(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.extended_name */
extern T0* T394f15(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.extended_name */
extern T0* T392f14(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.extended_name */
extern T0* T382f18(TC* ac, T0* C);
/* ET_ATTRIBUTE.extended_name */
extern T0* T383f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T1577f122(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T258f125(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T524f112(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T1576f118(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T518f115(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T1574f115(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T1573f121(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T522f118(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T394f113(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T392f110(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T382f118(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T383f106(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T1577f121(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T258f124(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T524f111(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T1576f117(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T518f114(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T1574f114(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T1573f120(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T522f117(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T394f112(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T392f109(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T382f117(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T383f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T1577f120(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T258f123(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T524f110(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T1576f116(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T518f113(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T1574f113(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T1573f119(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T522f116(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T394f111(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T392f108(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T382f116(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T383f104(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T1577f119(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T258f122(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T524f109(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T1576f115(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T518f112(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T1574f112(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T1573f118(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T522f115(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T394f110(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T392f107(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T382f115(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T383f103(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T1577f118(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T258f121(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T524f108(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T1576f114(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T518f111(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T1574f111(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T1573f117(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T522f114(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T394f109(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T392f106(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T382f114(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T383f102(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T1577f117(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T258f120(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T524f107(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T1576f113(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T518f110(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T1574f110(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T1573f116(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T522f113(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T394f108(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T392f105(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T382f113(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T383f101(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T1577f81(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T258f82(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T524f70(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T1576f73(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T518f71(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T1574f73(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T1573f76(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T522f74(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T394f75(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T394f34(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T394f28(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T394f79(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T392f74(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T392f33(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T392f27(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T392f78(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T382f74(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T383f69(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.postconditions */
extern T0* T383f32(TC* ac, T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T383f26(TC* ac, T0* C);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T383f75(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T1578c6(TC* ac, T0* a1, T0* a2);
/* ET_ALIAS_NAME_LIST.is_empty */
extern T1 T968f7(TC* ac, T0* C);
/* ET_PARENT_FEATURE.alias_names */
extern T0* T1416f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].wipe_out */
extern void T1400f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1400f60(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1400f59(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1400f58(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1400f57(TC* ac, T0* C);
/* SPECIAL [ET_FEATURE].keep_head */
extern void T724f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].set_count */
extern void T724f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].unset_found_item */
extern void T1400f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1400f56(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_next_cursor */
extern void T1766f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_after */
extern void T1766f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].forth */
extern void T1400f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_forth */
extern void T1400f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1400f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_position */
extern void T1766f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1400f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_item */
extern T6 T1400f23(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_LIST.put_first */
extern void T433f6(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].force */
extern void T725f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE].fill_with */
extern void T724f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].extend */
extern void T724f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.fixed_array */
extern T0* T433f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T725c3(TC* ac);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1400f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_item */
extern T0* T1400f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1400f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].after */
extern T1 T1400f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_after */
extern T1 T1400f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].after */
extern T1 T1766f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].start */
extern void T1400f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_start */
extern void T1400f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_off */
extern T1 T1400f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].off */
extern T1 T1766f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].is_empty */
extern T1 T1400f33(TC* ac, T0* C);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T433c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T725f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].make_empty */
extern T0* T724c5(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove */
extern void T1400f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_position */
extern void T1400f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_put */
extern void T1400f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_put */
extern void T1400f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_keep_head */
extern void T1400f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_keep_head */
extern void T1400f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_put */
extern void T1400f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_put */
extern void T1400f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_cursors_forth */
extern void T1400f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].internal_set_key_equality_tester */
extern void T1400f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_item */
extern T6 T1400f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].hash_position */
extern T6 T1400f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1400f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].search_position */
extern void T1400f47(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T1132f14(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T427f12(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1416f18(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.clients */
extern T0* T1577f20(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.clients */
extern T0* T258f22(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.clients */
extern T0* T524f12(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.clients */
extern T0* T1576f21(TC* ac, T0* C);
/* ET_DO_PROCEDURE.clients */
extern T0* T518f14(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.clients */
extern T0* T1574f18(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.clients */
extern T0* T1573f23(TC* ac, T0* C);
/* ET_DO_FUNCTION.clients */
extern T0* T522f21(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.clients */
extern T0* T394f16(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.clients */
extern T0* T392f15(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.clients */
extern T0* T382f20(TC* ac, T0* C);
/* ET_ATTRIBUTE.clients */
extern T0* T383f14(TC* ac, T0* C);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1416f12(TC* ac, T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1416f11(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1416f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T58f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T843c1005(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T58f62(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T41f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T41f62(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1416f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].force_last */
extern void T1400f40(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].resize */
extern void T1400f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_resize */
extern void T1400f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1400f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_resize */
extern void T1400f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_resize */
extern void T1400f63(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].aliased_resized_area */
extern T0* T725f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].aliased_resized_area */
extern T0* T724f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_resize */
extern void T1400f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_modulus */
extern T6 T1400f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_capacity */
extern T6 T1400f22(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.version */
extern T6 T1577f30(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.version */
extern T6 T258f32(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.version */
extern T6 T524f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.version */
extern T6 T1576f30(TC* ac, T0* C);
/* ET_DO_PROCEDURE.version */
extern T6 T518f29(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.version */
extern T6 T1574f29(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.version */
extern T6 T1573f32(TC* ac, T0* C);
/* ET_DO_FUNCTION.version */
extern T6 T522f31(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.version */
extern T6 T394f25(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.version */
extern T6 T392f24(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.version */
extern T6 T382f29(TC* ac, T0* C);
/* ET_ATTRIBUTE.version */
extern T6 T383f22(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T504f57(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T58f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T843c1021(TC* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T843f208(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T58f67(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T41f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T41f67(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1416f15(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T504f60(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T58f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T843c1030(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T58f72(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T41f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T41f72(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T58f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T843c1029(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T41f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T504f59(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T58f348(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T843c1028(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T58f71(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T41f348(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T41f71(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T58f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T843c1027(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T41f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T58f346(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T843c1026(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T58f70(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T41f346(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T41f70(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T504f58(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1p_error */
extern void T58f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1p */
extern T0* T843c947(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.upper_name */
extern T0* T259f118(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vfav1p_error */
extern void T41f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1n_error */
extern void T58f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1n */
extern T0* T843c945(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1n_error */
extern void T41f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4h_error */
extern void T58f345(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4h */
extern T0* T843c1025(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4h_error */
extern void T41f345(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T1577f80(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T524f69(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T1576f72(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T518f70(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1m_error */
extern void T58f242(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1m */
extern T0* T843c942(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1m_error */
extern void T41f242(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4g_error */
extern void T58f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4g */
extern T0* T843c1024(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4g_error */
extern void T41f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T1577f79(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T524f68(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T1576f71(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T518f69(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav3e_error */
extern void T58f239(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3e */
extern T0* T843c939(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3e_error */
extern void T41f239(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4f_error */
extern void T58f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4f */
extern T0* T843c1023(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4f_error */
extern void T41f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfav2e_error */
extern void T58f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2e */
extern T0* T843c936(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2e_error */
extern void T41f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T1577f78(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T524f67(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T1576f70(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T518f68(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4e_error */
extern void T58f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4e */
extern T0* T843c1022(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4e_error */
extern void T41f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1417f20(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T504f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].wipe_out */
extern void T1388f14(TC* ac, T0* C);
/* SPECIAL [ET_CLIENT_LIST].keep_head */
extern void T1742f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].set_count */
extern void T1742f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_all_cursors_after */
extern void T1388f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_next_cursor */
extern void T1743f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_after */
extern void T1743f6(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.aggregated_clients */
extern T0* T504f31(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_FEATURE_FLATTENER.aggregated_clients */
extern T0* T504f31ac1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T928f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].wipe_out */
extern void T1389f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_wipe_out */
extern void T1389f66(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_wipe_out */
extern void T1389f65(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_wipe_out */
extern void T1389f64(TC* ac, T0* C);
/* SPECIAL [ET_CLASS].keep_head */
extern void T1418f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS].set_count */
extern void T1418f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_wipe_out */
extern void T1389f63(TC* ac, T0* C);
/* SPECIAL [ET_CLIENT].keep_head */
extern void T1747f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].set_count */
extern void T1747f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].unset_found_item */
extern void T1389f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].move_all_cursors_after */
extern void T1389f62(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_next_cursor */
extern void T1745f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_after */
extern void T1745f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].back */
extern void T1389f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_back */
extern void T1389f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].add_traversing_cursor */
extern void T1389f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_position */
extern void T1745f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].remove_traversing_cursor */
extern void T1389f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_before */
extern void T1745f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_item */
extern T6 T1389f31(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T1132f18(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.fixed_array */
extern T0* T1132f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_for_iteration */
extern T0* T1389f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1389f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_item */
extern T0* T1389f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].before */
extern T1 T1389f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_before */
extern T1 T1389f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].before */
extern T1 T1745f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].finish */
extern void T1389f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_finish */
extern void T1389f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_off */
extern T1 T1389f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].off */
extern T1 T1745f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].is_empty */
extern T1 T1389f36(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].for_all */
extern T1 T1913f6(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T2076f8(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1913f12(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1745f17(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1389f75(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T2076f7(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1913f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1745f16(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1389f74(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].item */
extern T0* T2076f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1913f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].key */
extern T0* T1745f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_key */
extern T0* T1389f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_item */
extern T0* T1389f35(TC* ac, T0* C, T6 a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T2076f3(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1745f8(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T2076f6(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1913f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1745f15(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1389f73(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1913f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T2076c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1389f33(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1745c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].keys */
extern T0* T1389f39(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].make */
extern T0* T1913c8(TC* ac, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1913f9(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor_with_table_cursor */
extern T0* T1913f5(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make_with_table_cursor */
extern T0* T2076c9(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].force */
extern void T1389f50(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_put */
extern void T1389f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_put */
extern void T1389f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_put */
extern void T1389f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_item */
extern T6 T1389f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].hash_position */
extern T6 T1389f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].resize */
extern void T1389f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_resize */
extern void T1389f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].special_integer_ */
extern T0* T1389f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_resize */
extern void T1389f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_resize */
extern void T1389f68(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].aliased_resized_area */
extern T0* T1746f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT].aliased_resized_area */
extern T0* T1747f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_resize */
extern void T1389f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_modulus */
extern T6 T1389f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_capacity */
extern T6 T1389f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_put */
extern void T1389f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].force */
extern void T1746f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT].fill_with */
extern void T1747f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT].extend */
extern void T1747f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].search_position */
extern void T1389f54(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.client */
extern T0* T1132f8(TC* ac, T0* C, T6 a1);
/* ET_CLIENT.client */
extern T0* T428f4(TC* ac, T0* C);
/* ET_CLIENTS.item */
extern T0* T1132f10(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.client */
extern T0* T427f4(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.item */
extern T0* T427f7(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.is_none */
extern T1 T1132f12(TC* ac, T0* C);
/* ET_CLIENT_LIST.is_none */
extern T1 T427f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].item */
extern T0* T1388f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].first */
extern T0* T1388f7(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.add_inherited_clients_to_list */
extern void T504f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_EXPORT.clients */
extern T0* T1212f8(TC* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T1568f7(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T1212f7(TC* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T1568f6(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T1212f6(TC* ac, T0* C);
/* ET_EXPORT_LIST.item */
extern T0* T488f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].force_last */
extern void T1388f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].force */
extern void T1741f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].fill_with */
extern void T1742f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].extend */
extern void T1742f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].resize */
extern void T1388f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1741f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1742f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_capacity */
extern T6 T1388f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].extendible */
extern T1 T1388f9(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T504f51(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T504f56(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1399f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T1577f91(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1399f23(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1398f56(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_feature_validity */
extern void T1398f22(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1398f23(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T58f594(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T843c1266(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T58f182(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T41f594(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T41f182(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1398f9(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1398f49(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1398f8(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_64_type */
extern T0* T191f74(TC* ac, T0* C);
/* ET_SYSTEM.real_64_type */
extern T0* T45f80(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_64_type */
extern T0* T63f77(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern T0* T78f958(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_feature_validity */
extern void T1398f48(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_expected_builtin_feature_validity */
extern void T1398f51(TC* ac, T0* C, T0* a1, T8 a2, T0* a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_signature_validity */
extern void T1398f52(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T58f595(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T843c1267(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.to_text */
extern T0* T1535f12(TC* ac, T0* C);
/* ET_LIKE_N.append_to_string */
extern void T1535f44(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T58f183(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T41f595(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T41f183(TC* ac, T0* C, T0* a1);
/* ARRAY [ET_TYPE].item */
extern T0* T249f4(TC* ac, T0* C, T6 a1);
/* ARRAY [ET_TYPE].count */
extern T6 T249f5(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found_item */
extern T0* T1997f28(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_item */
extern T0* T1997f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found */
extern T1 T1997f29(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search */
extern void T1997f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search_position */
extern void T1997f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].hash_position */
extern T6 T1997f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_item */
extern T0* T1997f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_item */
extern T6 T1997f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_item */
extern T6 T1997f26(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern T0* T78f1542(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern T0* T78f1540(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern T0* T78f1538(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern T0* T78f1485(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.quotient_feature_name */
extern T0* T78f1481(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.product_feature_name */
extern T0* T78f1479(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.power_feature_name */
extern T0* T78f1477(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.plus_feature_name */
extern T0* T78f1057(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_type */
extern T0* T191f80(TC* ac, T0* C);
/* ET_SYSTEM.string_type */
extern T0* T45f86(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_type */
extern T0* T63f83(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern T0* T78f1055(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.opposite_feature_name */
extern T0* T78f1474(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.minus_feature_name */
extern T0* T78f1472(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern T0* T78f1528(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern T0* T78f1526(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern T0* T78f1524(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_less_feature_name */
extern T0* T78f1470(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_minimum_number_feature_name */
extern T0* T78f1521(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_maximum_number_feature_name */
extern T0* T78f1519(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_is_less_equal_feature_name */
extern T0* T78f1517(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_is_less_feature_name */
extern T0* T78f1515(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_is_greater_equal_feature_name */
extern T0* T78f1513(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_is_greater_feature_name */
extern T0* T78f1511(TC* ac, T0* C);
/* ET_ECF_LIBRARY.boolean_type */
extern T0* T191f33(TC* ac, T0* C);
/* ET_SYSTEM.boolean_type */
extern T0* T45f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM.boolean_type */
extern T0* T63f36(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_is_equal_feature_name */
extern T0* T78f1509(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_feature_name */
extern T0* T78f1464(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern T0* T78f1506(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern T0* T78f1504(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern T0* T78f1502(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.register_builtin_feature */
extern void T1398f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T8 a4, T0* a5);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].force_last */
extern void T1997f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_put */
extern void T1997f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].force */
extern void T1736f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].fill_with */
extern void T1734f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].extend */
extern void T1734f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_put */
extern void T1997f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_put */
extern void T1997f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].resize */
extern void T1997f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_resize */
extern void T1997f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].special_integer_ */
extern T0* T1997f31(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_resize */
extern void T1997f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1736f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1734f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_resize */
extern void T1997f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T2083f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T2080f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_resize */
extern void T1997f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_modulus */
extern T6 T1997f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_capacity */
extern T6 T1997f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_put */
extern void T1997f41(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].force */
extern void T2083f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].fill_with */
extern void T2080f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].extend */
extern void T2080f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].unset_found_item */
extern void T1997f39(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern T0* T78f1500(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].force_last */
extern void T1765f43(TC* ac, T0* C, T0* a1, T8 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_put */
extern void T1765f49(TC* ac, T0* C, T8 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_put */
extern void T1765f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_put */
extern void T1765f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_item */
extern T6 T1765f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].hash_position */
extern T6 T1765f23(TC* ac, T0* C, T8 a1);
/* NATURAL_8.hash_code */
extern T6 T8f29(TC* ac, volatile T8* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].resize */
extern void T1765f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_resize */
extern void T1765f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].special_integer_ */
extern T0* T1765f31(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_resize */
extern void T1765f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_resize */
extern void T1765f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1996f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1998f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_item */
extern T8 T1765f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_item */
extern T6 T1765f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_resize */
extern void T1765f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_modulus */
extern T6 T1765f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_capacity */
extern T6 T1765f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_put */
extern void T1765f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].force */
extern void T1996f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].fill_with */
extern void T1998f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].extend */
extern void T1998f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search_position */
extern void T1765f44(TC* ac, T0* C, T8 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].unset_found_item */
extern void T1765f40(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_key_equality_tester */
extern void T1997f35(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.feature_name_tester */
extern T0* T1398f10(TC* ac, T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1383c2(TC* ac);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_map */
extern T0* T1997c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_with_equality_testers */
extern void T1997f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_sparse_container */
extern void T1997f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_internal_cursor */
extern void T1997f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_cursor */
extern T0* T1997f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make */
extern T0* T2084c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_slots */
extern void T1997f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_clashes */
extern void T1997f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_key_storage */
extern void T1997f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T1736f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make_empty */
extern T0* T1734c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T1736c3(TC* ac);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_item_storage */
extern void T1997f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make */
extern T0* T2083f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make_empty */
extern T0* T2080c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].default_create */
extern T0* T2083c3(TC* ac);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found_item */
extern T0* T1765f20(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_item */
extern T0* T1765f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found */
extern T1 T1765f32(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search */
extern void T1765f42(TC* ac, T0* C, T8 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_ref_feature_validity */
extern void T1398f47(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern T0* T78f1023(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern T0* T78f1497(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern T0* T78f1495(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.nan_feature_name */
extern T0* T78f1493(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_32_type */
extern T0* T191f72(TC* ac, T0* C);
/* ET_SYSTEM.real_32_type */
extern T0* T45f78(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_32_type */
extern T0* T63f75(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern T0* T78f955(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_64_type */
extern T0* T191f64(TC* ac, T0* C);
/* ET_SYSTEM.natural_64_type */
extern T0* T45f71(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_64_type */
extern T0* T63f67(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern T0* T78f952(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_32_type */
extern T0* T191f62(TC* ac, T0* C);
/* ET_SYSTEM.natural_32_type */
extern T0* T45f69(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_32_type */
extern T0* T63f65(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern T0* T78f949(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_16_type */
extern T0* T191f60(TC* ac, T0* C);
/* ET_SYSTEM.natural_16_type */
extern T0* T45f67(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_16_type */
extern T0* T63f63(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern T0* T78f946(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_8_type */
extern T0* T191f58(TC* ac, T0* C);
/* ET_SYSTEM.natural_8_type */
extern T0* T45f65(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_8_type */
extern T0* T63f61(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern T0* T78f943(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_64_type */
extern T0* T191f53(TC* ac, T0* C);
/* ET_SYSTEM.integer_64_type */
extern T0* T45f60(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_64_type */
extern T0* T63f56(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern T0* T78f940(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_32_type */
extern T0* T191f51(TC* ac, T0* C);
/* ET_SYSTEM.integer_32_type */
extern T0* T45f58(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_32_type */
extern T0* T63f54(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern T0* T78f937(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_16_type */
extern T0* T191f49(TC* ac, T0* C);
/* ET_SYSTEM.integer_16_type */
extern T0* T45f56(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_16_type */
extern T0* T63f52(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern T0* T78f934(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_feature_validity */
extern void T1398f46(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern T0* T78f1491(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern T0* T78f1489(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern T0* T78f1487(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern T0* T78f1031(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern T0* T78f1029(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern T0* T78f1468(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern T0* T78f1466(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern T0* T78f1462(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern T0* T78f1460(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_type */
extern T0* T191f46(TC* ac, T0* C);
/* ET_SYSTEM.integer_type */
extern T0* T45f1(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_type */
extern T0* T63f49(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern T0* T78f1458(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern T0* T78f1456(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern T0* T78f1454(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern T0* T78f1452(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern T0* T78f1450(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern T0* T78f1448(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern T0* T78f1446(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern T0* T78f1444(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern T0* T78f1442(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern T0* T78f1440(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern T0* T78f1438(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern T0* T78f1436(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_ref_feature_validity */
extern void T1398f45(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_ECF_LIBRARY.integer_8_type */
extern T0* T191f47(TC* ac, T0* C);
/* ET_SYSTEM.integer_8_type */
extern T0* T45f54(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_8_type */
extern T0* T63f50(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern T0* T78f931(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_feature_validity */
extern void T1398f44(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern T0* T78f1433(TC* ac, T0* C);
/* ET_ECF_LIBRARY.double_type */
extern T0* T191f39(TC* ac, T0* C);
/* ET_SYSTEM.double_type */
extern T0* T45f47(TC* ac, T0* C);
/* ET_ECF_SYSTEM.double_type */
extern T0* T63f42(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern T0* T78f1430(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_type */
extern T0* T191f71(TC* ac, T0* C);
/* ET_SYSTEM.real_type */
extern T0* T45f77(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_type */
extern T0* T63f74(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern T0* T78f1428(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern T0* T78f1426(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern T0* T78f1424(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern T0* T78f1422(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern T0* T78f1420(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern T0* T78f1418(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern T0* T78f1416(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern T0* T78f1414(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern T0* T78f1412(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern T0* T78f1410(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern T0* T78f1408(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern T0* T78f1406(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern T0* T78f1404(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern T0* T78f1401(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern T0* T78f1399(TC* ac, T0* C);
/* ET_ECF_LIBRARY.pointer_type */
extern T0* T191f68(TC* ac, T0* C);
/* ET_SYSTEM.pointer_type */
extern T0* T45f8(TC* ac, T0* C);
/* ET_ECF_SYSTEM.pointer_type */
extern T0* T63f71(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern T0* T78f10(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern T0* T78f1397(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern T0* T78f1395(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern T0* T78f1393(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern T0* T78f1391(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern T0* T78f1389(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern T0* T78f1387(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern T0* T78f1385(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern T0* T78f1383(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern T0* T78f1381(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern T0* T78f1379(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern T0* T78f4(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern T0* T78f1376(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern T0* T78f1374(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern T0* T78f1372(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_feature_validity */
extern void T1398f43(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.detachable_separate_formal_parameter_type */
extern T0* T1398f11(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.name */
extern T0* T1563f8(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.name */
extern T0* T948f1(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T247f2(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.fast_item_feature_name */
extern T0* T78f1370(TC* ac, T0* C);
/* ET_CLASS.formal_parameter_type */
extern T0* T79f104(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T947f11(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T947f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T947f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T1682f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T1681f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T1681f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T947f9(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1682f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1681f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T947c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T947f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T947f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1683c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1682f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T1681c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1682c3(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_feature_validity */
extern void T1398f42(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_call_feature_name */
extern T0* T78f1368(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_feature_validity */
extern void T1398f41(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern T0* T78f1366(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern T0* T78f1364(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern T0* T78f1362(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern T0* T78f1360(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern T0* T78f1358(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern T0* T78f1356(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern T0* T78f1354(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern T0* T78f1352(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern T0* T78f1350(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern T0* T78f1348(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern T0* T78f1346(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_64_bits_feature_name */
extern T0* T78f1344(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern T0* T78f1342(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern T0* T78f1340(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern T0* T78f1338(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern T0* T78f1336(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern T0* T78f930(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_runtime_feature_validity */
extern void T1398f40(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unmark_object_feature_name */
extern T0* T78f1333(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unlock_marking_feature_name */
extern T0* T78f1331(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_at_feature_name */
extern T0* T78f1330(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern T0* T78f1329(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_at_feature_name */
extern T0* T78f1327(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern T0* T78f1325(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_at_feature_name */
extern T0* T78f1323(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern T0* T78f1321(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pre_ecma_mapping_feature_name */
extern T0* T78f1319(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_at_feature_name */
extern T0* T78f1317(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern T0* T78f1315(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_at_feature_name */
extern T0* T78f1313(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern T0* T78f1311(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_at_feature_name */
extern T0* T78f1309(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern T0* T78f1307(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_at_feature_name */
extern T0* T78f1305(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern T0* T78f1303(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_at_feature_name */
extern T0* T78f1301(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern T0* T78f1299(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_at_feature_name */
extern T0* T78f1297(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern T0* T78f1295(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_at_feature_name */
extern T0* T78f1293(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern T0* T78f1291(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_at_feature_name */
extern T0* T78f1289(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern T0* T78f1287(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_at_feature_name */
extern T0* T78f1285(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern T0* T78f1283(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_at_feature_name */
extern T0* T78f1281(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern T0* T78f1279(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_at_feature_name */
extern T0* T78f1277(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern T0* T78f1275(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_at_feature_name */
extern T0* T78f1273(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern T0* T78f1271(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.mark_object_feature_name */
extern T0* T78f1269(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lock_marking_feature_name */
extern T0* T78f1267(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_id_from_name_feature_name */
extern T0* T78f1265(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_conforms_to_feature_name */
extern T0* T78f1263(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_string_8_type */
extern T0* T191f83(TC* ac, T0* C);
/* ET_SYSTEM.detachable_string_8_type */
extern T0* T45f89(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_string_8_type */
extern T0* T63f86(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.storable_version_of_type_feature_name */
extern T0* T78f1261(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_offset_feature_name */
extern T0* T78f1260(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_feature_name */
extern T0* T78f1259(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_any_type */
extern T0* T191f20(TC* ac, T0* C);
/* ET_SYSTEM.detachable_any_type */
extern T0* T45f33(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_any_type */
extern T0* T63f23(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_feature_name */
extern T0* T78f1258(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_at_feature_name */
extern T0* T78f1256(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern T0* T78f1254(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_at_feature_name */
extern T0* T78f1252(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern T0* T78f1250(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_offset_feature_name */
extern T0* T78f1248(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_feature_name */
extern T0* T78f1246(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pre_ecma_mapping_status_feature_name */
extern T0* T78f1244(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_at_feature_name */
extern T0* T78f1242(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern T0* T78f1240(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.persistent_field_count_of_type_feature_name */
extern T0* T78f1238(TC* ac, T0* C);
/* ET_ECF_LIBRARY.special_any_type */
extern T0* T191f77(TC* ac, T0* C);
/* ET_SYSTEM.special_any_type */
extern T0* T45f83(TC* ac, T0* C);
/* ET_ECF_SYSTEM.special_any_type */
extern T0* T63f80(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_objects_feature_name */
extern T0* T78f1236(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_size_feature_name */
extern T0* T78f1234(TC* ac, T0* C);
/* ET_ECF_LIBRARY.type_detachable_any_type */
extern T0* T191f90(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_any_type */
extern T0* T45f94(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_any_type */
extern T0* T63f93(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_type_instance_of_feature_name */
extern T0* T78f1233(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_tuple_instance_of_feature_name */
extern T0* T78f1232(TC* ac, T0* C);
/* ET_ECF_LIBRARY.special_detachable_any_type */
extern T0* T191f78(TC* ac, T0* C);
/* ET_SYSTEM.special_detachable_any_type */
extern T0* T45f84(TC* ac, T0* C);
/* ET_ECF_SYSTEM.special_detachable_any_type */
extern T0* T63f81(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_special_of_reference_instance_of_feature_name */
extern T0* T78f1231(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_instance_of_feature_name */
extern T0* T78f1230(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_at_feature_name */
extern T0* T78f1228(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern T0* T78f1226(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_at_feature_name */
extern T0* T78f1224(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern T0* T78f1222(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_at_feature_name */
extern T0* T78f1220(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern T0* T78f1218(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_at_feature_name */
extern T0* T78f1216(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern T0* T78f1214(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_type_feature_name */
extern T0* T78f1212(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_feature_name */
extern T0* T78f1210(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_type_feature_name */
extern T0* T78f1208(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_or_basic_type_feature_name */
extern T0* T78f1206(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_feature_name */
extern T0* T78f1204(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_expanded_feature_name */
extern T0* T78f1202(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_copy_semantics_item_feature_name */
extern T0* T78f1200(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_feature_name */
extern T0* T78f1198(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_object_marked_feature_name */
extern T0* T78f1196(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_transient_of_type_feature_name */
extern T0* T78f1194(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_expanded_of_type_feature_name */
extern T0* T78f1192(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern T0* T78f999(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_copy_semantics_field_feature_name */
extern T0* T78f1189(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_type_feature_name */
extern T0* T78f1187(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_at_feature_name */
extern T0* T78f1185(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern T0* T78f1183(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_at_feature_name */
extern T0* T78f1181(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern T0* T78f1179(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_at_feature_name */
extern T0* T78f1177(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern T0* T78f1175(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_at_feature_name */
extern T0* T78f1173(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern T0* T78f1171(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.in_assertion_feature_name */
extern T0* T78f1169(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern T0* T78f991(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_8_of_type_feature_name */
extern T0* T78f1166(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_of_type_feature_name */
extern T0* T78f1164(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_8_type */
extern T0* T191f82(TC* ac, T0* C);
/* ET_SYSTEM.string_8_type */
extern T0* T45f88(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_8_type */
extern T0* T63f85(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_8_of_type_feature_name */
extern T0* T78f1162(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_of_type_feature_name */
extern T0* T78f1160(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_type_of_type_feature_name */
extern T0* T78f1158(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_static_type_of_type_feature_name */
extern T0* T78f1156(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_offset_of_type_feature_name */
extern T0* T78f1154(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_name_of_type_feature_name */
extern T0* T78f1152(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_count_of_type_feature_name */
extern T0* T78f1150(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_gen_param_id_feature_name */
extern T0* T78f1148(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_at_offset_feature_name */
extern T0* T78f1146(TC* ac, T0* C);
/* ET_ECF_LIBRARY.any_type */
extern T0* T191f19(TC* ac, T0* C);
/* ET_SYSTEM.any_type */
extern T0* T45f12(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_type */
extern T0* T63f22(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_feature_name */
extern T0* T78f1144(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_type_feature_name */
extern T0* T78f1142(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.compiler_version_feature_name */
extern T0* T78f1140(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.check_assert_feature_name */
extern T0* T78f1138(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_at_feature_name */
extern T0* T78f1136(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern T0* T78f1134(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_at_feature_name */
extern T0* T78f1132(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern T0* T78f1130(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_at_feature_name */
extern T0* T78f1128(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern T0* T78f1126(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_type_feature_name */
extern T0* T78f1124(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_runtime_class_name */
extern T0* T78f929(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_feature_validity */
extern void T1398f39(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern T0* T78f1122(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern T0* T78f1121(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_is_object_id_of_current_feature_name */
extern T0* T78f1119(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern T0* T78f1118(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_current_object_id_feature_name */
extern T0* T78f1116(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern T0* T78f928(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_feature_validity */
extern void T1398f38(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern T0* T78f1114(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_feature_validity */
extern void T1398f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.exception_manager_type */
extern T0* T191f42(TC* ac, T0* C);
/* ET_SYSTEM.exception_manager_type */
extern T0* T45f50(TC* ac, T0* C);
/* ET_ECF_SYSTEM.exception_manager_type */
extern T0* T63f45(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern T0* T78f1111(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern T0* T78f927(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_feature_validity */
extern void T1398f36(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern T0* T78f1108(TC* ac, T0* C);
/* ET_ECF_LIBRARY.exception_type */
extern T0* T191f40(TC* ac, T0* C);
/* ET_SYSTEM.exception_type */
extern T0* T45f48(TC* ac, T0* C);
/* ET_ECF_SYSTEM.exception_type */
extern T0* T63f43(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raise_feature_name */
extern T0* T78f1106(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ignore_feature_name */
extern T0* T78f1104(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.catch_feature_name */
extern T0* T78f1102(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_type_exception_type */
extern T0* T191f91(TC* ac, T0* C);
/* ET_SYSTEM.detachable_type_exception_type */
extern T0* T45f95(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_type_exception_type */
extern T0* T63f94(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern T0* T78f1100(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern T0* T78f18(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern T0* T78f1097(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern T0* T78f1095(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern T0* T78f1093(TC* ac, T0* C);
/* ET_ECF_LIBRARY.type_detachable_exception_type */
extern T0* T191f92(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_exception_type */
extern T0* T45f96(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_exception_type */
extern T0* T63f95(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern T0* T78f1091(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_exception_type */
extern T0* T191f41(TC* ac, T0* C);
/* ET_SYSTEM.detachable_exception_type */
extern T0* T45f49(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_exception_type */
extern T0* T63f44(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern T0* T78f1089(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_feature_validity */
extern void T1398f35(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.free_feature_name */
extern T0* T78f1086(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern T0* T78f1084(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.memory_class_name */
extern T0* T78f926(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_feature_validity */
extern void T1398f34(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern T0* T78f1081(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern T0* T78f1079(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_size_feature_name */
extern T0* T78f1077(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern T0* T78f1075(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern T0* T78f1073(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern T0* T78f1071(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern T0* T78f1069(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.com_failure_class_name */
extern T0* T78f925(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_feature_validity */
extern void T1398f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.immutable_string_32_type */
extern T0* T191f45(TC* ac, T0* C);
/* ET_SYSTEM.immutable_string_32_type */
extern T0* T45f53(TC* ac, T0* C);
/* ET_ECF_SYSTEM.immutable_string_32_type */
extern T0* T63f48(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.i_th_argument_string_feature_name */
extern T0* T78f1066(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern T0* T78f1064(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern T0* T78f1062(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern T0* T78f924(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_feature_validity */
extern void T1398f32(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern T0* T78f1059(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern T0* T78f1053(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern T0* T78f1051(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_feature_validity */
extern void T1398f31(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern T0* T78f923(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_feature_validity */
extern void T1398f30(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.negated_feature_name */
extern T0* T78f1047(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implication_feature_name */
extern T0* T78f1045(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern T0* T78f1043(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern T0* T78f1041(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern T0* T78f1039(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern T0* T78f1037(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern T0* T78f1035(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_feature_validity */
extern void T1398f29(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern T0* T78f922(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern T0* T78f919(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_feature_validity */
extern void T1398f28(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern T0* T78f1027(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern T0* T78f1025(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_ref_feature_validity */
extern void T1398f27(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_ECF_LIBRARY.character_8_type */
extern T0* T191f35(TC* ac, T0* C);
/* ET_SYSTEM.character_8_type */
extern T0* T45f44(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_8_type */
extern T0* T63f38(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1398f7(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern T0* T78f916(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_feature_validity */
extern void T1398f26(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_count_feature_name */
extern T0* T78f1021(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern T0* T78f1019(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern T0* T78f1017(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.extend_feature_name */
extern T0* T78f1015(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern T0* T78f1012(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.capacity_feature_name */
extern T0* T78f5(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern T0* T78f1008(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_current */
extern T0* T78f965(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern T0* T78f1006(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_feature_validity */
extern void T1398f25(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern T0* T78f1003(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern T0* T78f1001(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deferred_feature_name */
extern T0* T78f997(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_feature_name */
extern T0* T78f995(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.has_default_feature_name */
extern T0* T78f993(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern T0* T78f989(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_feature_name */
extern T0* T78f987(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_feature_validity */
extern void T1398f24(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern T0* T78f984(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern T0* T78f980(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern T0* T78f978(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern T0* T78f976(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern T0* T78f974(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern T0* T78f971(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern T0* T78f969(TC* ac, T0* C);
/* ET_ECF_LIBRARY.type_detachable_like_current_type */
extern T0* T191f93(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_like_current_type */
extern T0* T45f97(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_like_current_type */
extern T0* T63f96(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern T0* T78f967(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern T0* T78f964(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern T0* T78f962(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1398f5(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1398f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T403f98(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T403f110(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_components_validity */
extern void T403f118(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REPEAT_INSTRUCTION.unfolded_cursor_name */
extern T0* T1337f2(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.unfolded_cursor_name */
extern T0* T1078f3(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.unfolded_cursor_name */
extern T0* T1327f3(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unfolded_cursor_name */
extern T0* T1075f4(TC* ac, T0* C);
/* ET_IDENTIFIER.set_iteration_item */
extern void T188f139(TC* ac, T0* C, T1 a1);
/* ET_REPEAT_INSTRUCTION.item_name */
extern T0* T1337f1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.item_name */
extern T0* T1078f1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.item_name */
extern T0* T1327f2(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.item_name */
extern T0* T1075f2(TC* ac, T0* C);
/* ET_ITERATION_COMPONENT_LIST.iteration_component */
extern T0* T388f5(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T403f117(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T58f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T843c955(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T58f41(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot3a_error */
extern void T41f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T41f41(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T403f57(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T403f78(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.older_ise_version */
extern T1 T69f44(TC* ac, T0* C, T0* a1);
/* UT_VERSION.is_less */
extern T1 T51f14(TC* ac, T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T51f9(TC* ac, T0* C);
/* UT_VERSION.has_build */
extern T1 T51f8(TC* ac, T0* C);
/* UT_VERSION.revision */
extern T6 T51f7(TC* ac, T0* C);
/* UT_VERSION.has_revision */
extern T1 T51f6(TC* ac, T0* C);
/* UT_VERSION.minor */
extern T6 T51f5(TC* ac, T0* C);
/* UT_VERSION.has_minor */
extern T1 T51f13(TC* ac, T0* C);
/* UT_VERSION.major */
extern T6 T51f12(TC* ac, T0* C);
/* UT_VERSION.has_major */
extern T1 T51f11(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.older_ise_version */
extern T1 T398f46(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern T0* T403f53(TC* ac, T0* C);
/* UT_VERSION.make */
extern T0* T51c19(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_IDENTIFIER.set_object_test_local */
extern void T188f141(TC* ac, T0* C, T1 a1);
/* ET_OBJECT_TEST_LIST.object_test */
extern T0* T521f5(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T403f116(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T403f131(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T1413f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T403f130(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T403f129(TC* ac, T0* C, T0* a1);
extern T1 T403f129ot1(TC* ac, T0* a1);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T407f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T407f25ot1(TC* ac, T0* a1);
extern T1 T407f25ot2(TC* ac, T0* a1);
extern T1 T407f25ot3(TC* ac, T0* a1);
extern T1 T407f25ot4(TC* ac, T0* a1);
extern T1 T407f25ot5(TC* ac, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern T0* T407f17(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T1563f40(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T948f41(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T1587f49(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T1586f52(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T1585f50(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T247f47(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_like_current */
extern T1 T493f46(TC* ac, T0* C);
/* ET_CLASS.is_like_current */
extern T1 T79f207(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T259f79(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T77f86(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1563f31(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1563f30(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f30ot1(TC* ac, T0* a1);
extern T1 T1563f30ot2(TC* ac, T0* a1);
extern T1 T1563f30ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T1587f55(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f55ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T1586f58(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f58ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T1585f56(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T247f53(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f53ot1(TC* ac, T0* a1);
extern T1 T247f53ot2(TC* ac, T0* a1);
extern T1 T247f53ot3(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T493f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T79f211(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T79f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T259f85(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T259f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T77f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T77f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T948f28(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f28ot1(TC* ac, T0* a1);
extern T1 T948f28ot2(TC* ac, T0* a1);
extern T1 T948f28ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T948f29(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.actual_parameters */
extern T0* T259f1(TC* ac, T0* C);
/* ET_CLASS.formal_parameters */
extern T0* T79f29(TC* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T77f3(TC* ac, T0* C);
/* ET_CLASS.shallow_named_type */
extern T0* T79f206(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T1587f48(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T1586f51(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T1585f49(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T259f78(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T247f46(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T77f80(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T493f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_context */
extern void T403f77(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T403f49(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T414f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].force */
extern void T786f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T785f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].extend */
extern void T785f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T414f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T786f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T785f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T414f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T414f8(TC* ac, T0* C, T6 a1);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T407f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T403f54(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T414f14(TC* ac, T0* C);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T785f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].set_count */
extern void T785f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T414f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T787f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_after */
extern void T787f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T414f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T414f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T76f156(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T76f161(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T76f166(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T76f173(TC* ac, T0* C, T0* a1);
extern T1 T76f173ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T1529f7(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T281f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T523f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T76f172(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T76f171(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T76f77(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T76f170(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T76f169(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T76f168(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T1577f71(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T1577f47(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T76f161p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_components_validity */
extern void T76f141(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T76f140(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T76f70(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T76f139(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T76f147(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T76f146(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_attached_index */
extern void T1830f12(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT.set_attached_index */
extern void T261f11(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T76f151(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T267f17(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T2048f21(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_index */
extern void T361f27(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T2046f7(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T2100f25(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T2102f30(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T2101f32(TC* ac, T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T1620f15(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_CURSOR.set_index */
extern void T1612f28(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T1611f31(TC* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T1609f28(TC* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T1072f50(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T1618f53(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T1617f62(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T1616f57(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T1615f54(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T1614f63(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T1613f58(TC* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T1619f14(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T1305f29(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1868f11(TC* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T1108f38(TC* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T347f36(TC* ac, T0* C, T6 a1);
/* ET_QUANTIFIER_EXPRESSION.set_index */
extern void T1327f44(TC* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.set_index */
extern void T1075f52(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T1277f37(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T1553f49(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T1552f49(TC* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.set_index */
extern void T791f33(TC* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.set_index */
extern void T1610f36(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T1343f36(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T305f34(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.set_index */
extern void T332f31(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T1607f28(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T1606f29(TC* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T676f27(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T1599f28(TC* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T1602f28(TC* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T1601f28(TC* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T1600f28(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.set_index */
extern void T1250f31(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.set_index */
extern void T1234f34(TC* ac, T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T1064f36(TC* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T1556f45(TC* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T1555f45(TC* ac, T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T293f40(TC* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T1340f36(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T1598f33(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T1547f56(TC* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T1546f52(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T1545f52(TC* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T1551f69(TC* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T1550f69(TC* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T1549f69(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T1548f69(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T395f71(TC* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T1544f53(TC* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T1558f54(TC* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T1557f53(TC* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T686f34(TC* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T1608f32(TC* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T1603f32(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_EXPRESSION.set_index */
extern void T945f12(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T1105f31(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T298f30(TC* ac, T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T266f39(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T267f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].force */
extern void T667f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].fill_with */
extern void T666f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].extend */
extern void T666f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern T0* T267f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T667c3(TC* ac);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T267f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T667f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T666f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T267f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T267f6(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.index */
extern T6 T1619f4(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.index */
extern T6 T1868f1(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.index */
extern T6 T945f4(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T76f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T76f145(TC* ac, T0* C, T0* a1);
extern T1 T76f145ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T76f112(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T76f71(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T76f84(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T72f1297(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T72f1342(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine */
extern void T72f1228(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dedent */
extern void T72f726(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation */
extern void T72f714(TC* ac, T0* C);
/* ET_C_GENERATOR.indent */
extern void T72f713(TC* ac, T0* C);
/* ET_C_GENERATOR.print_argument_name */
extern void T72f787(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T321f37(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T321f46(TC* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T268f9(TC* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T268f11(TC* ac, T0* C, T7 a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T72f575(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T286f3(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_current_name */
extern void T72f789(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine_name */
extern void T72f1252(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_name */
extern void T72f738(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.id */
extern T6 T496f1(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.id */
extern T6 T495f1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.id */
extern T6 T323f1(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.id */
extern T6 T338f1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.id */
extern T6 T228f4(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T268f7(TC* ac, T0* C, T2 a1);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T268f8(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T268f3(TC* ac, T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T72f712(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T72f681(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T72f1229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_external_routine */
extern void T72f1377(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T72f1393(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T321f36(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T321f45(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T321f45p1(TC* ac, T0* C);
/* ET_C_GENERATOR.print_temporary_variable_declarations */
extern void T72f727(TC* ac, T0* C);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T72f784(TC* ac, T0* C);
/* DS_ARRAYED_LIST [BOOLEAN].wipe_out */
extern void T272f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [BOOLEAN].move_all_cursors_after */
extern void T272f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].set_next_cursor */
extern void T674f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].set_after */
extern void T674f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T270f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T669f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].set_count */
extern void T669f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T270f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T671f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T671f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T72f753(TC* ac, T0* C);
/* ET_C_GENERATOR.print_temp_name */
extern void T72f717(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [BOOLEAN].item */
extern T1 T272f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T269f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T270f9(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T58f380(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_warning_message */
extern void T41f380(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T72f1392(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T545f12(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T156f24(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T156f25(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T545f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T156f26(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T545f9(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T545f7(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T545f11(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T156f23(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T156f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].off */
extern T1 T545f6(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T156f9(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T545c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_declaration_type_cast_from_c */
extern void T72f996(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_declaration_type_cast */
extern void T72f793(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_boolean */
extern T1 T496f67(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_boolean */
extern T1 T495f68(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_boolean */
extern T1 T338f34(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_boolean */
extern T1 T323f34(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_boolean */
extern T1 T228f52(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T268f6(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T72f1391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T72f294(TC* ac, T0* C, T0* a1);
extern T1 T72f294ot1(TC* ac, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T309f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T2102f12(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_current */
extern T1 T2101f13(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_current */
extern T1 T2100f11(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T2048f9(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_current */
extern T1 T945f5(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_current */
extern T1 T1551f14(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_current */
extern T1 T1550f14(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T1549f14(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T1548f14(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T395f9(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T1547f27(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T1546f25(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T1544f15(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_current */
extern T1 T1612f5(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_current */
extern T1 T1327f15(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_current */
extern T1 T1075f18(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T1611f5(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_current */
extern T1 T791f8(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_current */
extern T1 T1610f10(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T1599f5(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T686f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1618f18(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1617f20(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1616f39(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1615f39(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1614f45(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1613f19(TC* ac, T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T1108f11(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T1343f11(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T1277f11(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T1305f5(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T1105f5(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_current */
extern T1 T332f12(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T1609f5(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T1608f5(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T1607f5(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_current */
extern T1 T1606f5(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T676f5(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T1603f20(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T1602f5(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T1601f5(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T1600f5(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T1598f9(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T1340f9(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_current */
extern T1 T1250f10(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_current */
extern T1 T1234f10(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T1558f31(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T1557f31(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T1556f9(TC* ac, T0* C);
/* ET_VOID.is_current */
extern T1 T1064f9(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T1555f9(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T1553f30(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T1552f30(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T1545f6(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T305f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T298f9(TC* ac, T0* C);
/* ET_RESULT.is_current */
extern T1 T266f7(TC* ac, T0* C);
/* ET_CURRENT.is_current */
extern T1 T293f7(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_current */
extern T1 T361f5(TC* ac, T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T188f8(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_current */
extern T1 T309f7(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T347f13(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T156f15(TC* ac, T0* C, T6 a1);
/* ST_SPLITTER.split */
extern T0* T2011f6(TC* ac, T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T2011f7(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T156f18(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].put_right */
extern void T546f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].make */
extern T0* T546c3(TC* ac, T0* a1);
/* DS_HASH_SET [NATURAL_32].has */
extern T1 T2117f25(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].search_position */
extern void T2117f31(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].hash_position */
extern T6 T2117f19(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].key_storage_item */
extern T10 T2117f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].item_storage_item */
extern T10 T2117f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].clashes_item */
extern T6 T2117f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].key_equality_tester */
extern T0* T2117f28(TC* ac, T0* C);
/* DS_HASH_SET [NATURAL_32].slots_item */
extern T6 T2117f24(TC* ac, T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T2011f5(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T156c17(TC* ac);
/* DS_LINKED_LIST [STRING_8].set_internal_cursor */
extern void T156f22(TC* ac, T0* C, T0* a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T2011c9(TC* ac, T0* a1);
/* ST_SPLITTER.set_separators */
extern void T2011f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [NATURAL_32].put */
extern void T2117f30(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].slots_put */
extern void T2117f40(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].clashes_put */
extern void T2117f39(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].item_storage_put */
extern void T2117f38(TC* ac, T0* C, T10 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].unset_found_item */
extern void T2117f36(TC* ac, T0* C);
/* DS_HASH_SET [NATURAL_32].make */
extern T0* T2117c29(TC* ac, T6 a1);
/* DS_HASH_SET [NATURAL_32].set_internal_cursor */
extern void T2117f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [NATURAL_32].new_cursor */
extern T0* T2117f20(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [NATURAL_32].make */
extern T0* T2156c4(TC* ac, T0* a1);
/* DS_HASH_SET [NATURAL_32].make_slots */
extern void T2117f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].new_modulus */
extern T6 T2117f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_clashes */
extern void T2117f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_key_storage */
extern void T2117f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_item_storage */
extern void T2117f32(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T72f1390(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T72f1389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T72f1388(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T72f1387(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T72f1398(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T72f1436(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T284f13(TC* ac, T0* C);
/* SPECIAL [ET_EXPRESSION].keep_head */
extern void T701f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].set_count */
extern void T701f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T284f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T703f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_after */
extern void T703f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T72f991(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T72f832(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T72f750(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_attached */
extern T1 T342f20(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_attached */
extern T1 T496f34(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_attached */
extern T1 T495f34(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_attached */
extern T1 T323f39(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_attached */
extern T1 T338f37(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_attached */
extern T1 T228f31(TC* ac, T0* C);
/* ET_C_GENERATOR.print_expression */
extern void T72f780(TC* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T2048f23(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1399f118(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T76f570(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T76f575(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T76f227(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T76f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T423f61(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T417f67(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T403f463(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T403f464(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T403f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T403f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T1413f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T72f1598(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T72f1600(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T2102f27(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1399f124(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T423f65(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T417f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T76f579(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T76f582(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T76f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f247ot1(TC* ac, T0* a1);
extern T1 T76f247ot2(TC* ac, T0* a1);
extern T1 T76f247ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_adapted_base_classes */
extern void T76f234(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].force_last */
extern void T429f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].force */
extern void T819f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].fill_with */
extern void T820f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].extend */
extern void T820f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].resize */
extern void T429f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].aliased_resized_area */
extern T0* T819f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].aliased_resized_area */
extern T0* T820f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].new_capacity */
extern T6 T429f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].extendible */
extern T1 T429f6(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0f_error */
extern void T58f445(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgmc0f */
extern T0* T843c1120(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgmc0f_error */
extern void T41f445(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T58f408(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T843c1083(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T58f105(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T41f408(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T41f105(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T76f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T76f457(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f457ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T76f380(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T496f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.put_query_call */
extern void T327f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].force */
extern void T650f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_put */
extern void T650f43(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].force */
extern void T1473f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].fill_with */
extern void T1469f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].extend */
extern void T1469f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_put */
extern void T650f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_put */
extern void T650f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_item */
extern T6 T650f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_item */
extern T6 T650f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].hash_position */
extern T6 T650f26(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.hash_code */
extern T6 T2031f14(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.hash_code */
extern T6 T1605f17(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.hash_code */
extern T6 T1604f17(TC* ac, T0* C);
/* ET_FREE_OPERATOR.hash_code */
extern T6 T1040f2(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.hash_code */
extern T6 T1048f26(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.hash_code */
extern T6 T1061f99(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.hash_code */
extern T6 T656f99(TC* ac, T0* C);
/* ET_IDENTIFIER.hash_code */
extern T6 T188f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].resize */
extern void T650f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_resize */
extern void T650f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].special_integer_ */
extern T0* T650f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_resize */
extern void T650f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].aliased_resized_area */
extern T0* T1473f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_NAME].aliased_resized_area */
extern T0* T1469f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_resize */
extern void T650f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].aliased_resized_area */
extern T0* T1476f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].aliased_resized_area */
extern T0* T1474f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_item */
extern T0* T650f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_resize */
extern void T650f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_modulus */
extern T6 T650f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_capacity */
extern T6 T650f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_put */
extern void T650f39(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].force */
extern void T1476f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].fill_with */
extern void T1474f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].extend */
extern void T1474f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].search_position */
extern void T650f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].unset_found_item */
extern void T650f37(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.put_query_call */
extern void T241f56(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T334f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T495f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T323f79(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T338f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_query_call */
extern void T228f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T334c15(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T58f480(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T843c1155(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T58f134(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T41f480(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T41f134(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T2102f25(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T1608f19(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.arguments_count */
extern T6 T1603f19(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments_count */
extern T6 T945f9(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuta4gb_error */
extern void T58f479(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta4gb */
extern T0* T843c1154(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuta4g_error */
extern T1 T58f133(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta4gb_error */
extern void T41f479(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuta4g_error */
extern T1 T41f133(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_controlled */
extern T1 T246f43(TC* ac, T0* C);
extern T1 T246f43ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_controlled */
extern T1 T1563f38(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_controlled */
extern T1 T948f39(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_controlled */
extern T1 T1585f81(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_controlled */
extern T1 T1587f79(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_controlled */
extern T1 T1586f82(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_controlled */
extern T1 T493f4(TC* ac, T0* C);
/* ET_LIKE_N.is_controlled */
extern T1 T1535f29(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_controlled */
extern T1 T247f73(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_controlled */
extern T1 T259f107(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_controlled */
extern T1 T77f99(TC* ac, T0* C);
/* ET_CLASS.is_controlled */
extern T1 T79f253(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_separate */
extern T1 T246f42(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_separate_with_type_mark */
extern T1 T246f32(TC* ac, T0* C, T0* a1);
extern T1 T246f32ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_separate_with_type_mark */
extern T1 T1563f25(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f25ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_separate */
extern T1 T1563f36(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_separate */
extern T1 T948f37(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_type_separate_with_type_mark */
extern T1 T948f23(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f23ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_separate_with_type_mark */
extern T1 T1585f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_separate_with_type_mark */
extern T1 T1587f34(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f34ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_separate_with_type_mark */
extern T1 T1586f29(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f29ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_separate_with_type_mark */
extern T1 T493f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_separate_with_type_mark */
extern T1 T259f41(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_separate_with_type_mark */
extern T1 T79f118(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_separate_with_type_mark */
extern T1 T77f41(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_separate_with_type_mark */
extern T1 T1535f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_separate_with_type_mark */
extern T1 T247f36(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f36ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T58f478(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T843c1153(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T58f132(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta2b_error */
extern void T41f478(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T41f132(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T246f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_tuple_label_parenthesis_call_validity */
extern void T76f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f233ot1(TC* ac, T0* a1);
extern T1 T76f233ot2(TC* ac, T0* a1);
extern T1 T76f233ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T76f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T76f356ot1(TC* ac, T0* a1);
extern T1 T76f356ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T76f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f355ot1(TC* ac, T0* a1);
extern T1 T76f355ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T58f406(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T843c1081(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T1022f22(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T1022f7(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T1022f9(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T58f104(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T41f406(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T41f104(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T76f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T76f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T496f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.put_procedure_call */
extern void T327f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].force */
extern void T649f43(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_put */
extern void T649f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_put */
extern void T649f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_put */
extern void T649f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_item */
extern T6 T649f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_item */
extern T6 T649f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].hash_position */
extern T6 T649f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].resize */
extern void T649f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_resize */
extern void T649f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].special_integer_ */
extern T0* T649f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_resize */
extern void T649f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_resize */
extern void T649f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].aliased_resized_area */
extern T0* T1472f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].aliased_resized_area */
extern T0* T1467f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_item */
extern T0* T649f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_resize */
extern void T649f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_modulus */
extern T6 T649f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_capacity */
extern T6 T649f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_put */
extern void T649f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].force */
extern void T1472f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].fill_with */
extern void T1467f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].extend */
extern void T1467f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].search_position */
extern void T649f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].unset_found_item */
extern void T649f41(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.put_procedure_call */
extern void T241f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T337f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T495f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T323f87(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T338f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_procedure_call */
extern void T228f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T337c13(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PARENTHESIS_INSTRUCTION.target */
extern T0* T2020f1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.target */
extern T0* T295f1(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T1588f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T76f351(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T76f384(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T76f387(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T76f387ot1(TC* ac, T0* a1);
extern T1 T76f387ot2(TC* ac, T0* a1);
extern T1 T76f387ot3(TC* ac, T0* a1);
extern T1 T76f387ot4(TC* ac, T0* a1);
extern T1 T76f387ot5(TC* ac, T0* a1);
extern T1 T76f387ot6(TC* ac, T0* a1);
extern T1 T76f387ot7(TC* ac, T0* a1);
extern T1 T76f387ot8(TC* ac, T0* a1);
extern T1 T76f387ot9(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar4ga_error */
extern void T58f528(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar4ga */
extern T0* T843c1203(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4g_error */
extern T1 T58f150(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4ga_error */
extern void T41f528(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vuar4g_error */
extern T1 T41f150(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_nested_non_separate_reference_attributes */
extern T1 T1563f55(TC* ac, T0* C, T0* a1);
extern T1 T1563f55ot1(TC* ac, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.has_nested_non_separate_reference_attributes */
extern T1 T1910f9(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_nested_non_separate_reference_attributes */
extern T1 T1729f12(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T1587f77(TC* ac, T0* C, T0* a1);
extern T1 T1587f77ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T1586f80(TC* ac, T0* C, T0* a1);
extern T1 T1586f80ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.has_nested_non_separate_reference_attributes */
extern T1 T1585f79(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_nested_non_separate_reference_attributes */
extern T1 T493f74(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_has_nested_non_separate_reference_attributes */
extern T1 T259f112(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_has_nested_non_separate_reference_attributes */
extern T1 T77f129(TC* ac, T0* C);
/* ET_CLASS.context_has_nested_non_separate_reference_attributes */
extern T1 T79f256(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.has_nested_non_separate_reference_attributes */
extern T1 T246f54(TC* ac, T0* C);
extern T1 T246f54ot1(TC* ac, T0* a1);
/* ET_LIKE_N.has_nested_non_separate_reference_attributes */
extern T1 T1535f35(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.has_nested_non_separate_reference_attributes */
extern T1 T948f57(TC* ac, T0* C, T0* a1);
extern T1 T948f57ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T247f61(TC* ac, T0* C, T0* a1);
extern T1 T247f61ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T259f93(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_non_separate_reference_attributes */
extern T1 T259f109(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_separate */
extern T1 T1585f9(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_separate */
extern T1 T259f43(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_separate */
extern T1 T247f23(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_separate */
extern T1 T77f43(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_separate */
extern T1 T1587f23(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_separate */
extern T1 T1586f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_separate */
extern T1 T493f76(TC* ac, T0* C, T0* a1);
/* ET_CLASS.has_nested_non_separate_reference_attributes */
extern T1 T79f225(TC* ac, T0* C, T0* a1);
/* ET_CLASS.has_non_separate_reference_attributes */
extern T1 T79f248(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T77f97(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_non_separate_reference_attributes */
extern T1 T77f119(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T246f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar3ga_error */
extern void T58f527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar3ga */
extern T0* T843c1202(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vuar3g_error */
extern T1 T58f149(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar3ga_error */
extern void T41f527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vuar3g_error */
extern T1 T41f149(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T246f41(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T246f31(TC* ac, T0* C, T0* a1);
extern T1 T246f31ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1563f24(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f24ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T948f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f22ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T1585f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T1587f33(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f33ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T1586f28(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f28ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T493f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T259f40(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T79f117(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T77f40(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T1535f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T247f35(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f35ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T58f526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T843c1201(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T58f148(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T41f526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T41f148(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T58f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T843c1200(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T41f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T58f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T843c1199(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T58f147(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T41f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T41f147(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_converted_target_infix_expression_validity */
extern void T76f472(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_INFIX_EXPRESSION.set_left */
extern void T1603f36(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T246f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T2048c20(TC* ac, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_right */
extern void T1603f35(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put */
extern void T2021f19(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T294f25(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T76f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T76f571(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T2100c21(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T76f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f454ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.separate_type */
extern T0* T68f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.detachable_separate_type */
extern T0* T68f80(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.separate_type_modifier */
extern T0* T78f27(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.separate_type */
extern T0* T496f7(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.separate_type */
extern T0* T495f7(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.separate_type */
extern T0* T323f7(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.separate_type */
extern T0* T338f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.separate_type */
extern T0* T228f7(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.attached_separate_type */
extern T0* T68f62(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attached_separate_type_modifier */
extern T0* T78f26(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.attached_separate_type */
extern T0* T496f8(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attached_separate_type */
extern T0* T495f8(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attached_separate_type */
extern T0* T338f8(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attached_separate_type */
extern T0* T323f8(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attached_separate_type */
extern T0* T228f8(TC* ac, T0* C);
/* ET_AST_FACTORY.new_convert_to_expression */
extern T0* T510f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T2102c26(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T2102f22(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T2101f22(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T2100f18(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T2048f11(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.position */
extern T0* T361f8(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.position */
extern T0* T1612f8(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.position */
extern T0* T1327f16(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.position */
extern T0* T1075f19(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T1611f6(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.position */
extern T0* T791f10(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_null_position */
extern T1 T1040f32(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T1022f21(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.is_null_position */
extern T1 T1019f12(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T1048f6(TC* ac, T0* C);
/* ET_VOID.is_null_position */
extern T1 T1064f7(TC* ac, T0* C);
/* ET_RESULT.is_null_position */
extern T1 T266f12(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.position */
extern T0* T1610f11(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T1599f8(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T686f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T1618f38(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T1019f9(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T1617f44(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T1616f17(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T1615f20(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T1614f22(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T1613f40(TC* ac, T0* C);
/* ET_CALL_AGENT.position */
extern T0* T1108f12(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T1619f5(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1868f3(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1618f35(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1618f41(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1617f41(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1617f47(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1616f37(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1616f43(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1615f36(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1615f42(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1614f42(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1614f48(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1613f38(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1613f44(TC* ac, T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T1108f27(TC* ac, T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T188f108(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T1343f13(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.item */
extern T0* T1343f8(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T1343f7(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T305f16(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T305f17(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T1277f13(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T1277f13p1(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.item */
extern T0* T1277f8(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T1277f7(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T1305f6(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T1105f7(TC* ac, T0* C);
/* ET_OBJECT_TEST.position */
extern T0* T332f13(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T1609f6(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T1608f7(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T1607f6(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T1606f7(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T676f7(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T1603f7(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T1602f8(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T1601f8(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T1600f8(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T1598f11(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T1340f10(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.position */
extern T0* T1250f7(TC* ac, T0* C);
/* ET_KEYWORD_EXPRESSION.position */
extern T0* T1834f3(TC* ac, T0* C);
/* ET_IF_EXPRESSION.position */
extern T0* T1234f12(TC* ac, T0* C);
/* ET_RESULT.position */
extern T0* T266f9(TC* ac, T0* C);
/* ET_VOID.position */
extern T0* T1064f11(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T298f10(TC* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T1571f7(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_to */
extern T1 T1570f6(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T484f5(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T76f554(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.separate_target */
extern T0* T2101f21(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.tokens */
extern T0* T2101f25(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.separate_target */
extern T0* T347f9(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T347f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T76f473(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T327f59(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T241f55(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_separate_creation */
extern void T327f61(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.has_separate_argument */
extern T1 T327f34(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T1577f37(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T524f40(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T1576f38(TC* ac, T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T518f43(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.set_separate_creation */
extern void T241f61(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.has_separate_argument */
extern T1 T241f32(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T496f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T495f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T323f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T338f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_procedure */
extern T0* T228f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_vape_validity */
extern void T76f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape2a_error */
extern void T58f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape2a */
extern T0* T843c1226(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape2_error */
extern T1 T58f163(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape2a_error */
extern void T41f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape2_error */
extern T1 T41f163(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T1577f74(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T258f77(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T1576f67(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T1574f68(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T1573f72(TC* ac, T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T522f70(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T394f70(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T392f69(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T382f70(TC* ac, T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T383f64(TC* ac, T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T518f65(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T524f63(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_non_descendant_caller_clients_to */
extern void T76f475(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENT_LIST.force_first */
extern void T427f17(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.resize */
extern void T427f18(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T818f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T817f4(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.new_capacity */
extern T6 T427f10(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.capacity */
extern T6 T427f9(TC* ac, T0* C);
/* ET_CLIENTS.is_none_or_unknown */
extern T1 T1132f7(TC* ac, T0* C);
/* ET_CLIENT_LIST.is_none_or_unknown */
extern T1 T427f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.add_creation_clients_to */
extern void T1577f124(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.add_creation_clients_to */
extern void T1174f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.add_creation_clients_to */
extern void T1171f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENT_LIST.append_first */
extern void T427f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.any_clients */
extern T0* T191f24(TC* ac, T0* C);
/* ET_SYSTEM.any_clients */
extern T0* T45f36(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_clients */
extern T0* T63f27(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.add_creation_clients_to */
extern void T524f114(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.add_creation_clients_to */
extern void T1576f120(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.add_creation_clients_to */
extern void T518f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENT_LIST.wipe_out */
extern void T427f16(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].keep_head */
extern void T818f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].keep_head */
extern void T817f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].set_count */
extern void T817f10(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_feature */
extern T1 T1577f73(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_feature */
extern T1 T258f76(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_feature */
extern T1 T1576f66(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_feature */
extern T1 T1574f67(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_feature */
extern T1 T1573f71(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_feature */
extern T1 T522f69(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_feature */
extern T1 T394f69(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_feature */
extern T1 T392f68(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_feature */
extern T1 T382f69(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_feature */
extern T1 T383f63(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_feature */
extern T1 T518f64(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_feature */
extern T1 T524f62(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T58f549(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T843c1224(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T41f549(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONVERT_PROCEDURE.name */
extern T0* T1571f1(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.name */
extern T0* T1570f1(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.name */
extern T0* T484f1(TC* ac, T0* C);
/* ET_AST_FACTORY.new_convert_from_expression */
extern T0* T510f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T2101c28(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_PROCEDURE.is_convert_from */
extern T1 T1571f8(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T1570f7(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T484f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2102f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2101f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2100f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2048f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_INLINED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T361f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T188f106(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1551f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.real_64_convert_feature */
extern T0* T191f75(TC* ac, T0* C);
/* ET_SYSTEM.real_64_convert_feature */
extern T0* T45f81(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_64_convert_feature */
extern T0* T63f78(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_32_convert_feature */
extern T0* T191f73(TC* ac, T0* C);
/* ET_SYSTEM.real_32_convert_feature */
extern T0* T45f79(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_32_convert_feature */
extern T0* T63f76(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_64_convert_feature */
extern T0* T191f65(TC* ac, T0* C);
/* ET_SYSTEM.natural_64_convert_feature */
extern T0* T45f72(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_64_convert_feature */
extern T0* T63f68(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1551f24(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T1551f38(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T1061f110(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_32_convert_feature */
extern T0* T191f63(TC* ac, T0* C);
/* ET_SYSTEM.natural_32_convert_feature */
extern T0* T45f70(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_32_convert_feature */
extern T0* T63f66(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1551f23(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_16_convert_feature */
extern T0* T191f61(TC* ac, T0* C);
/* ET_SYSTEM.natural_16_convert_feature */
extern T0* T45f68(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_16_convert_feature */
extern T0* T63f64(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1551f22(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_8_convert_feature */
extern T0* T191f59(TC* ac, T0* C);
/* ET_SYSTEM.natural_8_convert_feature */
extern T0* T45f66(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_8_convert_feature */
extern T0* T63f62(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1551f21(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_64_convert_feature */
extern T0* T191f54(TC* ac, T0* C);
/* ET_SYSTEM.integer_64_convert_feature */
extern T0* T45f61(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_64_convert_feature */
extern T0* T63f57(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1551f20(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1551f37(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_32_convert_feature */
extern T0* T191f52(TC* ac, T0* C);
/* ET_SYSTEM.integer_32_convert_feature */
extern T0* T45f59(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_32_convert_feature */
extern T0* T63f55(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1551f19(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1551f36(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_16_convert_feature */
extern T0* T191f50(TC* ac, T0* C);
/* ET_SYSTEM.integer_16_convert_feature */
extern T0* T45f57(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_16_convert_feature */
extern T0* T63f53(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1551f18(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1551f35(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_8_convert_feature */
extern T0* T191f48(TC* ac, T0* C);
/* ET_SYSTEM.integer_8_convert_feature */
extern T0* T45f55(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_8_convert_feature */
extern T0* T63f51(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1551f17(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1551f34(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1550f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1550f24(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T1550f34(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1550f23(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1550f22(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1550f21(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1550f20(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1550f38(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1550f19(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1550f37(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1550f18(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1550f36(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1550f17(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1550f35(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1549f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1549f24(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T1549f38(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1549f23(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1549f22(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1549f21(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1549f20(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1549f37(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1549f19(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1549f36(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1549f18(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1549f35(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1549f17(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1549f34(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1548f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1548f24(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T1548f34(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1548f23(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1548f22(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1548f21(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1548f20(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1548f38(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1548f19(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1548f37(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1548f18(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1548f36(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1548f17(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1548f35(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T395f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T395f31(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T395f47(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T395f30(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T395f29(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T395f28(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T395f27(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T395f44(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T395f26(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T395f23(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T395f25(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T395f43(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T395f24(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T395f42(TC* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T1547f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.string_32_convert_feature */
extern T0* T191f86(TC* ac, T0* C);
/* ET_SYSTEM.string_32_convert_feature */
extern T0* T45f92(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_32_convert_feature */
extern T0* T63f89(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_string_32 */
extern T1 T1547f19(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_invalid_code */
extern T1 T1547f25(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_32_type */
extern T0* T191f85(TC* ac, T0* C);
/* ET_SYSTEM.string_32_type */
extern T0* T45f91(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_32_type */
extern T0* T63f88(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_8_convert_feature */
extern T0* T191f84(TC* ac, T0* C);
/* ET_SYSTEM.string_8_convert_feature */
extern T0* T45f90(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_8_convert_feature */
extern T0* T63f87(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_string_8 */
extern T1 T1547f18(TC* ac, T0* C);
/* ET_VERBATIM_STRING.tokens */
extern T0* T1547f45(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1546f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.is_string_32 */
extern T1 T1546f19(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_string_8 */
extern T1 T1546f18(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T1546f41(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1544f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.character_32_convert_feature */
extern T0* T191f38(TC* ac, T0* C);
/* ET_SYSTEM.character_32_convert_feature */
extern T0* T45f46(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_32_convert_feature */
extern T0* T63f41(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_32 */
extern T1 T1544f17(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_8_convert_feature */
extern T0* T191f36(TC* ac, T0* C);
/* ET_SYSTEM.character_8_convert_feature */
extern T0* T45f45(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_8_convert_feature */
extern T0* T63f39(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_8 */
extern T1 T1544f16(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.manifest_constant_convert_feature */
extern T0* T1612f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUANTIFIER_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1327f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1075f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1611f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T791f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1610f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T1599f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T686f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1618f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1617f45(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1616f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1615f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1614f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1613f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T1108f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1343f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T305f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T1277f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1305f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1105f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T332f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1609f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1608f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T1607f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1606f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T676f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1603f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T1602f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1601f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1600f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1598f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1340f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INSPECT_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1250f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1234f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T347f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1558f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.is_character_32 */
extern T1 T1558f24(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_invalid_code */
extern T1 T1558f29(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_character_8 */
extern T1 T1558f23(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1557f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.is_character_32 */
extern T1 T1557f24(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_invalid_code */
extern T1 T1557f29(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_character_8 */
extern T1 T1557f23(TC* ac, T0* C);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T293f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T266f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1556f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T1064f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1555f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1553f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1552f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1545f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.is_string_32 */
extern T1 T1545f25(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_invalid_code */
extern T1 T1545f30(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_string_8 */
extern T1 T1545f24(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T1545f40(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T298f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T76f91(TC* ac, T0* C);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T407f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T77f94(TC* ac, T0* C);
/* ET_CLASS.convert_from_feature */
extern T0* T79f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T992f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern T0* T78f1555(TC* ac, T0* C);
/* ET_CLASS.context_is_type_separate */
extern T1 T79f227(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_is_type_separate */
extern T1 T77f98(TC* ac, T0* C);
/* ET_CLASS.convert_to_feature */
extern T0* T79f226(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T246f38(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T246f45(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_argument_validity */
extern void T76f471(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T76f471ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T76f121(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].force_last */
extern void T424f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].force */
extern void T807f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].fill_with */
extern void T806f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].extend */
extern void T806f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].resize */
extern void T424f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T807f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T806f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T424f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].extendible */
extern T1 T424f8(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T416f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].keep_first */
extern void T794f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].keep_head */
extern void T792f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].set_count */
extern void T792f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T794f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1492f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_after */
extern void T1492f6(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T423f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T417f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_KEYWORD.is_infix_or_else_symbol */
extern T1 T1022f18(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_or_else */
extern T1 T1022f17(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T423f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.copy_scope */
extern void T422f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].append_last */
extern void T290f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].extend_last */
extern void T290f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].forth */
extern void T711f14(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_forth */
extern void T290f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].add_traversing_cursor */
extern void T290f81(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_next_cursor */
extern void T711f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_position */
extern void T711f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_traversing_cursor */
extern void T290f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_after */
extern void T711f10(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T290f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].put_last */
extern void T290f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T290f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T290f55(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T290f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].compress */
extern void T290f82(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T290f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_wipe_out */
extern void T290f75(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_wipe_out */
extern void T290f74(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_keep_head */
extern void T290f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_keep_head */
extern void T290f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].move_all_cursors */
extern void T290f83(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_put */
extern void T290f66(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T290f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T290f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T290f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T290f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T290f32(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T290f51(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].item */
extern T6 T711f4(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_item */
extern T6 T290f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].after */
extern T1 T711f7(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].start */
extern void T711f13(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_start */
extern void T290f77(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].cursor_off */
extern T1 T290f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].off */
extern T1 T711f8(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_empty */
extern T1 T290f36(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T290f20(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T711c9(TC* ac, T0* a1);
/* DS_HASH_SET [INTEGER_32].resize */
extern void T290f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_resize */
extern void T290f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T290f27(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_resize */
extern void T290f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_resize */
extern void T290f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_resize */
extern void T290f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T290f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_capacity */
extern T6 T290f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].extendible */
extern T1 T290f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].wipe_out */
extern void T290f67(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_wipe_out */
extern void T290f73(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].item_storage_wipe_out */
extern void T290f72(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors_after */
extern void T290f71(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T76f97(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].remove_last */
extern void T424f13(TC* ac, T0* C);
/* SPECIAL [ET_ATTACHMENT_SCOPE].keep_head */
extern void T806f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].set_count */
extern void T806f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T424f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T808f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_after */
extern void T808f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].last */
extern T0* T424f6(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.make */
extern T0* T422c11(TC* ac);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T290c43(TC* ac, T6 a1);
/* DS_HASH_SET [INTEGER_32].set_internal_cursor */
extern void T290f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T290f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T290f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T290f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T290f47(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T424f10(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T417f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.count */
extern T6 T416f3(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_implies_symbol */
extern T1 T1022f16(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_implies */
extern T1 T1022f15(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_and_then_symbol */
extern T1 T1022f14(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_and_then */
extern T1 T1022f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T58f523(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T843c1198(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T41f523(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T58f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T843c1197(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T41f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T58f521(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T843c1196(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T41f521(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INFIX_OR_ELSE_OPERATOR.precursor_keyword */
extern T0* T1605f19(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.precursor_keyword */
extern T0* T1604f19(TC* ac, T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T1040f27(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T1048f28(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T1061f102(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T2031f16(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T656f102(TC* ac, T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T188f69(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T1022f12(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_precursor */
extern T1 T1605f18(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_precursor */
extern T1 T1604f18(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T1040f26(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T1048f27(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T1061f101(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T2031f15(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T656f101(TC* ac, T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T188f68(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T1022f11(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.set_arguments */
extern void T2020f9(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.set_arguments */
extern void T1340f40(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_arguments */
extern void T1598f37(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T686f37(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_EXPRESSION.set_arguments */
extern void T945f13(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.set_arguments */
extern void T1105f33(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T298f33(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T295f18(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T1819f18(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.set_arguments */
extern void T1597f22(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_arguments */
extern void T1595f22(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make */
extern T0* T2021c17(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_MANIFEST_TUPLE.make */
extern T0* T305c40(TC* ac);
/* ET_MANIFEST_TUPLE.make */
extern void T305f40p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T718f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].make_empty */
extern T0* T716c5(TC* ac, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T305f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T718c3(TC* ac);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T305f8(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.put_first */
extern void T305f33(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].force */
extern void T718f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].fill_with */
extern void T716f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].extend */
extern void T716f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T305c31(TC* ac, T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T305f31p1(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put_first */
extern void T2021f22(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T2021f16(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T2021f21(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T2021f21p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern T0* T78f220(TC* ac, T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T655c95(TC* ac);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern T0* T78f219(TC* ac, T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T655c94(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T2021f15(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tuple_argument_position */
extern T6 T76f96(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T2048f17(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_empty_actual_argument */
extern T1 T361f18(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T2102f17(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T2101f18(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T2100f16(TC* ac, T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T188f75(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1551f12(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1550f12(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1549f12(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1548f12(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T395f20(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T1547f14(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1546f14(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1544f12(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_empty_actual_argument */
extern T1 T1612f15(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_empty_actual_argument */
extern T1 T1327f26(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T1075f30(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1611f16(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T791f19(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1610f22(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T1599f15(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T686f16(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1618f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1617f32(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1616f30(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1615f28(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1614f33(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1613f31(TC* ac, T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T1108f20(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T1343f21(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T305f22(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T1277f22(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T1305f16(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T1105f17(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T332f17(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T1609f15(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1608f17(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T1607f16(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T1606f15(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T676f15(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1603f17(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T1602f15(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T1601f15(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T1600f15(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T1598f19(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T1340f19(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T298f19(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_empty_actual_argument */
extern T1 T1250f17(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_empty_actual_argument */
extern T1 T1234f21(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T347f25(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1558f25(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1557f25(TC* ac, T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T293f23(TC* ac, T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T266f24(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T1556f24(TC* ac, T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T1064f23(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T1555f24(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1553f25(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1552f25(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1545f26(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T2021f8(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T294f11(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T2101f20(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.arguments */
extern T0* T347f23(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T1593f13(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T1592f13(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.arguments */
extern T0* T1340f5(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.arguments */
extern T0* T1598f5(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments */
extern T0* T686f3(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.arguments */
extern T0* T1819f1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.arguments */
extern T0* T1597f4(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.arguments */
extern T0* T1595f2(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.name */
extern T0* T2101f1(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.name */
extern T0* T347f12(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.column */
extern T6 T2118f3(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.line */
extern T6 T2118f2(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T347f10(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.last_position */
extern T0* T2118f4(TC* ac, T0* C);
/* ET_CURRENT.last_position */
extern T0* T293f25(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T197c11(TC* ac, T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T197f13(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL.last_position */
extern T0* T655f5(TC* ac, T0* C);
/* ET_SYMBOL.text */
extern T0* T655f4(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.xor_symbol_name */
extern T0* T78f316(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.there_exists_symbol_name */
extern T0* T78f313(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.or_else_symbol_name */
extern T0* T78f304(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.or_symbol_name */
extern T0* T78f303(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.open_repeat_symbol_name */
extern T0* T78f302(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.not_symbol_name */
extern T0* T78f299(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implies_symbol_name */
extern T0* T78f290(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.for_all_symbol_name */
extern T0* T78f287(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.close_repeat_symbol_name */
extern T0* T78f278(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bar_symbol_name */
extern T0* T78f277(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.and_then_symbol_name */
extern T0* T78f271(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.and_symbol_name */
extern T0* T78f270(TC* ac, T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T188f50(TC* ac, T0* C);
/* ET_KEYWORD.last_position */
extern T0* T438f10(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T347f11(TC* ac, T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T1585f38(TC* ac, T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T188f47(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T247f39(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T1587f44(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T1586f38(TC* ac, T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T493f37(TC* ac, T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T259f28(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T2015f5(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_leaf */
extern T0* T78f1562(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.make */
extern T0* T2118c5(TC* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T1563f81(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.last_leaf */
extern T0* T1354f10(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.last_leaf */
extern T0* T1564f7(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.last_leaf */
extern T0* T1151f11(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.renames */
extern T0* T1563f83(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T1148f11(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T948f83(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T1832f10(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T1583f10(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T245f12(TC* ac, T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T77f28(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T494f6(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T2014f5(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T636f15(TC* ac, T0* C);
/* ET_CLASS.last_leaf */
extern T0* T79f69(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T348f3(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T294f10(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T348f4(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.name */
extern T0* T1593f19(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T1593f20(TC* ac, T0* C);
/* ET_RESULT.last_position */
extern T0* T266f34(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T1593f21(TC* ac, T0* C);
/* ET_RESULT.last_leaf */
extern T0* T266f33(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T1593f15(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.name */
extern T0* T1592f18(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T1592f19(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T1592f20(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T1592f14(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T1340f12(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.precursor_keyword */
extern T0* T1598f4(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.name */
extern T0* T686f2(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.name */
extern T0* T1819f2(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T1597f13(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.precursor_keyword */
extern T0* T1595f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T76f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape1b_error */
extern void T58f520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape1b */
extern T0* T843c1195(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape1_error */
extern T1 T58f146(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape1b_error */
extern void T41f520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape1_error */
extern T1 T41f146(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T58f476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T843c1151(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T41f476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T1577f85(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T524f76(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T1576f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T518f77(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T258f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T1574f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T1573f73(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T522f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T394f72(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T392f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T382f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T383f66(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuta4ga_error */
extern void T58f475(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta4ga */
extern T0* T843c1150(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuta4ga_error */
extern void T41f475(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T58f474(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T843c1149(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuta2a_error */
extern void T41f474(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T298f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_EXPRESSION.make */
extern T0* T945c11(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T295f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.make */
extern T0* T2020c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T298c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T298f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T76f352(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_SYMBOL.set_position */
extern void T2031f51(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_PARENTHESIS_SYMBOL.make */
extern T0* T2031c49(TC* ac);
/* ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T2031f52(TC* ac, T0* C);
/* ET_IDENTIFIER.set_tuple_label */
extern void T188f133(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T58f443(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T843c1118(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T58f118(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T41f443(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T41f118(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T76f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T76f455(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f455ot1(TC* ac, T0* a1);
extern T1 T76f455ot2(TC* ac, T0* a1);
extern T1 T76f455ot3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.controlled_type_modifier */
extern T0* T78f804(TC* ac, T0* C);
/* ET_LIKE_CURRENT.set_controlled */
extern void T493f97(TC* ac, T0* C, T1 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_separate */
extern T1 T1563f49(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_separate */
extern T1 T948f51(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_separate */
extern T1 T79f143(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.convert_feature */
extern T0* T2102f4(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.convert_feature */
extern T0* T2101f5(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.convert_feature */
extern T0* T2100f3(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T686f17(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T2102f24(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T1608f18(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.parenthesis_call */
extern T0* T1603f18(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.parenthesis_call */
extern T0* T945f8(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T1105f18(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.parenthesis_call */
extern T0* T298f5(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T76f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T76f232ot1(TC* ac, T0* a1);
extern T1 T76f232ot2(TC* ac, T0* a1);
extern T1 T76f232ot3(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.parenthesis_call */
extern T0* T686f4(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.parenthesis_call */
extern T0* T1819f3(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.parenthesis_call */
extern T0* T295f4(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T76f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_attribute */
extern T1 T422f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T290f25(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_stable_attribute */
extern T1 T258f75(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_stable_attribute */
extern T1 T1574f66(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_stable_attribute */
extern T1 T1573f70(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_stable_attribute */
extern T1 T522f68(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_stable_attribute */
extern T1 T394f68(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_stable_attribute */
extern T1 T392f67(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_stable_attribute */
extern T1 T382f68(TC* ac, T0* C);
/* ET_NOTE_LIST.has_tagged_note_term_value */
extern T1 T1288f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NOTE_TERM_LIST.has_note_term_value */
extern T1 T1299f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.has_note_term_value */
extern T1 T188f119(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.has_note_term_value */
extern T1 T1551f59(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_plus */
extern T1 T1061f131(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.string_ */
extern T0* T1551f62(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_note_term_value */
extern T1 T1550f59(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.string_ */
extern T0* T1550f62(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_note_term_value */
extern T1 T1549f59(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.string_ */
extern T0* T1549f62(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_note_term_value */
extern T1 T1548f59(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.string_ */
extern T0* T1548f62(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_note_term_value */
extern T1 T395f59(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.string_ */
extern T0* T395f62(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_note_term_value */
extern T1 T1547f46(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.string_ */
extern T0* T1547f49(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_note_term_value */
extern T1 T1546f42(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.string_ */
extern T0* T1546f45(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T1544f44(TC* ac, T0* C, T0* a1);
/* CHARACTER_32.as_lower */
extern T3 T3f16(TC* ac, volatile T3* C);
/* ET_CUSTOM_ATTRIBUTE.has_note_term_value */
extern T1 T1562f5(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T1558f44(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T1557f43(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.has_note_term_value */
extern T1 T1556f35(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.string_ */
extern T0* T1556f38(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_note_term_value */
extern T1 T1555f35(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.string_ */
extern T0* T1555f38(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_note_term_value */
extern T1 T1553f37(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.string_ */
extern T0* T1553f40(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_note_term_value */
extern T1 T1552f37(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.string_ */
extern T0* T1552f40(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_note_term_value */
extern T1 T1545f41(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.string_ */
extern T0* T1545f44(TC* ac, T0* C);
/* ET_NOTE_LIST.string_ */
extern T0* T1288f8(TC* ac, T0* C);
/* ET_NOTE.note_clause */
extern T0* T1561f2(TC* ac, T0* C);
/* ET_TAGGED_NOTE.note_clause */
extern T0* T1560f3(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_stable_attribute */
extern T1 T383f62(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T76f456(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f456ot1(TC* ac, T0* a1);
extern T1 T76f456ot2(TC* ac, T0* a1);
extern T1 T76f456ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T76f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T76f478(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T76f400(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape1a_error */
extern void T58f519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape1a */
extern T0* T843c1194(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape1a_error */
extern void T41f519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vucr0d_error */
extern void T58f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0d */
extern T0* T843c1152(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vucr_error */
extern T1 T58f92(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vucr0d_error */
extern void T41f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vucr_error */
extern T1 T41f92(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T258f64(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_implicitly_static */
extern T1 T258f51(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T258f67(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T1577f51(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T524f73(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T1576f76(TC* ac, T0* C);
/* ET_DO_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T518f74(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T1574f76(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T1573f79(TC* ac, T0* C);
/* ET_DO_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T522f77(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T394f61(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T392f59(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T382f77(TC* ac, T0* C);
/* ET_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T383f72(TC* ac, T0* C);
/* ET_POSTCONDITIONS.is_instance_free */
extern T1 T1317f12(TC* ac, T0* C);
/* ET_IDENTIFIER.is_instance_free */
extern T1 T188f101(TC* ac, T0* C);
/* ET_IDENTIFIER.is_feature_name */
extern T1 T188f78(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_instance_free */
extern T1 T395f35(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_instance_free */
extern T1 T1075f33(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.is_instance_free */
extern T1 T1274f12(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T1274f6(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.assertion */
extern T0* T188f100(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T1551f28(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T1550f28(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T1549f28(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T1548f28(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T395f34(TC* ac, T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T1547f20(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T1546f20(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T1544f18(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.assertion */
extern T0* T1612f17(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.assertion */
extern T0* T1327f31(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.assertion */
extern T0* T1075f32(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T1611f19(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.assertion */
extern T0* T791f21(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.assertion */
extern T0* T1610f24(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T1599f17(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T686f20(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T1623f3(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1618f31(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1617f36(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1616f33(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1615f32(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1614f37(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1613f34(TC* ac, T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T1108f23(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T1343f24(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T305f24(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T1277f24(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T1305f19(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T1105f21(TC* ac, T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T332f19(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T1609f17(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T1608f22(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T1607f18(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T1606f18(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T676f17(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T1603f22(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T1602f17(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T1601f17(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T1600f17(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T1598f21(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T1340f21(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T298f22(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.assertion */
extern T0* T1250f19(TC* ac, T0* C);
/* ET_IF_EXPRESSION.assertion */
extern T0* T1234f23(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T347f28(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.assertion */
extern T0* T1582f3(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T1558f27(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T1557f27(TC* ac, T0* C);
/* ET_CURRENT.assertion */
extern T0* T293f27(TC* ac, T0* C);
/* ET_RESULT.assertion */
extern T0* T266f27(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T1556f26(TC* ac, T0* C);
/* ET_VOID.assertion */
extern T0* T1064f25(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T1555f26(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T1553f27(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T1552f27(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T1545f28(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.item */
extern T0* T1274f11(TC* ac, T0* C, T6 a1);
/* ET_KEYWORD_EXPRESSION.expression */
extern T0* T1834f1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.iteration_expression */
extern T0* T1075f25(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_instance_free */
extern T1 T791f22(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T686f21(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T2021f12(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T294f18(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_instance_free */
extern T1 T2048f8(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_instance_free */
extern T1 T2102f9(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_instance_free */
extern T1 T2101f10(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_instance_free */
extern T1 T2100f8(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_instance_free */
extern T1 T361f13(TC* ac, T0* C);
/* ET_CALL_AGENT.is_instance_free */
extern T1 T1108f24(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_instance_free */
extern T1 T2045f7(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_instance_free */
extern T1 T1092f13(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_instance_free */
extern T1 T1620f13(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_instance_free */
extern T1 T1072f45(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.is_instance_free */
extern T1 T1619f11(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_instance_free */
extern T1 T1868f8(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_instance_free */
extern T1 T305f25(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_instance_free */
extern T1 T1105f22(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_instance_free */
extern T1 T332f20(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T676f18(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T298f23(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_instance_free */
extern T1 T347f29(TC* ac, T0* C);
/* ET_CURRENT.is_instance_free */
extern T1 T293f28(TC* ac, T0* C);
/* ET_RESULT.is_instance_free */
extern T1 T266f28(TC* ac, T0* C);
/* ET_VOID.is_instance_free */
extern T1 T1064f26(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1618f32(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1617f37(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1616f34(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1615f33(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1614f38(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1613f35(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_instance_free */
extern T1 T1612f18(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_instance_free */
extern T1 T1611f20(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_instance_free */
extern T1 T1610f25(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_instance_free */
extern T1 T1609f18(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_instance_free */
extern T1 T1608f23(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_instance_free */
extern T1 T1607f19(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T1606f19(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_instance_free */
extern T1 T1603f23(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_instance_free */
extern T1 T1602f18(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_instance_free */
extern T1 T1601f18(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_instance_free */
extern T1 T1600f18(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_instance_free */
extern T1 T1599f18(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_instance_free */
extern T1 T1598f22(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1558f28(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1557f28(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_instance_free */
extern T1 T1556f27(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_instance_free */
extern T1 T1555f27(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_instance_free */
extern T1 T1553f28(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_instance_free */
extern T1 T1552f28(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_instance_free */
extern T1 T1551f29(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T1550f29(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T1549f29(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_instance_free */
extern T1 T1548f29(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_instance_free */
extern T1 T1547f21(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_instance_free */
extern T1 T1546f21(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_instance_free */
extern T1 T1545f29(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1544f19(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_instance_free */
extern T1 T1343f25(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_instance_free */
extern T1 T1340f22(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_instance_free */
extern T1 T1327f33(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.variant_part */
extern T0* T1327f28(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.invariant_part */
extern T0* T1327f27(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.until_conditional */
extern T0* T1327f21(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_instance_free */
extern T1 T1277f26(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T1277f15(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.is_instance_free */
extern T1 T1305f21(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_instance_free */
extern T1 T1250f22(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.is_instance_free */
extern T1 T1368f9(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.is_instance_free */
extern T1 T1365f9(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.item */
extern T0* T1368f3(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.expression */
extern T0* T1250f20(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_instance_free */
extern T1 T1234f25(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.is_instance_free */
extern T1 T1183f9(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.is_instance_free */
extern T1 T1180f10(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.conditional_expression */
extern T0* T1180f5(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.item */
extern T0* T1183f4(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.conditional_expression */
extern T0* T1234f14(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.expression */
extern T0* T1623f4(TC* ac, T0* C);
extern T1 T1623f4ot1(TC* ac, T0* a1);
/* ET_CLASS_ASSERTION.expression */
extern T0* T1582f4(TC* ac, T0* C);
/* ET_POSTCONDITIONS.assertion */
extern T0* T1317f8(TC* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T1317f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T258f66(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T1577f50(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T524f72(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T1576f75(TC* ac, T0* C);
/* ET_DO_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T518f73(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T1574f75(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T1573f78(TC* ac, T0* C);
/* ET_DO_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T522f76(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T394f60(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T392f58(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T382f76(TC* ac, T0* C);
/* ET_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T383f71(TC* ac, T0* C);
/* ET_PRECONDITIONS.is_instance_free */
extern T1 T431f8(TC* ac, T0* C);
/* ET_PRECONDITIONS.assertion */
extern T0* T431f7(TC* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T431f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_static */
extern T1 T258f65(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.string_ */
extern T0* T258f69(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T258f64p1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_static_mark */
extern T1 T258f52(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_class_postcondition_recursive */
extern T1 T258f68(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_class_postcondition_recursive */
extern T1 T1577f52(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_class_postcondition_recursive */
extern T1 T524f33(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_class_postcondition_recursive */
extern T1 T1576f48(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_class_postcondition_recursive */
extern T1 T518f35(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_class_postcondition_recursive */
extern T1 T1574f48(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_class_postcondition_recursive */
extern T1 T1573f53(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_class_postcondition_recursive */
extern T1 T522f50(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T394f62(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T392f60(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T382f61(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T383f55(TC* ac, T0* C);
/* ET_POSTCONDITIONS.has_class_assertion */
extern T1 T1317f7(TC* ac, T0* C);
/* ET_CALL_AGENT.is_class_assertion */
extern T1 T1108f25(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_class_assertion */
extern T1 T1105f23(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_class_assertion */
extern T1 T1075f34(TC* ac, T0* C);
/* ET_VOID.is_class_assertion */
extern T1 T1064f27(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_class_assertion */
extern T1 T791f23(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T686f22(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T676f19(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_class_assertion */
extern T1 T395f36(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_class_assertion */
extern T1 T347f30(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_class_assertion */
extern T1 T332f21(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_class_assertion */
extern T1 T305f26(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T298f24(TC* ac, T0* C);
/* ET_CURRENT.is_class_assertion */
extern T1 T293f29(TC* ac, T0* C);
/* ET_RESULT.is_class_assertion */
extern T1 T266f29(TC* ac, T0* C);
/* ET_IDENTIFIER.is_class_assertion */
extern T1 T188f103(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.is_class_assertion */
extern T1 T1623f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1618f33(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1617f39(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1616f35(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1615f34(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1614f40(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1613f36(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_class_assertion */
extern T1 T1612f19(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_class_assertion */
extern T1 T1611f21(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_class_assertion */
extern T1 T1610f26(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_class_assertion */
extern T1 T1609f19(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_class_assertion */
extern T1 T1608f24(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_class_assertion */
extern T1 T1607f20(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T1606f21(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_class_assertion */
extern T1 T1603f24(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_class_assertion */
extern T1 T1602f19(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_class_assertion */
extern T1 T1601f19(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_class_assertion */
extern T1 T1600f19(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_class_assertion */
extern T1 T1599f19(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_class_assertion */
extern T1 T1598f23(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.is_class_assertion */
extern T1 T1582f5(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1558f30(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1557f30(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_class_assertion */
extern T1 T1556f28(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_class_assertion */
extern T1 T1555f28(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_class_assertion */
extern T1 T1553f29(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_class_assertion */
extern T1 T1552f29(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1551f39(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1550f39(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1549f39(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1548f39(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_class_assertion */
extern T1 T1547f26(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_class_assertion */
extern T1 T1546f26(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_class_assertion */
extern T1 T1545f31(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1544f25(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_class_assertion */
extern T1 T1343f26(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_class_assertion */
extern T1 T1340f23(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_class_assertion */
extern T1 T1327f32(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_class_assertion */
extern T1 T1277f25(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_class_assertion */
extern T1 T1305f20(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_class_assertion */
extern T1 T1250f21(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_class_assertion */
extern T1 T1234f24(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_static */
extern T1 T1574f52(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_static_mark */
extern T1 T1574f38(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_static */
extern T1 T1573f54(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_static_mark */
extern T1 T1573f42(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_static */
extern T1 T522f55(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_static_mark */
extern T1 T522f41(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T394f30(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_implicitly_static */
extern T1 T394f51(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T394f30p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_static_mark */
extern T1 T394f52(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T392f29(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_implicitly_static */
extern T1 T392f50(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T392f29p1(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_static_mark */
extern T1 T392f51(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_static */
extern T1 T382f66(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_static_mark */
extern T1 T382f53(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_static */
extern T1 T383f28(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_static_mark */
extern T1 T383f49(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T686c31(TC* ac, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T686f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1819f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T1819f12(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T1605f44(TC* ac, T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T1604f44(TC* ac, T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T1040f62(TC* ac, T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T1048f63(TC* ac, T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T1061f157(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_SYMBOL.set_seed */
extern void T2031f50(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T656f133(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T76f379(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T76f464(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T411f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].force */
extern void T773f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].fill_with */
extern void T775f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].extend */
extern void T775f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T411f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T773f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T775f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T411f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T411f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T774f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T76f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T1578f3(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_call_name */
extern T1 T188f107(TC* ac, T0* C, T0* a1);
extern T1 T188f107ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T774f38(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T770f38(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T76f453(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].force_last */
extern void T412f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].force */
extern void T777f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].fill_with */
extern void T779f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].extend */
extern void T779f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].resize */
extern void T412f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T777f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T779f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_capacity */
extern T6 T412f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].extendible */
extern T1 T412f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T778f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T778f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T778f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T778f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T2109f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T778f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T778f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T2109f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_after */
extern void T2109f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T778f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T778f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T778f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T778f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T778f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T778f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T778f9(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T246f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T76f93(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].remove_last */
extern void T412f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].keep_head */
extern void T779f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].set_count */
extern void T779f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].move_last_cursors_after */
extern void T412f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_next_cursor */
extern void T780f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_after */
extern void T780f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].last */
extern T0* T412f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T778c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].set_internal_cursor */
extern void T778f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T778f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T2109c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].is_empty */
extern T1 T412f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T774f37(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T774f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T774f40(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T1491f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T774f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T774f42(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T770f37(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T770f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T770f40(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T1490f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T770f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T770f42(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.adapted_name */
extern T0* T76f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.renames */
extern T0* T1910f2(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T774f13(TC* ac, T0* C);
/* ET_TUPLE_TYPE.add_overloaded_queries */
extern void T259f140(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.add_overloaded_queries */
extern void T1910f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.add_overloaded_queries */
extern void T77f149(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_overloaded_queries */
extern void T79f340(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T262f18(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T262f18ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_names */
extern T0* T258f89(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T258f90(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_names */
extern T0* T1574f80(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T1574f81(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_names */
extern T0* T1573f83(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T1573f84(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_alias_names */
extern T0* T522f81(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T522f82(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_names */
extern T0* T394f81(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T394f82(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_names */
extern T0* T392f80(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T392f81(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_alias_names */
extern T0* T382f82(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T382f83(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_alias_names */
extern T0* T383f77(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T383f78(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T258f88(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T1574f79(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T1573f82(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T522f80(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T394f80(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T392f79(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T382f81(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T383f76(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T76f94(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T411f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].keep_head */
extern void T775f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].set_count */
extern void T775f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T411f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T776f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_after */
extern void T776f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T411f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T774c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].set_internal_cursor */
extern void T774f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T774f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T1491c9(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T411f9(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T1603f34(TC* ac, T0* C, T1 a1);
/* ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T1608f34(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_boolean_class */
extern T1 T79f192(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T76f80(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_validity_error */
extern T1 T1577f28(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_validity_error */
extern T1 T258f30(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_validity_error */
extern T1 T1576f28(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_validity_error */
extern T1 T518f16(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_validity_error */
extern T1 T1574f27(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_validity_error */
extern T1 T1573f30(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_validity_error */
extern T1 T522f29(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_validity_error */
extern T1 T394f24(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_validity_error */
extern T1 T392f22(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_validity_error */
extern T1 T382f27(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_validity_error */
extern T1 T383f20(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_validity_error */
extern T1 T524f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_orphan_actual_arguments_validity */
extern void T76f229(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_adapted_base_classes_validity */
extern void T76f228(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_adapted_base_classes */
extern T0* T76f79(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].remove_last */
extern void T429f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].keep_head */
extern void T820f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_count */
extern void T820f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].move_last_cursors_after */
extern void T429f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_next_cursor */
extern void T821f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_after */
extern void T821f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].last */
extern T0* T429f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].make */
extern T0* T765c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].set_internal_cursor */
extern void T765f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].new_cursor */
extern T0* T765f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].make */
extern T0* T1489c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].make */
extern T0* T1486f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_CLASS].make_empty */
extern T0* T1488c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].default_create */
extern T0* T1486c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].is_empty */
extern T1 T429f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T76f82(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression */
extern T0* T2102f3(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression */
extern T0* T1608f3(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.left */
extern T0* T1603f2(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.target */
extern T0* T945f1(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.target */
extern T0* T1105f2(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.target */
extern T0* T298f1(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T403f467(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T403f470(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T403f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T403f231ot1(TC* ac, T0* a1);
extern T1 T403f231ot2(TC* ac, T0* a1);
extern T1 T403f231ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_adapted_base_classes */
extern void T403f209(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T403f273(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T403f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_tuple_label_parenthesis_call_validity */
extern void T403f208(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f208ot1(TC* ac, T0* a1);
extern T1 T403f208ot2(TC* ac, T0* a1);
extern T1 T403f208ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T403f272(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T403f272ot1(TC* ac, T0* a1);
extern T1 T403f272ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T403f271(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f271ot1(TC* ac, T0* a1);
extern T1 T403f271ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T403f206(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T403f267(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T403f266(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.reset_fatal_error */
extern void T403f337(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T403f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T403f336ot1(TC* ac, T0* a1);
extern T1 T403f336ot2(TC* ac, T0* a1);
extern T1 T403f336ot3(TC* ac, T0* a1);
extern T1 T403f336ot4(TC* ac, T0* a1);
extern T1 T403f336ot5(TC* ac, T0* a1);
extern T1 T403f336ot6(TC* ac, T0* a1);
extern T1 T403f336ot7(TC* ac, T0* a1);
extern T1 T403f336ot8(TC* ac, T0* a1);
extern T1 T403f336ot9(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_converted_target_infix_expression_validity */
extern void T403f379(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.convert_expression */
extern T0* T403f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T403f419(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T403f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T403f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_creation_vape_validity */
extern void T403f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INVARIANTS.as_feature */
extern T0* T1258f14(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.add_non_descendant_caller_clients_to */
extern void T403f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INVARIANTS.clients */
extern T0* T1258f21(TC* ac, T0* C);
/* ET_INVARIANTS.tokens */
extern T0* T1258f11(TC* ac, T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T1258f13(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.current_universe */
extern T0* T403f56(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_actual_argument_validity */
extern void T403f378(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T403f378ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_attachment_scope */
extern void T403f91(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T403f52(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.tuple_argument_position */
extern T6 T403f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T403f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T403f268(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T403f269(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T403f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T403f339ot1(TC* ac, T0* a1);
extern T1 T403f339ot2(TC* ac, T0* a1);
extern T1 T403f339ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T403f207(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T403f207ot1(TC* ac, T0* a1);
extern T1 T403f207ot2(TC* ac, T0* a1);
extern T1 T403f207ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T403f270(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T403f340(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T403f327(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T403f293(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T403f346(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T403f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_FEATURE_CHECKER.free_overloaded_features */
extern void T403f334(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T403f68(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.adapted_name */
extern T0* T403f63(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T403f69(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T403f60(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.has_validity_error */
extern T1 T1258f9(TC* ac, T0* C);
/* ET_INVARIANTS.postconditions */
extern T0* T1258f25(TC* ac, T0* C);
/* ET_INVARIANTS.preconditions */
extern T0* T1258f24(TC* ac, T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T1258f23(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_orphan_actual_arguments_validity */
extern void T403f204(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_adapted_base_classes_validity */
extern void T403f203(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.new_adapted_base_classes */
extern T0* T403f59(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T403f51(TC* ac, T0* C);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T72f1603(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T72f1606(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T72f851(TC* ac, T0* C, T0* a1);
extern T1 T72f851ot1(TC* ac, T0* a1);
extern T1 T72f851ot2(TC* ac, T0* a1);
extern T1 T72f851ot3(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_declaration */
extern void T72f818(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
extern T1 T72f818ot1(TC* ac, T0* a1);
extern T1 T72f818ot2(TC* ac, T0* a1);
extern T1 T72f818ot3(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_object_declaration */
extern void T72f855(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T72f855ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_function_name */
extern void T72f883(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_call_object_type_name */
extern void T72f882(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_call_function_declaration */
extern void T72f854(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T72f854ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_object_type_declaration */
extern void T72f853(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T72f853ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T72f852(TC* ac, T0* C, T0* a1);
extern T1 T72f852ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRECURSOR.procedure_call */
extern T0* T327f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].value */
extern T0* T649f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_item */
extern T0* T649f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].position_of_key */
extern T6 T649f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.procedure_call */
extern T0* T241f27(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T72f805(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T72f836(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T72f863(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_inlined_procedure_call */
extern void T72f862(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T72f862ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_inlining_operands */
extern void T72f909(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T72f909ot1(TC* ac, T0* a1);
extern T1 T72f909ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T72f994(TC* ac, T0* C);
extern T1 T72f994ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T72f326(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_dynamic_type_set */
extern void T361f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T284f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].aliased_resized_area */
extern T0* T702f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].aliased_resized_area */
extern T0* T701f4(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_compound */
extern void T72f908(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T72f993(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T1819f14(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1399f42(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1399f98(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T403f417(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T403f441(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T58f462(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T843c1137(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T58f127(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T41f462(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T41f127(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T58f572(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T843c1245(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T41f572(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T403f456(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T403f461(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T1577f41(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_implicitly_static */
extern T1 T1577f34(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin_static */
extern T1 T1577f49(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.string_ */
extern T0* T1577f53(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T1577f41p1(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_static_mark */
extern T1 T1577f35(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_static */
extern T1 T524f29(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_static_mark */
extern T1 T524f32(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_static */
extern T1 T1576f43(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_static_mark */
extern T1 T1576f37(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_static */
extern T1 T518f31(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_static_mark */
extern T1 T518f34(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T403f455(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T58f586(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T843c1259(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T58f180(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T41f586(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T41f180(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T58f585(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T843c1258(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T41f585(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T58f584(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T843c1257(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T41f584(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T58f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T843c1187(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T58f143(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T41f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T41f143(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T394f74(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T392f73(TC* ac, T0* C);
/* ET_ATTRIBUTE.as_invariants */
extern T0* T383f68(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T382f73(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T258f81(TC* ac, T0* C);
/* ET_INVARIANTS.as_invariants */
extern T0* T1258f20(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T1577f77(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_invariants */
extern T0* T1576f69(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T1574f72(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.as_invariants */
extern T0* T1573f75(TC* ac, T0* C);
/* ET_DO_FUNCTION.as_invariants */
extern T0* T522f73(TC* ac, T0* C);
/* ET_DO_PROCEDURE.as_invariants */
extern T0* T518f67(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T524f66(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T394f73(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T392f72(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_invariants */
extern T1 T383f67(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T382f72(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T258f80(TC* ac, T0* C);
/* ET_INVARIANTS.is_invariants */
extern T1 T1258f19(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T1577f76(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_invariants */
extern T1 T1576f68(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T1574f71(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_invariants */
extern T1 T1573f74(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_invariants */
extern T1 T522f72(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_invariants */
extern T1 T518f66(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T524f65(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T58f511(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T843c1186(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T41f511(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T58f510(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T843c1185(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T41f510(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T403f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T403f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f391ot1(TC* ac, T0* a1);
extern T1 T403f391ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T403f216(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.object_tests */
extern T0* T394f6(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.object_tests */
extern T0* T392f4(TC* ac, T0* C);
/* ET_ATTRIBUTE.object_tests */
extern T0* T383f4(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.object_tests */
extern T0* T382f4(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.object_tests */
extern T0* T258f5(TC* ac, T0* C);
/* ET_INVARIANTS.object_tests */
extern T0* T1258f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.object_tests */
extern T0* T1577f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.object_tests */
extern T0* T1576f4(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.object_tests */
extern T0* T1574f5(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.object_tests */
extern T0* T1573f5(TC* ac, T0* C);
/* ET_DO_FUNCTION.object_tests */
extern T0* T522f5(TC* ac, T0* C);
/* ET_DO_PROCEDURE.object_tests */
extern T0* T518f6(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.object_tests */
extern T0* T524f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T1618f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T1617f5(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T1616f5(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T1615f4(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T1614f7(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T1613f7(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T403f58(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_object_test_local */
extern void T403f281(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found_item */
extern T0* T415f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T415f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found */
extern T1 T415f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search */
extern void T415f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search_position */
extern void T415f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T415f32(TC* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T791f27(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.hash_code */
extern T6 T1610f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T415f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T415f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T415f34(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T58f432(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen8b */
extern T0* T843c1107(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T58f113(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen8b_error */
extern void T41f432(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T41f113(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T58f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen8a */
extern T0* T843c1106(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen8a_error */
extern void T41f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T416f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].item */
extern T0* T794f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_object_test_local */
extern T1 T188f18(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_inline_separate_argument_call_instruction_validity */
extern void T403f454(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuis0c_error */
extern void T58f583(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0c */
extern T0* T843c1256(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuis_error */
extern T1 T58f179(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuis0c_error */
extern void T41f583(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuis_error */
extern T1 T41f179(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuis0a_error */
extern void T58f582(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0a */
extern T0* T843c1255(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuis0a_error */
extern void T41f582(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuis0b_error */
extern void T58f581(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0b */
extern T0* T843c1254(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuis0b_error */
extern void T41f581(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuas0c_error */
extern void T58f515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0c */
extern T0* T843c1190(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuas_error */
extern T1 T58f144(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuas0c_error */
extern void T41f515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuas_error */
extern T1 T41f144(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuas0a_error */
extern void T58f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0a */
extern T0* T843c1189(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuas0a_error */
extern void T41f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuas0b_error */
extern void T58f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0b */
extern T0* T843c1188(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuas0b_error */
extern void T41f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_separate_argument_parenthesis_call_validity */
extern void T403f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_separate_argument_validity */
extern void T403f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.argument */
extern T0* T1543f5(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.inline_separate_arguments */
extern T0* T394f22(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.inline_separate_arguments */
extern T0* T392f20(TC* ac, T0* C);
/* ET_ATTRIBUTE.inline_separate_arguments */
extern T0* T383f18(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.inline_separate_arguments */
extern T0* T382f25(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.inline_separate_arguments */
extern T0* T258f28(TC* ac, T0* C);
/* ET_INVARIANTS.inline_separate_arguments */
extern T0* T1258f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.inline_separate_arguments */
extern T0* T1577f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.inline_separate_arguments */
extern T0* T1576f26(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.inline_separate_arguments */
extern T0* T1574f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.inline_separate_arguments */
extern T0* T1573f28(TC* ac, T0* C);
/* ET_DO_FUNCTION.inline_separate_arguments */
extern T0* T522f27(TC* ac, T0* C);
/* ET_DO_PROCEDURE.inline_separate_arguments */
extern T0* T518f21(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.inline_separate_arguments */
extern T0* T524f25(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T1618f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T1617f7(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T1616f7(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T1615f6(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T1614f9(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T1613f9(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_inline_separate_argument */
extern void T403f283(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].found_item */
extern T0* T420f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_item */
extern T0* T420f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].found */
extern T1 T420f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].search */
extern void T420f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].search_position */
extern void T420f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].hash_position */
extern T6 T420f23(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT.hash_code */
extern T6 T299f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_item */
extern T0* T420f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_item */
extern T6 T420f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_item */
extern T6 T420f25(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen10b_error */
extern void T58f436(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen10b */
extern T0* T843c1111(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen10_error */
extern T1 T58f115(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen10b_error */
extern void T41f436(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen10_error */
extern T1 T41f115(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen10a_error */
extern void T58f435(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen10a */
extern T0* T843c1110(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen10a_error */
extern void T41f435(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.inline_separate_argument */
extern T0* T421f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].item */
extern T0* T804f7(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_unqualified_iteration_item_call_instruction_validity */
extern void T403f453(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T58f580(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T843c1253(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T58f178(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T41f580(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T41f178(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T58f579(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T843c1252(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T41f579(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T58f578(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T843c1251(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T41f578(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_iteration_item_parenthesis_call_validity */
extern void T403f370(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_iteration_item_validity */
extern void T403f217(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.iteration_components */
extern T0* T394f4(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.iteration_components */
extern T0* T392f2(TC* ac, T0* C);
/* ET_ATTRIBUTE.iteration_components */
extern T0* T383f2(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.iteration_components */
extern T0* T382f2(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.iteration_components */
extern T0* T258f3(TC* ac, T0* C);
/* ET_INVARIANTS.iteration_components */
extern T0* T1258f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.iteration_components */
extern T0* T1577f2(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.iteration_components */
extern T0* T1576f2(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.iteration_components */
extern T0* T1574f3(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.iteration_components */
extern T0* T1573f3(TC* ac, T0* C);
/* ET_DO_FUNCTION.iteration_components */
extern T0* T522f3(TC* ac, T0* C);
/* ET_DO_PROCEDURE.iteration_components */
extern T0* T518f1(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.iteration_components */
extern T0* T524f2(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T1618f5(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T1617f6(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T1616f6(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T1615f5(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T1614f8(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T1613f8(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_iteration_item */
extern void T403f282(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].found_item */
extern T0* T418f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_item */
extern T0* T418f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].found */
extern T1 T418f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].search */
extern void T418f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].search_position */
extern void T418f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].hash_position */
extern T6 T418f35(TC* ac, T0* C, T0* a1);
/* ET_REPEAT_INSTRUCTION.hash_code */
extern T6 T1337f26(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T1078f25(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.hash_code */
extern T6 T1327f37(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.hash_code */
extern T6 T1075f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_item */
extern T0* T418f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_item */
extern T6 T418f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_item */
extern T6 T418f37(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T58f434(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen9b */
extern T0* T843c1109(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T58f114(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen9b_error */
extern void T41f434(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T41f114(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T58f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen9a */
extern T0* T843c1108(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen9a_error */
extern void T41f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ITERATION_ITEM_SCOPE.iteration_component */
extern T0* T419f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].item */
extern T0* T799f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_iteration_item */
extern T1 T188f27(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T403f452(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T58f577(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T843c1250(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T58f177(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T41f577(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T41f177(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T58f576(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T843c1249(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T41f576(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T58f509(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T843c1184(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T58f142(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T41f509(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T41f142(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T58f508(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T843c1183(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T41f508(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T403f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T403f215(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T403f280(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T58f430(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T843c1105(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T58f91(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0a_error */
extern void T41f430(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T41f91(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.has_local_variable */
extern T1 T422f8(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1831f6(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T1266f6(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T520f4(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T1266f7(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1831f7(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T520f7(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T394f71(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T392f70(TC* ac, T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T383f65(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.locals */
extern T0* T382f14(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T258f78(TC* ac, T0* C);
/* ET_INVARIANTS.locals */
extern T0* T1258f16(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T1577f75(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.locals */
extern T0* T1576f19(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T1574f69(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.locals */
extern T0* T1573f21(TC* ac, T0* C);
/* ET_DO_FUNCTION.locals */
extern T0* T522f7(TC* ac, T0* C);
/* ET_DO_PROCEDURE.locals */
extern T0* T518f5(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T524f64(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1618f30(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1617f10(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1616f10(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T1615f31(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.locals */
extern T0* T1614f12(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.locals */
extern T0* T1613f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T58f429(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T843c1104(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T58f107(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T41f429(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T41f107(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T58f428(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T843c1103(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T41f428(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.is_local */
extern T1 T188f7(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T403f451(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T58f575(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T843c1248(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T58f176(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T41f575(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T41f176(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T58f574(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T843c1247(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T41f574(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T58f507(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T843c1182(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T58f141(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T41f507(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T41f141(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T58f506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T843c1181(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T41f506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T403f368(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T403f214(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T403f279(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_formal_argument */
extern T1 T422f7(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.arguments */
extern T0* T1258f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1618f11(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1617f3(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1616f3(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T1615f11(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T1614f3(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T1613f3(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T403f153(TC* ac, T0* C, T0* a1);
extern T1 T403f153ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1b_error */
extern void T58f407(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1b */
extern T0* T843c1082(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1b_error */
extern void T41f407(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.parenthesis_call */
extern T0* T2020f4(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T403f205(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T403f265(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T410f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].force */
extern void T769f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].fill_with */
extern void T771f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].extend */
extern void T771f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T410f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T769f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T771f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T410f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T410f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T770f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T770f13(TC* ac, T0* C);
/* ET_TUPLE_TYPE.add_overloaded_procedures */
extern void T259f139(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.add_overloaded_procedures */
extern void T1910f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.add_overloaded_procedures */
extern void T77f148(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_overloaded_procedures */
extern void T79f339(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T263f14(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T263f14ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_names */
extern T0* T1577f87(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T1577f88(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_names */
extern T0* T524f78(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T524f79(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_names */
extern T0* T1576f81(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T1576f82(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_names */
extern T0* T518f79(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T518f80(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T1577f86(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T524f77(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T1576f80(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T518f78(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T403f62(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T410f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].keep_head */
extern void T771f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].set_count */
extern void T771f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T410f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T772f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_after */
extern void T772f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T410f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T770c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].set_internal_cursor */
extern void T770f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T770f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T1490c9(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T410f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T76f197(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T76f225(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T76f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T76f401(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f401ot1(TC* ac, T0* a1);
extern T1 T76f401ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T76f264(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T76f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T76f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f477ot1(TC* ac, T0* a1);
extern T1 T76f477ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T76f208(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T76f75(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T76f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_inline_separate_argument_call_instruction_validity */
extern void T76f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_argument_parenthesis_call_validity */
extern void T76f398(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_argument_validity */
extern void T76f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_separate_argument */
extern void T76f245(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_iteration_item_call_instruction_validity */
extern void T76f262(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_item_parenthesis_call_validity */
extern void T76f397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_item_validity */
extern void T76f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_item */
extern void T76f244(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T76f261(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T76f396(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T76f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T76f242(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_cap_dynamic_types */
extern void T76f377(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1831f8(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T1266f8(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.attached_type */
extern T0* T68f63(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attached_type_modifier */
extern T0* T78f21(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T76f260(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T76f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T76f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T76f241(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T76f199(TC* ac, T0* C, T0* a1);
extern T1 T76f199ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T76f230(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T76f350(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T76f89(TC* ac, T0* C);
/* ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T72f1561(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T72f1588(TC* ac, T0* C, T0* a1);
extern T1 T72f1588ot1(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T1819f11(TC* ac, T0* C);
/* ET_C_GENERATOR.print_instruction_static_call */
extern void T72f1593(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.register_called_static_feature */
extern void T72f1378(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T318f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T318f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T318f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T318f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_static_generated */
extern void T327f50(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static_generated */
extern void T241f60(TC* ac, T0* C, T1 a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.position */
extern T0* T1819f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.process */
extern void T302f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_instruction */
extern void T1399f41(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1399f24(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_arguments */
extern void T1399f103(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_argument */
extern void T1399f110(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.argument */
extern T0* T264f6(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT.argument */
extern T0* T299f5(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.item */
extern T0* T264f7(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_inline_separate_instruction */
extern void T403f137(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_separate_instruction_validity */
extern void T403f155(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].remove_found_item */
extern void T420f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].unset_found_item */
extern void T420f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].remove_position */
extern void T420f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_put */
extern void T420f53(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].force */
extern void T802f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].fill_with */
extern void T803f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].extend */
extern void T803f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_put */
extern void T420f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_keep_head */
extern void T420f57(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T803f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].set_count */
extern void T803f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_keep_head */
extern void T420f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_put */
extern void T420f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_put */
extern void T420f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].move_cursors_forth */
extern void T420f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_position */
extern void T801f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_next_cursor */
extern void T801f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_after */
extern void T801f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].internal_set_key_equality_tester */
extern void T420f54(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.remove_inline_separate_arguments */
extern void T421f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].prune_last */
extern void T804f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].move_all_cursors_after */
extern void T804f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].set_next_cursor */
extern void T1494f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].set_after */
extern void T1494f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T403f120(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.add_inline_separate_argument */
extern void T421f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].force_last */
extern void T804f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].resize */
extern void T804f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T802f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T803f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].new_capacity */
extern T6 T804f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].extendible */
extern T1 T804f8(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_inline_separate_arguments_validity */
extern void T403f212(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_inline_separate_argument_declaration */
extern void T403f277(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].force_last */
extern void T420f46(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].resize */
extern void T420f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_resize */
extern void T420f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].special_integer_ */
extern T0* T420f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_resize */
extern void T420f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_resize */
extern void T420f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_resize */
extern void T420f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_modulus */
extern T6 T420f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_capacity */
extern T6 T420f22(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2gf_error */
extern void T58f426(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gf */
extern T0* T843c1101(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_v1se2g_error */
extern T1 T58f112(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se2gf_error */
extern void T41f426(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_v1se2g_error */
extern T1 T41f112(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2ge_error */
extern void T58f425(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2ge */
extern T0* T843c1100(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2ge_error */
extern void T41f425(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_v1se2gd_error */
extern void T58f424(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gd */
extern T0* T843c1099(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gd_error */
extern void T41f424(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T409f15(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_AGENT].keep_head */
extern void T767f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].set_count */
extern void T767f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T409f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T768f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_after */
extern void T768f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_v1se2gc_error */
extern void T58f423(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gc */
extern T0* T843c1098(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gc_error */
extern void T41f423(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T520f8(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2gb_error */
extern void T58f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gb */
extern T0* T843c1097(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gb_error */
extern void T41f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T409f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T409f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].force */
extern void T766f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].fill_with */
extern void T767f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].extend */
extern void T767f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T409f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T766f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T767f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T409f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T409f10(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2ga_error */
extern void T58f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2ga */
extern T0* T843c1096(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2ga_error */
extern void T41f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_v1se1ga_error */
extern void T58f420(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se1ga */
extern T0* T843c1095(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_v1se1g_error */
extern T1 T58f111(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se1ga_error */
extern void T41f420(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_v1se1g_error */
extern T1 T41f111(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se3ga_error */
extern void T58f419(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1se3ga */
extern T0* T843c1094(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_v1se3g_error */
extern T1 T58f110(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se3ga_error */
extern void T41f419(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_v1se3g_error */
extern T1 T41f110(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inline_separate_instruction */
extern void T76f176(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_instruction_validity */
extern void T76f200(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T76f143(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_arguments_validity */
extern void T76f235(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_separate_argument_declaration */
extern void T76f358(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_separate_argument_dynamic_types */
extern void T76f458(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_inline_separate_instruction */
extern void T72f1532(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_separate_instruction */
extern void T72f1371(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_separate_argument_name */
extern void T72f868(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [INTEGER_32].force_last */
extern void T290f44(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_INSTRUCTION.position */
extern T0* T302f5(TC* ac, T0* C);
/* ET_COMPOUND.position */
extern T0* T265f15(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.position */
extern T0* T1337f24(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.position */
extern T0* T1078f24(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.position */
extern T0* T1113f16(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.position */
extern T0* T1597f14(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T1595f13(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.position */
extern T0* T1177f11(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.position */
extern T0* T1283f9(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.is_empty */
extern T1 T1283f10(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.position */
extern T0* T1253f13(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.position */
extern T0* T1237f14(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T1593f17(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T1592f16(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.position */
extern T0* T1590f16(TC* ac, T0* C);
/* ET_VARIANT.position */
extern T0* T1362f5(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.position */
extern T0* T1274f13(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T1623f6(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.position */
extern T0* T1582f6(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.is_empty */
extern T1 T1274f14(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.position */
extern T0* T1589f11(TC* ac, T0* C);
/* ET_ASSIGNMENT.position */
extern T0* T303f5(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T1058f15(TC* ac, T0* C);
/* ET_COMPOUND.first */
extern T0* T265f14(TC* ac, T0* C);
/* ET_COMPOUND.is_empty */
extern T1 T265f13(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T1058f17(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.position */
extern T0* T264f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.position */
extern T0* T299f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.first */
extern T0* T264f14(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.is_empty */
extern T1 T264f13(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.process */
extern void T1337f31(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_repeat_instruction */
extern void T1399f40(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_repeat_instruction */
extern void T403f402(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_repeat_instruction_validity */
extern void T403f426(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_instruction_validity */
extern void T403f443(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_found_item */
extern void T418f65(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].unset_found_item */
extern void T418f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_position */
extern void T418f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_put */
extern void T418f73(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].force */
extern void T798f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT].fill_with */
extern void T796f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT].extend */
extern void T796f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_put */
extern void T418f69(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_keep_head */
extern void T418f77(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].keep_head */
extern void T796f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].set_count */
extern void T796f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_keep_head */
extern void T418f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_put */
extern void T418f71(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_put */
extern void T418f72(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].move_cursors_forth */
extern void T418f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_position */
extern void T795f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_next_cursor */
extern void T795f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_after */
extern void T795f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].internal_set_key_equality_tester */
extern void T418f74(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_ITEM_SCOPE.remove_iteration_components */
extern void T419f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].prune_last */
extern void T799f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].move_all_cursors_after */
extern void T799f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].set_next_cursor */
extern void T1493f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].set_after */
extern void T1493f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_loop_component_no_from_validity */
extern void T403f446(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T422f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].forth */
extern void T290f70(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].go_after */
extern void T290f84(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_go_after */
extern void T290f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].item_for_iteration */
extern T6 T290f30(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].after */
extern T1 T290f29(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_after */
extern T1 T290f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].start */
extern void T290f69(TC* ac, T0* C);
/* ET_COMPOUND.has_non_null_instruction */
extern T1 T265f16(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.loop_compound */
extern T0* T1337f7(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.loop_compound */
extern T0* T1078f8(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.loop_compound */
extern T0* T1590f3(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T58f216(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T843c916(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T58f25(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T41f216(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T41f25(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T403f50(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.until_conditional */
extern T0* T1337f21(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.until_conditional */
extern T0* T1078f7(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.until_conditional */
extern T0* T1590f2(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T403f376(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T58f545(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T843c1220(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T58f159(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T41f545(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T41f159(TC* ac, T0* C, T0* a1);
/* ET_REPEAT_INSTRUCTION.variant_part */
extern T0* T1337f23(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.variant_part */
extern T0* T1078f12(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.variant_part */
extern T0* T1590f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T403f375(TC* ac, T0* C, T0* a1);
/* ET_REPEAT_INSTRUCTION.invariant_part */
extern T0* T1337f22(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.invariant_part */
extern T0* T1078f11(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.invariant_part */
extern T0* T1590f5(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.from_compound */
extern T0* T1337f20(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.add_iteration_component */
extern void T419f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].force_last */
extern void T799f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].resize */
extern void T799f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].aliased_resized_area */
extern T0* T798f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ITERATION_COMPONENT].aliased_resized_area */
extern T0* T796f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].new_capacity */
extern T6 T799f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].extendible */
extern T1 T799f8(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_iteration_component_header_validity */
extern void T403f374(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_iteration_item_declaration */
extern void T403f393(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REPEAT_INSTRUCTION.cursor_item_expression */
extern T0* T1337f10(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.cursor_item_expression */
extern T0* T1078f14(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_item_expression */
extern T0* T1327f11(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_item_expression */
extern T0* T1075f15(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_cursor_name */
extern T1 T1337f25(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_cursor_name */
extern T1 T1078f10(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_cursor_name */
extern T1 T1327f29(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_cursor_name */
extern T1 T1075f11(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_forth_instruction */
extern T0* T1337f12(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.cursor_forth_instruction */
extern T0* T1078f16(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_forth_instruction */
extern T0* T1327f13(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_forth_instruction */
extern T0* T1075f17(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_after_expression */
extern T0* T1337f11(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.cursor_after_expression */
extern T0* T1078f15(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_after_expression */
extern T0* T1327f12(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_after_expression */
extern T0* T1075f16(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].force_last */
extern void T418f66(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].resize */
extern void T418f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_resize */
extern void T418f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].special_integer_ */
extern T0* T418f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_resize */
extern void T418f80(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_resize */
extern void T418f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_resize */
extern void T418f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_modulus */
extern T6 T418f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_capacity */
extern T6 T418f34(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_iteration_cursor_declaration */
extern void T403f392(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REPEAT_INSTRUCTION.new_cursor_expression */
extern T0* T1337f9(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.new_cursor_expression */
extern T0* T1078f13(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.new_cursor_expression */
extern T0* T1327f10(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.new_cursor_expression */
extern T0* T1075f14(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.hidden_iteration_component */
extern T0* T419f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T58f544(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2e */
extern T0* T843c1219(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T58f158(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2e_error */
extern void T41f544(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T41f158(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T416f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T58f543(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2d */
extern T0* T843c1218(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2d_error */
extern void T41f543(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T58f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2c */
extern T0* T843c1217(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2c_error */
extern void T41f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T58f541(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2b */
extern T0* T843c1216(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2b_error */
extern void T41f541(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T58f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2a */
extern T0* T843c1215(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2a_error */
extern void T41f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T58f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_voit1a */
extern T0* T843c1214(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T58f157(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit1a_error */
extern void T41f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T41f157(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.iterable_detachable_separate_any_type */
extern T0* T191f56(TC* ac, T0* C);
/* ET_SYSTEM.iterable_detachable_separate_any_type */
extern T0* T45f63(TC* ac, T0* C);
/* ET_ECF_SYSTEM.iterable_detachable_separate_any_type */
extern T0* T63f59(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.iterable_expression */
extern T0* T1337f5(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.iterable_expression */
extern T0* T1078f5(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.iterable_expression */
extern T0* T1327f6(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.iterable_expression */
extern T0* T1075f6(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_repeat_instruction */
extern void T76f189(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_repeat_instruction_validity */
extern void T76f217(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_instruction_validity */
extern void T76f246(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_component_no_from_validity */
extern void T76f252(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T76f69(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T76f383(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T76f383p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T76f382(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T76f382p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_component_header_validity */
extern void T76f378(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_item_declaration */
extern void T76f463(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_cursor_declaration */
extern void T76f462(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_repeat_instruction */
extern void T72f1546(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_repeat_instruction */
extern void T72f1574(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_instruction */
extern void T72f1590(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor_name */
extern void T72f867(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_INSTRUCTION.process */
extern void T1078f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1399f39(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1399f99(TC* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.process */
extern void T1623f10(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1399f115(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.process */
extern void T1582f10(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_class_assertion */
extern void T1399f112(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_instruction */
extern void T403f397(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T403f421(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T76f184(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T76f212(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_instruction */
extern void T72f1541(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_instruction */
extern void T72f1569(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T1113f21(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1399f38(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T1113f14(TC* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T1113f15(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T403f398(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T403f422(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T422f25(TC* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.is_false */
extern T1 T188f105(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T395f38(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_false */
extern T1 T1075f36(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_false */
extern T1 T791f25(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T686f24(TC* ac, T0* C);
/* ET_CALL_AGENT.is_false */
extern T1 T1108f28(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_false */
extern T1 T305f28(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_false */
extern T1 T1105f25(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_false */
extern T1 T332f24(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_false */
extern T1 T676f21(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T298f26(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_false */
extern T1 T347f32(TC* ac, T0* C);
/* ET_CURRENT.is_false */
extern T1 T293f31(TC* ac, T0* C);
/* ET_RESULT.is_false */
extern T1 T266f31(TC* ac, T0* C);
/* ET_VOID.is_false */
extern T1 T1064f29(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1618f36(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1617f42(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1616f38(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1615f37(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1614f43(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1613f39(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_false */
extern T1 T1612f21(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T1611f23(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_false */
extern T1 T1610f28(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_false */
extern T1 T1609f21(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_false */
extern T1 T1608f26(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_false */
extern T1 T1607f22(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T1606f23(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_false */
extern T1 T1603f26(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_false */
extern T1 T1602f21(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_false */
extern T1 T1601f21(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_false */
extern T1 T1600f21(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_false */
extern T1 T1599f21(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T1598f25(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T1558f33(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T1557f33(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_false */
extern T1 T1556f30(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T1556f12(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_false */
extern T1 T1555f30(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T1555f12(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T1553f32(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T1552f32(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T1551f49(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T1550f49(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T1549f49(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T1548f49(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_false */
extern T1 T1547f39(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T1546f35(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T1545f34(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T1544f34(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_false */
extern T1 T1343f28(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T1340f25(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_false */
extern T1 T1327f35(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T1305f23(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_false */
extern T1 T1277f28(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_false */
extern T1 T1250f24(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_false */
extern T1 T1234f27(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T76f185(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T76f213(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T76f213p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T72f1542(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T72f1570(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T1597f18(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1399f37(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T403f416(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T403f440(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T403f295(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T403f295ot1(TC* ac, T0* a1);
extern T1 T403f295ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T403f296(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T403f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_feature_validity */
extern void T403f348(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T403f348ot1(TC* ac, T0* a1);
extern T1 T403f348ot2(TC* ac, T0* a1);
extern T1 T403f348ot3(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuno5a_error */
extern void T58f531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuno5a */
extern T0* T843c1206(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T58f152(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno5a_error */
extern void T41f531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T41f152(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuno5b_error */
extern void T58f530(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuno5b */
extern T0* T843c1205(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuno5b_error */
extern void T41f530(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuno3a_error */
extern void T58f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuno3a */
extern T0* T843c1204(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T58f151(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno3a_error */
extern void T41f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T41f151(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T403f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T1413f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T1340f11(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1597f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T1340f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T1340c32(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T1340f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T403f450(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T403f460(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T403f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T403f138(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T1597f11(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T76f196(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T76f224(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T76f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f259ot1(TC* ac, T0* a1);
extern T1 T76f259ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T76f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T76f476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f476ot1(TC* ac, T0* a1);
extern T1 T76f476ot2(TC* ac, T0* a1);
extern T1 T76f476ot3(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.first */
extern T0* T2021f11(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.first */
extern T0* T294f16(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_ise_runtime_new_tuple_instance_of */
extern T1 T327f47(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_ise_runtime_new_tuple_instance_of */
extern T1 T241f48(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T496f92(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T495f92(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T323f88(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T338f90(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_static */
extern void T228f86(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern void T76f392(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f392ot1(TC* ac, T0* a1);
extern T1 T76f392ot2(TC* ac, T0* a1);
extern T1 T76f392ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T76f390(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T76f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T76f393(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T76f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T76f256(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T72f1560(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T72f1587(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T1595f18(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1399f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1399f102(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.item */
extern T0* T1310f4(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T58f602(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T843c1274(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.tokens */
extern T0* T843f902(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T58f121(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T41f602(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T41f121(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T58f601(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T843c1273(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T41f601(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T1598f35(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T1595f23(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T1022f27(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T58f600(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T843c1272(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T41f600(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T58f599(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T843c1271(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T58f187(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T41f599(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T41f187(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1399f9(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1399f109(TC* ac, T0* C);
/* ET_ECF_LIBRARY.has_master_class */
extern T1 T191f115(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.has_master_class */
extern T1 T45f124(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.has_master_class */
extern T1 T63f146(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1399f8(TC* ac, T0* C);
/* ET_IDENTIFIER.class_name */
extern T0* T188f110(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T403f415(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T403f439(TC* ac, T0* C, T0* a1);
extern T1 T403f439ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T403f297(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T403f297ot1(TC* ac, T0* a1);
extern T1 T403f297ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T403f298(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_SET [ET_QUERY].force_last */
extern void T1412f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].slots_put */
extern void T1412f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].clashes_put */
extern void T1412f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].slots_item */
extern T6 T1412f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].hash_position */
extern T6 T1412f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].resize */
extern void T1412f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_resize */
extern void T1412f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T1412f32(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_resize */
extern void T1412f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_resize */
extern void T1412f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_item */
extern T0* T1412f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_item */
extern T0* T1412f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_item */
extern T6 T1412f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].slots_resize */
extern void T1412f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T1412f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_capacity */
extern T6 T1412f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_put */
extern void T1412f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].search_position */
extern void T1412f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].key_equality_tester */
extern T0* T1412f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T1412f43(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T403f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vucr0h_error */
extern void T58f483(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0h */
extern T0* T843c1158(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0h_error */
extern void T41f483(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T1595f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T1598f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T1598f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T1598c28(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern T0* T78f1548(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T1022c23(TC* ac);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T1022f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T1022f26(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T1598f10(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T403f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [ET_PROCEDURE].force_last */
extern void T1411f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_put */
extern void T1411f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].clashes_put */
extern void T1411f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].slots_item */
extern T6 T1411f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].hash_position */
extern T6 T1411f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].resize */
extern void T1411f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_resize */
extern void T1411f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T1411f32(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_resize */
extern void T1411f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_resize */
extern void T1411f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_item */
extern T0* T1411f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_item */
extern T0* T1411f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_item */
extern T6 T1411f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_resize */
extern void T1411f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T1411f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_capacity */
extern T6 T1411f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_put */
extern void T1411f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].search_position */
extern void T1411f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].key_equality_tester */
extern T0* T1411f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T1411f43(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T403f459(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T58f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T843c1123(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T41f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INVARIANTS.first_precursor */
extern T0* T1258f18(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.first_precursor */
extern T0* T1577f8(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.first_precursor */
extern T0* T258f8(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.first_precursor */
extern T0* T1576f9(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.first_precursor */
extern T0* T1574f8(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.first_precursor */
extern T0* T1573f9(TC* ac, T0* C);
/* ET_DO_FUNCTION.first_precursor */
extern T0* T522f11(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.first_precursor */
extern T0* T394f9(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.first_precursor */
extern T0* T392f8(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.first_precursor */
extern T0* T382f7(TC* ac, T0* C);
/* ET_ATTRIBUTE.first_precursor */
extern T0* T383f7(TC* ac, T0* C);
/* ET_DO_PROCEDURE.first_precursor */
extern T0* T518f18(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.first_precursor */
extern T0* T524f16(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T58f447(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T843c1122(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T41f447(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T58f571(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T843c1244(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T58f120(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T41f571(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T41f120(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T76f195(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T76f223(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T76f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T76f255ot1(TC* ac, T0* a1);
extern T1 T76f255ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T76f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T76f474(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T327f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T241f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T328f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].force */
extern void T2025f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].fill_with */
extern void T2024f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].extend */
extern void T2024f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern T0* T328f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T2025c3(TC* ac);
/* ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T328f10(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T2025f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T2024f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T328f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T328f5(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T328f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T328c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T2025f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T2024c5(TC* ac, T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T327c49(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T327f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T327f60ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T327f44(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T327f43(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T267c15(TC* ac);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T667f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T666c5(TC* ac, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T76f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T76f388(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T72f1559(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T72f1586(TC* ac, T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T1177f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1399f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T403f399(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T403f423(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T76f186(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T76f214(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T76f214p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T72f1543(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T72f1571(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T1253f16(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1399f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1399f101(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1399f108(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T1374f10(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T1253f12(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T403f401(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T403f425(TC* ac, T0* C, T0* a1);
extern T1 T403f425ot1(TC* ac, T0* a1);
extern T1 T403f425ot2(TC* ac, T0* a1);
extern T1 T403f425ot3(TC* ac, T0* a1);
extern T1 T403f425ot4(TC* ac, T0* a1);
/* ET_ATTACHMENT_SCOPE.merge_scope */
extern void T422f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].remove */
extern void T290f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_position */
extern void T290f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].move_cursors_forth */
extern void T290f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].internal_set_key_equality_tester */
extern void T290f62(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.upper */
extern T0* T686f30(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T395f58(TC* ac, T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T188f116(TC* ac, T0* C);
/* ET_CHOICE_RANGE.upper */
extern T0* T1594f2(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T1558f43(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T1557f42(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T1551f58(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T1550f58(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T1549f58(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T1548f58(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T1544f43(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T1340f31(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_range */
extern T1 T686f28(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T395f56(TC* ac, T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T188f114(TC* ac, T0* C);
/* ET_CHOICE_RANGE.is_range */
extern T1 T1594f6(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T1558f41(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T1557f40(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T1551f56(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T1550f56(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T1549f56(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T1548f56(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T1544f41(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T1340f29(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T1544f55(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T1558f50(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T1557f49(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.cast_type */
extern T0* T1544f2(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.cast_type */
extern T0* T1558f2(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.cast_type */
extern T0* T1557f2(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T58f442(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T843c1117(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T58f117(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T41f442(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T41f117(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T1551f72(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T1550f72(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T1549f72(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T1548f72(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T395f74(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.cast_type */
extern T0* T1551f3(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.cast_type */
extern T0* T1550f3(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.cast_type */
extern T0* T1549f3(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.cast_type */
extern T0* T1548f3(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.cast_type */
extern T0* T395f7(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T58f441(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T843c1116(TC* ac, T0* a1, T0* a2, T0* a3);
extern T1 T843f1116ot1(TC* ac, T0* a1);
extern T1 T843f1116ot2(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T41f441(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.choice_constant */
extern T0* T403f64(TC* ac, T0* C, T0* a1);
extern T1 T403f64ot1(TC* ac, T0* a1);
extern T1 T403f64ot2(TC* ac, T0* a1);
extern T1 T403f64ot3(TC* ac, T0* a1);
extern T1 T403f64ot4(TC* ac, T0* a1);
extern T1 T403f64ot5(TC* ac, T0* a1);
extern T1 T403f64ot6(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.integer_choice_constant */
extern T0* T403f72(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_constant */
extern T1 T1551f52(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_constant */
extern T1 T1550f52(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_constant */
extern T1 T1549f52(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_constant */
extern T1 T1548f52(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_constant */
extern T1 T395f53(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T1547f42(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T1546f38(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1544f37(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1558f36(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1557f36(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T1556f33(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T1555f33(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T1553f35(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T1552f35(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T1545f37(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.character_choice_constant */
extern T0* T403f71(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T1557c48(TC* ac, T3 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T1557f54(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T1551f51(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1550f51(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1549f51(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T1548f51(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T395f52(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T1547f41(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T1546f37(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_constant */
extern T1 T1544f36(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_character_constant */
extern T1 T1558f35(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_character_constant */
extern T1 T1557f35(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T1556f32(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T1555f32(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T1553f34(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T1552f34(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T1545f36(TC* ac, T0* C);
/* ET_IDENTIFIER.arguments_count */
extern T6 T188f112(TC* ac, T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T188f117(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T686f27(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.lower */
extern T0* T686f29(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T395f57(TC* ac, T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T188f115(TC* ac, T0* C);
/* ET_CHOICE_RANGE.lower */
extern T0* T1594f1(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T1558f42(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T1557f41(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T1551f57(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T1550f57(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T1549f57(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T1548f57(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T1544f42(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T1340f30(TC* ac, T0* C);
/* ET_CHOICE_LIST.choice */
extern T0* T1125f6(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.choice */
extern T0* T188f109(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T1551f54(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T1550f54(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T1549f54(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T1548f54(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T395f55(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T1544f39(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.choice */
extern T0* T686f26(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T1340f27(TC* ac, T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T1594f5(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T1558f39(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T1557f38(TC* ac, T0* C);
/* ET_CHOICE_LIST.item */
extern T0* T1125f7(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T58f440(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T843c1115(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T58f116(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T41f440(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T41f116(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T76f188(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T76f216(TC* ac, T0* C, T0* a1);
extern T1 T76f216ot1(TC* ac, T0* a1);
extern T1 T76f216ot2(TC* ac, T0* a1);
extern T1 T76f216ot3(TC* ac, T0* a1);
extern T1 T76f216ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T76f86(TC* ac, T0* C, T0* a1);
extern T1 T76f86ot1(TC* ac, T0* a1);
extern T1 T76f86ot2(TC* ac, T0* a1);
extern T1 T76f86ot3(TC* ac, T0* a1);
extern T1 T76f86ot4(TC* ac, T0* a1);
extern T1 T76f86ot5(TC* ac, T0* a1);
extern T1 T76f86ot6(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T76f100(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T76f99(TC* ac, T0* C);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T72f1545(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T72f1573(TC* ac, T0* C, T0* a1);
extern T1 T72f1573ot1(TC* ac, T0* a1);
extern T1 T72f1573ot2(TC* ac, T0* a1);
extern T1 T72f1573ot3(TC* ac, T0* a1);
extern T1 T72f1573ot4(TC* ac, T0* a1);
extern T1 T72f1573ot5(TC* ac, T0* a1);
extern T1 T72f1573ot6(TC* ac, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.value */
extern T11 T1551f4(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value */
extern T11 T1550f4(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value */
extern T11 T1549f4(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value */
extern T11 T1548f4(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value */
extern T11 T395f1(TC* ac, T0* C);
/* ET_C_GENERATOR.print_escaped_character_8 */
extern void T72f1375(TC* ac, T0* C, T2 a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T372f2(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern T0* T72f315(TC* ac, T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T372c1(TC* ac);
/* ET_C_GENERATOR.print_type_cast */
extern void T72f719(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T165f11(TC* ac, T0* C, T10 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T165f12(TC* ac, T0* C, T11 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T268f12(TC* ac, T0* C, T10 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T268f13(TC* ac, T0* C, T11 a1);
/* ET_C3_CHARACTER_CONSTANT.value */
extern T3 T1544f4(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.value */
extern T3 T1558f4(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.value */
extern T3 T1557f4(TC* ac, T0* C);
/* ET_C_GENERATOR.print_integer_value */
extern void T72f1374(TC* ac, T0* C, T11 a1, T1 a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.current_universe_impl */
extern T0* T72f306(TC* ac, T0* C);
/* INTEGER_32.abs */
extern T6 T6f34(TC* ac, volatile T6* C);
/* INTEGER_32.abs_ref */
extern T6 T6f35(TC* ac, volatile T6* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1551f48(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1550f48(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1549f48(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1548f48(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T395f10(TC* ac, T0* C);
/* ET_C_GENERATOR.choice_constant */
extern T0* T72f593(TC* ac, T0* C, T0* a1);
extern T1 T72f593ot1(TC* ac, T0* a1);
extern T1 T72f593ot2(TC* ac, T0* a1);
extern T1 T72f593ot3(TC* ac, T0* a1);
extern T1 T72f593ot4(TC* ac, T0* a1);
extern T1 T72f593ot5(TC* ac, T0* a1);
/* ET_WHEN_PART.position */
extern T0* T1371f9(TC* ac, T0* C);
/* ET_CHOICE_LIST.position */
extern T0* T1125f12(TC* ac, T0* C);
/* ET_CHOICE_RANGE.position */
extern T0* T1594f11(TC* ac, T0* C);
/* ET_CHOICE_LIST.first */
extern T0* T1125f14(TC* ac, T0* C);
/* ET_CHOICE_LIST.is_empty */
extern T1 T1125f13(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.process */
extern void T1237f18(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1399f33(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1399f100(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T1186f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1399f121(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.expression */
extern T0* T1186f10(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T1189f10(TC* ac, T0* C, T6 a1);
/* ET_IF_INSTRUCTION.expression */
extern T0* T1237f13(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T403f400(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T403f424(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T76f187(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T76f215(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T72f1544(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T72f1572(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.position */
extern T0* T1186f9(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.process */
extern void T1593f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1399f32(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T403f414(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T403f438(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T403f447(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T58f573(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T843c1246(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T41f573(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_dotnet_creation_procedure_call_instruction_validity */
extern void T403f458(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_instruction_validity */
extern void T403f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5, T0* a6);
extern T1 T403f457ot1(TC* ac, T0* a1);
extern T1 T403f457ot2(TC* ac, T0* a1);
extern T1 T403f457ot3(TC* ac, T0* a1);
extern T1 T403f457ot4(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T403f462(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.add_name */
extern void T422f17(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_attribute */
extern void T422f21(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T422f20(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T422f19(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable */
extern T1 T1585f10(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_detachable */
extern T1 T259f44(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T247f24(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_detachable */
extern T1 T77f44(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T1587f24(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T1586f10(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable */
extern T1 T493f5(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.type */
extern T0* T1258f17(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T1618f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T1617f33(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T1616f31(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T1615f29(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T1614f34(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T1613f32(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.add_result */
extern void T422f15(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_validity */
extern void T403f384(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.is_like_current */
extern T1 T1535f31(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_formal_creation_procedure_call_validity */
extern void T403f383(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_formal_parameter_creation_vape_validity */
extern void T403f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape2b_error */
extern void T58f550(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape2b */
extern T0* T843c1225(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape2b_error */
extern void T41f550(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLIENT.reset */
extern void T428f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T58f548(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T843c1223(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T58f162(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T41f548(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T41f162(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_no_creation_procedure_call_validity */
extern void T403f382(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T58f547(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T843c1222(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T58f161(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T41f547(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T41f161(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T58f546(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T843c1221(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T58f160(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T41f546(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T41f160(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T403f381(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.is_type_valid */
extern T1 T403f74(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_class_interface_error_only */
extern void T407f45(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T403f380(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T1413f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T58f587(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T843c1260(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T58f181(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T41f587(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T41f181(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type */
extern T0* T1535f27(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T1535f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.first */
extern T0* T246f49(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T403f210(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T403f210ot1(TC* ac, T0* a1);
extern T1 T403f210ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T403f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0c_error */
extern void T58f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0c */
extern T0* T843c1093(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0c_error */
extern void T41f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T58f417(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T843c1092(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T58f108(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T41f417(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T41f108(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T58f416(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T843c1091(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T58f109(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T41f416(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T41f109(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T58f415(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T843c1090(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T41f415(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T58f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T843c1089(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T41f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T58f413(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T843c1088(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T41f413(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T403f275(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T403f274(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T58f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T843c1087(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T41f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T58f411(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T843c1086(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T41f411(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T1593f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T76f194(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T76f222(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T76f253(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_dotnet_creation_procedure_call_instruction_validity */
extern void T76f386(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_instruction_validity */
extern void T76f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5, T0* a6);
extern T1 T76f385ot1(TC* ac, T0* a1);
extern T1 T76f385ot2(TC* ac, T0* a1);
extern T1 T76f385ot3(TC* ac, T0* a1);
extern T1 T76f385ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T76f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T76f526(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_validity */
extern void T76f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_creation_procedure_call_validity */
extern void T76f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_parameter_creation_vape_validity */
extern void T76f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_no_creation_procedure_call_validity */
extern void T76f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T76f466(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T76f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T76f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T76f236(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f236ot1(TC* ac, T0* a1);
extern T1 T76f236ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T76f361(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T76f360(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T76f359(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T76f459(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T1618f15(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T1617f17(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T1616f16(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.result_index */
extern T6 T1615f17(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.result_index */
extern T6 T1614f19(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.result_index */
extern T6 T1613f18(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.detachable_type */
extern T0* T68f79(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T1618f14(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T1617f16(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T1616f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T1615f16(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T1614f18(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T1613f17(TC* ac, T0* C);
/* ET_C_GENERATOR.process_create_instruction */
extern void T72f1558(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T72f1585(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T72f1592(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_once_value */
extern void T72f1248(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_value */
extern void T72f888(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_value */
extern void T72f921(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.once_prefixes */
extern T0* T72f386(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once_per_thread */
extern T1 T327f26(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_thread */
extern T1 T1577f43(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_thread */
extern T1 T524f45(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_thread */
extern T1 T1576f32(TC* ac, T0* C);
/* ET_NOTE_LIST.has_note_term_with_tag */
extern T1 T1288f7(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_thread_key */
extern T1 T1917f2(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.is_once_per_thread */
extern T1 T518f50(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_thread */
extern T1 T258f58(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_thread */
extern T1 T1574f44(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_thread */
extern T1 T1573f47(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_thread */
extern T1 T522f47(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_thread */
extern T1 T394f65(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_thread */
extern T1 T392f64(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_thread */
extern T1 T382f58(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_thread */
extern T1 T383f60(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_thread */
extern T1 T241f44(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_process_value */
extern void T72f920(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_DYNAMIC_PRECURSOR.is_once_per_process */
extern T1 T327f25(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_process */
extern T1 T1577f42(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_process */
extern T1 T524f44(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_process */
extern T1 T1576f49(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_process_key */
extern T1 T1917f1(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.is_once_per_process */
extern T1 T518f49(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_process */
extern T1 T258f57(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_process */
extern T1 T1574f43(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_process */
extern T1 T1573f46(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_process */
extern T1 T522f46(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_process */
extern T1 T394f64(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_process */
extern T1 T392f63(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_process */
extern T1 T382f57(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_process */
extern T1 T383f59(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_process */
extern T1 T241f41(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_value */
extern void T72f919(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_value_name */
extern void T72f776(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_onces_access */
extern void T72f998(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_onces_name */
extern void T72f772(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T72f781(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_check_void_expression */
extern void T72f821(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T2048f12(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T2102f10(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_never_void */
extern T1 T2101f11(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T2100f9(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_never_void */
extern T1 T1551f43(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_never_void */
extern T1 T1550f43(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_never_void */
extern T1 T1549f43(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_never_void */
extern T1 T1548f43(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_never_void */
extern T1 T395f16(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_never_void */
extern T1 T1547f34(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_never_void */
extern T1 T1546f10(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_never_void */
extern T1 T1544f8(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_never_void */
extern T1 T332f5(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_never_void */
extern T1 T347f16(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T1618f37(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T1617f43(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T1616f40(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T1615f19(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T1614f21(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T1613f21(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_never_void */
extern T1 T1612f6(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_never_void */
extern T1 T1611f7(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T1610f12(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_never_void */
extern T1 T1609f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T1608f6(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_never_void */
extern T1 T1607f7(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T1606f6(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_never_void */
extern T1 T1603f6(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_never_void */
extern T1 T1602f6(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_never_void */
extern T1 T1601f6(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_never_void */
extern T1 T1600f6(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_never_void */
extern T1 T1599f6(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T1598f8(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_never_void */
extern T1 T1558f9(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_never_void */
extern T1 T1557f9(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_never_void */
extern T1 T1556f8(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_never_void */
extern T1 T1555f8(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_never_void */
extern T1 T1553f10(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_never_void */
extern T1 T1552f10(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_never_void */
extern T1 T1545f10(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_never_void */
extern T1 T1343f9(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T1340f7(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_never_void */
extern T1 T1327f17(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T1305f7(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_never_void */
extern T1 T1277f9(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_never_void */
extern T1 T1250f6(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_never_void */
extern T1 T1234f11(TC* ac, T0* C);
/* ET_CALL_AGENT.is_never_void */
extern T1 T1108f8(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T1105f6(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T1075f20(TC* ac, T0* C);
/* ET_VOID.is_never_void */
extern T1 T1064f8(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T791f9(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T686f6(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T676f6(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T298f11(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_never_void */
extern T1 T305f14(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_never_void */
extern T1 T361f6(TC* ac, T0* C);
/* ET_RESULT.is_never_void */
extern T1 T266f6(TC* ac, T0* C);
/* ET_CURRENT.is_never_void */
extern T1 T293f6(TC* ac, T0* C);
/* ET_IDENTIFIER.is_never_void */
extern T1 T188f9(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T1529f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T523f11(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.can_be_void */
extern T1 T342f7(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T281f7(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T496f53(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T495f54(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T338f58(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T323f57(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.can_be_void */
extern T1 T228f26(TC* ac, T0* C);
/* ET_C_GENERATOR.once_kind */
extern T6 T72f378(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_real_64_class */
extern T1 T79f67(TC* ac, T0* C);
/* ET_CLASS.is_real_32_class */
extern T1 T79f66(TC* ac, T0* C);
/* ET_CLASS.is_pointer_class */
extern T1 T79f65(TC* ac, T0* C);
/* ET_CLASS.is_natural_64_class */
extern T1 T79f64(TC* ac, T0* C);
/* ET_CLASS.is_natural_32_class */
extern T1 T79f63(TC* ac, T0* C);
/* ET_CLASS.is_natural_16_class */
extern T1 T79f62(TC* ac, T0* C);
/* ET_CLASS.is_natural_8_class */
extern T1 T79f61(TC* ac, T0* C);
/* ET_CLASS.is_integer_64_class */
extern T1 T79f60(TC* ac, T0* C);
/* ET_CLASS.is_integer_32_class */
extern T1 T79f59(TC* ac, T0* C);
/* ET_CLASS.is_integer_16_class */
extern T1 T79f58(TC* ac, T0* C);
/* ET_CLASS.is_integer_8_class */
extern T1 T79f57(TC* ac, T0* C);
/* ET_CLASS.is_character_32_class */
extern T1 T79f56(TC* ac, T0* C);
/* ET_CLASS.is_character_8_class */
extern T1 T79f193(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].found_item */
extern T6 T311f26(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_item */
extern T6 T311f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].found */
extern T1 T311f33(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].search */
extern void T311f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].search_position */
extern void T311f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].hash_position */
extern T6 T311f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_item */
extern T0* T311f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_item */
extern T6 T311f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_item */
extern T6 T311f27(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_result */
extern T1 T188f77(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once */
extern T1 T327f41(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once */
extern T1 T241f39(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_creation_procedure_call */
extern void T72f1596(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_creation_procedure_call */
extern T0* T72f1596ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_creation_procedure_call */
extern void T72f816(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_adapted_expression_with_agent */
extern void T72f833(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_adapted_separate_creation_procedure_call */
extern void T72f1595(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_separate_creation_procedure_call */
extern T0* T72f1595ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_creation_procedure_call */
extern void T72f815(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BANG_INSTRUCTION.process */
extern void T1592f23(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1399f31(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T403f413(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T403f437(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T76f193(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T76f221(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T72f1557(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T72f1584(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T1590f21(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1399f30(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T1590f15(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T403f412(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T403f436(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T76f192(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T76f220(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T72f1556(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T72f1583(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T1589f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1399f29(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T403f411(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T403f435(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T403f445(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T58f570(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T843c1243(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T58f175(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T41f570(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T41f175(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.newer_or_same_ise_version */
extern T1 T69f45(TC* ac, T0* C, T0* a1);
/* UT_VERSION.is_greater_equal */
extern T1 T51f15(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.newer_or_same_ise_version */
extern T1 T398f47(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern T0* T403f73(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T76f191(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T76f219(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T76f251(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T76f381(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T76f88(TC* ac, T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T72f1555(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T72f1582(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.wipe_out */
extern void T280f20(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T441f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T440f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].set_count */
extern void T440f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_standalone_type_set */
extern void T72f796(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T281f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].force_last */
extern void T282f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T699f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T698f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T698f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern void T282f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T699f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T698f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_capacity */
extern T6 T282f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].extendible */
extern T1 T282f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_never_void */
extern T1 T1529f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_never_void */
extern T1 T523f3(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_never_void */
extern T1 T281f4(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T281f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_standalone_type_set */
extern T0* T72f303(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].remove_last */
extern void T282f13(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T698f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T698f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].move_last_cursors_after */
extern void T282f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_next_cursor */
extern void T700f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_after */
extern void T700f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].last */
extern T0* T282f6(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T281c17(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].is_empty */
extern T1 T282f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.is_empty */
extern T1 T280f9(TC* ac, T0* C);
/* ET_ASSIGNMENT.process */
extern void T303f15(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1399f28(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T403f136(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T403f154(TC* ac, T0* C, T0* a1);
extern T1 T403f154ot1(TC* ac, T0* a1);
extern T1 T403f154ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T403f211(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_name */
extern void T422f18(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T422f24(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T422f23(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T422f22(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0b_error */
extern void T58f410(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0b */
extern T0* T843c1085(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T58f106(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0b_error */
extern void T41f410(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T41f106(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_result */
extern void T422f16(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_type_attached */
extern T1 T1585f78(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached */
extern T1 T247f71(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached */
extern T1 T1587f76(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached */
extern T1 T1586f79(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_attached */
extern T1 T493f73(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T58f409(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T843c1084(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T41f409(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ASSIGNMENT.set_source */
extern void T303f17(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T76f177(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T76f201(TC* ac, T0* C, T0* a1);
extern T1 T76f201ot1(TC* ac, T0* a1);
extern T1 T76f201ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T76f237(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T76f362(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T72f1533(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T72f1372(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T1588f22(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1399f27(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T403f410(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T403f434(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T403f444(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4gb_error */
extern void T58f569(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vuar4gb */
extern T0* T843c1242(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vuar4gb_error */
extern void T41f569(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vuar3gb_error */
extern void T58f568(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vuar3gb */
extern T0* T843c1241(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vuar3gb_error */
extern void T41f568(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T58f567(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T843c1240(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T58f174(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T41f567(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T41f174(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T1588f25(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T58f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T843c1239(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T58f173(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T41f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T41f173(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T1588f24(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_call_info */
extern void T403f301(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].force_last */
extern void T413f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].force */
extern void T781f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].fill_with */
extern void T783f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].extend */
extern void T783f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].resize */
extern void T413f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].aliased_resized_area */
extern T0* T781f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].aliased_resized_area */
extern T0* T783f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].new_capacity */
extern T6 T413f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].extendible */
extern T1 T413f6(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_call_info */
extern T0* T403f65(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].remove_last */
extern void T413f15(TC* ac, T0* C);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].keep_head */
extern void T783f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_count */
extern void T783f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].move_last_cursors_after */
extern void T413f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_next_cursor */
extern void T784f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_after */
extern void T784f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].last */
extern T0* T413f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].is_empty */
extern T1 T413f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T76f190(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T76f218(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T76f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_call_info */
extern void T76f248(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_call_info */
extern T0* T76f87(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T72f1554(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T72f1581(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T1058f23(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1399f26(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T403f396(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T403f420(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T58f565(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T843c1238(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T58f172(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T41f565(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T41f172(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T76f183(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T76f211(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T72f1540(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T72f1568(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T295f20(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1399f25(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T403f135(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T76f175(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_instruction */
extern void T72f1531(TC* ac, T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T265f12(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.fill_inlining_operands */
extern void T72f907(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T284f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].force */
extern void T702f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].fill_with */
extern void T701f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].extend */
extern void T701f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T284f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T284f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_CALL_CONTEXT.set_target */
extern void T362f6(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_inlined_operand */
extern T0* T72f334(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T72f334ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].force_last */
extern void T316f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].force */
extern void T739f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].fill_with */
extern void T738f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].extend */
extern void T738f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].resize */
extern void T316f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].aliased_resized_area */
extern T0* T739f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].aliased_resized_area */
extern T0* T738f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].new_capacity */
extern T6 T316f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].extendible */
extern T1 T316f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_context */
extern void T361f23(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_expression */
extern void T361f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].remove_last */
extern void T316f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].keep_head */
extern void T738f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].set_count */
extern void T738f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].move_last_cursors_after */
extern void T316f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].set_next_cursor */
extern void T740f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].set_after */
extern void T740f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].last */
extern T0* T316f7(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.make */
extern T0* T361c21(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_INLINED_EXPRESSION.make_inlined_expression */
extern void T361f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].is_empty */
extern T1 T316f6(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T72f992(TC* ac, T0* C);
extern T1 T72f992ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.new_call_context */
extern T0* T72f333(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].force_last */
extern void T317f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].force */
extern void T742f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].fill_with */
extern void T741f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].extend */
extern void T741f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].resize */
extern void T317f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].aliased_resized_area */
extern T0* T742f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].aliased_resized_area */
extern T0* T741f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].new_capacity */
extern T6 T317f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].extendible */
extern T1 T317f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_CALL_CONTEXT.set_current_feature */
extern void T362f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_CALL_CONTEXT.tokens */
extern T0* T362f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].remove_last */
extern void T317f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].keep_head */
extern void T741f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].set_count */
extern void T741f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].move_last_cursors_after */
extern void T317f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].set_next_cursor */
extern void T743f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].set_after */
extern void T743f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].last */
extern T0* T317f7(TC* ac, T0* C);
/* ET_DYNAMIC_CALL_CONTEXT.make */
extern T0* T362c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T284c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].set_internal_cursor */
extern void T284f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T284f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T703c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T702f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].make_empty */
extern T0* T701c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T702c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].is_empty */
extern T1 T317f6(TC* ac, T0* C);
/* ET_C_GENERATOR.register_inlined_feature */
extern void T72f906(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].force */
extern void T319f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_put */
extern void T319f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_put */
extern void T319f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_item */
extern T6 T319f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_item */
extern T6 T319f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].hash_position */
extern T6 T319f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.hash_code */
extern T6 T327f48(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.hash_code */
extern T6 T241f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].resize */
extern void T319f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_resize */
extern void T319f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].special_integer_ */
extern T0* T319f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_resize */
extern void T319f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_resize */
extern void T319f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_item */
extern T0* T319f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_item */
extern T0* T319f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_resize */
extern void T319f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_modulus */
extern T6 T319f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T319f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_put */
extern void T319f57(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].search_position */
extern void T319f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_equality_tester */
extern T0* T319f31(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].unset_found_item */
extern void T319f46(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_inlined */
extern void T327f58(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_inlined */
extern void T241f54(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.is_inlinable_procedure */
extern T1 T72f368(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T72f368ot1(TC* ac, T0* a1);
/* ET_COMPOUND.has_inline_separate_instruction */
extern T1 T265f11(TC* ac, T0* C);
/* ET_IDENTIFIER.has_inline_separate_instruction */
extern T1 T188f72(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1819f6(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_inline_separate_instruction */
extern T1 T302f11(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1337f19(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1078f23(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1113f13(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1597f10(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1595f11(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1177f10(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1253f11(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_inline_separate_instruction */
extern T1 T1374f9(TC* ac, T0* C);
/* ET_WHEN_PART.has_inline_separate_instruction */
extern T1 T1371f8(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1237f12(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_inline_separate_instruction */
extern T1 T1189f9(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_inline_separate_instruction */
extern T1 T1186f8(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1593f12(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1592f12(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1590f14(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_inline_separate_instruction */
extern T1 T1589f10(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_inline_separate_instruction */
extern T1 T303f12(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1588f12(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1058f14(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T295f13(TC* ac, T0* C);
/* ET_COMPOUND.has_typed_object_test */
extern T1 T265f10(TC* ac, T0* C);
/* ET_IDENTIFIER.has_typed_object_test */
extern T1 T188f61(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T1819f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_typed_object_test */
extern T1 T2021f6(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_typed_object_test */
extern T1 T2048f7(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_typed_object_test */
extern T1 T2102f8(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_typed_object_test */
extern T1 T2101f9(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_typed_object_test */
extern T1 T2100f7(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T1551f42(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T1550f42(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T1549f42(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T1548f42(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T395f15(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_typed_object_test */
extern T1 T1547f33(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_typed_object_test */
extern T1 T1546f9(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T1544f29(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_typed_object_test */
extern T1 T1612f14(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_typed_object_test */
extern T1 T1327f25(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_typed_object_test */
extern T1 T1327f25p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_typed_object_test */
extern T1 T1075f29(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_typed_object_test */
extern T1 T1075f29p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_typed_object_test */
extern T1 T1274f10(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_typed_object_test */
extern T1 T1611f15(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_typed_object_test */
extern T1 T791f18(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.type */
extern T0* T791f12(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_typed_object_test */
extern T1 T1610f21(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.type */
extern T0* T1610f15(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_typed_object_test */
extern T1 T1599f14(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_typed_object_test */
extern T1 T686f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T1618f25(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_typed_object_test */
extern T1 T2045f6(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_typed_object_test */
extern T1 T1092f12(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_typed_object_test */
extern T1 T1620f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_typed_object_test */
extern T1 T1072f42(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_typed_object_test */
extern T1 T1868f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T1617f31(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T1616f29(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T1615f27(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T1614f32(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T1613f30(TC* ac, T0* C);
/* ET_CALL_AGENT.has_typed_object_test */
extern T1 T1108f19(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_typed_object_test */
extern T1 T1619f10(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_typed_object_test */
extern T1 T1343f20(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_typed_object_test */
extern T1 T1277f21(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_typed_object_test */
extern T1 T1305f15(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_typed_object_test */
extern T1 T1105f16(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_typed_object_test */
extern T1 T332f11(TC* ac, T0* C);
/* ET_OBJECT_TEST.type */
extern T0* T332f15(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_typed_object_test */
extern T1 T1609f14(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_typed_object_test */
extern T1 T1608f16(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_typed_object_test */
extern T1 T1607f15(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_typed_object_test */
extern T1 T1606f14(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_typed_object_test */
extern T1 T676f14(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_typed_object_test */
extern T1 T1603f16(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_typed_object_test */
extern T1 T1602f14(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_typed_object_test */
extern T1 T1601f14(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_typed_object_test */
extern T1 T1600f14(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_typed_object_test */
extern T1 T1598f18(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_typed_object_test */
extern T1 T1340f18(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_typed_object_test */
extern T1 T1250f16(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_typed_object_test */
extern T1 T1368f8(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_typed_object_test */
extern T1 T1365f8(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_typed_object_test */
extern T1 T1234f20(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_typed_object_test */
extern T1 T1183f8(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_typed_object_test */
extern T1 T1180f9(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_typed_object_test */
extern T1 T347f22(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T1558f21(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T1557f21(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_typed_object_test */
extern T1 T1556f22(TC* ac, T0* C);
/* ET_VOID.has_typed_object_test */
extern T1 T1064f22(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_typed_object_test */
extern T1 T1555f22(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_typed_object_test */
extern T1 T1553f23(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_typed_object_test */
extern T1 T1552f23(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_typed_object_test */
extern T1 T1545f22(TC* ac, T0* C);
/* ET_RESULT.has_typed_object_test */
extern T1 T266f20(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_typed_object_test */
extern T1 T298f18(TC* ac, T0* C);
/* ET_CURRENT.has_typed_object_test */
extern T1 T293f19(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_typed_object_test */
extern T1 T305f21(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_typed_object_test */
extern T1 T361f12(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_typed_object_test */
extern T1 T294f15(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_typed_object_test */
extern T1 T302f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_typed_object_test */
extern T1 T264f12(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_typed_object_test */
extern T1 T299f9(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_typed_object_test */
extern T1 T1337f18(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_typed_object_test */
extern T1 T1337f18p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_typed_object_test */
extern T1 T1078f22(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_typed_object_test */
extern T1 T1078f22p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_typed_object_test */
extern T1 T1113f12(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_typed_object_test */
extern T1 T1113f12p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T1597f9(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_typed_object_test */
extern T1 T1595f10(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_typed_object_test */
extern T1 T1177f9(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_typed_object_test */
extern T1 T1253f10(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_typed_object_test */
extern T1 T1374f8(TC* ac, T0* C);
/* ET_WHEN_PART.has_typed_object_test */
extern T1 T1371f7(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_typed_object_test */
extern T1 T1125f11(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_typed_object_test */
extern T1 T1594f10(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_typed_object_test */
extern T1 T1237f11(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_typed_object_test */
extern T1 T1189f8(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_typed_object_test */
extern T1 T1186f7(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_typed_object_test */
extern T1 T1593f11(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_typed_object_test */
extern T1 T1592f11(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_typed_object_test */
extern T1 T1590f13(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_typed_object_test */
extern T1 T1589f9(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_typed_object_test */
extern T1 T303f11(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_typed_object_test */
extern T1 T1588f11(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_typed_object_test */
extern T1 T1058f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T295f12(TC* ac, T0* C);
/* ET_COMPOUND.has_agent */
extern T1 T265f9(TC* ac, T0* C);
/* ET_IDENTIFIER.has_agent */
extern T1 T188f60(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_agent */
extern T1 T1819f4(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_agent */
extern T1 T2021f14(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_agent */
extern T1 T2048f6(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_agent */
extern T1 T2102f7(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_agent */
extern T1 T2101f8(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_agent */
extern T1 T2100f6(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_agent */
extern T1 T1551f40(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_agent */
extern T1 T1550f40(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_agent */
extern T1 T1549f40(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_agent */
extern T1 T1548f40(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_agent */
extern T1 T395f14(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_agent */
extern T1 T1547f32(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_agent */
extern T1 T1546f8(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_agent */
extern T1 T1544f28(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_agent */
extern T1 T1612f13(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_agent */
extern T1 T1327f24(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_agent */
extern T1 T1327f24p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_agent */
extern T1 T1075f28(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_agent */
extern T1 T1075f28p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_agent */
extern T1 T1274f9(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_agent */
extern T1 T1611f14(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_agent */
extern T1 T791f17(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_agent */
extern T1 T1610f20(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_agent */
extern T1 T1599f13(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_agent */
extern T1 T686f14(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T1618f24(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T1617f30(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T1616f28(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T1615f26(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T1614f31(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T1613f29(TC* ac, T0* C);
/* ET_CALL_AGENT.has_agent */
extern T1 T1108f18(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_agent */
extern T1 T1343f19(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_agent */
extern T1 T1277f20(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_agent */
extern T1 T1305f14(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_agent */
extern T1 T1105f15(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_agent */
extern T1 T332f10(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_agent */
extern T1 T1609f13(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_agent */
extern T1 T1608f15(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_agent */
extern T1 T1607f14(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_agent */
extern T1 T1606f13(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_agent */
extern T1 T676f13(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_agent */
extern T1 T1603f15(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_agent */
extern T1 T1602f13(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_agent */
extern T1 T1601f13(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_agent */
extern T1 T1600f13(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_agent */
extern T1 T1598f17(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_agent */
extern T1 T1340f17(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_agent */
extern T1 T1250f15(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_agent */
extern T1 T1368f7(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_agent */
extern T1 T1365f7(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_agent */
extern T1 T1234f19(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_agent */
extern T1 T1183f7(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_agent */
extern T1 T1180f8(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_agent */
extern T1 T347f21(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_agent */
extern T1 T1558f20(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_agent */
extern T1 T1557f20(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_agent */
extern T1 T1556f21(TC* ac, T0* C);
/* ET_VOID.has_agent */
extern T1 T1064f21(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_agent */
extern T1 T1555f21(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_agent */
extern T1 T1553f22(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_agent */
extern T1 T1552f22(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_agent */
extern T1 T1545f21(TC* ac, T0* C);
/* ET_RESULT.has_agent */
extern T1 T266f19(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_agent */
extern T1 T298f17(TC* ac, T0* C);
/* ET_CURRENT.has_agent */
extern T1 T293f18(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_agent */
extern T1 T305f20(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_agent */
extern T1 T361f11(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_agent */
extern T1 T294f14(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_agent */
extern T1 T302f9(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_agent */
extern T1 T264f11(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_agent */
extern T1 T299f8(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_agent */
extern T1 T1337f17(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_agent */
extern T1 T1337f17p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_agent */
extern T1 T1078f21(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_agent */
extern T1 T1078f21p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_agent */
extern T1 T1113f11(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_agent */
extern T1 T1113f11p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_agent */
extern T1 T1597f8(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_agent */
extern T1 T1595f9(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_agent */
extern T1 T1177f8(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_agent */
extern T1 T1253f9(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_agent */
extern T1 T1374f7(TC* ac, T0* C);
/* ET_WHEN_PART.has_agent */
extern T1 T1371f6(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_agent */
extern T1 T1125f10(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_agent */
extern T1 T1594f9(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_agent */
extern T1 T1237f10(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_agent */
extern T1 T1189f7(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_agent */
extern T1 T1186f6(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_agent */
extern T1 T1593f10(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_agent */
extern T1 T1592f10(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_agent */
extern T1 T1590f12(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_agent */
extern T1 T1589f8(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_agent */
extern T1 T303f10(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_agent */
extern T1 T1588f10(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_agent */
extern T1 T1058f12(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_agent */
extern T1 T295f11(TC* ac, T0* C);
/* ET_COMPOUND.has_address_expression */
extern T1 T265f8(TC* ac, T0* C);
/* ET_IDENTIFIER.has_address_expression */
extern T1 T188f59(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_address_expression */
extern T1 T1819f9(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_address_expression */
extern T1 T2021f13(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_address_expression */
extern T1 T2048f5(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_address_expression */
extern T1 T2102f6(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_address_expression */
extern T1 T2101f7(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_address_expression */
extern T1 T2100f5(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_address_expression */
extern T1 T1551f33(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_address_expression */
extern T1 T1550f33(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_address_expression */
extern T1 T1549f33(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_address_expression */
extern T1 T1548f33(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_address_expression */
extern T1 T395f13(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_address_expression */
extern T1 T1547f31(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_address_expression */
extern T1 T1546f30(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_address_expression */
extern T1 T1544f26(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_address_expression */
extern T1 T1612f12(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_address_expression */
extern T1 T1327f23(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_address_expression */
extern T1 T1327f23p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_address_expression */
extern T1 T1075f27(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_address_expression */
extern T1 T1075f27p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_address_expression */
extern T1 T1274f8(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_address_expression */
extern T1 T1611f13(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_address_expression */
extern T1 T791f16(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_address_expression */
extern T1 T1610f19(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_address_expression */
extern T1 T1599f12(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_address_expression */
extern T1 T686f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T1618f23(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_address_expression */
extern T1 T2045f5(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_address_expression */
extern T1 T1092f11(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_address_expression */
extern T1 T1620f11(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_address_expression */
extern T1 T1072f41(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_address_expression */
extern T1 T1868f5(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T1617f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T1616f27(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T1615f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T1614f30(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T1613f28(TC* ac, T0* C);
/* ET_CALL_AGENT.has_address_expression */
extern T1 T1108f17(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_address_expression */
extern T1 T1619f9(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_address_expression */
extern T1 T1343f18(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_address_expression */
extern T1 T1277f19(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_address_expression */
extern T1 T1305f13(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_address_expression */
extern T1 T1105f14(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_address_expression */
extern T1 T332f9(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_address_expression */
extern T1 T1609f12(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_address_expression */
extern T1 T1608f14(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_address_expression */
extern T1 T1607f13(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_address_expression */
extern T1 T1606f12(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_address_expression */
extern T1 T676f12(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_address_expression */
extern T1 T1603f14(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_address_expression */
extern T1 T1602f12(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_address_expression */
extern T1 T1601f12(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_address_expression */
extern T1 T1600f12(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_address_expression */
extern T1 T1598f16(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_address_expression */
extern T1 T1340f16(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_address_expression */
extern T1 T1250f14(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_address_expression */
extern T1 T1368f6(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_address_expression */
extern T1 T1365f6(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_address_expression */
extern T1 T1234f18(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_address_expression */
extern T1 T1183f6(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_address_expression */
extern T1 T1180f7(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_address_expression */
extern T1 T347f20(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_address_expression */
extern T1 T1558f19(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_address_expression */
extern T1 T1557f19(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_address_expression */
extern T1 T1556f20(TC* ac, T0* C);
/* ET_VOID.has_address_expression */
extern T1 T1064f20(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_address_expression */
extern T1 T1555f20(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_address_expression */
extern T1 T1553f21(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_address_expression */
extern T1 T1552f21(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_address_expression */
extern T1 T1545f20(TC* ac, T0* C);
/* ET_RESULT.has_address_expression */
extern T1 T266f18(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_address_expression */
extern T1 T298f16(TC* ac, T0* C);
/* ET_CURRENT.has_address_expression */
extern T1 T293f17(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_address_expression */
extern T1 T305f19(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_address_expression */
extern T1 T361f10(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_address_expression */
extern T1 T294f13(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_address_expression */
extern T1 T302f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_address_expression */
extern T1 T264f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_address_expression */
extern T1 T299f7(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_address_expression */
extern T1 T1337f16(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_address_expression */
extern T1 T1337f16p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_address_expression */
extern T1 T1078f20(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_address_expression */
extern T1 T1078f20p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_address_expression */
extern T1 T1113f10(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_address_expression */
extern T1 T1113f10p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_address_expression */
extern T1 T1597f7(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_address_expression */
extern T1 T1595f8(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_address_expression */
extern T1 T1177f7(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_address_expression */
extern T1 T1253f8(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_address_expression */
extern T1 T1374f6(TC* ac, T0* C);
/* ET_WHEN_PART.has_address_expression */
extern T1 T1371f5(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_address_expression */
extern T1 T1125f9(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_address_expression */
extern T1 T1594f8(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_address_expression */
extern T1 T1237f9(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_address_expression */
extern T1 T1189f6(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_address_expression */
extern T1 T1186f5(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_address_expression */
extern T1 T1593f9(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_address_expression */
extern T1 T1592f9(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_address_expression */
extern T1 T1590f11(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_address_expression */
extern T1 T1589f7(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_address_expression */
extern T1 T303f9(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_address_expression */
extern T1 T1588f9(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_address_expression */
extern T1 T1058f11(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_address_expression */
extern T1 T295f10(TC* ac, T0* C);
/* ET_COMPOUND.has_result */
extern T1 T265f7(TC* ac, T0* C);
/* ET_IDENTIFIER.has_result */
extern T1 T188f58(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_result */
extern T1 T1819f8(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_result */
extern T1 T2021f9(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_result */
extern T1 T2048f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_result */
extern T1 T2102f5(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_result */
extern T1 T2101f24(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_result */
extern T1 T2100f20(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_result */
extern T1 T1551f27(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_result */
extern T1 T1550f27(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_result */
extern T1 T1549f27(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_result */
extern T1 T1548f27(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_result */
extern T1 T395f12(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_result */
extern T1 T1547f30(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_result */
extern T1 T1546f29(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_result */
extern T1 T1544f24(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_result */
extern T1 T1612f11(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_result */
extern T1 T1327f22(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_result */
extern T1 T1327f22p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_result */
extern T1 T1075f26(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_result */
extern T1 T1075f26p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_result */
extern T1 T1274f7(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_result */
extern T1 T1611f12(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_result */
extern T1 T791f15(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_result */
extern T1 T1610f18(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_result */
extern T1 T1599f11(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_result */
extern T1 T686f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T1618f22(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_result */
extern T1 T2045f4(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_result */
extern T1 T1092f10(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_result */
extern T1 T1620f10(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_result */
extern T1 T1072f40(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_result */
extern T1 T1868f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T1617f28(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T1616f26(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_result */
extern T1 T1615f24(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_result */
extern T1 T1614f29(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_result */
extern T1 T1613f27(TC* ac, T0* C);
/* ET_CALL_AGENT.has_result */
extern T1 T1108f16(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_result */
extern T1 T1619f8(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_result */
extern T1 T1343f17(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_result */
extern T1 T1277f18(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_result */
extern T1 T1305f12(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_result */
extern T1 T1105f13(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_result */
extern T1 T332f8(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_result */
extern T1 T1609f11(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_result */
extern T1 T1608f13(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_result */
extern T1 T1607f12(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_result */
extern T1 T1606f11(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_result */
extern T1 T676f11(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_result */
extern T1 T1603f13(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_result */
extern T1 T1602f11(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_result */
extern T1 T1601f11(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_result */
extern T1 T1600f11(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_result */
extern T1 T1598f15(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_result */
extern T1 T1340f15(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_result */
extern T1 T1250f13(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_result */
extern T1 T1368f5(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_result */
extern T1 T1365f5(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_result */
extern T1 T1234f17(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_result */
extern T1 T1183f5(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_result */
extern T1 T1180f6(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_result */
extern T1 T347f19(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_result */
extern T1 T1558f18(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_result */
extern T1 T1557f18(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_result */
extern T1 T1556f19(TC* ac, T0* C);
/* ET_VOID.has_result */
extern T1 T1064f19(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_result */
extern T1 T1555f19(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_result */
extern T1 T1553f20(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_result */
extern T1 T1552f20(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_result */
extern T1 T1545f19(TC* ac, T0* C);
/* ET_RESULT.has_result */
extern T1 T266f17(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_result */
extern T1 T298f15(TC* ac, T0* C);
/* ET_CURRENT.has_result */
extern T1 T293f16(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_result */
extern T1 T305f18(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_result */
extern T1 T361f9(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_result */
extern T1 T294f12(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_result */
extern T1 T302f7(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_result */
extern T1 T264f9(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_result */
extern T1 T299f6(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_result */
extern T1 T1337f15(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_result */
extern T1 T1337f15p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_result */
extern T1 T1078f19(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_result */
extern T1 T1078f19p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_result */
extern T1 T1113f9(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_result */
extern T1 T1113f9p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_result */
extern T1 T1597f6(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_result */
extern T1 T1595f7(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_result */
extern T1 T1177f6(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_result */
extern T1 T1253f7(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_result */
extern T1 T1374f5(TC* ac, T0* C);
/* ET_WHEN_PART.has_result */
extern T1 T1371f4(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_result */
extern T1 T1125f8(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_result */
extern T1 T1594f7(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_result */
extern T1 T1237f8(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_result */
extern T1 T1189f5(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_result */
extern T1 T1186f4(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_result */
extern T1 T1593f8(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_result */
extern T1 T1592f8(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_result */
extern T1 T1590f10(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_result */
extern T1 T1589f6(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_result */
extern T1 T303f8(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_result */
extern T1 T1588f8(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_result */
extern T1 T1058f10(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_result */
extern T1 T295f9(TC* ac, T0* C);
/* ET_COMPOUND.nested_instruction_count */
extern T6 T265f6(TC* ac, T0* C);
/* ET_IDENTIFIER.nested_instruction_count */
extern T6 T188f71(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T1819f7(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.nested_instruction_count */
extern T6 T302f6(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.nested_instruction_count */
extern T6 T1337f14(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.nested_instruction_count */
extern T6 T1078f18(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.nested_instruction_count */
extern T6 T1113f8(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T1597f12(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.nested_instruction_count */
extern T6 T1595f14(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.nested_instruction_count */
extern T6 T1177f5(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.nested_instruction_count */
extern T6 T1253f6(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.nested_instruction_count */
extern T6 T1374f4(TC* ac, T0* C);
/* ET_WHEN_PART.nested_instruction_count */
extern T6 T1371f3(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.nested_instruction_count */
extern T6 T1237f7(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.nested_instruction_count */
extern T6 T1189f4(TC* ac, T0* C);
/* ET_ELSEIF_PART.nested_instruction_count */
extern T6 T1186f3(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.nested_instruction_count */
extern T6 T1593f16(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.nested_instruction_count */
extern T6 T1592f15(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.nested_instruction_count */
extern T6 T1590f9(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.nested_instruction_count */
extern T6 T1589f5(TC* ac, T0* C);
/* ET_ASSIGNMENT.nested_instruction_count */
extern T6 T303f7(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.nested_instruction_count */
extern T6 T1588f7(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.nested_instruction_count */
extern T6 T1058f9(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T295f8(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T520f5(TC* ac, T0* C);
/* ET_C_GENERATOR.are_inlinable_call_operands */
extern T1 T72f571(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.is_inlinable_argument */
extern T1 T72f573(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T72f861(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T72f905(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T72f904(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T72f990(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T72f741(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T72f752(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_real_n_ref_procedure_call */
extern void T72f903(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_set_item_call */
extern void T72f989(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T72f913(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_pointer_access */
extern void T72f764(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_pointer_name */
extern void T72f774(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T72f902(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_fast_call_call */
extern void T72f988(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T72f987(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T72f1206(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T72f1206ot1(TC* ac, T0* a1);
extern T1 T72f1206ot2(TC* ac, T0* a1);
extern T1 T72f1206ot3(TC* ac, T0* a1);
extern T1 T72f1206ot4(TC* ac, T0* a1);
extern T1 T72f1206ot5(TC* ac, T0* a1);
extern T1 T72f1206ot6(TC* ac, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.keep_first */
extern void T267f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T667f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T666f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].set_count */
extern void T666f10(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_tuple_label */
extern void T72f1207(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_identifier */
extern void T72f864(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T269f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].force */
extern void T632f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].fill_with */
extern void T633f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].extend */
extern void T633f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T269f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].aliased_resized_area */
extern T0* T632f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].aliased_resized_area */
extern T0* T633f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T269f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T269f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_qualified_call_expression */
extern void T72f840(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T298f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].force_last */
extern void T277f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T690f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T689f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T689f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T277f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T690f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T689f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].new_capacity */
extern T6 T277f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].extendible */
extern T1 T277f8(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_qualified_call_expression */
extern T0* T72f331(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T298f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].remove_last */
extern void T277f13(TC* ac, T0* C);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T689f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T689f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].move_last_cursors_after */
extern void T277f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].set_next_cursor */
extern void T691f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].set_after */
extern void T691f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].last */
extern T0* T277f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].is_empty */
extern T1 T277f10(TC* ac, T0* C);
/* ET_C_GENERATOR.new_tuple_label */
extern T0* T72f562(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_identifier */
extern T0* T72f570(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_name */
extern void T188f134(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T188f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].remove_last */
extern void T269f17(TC* ac, T0* C);
/* SPECIAL [ET_IDENTIFIER].keep_head */
extern void T633f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].set_count */
extern void T633f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].move_last_cursors_after */
extern void T269f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T668f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].set_after */
extern void T668f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].last */
extern T0* T269f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].is_empty */
extern T1 T269f7(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T281f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T281c13(TC* ac, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T229f4(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T495f52(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T72f725(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].replace */
extern void T270f11(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.conforming_type_set */
extern T0* T72f561(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T327f42(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T241f31(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_ref_procedure_call */
extern void T72f901(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_set_item_call */
extern void T72f986(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T72f900(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T72f985(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_c_call */
extern void T72f1205(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_procedure_call */
extern void T72f899(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unmark_object_call */
extern void T72f984(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unlock_marking_call */
extern void T72f983(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_at_call */
extern void T72f982(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_call */
extern void T72f981(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_at_call */
extern void T72f980(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_call */
extern void T72f979(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_at_call */
extern void T72f978(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_call */
extern void T72f977(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_at_call */
extern void T72f976(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_call */
extern void T72f975(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_at_call */
extern void T72f974(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_call */
extern void T72f973(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_at_call */
extern void T72f972(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_call */
extern void T72f971(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_at_call */
extern void T72f970(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_call */
extern void T72f969(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_at_call */
extern void T72f968(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_call */
extern void T72f967(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_at_call */
extern void T72f966(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_call */
extern void T72f965(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_at_call */
extern void T72f964(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_call */
extern void T72f963(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_at_call */
extern void T72f962(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_call */
extern void T72f961(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_at_call */
extern void T72f960(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_call */
extern void T72f959(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_at_call */
extern void T72f958(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_call */
extern void T72f957(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_at_call */
extern void T72f956(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_call */
extern void T72f955(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_at_call */
extern void T72f954(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_call */
extern void T72f953(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_mark_object_call */
extern void T72f952(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_lock_marking_call */
extern void T72f951(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T72f898(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T72f950(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_procedure_call */
extern void T72f897(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_set_item_call */
extern void T72f949(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_procedure_call */
extern void T72f896(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_free_call */
extern void T72f948(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T72f895(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T72f947(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_procedure_call */
extern void T72f894(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_set_item_call */
extern void T72f946(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_procedure_call */
extern void T72f893(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_set_item_call */
extern void T72f945(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T72f892(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T72f944(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T72f944ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_minus */
extern void T72f917(TC* ac, T0* C);
/* ET_C_GENERATOR.print_plus */
extern void T72f914(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T496f32(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T1529f8(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T281f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T523f9(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T496f56(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T495f58(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T323f40(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T338f41(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_expanded */
extern T1 T228f30(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.has_expanded */
extern T1 T342f10(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_redefined_copy_routine */
extern T1 T496f13(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_redefined_copy_routine */
extern T1 T495f13(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_redefined_copy_routine */
extern T1 T323f15(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_redefined_copy_routine */
extern T1 T338f16(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_redefined_copy_routine */
extern T1 T228f15(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T495f32(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T338f47(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_item_nested_custom_standard_copy_routine */
extern T1 T338f50(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T338f47p1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T323f47(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T323f47p1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T228f43(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T496f42(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T495f42(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_special */
extern T1 T338f46(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T323f46(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_special */
extern T1 T228f42(TC* ac, T0* C);
/* ET_CLASS.is_type_class */
extern T1 T79f188(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T72f943(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T72f835(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T72f835ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T72f742(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T72f773(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_procedure_target_expression */
extern void T72f881(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_separate_qualified_call_instruction */
extern void T72f880(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_procedure_target_operand */
extern void T72f879(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_INSTRUCTION.is_call_agent */
extern T1 T2020f7(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T1588f17(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T295f7(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T306f6(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T306f5(TC* ac, T0* C);
/* ET_C_GENERATOR.print_position */
extern void T72f878(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_INSTRUCTION.position */
extern T0* T2020f5(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T1588f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T295f14(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.position */
extern T0* T306f4(TC* ac, T0* C);
/* ET_C_GENERATOR.line_generation_mode */
extern T1 T72f374(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_arguments */
extern void T306f10(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_name */
extern void T306f9(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_target */
extern void T306f8(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T309f12(TC* ac, T0* C, T6 a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_arguments */
extern void T309f11(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_name */
extern void T309f10(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_target */
extern void T309f9(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T294f22(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T294f9(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T294f21(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T718f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T716f4(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T294f8(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T294f20(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].keep_head */
extern void T718f4(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].keep_head */
extern void T716f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].set_count */
extern void T716f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_separate_call_object_name */
extern void T72f850(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_and_then */
extern void T72f829(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T306f3(TC* ac, T0* C);
/* ET_C_GENERATOR.formal_argument */
extern T0* T72f297(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].put_last */
extern void T269f16(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_inline_separate_argument */
extern T1 T188f32(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.add_separate_arguments */
extern void T2102f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_FROM_EXPRESSION.add_separate_arguments */
extern void T2101f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.add_separate_arguments */
extern void T2100f23(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_CAST_EXPRESSION.add_separate_arguments */
extern void T2048f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BINARY_INTEGER_CONSTANT.add_separate_arguments */
extern void T1551f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OCTAL_INTEGER_CONSTANT.add_separate_arguments */
extern void T1550f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.add_separate_arguments */
extern void T1549f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.add_separate_arguments */
extern void T1548f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_INTEGER_CONSTANT.add_separate_arguments */
extern void T395f69(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.add_separate_arguments */
extern void T1547f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.add_separate_arguments */
extern void T1546f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C3_CHARACTER_CONSTANT.add_separate_arguments */
extern void T1544f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ITERATION_CURSOR.add_separate_arguments */
extern void T1612f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.add_separate_arguments */
extern void T1327f41(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_EXPRESSION.add_separate_arguments */
extern void T1075f42(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.add_separate_arguments */
extern void T1611f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.add_separate_arguments */
extern void T791f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_OBJECT_TEST.add_separate_arguments */
extern void T1610f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.add_separate_arguments */
extern void T1599f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.add_separate_arguments */
extern void T686f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T1618f47(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T1617f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T1616f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T1615f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T1614f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T1613f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CALL_AGENT.add_separate_arguments */
extern void T1108f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_STRIP_EXPRESSION.add_separate_arguments */
extern void T1343f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_ARRAY.add_separate_arguments */
extern void T1277f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIZED_EXPRESSION.add_separate_arguments */
extern void T1305f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACKET_EXPRESSION.add_separate_arguments */
extern void T1105f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST.add_separate_arguments */
extern void T332f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.add_separate_arguments */
extern void T1609f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.add_separate_arguments */
extern void T1608f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_TYPE.add_separate_arguments */
extern void T1607f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_EQUALITY_EXPRESSION.add_separate_arguments */
extern void T1606f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EQUALITY_EXPRESSION.add_separate_arguments */
extern void T676f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.add_separate_arguments */
extern void T1603f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.add_separate_arguments */
extern void T1602f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.add_separate_arguments */
extern void T1601f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.add_separate_arguments */
extern void T1600f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_EXPRESSION.add_separate_arguments */
extern void T1598f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_STATIC_CALL_EXPRESSION.add_separate_arguments */
extern void T1340f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INSPECT_EXPRESSION.add_separate_arguments */
extern void T1250f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IF_EXPRESSION.add_separate_arguments */
extern void T1234f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATE_EXPRESSION.add_separate_arguments */
extern void T347f40(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.add_separate_arguments */
extern void T1558f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.add_separate_arguments */
extern void T1557f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FALSE_CONSTANT.add_separate_arguments */
extern void T1556f44(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VOID.add_separate_arguments */
extern void T1064f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TRUE_CONSTANT.add_separate_arguments */
extern void T1555f44(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.add_separate_arguments */
extern void T1553f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_REAL_CONSTANT.add_separate_arguments */
extern void T1552f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_MANIFEST_STRING.add_separate_arguments */
extern void T1545f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT.add_separate_arguments */
extern void T266f40(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_EXPRESSION.add_separate_arguments */
extern void T298f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_TUPLE.add_separate_arguments */
extern void T305f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_INLINED_EXPRESSION.add_separate_arguments */
extern void T361f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.add_separate_arguments */
extern void T188f137(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT.add_separate_arguments */
extern void T293f39(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].wipe_out */
extern void T269f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].move_all_cursors_after */
extern void T269f19(TC* ac, T0* C);
/* ET_C_GENERATOR.print_separate_call_name */
extern void T72f847(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_call_name_in_comment */
extern void T72f739(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T306f2(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.separate_target */
extern T0* T1593f18(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.separate_target */
extern T0* T1592f17(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T306f1(TC* ac, T0* C);
/* ET_C_GENERATOR.current_closure */
extern T0* T72f319(TC* ac, T0* C);
extern T1 T72f319ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T72f817(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T305f35(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T72f877(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_name */
extern void T72f802(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T72f802ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T72f309(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.is_current */
extern T1 T2046f5(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_current */
extern T1 T1620f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_current */
extern T1 T1072f39(TC* ac, T0* C);
/* ET_CALL_AGENT.is_call_agent */
extern T1 T1108f30(TC* ac, T0* C);
/* ET_C_GENERATOR.register_polymorphic_called_features */
extern void T72f876(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_generated */
extern void T337f19(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_generated */
extern void T334f18(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_force_result_boxing */
extern void T334f17(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T72f795(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T72f769(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T72f804(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T72f804ac1(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T72f804ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_typed_default_entity_value */
extern void T72f875(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T72f720(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T72f831(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_separate_qualified_call_expression */
extern void T72f874(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T72f834(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T72f834ac1(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
extern T1 T72f834ot1(TC* ac, T0* a1);
extern T1 T72f834ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_query_call */
extern void T72f860(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T72f860ot1(TC* ac, T0* a1);
extern T1 T72f860ot2(TC* ac, T0* a1);
extern T1 T72f860ot3(TC* ac, T0* a1);
extern T1 T72f860ot4(TC* ac, T0* a1);
extern T1 T72f860ot5(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_inlined_query_call */
extern void T72f891(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T72f891ot1(TC* ac, T0* a1);
extern T1 T72f891ot2(TC* ac, T0* a1);
extern T1 T72f891ot3(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].replace */
extern void T283f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].item */
extern T0* T283f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_EXPRESSION].is_empty */
extern T1 T283f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T72f890(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T72f942(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T72f1204(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T72f1203(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T72f1202(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_deferred_call */
extern void T72f1201(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_attached_call */
extern void T72f1200(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T72f1199(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1563f50(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T948f52(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable */
extern T1 T79f144(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T72f1198(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_default_call */
extern void T72f1197(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T72f941(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T72f1196(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T72f1195(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T72f1195ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T72f940(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T72f1194(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T72f1193(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T72f1193ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T72f1192(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T72f723(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T72f783(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_name */
extern void T72f751(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T72f1191(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T72f722(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T72f782(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T72f1190(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_query_call */
extern void T72f939(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_positive_infinity_call */
extern void T72f1189(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_negative_infinity_call */
extern void T72f1188(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_nan_call */
extern void T72f1187(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_item_call */
extern void T72f1186(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_query_call */
extern void T72f938(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_real_call */
extern void T72f1185(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_64_call */
extern void T72f1184(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_call */
extern void T72f1183(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_to_double_call */
extern void T72f1182(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_quotient_call */
extern void T72f1181(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_product_call */
extern void T72f1180(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_power_call */
extern void T72f1179(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_plus_call */
extern void T72f1178(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_opposite_call */
extern void T72f1177(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_minus_call */
extern void T72f1176(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_positive_infinity_call */
extern void T72f1175(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_negative_infinity_call */
extern void T72f1174(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_nan_call */
extern void T72f1173(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_less_call */
extern void T72f1172(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_c_call */
extern void T72f912(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T1 a4, T0* a5, T1 a6);
/* ET_C_GENERATOR.total_order_on_reals_mode */
extern T1 T72f382(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_minimum_number_call */
extern void T72f1171(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_maximum_number_call */
extern void T72f1170(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_less_equal_call */
extern void T72f1169(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_less_call */
extern void T72f1168(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_greater_equal_call */
extern void T72f1167(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_greater_call */
extern void T72f1166(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_equal_call */
extern void T72f1165(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_identity_call */
extern void T72f1164(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_64_call */
extern void T72f1163(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_32_call */
extern void T72f1162(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_64_call */
extern void T72f1161(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_32_call */
extern void T72f1160(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_query_call */
extern void T72f937(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_item_call */
extern void T72f1159(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T72f936(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T72f1158(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T72f1157(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T72f1156(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T72f1155(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T72f935(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T72f1154(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T72f1153(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T72f1152(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T72f1151(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T72f1150(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T72f1149(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T72f1148(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T72f1147(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T72f1146(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T72f1145(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T72f1144(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_64_bits_call */
extern void T72f1143(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T72f1142(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T72f1141(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T72f1140(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T72f1139(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T72f934(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T72f1138(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_query_call */
extern void T72f933(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_id_from_name_call */
extern void T72f1137(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_conforms_to_call */
extern void T72f1136(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_storable_version_of_type_call */
extern void T72f1135(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_offset_call */
extern void T72f1134(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_call */
extern void T72f1133(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_call */
extern void T72f1132(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_at_call */
extern void T72f1131(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_call */
extern void T72f1130(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_at_call */
extern void T72f1129(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_call */
extern void T72f1128(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_offset_call */
extern void T72f1127(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_call */
extern void T72f1126(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_at_call */
extern void T72f1125(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_call */
extern void T72f1124(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_persistent_field_count_of_type_call */
extern void T72f1123(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_once_objects_call */
extern void T72f1122(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_object_size_call */
extern void T72f1121(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_type_instance_of_call */
extern void T72f1120(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_tuple_instance_of_call */
extern void T72f1119(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_special_of_reference_instance_of_call */
extern void T72f1118(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_instance_of_call */
extern void T72f1117(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_at_call */
extern void T72f1116(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_call */
extern void T72f1115(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_at_call */
extern void T72f1114(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_call */
extern void T72f1113(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_at_call */
extern void T72f1112(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_call */
extern void T72f1111(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_at_call */
extern void T72f1110(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_call */
extern void T72f1109(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_type_call */
extern void T72f1108(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_call */
extern void T72f1107(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_type_call */
extern void T72f1106(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_or_basic_type_call */
extern void T72f1105(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_call */
extern void T72f1104(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_expanded_call */
extern void T72f1103(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_copy_semantics_item_call */
extern void T72f1102(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_call */
extern void T72f1101(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_object_marked_call */
extern void T72f1100(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_transient_of_type_call */
extern void T72f1099(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_expanded_of_type_call */
extern void T72f1098(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_expanded_call */
extern void T72f1097(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_copy_semantics_field_call */
extern void T72f1096(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_attached_type_call */
extern void T72f1095(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_at_call */
extern void T72f1094(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_call */
extern void T72f1093(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_at_call */
extern void T72f1092(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_call */
extern void T72f1091(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_at_call */
extern void T72f1090(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_call */
extern void T72f1089(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_at_call */
extern void T72f1088(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_call */
extern void T72f1087(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generic_parameter_count_call */
extern void T72f1086(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_8_of_type_call */
extern void T72f1085(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_of_type_call */
extern void T72f1084(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_8_of_type_call */
extern void T72f1083(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_of_type_call */
extern void T72f1082(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_type_of_type_call */
extern void T72f1081(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_static_type_of_type_call */
extern void T72f1080(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_offset_of_type_call */
extern void T72f1079(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_name_of_type_call */
extern void T72f1078(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_count_of_type_call */
extern void T72f1077(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_eif_gen_param_id_call */
extern void T72f1076(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_at_offset_call */
extern void T72f1075(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_call */
extern void T72f1074(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_detachable_type_call */
extern void T72f1073(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_compiler_version_call */
extern void T72f1072(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_check_assert_call */
extern void T72f1071(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_at_call */
extern void T72f1070(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_call */
extern void T72f1069(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_at_call */
extern void T72f1068(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_call */
extern void T72f1067(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_at_call */
extern void T72f1066(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_call */
extern void T72f1065(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_attached_type_call */
extern void T72f1064(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_query_call */
extern void T72f932(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_item_call */
extern void T72f1063(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_query_call */
extern void T72f931(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_64_call */
extern void T72f1062(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_32_call */
extern void T72f1061(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_call */
extern void T72f1060(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_double_call */
extern void T72f1059(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_32_call */
extern void T72f1058(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_8_call */
extern void T72f1057(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_quotient_call */
extern void T72f1056(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_product_call */
extern void T72f1055(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_power_call */
extern void T72f1054(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_plus_call */
extern void T72f1053(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_opposite_call */
extern void T72f1052(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_minus_call */
extern void T72f1051(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_is_less_call */
extern void T72f1050(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_remainder_call */
extern void T72f1049(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_quotient_call */
extern void T72f1048(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_identity_call */
extern void T72f1047(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_xor_call */
extern void T72f1046(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_right_call */
extern void T72f1045(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_left_call */
extern void T72f1044(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_or_call */
extern void T72f1043(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_not_call */
extern void T72f1042(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_and_call */
extern void T72f1041(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_64_call */
extern void T72f1040(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_32_call */
extern void T72f1039(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_16_call */
extern void T72f1038(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_8_call */
extern void T72f1037(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_64_call */
extern void T72f1036(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_32_call */
extern void T72f1035(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_16_call */
extern void T72f1034(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_8_call */
extern void T72f1033(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_query_call */
extern void T72f930(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_call */
extern void T72f1032(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_is_object_id_of_current_call */
extern void T72f1031(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_id_object_call */
extern void T72f1030(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_current_object_id_call */
extern void T72f1029(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T72f929(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T72f1028(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_fast_item_call */
extern void T72f1027(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T72f928(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T72f1026(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T72f1025(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T72f1024(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T72f1023(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T72f1022(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T72f1021(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_query_call */
extern void T72f927(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_item_call */
extern void T72f1020(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_query_call */
extern void T72f926(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_32_call */
extern void T72f1019(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_8_call */
extern void T72f1018(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_natural_32_code_call */
extern void T72f1017(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_code_call */
extern void T72f1016(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_query_call */
extern void T72f925(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_item_call */
extern void T72f1015(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T72f924(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T72f1014(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T72f1013(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T72f1012(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T72f1011(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T72f1010(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T72f1009(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T72f1008(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T72f923(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_string_call */
extern void T72f1007(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T72f1006(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T72f1005(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T72f922(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_twin_call */
extern void T72f1004(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_call */
extern void T72f1003(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T72f856(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call_with_reference */
extern void T72f885(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
extern T1 T72f885ot1(TC* ac, T0* a1);
extern T1 T72f885ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_times */
extern void T72f916(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_offset_access */
extern void T72f915(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_offset_name */
extern void T72f997(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call_with_expanded */
extern void T72f884(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_C_GENERATOR.print_equal_to */
extern void T72f826(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_redefined_is_equal_routine */
extern T1 T496f12(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_redefined_is_equal_routine */
extern T1 T495f12(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_redefined_is_equal_routine */
extern T1 T338f17(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_redefined_is_equal_routine */
extern T1 T323f17(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_redefined_is_equal_routine */
extern T1 T228f16(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T496f30(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T495f30(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T338f44(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_item_nested_custom_standard_is_equal_routine */
extern T1 T338f48(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T338f44p1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T323f44(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T323f44p1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T228f40(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T281f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T281f10p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T281f11(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T281f11p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T72f1002(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_is_equal_call */
extern void T72f830(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T72f1001(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T72f1000(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T72f999(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T287f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T287f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T287f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T287f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T287f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T287f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T287f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T287f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T287f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T287f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T287f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T287f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T287f47(TC* ac, T0* C);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T72f889(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_FUNCTION_TYPE.is_self_initializing */
extern T1 T496f61(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_self_initializing */
extern T1 T495f61(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_self_initializing */
extern T1 T342f11(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_self_initializing */
extern T1 T338f33(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_self_initializing */
extern T1 T323f33(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_self_initializing */
extern T1 T228f51(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_self_initializing_code */
extern T1 T382f54(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T267f12(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_value_name */
extern void T72f745(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T313f43(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T313f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T313f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T313f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T313f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T313f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T313f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T313f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T313f37(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T313f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T313f63(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].aliased_resized_area */
extern T0* T729f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].aliased_resized_area */
extern T0* T727f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T313f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T313f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T313f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T313f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T313f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T313f54(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].force */
extern void T729f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTANT].fill_with */
extern void T727f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].extend */
extern void T727f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T313f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T313f46(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_special_item */
extern T1 T327f38(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_once_function_call */
extern void T72f859(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_once_function_call */
extern T0* T72f859ac1(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_adapted_once_function_call */
extern T0* T72f859ac2(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.register_once_feature */
extern void T72f887(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].force_last */
extern void T311f39(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_put */
extern void T311f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_put */
extern void T311f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_put */
extern void T311f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].resize */
extern void T311f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_resize */
extern void T311f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].special_integer_ */
extern T0* T311f32(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_resize */
extern void T311f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_resize */
extern void T311f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_resize */
extern void T311f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_modulus */
extern T6 T311f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_capacity */
extern T6 T311f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_put */
extern void T311f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].unset_found_item */
extern void T311f43(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern void T72f858(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern T0* T72f858ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern T0* T72f858ac2(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.is_inlinable_function */
extern T1 T72f373(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T72f373ot1(TC* ac, T0* a1);
extern T1 T72f373ot2(TC* ac, T0* a1);
extern T1 T72f373ot3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T284f17(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T72f873(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T305f32(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T305f11(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attachment_operand */
extern void T72f812(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T72f812ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T72f761(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T72f759(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_expanded_types */
extern void T281f22(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_twin_feature_name */
extern void T72f841(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_twin_feature_name */
extern T0* T72f330(TC* ac, T0* C);
/* ET_IDENTIFIER.set_feature_name */
extern void T188f132(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T72f872(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T2102f21(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_call_agent */
extern T1 T945f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T1608f12(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T1603f12(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T1105f10(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T298f7(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T309f5(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T309f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T283f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T283f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T283f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T283f8(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_writable */
extern void T72f813(TC* ac, T0* C, T0* a1);
extern T1 T72f813ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_attribute_access */
extern void T72f724(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_local_variable */
extern void T72f846(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T72f869(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_inline_separate_argument */
extern void T72f845(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_item */
extern void T72f844(TC* ac, T0* C, T0* a1);
extern T1 T72f844ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T72f843(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_volatile */
extern void T72f866(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].replace */
extern void T272f12(TC* ac, T0* C, T1 a1, T6 a2);
/* ET_C_GENERATOR.temp_variable_type */
extern T0* T72f370(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_known */
extern T1 T72f369(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_operand */
extern void T72f871(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.is_twin_needed_in_attachment */
extern T1 T72f380(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T72f814(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T72f177(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].force_last */
extern void T272f13(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [BOOLEAN].resize */
extern void T272f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].new_capacity */
extern T6 T272f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].extendible */
extern T1 T272f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T270f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T670f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].fill_with */
extern void T669f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].extend */
extern void T669f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T270f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T670f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T669f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T270f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].extendible */
extern T1 T270f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T188f128(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T72f569(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T72f870(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_free */
extern T1 T72f372(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T188f19(TC* ac, T0* C);
/* ET_C_GENERATOR.fill_call_operands */
extern void T72f798(TC* ac, T0* C, T6 a1);
extern T1 T72f798ot1(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T283f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T283f5(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T72f839(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.has_field_access */
extern T1 T334f14(TC* ac, T0* C, T0* a1);
extern T1 T334f14ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.in_call_target */
extern T1 T72f328(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.query_call */
extern T0* T327f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].value */
extern T0* T650f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_item */
extern T0* T650f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].position_of_key */
extern T6 T650f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.query_call */
extern T0* T241f28(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T309f3(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T309f2(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T309f1(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.process */
extern void T2101f29(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1399f123(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T423f64(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T417f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T76f578(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T76f581(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T76f483(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T58f482(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T843c1157(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T41f482(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_dotnet_creation_procedure_call_expression_validity */
extern void T76f530(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_expression_validity */
extern void T76f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T76f529ot1(TC* ac, T0* a1);
extern T1 T76f529ot2(TC* ac, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T2101f27(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.type_position */
extern T0* T347f26(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T347f24(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.creation_call */
extern T0* T2101f26(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T403f466(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T403f469(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T403f288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_dotnet_creation_procedure_call_expression_validity */
extern void T403f345(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_expression_validity */
extern void T403f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T403f344ot1(TC* ac, T0* a1);
extern T1 T403f344ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_convert_from_expression */
extern void T72f1602(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_from_expression */
extern void T72f1605(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_expression */
extern void T72f756(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T2100f22(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1399f122(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T423f63(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T417f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T76f577(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T76f580(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T403f465(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T403f468(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_builtin_expression */
extern void T72f1601(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_builtin_expression */
extern void T72f1604(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.process */
extern void T1551f66(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1399f97(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T76f346(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T76f452(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T76f239(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T1551f71(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T1550f71(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T1549f71(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T1548f71(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T395f73(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.sign */
extern T0* T1551f2(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.sign */
extern T0* T1550f2(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.sign */
extern T0* T1549f2(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.sign */
extern T0* T1548f2(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.sign */
extern T0* T395f2(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_binary */
extern T1 T1551f26(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T1550f26(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T1549f26(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T1548f26(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T395f33(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1551f25(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1550f25(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1549f25(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1548f25(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T395f32(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T76f372(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T76f460(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].force_last */
extern void T404f49(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_put */
extern void T404f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].force */
extern void T764f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].fill_with */
extern void T763f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].extend */
extern void T763f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_put */
extern void T404f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_put */
extern void T404f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_item */
extern T6 T404f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].hash_position */
extern T6 T404f24(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.hash_code */
extern T6 T342f23(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].resize */
extern void T404f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_resize */
extern void T404f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T404f31(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T404f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T764f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T763f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T404f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T404f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T404f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_resize */
extern void T404f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T404f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T404f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_put */
extern void T404f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search_position */
extern void T404f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].unset_found_item */
extern void T404f37(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found_item */
extern T6 T404f21(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T404f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found */
extern T1 T404f20(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search */
extern void T404f48(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T76f371(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T76f370(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T76f369(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T76f368(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T76f367(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T76f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T58f403(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T843c1078(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BINARY_INTEGER_CONSTANT.literal */
extern T0* T1551f7(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.literal */
extern T0* T1550f7(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.literal */
extern T0* T1549f7(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.literal */
extern T0* T1548f7(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.literal */
extern T0* T395f3(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T1551f53(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T1550f53(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T1549f53(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T1548f53(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T395f54(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T58f103(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T41f403(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T41f103(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T76f365(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T58f402(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T843c1077(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.type_name */
extern T0* T843f430(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T58f102(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T41f402(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T41f102(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T423f59(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T417f65(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_binary_integer_constant */
extern void T72f1553(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_binary_integer_constant */
extern void T72f1580(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_constant */
extern void T72f1591(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T403f409(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T403f433(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T403f127(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T403f148(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T403f147(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T403f146(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T403f145(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T403f144(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T403f143(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T403f142(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T403f141(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OCTAL_INTEGER_CONSTANT.process */
extern void T1550f66(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1399f96(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T76f345(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T76f451(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T423f58(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T417f64(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_octal_integer_constant */
extern void T72f1552(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_octal_integer_constant */
extern void T72f1579(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T403f408(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T403f432(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T1549f66(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1399f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T76f344(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T76f450(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T423f57(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T417f63(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T72f1551(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T72f1578(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T403f407(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T403f431(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T1548f66(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1399f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T76f343(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T76f449(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T423f56(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T417f62(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T72f1550(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T72f1577(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T403f406(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T403f430(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T395f68(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1399f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T76f569(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T76f574(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T423f60(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T417f66(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T72f1597(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T72f1599(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T403f418(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T403f442(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.process */
extern void T1547f53(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1399f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T76f342(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T76f448(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T76f240(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.set_type */
extern void T1547f57(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T1546f53(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T1545f55(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_immutable_string_32_constant */
extern void T76f376(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T76f461(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T76f523(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T76f375(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_immutable_string_8_constant */
extern void T76f374(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.immutable_string_8_type */
extern T0* T191f44(TC* ac, T0* C);
/* ET_SYSTEM.immutable_string_8_type */
extern T0* T45f52(TC* ac, T0* C);
/* ET_ECF_SYSTEM.immutable_string_8_type */
extern T0* T63f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2c_error */
extern void T58f405(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2c */
extern T0* T843c1080(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VERBATIM_STRING.value_position */
extern T0* T1547f43(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.value_position */
extern T0* T1546f39(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.value_position */
extern T0* T1545f38(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvwmc2c_error */
extern void T41f405(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T76f373(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T58f404(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T843c1079(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T41f404(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.cast_type */
extern T0* T1547f3(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.cast_type */
extern T0* T1546f3(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.cast_type */
extern T0* T1545f3(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T423f55(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T417f61(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T72f1549(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T72f1576(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T72f1376(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_utf8_as_escaped_string_8 */
extern void T72f1381(TC* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_natural_32 */
extern void T372f3(TC* ac, T0* C, T0* a1, T10 a2);
/* ET_C_GENERATOR.print_utf8_as_escaped_string_32 */
extern void T72f1380(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T403f405(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T403f429(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T403f128(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_immutable_string_32_constant */
extern void T403f152(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T403f151(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_immutable_string_8_constant */
extern void T403f150(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T403f149(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T1546f49(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1399f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T76f341(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T76f447(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T423f54(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T417f60(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T72f1548(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T72f1575(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T403f404(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T403f428(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T1544f50(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1399f90(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T76f340(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T76f446(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T76f238(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T1544f54(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T1558f57(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T1557f56(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T76f364(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2b_error */
extern void T58f401(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2b */
extern T0* T843c1076(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T843f1076ot1(TC* ac, T0* a1);
extern T1 T843f1076ot2(TC* ac, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.literal */
extern T2 T1558f37(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.value_position */
extern T0* T1544f38(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.value_position */
extern T0* T1558f38(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.value_position */
extern T0* T1557f37(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvwmc2b_error */
extern void T41f401(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T76f363(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T58f400(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T843c1075(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T41f400(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T423f53(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T417f59(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T72f1547(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T72f1338(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T403f403(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T403f427(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T403f126(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T403f140(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T403f139(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST.process */
extern void T332f28(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_test */
extern void T1399f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T76f319(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T76f426(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T76f495(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T76f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T423f30(TC* ac, T0* C, T0* a1);
extern T1 T423f30ot1(TC* ac, T0* a1);
extern T1 T423f30ot2(TC* ac, T0* a1);
extern T1 T423f30ot3(TC* ac, T0* a1);
/* ET_IDENTIFIER.unparenthesized_expression */
extern T0* T188f76(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1551f13(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1550f13(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1549f13(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1548f13(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T395f21(TC* ac, T0* C);
/* ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T1547f15(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1546f15(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1544f13(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.unparenthesized_expression */
extern T0* T1612f16(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.unparenthesized_expression */
extern T0* T1327f30(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T1075f31(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1611f17(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T791f20(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T1610f23(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T1599f16(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T686f18(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1618f28(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1617f35(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1616f32(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1615f30(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1614f36(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1613f33(TC* ac, T0* C);
/* ET_CALL_AGENT.unparenthesized_expression */
extern T0* T1108f22(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T1343f23(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T305f23(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T1277f23(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T1305f17(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T1105f20(TC* ac, T0* C);
/* ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T332f18(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T1609f16(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1608f21(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T1607f17(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T1606f17(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T676f16(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1603f21(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T1602f16(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T1601f16(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T1600f16(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T1598f20(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T1340f20(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T298f21(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.unparenthesized_expression */
extern T0* T1250f18(TC* ac, T0* C);
/* ET_IF_EXPRESSION.unparenthesized_expression */
extern T0* T1234f22(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T347f27(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1558f26(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1557f26(TC* ac, T0* C);
/* ET_CURRENT.unparenthesized_expression */
extern T0* T293f24(TC* ac, T0* C);
/* ET_RESULT.unparenthesized_expression */
extern T0* T266f25(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T1556f25(TC* ac, T0* C);
/* ET_VOID.unparenthesized_expression */
extern T0* T1064f24(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T1555f25(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1553f26(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1552f26(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1545f27(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression */
extern T0* T1610f9(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression */
extern T0* T791f5(TC* ac, T0* C);
/* ET_OBJECT_TEST.expression */
extern T0* T332f4(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T417f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_test */
extern void T403f182(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_validity */
extern void T403f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_test */
extern void T403f306(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_object_test_type */
extern void T403f305(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_object_test */
extern void T72f1534(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test */
extern void T72f1320(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_function_name */
extern void T72f794(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].force_last */
extern void T289f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].force */
extern void T709f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].fill_with */
extern void T708f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].extend */
extern void T708f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].resize */
extern void T289f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T709f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T708f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_capacity */
extern T6 T289f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].extendible */
extern T1 T289f8(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_object_test_local_name */
extern void T72f1217(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST.name */
extern T0* T332f23(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.name */
extern T0* T1610f2(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.name */
extern T0* T791f2(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.process */
extern void T347f39(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1399f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T76f304(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T76f412(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T423f15(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T417f20(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T403f167(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T403f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_create_expression */
extern void T72f1535(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T72f1563(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T1618f46(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1399f81(TC* ac, T0* C, T0* a1);
extern T1 T1399f81ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1399f107(TC* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T1620f16(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1399f114(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T1072f52(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1399f119(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T76f331(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T76f438(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T58f460(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T843c1135(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T58f126(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir3b_error */
extern void T41f460(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T41f126(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T76f510(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T76f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T76f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f560ot1(TC* ac, T0* a1);
extern T1 T76f560ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T76f565(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f565ot1(TC* ac, T0* a1);
/* ET_CALL_AGENT.target */
extern T0* T1108f3(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T2048f19(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_open_operand */
extern T1 T361f20(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.is_open_operand */
extern T1 T2046f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T2102f23(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T2101f23(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T2100f19(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_open_operand */
extern T1 T1620f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1618f40(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1617f46(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1616f42(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1615f41(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1614f47(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1613f43(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_open_operand */
extern T1 T1612f23(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T1611f26(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T1610f31(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T1609f23(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T1608f28(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T1607f24(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T1606f25(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T1603f28(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T1602f23(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T1601f23(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T1600f23(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T1599f23(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T1598f27(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1558f40(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1557f39(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T1556f34(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T1555f34(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T1553f36(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T1552f36(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T1551f55(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1550f55(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1549f55(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T1548f55(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T1547f44(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T1546f40(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T1545f39(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1544f40(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T1343f30(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T1340f28(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_open_operand */
extern T1 T1327f38(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T1277f30(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_open_operand */
extern T1 T1250f26(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_open_operand */
extern T1 T1234f29(TC* ac, T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T1108f32(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T1105f27(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T1075f39(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_open_operand */
extern T1 T1072f37(TC* ac, T0* C);
/* ET_VOID.is_open_operand */
extern T1 T1064f31(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T791f28(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T676f23(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T395f45(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T347f33(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_open_operand */
extern T1 T332f25(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T305f29(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T298f27(TC* ac, T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T188f79(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T686f19(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.is_open_operand */
extern T1 T1619f6(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T1305f18(TC* ac, T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T293f26(TC* ac, T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T266f26(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1868f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T1618f7(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T1617f8(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T1616f8(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T1615f7(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T1614f10(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T1613f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T76f564(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1618f29(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1617f25(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1616f23(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T1615f14(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T1614f6(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T1613f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.target */
extern T0* T1618f13(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.target */
extern T0* T1617f15(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.target */
extern T0* T1616f14(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.target */
extern T0* T1615f15(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.target */
extern T0* T1614f17(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.target */
extern T0* T1613f16(TC* ac, T0* C);
/* ET_ECF_LIBRARY.procedure_identity_type */
extern T0* T191f70(TC* ac, T0* C);
/* ET_SYSTEM.procedure_identity_type */
extern T0* T45f76(TC* ac, T0* C);
/* ET_ECF_SYSTEM.procedure_identity_type */
extern T0* T63f73(TC* ac, T0* C);
/* ET_ECF_LIBRARY.tuple_identity_type */
extern T0* T191f27(TC* ac, T0* C);
/* ET_SYSTEM.tuple_identity_type */
extern T0* T45f38(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tuple_identity_type */
extern T0* T63f30(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T76f549(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T76f549ot1(TC* ac, T0* a1);
extern T1 T76f549ot2(TC* ac, T0* a1);
extern T1 T76f549ot3(TC* ac, T0* a1);
extern T1 T76f549ot4(TC* ac, T0* a1);
extern T1 T76f549ot5(TC* ac, T0* a1);
extern T1 T76f549ot6(TC* ac, T0* a1);
extern T1 T76f549ot7(TC* ac, T0* a1);
extern T1 T76f549ot8(TC* ac, T0* a1);
extern T1 T76f549ot9(TC* ac, T0* a1);
extern T1 T76f549ot10(TC* ac, T0* a1);
extern T1 T76f549ot11(TC* ac, T0* a1);
extern T1 T76f549ot12(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T58f538(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T843c1213(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T58f156(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T41f538(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T41f156(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T58f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T843c1212(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T41f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T58f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T843c1211(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T58f155(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T41f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T41f155(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T58f535(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T843c1210(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T41f535(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T1092f16(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T58f534(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T843c1209(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T58f154(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T41f534(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T41f154(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T58f533(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T843c1208(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T41f533(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T1108f15(TC* ac, T0* C);
extern T1 T1108f15ot1(TC* ac, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T1092f8(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T245f36(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resize */
extern void T245f37(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T658f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T654f4(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T245f25(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T245f24(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T76f548(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CALL_AGENT.set_arguments */
extern void T1108f41(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1618f48(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1617f54(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1616f50(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1615f49(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1614f55(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1613f51(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T2045f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T2120f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T2119f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T2119f7(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern T0* T2045f9(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T2120c2(TC* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T2046c6(TC* ac, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T2045c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T2120f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T2119c4(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T409f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T409f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_iteration_components_validity */
extern void T76f507(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T76f506(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T58f497(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T843c1172(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot3b_error */
extern void T41f497(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T76f503(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T76f545(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T76f544(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1i_error */
extern void T58f496(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1i */
extern T0* T843c1171(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T58f138(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1i_error */
extern void T41f496(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T41f138(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.hidden_inline_separate_argument */
extern T0* T421f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T58f495(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T843c1170(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1g_error */
extern void T41f495(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T58f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T843c1169(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1e_error */
extern void T41f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T58f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T843c1168(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T41f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T58f492(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T843c1167(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T41f492(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T58f491(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T843c1166(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T41f491(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T58f490(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T843c1165(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T41f490(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vucr0i_error */
extern void T58f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0i */
extern T0* T843c1132(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0i_error */
extern void T41f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.hide_inline_separate_arguments */
extern void T421f10(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.count */
extern T6 T421f4(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.hide_iteration_components */
extern void T419f8(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_ITEM_SCOPE.count */
extern T6 T419f4(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T416f9(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T423f42(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T417f47(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T403f194(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T403f255(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T403f321(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T403f367(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T403f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T403f365ot1(TC* ac, T0* a1);
extern T1 T403f365ot2(TC* ac, T0* a1);
extern T1 T403f365ot3(TC* ac, T0* a1);
extern T1 T403f365ot4(TC* ac, T0* a1);
extern T1 T403f365ot5(TC* ac, T0* a1);
extern T1 T403f365ot6(TC* ac, T0* a1);
extern T1 T403f365ot7(TC* ac, T0* a1);
extern T1 T403f365ot8(TC* ac, T0* a1);
extern T1 T403f365ot9(TC* ac, T0* a1);
extern T1 T403f365ot10(TC* ac, T0* a1);
extern T1 T403f365ot11(TC* ac, T0* a1);
extern T1 T403f365ot12(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T403f364(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_iteration_components_validity */
extern void T403f318(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T403f317(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T403f314(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T403f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T1413f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T403f360(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T72f1316(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T72f1366(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T72f1373(TC* ac, T0* C, T0* a1);
extern T1 T72f1373ot1(TC* ac, T0* a1);
extern T1 T72f1373ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T72f791(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T291f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].force */
extern void T714f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT].fill_with */
extern void T713f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].extend */
extern void T713f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T291f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].aliased_resized_area */
extern T0* T714f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].aliased_resized_area */
extern T0* T713f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T291f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T291f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T1618f21(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T1617f24(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T1616f22(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T1615f23(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T1614f26(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T1613f24(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T72f1365(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T1617f52(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1399f80(TC* ac, T0* C, T0* a1);
extern T1 T1399f80ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T76f330(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T76f437(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T58f459(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T843c1134(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3a_error */
extern void T41f459(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T76f144(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T76f165(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T58f387(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T843c1062(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T58f94(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok2a_error */
extern void T41f387(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T41f94(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T1917f12(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T1917f11(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1b_error */
extern void T58f386(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1b */
extern T0* T843c1061(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.note_term_value */
extern T0* T395f64(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.text */
extern T0* T1061f10(TC* ac, T0* C);
/* ET_IDENTIFIER.note_term_value */
extern T0* T188f121(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.note_term_value */
extern T0* T1562f8(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.note_term_value */
extern T0* T1558f48(TC* ac, T0* C);
/* CHARACTER_32.out */
extern T0* T3f17(TC* ac, volatile T3* C);
/* ET_C1_CHARACTER_CONSTANT.note_term_value */
extern T0* T1557f47(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.note_term_value */
extern T0* T1556f40(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.note_term_value */
extern T0* T1555f40(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.note_term_value */
extern T0* T1553f42(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.note_term_value */
extern T0* T1552f42(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.note_term_value */
extern T0* T1551f64(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.note_term_value */
extern T0* T1550f64(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.note_term_value */
extern T0* T1549f64(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.note_term_value */
extern T0* T1548f64(TC* ac, T0* C);
/* ET_VERBATIM_STRING.note_term_value */
extern T0* T1547f51(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.note_term_value */
extern T0* T1546f47(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.note_term_value */
extern T0* T1545f46(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.note_term_value */
extern T0* T1544f48(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T58f93(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok1b_error */
extern void T41f386(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T41f93(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T58f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T843c1060(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1a_error */
extern void T41f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T1917f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T76f76(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].wipe_out */
extern void T426f12(TC* ac, T0* C);
/* SPECIAL [ET_NOTE_TERM].keep_head */
extern void T815f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NOTE_TERM].set_count */
extern void T815f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].move_all_cursors_after */
extern void T426f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].set_next_cursor */
extern void T816f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].set_after */
extern void T816f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vvok2b_error */
extern void T58f384(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2b */
extern T0* T843c1059(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vvok2b_error */
extern void T41f384(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok1c_error */
extern void T58f383(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1c */
extern T0* T843c1058(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1c_error */
extern void T41f383(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].item */
extern T0* T426f7(TC* ac, T0* C, T6 a1);
/* ET_NOTE_LIST.append_tagged_note_terms_to_list */
extern void T1288f15(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NOTE_TERM_LIST.append_note_terms_to_list */
extern void T1299f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].force_last */
extern void T426f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].force */
extern void T813f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM].fill_with */
extern void T815f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM].extend */
extern void T815f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].resize */
extern void T426f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].aliased_resized_area */
extern T0* T813f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NOTE_TERM].aliased_resized_area */
extern T0* T815f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].new_capacity */
extern T6 T426f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].extendible */
extern T1 T426f8(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.note_term */
extern T0* T188f120(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.note_term */
extern T0* T1551f61(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.note_term */
extern T0* T1550f61(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.note_term */
extern T0* T1549f61(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.note_term */
extern T0* T1548f61(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.note_term */
extern T0* T395f61(TC* ac, T0* C);
/* ET_VERBATIM_STRING.note_term */
extern T0* T1547f48(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.note_term */
extern T0* T1546f44(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.note_term */
extern T0* T1544f46(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.note_term */
extern T0* T1562f7(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.note_term */
extern T0* T1558f46(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.note_term */
extern T0* T1557f45(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.note_term */
extern T0* T1556f37(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.note_term */
extern T0* T1555f37(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.note_term */
extern T0* T1553f39(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.note_term */
extern T0* T1552f39(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.note_term */
extern T0* T1545f43(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_note */
extern T0* T1617f34(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T76f508(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T76f547(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T76f546(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_attached_index */
extern void T1831f13(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.set_attached_index */
extern void T1266f12(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_COMMA_VARIABLE.set_index */
extern void T1831f12(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.set_index */
extern void T1266f11(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T76f148(TC* ac, T0* C, T0* a1);
extern T1 T76f148ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1j_error */
extern void T58f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1j */
extern T0* T843c1180(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1j_error */
extern void T41f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T58f504(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T843c1179(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1h_error */
extern void T41f504(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T58f503(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T843c1178(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1f_error */
extern void T41f503(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T58f502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T843c1177(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T41f502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T58f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T843c1176(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T41f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T58f500(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T843c1175(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T58f140(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T41f500(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T41f140(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T58f499(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T843c1174(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T58f139(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T41f499(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T41f139(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T58f498(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T843c1173(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T41f498(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IDENTIFIER.set_local */
extern void T188f140(TC* ac, T0* C, T1 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T423f41(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T417f46(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T403f193(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T403f254(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T403f121(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T403f125(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.standard_once_keys */
extern T0* T403f55(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T403f319(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T403f363(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T1413f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T403f362(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T403f132(TC* ac, T0* C, T0* a1);
extern T1 T403f132ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T72f1315(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T72f1364(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_object */
extern T1 T1617f23(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.standard_once_keys */
extern T0* T1617f38(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T72f1363(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T72f1379(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_feature_body_declaration */
extern void T72f1250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_inline_separate_argument_declarations */
extern void T72f1266(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor_declarations */
extern void T72f1265(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_local_declarations */
extern void T72f1264(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.compound */
extern T0* T382f16(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.compound */
extern T0* T1617f12(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.compound */
extern T0* T1616f11(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.compound */
extern T0* T1614f14(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.compound */
extern T0* T1613f13(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.compound */
extern T0* T1573f6(TC* ac, T0* C);
/* ET_DO_FUNCTION.compound */
extern T0* T522f8(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.compound */
extern T0* T1576f6(TC* ac, T0* C);
/* ET_DO_PROCEDURE.compound */
extern T0* T518f7(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_mutex_unlock */
extern void T72f1240(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex */
extern void T72f1259(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_mutex */
extern void T72f1271(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_mutex */
extern void T72f1270(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_mutex_name */
extern void T72f778(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_assign_completed_to_once_status */
extern void T72f1251(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status */
extern void T72f1232(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_status */
extern void T72f1255(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_status */
extern void T72f1254(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_status */
extern void T72f1253(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_status_name */
extern void T72f775(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_assign_called_to_thread_safe_once_status */
extern void T72f1244(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_status */
extern void T72f1235(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_exception_to_thread_safe_once_exception */
extern void T72f1243(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_exception */
extern void T72f1256(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_exception */
extern void T72f1269(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_exception */
extern void T72f1268(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_exception */
extern void T72f1267(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_exception_name */
extern void T72f777(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_exception */
extern void T72f1257(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T1617f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1617f19(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T1616f24(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T1614f27(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1614f20(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_note */
extern T0* T1614f35(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.standard_once_keys */
extern T0* T1614f39(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T1613f25(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_last_exception_to_once_exception */
extern void T72f1263(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T72f1262(TC* ac, T0* C);
/* ET_C_GENERATOR.reset_volatile_data */
extern void T72f1261(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.rescue_clause */
extern T0* T382f15(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.rescue_clause */
extern T0* T1617f14(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.rescue_clause */
extern T0* T1616f13(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.rescue_clause */
extern T0* T1614f16(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.rescue_clause */
extern T0* T1613f15(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.rescue_clause */
extern T0* T1573f22(TC* ac, T0* C);
/* ET_DO_FUNCTION.rescue_clause */
extern T0* T522f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.rescue_clause */
extern T0* T1576f20(TC* ac, T0* C);
/* ET_DO_PROCEDURE.rescue_clause */
extern T0* T518f4(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T72f1394(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T72f1260(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_inline_agent */
extern T1 T1617f27(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_inline_agent */
extern T1 T1616f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_inline_agent */
extern T1 T1614f28(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_inline_agent */
extern T1 T1613f26(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T1616f48(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1399f79(TC* ac, T0* C, T0* a1);
extern T1 T1399f79ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T76f329(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T76f436(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T423f40(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T417f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T403f192(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T403f253(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T72f1314(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T72f1362(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T72f1361(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T1615f47(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1399f78(TC* ac, T0* C, T0* a1);
extern T1 T1399f78ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T76f328(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T76f435(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T76f509(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T76f550(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.function_identity_any_type */
extern T0* T191f43(TC* ac, T0* C);
/* ET_SYSTEM.function_identity_any_type */
extern T0* T45f51(TC* ac, T0* C);
/* ET_ECF_SYSTEM.function_identity_any_type */
extern T0* T63f46(TC* ac, T0* C);
/* ET_ECF_LIBRARY.predicate_identity_type */
extern T0* T191f69(TC* ac, T0* C);
/* ET_SYSTEM.predicate_identity_type */
extern T0* T45f75(TC* ac, T0* C);
/* ET_ECF_SYSTEM.predicate_identity_type */
extern T0* T63f72(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T76f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T76f504(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T1618f58(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T1617f66(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T1616f61(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T1615f59(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T1614f67(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T1613f62(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T1618f57(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T1617f65(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T1616f60(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_result_index */
extern void T1615f58(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_result_index */
extern void T1614f66(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_result_index */
extern void T1613f61(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T423f39(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T417f44(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T403f191(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T403f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T403f320(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T403f366(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T403f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T1413f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T403f315(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T72f1313(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T72f1360(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T72f1359(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T1614f53(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1399f77(TC* ac, T0* C, T0* a1);
extern T1 T1399f77ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T76f327(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T76f434(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T58f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T843c1133(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T2031f42(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vevi0d_error */
extern void T41f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_result */
extern T1 T422f6(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T423f38(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T417f43(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T403f190(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T403f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T72f1312(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T72f1358(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_object */
extern T1 T1614f25(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T72f1357(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T1613f49(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1399f76(TC* ac, T0* C, T0* a1);
extern T1 T1399f76ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T76f326(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T76f433(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T423f37(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T417f42(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T403f189(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T403f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T72f1311(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T72f1356(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T72f1355(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_CURSOR.process */
extern void T1612f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_iteration_cursor */
extern void T1399f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_iteration_cursor */
extern void T76f339(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_cursor_validity */
extern void T76f445(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_cursor */
extern void T76f521(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_voit3a_error */
extern void T58f473(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_voit3a */
extern T0* T843c1148(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_voit3_error */
extern T1 T58f131(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit3a_error */
extern void T41f473(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_voit3_error */
extern T1 T41f131(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_iteration_cursor */
extern void T423f50(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_iteration_cursor */
extern void T417f55(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_iteration_cursor */
extern void T403f202(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_cursor_validity */
extern void T403f262(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_cursor */
extern void T403f333(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_iteration_cursor */
extern void T72f1310(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor */
extern void T72f1354(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T1611f28(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1399f86(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T76f336(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T76f442(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T423f47(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T417f52(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T403f199(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T403f259(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T72f1309(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T72f1353(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T72f746(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].force_last */
extern void T314f60(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_put */
extern void T314f66(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].force */
extern void T733f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].fill_with */
extern void T731f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].extend */
extern void T731f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_put */
extern void T314f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_put */
extern void T314f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_item */
extern T6 T314f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].hash_position */
extern T6 T314f33(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T1611f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].resize */
extern void T314f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_resize */
extern void T314f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].special_integer_ */
extern T0* T314f37(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_resize */
extern void T314f69(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T733f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T731f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_resize */
extern void T314f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_item */
extern T0* T314f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_item */
extern T6 T314f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_resize */
extern void T314f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_modulus */
extern T6 T314f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_capacity */
extern T6 T314f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_put */
extern void T314f62(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].search_position */
extern void T314f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].unset_found_item */
extern void T314f45(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.process */
extern void T1610f33(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1399f84(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T76f334(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T76f441(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T76f519(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T76f552(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T58f472(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T843c1147(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T58f130(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot4b_error */
extern void T41f472(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T41f130(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T58f471(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T843c1146(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot4a_error */
extern void T41f471(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T76f98(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T58f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T843c1145(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T58f129(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot1f_error */
extern void T41f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T41f129(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T58f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T843c1144(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1e_error */
extern void T41f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T58f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T843c1143(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1d_error */
extern void T41f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T58f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T843c1142(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1c_error */
extern void T41f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T58f466(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T843c1141(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1b_error */
extern void T41f466(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T58f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T843c1140(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1a_error */
extern void T41f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].force_last */
extern void T415f61(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T415f67(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].force */
extern void T793f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].fill_with */
extern void T792f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].extend */
extern void T792f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_put */
extern void T415f66(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_put */
extern void T415f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].resize */
extern void T415f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T415f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T415f37(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T415f70(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T793f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T792f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T415f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_resize */
extern void T415f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T415f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T415f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T415f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T415f47(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T423f45(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T423f46(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T417f50(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T417f51(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T416f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].force_last */
extern void T794f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].resize */
extern void T794f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T794f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].extendible */
extern T1 T794f8(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1g_error */
extern void T58f588(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1g */
extern T0* T843c1261(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1g_error */
extern void T41f588(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T417f7(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T417f57(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_old_object_test */
extern void T403f197(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T403f258(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_named_object_test */
extern void T403f331(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern T0* T403f66(TC* ac, T0* C);
/* ET_C_GENERATOR.process_old_object_test */
extern void T72f1308(TC* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T1609f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1399f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T76f318(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T76f425(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T58f453(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T843c1128(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T58f123(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T41f453(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T41f123(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T423f29(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T417f34(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T403f181(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T403f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T72f1307(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T72f1352(TC* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T1608f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1399f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T76f317(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T76f424(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T423f28(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T417f33(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T403f180(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T403f241(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T72f1306(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T72f1351(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T1607f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1399f66(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T76f316(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T76f423(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T76f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.type_identity_type */
extern T0* T191f94(TC* ac, T0* C);
/* ET_SYSTEM.type_identity_type */
extern T0* T45f98(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_identity_type */
extern T0* T63f97(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T423f27(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T417f32(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T403f179(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T403f240(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T403f304(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T72f1305(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T72f1350(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T1606f27(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1399f65(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T76f315(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T76f422(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T76f492(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T76f534(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T496f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T2094f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T495f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T323f90(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T338f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_object_equality_expression */
extern void T228f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T2094c6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T58f452(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T843c1127(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BRACKET_SYMBOL.text */
extern T0* T656f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T58f122(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0b_error */
extern void T41f452(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T41f122(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T1606f32(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T1606f31(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.name */
extern T0* T1606f16(TC* ac, T0* C);
/* ET_IDENTIFIER.twin */
extern T0* T188f102(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T1606f20(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T423f26(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T417f31(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T403f178(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T403f239(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T403f303(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_object_equality_expression */
extern void T72f1304(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_equality_expression */
extern void T72f1349(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_object_equality_types */
extern void T72f734(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.set_right */
extern void T333f6(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.set_left */
extern void T333f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].force_last */
extern void T275f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].force */
extern void T682f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].fill_with */
extern void T683f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].extend */
extern void T683f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].resize */
extern void T275f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].aliased_resized_area */
extern T0* T682f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].aliased_resized_area */
extern T0* T683f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].new_capacity */
extern T6 T275f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].extendible */
extern T1 T275f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].last */
extern T0* T274f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].is_empty */
extern T1 T274f10(TC* ac, T0* C);
/* ET_C_GENERATOR.print_equality_call */
extern void T72f1368(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.print_equality_function_name */
extern void T72f797(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].force_last */
extern void T274f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].force */
extern void T680f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].fill_with */
extern void T679f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].extend */
extern void T679f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].resize */
extern void T274f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].aliased_resized_area */
extern T0* T680f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].aliased_resized_area */
extern T0* T679f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].new_capacity */
extern T6 T274f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].extendible */
extern T1 T274f7(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_equality_call_with_one_object_equality */
extern void T72f824(TC* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_equality_call_with_zero_object_equality */
extern void T72f823(TC* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.add_common_types_to_list */
extern void T333f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.add_common_types_to_list */
extern void T1529f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.add_common_types_to_list */
extern void T523f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.add_common_types_to_list */
extern void T342f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.add_common_types_to_list */
extern void T496f96(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.add_common_types_to_list */
extern void T495f96(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.add_common_types_to_list */
extern void T281f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.add_common_types_to_list */
extern void T338f94(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.add_common_types_to_list */
extern void T323f92(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.add_common_types_to_list */
extern void T228f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_EQUALITY_TYPES.add_common_types_to_list */
extern void T330f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T1529f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T523f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SECONDARY_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T342f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T496f95(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T495f95(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T281f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T338f93(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T323f91(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRIMARY_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T228f89(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYMBOL_OPERATOR.is_not_tilde */
extern T1 T1061f100(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T656f100(TC* ac, T0* C);
/* ET_SYMBOL.is_not_tilde */
extern T1 T655f87(TC* ac, T0* C);
/* ET_C_GENERATOR.new_object_equality_types */
extern T0* T72f598(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].remove_last */
extern void T275f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].keep_head */
extern void T683f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_count */
extern void T683f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].move_last_cursors_after */
extern void T275f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_next_cursor */
extern void T684f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_after */
extern void T684f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].last */
extern T0* T275f10(TC* ac, T0* C);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.make */
extern T0* T333c3(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].is_empty */
extern T1 T275f9(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.process */
extern void T1603f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1399f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T76f313(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T76f420(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T423f24(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T417f29(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T403f176(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T403f237(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T72f1303(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T72f1348(TC* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T1602f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1399f62(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T76f312(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T76f419(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T76f490(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T76f489(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.typed_pointer_identity_type */
extern T0* T191f95(TC* ac, T0* C);
/* ET_SYSTEM.typed_pointer_identity_type */
extern T0* T45f99(TC* ac, T0* C);
/* ET_ECF_SYSTEM.typed_pointer_identity_type */
extern T0* T63f98(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T423f23(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T417f28(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T403f175(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T403f236(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T403f300(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T403f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_expression_address */
extern void T72f1302(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T72f1347(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T72f1344(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T1529f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T523f14(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.special_type */
extern T0* T342f25(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T496f65(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T495f65(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T281f12(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T338f64(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T323f62(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.special_type */
extern T0* T228f61(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T229f9(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.make */
extern T0* T1599c24(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern T0* T78f1549(TC* ac, T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T655c101(TC* ac);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T1599f7(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.process */
extern void T1601f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1399f61(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T76f311(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T76f418(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T58f450(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T843c1125(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T41f450(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T58f438(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T843c1113(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T41f438(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T58f437(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T843c1112(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T41f437(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T423f22(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T417f27(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T403f174(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T403f235(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T72f1301(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T72f1346(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern T0* T78f31(TC* ac, T0* C);
/* ET_RESULT.make */
extern T0* T266c35(TC* ac);
/* ET_RESULT.make_token */
extern void T266f37(TC* ac, T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T266f38(TC* ac, T0* C);
/* ET_RESULT.tokens */
extern T0* T266f5(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.process */
extern void T1600f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1399f60(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T76f310(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T76f417(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0g_error */
extern void T58f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0g */
extern T0* T843c1124(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0g_error */
extern void T41f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T423f21(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T417f26(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T403f173(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T403f234(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T72f1300(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T72f1345(TC* ac, T0* C, T0* a1);
extern T1 T72f1345ot1(TC* ac, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T1599f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1399f83(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T76f333(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T76f440(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.local_name */
extern T0* T188f67(TC* ac, T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T188f66(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen11a_error */
extern void T58f464(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen11a */
extern T0* T843c1139(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen11_error */
extern T1 T58f128(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen11a_error */
extern void T41f464(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen11_error */
extern T1 T41f128(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T76f518(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_address */
extern void T327f62(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_address */
extern void T241f62(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_base_type */
extern T1 T79f246(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T1563f72(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T948f74(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T1585f63(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T259f92(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T247f60(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T77f95(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T1587f62(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T1586f65(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T493f59(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T76f517(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0e_error */
extern void T58f463(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0e */
extern T0* T843c1138(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0e_error */
extern void T41f463(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T76f516(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.inline_separate_argument_name */
extern T0* T188f65(TC* ac, T0* C);
/* ET_IDENTIFIER.iteration_item_name */
extern T0* T188f64(TC* ac, T0* C);
/* ET_IDENTIFIER.object_test_local_name */
extern T0* T188f63(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T423f44(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T417f49(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T403f196(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T403f257(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T403f330(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T403f329(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T403f328(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_feature_address */
extern void T72f1299(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T1598f29(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1399f59(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T76f309(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T76f416(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T58f446(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T843c1121(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T41f446(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T423f20(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T417f25(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T403f172(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T403f233(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T403f233ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T72f1298(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T72f1343(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T1558f52(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1399f53(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T76f303(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T76f411(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T423f14(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T417f19(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T403f166(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T403f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T72f1293(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T1557f51(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1399f52(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T76f302(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T76f410(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T423f13(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T417f18(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T403f165(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T403f226(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T72f1292(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T1556f43(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1399f50(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T76f300(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T76f408(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T76f481(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T423f10(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T417f15(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T403f163(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T403f224(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T403f285(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T72f1291(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T72f1337(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T1555f43(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1399f48(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T76f298(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T76f406(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T423f8(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T417f13(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T403f161(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T403f222(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_true_constant */
extern void T72f1290(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T72f1336(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T1553f47(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1399f47(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T76f297(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T76f405(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T76f480(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T1553f52(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T1552f52(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T76f528(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T76f527(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T58f481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T843c1156(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T41f481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T423f7(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T417f12(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T403f160(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T403f221(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T403f284(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T403f343(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T403f342(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T72f1289(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T72f1335(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T1553f17(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T1552f47(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1399f46(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T76f296(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T76f404(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T423f6(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T417f11(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T403f159(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T403f220(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T72f1288(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T72f1334(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T1552f17(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T1545f50(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1399f45(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T76f295(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T76f403(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T423f5(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T417f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T403f158(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T403f219(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T72f1287(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T72f1333(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T1343f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1399f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T76f324(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T76f431(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T76f499(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T58f456(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T843c1131(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T58f125(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T41f456(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T41f125(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T58f455(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T843c1130(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T58f124(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T41f455(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T41f124(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T58f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T843c1129(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T41f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T1343f22(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T423f35(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T417f40(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T403f187(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T403f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T403f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T72f1286(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T72f1332(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T1340f33(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1399f58(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T76f308(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T76f415(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T76f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T423f19(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T417f24(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T403f171(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T403f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T403f294(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T72f1285(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T72f1331(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_static_call */
extern void T72f1369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T72f1369ot1(TC* ac, T0* a1);
extern T1 T72f1369ot2(TC* ac, T0* a1);
extern T1 T72f1369ot3(TC* ac, T0* a1);
/* ET_QUANTIFIER_EXPRESSION.process */
extern void T1327f40(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_quantifier_expression */
extern void T1399f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_quantifier_expression */
extern void T76f338(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_quantifier_expression_validity */
extern void T76f444(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_expression_validity */
extern void T76f520(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_expression */
extern void T76f553(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_quantifier_expression */
extern void T423f49(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_quantifier_expression */
extern void T417f54(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_quantifier_expression */
extern void T403f201(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_quantifier_expression_validity */
extern void T403f261(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_iteration_expression_validity */
extern void T403f332(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_expression */
extern void T403f377(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_quantifier_expression */
extern void T72f1284(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_quantifier_expression */
extern void T72f1330(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_expression */
extern void T72f1370(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T1305f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1399f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T76f321(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T76f428(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T423f32(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T417f37(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T403f184(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T403f245(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T72f1283(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T72f1329(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T1277f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1399f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T76f322(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T76f429(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_untyped_manifest_array_validity */
extern void T76f497(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f497ot1(TC* ac, T0* a1);
extern T1 T76f497ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_common_ancestor_types */
extern void T76f486(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].keep_first */
extern void T414f19(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_all_cursors_after */
extern void T414f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].item */
extern T0* T414f11(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.expression */
extern T0* T2101f4(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression */
extern T0* T2100f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.update_common_ancestor_type_list */
extern void T76f484(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_modifier */
extern T0* T78f806(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_type_modifier */
extern T0* T78f805(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove */
extern void T414f18(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_left */
extern void T414f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_cursors_left */
extern void T414f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T787f8(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.put */
extern void T1277f39(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T76f535(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f535ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T77f96(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.conforms_to_context_with_type_marks */
extern T1 T77f118(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_named_type */
extern T0* T79f224(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_manifest_array_validity */
extern void T76f496(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f496ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwma2a_error */
extern void T58f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vwma2a */
extern T0* T843c1160(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T58f136(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma2a_error */
extern void T41f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T41f136(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwma1a_error */
extern void T58f484(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwma1a */
extern T0* T843c1159(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T58f135(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma1a_error */
extern void T41f484(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T41f135(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T423f33(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T417f38(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T403f185(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T403f246(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_untyped_manifest_array_validity */
extern void T403f308(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T403f308ot1(TC* ac, T0* a1);
extern T1 T403f308ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_common_ancestor_types */
extern void T403f291(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.update_common_ancestor_type_list */
extern void T403f289(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T403f351(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_manifest_array_validity */
extern void T403f307(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T403f307ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_manifest_array */
extern void T72f1282(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T72f1328(TC* ac, T0* C, T0* a1);
extern T1 T72f1328ot1(TC* ac, T0* a1);
/* ET_INSPECT_EXPRESSION.process */
extern void T1250f29(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_expression */
extern void T1399f56(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_expression_list */
extern void T1399f105(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_expression */
extern void T1399f111(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_expression */
extern void T76f306(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_expression_validity */
extern void T76f414(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f414ot1(TC* ac, T0* a1);
extern T1 T76f414ot2(TC* ac, T0* a1);
extern T1 T76f414ot3(TC* ac, T0* a1);
extern T1 T76f414ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inspect_expression */
extern void T76f487(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inspect_expression_dynamic_types */
extern void T76f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_inspect_expression */
extern void T423f17(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_inspect_expression */
extern void T417f22(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_expression */
extern void T403f169(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_expression_validity */
extern void T403f230(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T403f230ot1(TC* ac, T0* a1);
extern T1 T403f230ot2(TC* ac, T0* a1);
extern T1 T403f230ot3(TC* ac, T0* a1);
extern T1 T403f230ot4(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_inspect_expression */
extern void T403f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_inspect_expression */
extern void T72f1281(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_expression */
extern void T72f1327(TC* ac, T0* C, T0* a1);
extern T1 T72f1327ot1(TC* ac, T0* a1);
extern T1 T72f1327ot2(TC* ac, T0* a1);
extern T1 T72f1327ot3(TC* ac, T0* a1);
extern T1 T72f1327ot4(TC* ac, T0* a1);
extern T1 T72f1327ot5(TC* ac, T0* a1);
extern T1 T72f1327ot6(TC* ac, T0* a1);
/* ET_IF_EXPRESSION.process */
extern void T1234f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_expression */
extern void T1399f55(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression_list */
extern void T1399f104(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION.process */
extern void T1180f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression */
extern void T1399f120(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_expression */
extern void T76f305(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_expression_validity */
extern void T76f413(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_if_expression */
extern void T76f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_if_expression_dynamic_types */
extern void T76f531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_if_expression */
extern void T423f16(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_if_expression */
extern void T417f21(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_expression */
extern void T403f168(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_expression_validity */
extern void T403f229(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_if_expression */
extern void T403f290(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_if_expression */
extern void T72f1280(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_expression */
extern void T72f1326(TC* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T1108f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1399f75(TC* ac, T0* C, T0* a1);
extern T1 T1399f75ot1(TC* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T1619f15(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1399f113(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1868f12(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1399f116(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T76f325(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T76f432(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f432ot1(TC* ac, T0* a1);
extern T1 T76f432ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T76f502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgmc0g_error */
extern void T58f489(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0g */
extern T0* T843c1164(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0g_error */
extern void T41f489(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CALL_AGENT.is_procedure */
extern T1 T1108f21(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T58f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T843c1163(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T58f137(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T41f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T41f137(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T76f543(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T76f559(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f559ot1(TC* ac, T0* a1);
extern T1 T76f559ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T76f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T2045f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T76f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T76f558(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T76f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f562ot1(TC* ac, T0* a1);
extern T1 T76f562ot2(TC* ac, T0* a1);
extern T1 T76f562ot3(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T58f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T843c1207(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T58f153(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T41f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T41f153(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T76f541(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T76f557(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T1108f40(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T76f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T76f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T76f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T76f538(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T76f500(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T58f487(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T843c1162(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T41f487(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T76f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T76f556(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T76f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f561ot1(TC* ac, T0* a1);
extern T1 T76f561ot2(TC* ac, T0* a1);
extern T1 T76f561ot3(TC* ac, T0* a1);
extern T1 T76f561ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T76f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T76f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T76f555(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vucr0j_error */
extern void T58f486(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0j */
extern T0* T843c1161(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0j_error */
extern void T41f486(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T423f36(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T417f41(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T403f188(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T403f249(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T403f249ot1(TC* ac, T0* a1);
extern T1 T403f249ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T403f313(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T403f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T403f390(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T403f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T403f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T403f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T403f388(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T403f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T403f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T403f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T403f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T403f311(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T403f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T403f387(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T403f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T403f386(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T72f1279(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T72f1325(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T72f1324(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T295f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T295f17(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT.set_expression */
extern void T299f13(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.set_no_target_twin */
extern void T303f14(TC* ac, T0* C, T1 a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T1105f29(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1399f70(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.process */
extern void T2021f20(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unfolded_tuple_actual_argument_list */
extern void T1399f117(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.process */
extern void T294f27(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T76f320(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T76f427(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T423f31(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T417f36(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T403f183(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T403f244(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T72f1278(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T72f1323(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.process */
extern void T1075f41(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1399f87(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T76f337(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T76f443(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T423f48(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T417f53(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_expression */
extern void T403f200(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T403f260(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_across_expression */
extern void T72f1277(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_expression */
extern void T72f1322(TC* ac, T0* C, T0* a1);
/* ET_VOID.process */
extern void T1064f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1399f49(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T76f299(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T76f407(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T76f482(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T423f9(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T417f14(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T403f162(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T403f223(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T403f286(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T72f1276(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T72f1321(TC* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.process */
extern void T791f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1399f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T76f335(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_named_object_test */
extern void T403f198(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_named_object_test */
extern void T72f1275(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T686f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1399f82(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T76f332(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T76f439(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T58f461(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T843c1136(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T41f461(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T76f515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T58f518(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T843c1193(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T58f145(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T41f518(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T41f145(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T58f517(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T843c1192(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T41f517(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T58f516(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T843c1191(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T41f516(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_inline_separate_argument_call_expression_validity */
extern void T76f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_iteration_item_call_expression_validity */
extern void T76f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T76f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T76f511(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T423f43(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T417f48(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T403f195(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T403f256(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T403f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_inline_separate_argument_call_expression_validity */
extern void T403f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_iteration_item_call_expression_validity */
extern void T403f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T403f323(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T403f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_unqualified_call_expression */
extern void T72f1274(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T72f1319(TC* ac, T0* C, T0* a1);
extern T1 T72f1319ot1(TC* ac, T0* a1);
extern T1 T72f1319ot2(TC* ac, T0* a1);
extern T1 T72f1319ot3(TC* ac, T0* a1);
extern T1 T72f1319ot4(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T686f9(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T327f39(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T241f42(TC* ac, T0* C);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T72f765(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T284f15(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T284f11(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.process */
extern void T676f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1399f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T76f314(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T76f421(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T76f491(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T76f533(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T496f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T2093f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T495f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T323f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T338f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_equality_expression */
extern void T228f87(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T2093c6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T58f451(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T843c1126(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T41f451(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EQUALITY_EXPRESSION.set_left */
extern void T676f30(TC* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_right */
extern void T676f29(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T423f25(TC* ac, T0* C, T0* a1);
extern T1 T423f25ot1(TC* ac, T0* a1);
extern T1 T423f25ot2(TC* ac, T0* a1);
extern T1 T423f25ot3(TC* ac, T0* a1);
extern T1 T423f25ot4(TC* ac, T0* a1);
extern T1 T423f25ot5(TC* ac, T0* a1);
extern T1 T423f25ot6(TC* ac, T0* a1);
extern T1 T423f25ot7(TC* ac, T0* a1);
extern T1 T423f25ot8(TC* ac, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T2048f14(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.unparenthesized_expression */
extern T0* T361f15(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T2102f14(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T2101f15(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T2100f13(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_equal_symbol */
extern T1 T1061f105(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T656f103(TC* ac, T0* C);
/* ET_SYMBOL.is_equal_symbol */
extern T1 T655f88(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T417f30(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T403f177(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T403f238(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T403f302(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_equality_expression */
extern void T72f1273(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T72f1318(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_equality_types */
extern void T72f735(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_TYPES.set_right */
extern void T330f6(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_TYPES.set_left */
extern void T330f5(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_not_equal */
extern T1 T1061f85(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T656f85(TC* ac, T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T655f86(TC* ac, T0* C);
/* ET_C_GENERATOR.new_equality_types */
extern T0* T72f592(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].remove_last */
extern void T274f18(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].keep_head */
extern void T679f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].set_count */
extern void T679f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].move_last_cursors_after */
extern void T274f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].set_next_cursor */
extern void T681f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].set_after */
extern void T681f6(TC* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_TYPES.make */
extern T0* T330c3(TC* ac, T0* a1, T0* a2);
/* ET_MANIFEST_TUPLE.process */
extern void T305f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1399f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T76f323(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T76f430(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f430ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T76f498(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f498ot1(TC* ac, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T423f34(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T417f39(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T403f186(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T403f247(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T403f247ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T403f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T72f1220(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T72f1223(TC* ac, T0* C, T0* a1);
extern T1 T72f1223ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T310f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T310f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T310f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T310f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T310f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T310f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T310f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T310f32(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T310f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T310f61(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T721f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T720f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T310f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T310f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T310f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T310f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T310f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T310f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T310f56(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].force */
extern void T721f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T720f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T720f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T310f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T310f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T310f43(TC* ac, T0* C);
/* ET_RESULT.process */
extern void T266f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1399f51(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T76f301(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T76f409(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T58f439(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T843c1114(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0b_error */
extern void T41f439(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T423f11(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T417f16(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T403f164(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T403f225(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T403f287(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.process_result */
extern void T72f1209(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T72f1215(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T293f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1399f44(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T76f294(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T76f402(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T76f479(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0f_error */
extern void T58f427(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0f */
extern T0* T843c1102(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0f_error */
extern void T41f427(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T423f12(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T417f17(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T403f156(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T403f213(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T403f278(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T72f1210(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T72f1216(TC* ac, T0* C, T0* a1);
extern T1 T72f1216ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_inlined_expression */
extern void T72f865(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inlined_expression */
extern void T72f910(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.process */
extern void T361f24(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_inlined_expression */
extern void T423f62(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_inlined_expression */
extern void T417f68(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inlined_expression */
extern void T1399f106(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inlined_expression */
extern void T76f348(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inlined_expression */
extern void T403f263(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T298f31(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1399f57(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T76f307(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T423f18(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T417f23(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T403f170(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_expression */
extern void T72f1211(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T188f126(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1399f43(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T423f52(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T417f58(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T76f182(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T403f157(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_identifier */
extern void T72f1208(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T72f1214(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T72f792(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T188f46(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T72f1213(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T72f788(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_open_target_operand */
extern void T72f1218(TC* ac, T0* C, T0* a1);
extern T1 T72f1218ot1(TC* ac, T0* a1);
extern T1 T72f1218ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_indentation_end_newline */
extern void T72f828(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_else_newline */
extern void T72f1219(TC* ac, T0* C);
/* ET_C_GENERATOR.print_then_newline */
extern void T72f827(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_if */
extern void T72f825(TC* ac, T0* C);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T188f45(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local */
extern void T72f1212(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T72f857(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T72f819(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T72f749(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last_new */
extern void T219f57(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T271f18(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T365f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T365f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T365f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T271f26(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T515f1(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].detachable_less_than */
extern T1 T515f2(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].attached_less_than */
extern T1 T515f3(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern T0* T72f308(TC* ac, T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T365c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T515c4(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T271f6(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T281f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.count */
extern T6 T1529f2(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.count */
extern T6 T281f2(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_attribute_access */
extern void T72f886(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T72f918(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T72f327(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T284f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T284f6(TC* ac, T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T72f800(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T72f1499(TC* ac, T0* C, T0* a1);
extern T1 T72f1499ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T72f1498(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T72f1513(TC* ac, T0* C, T0* a1);
extern T1 T72f1513ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T72f1497(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T72f1496(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T72f1495(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T72f1494(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T72f1493(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T72f1492(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T72f1491(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T72f1490(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T72f1489(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T72f1488(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T72f1487(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T72f1486(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T72f1485(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T72f1435(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T72f1484(TC* ac, T0* C, T0* a1);
extern T1 T72f1484ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_fields */
extern T1 T338f57(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_fields */
extern T1 T496f47(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_reference_fields */
extern T1 T496f59(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_fields */
extern T1 T495f47(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_reference_fields */
extern T1 T495f59(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_fields */
extern T1 T323f56(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_reference_fields */
extern T1 T323f59(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_fields */
extern T1 T228f54(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_reference_fields */
extern T1 T228f58(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_reference_fields */
extern T1 T338f61(TC* ac, T0* C);
/* ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T72f282(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T72f1483(TC* ac, T0* C, T0* a1);
extern T1 T72f1483ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_procedure_body */
extern void T72f1434(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T72f1433(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_procedure_call_body */
extern void T72f1482(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_procedure_body */
extern void T72f1432(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T72f1431(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_procedure_body */
extern void T72f1430(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pre_ecma_mapping_body */
extern void T72f1481(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T72f1429(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_procedure_body */
extern void T72f1428(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_procedure_body */
extern void T72f1427(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T72f1426(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T72f1480(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T72f1479(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T72f1478(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T72f1477(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T72f1425(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_procedure_body */
extern void T72f1424(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_procedure_body */
extern void T72f1423(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T72f1422(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body */
extern void T72f1476(TC* ac, T0* C, T0* a1);
extern T1 T72f1476ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body_with_no_special */
extern void T72f1512(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T72f1512ot1(TC* ac, T0* a1);
extern T1 T72f1512ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_tuple_items */
extern void T72f1527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_attributes */
extern void T72f1525(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_temp_variable_to_onces_attribute */
extern void T72f1522(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_FUNCTION_TYPE.has_once_per_object_routines */
extern T1 T496f17(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_once_per_object_routines */
extern T1 T495f17(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_once_per_object_routines */
extern T1 T323f18(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_once_per_object_routines */
extern T1 T228f17(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_once_per_object_routines */
extern T1 T338f18(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_temp_variable_to_flags_attribute */
extern void T72f1521(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_flags_access */
extern void T72f1529(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_flags_name */
extern void T72f770(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_onces_attribute_to_temp_variable */
extern void T72f1519(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_once_per_object_data_type_name */
extern void T72f768(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_flags_attribute_to_temp_variable */
extern void T72f1518(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body_with_special */
extern void T72f1509(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_special_items */
extern void T72f1526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.free_actual_argument_list */
extern void T72f1517(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].force_last */
extern void T278f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].force */
extern void T692f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T693f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T693f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].resize */
extern void T278f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T692f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T693f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].new_capacity */
extern T6 T278f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].extendible */
extern T1 T278f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.force_first */
extern void T294f26(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.new_capacity */
extern T6 T294f17(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_actual_argument_list */
extern T0* T72f620(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].remove_last */
extern void T278f15(TC* ac, T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T693f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T693f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].move_last_cursors_after */
extern void T278f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].set_next_cursor */
extern void T694f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].set_after */
extern void T694f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].last */
extern T0* T278f10(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T294f19(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T294c19(TC* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T294f19p1(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T294f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].is_empty */
extern T1 T278f9(TC* ac, T0* C);
/* ET_C_GENERATOR.print_greater_than_or_equal */
extern void T72f1516(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_temp_variable_to_special_capacity_attribute */
extern void T72f1524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_assign_temp_variable_to_special_count_attribute */
extern void T72f1523(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_assign_special_capacity_attribute_to_temp_variable */
extern void T72f1520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_greater_than */
extern void T72f1508(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_special_count_attribute_to_temp_variable */
extern void T72f1515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_builtin_any_copy_body */
extern void T72f1475(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T72f1397(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T72f1421(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T72f1474(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1563f62(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1563f63(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f63ot1(TC* ac, T0* a1);
extern T1 T1563f63ot2(TC* ac, T0* a1);
extern T1 T1563f63ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T1587f54(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f54ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T1586f57(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f57ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T1585f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T247f52(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f52ot1(TC* ac, T0* a1);
extern T1 T247f52ot2(TC* ac, T0* a1);
extern T1 T247f52ot3(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T493f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T948f65(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f65ot1(TC* ac, T0* a1);
extern T1 T948f65ot2(TC* ac, T0* a1);
extern T1 T948f65ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T948f63(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T1587f47(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T1586f50(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T1585f48(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T247f45(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T493f44(TC* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T79f205(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T259f77(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T77f79(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T72f760(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T72f1420(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T72f1473(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T72f1473ac1(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T72f1473ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T72f1472(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T72f1511(TC* ac, T0* C, T0* a1);
extern T1 T72f1511ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T72f1471(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T72f1470(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T72f1469(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T72f1468(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T72f1467(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T72f1466(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T72f1465(TC* ac, T0* C, T0* a1);
extern T1 T72f1465ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T72f1464(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T72f1463(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T72f1462(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T72f1461(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T72f1460(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T72f1459(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T72f1458(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T72f1419(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T72f1457(TC* ac, T0* C, T0* a1);
extern T1 T72f1457ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_result_expression */
extern void T72f1510(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].force_last */
extern void T279f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].force */
extern void T695f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RESULT].fill_with */
extern void T696f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].extend */
extern void T696f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].resize */
extern void T279f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].aliased_resized_area */
extern T0* T695f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].aliased_resized_area */
extern T0* T696f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].new_capacity */
extern T6 T279f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].extendible */
extern T1 T279f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_result_expression */
extern T0* T72f619(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].remove_last */
extern void T279f15(TC* ac, T0* C);
/* SPECIAL [ET_RESULT].keep_head */
extern void T696f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RESULT].set_count */
extern void T696f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].move_last_cursors_after */
extern void T279f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].set_next_cursor */
extern void T697f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].set_after */
extern void T697f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].last */
extern T0* T279f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].is_empty */
extern T1 T279f9(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_function_body */
extern void T72f1418(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_function_body */
extern void T72f1417(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_real_n_out_body */
extern void T72f1456(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_function_body */
extern void T72f1416(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T72f1415(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T72f1455(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T72f1414(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T72f1413(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_function_body */
extern void T72f1412(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pre_ecma_mapping_status_body */
extern void T72f1454(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_in_assertion_body */
extern void T72f1453(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_function_body */
extern void T72f1411(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_function_body */
extern void T72f1410(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_function_body */
extern void T72f1409(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T72f1408(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_function_item_body */
extern void T72f1452(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T72f1407(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T72f1451(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T72f1406(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T72f1450(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T72f1449(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T72f1448(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T72f1447(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T72f1446(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T72f1445(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T72f1444(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T72f1405(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_function_body */
extern void T72f1404(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_function_body */
extern void T72f1403(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_function_body */
extern void T72f1402(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T72f1401(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T72f1400(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T72f1399(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T72f1443(TC* ac, T0* C, T0* a1);
extern T1 T72f1443ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_reference */
extern void T72f1507(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_expanded */
extern void T72f1506(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_special */
extern void T72f1505(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T72f1442(TC* ac, T0* C, T0* a1);
extern T1 T72f1442ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T72f1441(TC* ac, T0* C, T0* a1);
extern T1 T72f1441ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body_with_no_special */
extern void T72f1504(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body_with_special */
extern void T72f1503(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_body */
extern void T72f1440(TC* ac, T0* C, T0* a1);
extern T1 T72f1440ot1(TC* ac, T0* a1);
extern T1 T72f1440ot2(TC* ac, T0* a1);
extern T1 T72f1440ot3(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_tuple_items */
extern void T72f1502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_field */
extern void T72f1514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.free_equality_expression */
extern void T72f1528(TC* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_operator */
extern void T676f31(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].force_last */
extern void T273f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].force */
extern void T675f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].fill_with */
extern void T677f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].extend */
extern void T677f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].resize */
extern void T273f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T675f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T677f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T273f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].extendible */
extern T1 T273f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_equality_expression */
extern T0* T72f621(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].remove_last */
extern void T273f15(TC* ac, T0* C);
/* SPECIAL [ET_EQUALITY_EXPRESSION].keep_head */
extern void T677f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].set_count */
extern void T677f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].move_last_cursors_after */
extern void T273f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T678f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_after */
extern void T678f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].last */
extern T0* T273f10(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T676c24(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].is_empty */
extern T1 T273f9(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.equal_symbol */
extern T0* T78f801(TC* ac, T0* C);
/* ET_SYMBOL.make_equal */
extern T0* T655c98(TC* ac);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_special_items */
extern void T72f1501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_attributes */
extern void T72f1500(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_is_equal_body */
extern void T72f1439(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T72f1438(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T72f1437(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T1577f70(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_scoop_processor_access */
extern void T72f721(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_scoop_processor_name */
extern void T72f771(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_comma */
extern void T72f718(TC* ac, T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T72f842(TC* ac, T0* C, T0* a1);
extern T1 T72f842ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_assign_to */
extern void T72f754(TC* ac, T0* C);
/* ET_C_GENERATOR.print_separate_argument_session_name */
extern void T72f911(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_separate_argument_name */
extern void T72f995(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_separate */
extern T1 T496f46(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_separate */
extern T1 T495f46(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_separate */
extern T1 T342f19(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_separate */
extern T1 T338f51(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_separate */
extern T1 T323f49(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_separate */
extern T1 T228f34(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T72f1386(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T2012f1(TC* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T72f614(TC* ac, T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T2012c2(TC* ac);
/* UC_UTF8_STRING.has_substring */
extern T1 T834f69(TC* ac, T0* C, T0* a1);
/* UC_STRING.has_substring */
extern T1 T454f69(TC* ac, T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f46(TC* ac, T0* C, T0* a1);
/* STRING_8.same_characters */
extern T1 T17f23(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T72f1385(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T72f1396(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_string */
extern T1 T834f64(TC* ac, T0* C, T0* a1);
/* UC_STRING.same_string */
extern T1 T454f65(TC* ac, T0* C, T0* a1);
/* STRING_8.same_string */
extern T1 T17f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].force_last */
extern void T75f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T75f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T75f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T75f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T75f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].resize */
extern void T75f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T75f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T75f35(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T75f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T75f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T75f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T75f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T75f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T75f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T75f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T75f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T75f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].search_position */
extern void T75f47(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T158f1(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T158f1e1(TC* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_equal */
extern T1 T834f44(TC* ac, T0* C, T0* a1);
/* UC_STRING.is_equal */
extern T1 T454f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T75f27(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T75f48(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].remove */
extern void T75f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_position */
extern void T75f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T75f76(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_keep_head */
extern void T75f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_keep_head */
extern void T75f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].move_cursors_forth */
extern void T75f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T399f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T399f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_after */
extern void T399f10(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].internal_set_key_equality_tester */
extern void T75f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T75f31(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_cpp_includes */
extern void T72f1384(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_cpp_header_filename */
extern void T72f1395(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T87f308(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_malloc_current */
extern void T72f849(TC* ac, T0* C, T0* a1);
extern T1 T72f849ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.current_universe */
extern T0* T72f371(TC* ac, T0* C);
/* ET_C_GENERATOR.print_feature_info_message_call */
extern void T72f1383(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_show_console_call */
extern void T72f755(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T1529f13(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T281f5(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T523f10(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T496f38(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T495f38(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T323f35(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T338f35(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_empty */
extern T1 T228f28(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_empty */
extern T1 T342f14(TC* ac, T0* C);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T72f1249(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T72f806(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_result_name */
extern void T72f715(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_string */
extern void T72f748(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T72f848(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T72f822(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T72f822ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_context_type_declaration */
extern void T72f716(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_routine_name */
extern void T72f1382(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T72f1382ot1(TC* ac, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T1576f85(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1399f22(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1398f55(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T403f97(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T403f109(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0b_error */
extern void T58f382(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0b */
extern T0* T843c1057(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0b_error */
extern void T41f382(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T403f119(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T403f134(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T1413f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T403f133(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T58f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T843c958(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T58f44(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T41f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T41f44(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T58f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T843c957(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T58f43(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T41f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T41f43(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T58f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T843c956(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T41f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T76f155(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T76f160(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T76f142(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T76f150(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T76f149(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T72f1296(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T72f1341(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T72f1226(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_feature */
extern void T72f1227(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_assign_called_to_once_status */
extern void T72f1247(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status_is_completed */
extern void T72f1246(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_statement */
extern void T72f1245(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_thread_safe_once_value */
extern void T72f1242(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_value */
extern void T72f1258(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_value_to_result */
extern void T72f1241(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_lock */
extern void T72f1239(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_try_lock */
extern void T72f1238(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_thread_safe_once_value */
extern void T72f1237(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_thread_safe_once_exception_if_any */
extern void T72f1236(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_once_value */
extern void T72f1234(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_once_exception_if_any */
extern void T72f1233(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_global_mutex_unlock */
extern void T72f1231(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_global_mutex_lock */
extern void T72f1230(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].value */
extern T6 T311f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].position_of_key */
extern T6 T311f35(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T1574f84(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1399f21(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1398f54(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T403f96(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T403f108(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T403f124(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T1413f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T403f123(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_query_type_validity */
extern void T403f122(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T76f154(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T76f159(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T76f164(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T76f163(TC* ac, T0* C, T0* a1);
extern T1 T76f163ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_extended_attribute_result_dynamic_types */
extern void T76f167(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T76f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_deferred_function */
extern void T72f1295(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T72f1340(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T1573f87(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1399f20(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1398f53(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T403f95(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T403f107(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T58f381(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T843c1056(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0c_error */
extern void T41f381(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T76f153(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T76f158(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_function */
extern void T72f1294(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T72f1339(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T72f1367(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T522f85(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1399f19(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1398f20(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T403f94(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T403f106(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T76f152(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T76f157(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T72f1272(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T72f1317(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T518f82(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1399f18(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1398f19(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T403f92(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T403f104(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T76f133(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T76f135(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T76f137(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T76f135p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T72f1221(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T72f1224(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T394f85(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1399f17(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1398f18(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T403f103(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T403f115(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T58f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T843c1074(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T58f101(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T41f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T41f101(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T76f181(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T76f205(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T72f1539(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T72f1567(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T72f1589(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_unqualified_call_expression */
extern void T72f1594(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].force_last */
extern void T276f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].force */
extern void T685f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].fill_with */
extern void T687f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].extend */
extern void T687f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].resize */
extern void T276f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T685f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T687f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].new_capacity */
extern T6 T276f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].extendible */
extern T1 T276f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_unqualified_call_expression */
extern T0* T72f626(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T686f39(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].remove_last */
extern void T276f15(TC* ac, T0* C);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].keep_head */
extern void T687f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].set_count */
extern void T687f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].move_last_cursors_after */
extern void T276f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].set_next_cursor */
extern void T688f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].set_after */
extern void T688f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].last */
extern T0* T276f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].is_empty */
extern T1 T276f9(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T392f84(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1399f16(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1398f17(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T403f102(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T403f114(TC* ac, T0* C, T0* a1);
extern T1 T403f114ot1(TC* ac, T0* a1);
extern T1 T403f114ot2(TC* ac, T0* a1);
extern T1 T403f114ot3(TC* ac, T0* a1);
extern T1 T403f114ot4(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T58f398(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T843c1073(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T58f100(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T41f398(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T41f100(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.system_string_type */
extern T0* T191f89(TC* ac, T0* C);
/* ET_SYSTEM.system_string_type */
extern T0* T45f93(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_string_type */
extern T0* T63f92(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vqmc5b_error */
extern void T58f397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc5b */
extern T0* T843c1072(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc5b_error */
extern void T41f397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T58f396(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T843c1071(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T58f99(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T41f396(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T41f99(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T58f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T843c1070(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T58f98(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T41f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T41f98(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T58f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T843c1069(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T41f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T58f393(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T843c1068(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T58f97(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T41f393(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T41f97(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2b_error */
extern void T58f392(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc2b */
extern T0* T843c1067(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T843f1067ot1(TC* ac, T0* a1);
extern T1 T843f1067ot2(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2b_error */
extern void T41f392(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T58f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T843c1066(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T58f96(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T41f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T41f96(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1551f15(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1550f15(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1549f15(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1548f15(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T395f22(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T1547f16(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T1546f16(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1544f14(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1558f22(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1557f22(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_boolean_constant */
extern T1 T1556f23(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_boolean_constant */
extern T1 T1555f23(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T1553f24(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T1552f24(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T1545f23(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T76f180(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T76f204(TC* ac, T0* C, T0* a1);
extern T1 T76f204ot1(TC* ac, T0* a1);
extern T1 T76f204ot2(TC* ac, T0* a1);
extern T1 T76f204ot3(TC* ac, T0* a1);
extern T1 T76f204ot4(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T72f1538(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T72f1566(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T383f81(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1399f15(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1398f16(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T403f101(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T403f113(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0a_error */
extern void T58f390(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0a */
extern T0* T843c1065(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0a_error */
extern void T41f390(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T76f179(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T76f203(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T72f1537(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T72f1565(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.process */
extern void T382f86(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1399f14(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1398f15(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_extended_attribute */
extern void T403f100(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T403f112(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwab0a_error */
extern void T58f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwab0a */
extern T0* T843c1064(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.position */
extern T0* T382f80(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T1578f5(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vwab_error */
extern T1 T58f95(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwab0a_error */
extern void T41f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwab_error */
extern T1 T41f95(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_self_initializing */
extern T1 T1585f61(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_self_initializing_with_type_mark */
extern T1 T1585f73(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_self_initializing */
extern T1 T259f90(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T259f108(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_self_initializing */
extern T1 T247f58(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T247f74(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_self_initializing */
extern T1 T77f92(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T77f117(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_self_initializing */
extern T1 T1587f60(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T1587f72(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_self_initializing */
extern T1 T1586f63(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T1586f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_self_initializing */
extern T1 T493f57(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_self_initializing_with_type_mark */
extern T1 T493f66(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T58f388(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T843c1063(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0e_error */
extern void T41f388(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T76f178(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T76f202(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_extended_attribute */
extern void T72f1536(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_extended_attribute */
extern void T72f1564(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T258f93(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1399f13(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1398f14(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T403f99(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T403f111(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T76f174(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T76f198(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T76f78(TC* ac, T0* C);
/* ET_LIKE_FEATURE.same_base_type_with_type_marks */
extern T1 T1585f77(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_type_with_type_marks */
extern T1 T79f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_class_type_with_type_marks */
extern T1 T77f123(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_type_with_type_marks */
extern T1 T259f104(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T77f127(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type_with_type_marks */
extern T1 T247f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f70ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.same_base_formal_parameter_type_with_type_marks */
extern T1 T77f126(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1563f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1563f59ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T948f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T948f61ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.same_base_type_with_type_marks */
extern T1 T77f116(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_type_with_type_marks */
extern T1 T1587f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1587f75ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_type_with_type_marks */
extern T1 T1586f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1586f78ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_base_type_with_type_marks */
extern T1 T493f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T246f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T246f53ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_base_type_with_type_marks */
extern T1 T1535f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_base_type_with_type_marks */
extern T1 T259f111(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_type_with_type_marks */
extern T1 T77f128(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_type_with_type_marks */
extern T1 T79f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T76f226(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T76f293(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T76f292(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T76f291(TC* ac, T0* C, T0* a1);
extern T1 T76f291ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T76f290(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_type_conforms_to */
extern void T76f289(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_type_conforms_to_feature */
extern void T68f114(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_storable_version_of_type */
extern void T76f288(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at_offset */
extern void T76f287(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at */
extern void T76f286(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field */
extern void T76f285(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_type_instance_of */
extern void T76f284(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_tuple_instance_of */
extern void T76f283(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_special_of_reference_instance_of */
extern void T76f282(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_instance_of */
extern void T76f281(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_object_id */
extern void T76f280(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_is_object_id_of_current */
extern void T76f279(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_id_object */
extern void T76f278(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_current_object_id */
extern void T76f277(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T76f276(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T76f275(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T76f274(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T76f273(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T76f272(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T76f271(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T76f270(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T76f269(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T76f268(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T76f267(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T76f266(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T258f87(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T76f198p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T72f1530(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T72f1562(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T524f81(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1399f12(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1398f21(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T403f93(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T403f105(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T76f134(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T76f136(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T72f1222(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T72f1225(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T58f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T843c1004(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T1317f14(TC* ac, T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T1317f16(TC* ac, T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T1317f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T58f61(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T41f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T41f61(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T1317f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.postconditions */
extern T0* T1577f14(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.postconditions */
extern T0* T1576f13(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.postconditions */
extern T0* T1574f12(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.postconditions */
extern T0* T1573f13(TC* ac, T0* C);
/* ET_DO_FUNCTION.postconditions */
extern T0* T522f15(TC* ac, T0* C);
/* ET_DO_PROCEDURE.postconditions */
extern T0* T518f20(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.postconditions */
extern T0* T382f11(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.postconditions */
extern T0* T258f14(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.postconditions */
extern T0* T524f18(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T58f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T843c1003(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T431f13(TC* ac, T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T431f15(TC* ac, T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T431f14(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T41f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T431f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.preconditions */
extern T0* T1577f10(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.preconditions */
extern T0* T1576f11(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.preconditions */
extern T0* T1574f10(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.preconditions */
extern T0* T1573f11(TC* ac, T0* C);
/* ET_DO_FUNCTION.preconditions */
extern T0* T522f13(TC* ac, T0* C);
/* ET_DO_PROCEDURE.preconditions */
extern T0* T518f17(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.preconditions */
extern T0* T382f9(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.preconditions */
extern T0* T258f10(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.preconditions */
extern T0* T524f15(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.redeclared_clients */
extern T0* T504f28(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.item */
extern T0* T433f3(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T504f55(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T58f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T843c1020(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T41f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T58f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T843c1019(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T58f68(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T41f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T41f68(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T58f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T843c1018(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T41f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T58f337(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T843f1017(TC* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T843c1016(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T41f337(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T58f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T843c1015(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T41f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T58f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T843c1014(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T41f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.ise_19_01_0 */
extern T0* T504f30(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T58f334(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T843c1013(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T58f66(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T41f334(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T41f66(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T58f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T843c1012(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.first_alias_name */
extern T0* T843f265(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T58f65(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T41f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T41f65(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T58f332(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T843c1011(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T41f332(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T58f331(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T843c1010(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T41f331(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T1577f84(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T258f85(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T524f75(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T1576f78(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T518f76(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T1574f78(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T1573f81(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T522f79(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T394f78(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T392f77(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T382f79(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T383f74(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1630f19(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.implementation_feature */
extern T0* T1577f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.implementation_feature */
extern T0* T1576f7(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.implementation_feature */
extern T0* T1574f6(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.implementation_feature */
extern T0* T1573f7(TC* ac, T0* C);
/* ET_DO_FUNCTION.implementation_feature */
extern T0* T522f9(TC* ac, T0* C);
/* ET_DO_PROCEDURE.implementation_feature */
extern T0* T518f9(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.implementation_feature */
extern T0* T394f7(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.implementation_feature */
extern T0* T392f6(TC* ac, T0* C);
/* ET_ATTRIBUTE.implementation_feature */
extern T0* T383f5(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.implementation_feature */
extern T0* T382f5(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.implementation_feature */
extern T0* T258f6(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.implementation_feature */
extern T0* T524f1(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T1577f83(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T1576f77(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T1574f77(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T1573f80(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T522f78(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T518f75(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T394f77(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T392f76(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T383f73(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T382f78(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T258f84(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T524f74(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T504f53(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_feature_validity */
extern void T1398f13(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T58f310(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T843c989(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T58f52(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T41f310(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T41f52(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1630f17(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1416f22(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1417f18(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T504f50(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1417f11(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1630f10(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T1577f61(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T258f40(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T524f52(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T1576f56(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T518f54(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T1574f57(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T1573f61(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T522f59(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T394f39(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T392f38(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T382f38(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T383f37(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_immediate */
extern T1 T1417f10(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_immediate */
extern T1 T1630f9(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_immediate */
extern T1 T1577f60(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_immediate */
extern T1 T258f39(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_immediate */
extern T1 T524f51(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_immediate */
extern T1 T1576f55(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_immediate */
extern T1 T518f53(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_immediate */
extern T1 T1574f56(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_immediate */
extern T1 T1573f60(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_immediate */
extern T1 T522f58(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_immediate */
extern T1 T394f38(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_immediate */
extern T1 T392f37(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_immediate */
extern T1 T382f37(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_immediate */
extern T1 T383f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1382f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T1382f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1382f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T1382f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1730f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T1382f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T1382f63(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T504f39(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1390f23(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1390f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1750f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1750f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1750f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1750f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1750f54(TC* ac, T0* C);
/* SPECIAL [ET_REPLICABLE_FEATURE].keep_head */
extern void T1972f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].set_count */
extern void T1972f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1750f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1750f52(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1971f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_after */
extern void T1971f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1750f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1750f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1750f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1971f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1750f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1750f23(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1630f25(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1630f18(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1417f27(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1417f19(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.selected_count */
extern T6 T1752f2(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1390f34(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T58f367(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T843c1046(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1979f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1979f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1754f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1979f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1754f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1979f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1754f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1979f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1754f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1979f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1754f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_after */
extern void T1979f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1754f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1979f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].before */
extern T1 T1979f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1754f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1979c9(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1754f7(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T58f87(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T41f367(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T41f87(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1630f33(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1764f8(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T2146f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T2146c3(TC* ac, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1764c7(TC* ac);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1764f9(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1417f37(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1416f23(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1630f35(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1417f39(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1630f34(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1417f38(TC* ac, T0* C, T6 a1);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1752f5(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1753f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T58f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T843c1045(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T41f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1390f18(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1390f27(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1753f16(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1753f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1753f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1975f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1753f20(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1975f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1754f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].force */
extern void T1977f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].fill_with */
extern void T1978f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].extend */
extern void T1978f7(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1630f26(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1417f28(TC* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1753f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1753f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1753f6(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1753f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1753f15(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1753f17(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1753f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].off */
extern T1 T1975f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1754c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1754f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1977f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make_empty */
extern T0* T1978c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1977c2(TC* ac);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1630f23(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1417f25(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1752f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1750f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1750f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1750f32(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1630f22(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1417f24(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.has_replication */
extern T1 T1752f3(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1750f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1750f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1750f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1750f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1750f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1971f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1750f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1750f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1750f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].off */
extern T1 T1971f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1750f28(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1390f33(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1750f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1750f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1750f59(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].force */
extern void T1974f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].fill_with */
extern void T1972f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].extend */
extern void T1972f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1750f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1750f61(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1750f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1750f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1750f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1750f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1750f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1750f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1750f68(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1974f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1972f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1750f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1750f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1750f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1750f47(TC* ac, T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1752c6(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1753c12(TC* ac);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1753f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1753f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1975c7(TC* ac, T0* a1);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1630f24(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1417f26(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1752f7(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1753f13(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1976f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1976c3(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1750f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1750f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1750f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1750f58(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1390f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T58f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T843c1038(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T58f80(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T41f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T41f80(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T58f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T843c1037(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T58f79(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T41f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T41f79(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1749f49(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1749f62(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1749f61(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1749f60(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1749f59(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1749f58(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1749f57(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1969f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_after */
extern void T1969f9(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1749f48(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1749f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1749f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1969f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1749f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1749f26(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T58f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T843c1036(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T58f78(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T41f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T41f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1749f40(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1749f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1749f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1749f38(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1749f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1749f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1749f37(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1749f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1969f4(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1749f47(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1749f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1749f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].off */
extern T1 T1969f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1749f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1748f43(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1748f60(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1748f59(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1748f58(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1748f57(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1748f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1748f56(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1968f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_after */
extern void T1968f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1748f42(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1748f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1748f74(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1968f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1748f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1748f22(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T58f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T843c1035(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T58f77(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T41f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T41f77(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1748f31(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1748f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1748f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1748f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1748f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].after */
extern T1 T1968f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1748f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1748f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1748f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].off */
extern T1 T1968f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1404f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1404f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1404f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1404f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1404f54(TC* ac, T0* C);
/* SPECIAL [ET_RENAME].keep_head */
extern void T1772f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].set_count */
extern void T1772f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1404f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1404f52(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1771f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_after */
extern void T1771f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1404f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1404f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1404f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1771f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1404f74(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1404f23(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T58f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T843c1034(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T58f76(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T41f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T41f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1404f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1404f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1404f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1404f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1404f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1771f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1404f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1404f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1404f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].off */
extern T1 T1771f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last_new */
extern void T1382f75(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T1382f86(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T1382f85(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T1382f79(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T1382f80(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T1382f84(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1382f89(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1382f88(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T1382f87(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1390f21(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1417f31(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1417c29(TC* ac, T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1417f30(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1630f30(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1630f21(TC* ac, T0* C, T6 a1);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1416f33(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_has_other_effective */
extern void T1416f32(TC* ac, T0* C, T1 a1);
/* ET_PARENT_FEATURE.set_has_other_deferred */
extern void T1416f31(TC* ac, T0* C, T1 a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1417f34(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1417f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T1382f76(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1390f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1630f29(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1630c27(TC* ac, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.reset */
extern void T1630f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1416f28(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1416f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1749f46(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1749f54(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1749f25(TC* ac, T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1416f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1749f21(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1749f42(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1749f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1749f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1749f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1749f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1748f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1748f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1748f72(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1748f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_keep_head */
extern void T1748f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_keep_head */
extern void T1748f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1748f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1748f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1748f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1748f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1748f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1748f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1748f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1748f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1748f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1748f21(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1748f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1748f39(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1416f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1404f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1404f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1404f65(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1404f64(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_RENAME].force */
extern void T1775f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME].fill_with */
extern void T1772f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].extend */
extern void T1772f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1404f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1404f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1404f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1404f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1404f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1404f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1404f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1404f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1404f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1404f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1404f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1404f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1404f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1390f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1416f30(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.make */
extern T0* T1416c24(TC* ac, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.reset */
extern void T1416f29(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T1382f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T1382f83(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T1382f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T1382f82(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T1382f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T1382f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T1382f37(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1390f32(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T58f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T843c1044(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T58f86(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T41f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T41f86(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1749f51(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1749f69(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1749f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1749f65(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T489f4(TC* ac, T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T489f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1749f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1749f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1749f39(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1749f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1749f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1749f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1749f24(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1390f31(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T58f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T843c1043(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T58f85(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T41f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T41f85(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1390f30(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T58f363(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T843c1042(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T58f84(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T41f363(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T41f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1748f32(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1390f29(TC* ac, T0* C, T0* a1);
extern T1 T1390f29ot1(TC* ac, T0* a1);
extern T1 T1390f29ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T58f362(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T843c1041(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T58f83(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T41f362(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T41f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1748f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T1212f5(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T1212f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1748f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1748f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1748f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1748f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1748f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1748f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1748f36(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T58f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T843c1040(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ALL_EXPORT.position */
extern T0* T1568f4(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T58f82(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T41f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T41f82(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1404f30(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1390f28(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T58f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T843c1039(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T58f81(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T41f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T41f81(TC* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T1578f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T188f111(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put_new */
extern void T1404f46(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T487f4(TC* ac, T0* C, T6 a1);
/* ET_RENAME_LIST.item */
extern T0* T487f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1404f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1404f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1404f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1404f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1404f61(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].aliased_resized_area */
extern T0* T1775f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].aliased_resized_area */
extern T0* T1772f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1404f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1404f21(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1390f24(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T58f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T843c1033(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T41f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1391f20(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1758f36(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1758f45(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1758f44(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1758f43(TC* ac, T0* C);
/* SPECIAL [ET_DOTNET_FEATURE].keep_head */
extern void T1980f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].set_count */
extern void T1980f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1758f42(TC* ac, T0* C);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].keep_head */
extern void T1983f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].set_count */
extern void T1983f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1758f41(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1758f40(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1986f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_after */
extern void T1986f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1756f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1756f47(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1756f46(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1756f45(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1756f44(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1756f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1756f43(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1981f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_after */
extern void T1981f7(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1391f23(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1391f17(TC* ac, T0* C, T0* a1);
/* ET_RENAME.make */
extern T0* T1409c6(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern T0* T78f221(TC* ac, T0* C);
/* ET_KEYWORD.make_as */
extern T0* T438c53(TC* ac);
/* ET_RENAME.tokens */
extern T0* T1409f4(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1391f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1391f15(TC* ac, T0* C);
/* ET_ECF_LIBRARY.system_object_parents */
extern T0* T191f88(TC* ac, T0* C);
/* ET_SYSTEM.system_object_parents */
extern T0* T45f9(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_object_parents */
extern T0* T63f91(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1391f13(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features_from_parents */
extern void T1391f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1391f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1391f14(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1391f25(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1760f15(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1760f17(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1760f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1988f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1760f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1988f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1760f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1760f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1760f6(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1760f8(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1760f14(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1760f16(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1760f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].off */
extern T1 T1988f6(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1758f24(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1758f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1758f29(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1758f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1758f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1758f22(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1755f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1758f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1758f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1758f23(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1391f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1391f18(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1756f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1756f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1756f26(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1756f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1756f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1756f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1756f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1756f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1756f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1756f20(TC* ac, T0* C, T6 a1);
/* ET_PARENT_LIST.has_conforming_parent */
extern T1 T483f10(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1391f21(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1391f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1756f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1756f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1756f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1756f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1756f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].force */
extern void T1982f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].fill_with */
extern void T1980f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].extend */
extern void T1980f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last_new */
extern void T1758f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1758f51(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1758f50(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].force */
extern void T1987f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].fill_with */
extern void T1983f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].extend */
extern void T1983f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1758f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1758f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1758f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1758f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1758f32(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1758f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1982f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1980f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1758f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1987f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1983f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1758f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1758f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1758f21(TC* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1760c11(TC* ac);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1760f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1760f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1988c7(TC* ac, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1760f12(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1989f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1989c3(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last_new */
extern void T1382f77(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T1382f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1756f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1756f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1756f27(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1756f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1756f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1756f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1756f28(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T504f37(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1396f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T504f36(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1397f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1397f10(TC* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T483f6(TC* ac, T0* C, T6 a1);
/* ET_PARENT.parent */
extern T0* T482f10(TC* ac, T0* C);
/* ET_PARENT_LIST.item */
extern T0* T483f8(TC* ac, T0* C, T6 a1);
/* ET_CLASS.parents */
extern T0* T79f124(TC* ac, T0* C, T6 a1);
/* ET_CLASS.implicit_parent_clause */
extern T0* T79f139(TC* ac, T0* C);
/* ET_ECF_LIBRARY.any_parents */
extern T0* T191f23(TC* ac, T0* C);
/* ET_SYSTEM.any_parents */
extern T0* T45f10(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_parents */
extern T0* T63f26(TC* ac, T0* C);
/* ET_CLASS.parents_count */
extern T6 T79f123(TC* ac, T0* C);
/* ET_CLASS.has_explicit_conforming_parent */
extern T1 T79f138(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.has_conforming_parent */
extern T1 T1310f5(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T504f34(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_flattening_error */
extern void T79f268(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T504c32(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_map */
extern T0* T1400c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1400f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_sparse_container */
extern void T1400f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1400f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_cursor */
extern T0* T1400f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].make */
extern T0* T1766c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_slots */
extern void T1400f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_clashes */
extern void T1400f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_key_storage */
extern void T1400f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_item_storage */
extern void T1400f72(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1399c10(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern T0* T1399f6(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1399f7(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1399f10p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1399f5(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1398c12(TC* ac, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern void T1398f12p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_map */
extern T0* T1765c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_with_equality_testers */
extern void T1765f34(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_sparse_container */
extern void T1765f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].set_internal_cursor */
extern void T1765f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_cursor */
extern T0* T1765f24(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make */
extern T0* T1995c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_slots */
extern void T1765f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_clashes */
extern void T1765f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_key_storage */
extern void T1765f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_item_storage */
extern void T1765f36(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make */
extern T0* T1996f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make_empty */
extern T0* T1998c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].default_create */
extern T0* T1996c3(TC* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1397c8(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1397f8p1(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1397f5(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.make */
extern T0* T1396c9(TC* ac, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T1396f9p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1396f5(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1395c10(TC* ac, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern void T1395f10p1(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1394c8(TC* ac, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make_default */
extern T0* T1761c10(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make */
extern void T1761f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T753c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1480f1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1480c3(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern void T271f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T271c16(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_map */
extern T0* T1990c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_with_equality_testers */
extern void T1990f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_sparse_container */
extern void T1990f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].set_internal_cursor */
extern void T1990f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_cursor */
extern T0* T1990f26(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T2079c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_slots */
extern void T1990f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_clashes */
extern void T1990f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_key_storage */
extern void T1990f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_item_storage */
extern void T1990f53(TC* ac, T0* C, T6 a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1394f8p1(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1394f7(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1393c6(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1393f6p1(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1393f4(TC* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1392c7(TC* ac, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1392f5(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1391c19(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1758f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1758c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1758f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1758f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1758f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1758f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1986c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1758f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1758f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1758f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1982f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make_empty */
extern T0* T1980c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1982c3(TC* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1758f57(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1987f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_empty */
extern T0* T1983c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1987c3(TC* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1756f32(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1755c2(TC* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1756c31(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1756f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1756f25(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1981c6(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1756f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1756f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1756f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1756f37(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1391f19p1(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1391f12(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1390c22(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1750c42(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1750f49(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1750f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1750f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1750f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1971c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1750f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1750f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1750f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1750f71(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1974f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make_empty */
extern T0* T1972c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1974c3(TC* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1749f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1749c43(TC* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1749f52(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1749f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_internal_cursor */
extern void T1749f77(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1749f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1969c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1749f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1749f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1749f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1749f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1748f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1748c37(TC* ac, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_internal_cursor */
extern void T1748f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1748f20(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1968c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1748f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1748f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1748f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1748f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1404f42(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern T0* T1390f17(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1404c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1404f51(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1404f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_internal_cursor */
extern void T1404f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1404f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1771c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1404f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1404f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1404f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1404f76(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1775f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].make_empty */
extern T0* T1772c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1775c3(TC* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1390f22p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1390f16(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_map */
extern T0* T1389c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_with_equality_testers */
extern void T1389f42(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_sparse_container */
extern void T1389f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1389f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_slots */
extern void T1389f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_clashes */
extern void T1389f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_key_storage */
extern void T1389f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_item_storage */
extern void T1389f44(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].make */
extern T0* T1746f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].make_empty */
extern T0* T1747c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].default_create */
extern T0* T1746c3(TC* ac);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].make */
extern T0* T1388c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].set_internal_cursor */
extern void T1388f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_cursor */
extern T0* T1388f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].make */
extern T0* T1743c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].make */
extern T0* T1741f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].make_empty */
extern T0* T1742c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].default_create */
extern T0* T1741c3(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1385f36(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T504f24(TC* ac, T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1386c2(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T1385c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1385f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T1385f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_internal_cursor */
extern void T1385f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1385f32(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1740c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T1385f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T1385f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T1385f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T1739f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make_empty */
extern T0* T1737c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T1739c3(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T1385f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1735f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make_empty */
extern T0* T1731c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1735c3(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1382f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T504f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T1382c44(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1382f54(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T1382f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_internal_cursor */
extern void T1382f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1382f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1730c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T1382f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T1382f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T1382f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T1382f69(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.make */
extern void T504f32p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T504f23(TC* ac, T0* C);
/* ET_CLASS.set_features_flattened */
extern void T79f298(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_class */
extern void T501f1073(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.internal_process_class */
extern void T501f1256(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_class_processed */
extern void T398f111(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_class_processed */
extern void T69f107(TC* ac, T0* C, T0* a1);
/* ET_CLASS.reset_preparsed */
extern void T79f297(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1539c9(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T512f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T58f351(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T58f379(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T2003c14(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T216f96(TC* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T216f100(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T216f102(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T628f97(TC* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T628f101(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.string_ */
extern T0* T628f104(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T58f73(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T41f351(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T41f379(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T41f73(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T860f47(TC* ac, T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T492f8(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T435f9(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T512f2(TC* ac, T0* C);
/* ET_CLASS.set_syntax_error */
extern void T79f266(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T58f264(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T2001c23(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T58f47(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T41f264(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T41f47(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T58f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T843c959(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T58f46(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T41f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T41f46(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T501f753(TC* ac, T0* C);
/* ET_CLASS.set_filename */
extern void T79f296(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T501f1259(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.set_has_utf8_bom */
extern void T79f315(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yyparse */
extern void T501f1260(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T501f1270(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T501f1269(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T501f1268(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T501f1297(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_954 */
extern void T501f2267(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T501f2275(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T1002f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T1002f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T1002f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T1002f6(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_953 */
extern void T501f2266(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].force */
extern void T1042f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IDENTIFIER].fill_with */
extern void T1043f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IDENTIFIER].extend */
extern void T1043f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_952 */
extern void T501f2265(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_951 */
extern void T501f2264(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_950 */
extern void T501f2263(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T1052f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T1054f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T1054f10(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T1553f45(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T1552f45(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T510f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T501f776(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_949 */
extern void T501f2262(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T1553f44(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T1552f44(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_948 */
extern void T501f2261(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_947 */
extern void T501f2260(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_946 */
extern void T501f2259(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_945 */
extern void T501f2258(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_944 */
extern void T501f2257(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_943 */
extern void T501f2256(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T1044f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T1046f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T1046f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_942 */
extern void T501f2255(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T1551f70(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T1550f70(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T1549f70(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T1548f70(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T395f72(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_941 */
extern void T501f2254(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_940 */
extern void T501f2253(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_939 */
extern void T501f2252(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_938 */
extern void T501f2251(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_937 */
extern void T501f2250(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_936 */
extern void T501f2249(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T1028f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T1030f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T1030f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_935 */
extern void T501f2248(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_934 */
extern void T501f2247(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T1034f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T1036f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T1036f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_933 */
extern void T501f2246(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T1034f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T1036f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_932 */
extern void T501f2245(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_931 */
extern void T501f2244(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_930 */
extern void T501f2243(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_929 */
extern void T501f2242(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T1050f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T1051f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T1051f10(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_cast_type */
extern void T1547f58(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T1546f54(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T1545f48(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_928 */
extern void T501f2241(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T1050f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T1051f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_927 */
extern void T501f2240(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_926 */
extern void T501f2239(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_925 */
extern void T501f2238(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_924 */
extern void T501f2237(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_923 */
extern void T501f2236(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_922 */
extern void T501f2235(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_921 */
extern void T501f2234(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_920 */
extern void T501f2233(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_919 */
extern void T501f2232(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_918 */
extern void T501f2231(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_917 */
extern void T501f2230(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_916 */
extern void T501f2229(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_915 */
extern void T501f2228(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_914 */
extern void T501f2227(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_913 */
extern void T501f2226(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_912 */
extern void T501f2225(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_911 */
extern void T501f2224(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_910 */
extern void T501f2223(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T501f2222(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T501f2221(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T501f2220(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T501f2219(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T501f2218(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T501f2217(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T501f2216(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T501f2215(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T501f2214(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T501f2213(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T501f2212(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T501f2211(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T501f2210(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T501f2209(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T501f2208(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T1086f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T1087f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T1087f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T1086f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T1087f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T510f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T1620c14(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern T0* T78f1554(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T1072c46(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T1072f49(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T1620f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T501f2207(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T501f2206(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T501f2205(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T1088f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T1090f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T1090f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T1088f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T1090f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T501f2276(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T1002f13(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T510f332(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T501f2204(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T1091f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T1093f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T1093f10(TC* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T1092f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T1867f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T1866f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T1866f7(TC* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern T0* T1092f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T1867c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T501f2203(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T1091f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T1093f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T510f331(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T1092c14(TC* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T1092f14p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1867f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T1866c4(TC* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T1092f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T501f968(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T501f970(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T1006f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T501f2202(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T501f2201(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T501f2279(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T1006f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T1024f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T1025f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].extend */
extern void T1025f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T1006f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T1024f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T1025f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T1006f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T1006f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T501f2200(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T501f2273(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T501f2278(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T1006f10(TC* ac, T0* C);
/* SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T1025f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].set_count */
extern void T1025f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T501f2199(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T501f2198(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T501f2197(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T1094f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T1095f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T1095f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T1094f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T1095f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T510f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T1619c12(TC* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T1619f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T501f2196(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T501f2195(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T501f2194(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T501f2193(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T501f1022(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T510f355(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T521f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_inline_separate_argument */
extern void T188f123(TC* ac, T0* C, T1 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.index_of_name */
extern T6 T1543f4(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.index_of_name */
extern T6 T388f4(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1831f11(TC* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T1266f10(TC* ac, T0* C, T1 a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1830f13(TC* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T261f12(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T501f2192(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T501f2287(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1011f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1713f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].fill_with */
extern void T1712f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].extend */
extern void T1712f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].resize */
extern void T1011f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1713f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1712f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].new_capacity */
extern T6 T1011f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].extendible */
extern T1 T1011f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].force */
extern void T1009f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].force */
extern void T1709f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].fill_with */
extern void T1708f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].extend */
extern void T1708f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].resize */
extern void T1009f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1709f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1708f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].new_capacity */
extern T6 T1009f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].extendible */
extern T1 T1009f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T1007f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1705f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1704f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1704f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T1007f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1705f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1704f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T1007f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T1007f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T1004f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T1271f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T1272f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T1272f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T1004f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1271f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1272f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T1004f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T1004f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T1003f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T1224f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T1225f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T1225f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T1003f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1224f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1225f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T1003f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T1003f7(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T501f2191(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T501f2190(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].force */
extern void T1239f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_AGENT].fill_with */
extern void T1240f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_AGENT].extend */
extern void T1240f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1239f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1240f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_inline_agent */
extern void T501f2298(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T501f2302(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].remove */
extern void T1011f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].keep_head */
extern void T1712f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].set_count */
extern void T1712f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].item */
extern T0* T1011f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].is_empty */
extern T1 T1011f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1012f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1714f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].fill_with */
extern void T1715f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].extend */
extern void T1715f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].resize */
extern void T1012f11(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1714f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1715f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].new_capacity */
extern T6 T1012f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].extendible */
extern T1 T1012f5(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.wipe_out */
extern void T1543f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T802f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.fixed_array */
extern T0* T1543f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].default_create */
extern T0* T802c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].remove */
extern void T1009f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].keep_head */
extern void T1708f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].set_count */
extern void T1708f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].item */
extern T0* T1009f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].is_empty */
extern T1 T1009f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].force */
extern void T1010f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].force */
extern void T1710f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].fill_with */
extern void T1711f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].extend */
extern void T1711f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].resize */
extern void T1010f11(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1710f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1711f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].new_capacity */
extern T6 T1010f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].extendible */
extern T1 T1010f5(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.wipe_out */
extern void T388f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].keep_head */
extern void T798f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ITERATION_COMPONENT_LIST.fixed_array */
extern T0* T388f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].default_create */
extern T0* T798c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T1007f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1704f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1704f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T1007f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T1007f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].force */
extern void T1008f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].force */
extern void T1706f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST_LIST].fill_with */
extern void T1707f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST_LIST].extend */
extern void T1707f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].resize */
extern void T1008f11(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1706f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1707f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T1008f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].extendible */
extern T1 T1008f5(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T521f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].keep_head */
extern void T793f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern T0* T521f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].default_create */
extern T0* T793c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T1004f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T1272f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T1272f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T1004f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T1004f5(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T1003f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T1225f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T1225f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T1003f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T1003f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T1618f45(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T1617f51(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T1616f47(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T1615f46(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T1614f52(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T1613f48(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.cloned_inline_separate_argument_list */
extern T0* T1543f3(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.put_last */
extern void T1543f12(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.make_with_capacity */
extern T0* T1543c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T802f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].make_empty */
extern T0* T803c5(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T1618f44(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T1617f50(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T1616f46(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T1615f45(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T1614f51(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T1613f47(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.cloned_iteration_component_list */
extern T0* T388f3(TC* ac, T0* C);
/* ET_ITERATION_COMPONENT_LIST.put_last */
extern void T388f12(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.make_with_capacity */
extern T0* T388c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].make */
extern T0* T798f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].make_empty */
extern T0* T796c5(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1618f43(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1617f49(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1616f45(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1615f44(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1614f50(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1613f46(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T521f3(TC* ac, T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T521f12(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T521c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].make */
extern T0* T793f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T792c5(TC* ac, T6 a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T510f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1618f52(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T1618f51(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1618f50(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1618f49(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T1618c42(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T1618f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1618f55(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1868c9(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern T0* T78f910(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T1019c13(TC* ac);
/* ET_AGENT_KEYWORD.make_token */
extern void T1019f15(TC* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T1019f16(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T1019f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1618f17(TC* ac, T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T510f190(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T501f2189(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T501f2188(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T510f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1617f61(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1617f60(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1617f59(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T1617f58(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1617f57(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1617f56(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1617f55(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T1617c48(TC* ac, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1617f63(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T510f187(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.set_keyword */
extern void T265f20(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern T0* T78f766(TC* ac, T0* C);
/* ET_KEYWORD.make_once */
extern T0* T438c59(TC* ac);
/* ET_AST_FACTORY.tokens */
extern T0* T510f371(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T501f2187(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T501f2186(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T510f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1616f56(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1616f55(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1616f54(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1616f53(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1616f52(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1616f51(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T1616c44(TC* ac, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1616f58(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1616f19(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T501f2185(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T501f2184(TC* ac, T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T510f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1615f53(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T1615f52(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1615f51(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1615f50(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T1615c43(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T1615f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1615f56(TC* ac, T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T266f41(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1615f18(TC* ac, T0* C);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T510f181(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T501f2183(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T501f2182(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T510f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1614f62(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1614f61(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T1614f60(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T1614f59(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T1614f58(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1614f57(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1614f56(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T1614c49(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1614f64(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T501f2181(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T501f2180(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T510f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1613f57(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1613f56(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T1613f55(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T1613f54(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1613f53(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1613f52(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T1613c45(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1613f59(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1613f20(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T501f2179(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T501f2178(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T501f2297(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T501f2177(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T1107f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T1109f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T1109f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T1107f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T1109f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T510f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T1108f37(TC* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T1108c36(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T1108f10(TC* ac, T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T1108c33(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T510f323(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T501f2176(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T501f2175(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].force */
extern void T1196f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION].fill_with */
extern void T1197f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION].extend */
extern void T1197f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T1196f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T1197f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_iteration_cursor */
extern T0* T501f1021(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_iteration_cursor */
extern T0* T510f370(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ITERATION_CURSOR.set_at_symbol */
extern void T1612f27(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_CURSOR.make */
extern T0* T1612c24(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.at_symbol */
extern T0* T78f1553(TC* ac, T0* C);
/* ET_SYMBOL.make_at */
extern T0* T655c103(TC* ac);
/* ET_ITERATION_CURSOR.tokens */
extern T0* T1612f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T510f311(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T1608c29(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator_from_symbol */
extern T0* T510f321(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_break */
extern void T1040f58(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.break */
extern T0* T1061f1(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.break */
extern T0* T656f3(TC* ac, T0* C);
/* ET_SYMBOL.break */
extern T0* T655f3(TC* ac, T0* C);
/* ET_FREE_OPERATOR.set_position */
extern void T1040f55(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T1040c54(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T88f8(TC* ac, T0* C, T0* a1);
/* CHARACTER_32.upper */
extern T3 T3f7(TC* ac, volatile T3* C);
/* CHARACTER_PROPERTY.to_upper */
extern T3 T839f2(TC* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_upper_table_17 */
extern T0* T839f36(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_16 */
extern T0* T839f35(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_15 */
extern T0* T839f34(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_14 */
extern T0* T839f33(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_13 */
extern T0* T839f32(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_12 */
extern T0* T839f31(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_11 */
extern T0* T839f30(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_10 */
extern T0* T839f29(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_9 */
extern T0* T839f28(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_8 */
extern T0* T839f27(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_7 */
extern T0* T839f26(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_6 */
extern T0* T839f25(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_5 */
extern T0* T839f24(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_4 */
extern T0* T839f23(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_3 */
extern T0* T839f22(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_2 */
extern T0* T839f21(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_1 */
extern T0* T839f20(TC* ac, T0* C);
/* CHARACTER_32.minus */
extern T3 T3f14(TC* ac, volatile T3* C, T10 a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T1040f10(TC* ac, T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T1040f60(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T1040f61(TC* ac, T0* C);
/* ET_ECF_LIBRARY.use_obsolete_syntax_mode */
extern T1 T191f101(TC* ac, T0* C);
/* ET_ECF_SYSTEM.use_obsolete_syntax_mode */
extern T1 T63f131(TC* ac, T0* C);
/* ET_SYSTEM.use_obsolete_syntax_mode */
extern T1 T45f103(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.current_universe */
extern T0* T501f774(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T501f2174(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].force */
extern void T1326f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].fill_with */
extern void T1328f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].extend */
extern void T1328f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].aliased_resized_area */
extern T0* T1326f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].aliased_resized_area */
extern T0* T1328f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_there_exists_quantifier_expression_header */
extern T0* T501f1020(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ITERATION_COMPONENT_LIST.force_last */
extern void T388f11(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.resize */
extern void T388f13(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.new_capacity */
extern T6 T388f8(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.capacity */
extern T6 T388f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_iteration_component_list */
extern T0* T501f1037(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].remove */
extern void T1010f12(TC* ac, T0* C);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].keep_head */
extern void T1711f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].set_count */
extern void T1711f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].item */
extern T0* T1010f8(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].is_empty */
extern T1 T1010f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_there_exists_quantifier_expression */
extern T0* T510f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUANTIFIER_EXPRESSION.make_there_exists */
extern T0* T1327c43(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUANTIFIER_EXPRESSION.create_unfolded_form */
extern void T1327f45(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T295c15(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T295f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bar_symbol */
extern T0* T78f726(TC* ac, T0* C);
/* ET_SYMBOL.make_bar */
extern T0* T655c115(TC* ac);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern T0* T78f721(TC* ac, T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T655c110(TC* ac);
/* ET_TOKEN_CONSTANTS.there_exists_symbol */
extern T0* T78f725(TC* ac, T0* C);
/* ET_SYMBOL.make_there_exists */
extern T0* T655c114(TC* ac);
/* ET_QUANTIFIER_EXPRESSION.tokens */
extern T0* T1327f14(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.true_keyword */
extern T0* T78f335(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.make */
extern T0* T1555c41(TC* ac);
/* ET_TRUE_CONSTANT.make_token */
extern void T1555f46(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T1555f47(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T501f713(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T501f2173(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_for_all_quantifier_expression_header */
extern T0* T501f1019(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_AST_FACTORY.new_for_all_quantifier_expression */
extern T0* T510f368(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUANTIFIER_EXPRESSION.make_for_all */
extern T0* T1327c39(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T501f2172(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_quantifier_expression */
extern T0* T501f1018(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.set_iteration_expression */
extern void T1327f42(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T501f2171(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T1074f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T1076f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T1076f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T1074f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T1076f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T501f1017(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.set_has_cursor_name */
extern void T1075f50(TC* ac, T0* C, T1 a1);
/* ET_KEYWORD.is_as */
extern T1 T438f34(TC* ac, T0* C);
/* ET_ECF_LIBRARY.obsolete_iteration_mode */
extern T1 T191f98(TC* ac, T0* C);
/* ET_ECF_SYSTEM.obsolete_iteration_mode */
extern T1 T63f132(TC* ac, T0* C);
/* ET_SYSTEM.obsolete_iteration_mode */
extern T1 T45f104(TC* ac, T0* C);
/* ET_AST_FACTORY.new_across_all_expression */
extern T0* T510f367(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ACROSS_EXPRESSION.set_as_keyword */
extern void T1075f51(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_variant_part */
extern void T1075f47(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T1075f46(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.make_all */
extern T0* T1075c40(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T1075f53(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.across_keyword */
extern T0* T78f747(TC* ac, T0* C);
/* ET_KEYWORD.make_across */
extern T0* T438c83(TC* ac);
/* ET_ACROSS_EXPRESSION.tokens */
extern T0* T1075f21(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T501f2170(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T501f2169(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T501f1016(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T1075f48(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_all */
extern void T1075f49(TC* ac, T0* C, T1 a1);
/* ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T1075f44(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T1075f43(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_conditional */
extern T0* T510f258(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1834c4(TC* ac, T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T438f33(TC* ac, T0* C);
/* ET_KEYWORD.is_if */
extern T1 T438f32(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T501f2168(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T501f1015(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_some */
extern void T1075f45(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T501f2167(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].force */
extern void T1139f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTANT].fill_with */
extern void T1140f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTANT].extend */
extern void T1140f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T1139f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T1140f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T501f2166(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T501f2165(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T501f2164(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T501f2163(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T501f2162(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T1342f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T1344f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T1344f10(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.put_first */
extern void T1343f34(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].force */
extern void T1877f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].fill_with */
extern void T1876f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].extend */
extern void T1876f7(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern T0* T1343f14(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1877c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T501f2161(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1342f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1344f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T510f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T1343f35(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T1343c31(TC* ac, T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T1343f31p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T1877f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1876c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern T0* T78f915(TC* ac, T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T438c63(TC* ac);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T1343f12(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T501f967(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T1005f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T501f2160(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T501f2159(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T501f2274(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T1005f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T1016f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T1017f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].extend */
extern void T1017f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T1005f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T1016f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T1017f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T1005f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T1005f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T501f2158(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T501f2272(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T1005f10(TC* ac, T0* C);
/* SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T1017f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].set_count */
extern void T1017f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T501f2157(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T501f2156(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T1285f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T1286f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T1286f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T501f2155(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1285f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1286f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T510f319(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T305f38(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T501f2154(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T501f2153(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T501f2152(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T501f2151(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T501f2150(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T1276f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T1278f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T1278f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.put_first */
extern void T1277f35(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T1277f14(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T501f2149(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1276f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1278f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T510f318(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T1277f36(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T1277c31(TC* ac, T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T1277f31p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern T0* T78f729(TC* ac, T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T655c118(TC* ac);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern T0* T78f913(TC* ac, T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T655c106(TC* ac);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T1277f12(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T501f2148(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T501f2147(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.set_cast_type */
extern void T1277f34(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T501f2146(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T501f2145(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T501f2144(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T501f2143(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T1304f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T1306f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T1306f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1304f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1306f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T510f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T1305f28(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T1305c25(TC* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T1305f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T501f2142(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T1080f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T1081f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T1081f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T501f2141(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1080f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1081f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T510f316(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_ARGUMENT_LIST.make_bracketed_with_capacity */
extern T0* T294c23(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T501f2140(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T501f2139(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T1104f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T1106f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T1106f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T1104f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T1106f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T501f2138(TC* ac, T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T510f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T1105c28(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T501f2137(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T501f2136(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T501f2135(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T501f2134(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T501f2133(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T501f2132(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T501f2131(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T501f2130(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T501f2129(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T501f2128(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T501f2269(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_17_11_0 */
extern T0* T501f1014(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T501f2127(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T501f2126(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T501f2125(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T501f2124(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T501f2123(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T501f2122(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T501f1013(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.register_inline_constant */
extern void T79f331(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T1611f32(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T510f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T1611f30(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T1611c27(TC* ac, T0* a1);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T1611f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T501f2121(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T501f2120(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T501f2119(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T501f2118(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T501f2117(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T501f2116(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T501f2115(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T501f2114(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T501f1296(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T501f2113(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T501f2112(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T501f2111(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T501f2110(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T501f2109(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T501f2108(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T501f1012(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T521f11(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.resize */
extern void T521f13(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T521f8(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T521f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T501f1039(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].remove */
extern void T1008f12(TC* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST_LIST].keep_head */
extern void T1707f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST_LIST].set_count */
extern void T1707f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].item */
extern T0* T1008f8(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].is_empty */
extern T1 T1008f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_named_object_test */
extern T0* T510f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T791f32(TC* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.make */
extern T0* T791c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.make_object_test */
extern void T791f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.tokens */
extern T0* T791f11(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T501f2107(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T501f2106(TC* ac, T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T510f314(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.set_attached_keyword */
extern void T332f30(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T332c27(TC* ac, T0* a1, T0* a2);
/* ET_OBJECT_TEST.tokens */
extern T0* T332f16(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T501f2105(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T501f2104(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T501f1011(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_AST_FACTORY.new_old_object_test */
extern T0* T510f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OLD_OBJECT_TEST.set_left_brace */
extern void T1610f35(TC* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.make */
extern T0* T1610c32(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.tokens */
extern T0* T1610f14(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern T0* T501f995(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T501f2103(TC* ac, T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T510f313(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T1609f27(TC* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T1609c24(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern T0* T78f1552(TC* ac, T0* C);
/* ET_KEYWORD.make_old */
extern T0* T438c62(TC* ac);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T1609f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T501f2102(TC* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T510f312(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T1040f59(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T501f2101(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T501f2100(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T501f2099(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T501f1010(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T501f1010ot1(TC* ac, T0* a1);
extern T1 T501f1010ot2(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T510f363(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T1061f155(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T501f2098(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T501f1009(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T501f1009ot1(TC* ac, T0* a1);
extern T1 T501f1009ot2(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T510f362(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T1061f154(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T501f2097(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T501f2096(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T501f2095(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T501f2094(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T501f2093(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T501f2092(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T501f2091(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T501f2090(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T501f2089(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T501f2088(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T501f2087(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T501f2086(TC* ac, T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T510f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T1607c25(TC* ac, T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T1607f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T501f2085(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T501f2084(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T501f2083(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T501f2082(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T501f2081(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T501f2080(TC* ac, T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T510f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T1606c26(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T501f2079(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T501f2078(TC* ac, T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T510f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T501f2077(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T501f2076(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T510f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T1603c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T501f2075(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T501f2074(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T501f2073(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T510f307(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T1605f43(TC* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T1605c42(TC* ac);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern T0* T78f735(TC* ac, T0* C);
/* ET_KEYWORD.make_else */
extern T0* T438c71(TC* ac);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern T0* T78f1551(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T1048c55(TC* ac);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T1048f61(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T1048f62(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T501f2072(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T501f2071(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T510f306(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T1604f43(TC* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T1604c42(TC* ac);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern T0* T78f740(TC* ac, T0* C);
/* ET_KEYWORD.make_then */
extern T0* T438c76(TC* ac);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern T0* T78f1550(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T1048c57(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T501f2070(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T501f2069(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T501f2068(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T501f2067(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T501f2066(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T501f2065(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T501f2064(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T501f2063(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T501f2062(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T501f2061(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T501f2060(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T501f2059(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T501f2058(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T501f2057(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T501f2056(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T501f2055(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T510f305(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T1061f153(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T501f2054(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T510f304(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T1061f152(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T501f2053(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator_from_symbol */
extern T0* T510f303(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_infix */
extern T0* T1040c57(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T501f2052(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T510f301(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T1040f56(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T501f2051(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T501f2050(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T501f2049(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T1376f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T1377f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].extend */
extern void T1377f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1376f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1377f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T501f2048(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T501f1008(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T501f2047(TC* ac, T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T510f300(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T1602f27(TC* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T1602c24(TC* ac, T0* a1);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T1602f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T501f2046(TC* ac, T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T510f299(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T1601f27(TC* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T1601c24(TC* ac);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T1601f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T501f2045(TC* ac, T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T510f298(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T1600f27(TC* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T1600c24(TC* ac);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T1600f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T501f2044(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T501f1007(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T510f361(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T1599f27(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T501f2043(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].force */
extern void T1198f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].fill_with */
extern void T1199f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].extend */
extern void T1199f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1198f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1199f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T510f297(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T501f2042(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T501f2041(TC* ac, T0* C);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T510f296(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T501f2040(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T501f2039(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T501f2038(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T501f2037(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T501f2036(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T501f2035(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T510f293(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_dot_feature_name */
extern T0* T501f994(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T501f2034(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern T0* T501f979(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T501f2033(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T501f2032(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T501f2031(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T501f2030(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T501f2029(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T501f2028(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T501f2027(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T501f2026(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T501f2025(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T501f1006(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T501f2024(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T510f295(TC* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T1598f31(TC* ac, T0* C, T1 a1);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T510f291(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T501f2023(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T501f2022(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T1339f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T1341f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T1341f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1339f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1341f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T510f294(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T1340f35(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T501f2021(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T501f2020(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T1110f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T1111f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T1111f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1110f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1111f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T501f2019(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T501f2018(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T501f2017(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T501f2016(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T501f2015(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T1255f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T1256f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T1256f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1255f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1256f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T510f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T1597f16(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T1597c15(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T1597f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T501f2014(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T501f2013(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T510f290(TC* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T1595f17(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T1595f16(TC* ac, T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T1595c15(TC* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T1595f12(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T501f2012(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T501f2011(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T510f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T501f2010(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T501f2009(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T501f1005(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T510f360(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T1819c13(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T501f2008(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].force */
extern void T1243f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].fill_with */
extern void T1244f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].extend */
extern void T1244f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1243f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1244f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inline_separate_argument_comma */
extern T0* T510f288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T501f2007(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].force */
extern void T1241f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].fill_with */
extern void T1242f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].extend */
extern void T1242f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T1241f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T1242f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_inline_separate_argument */
extern T0* T501f1004(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.force_last */
extern void T1543f11(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.resize */
extern void T1543f13(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.new_capacity */
extern T6 T1543f8(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.capacity */
extern T6 T1543f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_inline_separate_argument_list */
extern T0* T501f1038(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].remove */
extern void T1012f12(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].keep_head */
extern void T1715f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].set_count */
extern void T1715f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].item */
extern T0* T1012f8(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].is_empty */
extern T1 T1012f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_inline_separate_argument */
extern T0* T510f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT.make */
extern T0* T299c12(TC* ac, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_ARGUMENT.tokens */
extern T0* T299f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T501f2006(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].force */
extern void T1245f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].fill_with */
extern void T1246f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].extend */
extern void T1246f10(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.put_first */
extern void T264f16(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].force */
extern void T662f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].fill_with */
extern void T661f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].extend */
extern void T661f7(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.fixed_array */
extern T0* T264f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].default_create */
extern T0* T662c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T501f2005(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].aliased_resized_area */
extern T0* T1245f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].aliased_resized_area */
extern T0* T1246f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inline_separate_arguments */
extern T0* T510f287(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_INLINE_SEPARATE_ARGUMENTS.set_separate_keyword */
extern void T264f17(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.make_with_capacity */
extern T0* T264c15(TC* ac, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.make_with_capacity */
extern void T264f15p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].make */
extern T0* T662f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].make_empty */
extern T0* T661c4(TC* ac, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.tokens */
extern T0* T264f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T501f2004(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T501f2003(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T501f2002(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].force */
extern void T1247f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].fill_with */
extern void T1248f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].extend */
extern void T1248f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].aliased_resized_area */
extern T0* T1247f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].aliased_resized_area */
extern T0* T1248f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_inline_separate_instruction */
extern T0* T501f1003(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_inline_separate_instruction */
extern T0* T510f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_INSTRUCTION.make */
extern T0* T302c12(TC* ac, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_INSTRUCTION.tokens */
extern T0* T302f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T501f2001(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T1279f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1281f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T1281f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1279f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1281f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T510f286(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T501f2000(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T1282f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T1284f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T1284f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T1283f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].force */
extern void T1894f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1893f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].extend */
extern void T1893f7(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern T0* T1283f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1894c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T501f1999(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1282f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1284f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T510f285(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T1283c11(TC* ac, T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T1283f5(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T1283f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T1894f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1893c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T501f1998(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T501f1997(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T501f1996(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T501f1995(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T501f1994(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T1176f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T1178f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T1178f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1176f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1178f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T510f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T1177c12(TC* ac, T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T1177f4(TC* ac, T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T510f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern T0* T78f744(TC* ac, T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T438c80(TC* ac);
/* ET_COMPOUND.make */
extern T0* T265c19(TC* ac);
/* ET_COMPOUND.make */
extern void T265f19p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T665f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INSTRUCTION].make_empty */
extern T0* T664c4(TC* ac, T6 a1);
/* ET_COMPOUND.fixed_array */
extern T0* T265f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T665c2(TC* ac);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern T0* T78f214(TC* ac, T0* C);
/* ET_KEYWORD.make_do */
extern T0* T438c52(TC* ac);
/* ET_COMPOUND.tokens */
extern T0* T265f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T501f1993(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T1136f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T1138f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T1138f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1136f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1138f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T501f1992(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T501f1991(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].force */
extern void T1336f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].fill_with */
extern void T1338f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].extend */
extern void T1338f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].aliased_resized_area */
extern T0* T1336f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].aliased_resized_area */
extern T0* T1338f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_repeat_instruction_header */
extern T0* T501f1002(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_AST_FACTORY.new_repeat_instruction */
extern T0* T510f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_REPEAT_INSTRUCTION.make */
extern T0* T1337c27(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_REPEAT_INSTRUCTION.create_unfolded_form */
extern void T1337f30(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.close_repeat_symbol */
extern T0* T78f728(TC* ac, T0* C);
/* ET_SYMBOL.make_close_repeat */
extern T0* T655c117(TC* ac);
/* ET_TOKEN_CONSTANTS.open_repeat_symbol */
extern T0* T78f727(TC* ac, T0* C);
/* ET_SYMBOL.make_open_repeat */
extern T0* T655c116(TC* ac);
/* ET_REPEAT_INSTRUCTION.tokens */
extern T0* T1337f13(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T501f1990(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T1077f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T1079f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T1079f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T1077f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T1079f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T501f1001(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_INSTRUCTION.set_has_cursor_name */
extern void T1078f33(TC* ac, T0* C, T1 a1);
/* ET_AST_FACTORY.new_across_instruction */
extern T0* T510f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ACROSS_INSTRUCTION.set_as_keyword */
extern void T1078f34(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T1078f31(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T1078f30(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.make */
extern T0* T1078c26(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T1078f35(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.tokens */
extern T0* T1078f17(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T501f1989(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T501f1988(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].force */
extern void T1364f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].fill_with */
extern void T1366f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].extend */
extern void T1366f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].aliased_resized_area */
extern T0* T1364f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].aliased_resized_area */
extern T0* T1366f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_expression */
extern T0* T510f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_WHEN_EXPRESSION.make */
extern T0* T1365c10(TC* ac, T0* a1, T0* a2);
/* ET_WHEN_EXPRESSION.tokens */
extern T0* T1365f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T501f1987(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].force */
extern void T1367f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].fill_with */
extern void T1369f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].extend */
extern void T1369f10(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION_LIST.put_first */
extern void T1368f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].force */
extern void T1906f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_WHEN_EXPRESSION].fill_with */
extern void T1905f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_EXPRESSION].extend */
extern void T1905f7(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION_LIST.fixed_array */
extern T0* T1368f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].default_create */
extern T0* T1906c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T501f1986(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1367f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1369f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_expression_list */
extern T0* T510f281(TC* ac, T0* C, T6 a1);
/* ET_WHEN_EXPRESSION_LIST.make_with_capacity */
extern T0* T1368c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].make */
extern T0* T1906f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_WHEN_EXPRESSION].make_empty */
extern T0* T1905c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T501f1985(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T501f1984(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T501f1983(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].force */
extern void T1249f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].fill_with */
extern void T1251f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].extend */
extern void T1251f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].aliased_resized_area */
extern T0* T1249f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].aliased_resized_area */
extern T0* T1251f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_expression */
extern T0* T510f280(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_EXPRESSION.set_else_part */
extern void T1250f28(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_EXPRESSION.make */
extern T0* T1250c27(TC* ac, T0* a1, T0* a2);
/* ET_INSPECT_EXPRESSION.tokens */
extern T0* T1250f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T501f1982(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T501f1981(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T1118f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T1120f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T1120f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T1118f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T1120f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T501f1980(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T501f1000(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T501f1979(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T501f1978(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T501f1977(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T1115f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].fill_with */
extern void T1117f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].extend */
extern void T1117f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T1115f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T1117f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T510f279(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T1594c12(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern T0* T78f731(TC* ac, T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T655c120(TC* ac);
/* ET_CHOICE_RANGE.tokens */
extern T0* T1594f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T501f1976(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T501f1975(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T1121f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T1123f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T1123f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T1121f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T1123f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T510f278(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T501f1974(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T1124f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T1126f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T1126f10(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.put_first */
extern void T1125f16(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].force */
extern void T1871f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].fill_with */
extern void T1870f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].extend */
extern void T1870f7(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.fixed_array */
extern T0* T1125f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T1871c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T501f1973(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1124f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1126f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T510f277(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T1125f17(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T1125c15(TC* ac, T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T1125f15p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T1871f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].make_empty */
extern T0* T1870c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern T0* T78f741(TC* ac, T0* C);
/* ET_KEYWORD.make_when */
extern T0* T438c77(TC* ac);
/* ET_CHOICE_LIST.tokens */
extern T0* T1125f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T501f1972(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T501f1971(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T501f1970(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T501f1969(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T501f1968(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T1370f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T1372f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].extend */
extern void T1372f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1370f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1372f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part */
extern T0* T510f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T1371c10(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T501f1967(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T1373f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T1375f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T1375f10(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.put_first */
extern void T1374f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].force */
extern void T1908f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].fill_with */
extern void T1907f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].extend */
extern void T1907f7(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern T0* T1374f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T1908c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T501f1966(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1373f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1375f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T510f275(TC* ac, T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T1374c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T1908f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART].make_empty */
extern T0* T1907c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T501f1965(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T501f1964(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T501f1963(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T1252f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T1254f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T1254f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1252f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1254f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T510f274(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T1253f15(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T1253c14(TC* ac, T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T1253f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T501f1962(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T501f1961(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].force */
extern void T1179f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].fill_with */
extern void T1181f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].extend */
extern void T1181f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T1179f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T1181f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression */
extern T0* T510f273(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ELSEIF_EXPRESSION.make */
extern T0* T1180c11(TC* ac, T0* a1, T0* a2);
/* ET_ELSEIF_EXPRESSION.tokens */
extern T0* T1180f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T501f1960(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].force */
extern void T1182f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].fill_with */
extern void T1184f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].extend */
extern void T1184f10(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.put_first */
extern void T1183f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].force */
extern void T1887f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ELSEIF_EXPRESSION].fill_with */
extern void T1886f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_EXPRESSION].extend */
extern void T1886f7(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.fixed_array */
extern T0* T1183f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].default_create */
extern T0* T1887c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T501f1959(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1182f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1184f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression_list */
extern T0* T510f272(TC* ac, T0* C, T6 a1);
/* ET_ELSEIF_EXPRESSION_LIST.make_with_capacity */
extern T0* T1183c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].make */
extern T0* T1887f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T1886c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T501f1958(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T501f1957(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].force */
extern void T1233f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_EXPRESSION].fill_with */
extern void T1235f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_EXPRESSION].extend */
extern void T1235f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T1233f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T1235f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_expression */
extern T0* T510f271(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_IF_EXPRESSION.set_elseif_parts */
extern void T1234f31(TC* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.make */
extern T0* T1234c30(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.tokens */
extern T0* T1234f13(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T501f1956(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T501f1955(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T1185f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T1187f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T1187f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1185f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1187f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T510f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T1186c11(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T501f1954(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T1188f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T1190f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T1190f10(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T1189f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].force */
extern void T1889f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].fill_with */
extern void T1888f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].extend */
extern void T1888f7(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern T0* T1189f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T1889c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T501f1953(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1188f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1190f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T510f269(TC* ac, T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T1189c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T1889f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].make_empty */
extern T0* T1888c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T501f1952(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T501f1951(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T1236f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T1238f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T1238f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1236f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1238f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T510f268(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T1237f17(TC* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T1237f16(TC* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T1237c15(TC* ac, T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T1237f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T501f1950(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T501f1949(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T501f1948(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T501f1947(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].force */
extern void T1167f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATION_REGION].fill_with */
extern void T1169f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATION_REGION].extend */
extern void T1169f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T1167f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T1169f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creation_region */
extern T0* T510f267(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATION_REGION.set_right_symbol */
extern void T1168f7(TC* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.set_left_symbol */
extern void T1168f6(TC* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.make */
extern T0* T1168c5(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.greater_than_symbol */
extern T0* T78f912(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T1061c138(TC* ac);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T1061f156(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.less_than_symbol */
extern T0* T78f911(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T1061c139(TC* ac);
/* ET_CREATION_REGION.tokens */
extern T0* T1168f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T501f1946(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T501f1945(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T1165f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T1166f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T1166f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1165f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1166f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T510f266(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_EXPRESSION.set_creation_region */
extern void T347f38(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T347f37(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T347c35(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern T0* T78f104(TC* ac, T0* C);
/* ET_KEYWORD.make_create */
extern T0* T438c47(TC* ac);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T510f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T348c5(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T501f1944(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T501f1943(TC* ac, T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T510f265(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CREATE_INSTRUCTION.set_creation_region */
extern void T1593f24(TC* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T1593f23(TC* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T1593c22(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T501f1942(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T501f1941(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T501f1940(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T501f1939(TC* ac, T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T510f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T1592f22(TC* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T1592c21(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern T0* T78f1547(TC* ac, T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T655c100(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T501f1938(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T501f1937(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T501f1936(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T501f1935(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T1112f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T1114f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T1114f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T1112f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T1114f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T501f999(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T1013f15(TC* ac, T0* C);
/* SPECIAL [ET_ASSERTION_ITEM].keep_head */
extern void T1716f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].set_count */
extern void T1716f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T1013f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1718f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_after */
extern void T1718f6(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T1113f18(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].force */
extern void T1717f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].fill_with */
extern void T1716f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].extend */
extern void T1716f10(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern T0* T1113f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1717c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T1013f10(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T510f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T1113f20(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.set_then_compound */
extern void T1113f19(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T1113c17(TC* ac, T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T1113f17p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1717f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make_empty */
extern T0* T1716c5(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern T0* T78f743(TC* ac, T0* C);
/* ET_KEYWORD.make_check */
extern T0* T438c79(TC* ac);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T1113f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].remove_last */
extern void T271f29(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_last_cursors_after */
extern void T271f30(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].last */
extern T6 T271f15(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T501f1934(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T501f1933(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T501f1932(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T501f1931(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_check_instruction */
extern void T501f2296(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_assertions */
extern void T501f2301(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T501f1930(TC* ac, T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T510f261(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T501f1929(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T501f1928(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T501f1927(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T501f1926(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T501f1925(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_repeat_instruction */
extern T0* T501f998(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REPEAT_INSTRUCTION.set_close_repeat_symbol */
extern void T1337f29(TC* ac, T0* C, T0* a1);
/* ET_REPEAT_INSTRUCTION.set_loop_compound */
extern void T1337f28(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T501f1924(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T501f997(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T1078f32(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T1078f29(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T1078f28(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T1078f27(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T501f1923(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T510f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T1590f20(TC* ac, T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T1590f19(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T1590f18(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T1590c17(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T1590f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern T0* T501f996(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T501f1922(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T510f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T501f1921(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T501f1920(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T501f1919(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T501f1918(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T510f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T1589c12(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern T0* T78f732(TC* ac, T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T655c121(TC* ac);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T1589f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T501f1917(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T510f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T303c13(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern T0* T78f222(TC* ac, T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T655c96(TC* ac);
/* ET_ASSIGNMENT.tokens */
extern T0* T303f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T501f1916(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T510f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T1588c21(TC* ac, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern T0* T1588f6(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T1588f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T501f1915(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T501f1914(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T501f1295(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T501f1913(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T501f1912(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T501f1911(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T1134f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T1135f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].extend */
extern void T1135f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1134f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1135f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T501f1910(TC* ac, T0* C);
/* ET_COMPOUND.put_first */
extern void T265f18(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].force */
extern void T665f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].fill_with */
extern void T664f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].extend */
extern void T664f7(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T501f1909(TC* ac, T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T510f254(TC* ac, T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T265c17(TC* ac, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T265f17p1(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T501f1908(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T501f1907(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T501f1906(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T501f1905(TC* ac, T0* C);
/* ET_AST_FACTORY.new_empty_compound */
extern T0* T510f253(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T501f1904(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T501f1903(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T510f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern T0* T78f737(TC* ac, T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T438c73(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T501f1902(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T501f1901(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T501f1900(TC* ac, T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T510f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern T0* T78f736(TC* ac, T0* C);
/* ET_KEYWORD.make_from */
extern T0* T438c72(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T501f1899(TC* ac, T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T510f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern T0* T78f752(TC* ac, T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T438c88(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T501f1898(TC* ac, T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T510f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T501f1897(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T501f1896(TC* ac, T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T510f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T501f1895(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T501f1894(TC* ac, T0* C);
/* ET_AST_FACTORY.new_attribute_compound */
extern T0* T510f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern T0* T78f764(TC* ac, T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T438c100(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T501f1893(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T510f246(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T501f1892(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T1323f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T1325f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T1325f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1323f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1325f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T510f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T1587c88(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_attachment_mark_separate_keyword */
extern T0* T510f149(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T501f1891(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T501f1890(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T501f1889(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T501f1888(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T501f1887(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T501f1886(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T501f1885(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T501f1884(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T501f1883(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T510f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T1586f92(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T1586c91(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T501f1882(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T501f1881(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T501f1880(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T501f1879(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T501f1878(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T501f1877(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T501f1876(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T501f1875(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T501f1874(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T501f1873(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T501f1872(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T501f1871(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T1262f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T1264f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T1264f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1262f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1264f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T501f1870(TC* ac, T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T510f243(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T493f91(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T501f1869(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T501f1868(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T501f1867(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T501f1866(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T501f1865(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T501f1864(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T501f1863(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T501f1862(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T501f1861(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T501f1860(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_like_feature */
extern T0* T501f993(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T510f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T1585f92(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T1585c91(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T501f1859(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T501f1858(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T501f1857(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T501f1856(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T501f1855(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T501f1854(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T501f1853(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T501f1852(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T501f1851(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T501f1850(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T501f1849(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T501f1848(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T501f1847(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].force */
extern void T1082f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1083f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T1083f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1082f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1083f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T510f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T510f239(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1583c12(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T501f1846(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T501f1845(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T1084f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T1085f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T1085f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T501f2295(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T510f241(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1832c12(TC* ac, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T245f16(TC* ac, T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T510f240(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T501f1844(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T501f1843(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T501f1842(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T501f1841(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T501f1840(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1084f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1085f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T510f237(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T245f33(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T501f1839(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T501f1838(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T501f1837(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T501f1836(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T501f1835(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T501f1834(TC* ac, T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T510f238(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T501f1833(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T501f1832(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T501f992(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T501f992ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T510f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T501f1023(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T501f1831(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T501f991(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T501f991ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_class_type */
extern T0* T510f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T510f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T510f351(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.formal_parameter */
extern T0* T79f201(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T636f21(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T501f1830(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T501f1829(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T501f1828(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T501f1827(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T501f1826(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T501f1825(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T501f1824(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T501f1823(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T501f1822(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T501f1821(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T501f1820(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].force */
extern void T1345f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE].fill_with */
extern void T1346f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE].extend */
extern void T1346f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].aliased_resized_area */
extern T0* T1345f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE].aliased_resized_area */
extern T0* T1346f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T501f1819(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T501f1818(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T501f1817(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T501f1816(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T501f1815(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T501f1814(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T501f1813(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T501f1812(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T501f1811(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T501f1810(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T501f1809(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T501f1808(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T501f1807(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T501f1806(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T501f1805(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T501f1804(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T501f1803(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T501f1802(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T501f1801(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T501f1800(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T501f1799(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T501f1798(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T501f1797(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T501f1796(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T501f1795(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T501f1794(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T501f1793(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T501f1792(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T501f1791(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T501f1790(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T501f1789(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T501f1788(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T501f1787(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T501f1786(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T501f1785(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T501f1784(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T501f1783(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T501f1782(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T501f1781(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T501f1780(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T501f1779(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T501f1778(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T501f1777(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T501f1776(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T501f1775(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T501f1774(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T501f1773(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T501f1772(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T501f1771(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T501f1770(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T501f1769(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T501f1768(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T501f1767(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T501f1766(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T501f1765(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T501f1764(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T501f1763(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T501f1762(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T501f1761(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T501f1760(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T501f1759(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T501f1758(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T501f1757(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T501f1756(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T501f1755(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T501f1754(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T501f1753(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T501f1752(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T501f1751(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T501f1750(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T501f1749(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T1361f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].fill_with */
extern void T1363f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].extend */
extern void T1363f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T501f1748(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1361f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1363f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T501f1747(TC* ac, T0* C);
/* ET_AST_FACTORY.new_variant */
extern T0* T510f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T1362f7(TC* ac, T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T1362c6(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern T0* T78f757(TC* ac, T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T438c93(TC* ac);
/* ET_VARIANT.tokens */
extern T0* T1362f4(TC* ac, T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T510f133(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T501f1746(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T501f1745(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T1273f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T1275f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T1275f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1273f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1275f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T501f990(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T1274f16(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T1274f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T510f350(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T1274f17(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T1274c15(TC* ac, T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T1274f15p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern T0* T78f765(TC* ac, T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T438c101(TC* ac);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T1274f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T501f1744(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T501f1743(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T501f1742(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T501f1741(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_loop_invariant */
extern void T501f2294(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T501f1740(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T501f1739(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T1257f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T1259f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].extend */
extern void T1259f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1257f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1259f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T501f989(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_inline_separate_arguments_stack */
extern void T501f1276(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].wipe_out */
extern void T1011f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].i_th */
extern T0* T1011f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_iteration_components_stack */
extern void T501f1275(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].wipe_out */
extern void T1009f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].i_th */
extern T0* T1009f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T501f1274(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T1007f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T1007f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T501f1273(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T1004f10(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T501f1272(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T1003f10(TC* ac, T0* C);
/* ET_INVARIANTS.set_inline_separate_arguments */
extern void T1258f30(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_iteration_components */
extern void T1258f29(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_object_tests */
extern void T1258f28(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T1258f27(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T1258f10(TC* ac, T0* C);
/* ET_AST_FACTORY.new_invariants */
extern T0* T510f349(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T1258f31(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T1258c26(TC* ac, T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T1258f32(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T501f1738(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T501f1737(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T501f1736(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T501f1735(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_invariant */
extern void T501f2293(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T501f1734(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T1316f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T1318f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T1318f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1316f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1318f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T501f988(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T1317f18(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T1317f10(TC* ac, T0* C);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T510f348(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T1317f20(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T1317f19(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T1317c17(TC* ac, T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T1317f17p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern T0* T78f914(TC* ac, T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T438c64(TC* ac);
/* ET_POSTCONDITIONS.tokens */
extern T0* T1317f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T501f1733(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T501f1732(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T501f1731(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T501f1730(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T501f1729(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_postcondition */
extern void T501f2292(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T501f1728(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].force */
extern void T1319f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].fill_with */
extern void T1320f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].extend */
extern void T1320f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1319f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1320f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T501f987(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T431f17(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T431f10(TC* ac, T0* C);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T510f347(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T431f19(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T431f18(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T431c16(TC* ac, T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T431f16p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern T0* T78f1559(TC* ac, T0* C);
/* ET_KEYWORD.make_require */
extern T0* T438c67(TC* ac);
/* ET_PRECONDITIONS.tokens */
extern T0* T431f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T501f1727(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T501f1726(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T501f1725(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T501f1724(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T501f1723(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_precondition */
extern void T501f2291(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T501f1722(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_class_assertion */
extern void T501f2290(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.add_untagged_assertion */
extern void T501f2300(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T501f2300ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T1013f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T1013f18(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1717f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1716f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T1013f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T1013f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T1013f14(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T510f335(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.set_untagged_assertion */
extern void T1623f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T1013f9(TC* ac, T0* C);
/* ET_AST_FACTORY.new_class_assertion */
extern T0* T510f235(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.set_class_keyword */
extern void T1582f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.make */
extern T0* T1582c7(TC* ac);
/* ET_CLASS_ASSERTION.tokens */
extern T0* T1582f2(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T501f1721(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T501f1720(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T501f2289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T501f2289ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T510f334(TC* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T1623c7(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T501f1299(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T58f279(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T2002c18(TC* ac, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T2002f19(TC* ac, T0* C, T1 a1);
/* ET_BINARY_INTEGER_CONSTANT.position_to_text */
extern T0* T1551f60(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.append_position_to_string */
extern void T1551f75(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.integer_ */
extern T0* T1551f63(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position_to_text */
extern T0* T1550f60(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.append_position_to_string */
extern void T1550f75(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.integer_ */
extern T0* T1550f63(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position_to_text */
extern T0* T1549f60(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_position_to_string */
extern void T1549f75(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T1549f63(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position_to_text */
extern T0* T1548f60(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_position_to_string */
extern void T1548f75(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T1548f63(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position_to_text */
extern T0* T395f60(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_position_to_string */
extern void T395f76(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T395f63(TC* ac, T0* C);
/* ET_VERBATIM_STRING.position_to_text */
extern T0* T1547f47(TC* ac, T0* C);
/* ET_VERBATIM_STRING.append_position_to_string */
extern void T1547f61(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.integer_ */
extern T0* T1547f50(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position_to_text */
extern T0* T1546f43(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.append_position_to_string */
extern void T1546f57(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.integer_ */
extern T0* T1546f46(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position_to_text */
extern T0* T1544f45(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.append_position_to_string */
extern void T1544f58(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.integer_ */
extern T0* T1544f47(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position_to_text */
extern T0* T1558f45(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.append_position_to_string */
extern void T1558f58(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.integer_ */
extern T0* T1558f47(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position_to_text */
extern T0* T1557f44(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.append_position_to_string */
extern void T1557f57(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.integer_ */
extern T0* T1557f46(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.position_to_text */
extern T0* T1556f36(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.append_position_to_string */
extern void T1556f49(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.integer_ */
extern T0* T1556f39(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.position_to_text */
extern T0* T1555f36(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.append_position_to_string */
extern void T1555f49(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.integer_ */
extern T0* T1555f39(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position_to_text */
extern T0* T1553f38(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.append_position_to_string */
extern void T1553f53(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.integer_ */
extern T0* T1553f41(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position_to_text */
extern T0* T1552f38(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.append_position_to_string */
extern void T1552f53(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.integer_ */
extern T0* T1552f41(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position_to_text */
extern T0* T1545f42(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.append_position_to_string */
extern void T1545f56(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.integer_ */
extern T0* T1545f45(TC* ac, T0* C);
/* ET_CURRENT.position_to_text */
extern T0* T293f33(TC* ac, T0* C);
/* ET_CURRENT.append_position_to_string */
extern void T293f43(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T293f34(TC* ac, T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T1625f10(TC* ac, T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T1625f15(TC* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T1625f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T1625f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T1625f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T1625f18(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T1625f11(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T41f279(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T501f1303(TC* ac, T0* C);
/* ET_FILE_POSITION.make */
extern T0* T1625c12(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T1625f13(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T1625f14(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T1625f3(TC* ac, T0* C);
/* ET_FILE_POSITION.line */
extern T6 T1625f6(TC* ac, T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T1625f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T501f765(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T501f1719(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T501f1718(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T501f2288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T501f1717(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T501f1716(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T501f1715(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T501f1714(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T501f1294(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T501f1713(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T501f1712(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T501f1711(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T501f1710(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T1268f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1270f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1270f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1268f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1270f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T510f234(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T510f233(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T1266c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T501f1709(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T501f1708(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T1265f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T1267f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T1267f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1265f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1267f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T510f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1831c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern T0* T501f984(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T501f1707(TC* ac, T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T510f231(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T501f1706(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T520f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].force */
extern void T1840f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1838f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1838f7(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern T0* T520f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1840c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T501f1705(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T501f1704(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1831f10(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T520f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T501f1703(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T501f1702(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T501f985(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T510f346(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T520f13(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T520c11(TC* ac, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T520f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1840f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1838c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern T0* T78f745(TC* ac, T0* C);
/* ET_KEYWORD.make_local */
extern T0* T438c81(TC* ac);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T520f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T501f1701(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T501f1700(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T501f1699(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T501f1698(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T501f1697(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T501f1696(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T1221f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T1223f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T1223f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1221f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1223f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T510f230(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T510f229(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T261c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T501f1695(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T501f1694(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T1219f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T1220f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T1220f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1219f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1220f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T510f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1830c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T501f1693(TC* ac, T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T510f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T501f1692(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T260f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].force */
extern void T2018f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T2016f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T2016f7(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern T0* T260f11(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T2018c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T501f1691(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T501f1690(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1830f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T260f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T501f1689(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T501f1688(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T501f983(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T510f345(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T260c12(TC* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T260f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T2018f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T2016c4(TC* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T260f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T501f1687(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T501f1686(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T501f1685(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T501f1684(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T501f1683(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T501f1682(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T501f1681(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T501f1680(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T1096f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T1098f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T1098f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1096f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1098f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T501f982(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T501f1036(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T510f224(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_FREE_NAME.set_convert_keyword */
extern void T1579f56(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T1579f55(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T1579c54(TC* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern T0* T1579f53(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern T0* T78f742(TC* ac, T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T438c78(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T501f1679(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T510f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.set_convert_keyword */
extern void T1097f82(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T1097f81(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.make_parenthesis */
extern T0* T1097c109(TC* ac, T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T1097f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T501f1678(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T510f225(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T1097c108(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T501f1677(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T501f1676(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T510f223(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T1097c107(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T501f1675(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_symbol_name */
extern T0* T510f222(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_xor_symbol */
extern T0* T1097c106(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T501f1674(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T510f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_xor */
extern T0* T1097c105(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T501f1673(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_symbol_name */
extern T0* T510f220(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_implies_symbol */
extern T0* T1097c104(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T501f1672(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T510f219(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_implies */
extern T0* T1097c103(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T501f1671(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_symbol_name */
extern T0* T510f218(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_else_symbol */
extern T0* T1097c102(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T501f1670(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T510f217(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T1097c101(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T501f1669(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_symbol_name */
extern T0* T510f216(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_symbol */
extern T0* T1097c100(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T501f1668(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T510f215(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or */
extern T0* T1097c99(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T501f1667(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_symbol_name */
extern T0* T510f214(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_then_symbol */
extern T0* T1097c98(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T501f1666(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T510f213(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T1097c97(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T501f1665(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_symbol_name */
extern T0* T510f212(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_symbol */
extern T0* T1097c96(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T501f1664(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T510f211(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and */
extern T0* T1097c95(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T501f1663(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T510f210(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_ge */
extern T0* T1097c94(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T501f1662(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T510f209(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_gt */
extern T0* T1097c93(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T501f1661(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T510f208(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_le */
extern T0* T1097c92(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T501f1660(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T510f207(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_lt */
extern T0* T1097c91(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T501f1659(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T510f206(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_power */
extern T0* T1097c90(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T501f1658(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T510f205(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_mod */
extern T0* T1097c89(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T501f1657(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T510f204(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_div */
extern T0* T1097c88(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T501f1656(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T510f203(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_divide */
extern T0* T1097c87(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T501f1655(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T510f202(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_times */
extern T0* T1097c86(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T501f1654(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T510f201(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_minus */
extern T0* T1097c85(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T501f1653(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T510f200(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_plus */
extern T0* T1097c84(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T501f1652(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_symbol_name */
extern T0* T510f199(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_not_symbol */
extern T0* T1097c83(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T501f1651(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T510f198(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_not */
extern T0* T1097c80(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T501f1650(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].force */
extern void T1099f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].fill_with */
extern void T1100f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].extend */
extern void T1100f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].aliased_resized_area */
extern T0* T1099f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].aliased_resized_area */
extern T0* T1100f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T501f1649(TC* ac, T0* C);
/* ET_ALIAS_NAME_LIST.put_first */
extern void T968f12(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.fixed_array */
extern T0* T968f3(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T501f1648(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_name_list */
extern T0* T510f197(TC* ac, T0* C, T6 a1);
/* ET_ALIAS_NAME_LIST.make_with_capacity */
extern T0* T968c11(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T501f1647(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T1200f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T1201f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T1201f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1200f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1201f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T510f196(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T501f1646(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T501f1645(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T1214f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T1215f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T1215f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1214f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1215f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T501f1644(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T1101f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T1103f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].extend */
extern void T1103f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T1101f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T1103f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assigner */
extern T0* T510f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T501f1643(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T501f1642(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T1202f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T1204f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T1204f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1202f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1204f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T510f194(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T501f1641(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T501f1640(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T1066f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T1068f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T1068f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T501f1639(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T1066f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T1068f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T501f1638(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T501f1637(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T501f1636(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].force */
extern void T1321f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PROCEDURE].fill_with */
extern void T1322f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PROCEDURE].extend */
extern void T1322f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T1321f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T1322f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T501f981(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T510f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T501f1635(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T501f1634(TC* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T510f193(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T501f1633(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T501f1632(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T510f192(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_ONCE_PROCEDURE.set_keys */
extern void T1576f100(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T501f1631(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T501f1630(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T510f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T501f1629(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T501f1628(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].force */
extern void T1329f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUERY].fill_with */
extern void T1330f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUERY].extend */
extern void T1330f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].aliased_resized_area */
extern T0* T1329f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUERY].aliased_resized_area */
extern T0* T1330f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T501f980(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_AST_FACTORY.new_external_function */
extern T0* T510f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T501f1627(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T501f1626(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T501f1625(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T501f1624(TC* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T510f189(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T501f1623(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T501f1622(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T501f1621(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T501f1620(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T510f188(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* ET_ONCE_FUNCTION.set_keys */
extern void T1573f103(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T501f1619(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T501f1618(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T501f1617(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T501f1616(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T510f186(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T501f1615(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T501f1614(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T501f1613(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T501f1612(TC* ac, T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T510f185(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T501f1611(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T501f1610(TC* ac, T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T510f184(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T501f1609(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T501f1608(TC* ac, T0* C);
/* ET_AST_FACTORY.new_extended_attribute */
extern T0* T510f183(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T501f1607(TC* ac, T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T510f182(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T501f1606(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T501f1605(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T501f2286(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T770f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T770f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T770f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T770f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T770f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T770f27(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T770f31(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T770f34(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T770f33(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T770f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T1490f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T770f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T770f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T770f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T770f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T770f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].before */
extern T1 T1490f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T501f978(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T1577f32(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T1577f112(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T524f39(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T524f103(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T1576f53(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T1576f109(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T518f42(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T518f106(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T501f1604(TC* ac, T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T510f180(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T501f1603(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T501f1602(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T501f1601(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T501f2285(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T770f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T770f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T1490f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].after */
extern T1 T1490f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T501f1600(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T501f1599(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T501f2284(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T774f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T774f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T774f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T774f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T774f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T774f27(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T774f31(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T774f34(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T774f33(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T774f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T1491f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T774f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T774f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T774f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T774f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T774f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].before */
extern T1 T1491f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T501f977(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T258f37(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T258f115(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T1574f34(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T1574f106(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T1573f35(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T1573f112(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T522f37(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T522f109(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T394f36(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T394f104(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T392f35(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T392f101(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T382f35(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T382f109(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T383f34(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T383f97(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T501f1598(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T501f1597(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T501f1596(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T501f1595(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T501f2283(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T774f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T774f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T1491f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].after */
extern T1 T1491f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T501f1594(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T501f1593(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T501f1592(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T501f1591(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T501f1590(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T501f1589(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T1205f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T1207f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T1207f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1205f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1207f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T510f179(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T1206c4(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern T0* T78f755(TC* ac, T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T438c91(TC* ac);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T1206f3(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T501f976(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T501f974(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T510f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T501f1035(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T501f1588(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T501f1587(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T501f1586(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T501f1585(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T1208f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T1210f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T1210f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T1209f5(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].force */
extern void T1891f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].fill_with */
extern void T1890f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].extend */
extern void T1890f7(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern T0* T1209f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T1891c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T501f1584(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1208f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1210f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T510f178(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T1209c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T1891f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].make_empty */
extern T0* T1890c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T501f1583(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T501f2282(TC* ac, T0* C);
extern T1 T501f2282ot1(TC* ac, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_value */
extern void T395f66(TC* ac, T0* C, T11 a1);
/* NATURAL_64.out */
extern T0* T11f20(TC* ac, volatile T11* C);
/* STRING_8.append_natural_64 */
extern void T17f84(TC* ac, T0* C, T11 a1);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T501f1582(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T501f1581(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T501f1580(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T1356f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T1358f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T1358f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1356f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1358f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T510f177(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T501f1579(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T1359f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T1360f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T1360f10(TC* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T992f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].force */
extern void T1701f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].fill_with */
extern void T1700f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].extend */
extern void T1700f7(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T501f1578(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1359f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1360f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T510f176(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T992f11(TC* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T992c9(TC* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T992f9p1(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T501f1577(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T501f1576(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T501f1575(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T501f1574(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T1156f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T1158f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T1158f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1156f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1158f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T510f175(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T1571c9(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T1571f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T501f1573(TC* ac, T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T510f174(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T1570c8(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T1570f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T501f1572(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T1159f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1161f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T1161f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1159f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1161f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T510f173(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T501f1571(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T1162f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T1164f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T1164f10(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T1163f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].force */
extern void T1883f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1882f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].extend */
extern void T1882f7(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern T0* T1163f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1883c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T501f1570(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1162f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1164f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T510f172(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T1163c8(TC* ac, T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T1163f8p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1883f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1882c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern T0* T78f754(TC* ac, T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T438c90(TC* ac);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T1163f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T501f1569(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T501f1568(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T501f1567(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T501f1566(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T501f1565(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T501f1564(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T1216f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T1218f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T1218f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1216f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1218f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T510f169(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T501f1563(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T1170f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].fill_with */
extern void T1172f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].extend */
extern void T1172f10(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.put_first */
extern void T1171f17(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.fixed_array */
extern T0* T1171f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T501f1562(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1170f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1172f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creator */
extern T0* T510f171(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T1171c16(TC* ac, T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T1171f18(TC* ac, T0* C, T6 a1);
/* ET_CREATOR.tokens */
extern T0* T1171f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T501f1561(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T501f1560(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T501f1559(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T501f1558(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T501f1557(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T501f1556(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T501f1555(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T501f1554(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T501f1553(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T501f1552(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T501f1551(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T501f1550(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T501f1549(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T501f1548(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T1173f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T1175f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T1175f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1173f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1175f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T501f1547(TC* ac, T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T1174f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].force */
extern void T1885f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CREATOR].fill_with */
extern void T1884f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].extend */
extern void T1884f7(TC* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.fixed_array */
extern T0* T1174f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T1885c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T501f1546(TC* ac, T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T510f170(TC* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T1174c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T1885f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CREATOR].make_empty */
extern T0* T1884c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T501f1545(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T501f1544(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T501f1543(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T501f1542(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T1260f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T1261f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T1261f10(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T489f9(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T489f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T501f1541(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1260f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1261f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T510f168(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T489c8(TC* ac, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T489f8p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern T0* T78f762(TC* ac, T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T438c98(TC* ac);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T489f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T501f1540(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T501f1539(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T501f1538(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T501f1537(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T501f1536(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T501f1535(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T501f1534(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T501f1533(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T501f1532(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T501f1531(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T501f1530(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T501f1529(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T501f1528(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T501f1527(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T501f1526(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T501f1525(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T501f1524(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T1131f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T1133f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].extend */
extern void T1133f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1131f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1133f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_clients */
extern T0* T510f167(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T1132f19(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T1132c20(TC* ac, T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T1132f20p1(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.tokens */
extern T0* T1132f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T501f1523(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T501f1522(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T501f1521(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T1129f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T1130f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T1130f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1129f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1130f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T501f975(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T510f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T501f1520(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T501f1519(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T501f1518(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T501f1517(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T501f1516(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T501f1515(TC* ac, T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T510f166(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T1132c17(TC* ac);
/* ET_CLIENTS.make */
extern void T1132f17p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T501f1514(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T501f1293(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T501f1513(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T501f1512(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T1211f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T1213f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T1213f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.put_first */
extern void T1212f11(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T1212f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T501f1511(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1211f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1213f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T510f164(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T1212c10(TC* ac, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T1212f12(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T501f1510(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T501f1509(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T1191f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].fill_with */
extern void T1193f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].extend */
extern void T1193f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1191f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1193f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_null_export */
extern T0* T510f165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T501f1508(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T501f1507(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T501f1506(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T501f1505(TC* ac, T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T510f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T1568c8(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern T0* T78f1546(TC* ac, T0* C);
/* ET_KEYWORD.make_all */
extern T0* T438c61(TC* ac);
/* ET_ALL_EXPORT.tokens */
extern T0* T1568f3(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T501f1504(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T1194f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T1195f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T1195f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1194f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1195f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T501f1503(TC* ac, T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T488f8(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].force */
extern void T2057f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPORT].fill_with */
extern void T2055f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].extend */
extern void T2055f7(TC* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.fixed_array */
extern T0* T488f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T2057c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T501f1502(TC* ac, T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T510f162(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T488c7(TC* ac, T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T488f7p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T2057f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPORT].make_empty */
extern T0* T2055c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern T0* T78f750(TC* ac, T0* C);
/* ET_KEYWORD.make_export */
extern T0* T438c86(TC* ac);
/* ET_EXPORT_LIST.tokens */
extern T0* T488f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T501f1501(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T501f1500(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T501f1499(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T501f1498(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T501f1497(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T501f1496(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T1331f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T1333f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T1333f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1331f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1333f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T510f161(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T501f1495(TC* ac, T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T510f160(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T501f1494(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T1334f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T1335f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T1335f10(TC* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.put_first */
extern void T487f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].force */
extern void T1880f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].fill_with */
extern void T1879f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].extend */
extern void T1879f7(TC* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.fixed_array */
extern T0* T487f7(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T1880c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T501f1493(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1334f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1335f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_renames */
extern T0* T510f159(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T487c8(TC* ac, T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T487f8p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T1880f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].make_empty */
extern T0* T1879c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern T0* T78f751(TC* ac, T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T438c87(TC* ac);
/* ET_RENAME_LIST.tokens */
extern T0* T487f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T501f1492(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T501f1491(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T501f1490(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T501f1489(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T501f1488(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T1312f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T1313f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T1313f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1312f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1313f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T510f158(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T501f1487(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T1314f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T1315f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T1315f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T501f1486(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T501f1485(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1314f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1315f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parents */
extern T0* T510f157(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T501f1484(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T501f1483(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T1307f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].fill_with */
extern void T1308f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].extend */
extern void T1308f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T1307f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T1308f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T501f973(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T510f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T79f200(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T636f20(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T501f1482(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T501f1481(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T501f1480(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T501f1479(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T501f1478(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T501f1477(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T501f1476(TC* ac, T0* C);
/* ET_PARENT_LIST.set_clients_clause */
extern void T483f13(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T501f1475(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T501f1474(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].force */
extern void T1309f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].fill_with */
extern void T1311f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].extend */
extern void T1311f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T1309f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T1311f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T501f1473(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.put_first */
extern void T1310f7(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].force */
extern void T1901f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].fill_with */
extern void T1900f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].extend */
extern void T1900f7(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.fixed_array */
extern T0* T1310f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T1901c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T501f1472(TC* ac, T0* C);
/* ET_AST_FACTORY.new_parent_clauses */
extern T0* T510f156(TC* ac, T0* C, T6 a1);
/* ET_PARENT_CLAUSE_LIST.make_with_capacity */
extern T0* T1310c6(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T1901f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PARENT_LIST].make_empty */
extern T0* T1900c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T501f1471(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T501f1470(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T501f1469(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T1301f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T1303f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].extend */
extern void T1303f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1301f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1303f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T510f155(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T501f1468(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T501f1467(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1141f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1143f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1143f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1141f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1143f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T510f154(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T510f152(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1566c6(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T501f1466(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T501f1465(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T1144f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T1146f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T1146f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T501f2281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T1145f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1874f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1872f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1872f7(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T1145f8(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1874c2(TC* ac);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T510f153(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1567c6(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T1565f4(TC* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1818f5(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1567f3(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.type */
extern T0* T1566f3(TC* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T1145f7(TC* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T1145f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T501f1464(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T501f1463(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T501f1462(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1144f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1146f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T510f150(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T1145f14(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T1145c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T1145f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1874f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1872c4(TC* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T1145f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T501f1461(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T501f1460(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T501f1459(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T501f1458(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T501f1457(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T501f1456(TC* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T510f151(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T501f1455(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T501f972(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T510f337(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T1565c7(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T510f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1818c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T501f1454(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T501f1453(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T501f1452(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T501f1451(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T501f1450(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T501f1449(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T501f1448(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T1153f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T1155f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T1155f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1153f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1155f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T501f1447(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T501f1446(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T501f1445(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T501f1444(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T501f1443(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T501f1442(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T501f1441(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T501f1440(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T501f1439(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T501f1438(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T501f1437(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T501f1436(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T501f1435(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T501f1434(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T501f1433(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T501f1432(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T501f1431(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T501f1430(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T501f1429(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T501f1428(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T501f1427(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T501f1426(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T501f1425(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T501f1424(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T501f1423(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T501f1422(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T501f1421(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T501f1420(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T501f1419(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T501f1418(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T501f1417(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T501f1416(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T501f1415(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T501f1414(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T501f1413(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T501f1412(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T501f1411(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T501f1410(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T501f1409(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T501f1408(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T501f1407(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T501f1406(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T501f1405(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T501f1404(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T1147f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T1149f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T1149f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T1148f13(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T1148f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T501f1403(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1147f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1149f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T510f148(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T1148c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T1148f12p1(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T1148f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T501f1402(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T501f1401(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T501f1400(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T501f1399(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T501f1398(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T501f1397(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T501f1396(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].force */
extern void T1150f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].fill_with */
extern void T1152f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].extend */
extern void T1152f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.put_first */
extern void T1151f13(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.fixed_array */
extern T0* T1151f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T501f1395(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].aliased_resized_area */
extern T0* T1150f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].aliased_resized_area */
extern T0* T1152f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_renames */
extern T0* T510f147(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern T0* T1151c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern void T1151f12p1(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern void T1151f12p0(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.tokens */
extern T0* T1151f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T501f1394(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T501f1393(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T501f1392(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T501f1391(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T501f1390(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].force */
extern void T1350f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].fill_with */
extern void T1352f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].extend */
extern void T1352f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].aliased_resized_area */
extern T0* T1350f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].aliased_resized_area */
extern T0* T1352f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_constraint_comma */
extern T0* T510f146(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T501f1389(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].force */
extern void T1353f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].fill_with */
extern void T1355f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].extend */
extern void T1355f10(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.put_first */
extern void T1354f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].force */
extern void T1904f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].fill_with */
extern void T1903f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].extend */
extern void T1903f7(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.fixed_array */
extern T0* T1354f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].default_create */
extern T0* T1904c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T501f1388(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].aliased_resized_area */
extern T0* T1353f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].aliased_resized_area */
extern T0* T1355f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_constraint_list */
extern T0* T510f145(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TYPE_CONSTRAINT_LIST.set_left_brace */
extern void T1354f13(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern T0* T1354c11(TC* ac, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern void T1354f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].make */
extern T0* T1904f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].make_empty */
extern T0* T1903c4(TC* ac, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.tokens */
extern T0* T1354f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T501f1387(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T501f1386(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T501f1385(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].force */
extern void T1347f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].fill_with */
extern void T1349f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].extend */
extern void T1349f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1347f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1349f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T501f2280(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T1014f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T1014f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T1014f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T1014f7(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_rename_constraint */
extern T0* T510f144(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_RENAME_CONSTRAINT.make */
extern T0* T1564c8(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T501f971(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T501f1384(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T501f1383(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T1226f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T1227f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T1227f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1226f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1227f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T510f143(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T1563f85(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T1563c84(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T1563f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern T0* T78f730(TC* ac, T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T655c119(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T501f1382(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T501f1381(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T501f1380(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T501f1379(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T501f1378(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T501f1377(TC* ac, T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T510f142(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T948f86(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T948c85(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T501f1376(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T501f1375(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T501f1374(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T1228f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1230f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1230f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1228f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1230f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T510f141(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T501f1373(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T1231f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T1232f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T1232f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T636f29(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T1563f86(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T948f87(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T636f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T636f29p1(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].force */
extern void T1842f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1841f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1841f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern T0* T636f8(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1842c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T501f1372(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1231f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1232f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T510f140(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T636f30(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T636c27(TC* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T636f27p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1842f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1841c4(TC* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T636f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T501f1371(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T501f1370(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T501f2277(TC* ac, T0* C, T0* a1);
extern T1 T501f2277ot1(TC* ac, T0* a1);
extern T1 T501f2277ot2(TC* ac, T0* a1);
extern T1 T501f2277ot3(TC* ac, T0* a1);
extern T1 T501f2277ot4(TC* ac, T0* a1);
extern T1 T501f2277ot5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T1014f11(TC* ac, T0* C);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T1155f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T1155f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T1014f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1719f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1719f6(TC* ac, T0* C);
/* ET_CLASS.set_formal_parameters */
extern void T79f317(TC* ac, T0* C, T0* a1);
extern T1 T79f317ot1(TC* ac, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.put */
extern void T1354f15(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_TYPE_CONSTRAINT_LIST.remove */
extern void T1354f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1904f4(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1903f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].set_count */
extern void T1903f9(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T1563f88(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T636f28(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1842f3(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1841f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1841f8(TC* ac, T0* C, T6 a1);
/* ET_TYPE_RENAME_CONSTRAINT.set_type */
extern void T1564f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T1585f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1565f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T501f1055(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T501f1055ot1(TC* ac, T0* a1);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1818f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T501f1059(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T501f1059ot1(TC* ac, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T1145f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T501f1060(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T1585f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1565f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1818f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1587f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1586f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T493f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1567f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T501f1062(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1566f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T501f1061(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T1145f11(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T1145f9(TC* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T1565f5(TC* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1818f6(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1567f4(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1566f4(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T1587f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T1586f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T493f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T1014f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T501f1369(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T501f1368(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T501f1367(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T501f1366(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T501f1365(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T501f1364(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T501f1363(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T1127f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].fill_with */
extern void T1128f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].extend */
extern void T1128f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T1127f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T1128f4(TC* ac, T0* C, T6 a1);
/* ET_CLASS.set_external_keyword */
extern void T79f314(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T79f313(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T79f328(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T79f312(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T501f969(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T79f330(TC* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.add_last_local_class */
extern void T485f81(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T485f84(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T507f16(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_override_class */
extern void T485f83(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T485f82(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.register_class */
extern void T63f214(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_name */
extern void T79f329(TC* ac, T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T79f293(TC* ac, T0* C);
/* ET_CLASS.reset_parsed */
extern void T79f294(TC* ac, T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T79f311(TC* ac, T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T79f310(TC* ac, T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T79f309(TC* ac, T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T79f308(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_modified */
extern void T485f65(TC* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T130f28(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_pathname */
extern T1 T530f14(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_subpathname */
extern T1 T530f16(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.string_ */
extern T0* T530f18(TC* ac, T0* C);
/* KL_PATHNAME.string_equality_tester */
extern T0* T530f19(TC* ac, T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T953c3(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T129f31(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_case_insensitive */
extern T1 T530f13(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T530f15(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T530f17(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T501f1034(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T501f1043(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T501f1042(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T501f1041(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T58f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T843c960(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T41f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.first_local_class */
extern T0* T485f31(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_local_class */
extern T1 T485f30(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T485f41(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T485f40(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].has */
extern T1 T507f14(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T485f39(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_override_class */
extern T1 T485f38(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T501f1362(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T501f1361(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T501f1360(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T501f1359(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].force */
extern void T1295f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].fill_with */
extern void T1297f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].extend */
extern void T1297f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].aliased_resized_area */
extern T0* T1295f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].aliased_resized_area */
extern T0* T1297f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_note_term_comma */
extern T0* T510f139(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T501f1358(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].force */
extern void T1293f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM].fill_with */
extern void T1294f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM].extend */
extern void T1294f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].aliased_resized_area */
extern T0* T1293f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM].aliased_resized_area */
extern T0* T1294f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T510f138(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T1562c9(TC* ac, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T1562f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T501f1357(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T501f1356(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T501f1355(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T501f1354(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T501f1353(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T501f1352(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T501f1351(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T501f1350(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].force */
extern void T1298f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].fill_with */
extern void T1300f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].extend */
extern void T1300f10(TC* ac, T0* C, T0* a1);
/* ET_NOTE_TERM_LIST.put_first */
extern void T1299f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].force */
extern void T1899f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM_ITEM].fill_with */
extern void T1898f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM_ITEM].extend */
extern void T1898f7(TC* ac, T0* C, T0* a1);
/* ET_NOTE_TERM_LIST.fixed_array */
extern T0* T1299f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].default_create */
extern T0* T1899c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T501f1349(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].aliased_resized_area */
extern T0* T1298f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].aliased_resized_area */
extern T0* T1300f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_note_terms */
extern T0* T510f137(TC* ac, T0* C, T6 a1);
/* ET_NOTE_TERM_LIST.make_with_capacity */
extern T0* T1299c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].make */
extern T0* T1899f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NOTE_TERM_ITEM].make_empty */
extern T0* T1898c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T501f1348(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].force */
extern void T1290f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_ITEM].fill_with */
extern void T1292f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_ITEM].extend */
extern void T1292f10(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_note_semicolon */
extern T0* T510f135(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T501f1347(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T501f1346(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].aliased_resized_area */
extern T0* T1290f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_ITEM].aliased_resized_area */
extern T0* T1292f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_tagged_note */
extern T0* T510f134(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_NOTE.make */
extern T0* T1560c5(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T501f1345(TC* ac, T0* C);
/* ET_AST_FACTORY.new_note */
extern T0* T510f136(TC* ac, T0* C, T0* a1);
/* ET_NOTE.make */
extern T0* T1561c5(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T501f1344(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T501f1343(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].force */
extern void T1287f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_LIST].fill_with */
extern void T1289f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_LIST].extend */
extern void T1289f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].aliased_resized_area */
extern T0* T1287f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_LIST].aliased_resized_area */
extern T0* T1289f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T501f1342(TC* ac, T0* C);
/* ET_NOTE_LIST.put_first */
extern void T1288f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].force */
extern void T1897f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_ITEM].fill_with */
extern void T1896f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_ITEM].extend */
extern void T1896f7(TC* ac, T0* C, T0* a1);
/* ET_NOTE_LIST.fixed_array */
extern T0* T1288f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].default_create */
extern T0* T1897c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T501f1341(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T501f1340(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T501f1339(TC* ac, T0* C);
/* ET_AST_FACTORY.new_notes */
extern T0* T510f132(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NOTE_LIST.set_note_keyword */
extern void T1288f14(TC* ac, T0* C, T0* a1);
/* ET_NOTE_LIST.make_with_capacity */
extern T0* T1288c12(TC* ac, T6 a1);
/* ET_NOTE_LIST.make_with_capacity */
extern void T1288f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].make */
extern T0* T1897f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NOTE_ITEM].make_empty */
extern T0* T1896c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.note_keyword */
extern T0* T78f738(TC* ac, T0* C);
/* ET_KEYWORD.make_note */
extern T0* T438c74(TC* ac);
/* ET_NOTE_LIST.tokens */
extern T0* T1288f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T501f1338(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T501f1337(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T501f1336(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T501f1335(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T501f1334(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T501f1333(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T501f1332(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T501f1331(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T501f1330(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T501f1329(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T501f1328(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T501f1327(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T501f1326(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T501f1325(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T501f1324(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T501f1323(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T501f1322(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T501f1321(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T501f2271(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].wipe_out */
extern void T1015f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_wipe_out */
extern void T1015f53(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_wipe_out */
extern void T1015f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_wipe_out */
extern void T1015f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_wipe_out */
extern void T1015f50(TC* ac, T0* C);
/* SPECIAL [ET_NAMED_CLASS].keep_head */
extern void T1720f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].set_count */
extern void T1720f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors_after */
extern void T1015f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].forth */
extern void T1015f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].put_last */
extern void T1015f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].compress */
extern void T1015f57(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_keep_head */
extern void T1015f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_keep_head */
extern void T1015f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors */
extern void T1015f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_put */
extern void T1015f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].item_for_iteration */
extern T0* T1015f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].after */
extern T1 T1015f20(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_after */
extern T1 T1015f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].start */
extern void T1015f39(TC* ac, T0* C);
/* ET_CLASS.set_providers */
extern void T79f316(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make */
extern T0* T1015c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].set_internal_cursor */
extern void T1015f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_slots */
extern void T1015f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_clashes */
extern void T1015f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_key_storage */
extern void T1015f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_item_storage */
extern void T1015f42(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].make */
extern T0* T1722f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].make_empty */
extern T0* T1720c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].default_create */
extern T0* T1722c3(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T501f1320(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T501f2270(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CLASS.set_parsed */
extern void T79f295(TC* ac, T0* C);
/* ET_CLASS.set_end_keyword */
extern void T79f327(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_second_note_clause */
extern void T79f326(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T79f325(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T79f324(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T79f323(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T79f322(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_parent_clauses */
extern void T79f321(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T79f320(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T501f1319(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T501f1318(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T501f1317(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T501f1316(TC* ac, T0* C);
/* ET_CLASS.set_first_note_clause */
extern void T79f319(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T501f1315(TC* ac, T0* C);
/* ET_CLASS.set_leading_break */
extern void T79f318(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T501f1314(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T501f1267(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T1071f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T1073f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T1073f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T1071f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T1073f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T1069f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T1070f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T1070f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T1069f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T1070f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T1063f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VOID].fill_with */
extern void T1065f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VOID].extend */
extern void T1065f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T1063f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T1065f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T1060f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T1062f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T1062f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T1060f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T1062f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T1057f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T1059f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T1059f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T1057f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T1059f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T1055f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].fill_with */
extern void T1056f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].extend */
extern void T1056f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T1055f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T1056f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T1052f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T1054f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T1047f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T1049f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T1049f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T1047f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T1049f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T1044f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T1046f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T1042f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T1043f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T1039f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T1041f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T1041f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T1039f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T1041f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T1037f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].fill_with */
extern void T1038f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].extend */
extern void T1038f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T1037f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T1038f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T1031f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].fill_with */
extern void T1033f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].extend */
extern void T1033f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T1031f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T1033f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T1028f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T1030f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T1026f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].fill_with */
extern void T1027f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].extend */
extern void T1027f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T1026f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T1027f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T1021f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T1023f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T1023f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T1021f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T1023f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T1018f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T1020f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T1020f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T1018f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T1020f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.accept */
extern void T501f1266(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T501f1264(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T501f1292(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1800_1999 */
extern void T501f1291(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T501f1313(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T501f1290(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T501f1289(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T501f1288(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T501f1287(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T501f1286(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T501f1285(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T501f1284(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T501f1283(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T501f1282(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T501f1263(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T501f1281(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T501f1312(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T501f1301(TC* ac, T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T510f15(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T510f14(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T510f13(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T1553f46(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T1553c43(TC* ac, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T1553f50(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T501f1053(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T501f1058(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T1806f41(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T1806f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T1806f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T1806f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T1806f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T1806f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T1806f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T1806f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T1806f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T1806f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T1806f35(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T1806f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T1806f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T1806f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T1806f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T1806f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T1806f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T1806f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T1806f25(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T1806f28(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T1806f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T1806f45(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.strings */
extern T0* T501f1033(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T1806f37(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T501f1040(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T1806c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T1806f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T1806f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_internal_cursor */
extern void T1806f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T1806f33(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T2070c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T1806f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T1806f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T1806f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T1806f62(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T501f2306(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_UNICODE_CHARACTER_BUFFER.append_substring_to_string */
extern void T1541f21(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_UNICODE_CHARACTER_BUFFER.item */
extern T2 T1541f11(TC* ac, T0* C, T6 a1);
/* KL_UNICODE_CHARACTER_BUFFER.unicode_item */
extern T3 T1541f10(TC* ac, T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T1510f18(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T501f1032(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T501f1031(TC* ac, T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T510f12(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T1552f46(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T1552c43(TC* ac, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T1552f50(TC* ac, T0* C);
/* ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T510f11(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T1551f73(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_binary_integer_constant */
extern T0* T501f1052(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T1551c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T1551f74(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.compute_natural_64_value */
extern void T501f2305(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T510f10(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T1550f73(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_octal_integer_constant */
extern T0* T501f1051(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T1550c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T1550f74(TC* ac, T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T510f9(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T1549f73(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_hexadecimal_integer_constant */
extern T0* T501f1050(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T1549c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T1549f74(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T58f278(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T41f278(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T58f277(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T41f277(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T510f8(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T1548f73(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_underscored_integer_constant */
extern T0* T501f1049(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T1548c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T1548f74(TC* ac, T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T510f7(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T395f75(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_regular_integer_constant */
extern T0* T501f1048(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T58f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T41f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T58f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T41f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T58f275(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T41f275(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T58f274(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T41f274(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T58f273(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T41f273(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T58f272(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T41f272(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T58f271(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T41f271(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T510f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T1547f59(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T501f1047(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T1547c52(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T1547f60(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_utf8_literal */
extern T0* T501f1044(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T501f795(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.utf8_text */
extern T0* T501f793(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.append_utf8_text_to_string */
extern void T501f2304(TC* ac, T0* C, T0* a1);
/* KL_UNICODE_CHARACTER_BUFFER.append_utf8_substring_to_string */
extern void T1541f16(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_utf8_substring_to_string */
extern void T1510f16(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.utf8_text_substring */
extern T0* T501f790(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.append_utf8_text_substring_to_string */
extern void T501f2303(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T510f5(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T1546f55(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T501f1046(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T1546c48(TC* ac, T0* a1, T0* a2, T1 a3);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T1546f56(TC* ac, T0* C);
/* NATURAL_64.to_natural_32 */
extern T10 T11f21(TC* ac, volatile T11* C);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T510f4(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T1545f49(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T1545c47(TC* ac, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T1545f53(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T501f1311(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T58f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T41f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T58f269(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T41f269(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T58f268(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T41f268(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T58f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T41f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T510f3(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T1544f56(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T501f1045(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T1544c49(TC* ac, T0* a1, T3 a2, T1 a3);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T1544f57(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T501f1310(TC* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T510f131(TC* ac, T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T1558f51(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T1558c49(TC* ac, T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T1558f55(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T58f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T41f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T58f280(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T41f280(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T501f782(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T501f1309(TC* ac, T0* C, T3 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T510f130(TC* ac, T0* C, T3 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T1557f50(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T501f1302(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T501f1308(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T501f1307(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_detachable_keyword */
extern T0* T510f129(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T438f60(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T501f936(TC* ac, T0* C);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T510f128(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_reference */
extern T0* T438c55(TC* ac);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T501f934(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T510f127(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T1022f24(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T510f126(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T510f125(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T501f930(TC* ac, T0* C);
/* ET_ECF_CLUSTER.use_obsolete_syntax */
extern T1 T860f26(TC* ac, T0* C);
/* ET_NONE_GROUP.use_obsolete_syntax */
extern T1 T492f3(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.use_obsolete_syntax */
extern T1 T435f2(TC* ac, T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T510f124(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern T0* T78f763(TC* ac, T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T438c99(TC* ac);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T510f123(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T510f122(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T510f121(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern T0* T78f761(TC* ac, T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T438c97(TC* ac);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T510f120(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern T0* T78f760(TC* ac, T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T438c96(TC* ac);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T510f119(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern T0* T78f759(TC* ac, T0* C);
/* ET_KEYWORD.make_external */
extern T0* T438c95(TC* ac);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T510f118(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T438c54(TC* ac);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T510f117(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T510f116(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern T0* T78f758(TC* ac, T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T438c94(TC* ac);
/* ET_AST_FACTORY.new_attached_keyword */
extern T0* T510f115(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T501f919(TC* ac, T0* C);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T510f114(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T510f113(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T510f112(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern T0* T78f756(TC* ac, T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T438c92(TC* ac);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T510f111(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T510f110(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T1048f56(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T1048c60(TC* ac);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T510f109(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T510f108(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T510f107(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T293f41(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T510f106(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T510f105(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern T0* T78f753(TC* ac, T0* C);
/* ET_KEYWORD.make_select */
extern T0* T438c89(TC* ac);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T510f104(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T510f103(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T510f102(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T510f101(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T438c65(TC* ac);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T510f100(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T510f99(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T510f98(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern T0* T78f749(TC* ac, T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T438c85(TC* ac);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T510f97(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T510f96(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern T0* T78f748(TC* ac, T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T438c84(TC* ac);
/* ET_AST_FACTORY.new_across_keyword */
extern T0* T510f95(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T510f94(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern T0* T78f746(TC* ac, T0* C);
/* ET_KEYWORD.make_until */
extern T0* T438c82(TC* ac);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T510f93(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T510f92(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T1058f20(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T1058c19(TC* ac);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T1058f21(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T1058f22(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T1058f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T510f91(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T510f90(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T1556f42(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T1556c41(TC* ac);
/* ET_FALSE_CONSTANT.make_token */
extern void T1556f46(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T1556f47(TC* ac, T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T510f89(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T510f88(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T510f87(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T510f86(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T510f85(TC* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T1019f14(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T510f84(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T510f83(TC* ac, T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T1064f33(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T1064c32(TC* ac);
/* ET_VOID.make_token */
extern void T1064f37(TC* ac, T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T1064f38(TC* ac, T0* C);
/* ET_VOID.tokens */
extern T0* T1064f12(TC* ac, T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T510f82(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T1555f42(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T510f81(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_some_keyword */
extern T0* T510f80(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.some_keyword */
extern T0* T78f739(TC* ac, T0* C);
/* ET_KEYWORD.make_some */
extern T0* T438c75(TC* ac);
/* ET_AST_FACTORY.new_note_keyword */
extern T0* T510f79(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T501f880(TC* ac, T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T510f78(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T499f131(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T1806f42(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T188f135(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T188c135(TC* ac, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T188f136(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T1806f26(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T1806f24(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T499f134(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T499f93(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T499f135(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T499f206(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T499f133(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T499f132(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T501f1054(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T510f77(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T510f76(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T510f75(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T510f74(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T510f73(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T1048c59(TC* ac);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T510f72(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T510f71(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T1048c58(TC* ac);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T510f70(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T510f69(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T510f68(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T510f67(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T510f66(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T510f65(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern T0* T78f733(TC* ac, T0* C);
/* ET_KEYWORD.make_if */
extern T0* T438c69(TC* ac);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T510f64(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T510f63(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T510f2(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T501f1306(TC* ac, T0* C, T3 a1, T3 a2);
/* ET_AST_FACTORY.new_or_else_symbol */
extern T0* T510f62(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T1061f133(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_or_else_symbol */
extern T0* T1061c150(TC* ac);
/* ET_AST_FACTORY.new_and_then_symbol */
extern T0* T510f61(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_and_then_symbol */
extern T0* T1061c149(TC* ac);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T510f60(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T510f59(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T510f58(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T510f57(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T510f56(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T655f99(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T510f55(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T1061c148(TC* ac);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T510f54(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T510f53(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T1061c147(TC* ac);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T510f52(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T1061c146(TC* ac);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T510f51(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T655c105(TC* ac);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T510f50(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T655c104(TC* ac);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T510f49(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T1061c145(TC* ac);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T510f1(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T501f773(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T501f1305(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.unicode_item */
extern T3 T1510f7(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T501f1304(TC* ac, T0* C, T3 a1);
/* ET_AST_FACTORY.new_xor_symbol */
extern T0* T510f48(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_xor_symbol */
extern T0* T1061c144(TC* ac);
/* ET_AST_FACTORY.new_or_symbol */
extern T0* T510f47(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_or_symbol */
extern T0* T1061c143(TC* ac);
/* ET_AST_FACTORY.new_not_symbol */
extern T0* T510f46(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_not_symbol */
extern T0* T1061c142(TC* ac);
/* ET_AST_FACTORY.new_implies_symbol */
extern T0* T510f45(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_implies_symbol */
extern T0* T1061c141(TC* ac);
/* ET_AST_FACTORY.new_and_symbol */
extern T0* T510f44(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_and_symbol */
extern T0* T1061c140(TC* ac);
/* ET_AST_FACTORY.new_close_repeat_symbol */
extern T0* T510f43(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_open_repeat_symbol */
extern T0* T510f42(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_bar_symbol */
extern T0* T510f41(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_there_exists_symbol */
extern T0* T510f40(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_for_all_symbol */
extern T0* T510f39(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.for_all_symbol */
extern T0* T78f724(TC* ac, T0* C);
/* ET_SYMBOL.make_for_all */
extern T0* T655c113(TC* ac);
/* ET_AST_FACTORY.new_at_symbol */
extern T0* T510f38(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T510f37(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T655c102(TC* ac);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T510f36(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T510f35(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T510f34(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T656f131(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T510f33(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T510f32(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T510f31(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T510f30(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T510f29(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T1072f47(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T510f28(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T510f27(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T510f26(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern T0* T78f720(TC* ac, T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T655c109(TC* ac);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T510f25(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T78f719(TC* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T1067c4(TC* ac);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T1067f5(TC* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T1067f3(TC* ac, T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T510f24(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern T0* T78f718(TC* ac, T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T655c108(TC* ac);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T510f23(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T510f22(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T510f21(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T510f20(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T1061c137(TC* ac);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T510f19(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T1061c136(TC* ac);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T510f18(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T1061c135(TC* ac);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T510f17(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T1061c134(TC* ac);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T510f16(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T1061c132(TC* ac);
/* ET_EIFFEL_PARSER.unicode_text_item */
extern T3 T501f772(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T501f1280(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T58f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T41f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.terminate */
extern void T501f1300(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T501f734(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T501f1279(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T501f1072(TC* ac, T0* C, T0* a1);
/* KL_UNICODE_CHARACTER_BUFFER.count */
extern T6 T1541f6(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.as_special */
extern T0* T1541f12(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.fill */
extern void T1001f26(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.put */
extern void T1541f17(TC* ac, T0* C, T2 a1, T6 a2);
/* CHARACTER_8.to_character_8 */
extern T2 T2f33(TC* ac, volatile T2* C);
/* KL_STRING_INPUT_STREAM.end_of_input */
extern T1 T1539f1(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_iso_8859_1_stream */
extern T6 T1541f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_iso_8859_1_substring */
extern void T1541f20(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* STRING_32.put */
extern void T18f38(TC* ac, T0* C, T3 a1, T6 a2);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_utf8_stream */
extern T6 T1541f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* YY_UNICODE_FILE_BUFFER.compact_left */
extern void T1001f28(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.move_left */
extern void T1541f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.subcopy */
extern void T18f39(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_UNICODE_CHARACTER_BUFFER.resize */
extern void T1541f18(TC* ac, T0* C, T6 a1);
/* YY_UNICODE_FILE_BUFFER.default_capacity */
extern T6 T1001f19(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.set_index */
extern void T1001f25(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T501f733(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T501f732(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T501f1278(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_invalid_unicode_character_error */
extern void T501f1277(TC* ac, T0* C, T10 a1);
/* KL_UNICODE_CHARACTER_BUFFER.item_code */
extern T10 T1541f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_at_beginning_of_line */
extern T6 T501f722(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T501f699(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T501f1262(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T501f1271(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T501f1298(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T501f2268(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T501f2299(TC* ac, T0* C);
/* SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T1377f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].set_count */
extern void T1377f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T1375f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T1375f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T1372f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T1372f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].keep_head */
extern void T1369f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].set_count */
extern void T1369f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].keep_head */
extern void T1366f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].set_count */
extern void T1366f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].keep_head */
extern void T1363f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].set_count */
extern void T1363f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T1360f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T1360f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T1358f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T1358f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].keep_head */
extern void T1355f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].set_count */
extern void T1355f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1352f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].set_count */
extern void T1352f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].keep_head */
extern void T1349f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].set_count */
extern void T1349f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE].keep_head */
extern void T1346f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE].set_count */
extern void T1346f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T1344f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T1344f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T1341f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T1341f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].keep_head */
extern void T1338f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].set_count */
extern void T1338f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T1335f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T1335f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T1333f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T1333f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].keep_head */
extern void T1330f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].set_count */
extern void T1330f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].keep_head */
extern void T1328f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].set_count */
extern void T1328f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T1325f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T1325f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].keep_head */
extern void T1322f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].set_count */
extern void T1322f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].keep_head */
extern void T1320f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].set_count */
extern void T1320f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T1318f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T1318f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T1315f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T1315f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T1313f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T1313f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].keep_head */
extern void T1311f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].set_count */
extern void T1311f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].keep_head */
extern void T1308f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].set_count */
extern void T1308f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T1306f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T1306f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T1303f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T1303f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].keep_head */
extern void T1300f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].set_count */
extern void T1300f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].keep_head */
extern void T1297f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].set_count */
extern void T1297f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].keep_head */
extern void T1294f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].set_count */
extern void T1294f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].keep_head */
extern void T1292f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].set_count */
extern void T1292f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].keep_head */
extern void T1289f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].set_count */
extern void T1289f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T1286f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T1286f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T1284f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T1284f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T1281f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T1281f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T1278f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T1278f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T1275f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T1275f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T1270f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T1270f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T1267f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T1267f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T1264f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T1264f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T1261f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T1261f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T1259f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T1259f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T1256f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T1256f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T1254f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T1254f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].keep_head */
extern void T1251f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].set_count */
extern void T1251f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].keep_head */
extern void T1248f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].set_count */
extern void T1248f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].keep_head */
extern void T1246f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].set_count */
extern void T1246f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].keep_head */
extern void T1244f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].set_count */
extern void T1244f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T1242f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].set_count */
extern void T1242f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].keep_head */
extern void T1240f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].set_count */
extern void T1240f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T1238f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T1238f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].keep_head */
extern void T1235f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].set_count */
extern void T1235f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T1232f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T1232f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1230f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1230f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T1227f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T1227f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T1223f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T1223f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T1220f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T1220f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T1218f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T1218f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T1215f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T1215f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T1213f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T1213f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T1210f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T1210f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T1207f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T1207f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T1204f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T1204f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T1201f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T1201f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].keep_head */
extern void T1199f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].set_count */
extern void T1199f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].keep_head */
extern void T1197f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].set_count */
extern void T1197f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T1195f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T1195f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].keep_head */
extern void T1193f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].set_count */
extern void T1193f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T1190f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T1190f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T1187f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T1187f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].keep_head */
extern void T1184f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].set_count */
extern void T1184f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].keep_head */
extern void T1181f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].set_count */
extern void T1181f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T1178f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T1178f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T1175f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T1175f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].keep_head */
extern void T1172f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].set_count */
extern void T1172f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].keep_head */
extern void T1169f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].set_count */
extern void T1169f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T1166f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T1166f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T1164f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T1164f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T1161f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T1161f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T1158f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T1158f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].keep_head */
extern void T1152f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].set_count */
extern void T1152f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T1149f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T1149f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T1146f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T1146f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T1143f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T1143f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].keep_head */
extern void T1140f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].set_count */
extern void T1140f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T1138f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T1138f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T1135f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].set_count */
extern void T1135f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T1133f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].set_count */
extern void T1133f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T1130f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T1130f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].keep_head */
extern void T1128f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].set_count */
extern void T1128f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T1126f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T1126f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T1123f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T1123f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T1120f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T1120f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].keep_head */
extern void T1117f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].set_count */
extern void T1117f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T1114f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T1114f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T1111f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T1111f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T1109f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T1109f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T1106f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T1106f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T1103f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T1103f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].keep_head */
extern void T1100f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].set_count */
extern void T1100f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T1098f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T1098f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T1095f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T1095f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T1093f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T1093f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T1090f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T1090f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T1087f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T1087f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T1085f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T1085f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T1083f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T1083f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T1081f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T1081f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T1079f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T1079f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T1076f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T1076f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T1073f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T1073f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T1070f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T1070f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T1068f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T1068f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].keep_head */
extern void T1065f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].set_count */
extern void T1065f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T1062f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T1062f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T1059f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T1059f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].keep_head */
extern void T1056f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].set_count */
extern void T1056f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T1054f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T1054f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T1051f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T1051f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T1049f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T1049f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T1046f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T1046f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].keep_head */
extern void T1043f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].set_count */
extern void T1043f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T1041f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T1041f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].keep_head */
extern void T1038f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].set_count */
extern void T1038f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T1036f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T1036f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].keep_head */
extern void T1033f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].set_count */
extern void T1033f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T1030f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T1030f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].keep_head */
extern void T1027f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].set_count */
extern void T1027f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T1023f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T1023f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T1020f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T1020f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T501f1265(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T501f1070(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.set_file */
extern void T1001f23(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_FILE_BUFFER.set_file_with_size */
extern void T1001f27(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_UNICODE_FILE_BUFFER.flush */
extern void T1001f29(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.flush */
extern void T1001f29p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T501f1261(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T1013f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T1013f17(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T1006f9(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T1005f9(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T1002f10(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.set_end_of_file */
extern void T1001f24(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T501f1261p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T501f1261p0(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T501f1261p2(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T42f43(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T42f51(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T42f57(TC* ac, T0* C, T14 a1);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T501f752(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T42f17(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T501f1029(TC* ac, T0* C);
/* ET_CLASS.reset_after_preparsed */
extern void T79f288(TC* ac, T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T79f158(TC* ac, T0* C);
/* MUTEX.try_lock */
extern T1 T137f7(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_trylock */
extern T1 T137f8(TC* ac, T0* C, T14 a1);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T501f751(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T501f1255(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_none_class */
extern void T501f1254(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T503f14(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T503f16(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T58f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T843c918(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1420f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1420f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T507f38(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T507f39(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1420f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T507f40(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1420f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T507f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1420f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T507f37(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_after */
extern void T1420f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1420f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].before */
extern T1 T1420f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T58f26(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T41f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T41f26(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T503f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T1378f13(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1724f35(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1724f46(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1724f45(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1724f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1724f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1724f42(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1724f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1963f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_after */
extern void T1963f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T507f36(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T507f22(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T1378f17(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T503f20(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1380f9(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T503f19(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1381f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].wipe_out */
extern void T1727f12(TC* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].keep_head */
extern void T1964f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].set_count */
extern void T1964f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].move_all_cursors_after */
extern void T1727f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].set_next_cursor */
extern void T1966f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].set_after */
extern void T1966f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_constraint_base_types */
extern void T1381f28(TC* ac, T0* C, T0* a1);
extern T1 T1381f28ot1(TC* ac, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.put_first */
extern void T1729f15(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.fixed_array */
extern T0* T1729f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].default_create */
extern T0* T1965c3(TC* ac);
/* ET_BASE_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern T0* T1729c14(TC* ac, T0* a1, T6 a2);
/* ET_BASE_TYPE_CONSTRAINT_LIST.make_empty_with_capacity */
extern void T1729f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1965f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].make_empty */
extern T0* T1964c5(TC* ac, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.tokens */
extern T0* T1729f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].item */
extern T0* T1727f6(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_types */
extern void T1563f90(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].first */
extern T0* T1727f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.base_type_constraint */
extern T0* T1381f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1381f14(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_recursive_formal_constraints */
extern void T1381f27(TC* ac, T0* C, T0* a1);
extern T1 T1381f27ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_recursive_formal_constraints */
extern void T1563f89(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].item */
extern T10 T1728f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].replace */
extern void T1728f12(TC* ac, T0* C, T10 a1, T6 a2);
/* ET_FORMAL_PARAMETER_CHECKER1.add_n_flags_to_list */
extern void T1381f30(TC* ac, T0* C, T10 a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [NATURAL_32].force_last */
extern void T1728f13(TC* ac, T0* C, T10 a1);
/* DS_ARRAYED_LIST [NATURAL_32].resize */
extern void T1728f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].new_capacity */
extern T6 T1728f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].extendible */
extern T1 T1728f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].wipe_out */
extern void T1728f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [NATURAL_32].move_all_cursors_after */
extern void T1728f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].set_next_cursor */
extern void T1967f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].set_after */
extern void T1967f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.propagate_recursive_formal_dependencies */
extern void T1381f26(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1381f25(TC* ac, T0* C, T0* a1);
extern T1 T1381f25ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T58f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T843c1032(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T58f75(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T41f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T41f75(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T58f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T843c1031(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T58f74(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T41f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T41f74(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.initalize_base_type_dependencies */
extern void T1381f23(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.initalize_formal_dependencies */
extern void T1381f22(TC* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T503f18(TC* ac, T0* C);
/* ET_CLASS.set_conforming_ancestors */
extern void T79f281(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T79f280(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].wipe_out */
extern void T1379f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_wipe_out */
extern void T1379f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_wipe_out */
extern void T1379f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_wipe_out */
extern void T1379f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_wipe_out */
extern void T1379f51(TC* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE].keep_head */
extern void T980f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].set_count */
extern void T980f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].unset_found_item */
extern void T1379f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].move_all_cursors_after */
extern void T1379f49(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_next_cursor */
extern void T1725f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_after */
extern void T1725f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].forth */
extern void T1379f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_forth */
extern void T1379f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].add_traversing_cursor */
extern void T1379f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_position */
extern void T1725f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].remove_traversing_cursor */
extern void T1379f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_item */
extern T6 T1379f39(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T437f8(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].force */
extern void T981f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].fill_with */
extern void T980f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].extend */
extern void T980f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_for_iteration */
extern T0* T1379f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_item */
extern T0* T1379f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_item */
extern T0* T1379f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1379f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_after */
extern T1 T1379f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1725f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].start */
extern void T1379f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_start */
extern void T1379f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_off */
extern T1 T1379f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].off */
extern T1 T1725f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].is_empty */
extern T1 T1379f24(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T503f23(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T77f69(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T77f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T494f11(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T259f81(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T259f80(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T259f88(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T2014f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1563f78(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T948f80(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1832f6(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T1587f51(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T1586f54(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T1585f52(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1583f8(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T247f49(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T493f48(TC* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T79f215(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T77f89(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1563f74(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1563f80(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f80ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T1587f56(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T1586f59(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T1586f103(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T1586f102(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T1585f57(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.set_type_mark */
extern void T1585f104(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.twin */
extern T0* T1585f71(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T493f53(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.set_current_keyword */
extern void T493f95(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T948f76(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T948f82(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f82ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1587f50(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1587f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T1586f53(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1586f73(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T1585f51(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T1585f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T247f48(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T247f54(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f54ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T493f47(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T493f64(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T79f214(TC* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T79f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T2015f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T636f18(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T245f19(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T437f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].force_new */
extern void T1379f45(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_put */
extern void T1379f60(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_put */
extern void T1379f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_put */
extern void T1379f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_put */
extern void T1379f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_item */
extern T6 T1379f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].hash_position */
extern T6 T1379f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].resize */
extern void T1379f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_resize */
extern void T1379f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].special_integer_ */
extern T0* T1379f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_resize */
extern void T1379f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_resize */
extern void T1379f65(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].aliased_resized_area */
extern T0* T981f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].aliased_resized_area */
extern T0* T980f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_item */
extern T0* T1379f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_resize */
extern void T1379f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_modulus */
extern T6 T1379f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_capacity */
extern T6 T1379f35(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T58f225(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T843c925(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T58f32(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T41f225(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T41f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found_item */
extern T0* T1379f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found */
extern T1 T1379f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search */
extern void T1379f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search_position */
extern void T1379f55(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr2a_error */
extern void T58f224(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr2a */
extern T0* T843c924(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr2_error */
extern T1 T58f31(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr2a_error */
extern void T41f224(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr2_error */
extern T1 T41f31(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_frozen */
extern T1 T79f196(TC* ac, T0* C);
/* ET_CLASS.has_frozen_mark */
extern T1 T79f208(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T58f223(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T843c923(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T58f30(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T41f223(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T41f30(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T58f221(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T843c921(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T58f28(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T41f221(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T41f28(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T58f220(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T843c920(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T58f27(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T41f220(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T41f27(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T58f219(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T843c919(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T41f219(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.is_conforming */
extern T1 T483f7(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T503f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T507f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T1378f12(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T503f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.system_object_type */
extern T0* T191f87(TC* ac, T0* C);
/* ET_SYSTEM.system_object_type */
extern T0* T45f11(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_object_type */
extern T0* T63f90(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_universe */
extern T0* T503f11(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T503f22(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T1378f15(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T1378f19(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T1378f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T1378f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1724f33(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1724f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1724f23(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1724f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1724f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1724f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1724f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1724f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1724f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T1378f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T1378f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put_new */
extern void T1724f37(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1724f54(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1724f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1724f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1724f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1724f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1724f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1724f29(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1724f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1724f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1724f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1724f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T1378f9(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T1378f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1724f21(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T503f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors_error */
extern void T79f267(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T503c13(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1381c20(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].make */
extern T0* T1728c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].set_internal_cursor */
extern void T1728f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].new_cursor */
extern T0* T1728f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].make */
extern T0* T1967c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1727c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].set_internal_cursor */
extern void T1727f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].new_cursor */
extern T0* T1727f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1966c5(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1381f20p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.make */
extern T0* T1380c8(TC* ac, T0* a1);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T1380f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_map */
extern T0* T1379c40(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_with_equality_testers */
extern void T1379f46(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_sparse_container */
extern void T1379f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].set_internal_cursor */
extern void T1379f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T1379f37(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1725c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_slots */
extern void T1379f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_clashes */
extern void T1379f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_key_storage */
extern void T1379f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_item_storage */
extern void T1379f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T1378c11(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T1378f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1724c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1724f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1724f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].set_internal_cursor */
extern void T1724f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1724f32(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1963c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1724f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1724f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1724f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1724f56(TC* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T503f13p1(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T503f9(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T503f10(TC* ac, T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T79f279(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T506f20(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T506f24(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.post_action */
extern void T506f32(TC* ac, T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T79f284(TC* ac, T0* C);
/* ET_CLASS.set_suppliers */
extern void T79f283(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].extend */
extern void T1015f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].put */
extern void T1015f48(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T506f31(TC* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.flat_mode */
extern T1 T506f17(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T403f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.wipe_out */
extern void T422f12(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.wipe_out */
extern void T421f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].wipe_out */
extern void T804f11(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.wipe_out */
extern void T419f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].wipe_out */
extern void T799f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_for_iteration */
extern T0* T418f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_key */
extern T0* T418f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].wipe_out */
extern void T418f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_wipe_out */
extern void T418f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_wipe_out */
extern void T418f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_wipe_out */
extern void T418f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_wipe_out */
extern void T418f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].move_all_cursors_after */
extern void T418f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].forth */
extern void T418f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_forth */
extern void T418f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].add_traversing_cursor */
extern void T418f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_traversing_cursor */
extern void T418f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_for_iteration */
extern T0* T418f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_item */
extern T0* T418f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].after */
extern T1 T418f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_after */
extern T1 T418f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].after */
extern T1 T795f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].start */
extern void T418f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_start */
extern void T418f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_off */
extern T1 T418f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].off */
extern T1 T795f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].is_empty */
extern T1 T418f40(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T416f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].wipe_out */
extern void T794f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].wipe_out */
extern void T415f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T415f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T415f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T415f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T415f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T415f46(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T788f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_after */
extern void T788f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].forth */
extern void T415f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T415f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T415f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_position */
extern void T788f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T415f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T415f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T415f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T415f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T415f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T788f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].start */
extern void T415f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_start */
extern void T415f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T415f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].off */
extern T1 T788f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T415f27(TC* ac, T0* C);
/* ET_INVARIANTS.set_validity_error */
extern void T1258f35(TC* ac, T0* C);
/* ET_INVARIANTS.set_validity_checked */
extern void T1258f34(TC* ac, T0* C);
/* ET_INVARIANTS.assertion */
extern T0* T1258f12(TC* ac, T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T1258f22(TC* ac, T0* C, T6 a1);
/* ET_CLASS.same_as_base_class */
extern T1 T79f73(TC* ac, T0* C);
/* ET_INVARIANTS.reset_validity_checked */
extern void T1258f33(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T403f81(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_supplier_handler */
extern void T407f23(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T506f30(TC* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T506f36(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_PROCEDURE].wipe_out */
extern void T1411f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].slots_wipe_out */
extern void T1411f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].clashes_wipe_out */
extern void T1411f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_wipe_out */
extern void T1411f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_wipe_out */
extern void T1411f48(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].move_all_cursors_after */
extern void T1411f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1780f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_after */
extern void T1780f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].forth */
extern void T1411f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_forth */
extern void T1411f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].add_traversing_cursor */
extern void T1411f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_position */
extern void T1780f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].remove_traversing_cursor */
extern void T1411f52(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T506f40(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T403f87(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_PROCEDURE].item_for_iteration */
extern T0* T1411f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_item */
extern T0* T1411f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].after */
extern T1 T1411f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_after */
extern T1 T1411f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].after */
extern T1 T1780f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].start */
extern void T1411f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_start */
extern void T1411f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].cursor_off */
extern T1 T1411f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].off */
extern T1 T1780f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].is_empty */
extern T1 T1411f21(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T403f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T1577f93(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T258f95(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T524f83(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_error */
extern void T1576f87(TC* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_error */
extern void T518f84(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_error */
extern void T1574f86(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_error */
extern void T1573f89(TC* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_error */
extern void T522f87(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T394f87(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T392f86(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T382f88(TC* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_error */
extern void T383f83(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T1577f92(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T258f94(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T524f82(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_checked */
extern void T1576f86(TC* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_checked */
extern void T518f83(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T1574f85(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_checked */
extern void T1573f88(TC* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_checked */
extern void T522f86(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T394f86(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T392f85(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T382f87(TC* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_checked */
extern void T383f82(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T403f88(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].wipe_out */
extern void T425f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_wipe_out */
extern void T425f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_wipe_out */
extern void T425f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_wipe_out */
extern void T425f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_wipe_out */
extern void T425f54(TC* ac, T0* C);
/* SPECIAL [ET_ASSERTIONS].keep_head */
extern void T810f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTIONS].set_count */
extern void T810f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].unset_found_item */
extern void T425f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].move_all_cursors_after */
extern void T425f53(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_next_cursor */
extern void T809f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_after */
extern void T809f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].forth */
extern void T425f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_forth */
extern void T425f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].add_traversing_cursor */
extern void T425f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_position */
extern void T809f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].remove_traversing_cursor */
extern void T425f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_item */
extern T6 T425f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_last */
extern T1 T425f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_is_last */
extern T1 T425f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_empty */
extern T1 T425f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_for_iteration */
extern T0* T425f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_item */
extern T0* T425f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_item */
extern T0* T425f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].start */
extern void T425f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_start */
extern void T425f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_off */
extern T1 T425f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].off */
extern T1 T809f5(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T403f90(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].first */
extern T0* T425f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].force_last */
extern void T425f39(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_put */
extern void T425f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_put */
extern void T425f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_put */
extern void T425f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_item */
extern T6 T425f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].hash_position */
extern T6 T425f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].resize */
extern void T425f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_resize */
extern void T425f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].special_integer_ */
extern T0* T425f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_resize */
extern void T425f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_resize */
extern void T425f60(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].aliased_resized_area */
extern T0* T812f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTIONS].aliased_resized_area */
extern T0* T810f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_item */
extern T0* T425f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_resize */
extern void T425f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_modulus */
extern T6 T425f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_capacity */
extern T6 T425f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_put */
extern void T425f46(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].force */
extern void T812f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].fill_with */
extern void T810f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].extend */
extern void T810f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].search_position */
extern void T425f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T403f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.other_precursors */
extern T0* T1577f9(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.other_precursors */
extern T0* T258f9(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.other_precursors */
extern T0* T524f17(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.other_precursors */
extern T0* T1576f10(TC* ac, T0* C);
/* ET_DO_PROCEDURE.other_precursors */
extern T0* T518f19(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.other_precursors */
extern T0* T1574f9(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.other_precursors */
extern T0* T1573f10(TC* ac, T0* C);
/* ET_DO_FUNCTION.other_precursors */
extern T0* T522f12(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.other_precursors */
extern T0* T394f10(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.other_precursors */
extern T0* T392f9(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.other_precursors */
extern T0* T382f8(TC* ac, T0* C);
/* ET_ATTRIBUTE.other_precursors */
extern T0* T383f8(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T403f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.set_validity_error */
extern void T431f21(TC* ac, T0* C);
/* ET_PRECONDITIONS.set_validity_checked */
extern void T431f20(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.feature_checker */
extern T0* T403f48(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.validity_checked */
extern T1 T394f23(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.validity_checked */
extern T1 T392f21(TC* ac, T0* C);
/* ET_ATTRIBUTE.validity_checked */
extern T1 T383f19(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.validity_checked */
extern T1 T382f26(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.validity_checked */
extern T1 T258f29(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.validity_checked */
extern T1 T1577f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.validity_checked */
extern T1 T1576f27(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.validity_checked */
extern T1 T1574f26(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.validity_checked */
extern T1 T1573f29(TC* ac, T0* C);
/* ET_DO_FUNCTION.validity_checked */
extern T1 T522f28(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.validity_checked */
extern T1 T524f13(TC* ac, T0* C);
/* ET_DO_PROCEDURE.validity_checked */
extern T1 T518f15(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T506f38(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_IMPLEMENTATION_CHECKER.flat_dbc_mode */
extern T1 T506f18(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T403f86(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.set_validity_error */
extern void T1317f23(TC* ac, T0* C);
/* ET_POSTCONDITIONS.set_validity_checked */
extern void T1317f22(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T403f85(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T1577f94(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T524f85(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T1576f88(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_validity_checked */
extern void T518f86(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T506f35(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].wipe_out */
extern void T1412f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].slots_wipe_out */
extern void T1412f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].clashes_wipe_out */
extern void T1412f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_wipe_out */
extern void T1412f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].item_storage_wipe_out */
extern void T1412f48(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].move_all_cursors_after */
extern void T1412f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_next_cursor */
extern void T1781f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_after */
extern void T1781f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].forth */
extern void T1412f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_forth */
extern void T1412f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].add_traversing_cursor */
extern void T1412f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_position */
extern void T1781f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].remove_traversing_cursor */
extern void T1412f52(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T506f39(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].item_for_iteration */
extern T0* T1412f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_item */
extern T0* T1412f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].after */
extern T1 T1412f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_after */
extern T1 T1412f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].after */
extern T1 T1781f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].start */
extern void T1412f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_start */
extern void T1412f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].cursor_off */
extern T1 T1412f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].off */
extern T1 T1781f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].is_empty */
extern T1 T1412f21(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T403f83(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.reset_validity_checked */
extern void T1317f21(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset_validity_checked */
extern void T431f22(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T258f96(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T1574f87(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_validity_checked */
extern void T1573f90(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_validity_checked */
extern void T522f88(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T394f88(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T392f87(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T382f89(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_validity_checked */
extern void T383f84(TC* ac, T0* C);
/* ET_SUPPLIER_BUILDER.set */
extern void T1413f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.suppliers_enabled */
extern T1 T506f15(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_signatures_validity */
extern void T506f29(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_signature_validity */
extern void T506f34(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.resolve_feature_adaptations */
extern void T506f33(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.resolve_inherited_features */
extern void T506f37(TC* ac, T0* C, T0* a1);
extern T1 T506f37ot1(TC* ac, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_parents_validity */
extern void T506f28(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1410f7(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.pre_action */
extern void T506f27(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.report_class_postponed */
extern void T69f108(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_class_postponed */
extern void T398f112(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_parent_class */
extern void T506f26(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_checking_implementation */
extern void T79f285(TC* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T506f23(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_implementation_error */
extern void T79f270(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T506c19(TC* ac, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T506f21(TC* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T1413c5(TC* ac);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern T0* T1413f4(TC* ac, T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T1413f3(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T1412c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_QUERY].set_internal_cursor */
extern void T1412f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T1412f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T1781c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T1412f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T1412f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T1412f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T1412f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T1411c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].set_internal_cursor */
extern void T1411f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T1411f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T1780c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T1411f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T1411f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T1411f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T1411f39(TC* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1410c6(TC* ac, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T1410f6p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1410f4(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.feature_name_tester */
extern T0* T506f14(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T506f25(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T506f16(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T403c75(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.make */
extern T0* T430c9(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.make */
extern void T430f9p1(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T429c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_internal_cursor */
extern void T429f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].new_cursor */
extern T0* T429f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T821c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T819f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make_empty */
extern T0* T820c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].default_create */
extern T0* T819c3(TC* ac);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].make */
extern T0* T426c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].set_internal_cursor */
extern void T426f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].new_cursor */
extern T0* T426f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].make */
extern T0* T816c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].make */
extern T0* T813f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NOTE_TERM].make_empty */
extern T0* T815c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].default_create */
extern T0* T813c3(TC* ac);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_map */
extern T0* T425c38(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_with_equality_testers */
extern void T425f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_sparse_container */
extern void T425f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].set_internal_cursor */
extern void T425f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_cursor */
extern T0* T425f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].make */
extern T0* T809c7(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_slots */
extern void T425f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_clashes */
extern void T425f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_key_storage */
extern void T425f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_item_storage */
extern void T425f65(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].make */
extern T0* T812f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTIONS].make_empty */
extern T0* T810c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].default_create */
extern T0* T812c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].make */
extern T0* T424c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T424f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T424f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].make */
extern T0* T808c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].make */
extern T0* T807f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T806c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].default_create */
extern T0* T807c3(TC* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T423c3(TC* ac);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.make */
extern T0* T421c6(TC* ac);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T804c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].set_internal_cursor */
extern void T804f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].new_cursor */
extern T0* T804f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1494c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_map */
extern T0* T420c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_with_equality_testers */
extern void T420f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_sparse_container */
extern void T420f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_internal_cursor */
extern void T420f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_cursor */
extern T0* T420f24(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T801c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_slots */
extern void T420f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_clashes */
extern void T420f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_key_storage */
extern void T420f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_item_storage */
extern void T420f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T786f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T785c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T786c3(TC* ac);
/* ET_ITERATION_ITEM_SCOPE.make */
extern T0* T419c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].make */
extern T0* T799c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].set_internal_cursor */
extern void T799f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].new_cursor */
extern T0* T799f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].make */
extern T0* T1493c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_map */
extern T0* T418c43(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_with_equality_testers */
extern void T418f47(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_sparse_container */
extern void T418f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_internal_cursor */
extern void T418f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_cursor */
extern T0* T418f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make */
extern T0* T795c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_slots */
extern void T418f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_clashes */
extern void T418f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_key_storage */
extern void T418f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_item_storage */
extern void T418f59(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T417c8(TC* ac, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T417f6(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T416c6(TC* ac);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].make */
extern T0* T794c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T794f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T794f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].make */
extern T0* T1492c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_map */
extern T0* T415c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T415f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T415f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T415f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T415f26(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make */
extern T0* T788c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_slots */
extern void T415f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_clashes */
extern void T415f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T415f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T415f55(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T414c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T414f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T414f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T787c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T413c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_internal_cursor */
extern void T413f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].new_cursor */
extern T0* T413f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T784c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T781f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make_empty */
extern T0* T783c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].default_create */
extern T0* T781c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T412c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].set_internal_cursor */
extern void T412f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_cursor */
extern T0* T412f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T780c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T777f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].make_empty */
extern T0* T779c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].default_create */
extern T0* T777c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T411c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].set_internal_cursor */
extern void T411f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T411f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T776c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T773f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_empty */
extern T0* T775c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T773c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T410c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].set_internal_cursor */
extern void T410f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T410f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T772c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T769f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_empty */
extern T0* T771c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T769c3(TC* ac);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T409c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].set_internal_cursor */
extern void T409f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T409f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T768c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T766f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make_empty */
extern T0* T767c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T766c3(TC* ac);
/* ET_INVARIANTS.implementation_class */
extern T0* T1258f1(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.dummy_feature */
extern T0* T403f67(TC* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern T0* T407c22(TC* ac, T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern T0* T407f16(TC* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern void T407f22p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.make */
extern void T403f75p1(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T506f13(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_none_class */
extern void T506f22(TC* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T509f2(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.process_class */
extern void T505f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T1401f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T1401f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T1401f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_keep_head */
extern void T1401f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_keep_head */
extern void T1401f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T1401f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1769f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1769f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_after */
extern void T1769f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T1401f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].last */
extern T0* T1401f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T1401f28(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T505f16(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T505f20(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T505f23(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vggc3b_error */
extern void T58f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vggc3b */
extern T0* T843c932(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.types_to_text */
extern T0* T1910f5(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.append_types_to_string */
extern void T1910f18(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.types_to_text */
extern T0* T1729f8(TC* ac, T0* C);
/* ET_BASE_TYPE_CONSTRAINT_LIST.append_types_to_string */
extern void T1729f17(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vggc3_error */
extern T1 T58f35(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc3b_error */
extern void T41f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vggc3_error */
extern T1 T41f35(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vggc3a_error */
extern void T58f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vggc3a */
extern T0* T843c931(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vggc3a_error */
extern void T41f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc3c_error */
extern void T58f230(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc3c */
extern T0* T843c930(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc3c_error */
extern void T41f230(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc3d_error */
extern void T58f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vggc3d */
extern T0* T843c929(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vggc3d_error */
extern void T41f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T58f228(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T843c928(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T41f228(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INTERFACE_CHECKER.check_constraint_renamings_validity */
extern void T505f19(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_renaming_validity */
extern void T505f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T505f22ot1(TC* ac, T0* a1);
extern T1 T505f22ot2(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].wipe_out */
extern void T1405f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_wipe_out */
extern void T1405f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1405f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1405f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1405f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].unset_found_item */
extern void T1405f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1405f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].set_next_cursor */
extern void T1779f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].set_after */
extern void T1779f7(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_not_renamed_names_validity */
extern void T505f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1t_error */
extern void T58f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1t */
extern T0* T843c954(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1t_error */
extern void T41f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav1s_error */
extern void T58f253(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1s */
extern T0* T843c953(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1s_error */
extern void T41f253(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav3g_error */
extern void T58f252(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav3g */
extern T0* T843c952(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav3g_error */
extern void T41f252(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav2g_error */
extern void T58f251(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav2g */
extern T0* T843c951(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav2g_error */
extern void T41f251(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found_key */
extern T0* T1405f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_item */
extern T0* T1405f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found_item */
extern T0* T1405f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_item */
extern T0* T1405f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found */
extern T1 T1405f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].search */
extern void T1405f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].search_position */
extern void T1405f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].hash_position */
extern T6 T1405f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_item */
extern T6 T1405f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_item */
extern T6 T1405f24(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vggc2f_error */
extern void T58f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2f */
extern T0* T843c950(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vggc2_error */
extern T1 T58f33(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc2f_error */
extern void T41f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vggc2_error */
extern T1 T41f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].has */
extern T1 T1404f29(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_renamed_names_validity */
extern void T505f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc2e_error */
extern void T58f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vggc2e */
extern T0* T843c949(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vggc2e_error */
extern void T41f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1r_error */
extern void T58f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1r */
extern T0* T843c946(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1r_error */
extern void T41f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4l_error */
extern void T58f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4l */
extern T0* T843c944(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4l_error */
extern void T41f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1q_error */
extern void T58f243(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1q */
extern T0* T843c943(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1q_error */
extern void T41f243(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4k_error */
extern void T58f241(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4k */
extern T0* T843c941(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4k_error */
extern void T41f241(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3f_error */
extern void T58f240(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav3f */
extern T0* T843c940(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav3f_error */
extern void T41f240(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4j_error */
extern void T58f238(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4j */
extern T0* T843c938(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4j_error */
extern void T41f238(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].put_new */
extern void T1405f41(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_put */
extern void T1405f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_put */
extern void T1405f57(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_put */
extern void T1405f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_put */
extern void T1405f53(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2f_error */
extern void T58f237(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav2f */
extern T0* T843c937(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav2f_error */
extern void T41f237(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item */
extern T0* T1405f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].has */
extern T1 T1405f29(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav4i_error */
extern void T58f235(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4i */
extern T0* T843c935(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4i_error */
extern void T41f235(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vggc2a_error */
extern void T58f234(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2a */
extern T0* T843c934(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc2a_error */
extern void T41f234(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc2d_error */
extern void T58f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vggc2d */
extern T0* T843c933(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vggc2d_error */
extern void T41f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].resize */
extern void T1405f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_resize */
extern void T1405f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].special_integer_ */
extern T0* T1405f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_resize */
extern void T1405f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_resize */
extern void T1405f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_resize */
extern void T1405f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].new_modulus */
extern T6 T1405f34(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vggc2c_error */
extern void T58f227(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2c */
extern T0* T843c927(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.tuple_keyword */
extern T0* T259f4(TC* ac, T0* C);
/* ET_CLASS_TYPE.name */
extern T0* T77f2(TC* ac, T0* C);
/* ET_CLASS.name */
extern T0* T79f13(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vggc2c_error */
extern void T41f227(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc2b_error */
extern void T58f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2b */
extern T0* T843c926(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc2b_error */
extern void T41f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T505f18(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T505f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1403f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T505f17(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1402f15(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T505f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_interface_error */
extern void T79f269(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T505c13(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1405f38(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.alias_name_tester */
extern T0* T505f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_map */
extern T0* T1405c37(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1405f44(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_sparse_container */
extern void T1405f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].set_internal_cursor */
extern void T1405f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].new_cursor */
extern T0* T1405f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].make */
extern T0* T1779c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_slots */
extern void T1405f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_clashes */
extern void T1405f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_key_storage */
extern void T1405f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_item_storage */
extern void T1405f60(TC* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern T0* T505f9(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1403c6(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1403f6p1(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1403f4(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_classes_to_be_processed */
extern void T1402f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1402c13(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_feature_flattening_error_only */
extern void T430f10(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1402f13p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T1401c32(TC* ac, T6 a1);
/* DS_HASH_SET [ET_CLASS].set_internal_cursor */
extern void T1401f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T1401f29(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1769c6(TC* ac, T0* a1);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T1401f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T1401f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T1401f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T1401f34(TC* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.make */
extern void T505f13p1(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T505f10(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T505f12(TC* ac, T0* C);
/* ET_CLASS.set_interface_checked */
extern void T79f282(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].force_last */
extern void T231f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_put */
extern void T231f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_put */
extern void T231f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_put */
extern void T231f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_item */
extern T6 T231f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].hash_position */
extern T6 T231f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].resize */
extern void T231f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_resize */
extern void T231f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].special_integer_ */
extern T0* T231f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_resize */
extern void T231f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_resize */
extern void T231f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_item */
extern T0* T231f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_item */
extern T6 T231f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_resize */
extern void T231f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_modulus */
extern T6 T231f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_capacity */
extern T6 T231f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_put */
extern void T231f39(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].search_position */
extern void T231f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].unset_found_item */
extern void T231f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].found_item */
extern T0* T231f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_item */
extern T0* T231f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].found */
extern T1 T231f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].search */
extern void T231f34(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_canonical_to_string */
extern void T79f275(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_canonical_to_string */
extern void T636f31(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_canonical_actual_parameter_to_string */
extern void T1563f99(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_canonical_to_string */
extern void T1563f100(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1563f102(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.reference_keyword */
extern T0* T78f242(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.expanded_keyword */
extern T0* T78f241(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.append_canonical_actual_parameter_to_string */
extern void T948f97(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_canonical_to_string */
extern void T948f96(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T948f98(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_canonical_to_string */
extern void T259f128(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_canonical_to_string */
extern void T2015f24(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T1832f13(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_canonical_to_string */
extern void T1587f95(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T1587f96(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_canonical_to_string */
extern void T1586f98(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_canonical_to_string */
extern void T1585f98(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T1585f100(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_canonical_to_string */
extern void T247f87(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T247f88(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_canonical_to_string */
extern void T493f89(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T493f90(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.tokens */
extern T0* T1832f8(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_mark */
extern T0* T1563f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.type_mark */
extern T0* T948f4(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type_mark */
extern T0* T1587f1(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_mark */
extern T0* T1586f1(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type_mark */
extern T0* T1585f1(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_mark */
extern T0* T247f1(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_mark */
extern T0* T493f1(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_mark */
extern T0* T259f2(TC* ac, T0* C);
/* ET_CLASS.class_mark */
extern T0* T79f31(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_mark */
extern T0* T77f1(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_canonical_actual_parameter_to_string */
extern void T1587f93(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_canonical_actual_parameter_to_string */
extern void T1586f99(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_canonical_actual_parameter_to_string */
extern void T1585f99(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T1583f13(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.tokens */
extern T0* T1583f7(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_canonical_actual_parameter_to_string */
extern void T247f86(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_canonical_actual_parameter_to_string */
extern void T493f88(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_canonical_actual_parameter_to_string */
extern void T259f131(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_canonical_actual_parameter_to_string */
extern void T79f286(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_canonical_actual_parameter_to_string */
extern void T77f139(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_canonical_to_string */
extern void T245f29(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_canonical_to_string */
extern void T77f136(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T494f19(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T2014f21(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.type_name_buffer */
extern T0* T68f65(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_dynamic_primary_type */
extern T0* T68f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.register_dynamic_type */
extern void T68f99(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_conforming_ancestors */
extern void T68f109(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.null_system_processor */
extern T0* T78f28(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern void T69f59(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern T0* T69c59(TC* ac);
/* ET_SYSTEM_PROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T69f74(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_unknown_builtin_reported_only */
extern void T69f73(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_preparse_shallow_mode_only */
extern void T69f72(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_default_keyword_usage_only */
extern void T69f71(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_use_detachable_keyword_only */
extern void T69f79(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attached_keyword_only */
extern void T69f78(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_reference_keyword_only */
extern void T69f77(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_note_keyword_only */
extern void T69f76(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attribute_keyword_only */
extern void T69f75(TC* ac, T0* C, T1 a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T512c3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_error_handler */
extern T0* T78f158(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.make_null */
extern T0* T58c189(TC* ac);
/* ET_NULL_ERROR_HANDLER.make_null */
extern void T58f189p1(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T58f24(TC* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T165c3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_ast_processor */
extern T0* T78f157(TC* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T509c1(TC* ac);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern T0* T78f156(TC* ac, T0* C);
/* ET_AST_FACTORY.make */
extern T0* T510c374(TC* ac);
/* ET_SYSTEM_PROCESSOR.tokens */
extern T0* T69f46(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].make_default */
extern T0* T271c23(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].default_capacity */
extern T6 T271f10(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.conforming_ancestors */
extern T0* T496f11(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforming_ancestors */
extern T0* T495f11(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.conforming_ancestors */
extern T0* T323f11(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.conforming_ancestors */
extern T0* T338f11(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.conforming_ancestors */
extern T0* T228f11(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T496f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T495f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T323f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T338f75(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_next_type */
extern void T228f72(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_index */
extern void T79f274(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T496f75(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T495f75(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T323f72(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T338f74(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_hash_code */
extern void T228f71(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T81f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T81f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T81f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].extendible */
extern T1 T81f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.make */
extern T0* T228c65(TC* ac, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T287c37(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T287f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T287f18(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T353c9(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T287f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T287f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T287f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T287f43(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.empty_features */
extern T0* T228f46(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T229c14(TC* ac);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T68f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T496c69(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T496f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T496f62(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern T0* T68f72(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T68f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T68f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T495c69(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T495f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T495f62(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T68f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T68f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T323c66(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T323f80(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T323f53(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T68f66(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T338c68(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T338f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T338f55(TC* ac, T0* C);
/* ET_TUPLE_TYPE.same_as_base_class */
extern T1 T259f13(TC* ac, T0* C);
/* ET_CLASS_TYPE.same_as_base_class */
extern T1 T77f12(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1563f29(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1563f29ot1(TC* ac, T0* a1);
extern T1 T1563f29ot2(TC* ac, T0* a1);
extern T1 T1563f29ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T948f27(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T948f27ot1(TC* ac, T0* a1);
extern T1 T948f27ot2(TC* ac, T0* a1);
extern T1 T948f27ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T1587f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1587f22ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T1586f8(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1586f8ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T1585f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T247f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T247f22ot1(TC* ac, T0* a1);
extern T1 T247f22ot2(TC* ac, T0* a1);
extern T1 T247f22ot3(TC* ac, T0* a1);
/* ET_CLASS.base_type_with_type_mark */
extern T0* T79f142(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T636f14(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T493f14(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T246f37(TC* ac, T0* C, T0* a1);
extern T1 T246f37ot1(TC* ac, T0* a1);
/* ET_LIKE_N.base_type_with_type_mark */
extern T0* T1535f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T259f39(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_with_type_mark */
extern T0* T79f116(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T77f39(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T259f10(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T2015f12(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1563f77(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T948f79(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1832f4(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T1587f37(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T1586f34(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T1585f34(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1583f4(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T247f30(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T493f25(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T259f55(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T79f149(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T77f51(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T245f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T77f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T494f2(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T2014f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.next_type */
extern T0* T496f16(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.next_type */
extern T0* T495f16(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.next_type */
extern T0* T323f21(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.next_type */
extern T0* T338f21(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.next_type */
extern T0* T228f19(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1563f48(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T948f50(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T1587f21(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T1586f48(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T1585f7(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T247f21(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T79f141(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T493f12(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T259f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T77f88(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_tuple_class */
extern T1 T79f98(TC* ac, T0* C);
/* ET_CLASS.is_generic */
extern T1 T79f88(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T1563f47(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T948f49(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T1587f20(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T1586f47(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T1585f6(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T247f20(TC* ac, T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T79f140(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T493f11(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T259f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T77f87(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_type_mark */
extern T0* T78f22(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T68f75(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.base_type */
extern T0* T342f9(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_index */
extern void T1830f11(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT.set_index */
extern void T261f10(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T188f127(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1830f8(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T261f8(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T267f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1830f7(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T261f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T327f40(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T241f23(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T260f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T267c9(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE.arguments */
extern T0* T1577f5(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments */
extern T0* T258f1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments */
extern T0* T1576f5(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.arguments */
extern T0* T1574f1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments */
extern T0* T1573f1(TC* ac, T0* C);
/* ET_DO_FUNCTION.arguments */
extern T0* T522f1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T394f55(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T392f53(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T382f50(TC* ac, T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T383f52(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments */
extern T0* T524f4(TC* ac, T0* C);
/* ET_DO_PROCEDURE.arguments */
extern T0* T518f3(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T1529f16(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T281f16(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T523f16(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T496f77(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T495f77(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T323f74(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T338f76(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.set_never_void */
extern void T342f28(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.set_never_void */
extern void T228f73(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T235f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T76f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T523c15(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T523f20(TC* ac, T0* C, T0* a1);
extern T1 T523f20ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T235f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].force_last_new */
extern void T405f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_put */
extern void T405f54(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_put */
extern void T405f53(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_put */
extern void T405f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_put */
extern void T405f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T405f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T405f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].resize */
extern void T405f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_resize */
extern void T405f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T405f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T405f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T405f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T405f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_resize */
extern void T405f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T405f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T405f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T405f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T405f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T405f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T405f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T405f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map_default */
extern T0* T405c40(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern void T405f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T405f55(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T405f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T405f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T405f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T978c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T405f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T405f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T405f64(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T764f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].make_empty */
extern T0* T763c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T764c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T405f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].default_capacity */
extern T6 T405f30(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T76f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T235f10(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T235f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T235f8(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T496f70(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T495f70(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T323f67(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T338f69(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.set_alive */
extern void T228f66(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T76f104(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.primary_type */
extern T0* T496f48(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.primary_type */
extern T0* T495f48(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.primary_type */
extern T0* T323f50(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.primary_type */
extern T0* T338f52(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.primary_type */
extern T0* T228f49(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.primary_type */
extern T0* T342f1(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T68f60(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attached_type */
extern void T496f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attached_type */
extern void T495f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_attached_type */
extern void T323f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attached_type */
extern void T338f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attached_type */
extern void T228f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attached_separate_type */
extern void T496f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attached_separate_type */
extern void T495f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_attached_separate_type */
extern void T323f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attached_separate_type */
extern void T338f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attached_separate_type */
extern void T228f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_separate_type */
extern void T496f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_separate_type */
extern void T495f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_separate_type */
extern void T323f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_separate_type */
extern void T338f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_separate_type */
extern void T228f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.make */
extern T0* T342c26(TC* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.base_type */
extern T0* T496f3(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.base_type */
extern T0* T495f3(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.base_type */
extern T0* T338f3(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.base_type */
extern T0* T323f3(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.base_type */
extern T0* T228f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T1577f45(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T258f73(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T1576f45(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T1574f54(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T1573f56(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T522f33(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_unique_attribute */
extern T1 T394f32(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T392f31(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T382f31(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T383f30(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T524f30(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T518f36(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T1577f44(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T258f72(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T1576f44(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T1574f53(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T1573f55(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T522f56(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T394f31(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_constant_attribute */
extern T1 T392f30(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T382f67(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T383f29(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T524f49(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T518f33(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T1577f40(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T258f35(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T1576f42(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T1574f35(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T1573f34(TC* ac, T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T522f54(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T394f54(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T392f52(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.type */
extern T0* T382f49(TC* ac, T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T383f51(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T524f48(TC* ac, T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T518f32(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T241f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_map */
extern T0* T649c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_with_equality_testers */
extern void T649f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_sparse_container */
extern void T649f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].set_internal_cursor */
extern void T649f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_cursor */
extern T0* T649f22(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make */
extern T0* T1471c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_slots */
extern void T649f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_clashes */
extern void T649f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_key_storage */
extern void T649f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].make */
extern T0* T1473f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CALL_NAME].make_empty */
extern T0* T1469c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].default_create */
extern T0* T1473c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_item_storage */
extern void T649f37(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].make */
extern T0* T1472f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].make_empty */
extern T0* T1467c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].default_create */
extern T0* T1472c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_map */
extern T0* T650c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_with_equality_testers */
extern void T650f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_sparse_container */
extern void T650f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].set_internal_cursor */
extern void T650f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_cursor */
extern T0* T650f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make */
extern T0* T1477c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_slots */
extern void T650f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_clashes */
extern void T650f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_key_storage */
extern void T650f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_item_storage */
extern void T650f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].make */
extern T0* T1476f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].make_empty */
extern T0* T1474c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].default_create */
extern T0* T1476c3(TC* ac);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern T0* T241f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE.make */
extern T0* T518c81(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.tokens */
extern T0* T518f46(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.base_class */
extern T0* T496f2(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.base_class */
extern T0* T495f2(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.base_class */
extern T0* T338f2(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.base_class */
extern T0* T323f2(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.base_class */
extern T0* T228f6(TC* ac, T0* C);
/* ET_IDENTIFIER.make */
extern T0* T188c122(TC* ac, T0* a1);
/* ET_C_GENERATOR.close_cpp_file */
extern void T72f675(TC* ac, T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T72f674(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.delete_file */
extern void T130f33(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.delete */
extern void T42f76(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_delete */
extern void T42f79(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_unlink */
extern void T42f81(TC* ac, T0* C, T14 a1);
/* KL_WINDOWS_FILE_SYSTEM.delete_file */
extern void T129f36(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_file */
extern void T72f673(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T165f9(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T165f9p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T42f77(TC* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T268f10(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T268f10p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T321f38(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T321f38p1(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.rename_file */
extern void T130f32(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_INPUT_FILE.change_name */
extern void T42f75(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_change_name */
extern void T42f78(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.rename_file */
extern void T42f80(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.set_name */
extern void T42f71(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_rename */
extern void T42f82(TC* ac, T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.same_physical_file */
extern T1 T42f36(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_system */
extern T0* T42f44(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unix_file_system */
extern T0* T42f54(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.windows_file_system */
extern T0* T42f53(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.operating_system */
extern T0* T42f52(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.count */
extern T6 T42f42(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_count */
extern T6 T42f50(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_size */
extern T6 T42f56(TC* ac, T0* C, T14 a1);
/* FILE_INFO.size */
extern T6 T144f18(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_write */
extern T1 T42f55(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.inode */
extern T6 T42f41(TC* ac, T0* C);
/* FILE_INFO.inode */
extern T6 T144f17(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.tmp_file1 */
extern T0* T42f40(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.rename_file */
extern void T129f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T315f34(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T315f43(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T315f42(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T315f41(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T315f40(TC* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T734f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T734f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T315f39(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T315f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T736f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T736f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].wipe_out */
extern void T314f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_wipe_out */
extern void T314f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T314f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T314f47(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_CONSTANT].keep_head */
extern void T731f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].set_count */
extern void T731f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T314f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T314f44(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_next_cursor */
extern void T730f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_after */
extern void T730f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T313f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T313f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T313f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T313f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T313f47(TC* ac, T0* C);
/* SPECIAL [ET_CONSTANT].keep_head */
extern void T727f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].set_count */
extern void T727f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T313f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T726f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_after */
extern void T726f9(TC* ac, T0* C);
/* ARRAY [INTEGER_32].fill_with */
extern void T312f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].wipe_out */
extern void T311f37(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_wipe_out */
extern void T311f47(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_wipe_out */
extern void T311f46(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_wipe_out */
extern void T311f45(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_wipe_out */
extern void T311f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].move_all_cursors_after */
extern void T311f42(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].set_next_cursor */
extern void T723f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].set_after */
extern void T723f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T320f46(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T320f58(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T320f57(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T320f56(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T320f55(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T320f54(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T320f53(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T748f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_after */
extern void T748f9(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T75f45(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T75f64(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T75f63(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T75f62(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T75f61(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T75f60(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T75f30(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T320f45(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T320f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T320f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T748f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T320f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T320f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T320f30(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T320f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T320f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T320f21(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T320f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T320f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T320f35(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T320f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].after */
extern T1 T748f4(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T320f44(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T320f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T320f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].off */
extern T1 T748f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T320f31(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T75f46(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T75f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T75f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T75f70(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_file */
extern void T72f672(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T75f17(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T75f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T75f23(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T75f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T399f8(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].start */
extern void T75f42(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T75f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T75f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].off */
extern T1 T399f5(TC* ac, T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T72f671(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T72f670(TC* ac, T0* C);
/* ET_C_GENERATOR.temp_variable */
extern T0* T72f191(TC* ac, T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T72f669(TC* ac, T0* C);
extern T1 T72f669ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T68f61(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.runtime_name_to_text */
extern T0* T259f29(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_runtime_name_to_string */
extern void T259f129(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_runtime_name_to_string */
extern void T2015f25(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_runtime_name_to_string */
extern void T1563f95(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_runtime_name_to_string */
extern void T948f92(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_runtime_name_to_string */
extern void T1587f89(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_runtime_name_to_string */
extern void T1586f93(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_runtime_name_to_string */
extern void T1585f93(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_runtime_name_to_string */
extern void T247f84(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_runtime_name_to_string */
extern void T493f86(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_runtime_name_to_string */
extern void T79f276(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_runtime_name_to_string */
extern void T636f32(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_runtime_name_to_string */
extern void T77f137(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T494f20(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T2014f22(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_runtime_name_to_string */
extern void T245f30(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.runtime_name_to_text */
extern T0* T77f29(TC* ac, T0* C);
/* ET_CLASS.runtime_name_to_text */
extern T0* T79f71(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_tuple */
extern T1 T496f50(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_tuple */
extern T1 T495f50(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_tuple */
extern T1 T323f58(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_tuple */
extern T1 T338f59(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_tuple */
extern T1 T228f56(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.type_id */
extern T6 T496f45(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.type_id */
extern T6 T495f45(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.type_id */
extern T6 T323f48(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.type_id */
extern T6 T338f49(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.type_id */
extern T6 T228f45(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.type_id */
extern T6 T342f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T81f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T81f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T442f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T442f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T81f14(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T341f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort_with_comparator */
extern void T341f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].subsort_with_comparator */
extern void T341f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].swap */
extern void T81f22(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].replace */
extern void T81f21(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID.less_than */
extern T1 T343f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T81f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].append_last */
extern void T81f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].extend_last */
extern void T81f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T353f14(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_forth */
extern void T287f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].add_traversing_cursor */
extern void T287f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T353f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_position */
extern void T353f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].remove_traversing_cursor */
extern void T287f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T353f10(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T353f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_item */
extern T0* T287f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T353f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T353f13(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_start */
extern void T287f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_off */
extern T1 T287f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].off */
extern T1 T353f6(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T287f21(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T341c2(TC* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_primary_type_comparator */
extern T0* T72f199(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID.make */
extern T0* T343c2(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T81c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T81f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T81f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T442c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T0* T315f28(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T315f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T315f29(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T315f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T315f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T315f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T315f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T315f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T315f21(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T72f668(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].forth */
extern void T219f55(TC* ac, T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T834f36(TC* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T834f55(TC* ac, T0* C, T6 a1);
/* UC_STRING.occurrences */
extern T6 T454f28(TC* ac, T0* C, T2 a1);
/* UC_STRING.code_occurrences */
extern T6 T454f50(TC* ac, T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f37(TC* ac, T0* C, T2 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_for_iteration */
extern T0* T219f38(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_for_iteration */
extern T0* T219f37(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].after */
extern T1 T219f36(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T219f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].start */
extern void T219f54(TC* ac, T0* C);
/* ET_C_GENERATOR.print_init_const_function */
extern void T72f667(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].forth */
extern void T314f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_forth */
extern void T314f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T314f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_position */
extern void T730f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T314f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T314f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_item */
extern T0* T314f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_item */
extern T0* T314f36(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T1611f18(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T314f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_key */
extern T0* T314f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T314f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_after */
extern T1 T314f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T730f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].start */
extern void T314f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_start */
extern void T314f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_off */
extern T1 T314f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].off */
extern T1 T730f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].is_empty */
extern T1 T314f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T313f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T313f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T313f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T726f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T313f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T313f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T313f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T313f20(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_status_name */
extern void T72f747(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].has */
extern T1 T311f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T313f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T313f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T313f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T313f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].after */
extern T1 T726f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T313f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T313f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T313f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].off */
extern T1 T726f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T313f28(TC* ac, T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T72f666(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T72f665(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T288f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T288f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T288f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T288f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T288f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T288f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T288f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T706f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T706f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T288f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_forth */
extern void T288f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].add_traversing_cursor */
extern void T288f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_position */
extern void T706f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].remove_traversing_cursor */
extern void T288f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T288f24(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T72f744(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].wipe_out */
extern void T285f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_wipe_out */
extern void T285f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_wipe_out */
extern void T285f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T285f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T285f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].unset_found_item */
extern void T285f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].move_all_cursors_after */
extern void T285f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_next_cursor */
extern void T705f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_after */
extern void T705f7(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T72f811(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T72f810(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T72f810ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T72f838(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item */
extern T0* T285f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_item */
extern T0* T285f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].search_position */
extern void T285f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].hash_position */
extern T6 T285f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_item */
extern T6 T285f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_item */
extern T6 T285f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_item */
extern T6 T285f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].force_last */
extern void T285f36(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_put */
extern void T285f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_put */
extern void T285f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_put */
extern void T285f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].resize */
extern void T285f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_resize */
extern void T285f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].special_integer_ */
extern T0* T285f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_resize */
extern void T285f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_resize */
extern void T285f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_resize */
extern void T285f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_modulus */
extern T6 T285f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_capacity */
extern T6 T285f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_put */
extern void T285f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_for_iteration */
extern T0* T288f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_item */
extern T0* T288f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T288f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T288f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_after */
extern T1 T288f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T706f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T288f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_start */
extern void T288f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_off */
extern T1 T288f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].off */
extern T1 T706f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T288f22(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T72f743(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac2(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac3(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac4(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac5(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac7(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac8(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac9(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac10(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac11(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T72f743ac12(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T72f743ot1(TC* ac, T0* a1);
extern T1 T72f743ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T72f808(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T72f809(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T72f837(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].force_last_new */
extern void T288f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T288f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T288f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T288f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T288f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T288f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T288f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T288f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T288f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T288f37(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T288f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T288f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T288f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T288f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T288f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T288f34(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T286f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern T0* T286f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T699c3(TC* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T286f10(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T286f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T286f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T0* T288f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T288f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T288f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T288f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T496f44(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T495f44(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T323f54(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T338f60(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_attributes */
extern T1 T228f57(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T310f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T310f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T310f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T310f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T310f48(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T720f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T720f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T310f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T719f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T719f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T310f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T310f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T310f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T719f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T310f52(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T72f664(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T310f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T310f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T310f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T310f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T719f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T310f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T310f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T310f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T719f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T310f21(TC* ac, T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T72f663(TC* ac, T0* C, T0* a1);
extern T1 T72f663ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T287f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T287f55(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T287f54(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T287f53(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T287f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T287f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T287f39(TC* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T72f662(TC* ac, T0* C, T0* a1);
extern T1 T72f662ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_for_iteration */
extern T0* T287f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T287f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_after */
extern T1 T287f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T287f38(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T72f661(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T72f740(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T72f740ot1(TC* ac, T0* a1);
extern T1 T72f740ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T72f807(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T72f803(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T72f803ot1(TC* ac, T0* a1);
extern T1 T72f803ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T281f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T286f11(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T337f7(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T334f10(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.force_result_boxing */
extern T1 T337f9(TC* ac, T0* C);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T72f801(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T72f801ot1(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].force_last_new */
extern void T285f34(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].has */
extern T1 T285f25(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T337f8(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T334f11(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T1588f20(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T327f52(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_target_type */
extern void T327f51(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_target_type */
extern void T241f50(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T72f189(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T72f189ot1(TC* ac, T0* a1);
extern T1 T72f189ot2(TC* ac, T0* a1);
extern T1 T72f189ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.procedure_calls */
extern T0* T496f21(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.procedure_calls */
extern T0* T495f21(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.procedure_calls */
extern T0* T323f24(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.procedure_calls */
extern T0* T338f24(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.procedure_calls */
extern T0* T228f23(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T72f660(TC* ac, T0* C);
extern T1 T72f660ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T72f659(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.query_calls */
extern T0* T496f20(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.query_calls */
extern T0* T495f20(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.query_calls */
extern T0* T323f22(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.query_calls */
extern T0* T338f22(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.query_calls */
extern T0* T228f21(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].wipe_out */
extern void T319f39(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_wipe_out */
extern void T319f54(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_wipe_out */
extern void T319f53(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_wipe_out */
extern void T319f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_wipe_out */
extern void T319f51(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_FEATURE].keep_head */
extern void T638f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].set_count */
extern void T638f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].move_all_cursors_after */
extern void T319f50(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T745f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T745f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].forth */
extern void T319f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_forth */
extern void T319f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].add_traversing_cursor */
extern void T319f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T745f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove_traversing_cursor */
extern void T319f61(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_name_in_comment */
extern void T72f658(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_routine_name */
extern void T72f657(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T72f657ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_for_iteration */
extern T0* T319f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_item */
extern T0* T319f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].after */
extern T1 T319f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_after */
extern T1 T319f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].after */
extern T1 T745f4(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].start */
extern void T319f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_start */
extern void T319f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_off */
extern T1 T319f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].off */
extern T1 T745f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T319f27(TC* ac, T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T72f656(TC* ac, T0* C, T0* a1);
extern T1 T72f656ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_call_contexts */
extern void T72f737(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].wipe_out */
extern void T317f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].move_all_cursors_after */
extern void T317f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].item */
extern T0* T317f11(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_inlined_operands */
extern void T72f736(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].wipe_out */
extern void T316f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].move_all_cursors_after */
extern void T316f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].item */
extern T0* T316f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].wipe_out */
extern void T274f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].move_all_cursors_after */
extern void T274f16(TC* ac, T0* C);
/* ET_C_GENERATOR.print_equality_function */
extern void T72f733(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_equality_function_body */
extern void T72f799(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].item */
extern T0* T274f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].wipe_out */
extern void T289f11(TC* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST].keep_head */
extern void T708f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].set_count */
extern void T708f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].move_all_cursors_after */
extern void T289f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_next_cursor */
extern void T710f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_after */
extern void T710f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function */
extern void T72f732(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].item */
extern T0* T289f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T291f11(TC* ac, T0* C);
/* SPECIAL [ET_AGENT].keep_head */
extern void T713f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].set_count */
extern void T713f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T291f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T715f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_after */
extern void T715f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T72f731(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T72f731ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T72f790(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T72f786(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.agent_closed_operand */
extern T0* T72f296(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T188f130(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.agent_open_operand */
extern T0* T72f295(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T188f129(TC* ac, T0* C, T1 a1);
/* ET_CALL_AGENT.implicit_result */
extern T0* T1108f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T291f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T327f27(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T241f38(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T318f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T318f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T744f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T744f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T318f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T318f10(TC* ac, T0* C);
/* ET_C_GENERATOR.register_called_feature */
extern void T72f655(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove */
extern void T319f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove_position */
extern void T319f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_put */
extern void T319f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_keep_head */
extern void T319f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_keep_head */
extern void T319f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].move_cursors_forth */
extern void T319f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].internal_set_key_equality_tester */
extern void T319f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T327f57(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T241f53(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_once_per_object_data_dispose_functions */
extern void T72f654(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_dispose_function */
extern void T72f730(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_data_allocation_functions */
extern void T72f653(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_allocation_function */
extern void T72f729(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T72f652(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T72f728(TC* ac, T0* C, T0* a1);
extern T1 T72f728ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T72f785(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T72f785ot1(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].force_last_new */
extern void T315f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T315f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T315f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T737f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T734f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T734f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T315f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T315f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T315f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T315f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T315f31(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T315f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T315f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T737f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T734f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T315f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T315f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T315f32(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_new_immutable_string_32_function */
extern void T72f651(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_immutable_string_8_function */
extern void T72f650(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_32_function */
extern void T72f649(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_8_function */
extern void T72f648(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T268f5(TC* ac, T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T72f647(TC* ac, T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T72f711(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T72f779(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T72f779ot1(TC* ac, T0* a1);
extern T1 T72f779ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T72f820(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T72f646(TC* ac, T0* C);
/* ET_C_GENERATOR.print_types */
extern void T72f645(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_data_struct */
extern void T72f710(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_per_object_data_struct_name */
extern void T72f767(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T72f709(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T72f766(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T72f708(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T72f708ot1(TC* ac, T0* a1);
extern T1 T72f708ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_struct_name */
extern void T72f758(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].has_cycle */
extern T1 T329f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T329f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].put_last */
extern void T81f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].reset */
extern void T329f20(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_type_definition */
extern void T72f707(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T72f706(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T72f705(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_pointer_function */
extern void T72f704(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_scoop_processor_access */
extern void T72f763(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_flags_access */
extern void T72f762(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_function */
extern void T72f703(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].force_relation */
extern void T329f14(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put_indexed_relation */
extern void T329f19(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].count */
extern T6 T329f10(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].index_of */
extern T6 T329f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T6 T752f20(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T6 T752f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T752f30(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T752f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T752f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T752f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T752f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T752f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T752f29(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T72f702(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T72f701(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T72f700(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T72f699(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T72f698(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T72f697(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T72f696(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T72f695(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T72f694(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T72f693(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T72f692(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T72f691(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T72f690(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T72f689(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T72f688(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T329f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put */
extern void T329f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].put_new */
extern void T752f36(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T752f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T752f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T752f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T752f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T752f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T752f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T752f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T752f26(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T752f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T752f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T752f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T752f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].capacity */
extern T6 T329f7(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T329f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T752f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make_default */
extern T0* T329c12(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern void T329f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T329c16(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T752c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T752f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T752f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T752f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T752f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1478c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T752f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T752f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T752f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T752f50(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T72f687(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T72f686(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T72f685(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T72f684(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T72f683(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T72f682(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T72f644(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T72f643(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T72f680(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force_last */
extern void T320f48(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T320f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T320f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T320f61(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T320f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T320f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T320f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T320f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T320f40(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T320f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T320f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T320f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T320f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T320f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T320f59(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T320f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T320f47(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T320f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T320f33(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T77f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern T0* T78f30(TC* ac, T0* C);
/* ET_C_GENERATOR.tokens */
extern T0* T72f150(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_32_type */
extern T0* T191f37(TC* ac, T0* C);
/* ET_SYSTEM.character_32_type */
extern T0* T45f4(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_32_type */
extern T0* T63f40(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_type */
extern T0* T191f34(TC* ac, T0* C);
/* ET_SYSTEM.character_type */
extern T0* T45f3(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_type */
extern T0* T63f37(TC* ac, T0* C);
/* ET_CLASS.universe */
extern T0* T79f184(TC* ac, T0* C);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T72f171(TC* ac, T0* C);
/* ET_C_GENERATOR.trace_mode */
extern T1 T72f152(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T72f642(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T327f54(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T241f58(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_static */
extern T1 T496f19(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_static */
extern T1 T495f19(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_static */
extern T1 T323f23(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_static */
extern T1 T338f23(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_static */
extern T1 T228f22(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T496f79(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T495f79(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T323f81(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T338f83(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_id */
extern void T228f80(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.sort_types */
extern void T72f679(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put_relation */
extern void T329f17(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_iterator */
extern T0* T287f34(TC* ac, T0* C);
/* ET_C_GENERATOR.open_cpp_file */
extern void T72f641(TC* ac, T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T72f640(TC* ac, T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T72f631(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T72f630(TC* ac, T0* C, T1 a1);
/* GEC.no_split */
extern T1 T25f49(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T53f12(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T161f7(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].is_empty */
extern T1 T161f6(TC* ac, T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T72f629(TC* ac, T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T25f32(TC* ac, T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T72f628(TC* ac, T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T25f48(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T52f18(TC* ac, T0* C);
/* ET_C_GENERATOR.make */
extern T0* T72c627(TC* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.make_external_regexps */
extern void T72f635(TC* ac, T0* C);
/* ET_C_GENERATOR.make_volatile_data */
extern void T72f634(TC* ac, T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T72f633(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T320f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T320c42(TC* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T320f50(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T320f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_internal_cursor */
extern void T320f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T320f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T748c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T320f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T320f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T320f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T320f71(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T158c2(TC* ac);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T75f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make */
extern void T75f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T75c40(TC* ac, T6 a1);
/* DS_HASH_SET [STRING_8].set_internal_cursor */
extern void T75f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T75f25(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T399c9(TC* ac, T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T75f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T75f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T75f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T75f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make */
extern T0* T319c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T319f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T319f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T745c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_slots */
extern void T319f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_clashes */
extern void T319f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_key_storage */
extern void T319f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_item_storage */
extern void T319f42(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T318c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T318f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T318f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T744c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T317c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].set_internal_cursor */
extern void T317f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].new_cursor */
extern T0* T317f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T743c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T742f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].make_empty */
extern T0* T741c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].default_create */
extern T0* T742c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T316c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].set_internal_cursor */
extern void T316f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].new_cursor */
extern T0* T316f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T740c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T739f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].make_empty */
extern T0* T738c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].default_create */
extern T0* T739c3(TC* ac);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T315c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T315f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T315f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T315f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T315f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T736c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T315f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T315f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T315f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T315f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T737f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T734c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T737c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_map */
extern T0* T314c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T314f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_sparse_container */
extern void T314f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_internal_cursor */
extern void T314f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_cursor */
extern T0* T314f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make */
extern T0* T730c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_slots */
extern void T314f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_clashes */
extern void T314f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_key_storage */
extern void T314f56(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T733f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make_empty */
extern T0* T731c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T733c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_item_storage */
extern void T314f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T313c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T313f44(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T313f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].set_internal_cursor */
extern void T313f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T313f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T726c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T313f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T313f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T313f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T313f66(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T729f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].make_empty */
extern T0* T727c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T729c3(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_map */
extern T0* T311c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_with_equality_testers */
extern void T311f41(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_sparse_container */
extern void T311f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].set_internal_cursor */
extern void T311f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_cursor */
extern T0* T311f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].make */
extern T0* T723c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_slots */
extern void T311f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_clashes */
extern void T311f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_key_storage */
extern void T311f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_item_storage */
extern void T311f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T310c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T310f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T310f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T719c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T310f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T310f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T310f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T310f39(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T721f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T720c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T721c3(TC* ac);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.make */
extern T0* T309c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.make */
extern T0* T306c7(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T291c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].set_internal_cursor */
extern void T291f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T291f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T715c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T714f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].make_empty */
extern T0* T713c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T714c3(TC* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].make */
extern T0* T289c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].set_internal_cursor */
extern void T289f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_cursor */
extern T0* T289f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].make */
extern T0* T710c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].make */
extern T0* T709f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].make_empty */
extern T0* T708c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].default_create */
extern T0* T709c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T288c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T288f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T288f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T288f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T288f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T706c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T288f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T288f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T288f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T288f67(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T699f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T698c5(TC* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T286c9(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_map */
extern T0* T285c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_with_equality_testers */
extern void T285f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_sparse_container */
extern void T285f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_internal_cursor */
extern void T285f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_cursor */
extern T0* T285f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make */
extern T0* T705c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_slots */
extern void T285f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_clashes */
extern void T285f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_key_storage */
extern void T285f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_item_storage */
extern void T285f55(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T283c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T282c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].set_internal_cursor */
extern void T282f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_cursor */
extern T0* T282f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T700c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].make */
extern T0* T279c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].set_internal_cursor */
extern void T279f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].new_cursor */
extern T0* T279f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].make */
extern T0* T697c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T695f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RESULT].make_empty */
extern T0* T696c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T695c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T278c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].set_internal_cursor */
extern void T278f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].new_cursor */
extern T0* T278f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T694c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T692f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T693c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T692c3(TC* ac);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T277c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T277f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T277f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T691c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T690f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T689c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T690c3(TC* ac);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T276c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T276f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T276f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T688c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T685f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T687c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T685c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T275c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_internal_cursor */
extern void T275f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].new_cursor */
extern T0* T275f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T684c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T682f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make_empty */
extern T0* T683c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].default_create */
extern T0* T682c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T274c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].set_internal_cursor */
extern void T274f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].new_cursor */
extern T0* T274f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T681c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T680f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].make_empty */
extern T0* T679c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].default_create */
extern T0* T680c3(TC* ac);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].make */
extern T0* T273c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T273f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T273f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].make */
extern T0* T678c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].make */
extern T0* T675f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T677c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].default_create */
extern T0* T675c3(TC* ac);
/* DS_ARRAYED_LIST [BOOLEAN].make */
extern T0* T272c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].set_internal_cursor */
extern void T272f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].new_cursor */
extern T0* T272f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].make */
extern T0* T674c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T270c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T270f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T270f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T671c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T670f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].make_empty */
extern T0* T669c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].default_create */
extern T0* T670c3(TC* ac);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T269c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].set_internal_cursor */
extern void T269f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T269f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T668c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T632f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].make_empty */
extern T0* T633c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T632c3(TC* ac);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T268c4(TC* ac, T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern T0* T72f574(TC* ac, T0* C);
/* ET_CLASS.lower_name */
extern T0* T79f170(TC* ac, T0* C);
/* ET_CLASS_TYPE.base_class */
extern T0* T77f11(TC* ac, T0* C);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T77f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern T0* T78f1(TC* ac, T0* C);
/* ET_CLASS.make_unknown */
extern T0* T79c264(TC* ac);
/* GEC.tokens */
extern T0* T25f47(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.record_end_time */
extern void T69f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.print_time */
extern void T69f69(TC* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T513f9(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T513f18(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T513f23(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T513f14(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T513f22(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T513f17(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T513f21(TC* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T513f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T513c16(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T513f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T513f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T73f43(TC* ac, T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T73f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T73f38(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T73f42(TC* ac, T0* C);
/* DT_DATE_TIME.is_less */
extern T1 T73f41(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T73f40(TC* ac, T0* C);
/* DT_DATE_TIME.day */
extern T6 T73f10(TC* ac, T0* C);
/* DT_DATE_TIME.month */
extern T6 T73f9(TC* ac, T0* C);
/* DT_DATE_TIME.year */
extern T6 T73f8(TC* ac, T0* C);
/* DT_DATE_TIME.add_duration */
extern void T73f62(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.add_milliseconds */
extern void T73f66(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_normalized_time_storage */
extern void T73f69(TC* ac, T0* C, T7 a1);
/* DT_DATE_TIME.add_days */
extern void T73f70(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T73f68(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_year_month_day */
extern void T73f57(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern T6 T73f46(TC* ac, T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T73f11(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern T6 T73f24(TC* ac, T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T73f23(TC* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern T6 T73f22(TC* ac, T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T831f4(TC* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T73f21(TC* ac, T0* C);
/* DT_DATE_TIME.set_day */
extern void T73f67(TC* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f21(TC* ac, volatile T7* C);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T513f15(TC* ac, T0* C);
/* DT_DATE_TIME.add_years_months_days */
extern void T73f65(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_time */
extern void T73f61(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T73f60(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern T0* T513f8(TC* ac, T0* C);
/* DT_DATE_TIME.make */
extern T0* T73c59(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T73f64(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T73f63(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.minus */
extern T0* T73f12(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T73f16(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T73f7(TC* ac, T0* C);
/* DT_DATE_TIME.second */
extern T6 T73f6(TC* ac, T0* C);
/* DT_DATE_TIME.minute */
extern T6 T73f5(TC* ac, T0* C);
/* DT_DATE_TIME.hour */
extern T6 T73f4(TC* ac, T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T73f3(TC* ac, T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T498f10(TC* ac, T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T498f12(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T73f58(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T498f13(TC* ac, T0* C);
/* C_DATE.second_now */
extern T6 T994f6(TC* ac, T0* C);
/* C_DATE.get_tm_sec */
extern T6 T994f13(TC* ac, T0* C, T14 a1);
/* C_DATE.minute_now */
extern T6 T994f5(TC* ac, T0* C);
/* C_DATE.get_tm_min */
extern T6 T994f12(TC* ac, T0* C, T14 a1);
/* C_DATE.hour_now */
extern T6 T994f4(TC* ac, T0* C);
/* C_DATE.get_tm_hour */
extern T6 T994f11(TC* ac, T0* C, T14 a1);
/* C_DATE.day_now */
extern T6 T994f15(TC* ac, T0* C);
/* C_DATE.get_tm_mday */
extern T6 T994f10(TC* ac, T0* C, T14 a1);
/* C_DATE.month_now */
extern T6 T994f8(TC* ac, T0* C);
/* C_DATE.get_tm_mon */
extern T6 T994f9(TC* ac, T0* C, T14 a1);
/* C_DATE.year_now */
extern T6 T994f7(TC* ac, T0* C);
/* C_DATE.get_tm_year */
extern T6 T994f14(TC* ac, T0* C, T14 a1);
/* C_DATE.update */
extern void T994f23(TC* ac, T0* C);
/* POINTER.memory_free */
extern void T14f14(TC* ac, volatile T14* C);
/* POINTER.default_pointer */
extern T14 T14f10(TC* ac, volatile T14* C);
/* POINTER.c_free */
extern void T14f16(TC* ac, volatile T14* C, T14 a1);
/* C_DATE.get_millitm */
extern T6 T994f21(TC* ac, T0* C, T14 a1);
/* C_DATE.tm_structure_size */
extern T6 T994f20(TC* ac, T0* C);
/* C_DATE.localtime */
extern T14 T994f19(TC* ac, T0* C, T14 a1);
/* C_DATE.gmtime */
extern T14 T994f18(TC* ac, T0* C, T14 a1);
/* C_DATE.get_time */
extern void T994f25(TC* ac, T0* C, T14 a1, T14 a2);
/* C_DATE.ftime */
extern void T994f24(TC* ac, T0* C, T14 a1);
/* C_DATE.time_t_structure_size */
extern T6 T994f17(TC* ac, T0* C);
/* C_DATE.timeb_structure_size */
extern T6 T994f16(TC* ac, T0* C);
/* C_DATE.default_create */
extern T0* T994c22(TC* ac);
/* DT_DATE_TIME.make_from_storage */
extern T0* T73c56(TC* ac, T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern T0* T497f1(TC* ac, T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T498c11(TC* ac);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T497c2(TC* ac);
/* ET_SYSTEM_PROCESSOR.stop_requested */
extern T1 T69f39(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.record_end_time */
extern void T398f59(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.print_time */
extern void T398f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.stop_requested */
extern T1 T398f40(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T68f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T68f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T68f95(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T235f19(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T76f107(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T76f111(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T76f116(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T76f118(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f118ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T76f122(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T58f210(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T41f210(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T76f123(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T337f11(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T334f12(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.position */
extern T0* T945f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T76f67(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern T0* T76f66(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T76f110(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T267f14(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].wipe_out */
extern void T404f34(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T404f41(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T404f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T404f39(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TYPE].keep_head */
extern void T763f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].set_count */
extern void T763f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T404f38(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T404f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T762f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_after */
extern void T762f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T327f55(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T241f59(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T76f114(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T76f117(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T76f120(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T76f119(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T76f113(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T241f40(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T235f15(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T76f103(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T235f14(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T76f102(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T235f18(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T76f106(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T235f17(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T76f105(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T79f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T1174f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T1171f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T58f201(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T58f211(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T841c32(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T58f16(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T41f201(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T41f211(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T41f16(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T58f200(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T841c31(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T58f15(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T41f200(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T41f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T58f199(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T841c30(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T58f14(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T41f199(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T41f14(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T58f198(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T841c29(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T58f13(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T41f198(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T41f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T58f197(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T841c28(TC* ac);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T58f12(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T41f197(TC* ac, T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T41f12(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T68f93(TC* ac, T0* C, T0* a1);
extern T1 T68f93ot1(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern T0* T78f20(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_raise_feature_name */
extern T0* T78f19(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern T0* T78f17(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_rout_disp_final_feature_name */
extern T0* T78f16(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.rout_disp_feature_name */
extern T0* T78f15(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern T0* T78f14(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern T0* T78f11(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern T0* T68f78(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern T0* T78f9(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern T0* T78f8(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern T0* T78f7(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T58f208(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T843c914(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T58f22(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T41f208(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T41f22(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T58f206(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T843c912(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T58f20(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T41f206(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T41f20(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T58f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T843c910(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T58f18(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T41f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T41f18(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T58f203(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T841c33(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T58f17(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T41f203(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T41f17(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_6 */
extern void T69f58(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_6_metrics */
extern void T69f70(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.class_count_recursive */
extern T6 T63f148(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T63f148ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T63f148ac2(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T233f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_AGENT_ROUTINES [ET_CLASS].call */
extern void T892f2(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_COUNTER.increment */
extern void T891f3(TC* ac, T0* C);
/* ET_ECF_SYSTEM.classes_do_recursive */
extern void T63f224(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T63f224ac1(TC* ac, T0* a1);
/* ET_SYSTEM.classes_do_all */
extern void T45f199(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].forth */
extern void T642f12(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T230f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T230f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T642f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_position */
extern void T642f15(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T230f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_after */
extern void T642f14(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_mapped */
extern T1 T485f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].item */
extern T0* T642f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T230f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].after */
extern T1 T642f4(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].start */
extern void T642f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_start */
extern void T230f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T230f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].off */
extern T1 T642f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T230f35(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T216f158(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T216f158p1(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T628f158(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T628f158p1(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_do_all */
extern void T191f188(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_all */
extern void T910f159(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_all */
extern void T63f277(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive */
extern void T63f227(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].do_all */
extern void T913f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_item */
extern T0* T913f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_item */
extern T6 T913f17(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.add_universe_recursive */
extern void T63f235(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T63f235ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T63f235ac2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T903f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T216f156(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T216f156ac1(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLIES.do_all */
extern void T627f7(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T628f156(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T628f156ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_LIBRARY]].set_rout_disp_final */
extern void T912f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.add_universe_recursive */
extern void T191f185(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T191f185ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T191f185ac2(TC* ac, T0* a1);
/* ET_LIBRARY.add_universe_recursive */
extern void T910f156(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T910f156ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T910f156ac2(TC* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T215f9(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T192f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].force_last */
extern void T913f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_put */
extern void T913f55(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].clashes_put */
extern void T913f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].slots_item */
extern T6 T913f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].hash_position */
extern T6 T913f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].resize */
extern void T913f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_resize */
extern void T913f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].special_integer_ */
extern T0* T913f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_resize */
extern void T913f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_resize */
extern void T913f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_item */
extern T0* T913f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_resize */
extern void T913f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_modulus */
extern T6 T913f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_capacity */
extern T6 T913f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_put */
extern void T913f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].search_position */
extern void T913f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].key_equality_tester */
extern T0* T913f25(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].unset_found_item */
extern void T913f47(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].has */
extern T1 T913f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make */
extern T0* T913c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].set_internal_cursor */
extern void T913f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].new_cursor */
extern T0* T913f35(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].make */
extern T0* T1668c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make_slots */
extern void T913f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_clashes */
extern void T913f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_key_storage */
extern void T913f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_item_storage */
extern void T913f43(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T63f150(TC* ac, T0* C);
/* ET_ECF_SYSTEM.class_actions */
extern T0* T63f152(TC* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_CLASS].default_create */
extern T0* T892c1(TC* ac);
/* UT_COUNTER.make */
extern T0* T891c2(TC* ac, T6 a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T63f226(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T63f230(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T63f230ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_CLUSTER]].set_rout_disp_final */
extern void T916f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T63f238(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T860f90(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T63f237(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T63f237ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]].set_rout_disp_final */
extern void T906f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.clusters_do_explicit */
extern void T191f198(TC* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_explicit */
extern void T479f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_recursive */
extern void T845f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].item */
extern T0* T1639f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T987f7(TC* ac, T0* C, T6 a1);
/* ET_LIBRARY.clusters_do_explicit */
extern void T910f169(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit */
extern void T63f284(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T63f231(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].do_all */
extern void T918f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T918f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T918f22(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T63f239(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T63f239ac1(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T191f186(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T191f186ac1(TC* ac, T0* a1);
/* ET_LIBRARY.add_internal_universe_recursive */
extern void T910f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_internal_universe_recursive */
extern T0* T910f157ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].force_last */
extern void T918f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_put */
extern void T918f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_put */
extern void T918f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T918f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T918f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].resize */
extern void T918f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T918f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T918f27(TC* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T918f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T918f45(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1674f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1675f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T918f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_resize */
extern void T918f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T918f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T918f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T918f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].force */
extern void T1674f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].fill_with */
extern void T1675f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].extend */
extern void T1675f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].search_position */
extern void T918f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T918f19(TC* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T918f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].has */
extern T1 T918f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make */
extern T0* T918c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T918f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T918f21(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE].make */
extern T0* T1672c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_slots */
extern void T918f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_clashes */
extern void T918f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T918f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T918f34(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].make */
extern T0* T1674f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1675c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1674c3(TC* ac);
/* ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T63f229(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T63f229ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T63f236(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T860f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern void T398f110(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern T0* T398f110ac1(TC* ac, T0* a1);
/* ET_MASTER_CLASS.process */
extern void T485f66(TC* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_master_class */
extern void T509f3(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T500f8(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T500f9(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T500f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T58f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T58f377(TC* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T2000c21(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS.upper_name */
extern T0* T485f49(TC* ac, T0* C);
/* ET_LIBRARY.full_lower_name */
extern T0* T910f97(TC* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_lower_name */
extern T0* T910f101(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.string_ */
extern T0* T910f105(TC* ac, T0* C);
/* ET_LIBRARY.lower_name */
extern T0* T910f104(TC* ac, T0* C);
/* ET_SYSTEM.full_lower_name */
extern T0* T45f127(TC* ac, T0* C, T2 a1);
/* ET_ECF_LIBRARY.full_lower_name */
extern T0* T191f107(TC* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_lower_name */
extern T0* T63f158(TC* ac, T0* C, T2 a1);
/* ET_LIBRARY.kind_name */
extern T0* T910f96(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.kind_name */
extern T0* T628f96(TC* ac, T0* C);
/* ET_SYSTEM.kind_name */
extern T0* T45f126(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T216f95(TC* ac, T0* C);
/* ET_ECF_LIBRARY.kind_name */
extern T0* T191f106(TC* ac, T0* C);
/* ET_ECF_SYSTEM.kind_name */
extern T0* T63f157(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T58f45(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0d_error */
extern void T41f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_universe_error */
extern void T41f377(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T41f45(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T500f6(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T500f5(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T500f13(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T500f11(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T500f14(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T58f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T2000c23(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_CLUSTER.kind_name */
extern T0* T860f49(TC* ac, T0* C);
/* ET_NONE_GROUP.kind_name */
extern T0* T492f17(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.kind_name */
extern T0* T435f18(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T41f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T58f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T2000c22(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T41f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T485f25(TC* ac, T0* C);
/* ET_CLASS.actual_intrinsic_class */
extern T0* T79f169(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T58f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T2000c20(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T41f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T500f10(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T63f243(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T63f243ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T63f243ac2(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_until */
extern void T45f203(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].go_after */
extern void T642f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_go_after */
extern void T230f64(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T216f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T628f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_until */
extern void T191f193(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_until */
extern void T910f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_until */
extern void T63f280(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_all */
extern void T45f201(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_all */
extern void T230f50(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T216f160(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T628f160(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_classes_do_all */
extern void T191f190(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_classes_do_all */
extern void T910f161(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_all */
extern void T63f240(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T63f228(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_UNIVERSE].forth */
extern void T913f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_forth */
extern void T913f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].add_traversing_cursor */
extern void T913f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_next_cursor */
extern void T1668f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_position */
extern void T1668f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].remove_traversing_cursor */
extern void T913f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_after */
extern void T1668f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].item_for_iteration */
extern T0* T913f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_item */
extern T0* T913f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].go_after */
extern void T913f39(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_go_after */
extern void T913f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].cursor_off */
extern T1 T913f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].off */
extern T1 T1668f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].after */
extern T1 T913f27(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_after */
extern T1 T913f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].after */
extern T1 T1668f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].start */
extern void T913f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_start */
extern void T913f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].is_empty */
extern T1 T913f31(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern void T69f106(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern T0* T69f106ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T63f226p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f226p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f226p1ac2(TC* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f226p1ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f226p1ac4(TC* ac, T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f226p1ac5(TC* ac, T0* a1);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f226p1ac6(TC* ac, T0* a1);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f226p1ac7(TC* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f226p1ac8(TC* ac);
/* ET_ECF_LIBRARY.import_classes */
extern void T191f184(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T191f184ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T191f184ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T191f184ac3(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T923f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T218f39(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_imported_class */
extern void T485f85(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_imported_class */
extern T1 T485f47(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].has */
extern T1 T993f13(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_class */
extern T0* T910f92(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T219f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].key */
extern T0* T642f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_key */
extern T0* T230f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_hidden */
extern T1 T860f7(TC* ac, T0* C);
/* ET_NONE_GROUP.is_hidden */
extern T1 T492f13(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_hidden */
extern T1 T435f14(TC* ac, T0* C);
/* PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T195f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T212f36(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T485f63(TC* ac, T0* C);
/* ET_MASTER_CLASS.remove_imported_class */
extern void T485f77(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_declared_locally */
extern T1 T485f24(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T215f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T626f11(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T192f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].do_all */
extern void T610f11(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.import_classes */
extern void T910f155(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.import_classes */
extern T0* T910f155ac1(TC* ac);
/* Creation of agent #2 in feature ET_LIBRARY.import_classes */
extern T0* T910f155ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.import_classes */
extern T0* T910f155ac3(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T216f155(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T216f168(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T216f91(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T216f99(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T216f167(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern T0* T78f1560(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_classes */
extern void T628f155(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T628f167(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_class */
extern T0* T628f91(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.tokens */
extern T0* T628f95(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T628f166(TC* ac, T0* C);
/* ET_ECF_LIBRARY.preparse */
extern void T191f183(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.preparse */
extern void T191f183p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.preparse */
extern T0* T191f183p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.preparse */
extern T0* T191f183p1ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.preparse */
extern T0* T191f183p1ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.preparse */
extern T0* T191f183p1ac4(TC* ac, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T485f62(TC* ac, T0* C);
/* ET_MASTER_CLASS.remove_local_ignored_class */
extern void T485f76(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_first */
extern void T507f31(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].delete */
extern void T507f30(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_non_override_class */
extern void T485f75(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_override_class */
extern void T485f74(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove */
extern void T507f27(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_left */
extern void T507f34(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_left */
extern void T507f33(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T507f32(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T507f35(TC* ac, T0* C);
/* ET_MASTER_CLASS.reset_local_modified_classes */
extern void T485f61(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T485f61ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T485f61ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T485f61ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T485f61ac4(TC* ac, T0* a1, T0* a2);
/* Creation of agent #5 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T485f61ac5(TC* ac);
/* ET_MASTER_CLASS.reset_local_modified_class */
extern void T485f69(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T130f27(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T129f30(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.file_system */
extern T0* T485f23(TC* ac, T0* C);
/* ET_MASTER_CLASS.unix_file_system */
extern T0* T485f29(TC* ac, T0* C);
/* ET_MASTER_CLASS.windows_file_system */
extern T0* T485f28(TC* ac, T0* C);
/* ET_MASTER_CLASS.operating_system */
extern T0* T485f27(TC* ac, T0* C);
/* ET_CLASS.reset_after_parsed_and_errors */
extern void T79f287(TC* ac, T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T79f289(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T1163f10(TC* ac, T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T1571f10(TC* ac, T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T992f12(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T1585f96(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T259f133(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T2015f27(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T1563f96(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T1563f92(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T1148f14(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_base_types */
extern void T1563f101(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.reset */
extern void T1354f18(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.reset */
extern void T1564f11(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.reset */
extern void T1151f14(TC* ac, T0* C);
/* ET_RENAME.reset */
extern void T1409f7(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T1578f7(TC* ac, T0* C);
/* ET_ALIAS_NAME_LIST.reset */
extern void T968f13(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T1579f59(TC* ac, T0* C);
/* ET_ALIAS_NAME.reset */
extern void T1097f112(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T948f93(TC* ac, T0* C);
/* ET_CLASS.reset_type */
extern void T79f332(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T245f34(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T247f90(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset */
extern void T77f141(TC* ac, T0* C);
extern T1 T77f141ot1(TC* ac, T0* a1);
extern T1 T77f141ot2(TC* ac, T0* a1);
extern T1 T77f141ot3(TC* ac, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T494f22(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T2014f24(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T1587f91(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T1586f96(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T493f93(TC* ac, T0* C);
/* ET_IDENTIFIER.reset */
extern void T188f138(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T1570f9(TC* ac, T0* C);
/* ET_CREATOR_LIST.reset */
extern void T1174f11(TC* ac, T0* C);
/* ET_CREATOR.reset */
extern void T1171f19(TC* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T1258f36(TC* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T1258f36p1(TC* ac, T0* C);
/* ET_CALL_AGENT.reset */
extern void T1108f39(TC* ac, T0* C);
extern T1 T1108f39ot1(TC* ac, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T1092f17(TC* ac, T0* C);
extern T1 T1092f17ot1(TC* ac, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T2102f29(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.reset */
extern void T2101f31(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T2048f24(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.reset */
extern void T361f29(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T2100f24(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T1620f17(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T1072f51(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T1619f13(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1868f10(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T1105f32(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset_arguments */
extern void T1105f34(TC* ac, T0* C);
extern T1 T1105f34ot1(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.reset */
extern void T2021f18(TC* ac, T0* C);
extern T1 T2021f18ot1(TC* ac, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T294f24(TC* ac, T0* C);
extern T1 T294f24ot1(TC* ac, T0* a1);
/* ET_BRACKET_SYMBOL.reset */
extern void T656f134(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T1075f54(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T1075f54p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T1075f55(TC* ac, T0* C);
/* ET_VARIANT.reset */
extern void T1362f8(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T1274f18(TC* ac, T0* C);
/* ET_VOID.reset */
extern void T1064f39(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T791f35(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T686f35(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T686f35p1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T686f38(TC* ac, T0* C);
extern T1 T686f38ot1(TC* ac, T0* a1);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T676f28(TC* ac, T0* C);
extern T1 T676f28ot1(TC* ac, T0* a1);
extern T1 T676f28ot2(TC* ac, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T395f70(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T347f41(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T348f6(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.reset_arguments */
extern void T348f7(TC* ac, T0* C);
/* ET_OBJECT_TEST.reset */
extern void T332f32(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T305f39(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T298f37(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T298f37p1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T298f37p0(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T298f38(TC* ac, T0* C);
extern T1 T298f38ot1(TC* ac, T0* a1);
/* ET_CURRENT.reset */
extern void T293f42(TC* ac, T0* C);
/* ET_RESULT.reset */
extern void T266f42(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.reset */
extern void T1623f9(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T1618f56(TC* ac, T0* C);
extern T1 T1618f56ot1(TC* ac, T0* a1);
/* ET_POSTCONDITIONS.reset */
extern void T1317f24(TC* ac, T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T1317f24p1(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T431f23(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T431f23p1(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T260f14(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1830f14(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T261f13(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1617f64(TC* ac, T0* C);
/* ET_COMPOUND.reset */
extern void T265f21(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1819f15(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1819f15p1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T1819f16(TC* ac, T0* C);
extern T1 T1819f16ot1(TC* ac, T0* a1);
/* ET_INLINE_SEPARATE_INSTRUCTION.reset */
extern void T302f14(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.reset */
extern void T264f18(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.reset */
extern void T299f14(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset */
extern void T1337f32(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset */
extern void T1337f32p1(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset_unfolded_form */
extern void T1337f33(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T1078f37(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T1078f37p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T1078f38(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T1113f22(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T1113f22p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1597f19(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1597f19p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset_arguments */
extern void T1597f20(TC* ac, T0* C);
extern T1 T1597f20ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T1595f19(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset_arguments */
extern void T1595f20(TC* ac, T0* C);
extern T1 T1595f20ot1(TC* ac, T0* a1);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T1177f14(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T1253f17(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T1374f13(TC* ac, T0* C);
/* ET_WHEN_PART.reset */
extern void T1371f11(TC* ac, T0* C);
/* ET_CHOICE_LIST.reset */
extern void T1125f18(TC* ac, T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T1594f13(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T1237f19(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T1189f13(TC* ac, T0* C);
/* ET_ELSEIF_PART.reset */
extern void T1186f12(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T1593f26(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T1592f24(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T1590f22(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T1589f14(TC* ac, T0* C);
/* ET_ASSIGNMENT.reset */
extern void T303f16(TC* ac, T0* C);
extern T1 T303f16ot1(TC* ac, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T1588f23(TC* ac, T0* C);
extern T1 T1588f23ot1(TC* ac, T0* a1);
/* ET_RETRY_INSTRUCTION.reset */
extern void T1058f24(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T295f21(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T295f21p1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T295f21p0(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T295f22(TC* ac, T0* C);
extern T1 T295f22ot1(TC* ac, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T520f14(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1831f14(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T1266f13(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1617f64p1(TC* ac, T0* C);
extern T1 T1617f64p1ot1(TC* ac, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1616f59(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1616f59p1(TC* ac, T0* C);
extern T1 T1616f59p1ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T1615f57(TC* ac, T0* C);
extern T1 T1615f57ot1(TC* ac, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1614f65(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1614f65p1(TC* ac, T0* C);
extern T1 T1614f65p1ot1(TC* ac, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1613f60(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1613f60p1(TC* ac, T0* C);
extern T1 T1613f60p1ot1(TC* ac, T0* a1);
/* ET_ITERATION_CURSOR.reset */
extern void T1612f29(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T1611f33(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T1610f37(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T1609f29(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T1608f33(TC* ac, T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T1040f63(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T1048f64(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T1061f158(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T1607f29(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T1606f30(TC* ac, T0* C);
extern T1 T1606f30ot1(TC* ac, T0* a1);
extern T1 T1606f30ot2(TC* ac, T0* a1);
/* ET_INFIX_EXPRESSION.reset */
extern void T1603f33(TC* ac, T0* C);
extern T1 T1603f33ot1(TC* ac, T0* a1);
extern T1 T1603f33ot2(TC* ac, T0* a1);
extern T1 T1603f33ot3(TC* ac, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T1605f45(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T1604f45(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T1602f29(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T1601f29(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T1600f29(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T1599f29(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T1598f34(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset_arguments */
extern void T1598f38(TC* ac, T0* C);
extern T1 T1598f38ot1(TC* ac, T0* a1);
/* ET_CLASS_ASSERTION.reset */
extern void T1582f9(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T1558f56(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T1557f55(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T1556f48(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T1555f48(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T1553f51(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T1552f51(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T1551f68(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T1550f68(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T1549f68(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T1548f68(TC* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T1547f55(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T1546f51(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T1545f54(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T1544f52(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T1343f37(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1340f38(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1340f38p1(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset_arguments */
extern void T1340f41(TC* ac, T0* C);
extern T1 T1340f41ot1(TC* ac, T0* a1);
/* ET_QUANTIFIER_EXPRESSION.reset */
extern void T1327f46(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset */
extern void T1327f46p1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset_unfolded_form */
extern void T1327f47(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T1305f30(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T1277f38(TC* ac, T0* C);
extern T1 T1277f38ot1(TC* ac, T0* a1);
/* ET_INSPECT_EXPRESSION.reset */
extern void T1250f32(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.reset */
extern void T1368f12(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.reset */
extern void T1365f11(TC* ac, T0* C);
/* ET_IF_EXPRESSION.reset */
extern void T1234f35(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.reset */
extern void T1183f12(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.reset */
extern void T1180f12(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.reset */
extern void T1310f8(TC* ac, T0* C);
/* ET_PARENT_LIST.reset */
extern void T483f14(TC* ac, T0* C);
/* ET_PARENT.reset */
extern void T482f12(TC* ac, T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T489f10(TC* ac, T0* C);
/* ET_EXPORT_LIST.reset */
extern void T488f9(TC* ac, T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T1212f13(TC* ac, T0* C);
/* ET_ALL_EXPORT.reset */
extern void T1568f9(TC* ac, T0* C);
/* ET_RENAME_LIST.reset */
extern void T487f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T636f34(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T263f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T1577f95(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T1577f96(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1577f116(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T260f15(TC* ac, T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T79f333(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T636f35(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1563f97(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T948f94(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T1585f97(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T259f134(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T2015f28(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T245f35(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T247f91(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T77f142(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T494f23(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T2014f25(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1587f92(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T1586f97(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T493f94(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T1577f97(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T524f86(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T524f87(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T524f106(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T524f88(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T1576f89(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T1576f90(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1576f112(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1576f91(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1576f91p1(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T518f87(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T518f88(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T518f109(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T518f89(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T518f89p1(TC* ac, T0* C);
/* ET_QUERY_LIST.reset */
extern void T262f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T258f97(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T258f97p1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T258f98(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T258f119(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T258f99(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1574f88(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1574f88p1(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T1574f89(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1574f109(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T1574f90(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1573f91(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1573f91p1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T1573f92(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1573f115(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1573f93(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1573f93p1(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T522f89(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T522f89p1(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T522f90(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T522f112(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T522f91(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T522f91p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T394f89(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T394f89p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T394f90(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T394f107(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T394f91(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T392f88(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T392f88p1(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T392f89(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T392f104(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T392f90(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T382f90(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T382f90p1(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T382f91(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T382f112(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T382f92(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T382f92p1(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T383f85(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T383f85p1(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T383f86(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T383f100(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_interface_checked */
extern void T383f87(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T485f73(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].do_if */
extern void T507f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T485f72(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].do_all */
extern void T507f28(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T485f71(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_all */
extern void T485f70(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.process */
extern void T860f91(TC* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T509f4(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T499f184(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T499f185(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T499f185ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T499f185ac2(TC* ac, T0* a1);
/* ET_CLASS.is_in_group */
extern T1 T79f263(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T499f189(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove */
extern void T1639f15(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].keep_head */
extern void T1919f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].set_count */
extern void T1919f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_left */
extern void T1639f18(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_cursors_left */
extern void T1639f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_position */
extern void T1921f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove_last */
extern void T1639f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_last_cursors_after */
extern void T1639f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_next_cursor */
extern void T1921f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_after */
extern void T1921f7(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T499f188(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_dependant_constraint */
extern void T860f97(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T845f14(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T1821c17(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_key_equality_tester */
extern void T2115f35(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T1821f11(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_map */
extern T0* T2115c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_with_equality_testers */
extern void T2115f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_sparse_container */
extern void T2115f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_internal_cursor */
extern void T2115f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].unset_found_item */
extern void T2115f38(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_slots */
extern void T2115f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_modulus */
extern T6 T2115f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_clashes */
extern void T2115f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_key_storage */
extern void T2115f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_item_storage */
extern void T2115f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].make */
extern T0* T2155f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].make_empty */
extern T0* T2152c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].default_create */
extern T0* T2155c2(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T1821c16(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].put_last */
extern void T2115f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_put */
extern void T2115f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_put */
extern void T2115f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_put */
extern void T2115f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_item */
extern T6 T2115f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].compress */
extern void T2115f41(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].hash_position */
extern T6 T2115f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_wipe_out */
extern void T2115f50(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_wipe_out */
extern void T2115f49(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_keep_head */
extern void T2115f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_keep_head */
extern void T2115f47(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].keep_head */
extern void T2152f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].set_count */
extern void T2152f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].move_all_cursors */
extern void T2115f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_put */
extern void T2115f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].force */
extern void T2155f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_WILDCARD].fill_with */
extern void T2152f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_WILDCARD].extend */
extern void T2152f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].search_position */
extern void T2115f39(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile */
extern void T2142f20(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_DFA_WILDCARD.compile */
extern T0* T2142c20(TC* ac, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T2159c38(TC* ac, T0* a1);
/* LX_FULL_DFA.build */
extern void T2159f41(TC* ac, T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T2159f47(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].first */
extern T0* T2166f6(TC* ac, T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T2159f46(TC* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].target */
extern T0* T2205f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].value */
extern T0* T2255f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_item */
extern T0* T2255f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].position_of_key */
extern T6 T2255f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_item */
extern T6 T2255f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_item */
extern T6 T2255f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].hash_position */
extern T6 T2255f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_item */
extern T6 T2255f23(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T2197f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].is_empty */
extern T1 T2166f11(TC* ac, T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T2159f45(TC* ac, T0* C, T0* a1);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].set_target */
extern void T2205f9(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].force_new */
extern void T2255f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_put */
extern void T2255f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_put */
extern void T2255f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].force */
extern void T2252f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].fill_with */
extern void T2251f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].extend */
extern void T2251f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_put */
extern void T2255f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_put */
extern void T2255f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].resize */
extern void T2255f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_resize */
extern void T2255f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].special_integer_ */
extern T0* T2255f34(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_resize */
extern void T2255f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_resize */
extern void T2255f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].aliased_resized_area */
extern T0* T2252f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].aliased_resized_area */
extern T0* T2251f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_resize */
extern void T2255f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_modulus */
extern T6 T2255f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_capacity */
extern T6 T2255f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].unset_found_item */
extern void T2255f42(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].replace_found_item */
extern void T2255f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].found */
extern T1 T2255f20(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].search */
extern void T2255f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].search_position */
extern void T2255f47(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T2200f4(TC* ac, T0* C, T6 a1);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].item */
extern T0* T2239f4(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T2159f37(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T2197f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].put_last */
extern void T2199f9(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T2197f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_equal */
extern T1 T2198f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].any_ */
extern T0* T2198f17(TC* ac, T0* C);
/* LX_DFA_STATE.any_ */
extern T0* T2197f14(TC* ac, T0* C);
/* LX_DFA_STATE.new_state */
extern T0* T2197f9(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T2197c16(TC* ac, T0* a1, T6 a2, T6 a3);
extern T1 T2197f16ot1(TC* ac, T0* a1);
/* LX_RULE.set_useful */
extern void T2183f22(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [LX_RULE].sort */
extern void T2166f17(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort */
extern void T2244f3(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort_with_comparator */
extern void T2244f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_RULE].subsort_with_comparator */
extern void T2244f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_RULE].replace */
extern void T2166f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].less_than */
extern T1 T2262f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].detachable_less_than */
extern T1 T2262f2(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].attached_less_than */
extern T1 T2262f3(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_RULE.is_less */
extern T1 T2183f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].item */
extern T0* T2166f10(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern T0* T2197f7(TC* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_RULE].make */
extern T0* T2244c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].make */
extern T0* T2262c4(TC* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].sort */
extern void T2198f25(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort */
extern void T2242f3(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort_with_comparator */
extern void T2242f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].subsort_with_comparator */
extern void T2242f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_NFA_STATE].replace */
extern void T2198f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].less_than */
extern T1 T2265f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].detachable_less_than */
extern T1 T2265f2(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].attached_less_than */
extern T1 T2265f3(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.is_less */
extern T1 T2208f9(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern T0* T2197f8(TC* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].make */
extern T0* T2242c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].make */
extern T0* T2265c4(TC* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].last */
extern T0* T2198f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_empty */
extern T1 T2198f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_last */
extern void T2166f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].force */
extern void T2216f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_RULE].fill_with */
extern void T2196f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_RULE].extend */
extern void T2196f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].resize */
extern void T2166f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].aliased_resized_area */
extern T0* T2216f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].aliased_resized_area */
extern T0* T2196f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].new_capacity */
extern T6 T2166f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].extendible */
extern T1 T2166f8(TC* ac, T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T2208f6(TC* ac, T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T2208f8(TC* ac, T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T2208f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].has */
extern T1 T2198f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].force_last */
extern void T2198f23(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].force */
extern void T2248f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].fill_with */
extern void T2246f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].extend */
extern void T2246f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].resize */
extern void T2198f28(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].aliased_resized_area */
extern T0* T2248f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA_STATE].aliased_resized_area */
extern T0* T2246f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_capacity */
extern T6 T2198f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extendible */
extern T1 T2198f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].make */
extern T0* T2166c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].set_internal_cursor */
extern void T2166f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].new_cursor */
extern T0* T2166f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].make */
extern T0* T2217c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].make */
extern T0* T2216f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern void T2196f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern T0* T2196c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].default_create */
extern T0* T2216c3(TC* ac);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].make */
extern T0* T2205c8(TC* ac, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_map */
extern T0* T2255c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_with_equality_testers */
extern void T2255f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_sparse_container */
extern void T2255f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].set_internal_cursor */
extern void T2255f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_cursor */
extern T0* T2255f27(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32].make */
extern T0* T2274c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_slots */
extern void T2255f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_clashes */
extern void T2255f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_key_storage */
extern void T2255f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_item_storage */
extern void T2255f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].make */
extern T0* T2252f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern T0* T2251c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].default_create */
extern T0* T2252c3(TC* ac);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T2197f13(TC* ac, T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T2197f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_last */
extern void T2198f20(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].target */
extern T0* T2236f2(TC* ac, T0* C);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].target */
extern T0* T2235f2(TC* ac, T0* C);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].target */
extern T0* T2232f1(TC* ac, T0* C);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2236f3(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2235f3(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.has */
extern T1 T2170f13(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.added */
extern T1 T2170f17(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.index_in_chunk */
extern T6 T2170f12(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.chunk */
extern T0* T2170f11(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.chunk_index */
extern T6 T2170f14(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.masks */
extern T0* T2170f10(TC* ac, T0* C);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2232f2(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].item */
extern T0* T2198f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].make */
extern T0* T2198c19(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].set_internal_cursor */
extern void T2198f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_cursor */
extern T0* T2198f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].make */
extern T0* T2249c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].make */
extern T0* T2248f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA_STATE].make_empty */
extern T0* T2246c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].default_create */
extern T0* T2248c3(TC* ac);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T2200f8(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T2197f18(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].record */
extern void T2236f5(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T2200f13(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T2200f13p1(TC* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].forget_left */
extern void T2240f7(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].forget_right */
extern void T2240f6(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_right */
extern void T2240f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_left */
extern void T2240f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].force */
extern void T290f86(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].record */
extern void T2235f5(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T2200f12(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T2200f12p1(TC* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].record */
extern void T2232f4(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T2200f11(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T2200f11p1(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.new_lower */
extern T6 T2200f9(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_left */
extern void T2240f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_right */
extern void T2240f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].put */
extern void T2240f8(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T2200f7(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T2200f6(TC* ac, T0* C);
/* LX_FULL_DFA.resize */
extern void T2159f50(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].resize */
extern void T2199f10(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T2200f5(TC* ac, T0* C);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].count */
extern T6 T2239f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_DFA_STATE].item */
extern T0* T2199f7(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T2200c10(TC* ac, T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T2200f10p1(TC* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].put */
extern void T2239f7(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T2239c6(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled_area */
extern void T2239f8(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T2241c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].fill_with */
extern void T2241f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].extend */
extern void T2241f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_empty */
extern void T2241f6(TC* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].make */
extern T0* T2240c4(TC* ac, T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T2159f40(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_first */
extern void T2166f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].put */
extern void T2166f18(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].move_cursors_right */
extern void T2166f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].set_position */
extern void T2217f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].move_right */
extern void T2166f20(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].put_last */
extern void T2166f19(TC* ac, T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T2183c14(TC* ac, T6 a1);
/* LX_RULE.dummy_action */
extern T0* T2183f11(TC* ac, T0* C);
/* LX_ACTION.make */
extern T0* T2238c2(TC* ac, T0* a1);
/* LX_RULE.dummy_pattern */
extern T0* T2183f12(TC* ac, T0* C);
/* LX_NFA.make_epsilon */
extern T0* T2181c6(TC* ac, T1 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_first */
extern void T2198f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put */
extern void T2198f27(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_cursors_right */
extern void T2198f31(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_position */
extern void T2249f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_right */
extern void T2198f30(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T2208f11(TC* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].make */
extern T0* T2232c3(TC* ac, T0* a1);
/* LX_NFA_STATE.make */
extern T0* T2208c10(TC* ac, T1 a1);
/* LX_FULL_DFA.initialize */
extern void T2159f39(TC* ac, T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T2159f44(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T2159f49(TC* ac, T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T2181f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].first */
extern T0* T2198f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA].item */
extern T0* T2206f7(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T2167f9(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T2159f48(TC* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T2208f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].force */
extern void T2207f35(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_put */
extern void T2207f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_put */
extern void T2207f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_put */
extern void T2207f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_item */
extern T6 T2207f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_item */
extern T6 T2207f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].hash_position */
extern T6 T2207f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].resize */
extern void T2207f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_resize */
extern void T2207f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].special_integer_ */
extern T0* T2207f31(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_resize */
extern void T2207f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_resize */
extern void T2207f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].aliased_resized_area */
extern T0* T2180f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA].aliased_resized_area */
extern T0* T2182f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_item */
extern T6 T2207f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_resize */
extern void T2207f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_modulus */
extern T6 T2207f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_capacity */
extern T6 T2207f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_put */
extern void T2207f39(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_NFA].force */
extern void T2180f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA].fill_with */
extern void T2182f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA].extend */
extern void T2182f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].search_position */
extern void T2207f36(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [INTEGER_32].test */
extern T1 T704f1(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].unset_found_item */
extern void T2207f38(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item */
extern T0* T2207f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_item */
extern T0* T2207f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].has */
extern T1 T2207f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make */
extern T0* T2207c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_with_equality_testers */
extern void T2207f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_sparse_container */
extern void T2207f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].set_internal_cursor */
extern void T2207f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_cursor */
extern T0* T2207f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32].make */
extern T0* T2258c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_slots */
extern void T2207f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_clashes */
extern void T2207f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_key_storage */
extern void T2207f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_item_storage */
extern void T2207f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].make */
extern T0* T2180f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].make_empty */
extern T0* T2182c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].default_create */
extern T0* T2180c3(TC* ac);
/* KL_EQUALITY_TESTER [INTEGER_32].default_create */
extern T0* T704c2(TC* ac);
/* DS_ARRAYED_LIST [LX_DFA_STATE].make */
extern T0* T2199c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].set_internal_cursor */
extern void T2199f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].new_cursor */
extern T0* T2199f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE].make */
extern T0* T2253c3(TC* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T2185f6(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T2185f5(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T2185f4(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T2185f3(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.new_lower */
extern T6 T2185f7(TC* ac, T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T2159f43(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_RULE].put */
extern void T2202f5(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_RULE].make_filled */
extern T0* T2202c4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_RULE].make_filled_area */
extern void T2202f6(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable LX_RULE].make_filled */
extern T0* T2203c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable LX_RULE].fill_with */
extern void T2203f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable LX_RULE].extend */
extern void T2203f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable LX_RULE].make_empty */
extern void T2203f6(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.build_rules */
extern void T2159f42(TC* ac, T0* C, T0* a1);
/* ARRAY [LX_RULE].put */
extern void T2195f5(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [LX_RULE].make_filled */
extern T0* T2195c4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].make_filled_area */
extern void T2195f6(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].make_filled */
extern T0* T2196c5(TC* ac, T0* a1, T6 a2);
/* KL_ARRAY_ROUTINES [LX_RULE].make_empty_with_lower */
extern T0* T2201f1(TC* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_from_array */
extern T0* T2195c8(TC* ac, T0* a1);
/* ARRAY [LX_RULE].set_area */
extern void T2195f10(TC* ac, T0* C, T0* a1);
/* KL_ARRAY [LX_RULE].new_rebase */
extern void T2254f5(TC* ac, T0* C, T6 a1);
/* KL_ARRAY [LX_RULE].make_empty */
extern T0* T2254c4(TC* ac);
/* KL_ARRAY [LX_RULE].make_empty_area */
extern void T2254f6(TC* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_empty */
extern T0* T2195c7(TC* ac);
/* ARRAY [LX_RULE].make_empty_area */
extern void T2195f9(TC* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [LX_RULE].default_create */
extern T0* T2201c2(TC* ac);
/* LX_START_CONDITIONS.names */
extern T0* T2167f7(TC* ac, T0* C);
/* LX_START_CONDITIONS.first */
extern T0* T2167f6(TC* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].make_empty_with_lower */
extern T0* T2218f1(TC* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_from_array */
extern T0* T33c11(TC* ac, T0* a1);
/* ARRAY [STRING_8].set_area */
extern void T33f13(TC* ac, T0* C, T0* a1);
/* KL_ARRAY [STRING_8].new_rebase */
extern void T2272f5(TC* ac, T0* C, T6 a1);
/* KL_ARRAY [STRING_8].make_empty */
extern T0* T2272c4(TC* ac);
/* KL_ARRAY [STRING_8].make_empty_area */
extern void T2272f6(TC* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_empty */
extern T0* T33c10(TC* ac);
/* ARRAY [STRING_8].make_empty_area */
extern void T33f12(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.string_array_routines */
extern T0* T2167f11(TC* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].default_create */
extern T0* T2218c2(TC* ac);
/* LX_WILDCARD_PARSER.parse_string */
extern void T2157f247(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.parse */
extern void T2157f251(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T2157f264(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_error_value */
extern void T2157f263(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_action */
extern void T2157f262(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.twin */
extern T0* T2170f21(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.copy */
extern void T2170f30(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].twin */
extern T0* T826f7(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.chunk_of_ones */
extern T0* T2170f20(TC* ac, T0* C);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].make_filled */
extern T0* T2227c5(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].fill_with */
extern void T2227f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].extend */
extern void T2227f9(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].make_empty */
extern void T2227f8(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.remove_symbol_class */
extern void T2170f29(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.add_symbol_class */
extern void T2170f28(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].filled_with */
extern T1 T826f6(TC* ac, T0* C, T11 a1, T6 a2, T6 a3);
/* LX_SYMBOL_CLASS.attached_other_sets */
extern T0* T2170f19(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T2157f188(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* LX_SYMBOL_CLASS.add_symbol */
extern void T2170f26(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.attached_chunk */
extern T0* T2170f18(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T2157f304(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T2215c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.filename */
extern T0* T2157f209(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2178f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2179f4(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T2157f187(TC* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_character_class */
extern T0* T2157f186(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.make */
extern T0* T2170c25(TC* ac, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.set_negated */
extern void T2170f27(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].force */
extern void T2173f37(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_put */
extern void T2173f47(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [STRING_32].force */
extern void T2176f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [STRING_32].fill_with */
extern void T2177f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_32].extend */
extern void T2177f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_put */
extern void T2173f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_put */
extern void T2173f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_item */
extern T6 T2173f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_item */
extern T6 T2173f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].hash_position */
extern T6 T2173f22(TC* ac, T0* C, T0* a1);
/* STRING_32.hash_code */
extern T6 T18f21(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].resize */
extern void T2173f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_resize */
extern void T2173f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].special_integer_ */
extern T0* T2173f32(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_resize */
extern void T2173f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_32].aliased_resized_area */
extern T0* T2176f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_32].aliased_resized_area */
extern T0* T2177f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_resize */
extern void T2173f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_item */
extern T0* T2173f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_resize */
extern void T2173f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_modulus */
extern T6 T2173f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_capacity */
extern T6 T2173f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_put */
extern void T2173f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].search_position */
extern void T2173f42(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING_32].test */
extern T1 T2174f1(TC* ac, T0* C, T0* a1, T0* a2);
/* STRING_32.is_equal */
extern T1 T18f20(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].same_items */
extern T1 T16f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].unset_found_item */
extern void T2173f41(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].force_new */
extern void T2172f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_put */
extern void T2172f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_put */
extern void T2172f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_put */
extern void T2172f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_item */
extern T6 T2172f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].hash_position */
extern T6 T2172f19(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.hash_code */
extern T6 T2170f22(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_item */
extern T6 T2172f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].resize */
extern void T2172f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_resize */
extern void T2172f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].special_integer_ */
extern T0* T2172f30(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_storage_resize */
extern void T2172f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_resize */
extern void T2172f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_storage_item */
extern T0* T2172f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_item */
extern T0* T2172f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_resize */
extern void T2172f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_modulus */
extern T6 T2172f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_capacity */
extern T6 T2172f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].unset_found_item */
extern void T2172f44(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].found_item */
extern T0* T2172f24(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].found */
extern T1 T2172f26(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].search */
extern void T2172f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].search_position */
extern void T2172f46(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS].test */
extern T1 T2223f1(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_SYMBOL_CLASS.is_equal */
extern T1 T2170f24(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.same_symbol_class */
extern T1 T2170f23(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].same_items */
extern T1 T826f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_equality_tester */
extern T0* T2172f27(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].force */
extern void T2178f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].fill_with */
extern void T2179f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].extend */
extern void T2179f10(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T2157f184(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T2157f238(TC* ac, T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T2181c12(TC* ac, T0* a1, T1 a2);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].make */
extern T0* T2235c4(TC* ac, T0* a1, T0* a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].force */
extern void T2172f39(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_utf8_character_class */
extern T0* T2157f240(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_unions_of_concatenations_of_symbol_classes */
extern T0* T2157f244(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].item */
extern T0* T2214f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].first */
extern T0* T2214f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].item */
extern T0* T2213f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].force_new */
extern void T2169f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_put */
extern void T2169f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_put */
extern void T2169f43(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].force */
extern void T2225f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].fill_with */
extern void T2222f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].extend */
extern void T2222f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_put */
extern void T2169f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_put */
extern void T2169f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_item */
extern T6 T2169f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].hash_position */
extern T6 T2169f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_item */
extern T6 T2169f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].resize */
extern void T2169f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_resize */
extern void T2169f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].special_integer_ */
extern T0* T2169f31(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_resize */
extern void T2169f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_resize */
extern void T2169f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].aliased_resized_area */
extern T0* T2225f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].aliased_resized_area */
extern T0* T2222f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_item */
extern T0* T2169f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_resize */
extern void T2169f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_modulus */
extern T6 T2169f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_capacity */
extern T6 T2169f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].unset_found_item */
extern void T2169f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].is_empty */
extern T1 T2213f6(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.append_concatenations_of_symbol_classes_from_utf8_n_byte_character_class */
extern void T2157f313(TC* ac, T0* C, T0* a1, T6 a2, T0* a3, T0* a4);
/* DS_HASH_SET [INTEGER_32].new_iterator */
extern T0* T290f39(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_equal */
extern T1 T290f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].same_equality_tester */
extern T1 T290f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].any_ */
extern T0* T290f40(TC* ac, T0* C);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].put */
extern void T2211f6(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].item */
extern T0* T2211f4(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].make_filled */
extern T0* T2211c5(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].make_filled_area */
extern void T2211f7(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].make_filled */
extern T0* T2212c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].fill_with */
extern void T2212f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].extend */
extern void T2212f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].make_empty */
extern void T2212f6(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_concatenations_of_symbol_classes_from_utf8_2_byte_character_class */
extern void T2157f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [detachable LX_SYMBOL_CLASS].put */
extern void T2209f6(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_SYMBOL_CLASS].item */
extern T0* T2209f4(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable LX_SYMBOL_CLASS].make_filled */
extern T0* T2209c5(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_SYMBOL_CLASS].make_filled_area */
extern void T2209f7(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable LX_SYMBOL_CLASS].make_filled */
extern T0* T2210c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable LX_SYMBOL_CLASS].fill_with */
extern void T2210f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable LX_SYMBOL_CLASS].extend */
extern void T2210f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable LX_SYMBOL_CLASS].make_empty */
extern void T2210f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].force_last */
extern void T2213f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].force */
extern void T2269f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].fill_with */
extern void T2268f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].extend */
extern void T2268f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].resize */
extern void T2213f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].aliased_resized_area */
extern T0* T2269f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].aliased_resized_area */
extern T0* T2268f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].new_capacity */
extern T6 T2213f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].extendible */
extern T1 T2213f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].put_last */
extern void T2214f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].make */
extern T0* T2214c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2214f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].new_cursor */
extern T0* T2214f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS].make */
extern T0* T2271c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].make */
extern T0* T2178f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].make_empty */
extern T0* T2179c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].default_create */
extern T0* T2178c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2213c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].set_internal_cursor */
extern void T2213f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].new_cursor */
extern T0* T2213f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2270c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2269f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make_empty */
extern T0* T2268c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].default_create */
extern T0* T2269c3(TC* ac);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].found_item */
extern T0* T2169f33(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_item */
extern T0* T2169f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].found */
extern T1 T2169f21(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].search */
extern void T2169f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].search_position */
extern void T2169f38(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.question_character_class */
extern T0* T2157f183(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].force_new */
extern void T2173f39(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].found_item */
extern T0* T2173f28(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_item */
extern T0* T2173f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].found */
extern T1 T2173f34(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].search */
extern void T2173f38(TC* ac, T0* C, T0* a1);
/* LX_NFA.build_optional */
extern void T2181f11(TC* ac, T0* C);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T2208f12(TC* ac, T0* C, T0* a1);
/* LX_NFA.final_state */
extern T0* T2181f5(TC* ac, T0* C);
/* LX_NFA.build_positive_closure */
extern void T2181f10(TC* ac, T0* C);
/* LX_NFA.build_closure */
extern void T2181f9(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T2157f182(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T2157f239(TC* ac, T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T2181c13(TC* ac, T6 a1, T1 a2);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].make */
extern T0* T2236c4(TC* ac, T6 a1, T0* a2);
/* STRING_32.append_integer */
extern void T18f41(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T2157f181(TC* ac, T0* C, T6 a1, T0* a2);
/* STRING_8.item_code */
extern T6 T17f47(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T2157f179(TC* ac, T0* C);
/* DS_ARRAYED_STACK [BOOLEAN].item */
extern T1 T2175f5(TC* ac, T0* C);
/* LX_NFA.build_concatenation */
extern void T2181f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].append_last */
extern void T2198f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extend_last */
extern void T2198f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].forth */
extern void T2249f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_forth */
extern void T2198f33(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].add_traversing_cursor */
extern void T2198f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_next_cursor */
extern void T2249f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].remove_traversing_cursor */
extern void T2198f35(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].item */
extern T0* T2249f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_item */
extern T0* T2198f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].after */
extern T1 T2249f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].start */
extern void T2249f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_start */
extern void T2198f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_after */
extern void T2249f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].off */
extern T1 T2249f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].before */
extern T1 T2249f8(TC* ac, T0* C);
/* LX_NFA.build_union */
extern void T2181f7(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T2157f279(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T2186c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_rule */
extern void T2157f278(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T2167f13(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITION.add_nfa */
extern void T2204f7(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITION.put_nfa */
extern void T2204f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].force_last */
extern void T2206f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].resize */
extern void T2206f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].new_capacity */
extern T6 T2206f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].extendible */
extern T1 T2206f8(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITION.put_bol_nfa */
extern void T2204f8(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T2167f15(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITIONS.is_empty */
extern T1 T2167f8(TC* ac, T0* C);
/* LX_DESCRIPTION.set_bol_needed */
extern void T2158f40(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T2158f39(TC* ac, T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T2183f21(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T2183f20(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T2183f19(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T2183f18(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T2183f17(TC* ac, T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T2183f16(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T2183f15(TC* ac, T0* C, T0* a1);
/* LX_NFA.set_accepted_rule */
extern void T2181f14(TC* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T2208f13(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.check_options */
extern void T2157f277(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T2157f296(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T2193c8(TC* ac);
/* LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T2157f295(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T2192c8(TC* ac);
/* LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T2157f294(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T2191c8(TC* ac);
/* LX_WILDCARD_PARSER.build_equiv_classes */
extern void T2157f276(TC* ac, T0* C);
/* LX_DESCRIPTION.set_equiv_classes */
extern void T2158f38(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T2170f33(TC* ac, T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T2185f9(TC* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T2185f8(TC* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T2185f12(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].forth */
extern void T2184f11(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_forth */
extern void T2172f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].add_traversing_cursor */
extern void T2172f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_next_cursor */
extern void T2184f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_position */
extern void T2184f13(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].remove_traversing_cursor */
extern void T2172f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_after */
extern void T2184f12(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T2185f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].item */
extern T0* T2184f5(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_item */
extern T0* T2172f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].after */
extern T1 T2184f7(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].start */
extern void T2184f10(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_start */
extern void T2172f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_off */
extern T1 T2172f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].off */
extern T1 T2184f8(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].is_empty */
extern T1 T2172f33(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_cursor */
extern T0* T2172f25(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].make */
extern T0* T2184c9(TC* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T2185c10(TC* ac, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T2185f13(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.set_maximum_symbol_equivalence_class */
extern void T2157f275(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.set_maximum_symbol_equivalence_class */
extern void T2170f32(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].upper */
extern T6 T2227f4(TC* ac, T0* C);
/* LX_DESCRIPTION.set_maximum_symbol */
extern void T2158f37(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_last_value */
extern void T2157f261(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.accept */
extern void T2157f260(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_error_action */
extern void T2157f258(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_error */
extern void T2157f274(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T2157f273(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.read_token */
extern void T2157f257(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_execute_action */
extern void T2157f272(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.character_text */
extern T0* T2157f208(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.unicode_text_item */
extern T3 T2157f221(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.text */
extern T0* T2157f241(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.substring */
extern T0* T1541f14(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_WILDCARD_PARSER.text_count */
extern T6 T2157f227(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_bad_character_error */
extern void T2157f293(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T2190c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T2157f292(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T2189c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_unicode_character */
extern void T2157f291(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_character */
extern void T2157f299(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_invalid_character_error */
extern void T2157f282(TC* ac, T0* C, T0* a1);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.make */
extern T0* T2187c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T2157f301(TC* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T2194c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.process_hexadecimal_character */
extern void T2157f290(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_octal_character */
extern void T2157f289(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_escaped_character */
extern void T2157f288(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T2157f287(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T2188c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_single_character */
extern void T2157f286(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.text_item */
extern T2 T2157f201(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.less */
extern void T2157f285(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_set_line_column */
extern void T2157f298(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.character_class_with_name */
extern T0* T2157f195(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.unicode_text */
extern T0* T2157f194(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.unicode_substring */
extern T0* T1541f13(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.unicode_substring */
extern T0* T1510f10(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.append_unicode_substring_to_string */
extern void T1510f19(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* STRING_32.append_substring_general */
extern void T18f42(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_WILDCARD_PARSER.set_start_condition */
extern void T2157f284(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T2157f271(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.terminate */
extern void T2157f283(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.wrap */
extern T1 T2157f165(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T2157f270(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_set_content */
extern void T2157f267(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_BUFFER.fill */
extern void T1703f15(TC* ac, T0* C);
/* YY_UNICODE_BUFFER.set_index */
extern void T1703f13(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T2157f164(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T2157f163(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.fatal_error */
extern void T2157f269(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T38f9(TC* ac, T0* C, T2 a1);
/* KL_STDERR_FILE.console */
extern T0* T38f1(TC* ac, T0* C);
/* STD_FILES.error */
extern T0* T464f2(TC* ac, T0* C);
/* CONSOLE.make_open_stderr */
extern T0* T983c21(TC* ac, T0* a1);
/* KL_STDERR_FILE.io */
extern T0* T38f3(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.std */
extern T0* T2157f189(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_invalid_unicode_character_error */
extern void T2157f268(TC* ac, T0* C, T10 a1);
/* LX_WILDCARD_PARSER.yy_at_beginning_of_line */
extern T6 T2157f132(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.special_integer_ */
extern T0* T2157f129(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T2157f256(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_all */
extern void T2157f265(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_all */
extern void T2157f280(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_stacks */
extern void T2157f297(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T2157f300(TC* ac, T0* C);
/* SPECIAL [LX_NFA].keep_head */
extern void T2182f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].set_count */
extern void T2182f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].keep_head */
extern void T2179f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].set_count */
extern void T2179f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_32].keep_head */
extern void T2177f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_32].set_count */
extern void T2177f9(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.abort */
extern void T2157f259(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.set_input_buffer */
extern void T2157f250(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T2157f255(TC* ac, T0* C);
/* YY_UNICODE_BUFFER.set_position */
extern void T1703f14(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* LX_WILDCARD_PARSER.new_unicode_string_buffer */
extern T0* T2157f147(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_BUFFER.make */
extern T0* T1703c12(TC* ac, T0* a1);
/* YY_UNICODE_BUFFER.make_from_buffer */
extern void T1703f16(TC* ac, T0* C, T0* a1);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_string */
extern void T1541f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_substring */
extern void T1541f23(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_UNICODE_BUFFER.new_default_buffer */
extern T0* T1703f11(TC* ac, T0* C, T6 a1);
/* KL_UNICODE_CHARACTER_BUFFER.make */
extern T0* T1541c15(TC* ac, T6 a1);
/* STRING_32.make_filled */
extern T0* T18c37(TC* ac, T3 a1, T6 a2);
/* STRING_32.fill_character */
extern void T18f40(TC* ac, T0* C, T3 a1);
/* LX_WILDCARD_PARSER.make_from_description */
extern T0* T2157c246(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make */
extern T0* T2169c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_with_equality_testers */
extern void T2169f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_sparse_container */
extern void T2169f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2169f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_cursor */
extern T0* T2169f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make */
extern T0* T2226c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_slots */
extern void T2169f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_clashes */
extern void T2169f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_key_storage */
extern void T2169f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_item_storage */
extern void T2169f50(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].make */
extern T0* T2225f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].make_empty */
extern T0* T2222c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].default_create */
extern T0* T2225c3(TC* ac);
/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS].default_create */
extern T0* T2223c2(TC* ac);
/* LX_ACTION_FACTORY.make */
extern T0* T2168c1(TC* ac);
/* LX_START_CONDITIONS.make */
extern void T2167f12(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T2167c12(TC* ac, T6 a1);
/* LX_START_CONDITIONS.set_internal_cursor */
extern void T2167f16(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T2167f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].make */
extern T0* T2221c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].make */
extern T0* T2220f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_START_CONDITION].make_empty */
extern T0* T2219c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].default_create */
extern T0* T2220c2(TC* ac);
/* LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T2157f249(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T2157f254(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yycheck_template */
extern T0* T2157f178(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T2157f232(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yytable_template */
extern T0* T2157f177(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yypgoto_template */
extern T0* T2157f176(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yypact_template */
extern T0* T2157f174(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefgoto_template */
extern T0* T2157f173(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefact_template */
extern T0* T2157f172(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes2_template */
extern T0* T2157f171(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes1_template */
extern T0* T2157f169(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yyr1_template */
extern T0* T2157f160(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template */
extern T0* T2157f159(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T2157f303(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T2157f314(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.integer_array_ */
extern T0* T2157f245(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T2157f302(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T2157f253(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [STRING_32].make */
extern T0* T2176f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_32].make_empty */
extern T0* T2177c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_32].default_create */
extern T0* T2176c3(TC* ac);
/* LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T2157f248(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [BOOLEAN].force */
extern void T2175f9(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_STACK [BOOLEAN].resize */
extern void T2175f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].new_capacity */
extern T6 T2175f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].extendible */
extern T1 T2175f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].make */
extern T0* T2175c8(TC* ac, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make */
extern void T2172f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make */
extern T0* T2172c36(TC* ac, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2172f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_slots */
extern void T2172f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_clashes */
extern void T2172f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_key_storage */
extern void T2172f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_item_storage */
extern void T2172f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].set_key_equality_tester */
extern void T2173f36(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.string_32_equality_tester */
extern T0* T2157f143(TC* ac, T0* C);
/* KL_EQUALITY_TESTER [STRING_32].default_create */
extern T0* T2174c2(TC* ac);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_map */
extern T0* T2173c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_with_equality_testers */
extern void T2173f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_sparse_container */
extern void T2173f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].set_internal_cursor */
extern void T2173f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_cursor */
extern T0* T2173f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32].make */
extern T0* T2231c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_slots */
extern void T2173f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_clashes */
extern void T2173f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_key_storage */
extern void T2173f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_item_storage */
extern void T2173f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_equal */
extern T0* T2172c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].set_key_equality_tester */
extern void T2171f21(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T2157f126(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_map */
extern T0* T2171c20(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_with_equality_testers */
extern void T2171f22(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_sparse_container */
extern void T2171f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].set_internal_cursor */
extern void T2171f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].new_cursor */
extern T0* T2171f17(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_32, STRING_8].make */
extern T0* T2229c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].unset_found_item */
extern void T2171f28(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_slots */
extern void T2171f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].new_modulus */
extern T6 T2171f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_clashes */
extern void T2171f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_key_storage */
extern void T2171f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_item_storage */
extern void T2171f24(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.make_with_buffer */
extern void T2157f252(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T2157f266(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T2157f266p1(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_tables */
extern void T2157f281(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_accept_template */
extern T0* T2157f218(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T2157f242(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_meta_template */
extern T0* T2157f217(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template */
extern T0* T2157f216(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T2157f311(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T2157f315(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.yy_def_template */
extern T0* T2157f215(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_base_template */
extern T0* T2157f214(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template */
extern T0* T2157f213(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template_3 */
extern void T2157f310(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_chk_template_2 */
extern void T2157f309(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_chk_template_1 */
extern void T2157f308(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template */
extern T0* T2157f212(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_nxt_template_3 */
extern void T2157f307(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template_2 */
extern void T2157f306(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template_1 */
extern void T2157f305(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.empty_buffer */
extern T0* T2157f139(TC* ac, T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T2158f36(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T2158f35(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T2158f34(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T2158f33(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T2158c32(TC* ac);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T2167c14(TC* ac, T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T2167f17(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T2167f18(TC* ac, T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T2167f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].set_position */
extern void T2221f5(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T2167f20(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].force */
extern void T2220f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].fill_with */
extern void T2219f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].extend */
extern void T2219f7(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put_last */
extern void T2167f19(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T2204c6(TC* ac, T0* a1, T6 a2, T1 a3);
/* DS_ARRAYED_LIST [LX_NFA].make */
extern T0* T2206c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].set_internal_cursor */
extern void T2206f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].new_cursor */
extern T0* T2206f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA].make */
extern T0* T2256c3(TC* ac, T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T138c12(TC* ac);
/* UT_ERROR_HANDLER.null_output_stream */
extern T0* T138f6(TC* ac, T0* C);
/* LX_DFA_WILDCARD.wipe_out */
extern void T2142f22(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T1821f13(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T1821f15(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T1821f14(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T1821f12(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T1821f10(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T499f62(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T150c40(TC* ac, T0* a1);
/* ST_SPLITTER.make */
extern T0* T2011c11(TC* ac);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T499f187(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T499f187ac1(TC* ac, T0* a1, T0* a2);
extern T1 T499f187ot1(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_provider_constraint */
extern void T860f96(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_provider_constraint */
extern void T845f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.universes_do_all */
extern void T191f199(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T215f13(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T192f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_all */
extern void T63f286(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T499f193(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.full_name */
extern T0* T45f134(TC* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T216f103(TC* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T216f104(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.full_name */
extern T0* T628f100(TC* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T628f103(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.full_name */
extern T0* T910f100(TC* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_name */
extern T0* T910f103(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.full_name */
extern T0* T63f161(TC* ac, T0* C, T2 a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T58f603(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T2001c26(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T58f188(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T41f603(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T41f188(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_recursive_cluster */
extern void T860f100(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_subcluster */
extern void T860f95(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_parent */
extern void T860f94(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.put_last */
extern void T845f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].force_last */
extern void T1639f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].force */
extern void T1920f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].fill_with */
extern void T1919f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].extend */
extern void T1919f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].resize */
extern void T1639f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1920f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1919f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_capacity */
extern T6 T1639f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].extendible */
extern T1 T1639f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.set_subclusters */
extern void T860f98(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_parent */
extern void T845f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make_empty */
extern T0* T845c9(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].make */
extern T0* T1639c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].set_internal_cursor */
extern void T1639f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_cursor */
extern T0* T1639f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].make */
extern T0* T1921c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].make */
extern T0* T1920f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].make_empty */
extern T0* T1919c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].default_create */
extern T0* T1920c3(TC* ac);
/* ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T860f62(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_overridden_group */
extern void T860f86(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_provider_groups */
extern void T860f82(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_visible_classes */
extern void T860f81(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_options */
extern void T860f78(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_options */
extern void T860f77(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_mappings */
extern void T860f80(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_renamings */
extern void T860f79(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_classname_prefix */
extern void T860f72(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T860f88(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_hidden */
extern void T860f71(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_read_only */
extern void T860f73(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_override */
extern void T860f85(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_implicit */
extern void T860f103(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_recursive */
extern void T860f74(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_file_rules */
extern void T860f102(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.make_relative */
extern T0* T860c101(TC* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.is_less_equal */
extern T1 T51f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.ecf_1_4_0 */
extern T0* T860f37(TC* ac, T0* C);
/* ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T860f87(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T845f10(TC* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T130f29(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T352f31(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern T0* T130f30(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T129f32(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T129f33(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T860f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.is_included */
extern T1 T848f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.is_included */
extern T0* T848f3ac1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2134f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_FILE_RULE.is_included */
extern T1 T868f10(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T868f10ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T868f10ac2(TC* ac, T0* a1);
/* PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]].set_rout_disp_final */
extern void T2164f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T87f306(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T1653f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T1653f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].for_all */
extern T1 T1642f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].item */
extern T0* T1642f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T860f54(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T860f40p1(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T499f186(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.reset */
extern void T499f192(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T995f28(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T499f192p1(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T499f192p0(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T499f192p2(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T499f61(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T499f191(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T499f198(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.more */
extern void T499f204(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T499f116(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T499f199(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T499f202(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.unicode_text_item */
extern T3 T499f113(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.utf8_text_substring */
extern T0* T499f111(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.append_utf8_text_substring_to_string */
extern void T499f205(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T499f201(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T499f109(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T499f108(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T499f107(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T499f106(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T499f105(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T499f104(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T499f100(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T499f203(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T499f197(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T499f200(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T499f92(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T499f196(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T499f142(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T499f91(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T499f90(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T499f195(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.report_invalid_unicode_character_error */
extern void T499f194(TC* ac, T0* C, T10 a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T499f60(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_at_beginning_of_line */
extern T6 T499f72(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T499f140(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T499f58(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T499f129(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T499f190(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ECF_LIBRARY.classes_in_group */
extern T0* T191f119(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T191f119ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T191f119ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T191f119ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern T6 T191f120(TC* ac, T0* C);
/* ET_ECF_SYSTEM.classes_in_group */
extern T0* T63f163(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T63f163ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T63f163ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T63f163ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T63f164(TC* ac, T0* C);
/* ET_SYSTEM.classes_in_group */
extern T0* T45f136(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.classes_in_group */
extern T0* T45f136ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.classes_in_group */
extern T0* T45f136ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.classes_in_group */
extern T0* T45f136ac3(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T45f137(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_if */
extern void T485f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T485f88(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_override_classes_do_if */
extern void T485f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_universe */
extern T0* T499f57(TC* ac, T0* C);
/* DS_CELL [detachable ET_CLASS].put */
extern void T2126f3(TC* ac, T0* C, T0* a1);
/* DS_CELL [detachable ET_CLASS].make */
extern T0* T2126c2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T860f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T860f39p1(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T860f55(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.reset */
extern void T352f44(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T499f56(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern T0* T499f127(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T499f55(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T499f126(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T499f125(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T499f124(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T499f112(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T499f103(TC* ac, T0* C);
/* ET_ECF_CLUSTER.set_preparsed */
extern void T860f99(TC* ac, T0* C, T1 a1);
/* ET_CLUSTERS.do_all */
extern void T479f4(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T58f593(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.kind_lower_name */
extern T0* T860f65(TC* ac, T0* C);
/* ET_ECF_LIBRARY.kind_lower_name */
extern T0* T191f113(TC* ac, T0* C);
/* ET_LIBRARY.kind_lower_name */
extern T0* T910f98(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T41f593(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T910f154(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T910f154p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.preparse */
extern T0* T910f154p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.preparse */
extern T0* T910f154p1ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.preparse */
extern T0* T910f154p1ac3(TC* ac);
/* Creation of agent #4 in feature ET_LIBRARY.preparse */
extern T0* T910f154p1ac4(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T216f154(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.preparse */
extern void T628f154(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T627f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].force_last */
extern void T1464f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].force */
extern void T1665f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].fill_with */
extern void T1666f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].extend */
extern void T1666f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].resize */
extern void T1464f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1665f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1666f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1464f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1464f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T191f197(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T215f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.dotnet_assemblies_do_if */
extern void T910f168(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T63f283(TC* ac, T0* C, T0* a1, T0* a2);
/* PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T902f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T216f93(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T628f93(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].force_last */
extern void T900f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_put */
extern void T900f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_put */
extern void T900f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T900f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T900f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].resize */
extern void T900f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T900f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T900f26(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T900f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T900f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T900f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T900f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T900f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_resize */
extern void T900f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T900f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T900f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T900f40(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].search_position */
extern void T900f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T900f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T900f37(TC* ac, T0* C);
/* ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T63f234(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac4(TC* ac);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac5(TC* ac);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac6(TC* ac);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac7(TC* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac8(TC* ac);
/* Creation of agent #9 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac9(TC* ac);
/* Creation of agent #10 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac10(TC* ac);
/* Creation of agent #11 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac11(TC* ac);
/* Creation of agent #12 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac12(TC* ac);
/* Creation of agent #13 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac13(TC* ac);
/* Creation of agent #14 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac14(TC* ac);
/* Creation of agent #15 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac15(TC* ac);
/* Creation of agent #16 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac16(TC* ac);
/* Creation of agent #17 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac17(TC* ac);
/* Creation of agent #18 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac18(TC* ac);
/* Creation of agent #19 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac19(TC* ac);
/* Creation of agent #20 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac20(TC* ac);
/* Creation of agent #21 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac21(TC* ac);
/* Creation of agent #22 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac22(TC* ac);
/* Creation of agent #23 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac23(TC* ac, T0* a1);
/* Creation of agent #24 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac24(TC* ac);
/* Creation of agent #25 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac25(TC* ac, T0* a1);
/* Creation of agent #26 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac26(TC* ac);
/* Creation of agent #27 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac27(TC* ac, T0* a1);
/* Creation of agent #28 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac28(TC* ac);
/* Creation of agent #29 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac29(TC* ac, T0* a1);
/* Creation of agent #30 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac30(TC* ac);
/* Creation of agent #31 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f234ac31(TC* ac, T1 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T927f6(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T927f8(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T927f10(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].go_after */
extern void T1680f11(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_go_after */
extern void T1015f73(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_interface_error */
extern T1 T485f36(TC* ac, T0* C);
/* ET_MASTER_CLASS.interface_checked */
extern T1 T485f35(TC* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T927f9(TC* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T927f7(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T927f4(TC* ac, T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T79f307(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T926f8(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T926f10(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T926f13(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1679f3(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T926f12(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T926f11(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1678f6(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1678f7(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T926f9(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T926f6(TC* ac, T0* C);
/* ET_CLASS.unset_interface_error */
extern void T79f306(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T925f7(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T925f9(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T925f12(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T925f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1677f3(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T925f11(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T925f10(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T925f8(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T925f5(TC* ac, T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T79f305(TC* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T924f7(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T924f9(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T924f11(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1676f3(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T924f10(TC* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T924f8(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T924f5(TC* ac, T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T79f304(TC* ac, T0* C);
/* ET_CLASS.not_implementation_checked */
extern T1 T79f159(TC* ac, T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T79f292(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T263f13(TC* ac, T0* C);
/* ET_QUERY_LIST.reset_after_interface_checked */
extern void T262f17(TC* ac, T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T79f291(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_creation_procedures */
extern void T636f37(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T948f89(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_renames */
extern void T636f36(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_renames */
extern void T1563f91(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset_renames */
extern void T77f150(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset_renames */
extern void T259f137(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset_renames */
extern void T247f93(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset_renames */
extern void T493f98(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_renames */
extern void T1587f99(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_renames */
extern void T1586f104(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset_renames */
extern void T1585f106(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.reset_renames */
extern void T1354f17(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.reset_renames */
extern void T1564f10(TC* ac, T0* C);
/* ET_CLASS.reset_renames */
extern void T79f341(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_renames */
extern void T948f88(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T263f12(TC* ac, T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T262f16(TC* ac, T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T79f290(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T485f64(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T485f79(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T485f78(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T927c5(TC* ac, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T927f3(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T926c7(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1679c2(TC* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1678c5(TC* ac, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1678f4(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T926f7p1(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T926f5(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T925c6(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1677c2(TC* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T925f6p1(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T925f4(TC* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T924c6(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1676c2(TC* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T924f6p1(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T924f4(TC* ac, T0* C);
/* ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T63f242(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T63f242ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_if */
extern void T45f202(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T216f161(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T216f161p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T628f161(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T628f161p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_if */
extern void T191f191(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_if */
extern void T910f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_if */
extern void T63f279(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T63f241(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T63f241ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T63f149(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T63f149ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T63f149ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T63f149ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T63f149ac4(TC* ac, T0* a1);
/* PREDICATE [TUPLE].set_rout_disp_final */
extern void T1516f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PREDICATE [TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T1515f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_AGENT_ROUTINES [ANY].call */
extern void T1512f2(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_TRISTATE.set_true */
extern void T1511f4(TC* ac, T0* C);
/* UT_TRISTATE.is_true */
extern T1 T1511f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T63f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T63f244ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T63f244ac2(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if_until */
extern void T45f205(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T216f165(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T628f165(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T191f195(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIBRARY.master_classes_do_if_until */
extern void T910f166(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T63f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if */
extern void T45f204(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_if */
extern void T230f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T216f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T628f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_if */
extern void T191f194(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if */
extern void T910f165(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_if */
extern void T63f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.any_actions */
extern T0* T63f141(TC* ac, T0* C);
/* KL_AGENT_ROUTINES [ANY].default_create */
extern T0* T1512c1(TC* ac);
/* UT_TRISTATE.make_false */
extern T0* T1511c3(TC* ac);
/* UT_TRISTATE.set_false */
extern void T1511f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM.import_classes */
extern void T63f233(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T63f233ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T63f233ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T63f233ac3(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse */
extern void T63f232(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse */
extern T0* T63f232ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse */
extern T0* T63f232ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse */
extern T0* T63f232ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse */
extern T0* T63f232ac4(TC* ac, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T192f8(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T192f8ac1(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.add_library_recursive */
extern void T191f187(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_library_recursive */
extern T0* T191f187ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].force_last */
extern void T960f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].slots_put */
extern void T960f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].clashes_put */
extern void T960f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].slots_item */
extern T6 T960f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].hash_position */
extern T6 T960f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].resize */
extern void T960f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_resize */
extern void T960f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].special_integer_ */
extern T0* T960f27(TC* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].key_storage_resize */
extern void T960f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_resize */
extern void T960f45(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].aliased_resized_area */
extern T0* T1688f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIBRARY].aliased_resized_area */
extern T0* T1689f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].key_storage_item */
extern T0* T960f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_item */
extern T0* T960f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_item */
extern T6 T960f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].slots_resize */
extern void T960f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_modulus */
extern T6 T960f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_capacity */
extern T6 T960f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_put */
extern void T960f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].force */
extern void T1688f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIBRARY].fill_with */
extern void T1689f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIBRARY].extend */
extern void T1689f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].search_position */
extern void T960f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].key_equality_tester */
extern T0* T960f25(TC* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].unset_found_item */
extern void T960f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].has */
extern T1 T960f18(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.add_library_recursive */
extern void T910f158(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_library_recursive */
extern T0* T910f158ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].do_all */
extern void T960f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make */
extern T0* T960c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].set_internal_cursor */
extern void T960f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].new_cursor */
extern T0* T960f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_LIBRARY].make */
extern T0* T1687c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make_slots */
extern void T960f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_clashes */
extern void T960f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_key_storage */
extern void T960f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_item_storage */
extern void T960f32(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].make */
extern T0* T1688f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIBRARY].make_empty */
extern T0* T1689c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].default_create */
extern T0* T1688c3(TC* ac);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T215f7(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T215f7ac1(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T216f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T216f157ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].has */
extern T1 T900f29(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T628f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T628f157ac1(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T512f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T216f153(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T512f6(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.consume */
extern void T628f153(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T627f2(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T627f3(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].do_all */
extern void T900f32(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T627c5(TC* ac);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].make */
extern T0* T1464c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1464f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1464f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1793c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].make */
extern T0* T1665f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1666c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1665c3(TC* ac);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make */
extern T0* T900c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T900f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T900f17(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1664c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_slots */
extern void T900f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_clashes */
extern void T900f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T900f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T900f33(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T215f3(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_6 */
extern void T398f60(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_6_metrics */
extern void T398f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T68f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T68f90(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T68f90ac1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all_features */
extern void T68f94(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T63f225(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T63f225ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T63f225ac2(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_until */
extern void T45f200(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T216f159(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T628f159(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_until */
extern void T191f189(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_until */
extern void T910f160(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_until */
extern void T63f278(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.compile_all */
extern void T69f56(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile_all */
extern T0* T69f56ac1(TC* ac, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_classes */
extern void T69f67(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_3 */
extern void T69f83(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_3_metrics */
extern void T69f95(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_metrics */
extern void T69f103(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.report_processor_metrics */
extern void T69f104(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.report_processed_class_count_stack */
extern void T69f105(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.total_processed_class_count */
extern T6 T69f40(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_implementation_internal_error */
extern void T69f94(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_implementation_validity */
extern void T69f93(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.reset_processed_class_count */
extern void T69f102(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.reset_total_processed_class_count */
extern void T69f101(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_4 */
extern void T69f82(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_4_metrics */
extern void T69f92(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_interface_internal_error */
extern void T69f91(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_interface_validity */
extern void T69f90(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_flattening_internal_error */
extern void T69f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.flatten_features */
extern void T69f88(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ancestors_internal_error */
extern void T69f87(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.build_ancestors */
extern void T69f86(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5 */
extern void T69f81(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.check_provider_validity */
extern void T69f85(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5_2 */
extern void T69f84(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.report_degree_5_2_metrics */
extern void T69f100(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_syntax_internal_error */
extern void T69f99(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.parse_classes */
extern void T69f98(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.remove_unmarked_classes */
extern void T69f97(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].keep_first */
extern void T507f18(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].replace */
extern void T507f17(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_marked */
extern T1 T79f180(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.parse_marked_classes */
extern void T69f96(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.nested_benchmark_start_time */
extern T0* T69f43(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern void T398f58(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern T0* T398f58ac1(TC* ac, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_classes */
extern void T398f69(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_3 */
extern void T398f83(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_3_metrics */
extern void T398f98(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_metrics */
extern void T398f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics_recursive */
extern void T398f107(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics */
extern void T398f108(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_processed_class_count_stack */
extern void T398f109(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count */
extern T6 T398f42(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].item */
extern T0* T758f7(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count_recursive */
extern T6 T398f41(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_implementation_internal_error */
extern void T398f97(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T398f96(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern T0* T398f96ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T398f96p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.reset_processed_class_count */
extern void T398f105(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.reset_total_processed_class_count */
extern void T398f104(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.tokens */
extern T0* T398f48(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_4 */
extern void T398f82(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_4_metrics */
extern void T398f95(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_interface_internal_error */
extern void T398f94(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_interface_validity */
extern void T398f93(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flattening_internal_error */
extern void T398f92(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.flatten_features */
extern void T398f91(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ancestors_internal_error */
extern void T398f90(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.build_ancestors */
extern void T398f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_5 */
extern void T398f81(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_MULTIPROCESSOR.check_provider_validity */
extern void T398f88(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_5_2 */
extern void T398f87(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_5_2_metrics */
extern void T398f103(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_syntax_internal_error */
extern void T398f102(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T398f101(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern T0* T398f101ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T398f101p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.remove_unmarked_classes */
extern void T398f100(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T398f99(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern T0* T398f99ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T398f99p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.nested_benchmark_start_time */
extern T0* T398f45(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T68f87(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T76c101(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_map */
extern T0* T404c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T404f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T404f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T404f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T404f25(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T762c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_slots */
extern void T404f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_clashes */
extern void T404f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_key_storage */
extern void T404f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_item_storage */
extern void T404f43(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern T0* T76f83(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T76f92(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern T0* T76f72(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T76f108(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern void T76f108p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T68f86(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T68f85(TC* ac, T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T25f45(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T68f84(TC* ac, T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T25f44(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T68f83(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T68c82(TC* ac, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T68f82ac1(TC* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T235c13(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make */
extern T0* T231c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_with_equality_testers */
extern void T231f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_sparse_container */
extern void T231f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].set_internal_cursor */
extern void T231f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_cursor */
extern T0* T231f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make */
extern T0* T648c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_slots */
extern void T231f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_clashes */
extern void T231f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_key_storage */
extern void T231f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_item_storage */
extern void T231f49(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T68f89(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile */
extern void T69f55(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile */
extern T0* T69f55ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM_PROCESSOR.compile */
extern T0* T69f55ac2(TC* ac, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_marked_classes */
extern void T69f68(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile */
extern void T398f57(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T398f57ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T398f57ac2(TC* ac, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_marked_classes */
extern void T398f70(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.benchmark_start_time */
extern T0* T69f41(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.benchmark_start_time */
extern T0* T398f43(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode */
extern void T69f54(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode_only */
extern void T69f66(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode */
extern void T398f56(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode_only */
extern void T398f68(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode */
extern void T69f53(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode_only */
extern void T69f65(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_mode */
extern void T398f55(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_mode_only */
extern void T398f67(TC* ac, T0* C, T1 a1);
/* GEC.is_gelint */
extern T1 T25f43(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_metrics_shown */
extern void T69f52(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_metrics_shown_only */
extern void T69f64(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown */
extern void T398f54(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown_only */
extern void T398f66(TC* ac, T0* C, T1 a1);
/* GEC.is_metrics */
extern T1 T25f42(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown */
extern void T69f51(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown_only */
extern void T69f63(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown */
extern void T398f53(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown_only */
extern void T398f65(TC* ac, T0* C, T1 a1);
/* GEC.is_nested_benchmark */
extern T1 T25f41(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_benchmark_shown */
extern void T69f50(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_benchmark_shown_only */
extern void T69f62(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown */
extern void T398f52(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown_only */
extern void T398f64(TC* ac, T0* C, T1 a1);
/* GEC.is_silent */
extern T1 T25f50(TC* ac, T0* C);
/* GEC.is_no_benchmark */
extern T1 T25f40(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ise_version */
extern void T69f49(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ise_version_only */
extern void T69f61(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ecma_version_only */
extern void T69f80(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ise_version */
extern void T398f51(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ise_version_only */
extern void T398f63(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_default_keyword_usage_only */
extern void T398f80(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_ecma_version_only */
extern void T398f79(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_detachable_keyword_only */
extern void T398f78(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_attached_keyword_only */
extern void T398f77(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_reference_keyword_only */
extern void T398f76(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_note_keyword_only */
extern void T398f75(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_attribute_keyword_only */
extern void T398f74(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler */
extern void T69f48(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler_only */
extern void T69f60(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_error_handler */
extern void T398f50(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_error_handler_only */
extern void T398f62(TC* ac, T0* C, T0* a1);
/* GEC.thread_count */
extern T6 T25f39(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_verbose */
extern void T58f191(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.set_verbose */
extern void T41f191(TC* ac, T0* C, T1 a1);
/* GEC.is_verbose */
extern T1 T25f38(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T58f190(TC* ac, T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T41f190(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T42f63(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T42f65(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T42f21(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T42f70(TC* ac, T0* C, T14 a1);
/* GEC.parse_ecf_file */
extern void T25f66(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_boolean */
extern T1 T834f68(TC* ac, T0* C);
/* UC_STRING.to_boolean */
extern T1 T454f68(TC* ac, T0* C);
/* STRING_8.to_boolean */
extern T1 T17f45(TC* ac, T0* C);
/* UC_UTF8_STRING.is_boolean */
extern T1 T834f66(TC* ac, T0* C);
/* UC_STRING.is_boolean */
extern T1 T454f67(TC* ac, T0* C);
/* STRING_8.is_boolean */
extern T1 T17f44(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.has_error */
extern T1 T61f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T60f218(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T60f218ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T60f218ac2(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]].set_rout_disp_final */
extern void T175f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.build_system */
extern void T60f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.build_system */
extern T0* T60f221ac1(TC* ac);
/* ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T212f35(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_read_only */
extern void T191f127(TC* ac, T0* C, T1 a1);
/* ET_LIBRARY.set_read_only */
extern void T910f167(TC* ac, T0* C, T1 a1);
/* DS_CELL [detachable ET_ECF_SYSTEM].put */
extern void T167f3(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].wipe_out */
extern void T180f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_wipe_out */
extern void T180f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_wipe_out */
extern void T180f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_wipe_out */
extern void T180f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_wipe_out */
extern void T180f42(TC* ac, T0* C);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T557f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T557f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].unset_found_item */
extern void T180f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].move_all_cursors_after */
extern void T180f40(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_next_cursor */
extern void T560f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_after */
extern void T560f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].wipe_out */
extern void T178f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_wipe_out */
extern void T178f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_wipe_out */
extern void T178f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_wipe_out */
extern void T178f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_wipe_out */
extern void T178f52(TC* ac, T0* C);
/* SPECIAL [ET_ECF_LIBRARY].keep_head */
extern void T553f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].set_count */
extern void T553f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].unset_found_item */
extern void T178f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].move_all_cursors_after */
extern void T178f50(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_next_cursor */
extern void T552f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_after */
extern void T552f9(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T60f225(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].force_last_new */
extern void T180f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_put */
extern void T180f51(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_put */
extern void T180f50(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].force */
extern void T561f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T557f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T557f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_put */
extern void T180f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_put */
extern void T180f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_item */
extern T6 T180f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].hash_position */
extern T6 T180f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].resize */
extern void T180f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_resize */
extern void T180f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].special_integer_ */
extern T0* T180f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_resize */
extern void T180f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_resize */
extern void T180f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T561f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T557f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_item */
extern T0* T180f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_item */
extern T6 T180f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_resize */
extern void T180f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_modulus */
extern T6 T180f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_capacity */
extern T6 T180f21(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T166f2(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T216c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T216f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T216f110(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T216f152(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T216f151(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T216f150(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T216f149(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T216f148(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T216f147(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T216f146(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T216f145(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T216f144(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T216f143(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T216f142(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T216f141(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T216f140(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T216f139(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T216f138(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T216f137(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T216f136(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T216f135(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T216f134(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T216f133(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T216f132(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T216f131(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T216f130(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T216f129(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T216f128(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T216f127(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T216f126(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T216f125(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T216f124(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_8_type */
extern void T216f123(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T216f122(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T216f121(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T216f120(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T216f119(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T216f118(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T216f117(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T216f116(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T216f115(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T216f114(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T216f113(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T216f112(TC* ac, T0* C);
/* ET_MASTER_CLASS.add_first_imported_class */
extern void T485f53(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_first */
extern void T993f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put */
extern void T993f23(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_right */
extern void T993f30(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_right */
extern void T993f29(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put_last */
extern void T993f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T216f111(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T216f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T216f90(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T216f108(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T216f107(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T216f89(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T218f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found_item */
extern T0* T180f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_item */
extern T0* T180f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found */
extern T1 T180f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search */
extern void T180f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search_position */
extern void T180f46(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T60f26(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.full_filename */
extern T0* T60f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T60f19(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T60f18(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T60f34(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.pathname */
extern T0* T218f22(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T215f2(TC* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_class_mappings */
extern void T64f56(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_class_mapping */
extern void T63f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.set_mapped_class */
extern void T485f80(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_class_mapping */
extern void T191f182(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_iterator */
extern T0* T219f44(TC* ac, T0* C);
/* ET_ECF_TARGET.fill_options */
extern void T64f55(TC* ac, T0* C, T0* a1);
extern T1 T64f55ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.set_trace_mode */
extern void T63f250(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T63f249(TC* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T191f181(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_iteration_mode */
extern void T63f248(TC* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_iteration_mode */
extern void T191f180(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T63f247(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T191f179(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.tokens */
extern T0* T64f29(TC* ac, T0* C);
/* ET_ECF_OPTIONS.value */
extern T0* T473f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_capabilities */
extern void T64f62(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T63f261(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T63f260(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_scoop_mode */
extern void T63f259(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T63f258(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.string_ */
extern T0* T64f30(TC* ac, T0* C);
/* ET_ECF_CAPABILITIES.support_value */
extern T0* T66f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.use_value */
extern T0* T66f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].found_item */
extern T0* T226f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_item */
extern T0* T226f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].found */
extern T1 T226f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].search */
extern void T226f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].search_position */
extern void T226f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].hash_position */
extern T6 T226f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_item */
extern T0* T226f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_item */
extern T6 T226f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_item */
extern T6 T226f23(TC* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_settings */
extern void T64f61(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_inlining_size */
extern void T63f257(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_inlining_mode */
extern void T63f256(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_line_generation_mode */
extern void T63f255(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_total_order_on_reals_mode */
extern void T63f254(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T63f253(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_console_application_mode */
extern void T63f252(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.fill_root */
extern void T64f60(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.fill_root */
extern void T874f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_creation */
extern void T63f275(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_type */
extern void T63f274(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T875f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.unset_root_type */
extern void T63f276(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].forth */
extern void T178f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_forth */
extern void T178f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].add_traversing_cursor */
extern void T178f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_position */
extern void T552f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].remove_traversing_cursor */
extern void T178f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_item */
extern T6 T178f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_for_iteration */
extern T0* T178f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_item */
extern T0* T178f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_item */
extern T0* T178f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T178f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_after */
extern T1 T178f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T552f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].start */
extern void T178f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_start */
extern void T178f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_off */
extern T1 T178f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].off */
extern T1 T552f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].is_empty */
extern T1 T178f23(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T60f224(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_libraries */
extern T0* T60f224ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_library */
extern void T60f228(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_CELL [detachable ET_ECF_LIBRARY].put */
extern void T211f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_library */
extern T0* T60f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].force_last_new */
extern void T178f46(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_put */
extern void T178f61(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_put */
extern void T178f60(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].force */
extern void T556f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].fill_with */
extern void T553f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].extend */
extern void T553f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_put */
extern void T178f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_put */
extern void T178f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_item */
extern T6 T178f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].hash_position */
extern T6 T178f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].resize */
extern void T178f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_resize */
extern void T178f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].special_integer_ */
extern T0* T178f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_resize */
extern void T178f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_resize */
extern void T178f66(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T556f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T553f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_item */
extern T0* T178f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_resize */
extern void T178f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_modulus */
extern T6 T178f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_capacity */
extern T6 T178f36(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T60f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f229ot1(TC* ac, T0* a1);
extern T1 T60f229ot2(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.set_library_target */
extern void T191f129(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T189f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_library_target */
extern void T63f223(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eltm_error */
extern void T61f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_error */
extern void T61f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T61f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T61f32p1(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.message */
extern T0* T61f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.default_message */
extern T0* T220f9(TC* ac, T0* C);
/* ET_ECF_ERROR.message */
extern T0* T220f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.arguments */
extern T0* T220f6(TC* ac, T0* C);
/* ET_ECF_ERROR.string_ */
extern T0* T220f8(TC* ac, T0* C);
/* ET_ECF_ERROR.make_eltm */
extern T0* T220c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.filename */
extern T0* T220f14(TC* ac, T0* C);
/* ET_ECF_ERROR.default_message_template */
extern T0* T220f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.add_dependent_universes */
extern void T220f116(TC* ac, T0* C, T0* a1);
extern T1 T220f116ot1(TC* ac, T0* a1);
/* ET_ECF_TARGET.parent_path */
extern T0* T64f31(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].put_last */
extern void T966f16(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].force */
extern void T1695f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET_PARENT].fill_with */
extern void T1694f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET_PARENT].extend */
extern void T1694f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make */
extern void T966f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make */
extern T0* T966c13(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].set_internal_cursor */
extern void T966f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].new_cursor */
extern T0* T966f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT].make */
extern T0* T1696c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].make */
extern T0* T1695f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_TARGET_PARENT].make_empty */
extern T0* T1694c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].default_create */
extern T0* T1695c3(TC* ac);
/* ET_ECF_ERROR.add_parent_path */
extern void T220f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].item */
extern T0* T966f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].force_last */
extern void T966f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].resize */
extern void T966f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1695f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1694f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].new_capacity */
extern T6 T966f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].extendible */
extern T1 T966f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make_default */
extern T0* T966c11(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].default_capacity */
extern T6 T966f8(TC* ac, T0* C);
/* ET_ECF_LIBRARY.library */
extern T0* T191f12(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T189f3(TC* ac, T0* C);
/* ET_ECF_SYSTEM.universe */
extern T0* T63f14(TC* ac, T0* C);
/* ET_ECF_TARGETS.target_by_name */
extern T0* T207f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.string_ */
extern T0* T207f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].item */
extern T0* T963f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_etam_error */
extern void T61f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_etam */
extern T0* T220c104(TC* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.is_empty */
extern T1 T207f5(TC* ac, T0* C);
/* ET_ECF_TARGETS.count */
extern T6 T207f3(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].forth */
extern void T476f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_forth */
extern void T951f15(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].add_traversing_cursor */
extern void T951f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_next_cursor */
extern void T476f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T951f20(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set */
extern void T476f15(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_ECF_LIBRARY.set_uuid */
extern void T191f128(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T189f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_uuid */
extern void T63f222(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatb_error */
extern void T61f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatb */
extern T0* T220c103(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T60f53(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_POSITION_TABLE.item */
extern T0* T173f2(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T955f11(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T956f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T956f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T955f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T956f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T955f12(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T955f10(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T956f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T955f13(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T956f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].off */
extern T1 T955f7(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T955f6(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T955f9(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T956f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T956f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T955c8(TC* ac, T0* a1);
/* XM_POSITION_TABLE.has */
extern T1 T173f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T60f52(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T189f18(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_read_only */
extern void T63f221(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T60f51(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_targets */
extern void T191f126(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T189f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_targets */
extern void T63f220(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_targets */
extern T0* T60f48(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_ECF_TARGETS.put_last */
extern void T207f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].force_last */
extern void T963f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].force */
extern void T621f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].fill_with */
extern void T619f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].extend */
extern void T619f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].resize */
extern void T963f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].aliased_resized_area */
extern T0* T621f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET].aliased_resized_area */
extern T0* T619f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_capacity */
extern T6 T963f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].extendible */
extern T1 T963f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_targets */
extern T0* T166f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.make */
extern T0* T207c8(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].put_last */
extern void T963f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].make */
extern T0* T963c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].set_internal_cursor */
extern void T963f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_cursor */
extern T0* T963f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET].make */
extern T0* T1690c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].make */
extern T0* T621f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_TARGET].make_empty */
extern T0* T619c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].default_create */
extern T0* T621c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T60f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
extern T1 T60f80ot1(TC* ac, T0* a1);
extern T1 T60f80ot2(TC* ac, T0* a1);
/* ET_ECF_TARGET.set_notes */
extern void T64f53(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_post_compile_actions */
extern void T64f52(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_pre_compile_actions */
extern void T64f51(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_resources */
extern void T64f50(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_objects */
extern void T64f49(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_makes */
extern void T64f48(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_linker_flags */
extern void T64f47(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_libraries */
extern void T64f46(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_includes */
extern void T64f45(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_cflags */
extern void T64f44(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_class_mappings */
extern void T64f43(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_file_rules */
extern void T64f42(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_dotnet_assemblies */
extern void T64f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_libraries */
extern void T64f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_clusters */
extern void T64f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_target_options */
extern void T60f250(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_options */
extern void T60f252(TC* ac, T0* C, T0* a1);
/* ET_ECF_OPTIONS.set_primary_value */
extern void T473f15(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_value */
extern T0* T473f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.primary_value */
extern T0* T62f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_capabilities */
extern void T60f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_5_0 */
extern T0* T60f76(TC* ac, T0* C);
/* ET_ECF_CAPABILITIES.set_primary_use_value */
extern void T66f14(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.set_primary_use_value_id */
extern void T66f15(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].force_last */
extern void T226f42(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_put */
extern void T226f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_put */
extern void T226f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_put */
extern void T226f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].resize */
extern void T226f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_resize */
extern void T226f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].special_integer_ */
extern T0* T226f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_resize */
extern void T226f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_resize */
extern void T226f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_resize */
extern void T226f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_modulus */
extern T6 T226f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_capacity */
extern T6 T226f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_put */
extern void T226f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].unset_found_item */
extern void T226f44(TC* ac, T0* C);
/* ET_ECF_CAPABILITIES.set_primary_support_value */
extern void T66f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_11_0 */
extern T0* T60f62(TC* ac, T0* C);
/* ET_ECF_CAPABILITIES.primary_use_value */
extern T0* T66f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_use_value_id */
extern T0* T66f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_support_value */
extern T0* T66f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_abstract */
extern void T64f38(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.set_version */
extern void T64f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_version */
extern T0* T60f124(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VERSION.set_copyright */
extern void T859f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_company */
extern void T859f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_product */
extern void T859f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.make_major */
extern T0* T859c11(TC* ac, T6 a1);
/* ET_ECF_VERSION.make_major_minor */
extern T0* T859c10(TC* ac, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eats_error */
extern void T61f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eats */
extern T0* T220c107(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VERSION.make_major_minor_release */
extern T0* T859c9(TC* ac, T6 a1, T6 a2, T6 a3);
/* ET_ECF_VERSION.make */
extern T0* T859c8(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_ECF_ERROR_HANDLER.report_eati_error */
extern void T61f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eati */
extern T0* T220c106(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_variable */
extern void T60f248(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VARIABLES.set_primary_value */
extern void T67f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_VARIABLES.primary_value */
extern T0* T67f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_setting */
extern void T60f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_TARGET.set_root */
extern void T64f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T60f120(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ROOT_CLASS.set_cluster_name */
extern void T874f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T874f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_class */
extern T0* T166f25(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.make */
extern T0* T874c4(TC* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T166f24(TC* ac, T0* C);
/* ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T875c1(TC* ac);
/* ET_ECF_TARGET.set_precompiled_library */
extern void T64f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T60f118(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T60f118ac1(TC* ac, T0* a1);
extern T1 T60f118ot1(TC* ac, T0* a1);
extern T1 T60f118ot2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_ECF_OPTIONS]].set_rout_disp_final */
extern void T873f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_conditions */
extern void T857f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_visible_classes */
extern void T857f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_renamings */
extern void T857f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_options */
extern void T857f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].do_all */
extern void T870f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_item */
extern T0* T870f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_item */
extern T6 T870f28(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_options */
extern void T857f25(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_use_application_options */
extern void T857f24(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_read_only */
extern void T857f23(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_classname_prefix */
extern void T857f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_eifgens_location */
extern void T857f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_visible_classes */
extern T0* T60f147(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].force_last */
extern void T871f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].force */
extern void T1659f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].fill_with */
extern void T1660f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].extend */
extern void T1660f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].resize */
extern void T871f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1659f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1660f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].new_capacity */
extern T6 T871f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].extendible */
extern T1 T871f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_visible_classes */
extern T0* T166f42(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].make */
extern T0* T871c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].set_internal_cursor */
extern void T871f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].new_cursor */
extern T0* T871f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS].make */
extern T0* T1661c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].make */
extern T0* T1659f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].make_empty */
extern T0* T1660c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].default_create */
extern T0* T1659c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_visible_class */
extern T0* T60f179(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VISIBLE_CLASS.set_new_feature_name */
extern void T878f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_new_class_name */
extern void T878f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_feature_name */
extern void T878f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_visible_class */
extern T0* T166f45(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.make */
extern T0* T878c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_renamings */
extern T0* T60f145(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_renaming */
extern void T60f253(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_eatd_error */
extern void T61f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatd */
extern T0* T220c115(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_renamings */
extern T0* T166f41(TC* ac, T0* C);
/* ET_ECF_AST_FACTORY.case_insensitive_string_equality_tester */
extern T0* T166f53(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_options */
extern T0* T60f143(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_AST_FACTORY.new_options */
extern T0* T166f40(TC* ac, T0* C);
/* ET_ECF_OPTIONS.make */
extern T0* T473c14(TC* ac);
/* Creation of agent #1 in feature ET_ECF_OPTIONS.make */
extern T0* T473f14ac1(TC* ac, T0* a1);
/* FUNCTION [TUPLE [STRING_8], INTEGER_32].set_rout_disp_final */
extern void T223f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_hash_function */
extern void T219f51(TC* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].make */
extern T0* T221c3(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.string_ */
extern T0* T473f10(TC* ac, T0* C);
/* ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T473f9(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_description */
extern void T857f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_class_options */
extern T0* T60f142(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].force_last */
extern void T870f37(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_put */
extern void T870f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_put */
extern void T870f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_put */
extern void T870f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_item */
extern T6 T870f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].hash_position */
extern T6 T870f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].resize */
extern void T870f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_resize */
extern void T870f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].special_integer_ */
extern T0* T870f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_resize */
extern void T870f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_resize */
extern void T870f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1657f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1654f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_item */
extern T0* T870f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_resize */
extern void T870f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_modulus */
extern T6 T870f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_capacity */
extern T6 T870f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_put */
extern void T870f42(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].force */
extern void T1657f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_OPTIONS].fill_with */
extern void T1654f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_OPTIONS].extend */
extern void T1654f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].search_position */
extern void T870f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].unset_found_item */
extern void T870f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].found_item */
extern T0* T870f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].found */
extern T1 T870f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].search */
extern void T870f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_class_options */
extern T0* T166f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].set_key_equality_tester */
extern void T870f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_map */
extern T0* T870c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_with_equality_testers */
extern void T870f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_sparse_container */
extern void T870f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].set_internal_cursor */
extern void T870f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_cursor */
extern T0* T870f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].make */
extern T0* T1658c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_slots */
extern void T870f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_clashes */
extern void T870f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_key_storage */
extern void T870f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_item_storage */
extern void T870f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].make */
extern T0* T1657f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_OPTIONS].make_empty */
extern T0* T1654c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].default_create */
extern T0* T1657c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_conditions */
extern T0* T60f140(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T60f140ot1(TC* ac, T0* a1);
extern T1 T60f140ot2(TC* ac, T0* a1);
/* ET_ECF_ORED_CONDITIONS.put_last */
extern void T876f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].force_last */
extern void T1662f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].force */
extern void T1955f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].fill_with */
extern void T1956f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].extend */
extern void T1956f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].resize */
extern void T1662f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T1955f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T1956f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].new_capacity */
extern T6 T1662f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].extendible */
extern T1 T1662f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_ored_conditions */
extern T0* T166f38(TC* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.make */
extern T0* T876c6(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].put_last */
extern void T1662f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1662c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].set_internal_cursor */
extern void T1662f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].new_cursor */
extern T0* T1662f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1957c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1955f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].make_empty */
extern T0* T1956c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].default_create */
extern T0* T1955c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T60f178(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f178ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T60f196(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T61f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabj */
extern T0* T220c114(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.make */
extern T0* T889c7(TC* ac, T0* a1, T0* a2);
/* ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T888c7(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T61f45(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabi */
extern T0* T220c113(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T61f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_eabh */
extern T0* T220c112(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T61f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabg */
extern T0* T220c111(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T61f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabf */
extern T0* T220c110(TC* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.make_major_minor_revision */
extern T0* T51c21(TC* ac, T6 a1, T6 a2, T6 a3);
/* UT_VERSION.make_major_minor */
extern T0* T51c18(TC* ac, T6 a1, T6 a2);
/* UT_VERSION.make_major */
extern T0* T51c17(TC* ac, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T60f195(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eatn_error */
extern void T61f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatn */
extern T0* T220c109(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T166f52(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_PLATFORM_CONDITION.make */
extern T0* T886c9(TC* ac, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T886c8(TC* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatx_error */
extern void T61f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatx */
extern T0* T220c108(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T60f193(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T166f47(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T881c18(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T881c17(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T60f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T166f51(TC* ac, T0* C, T1 a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T885c5(TC* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T60f189(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T166f50(TC* ac, T0* C, T1 a1);
/* ET_ECF_DOTNET_CONDITION.make */
extern T0* T884c5(TC* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T60f187(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T166f49(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_ECF_CUSTOM_CONDITION.make */
extern T0* T883c13(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T883c12(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_void_safety_condition */
extern T0* T60f185(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_void_safety_condition */
extern T0* T166f48(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_VOID_SAFETY_CONDITION.make */
extern T0* T882c18(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.make_excluded */
extern T0* T882c17(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T60f183(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.put_last */
extern void T877f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].force_last */
extern void T1663f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].force */
extern void T1958f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION_ITEM].fill_with */
extern void T1959f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION_ITEM].extend */
extern void T1959f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].resize */
extern void T1663f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T1958f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T1959f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].new_capacity */
extern T6 T1663f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].extendible */
extern T1 T1663f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T60f181(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T166f46(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_BUILD_CONDITION.make */
extern T0* T880c8(TC* ac, T0* a1);
/* ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T880c7(TC* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_anded_conditions */
extern T0* T166f44(TC* ac, T0* C);
/* ET_ECF_ANDED_CONDITIONS.make_empty */
extern T0* T877c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].make */
extern T0* T1663c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].set_internal_cursor */
extern void T1663f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].new_cursor */
extern T0* T1663f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM].make */
extern T0* T1960c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].make */
extern T0* T1958f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CONDITION_ITEM].make_empty */
extern T0* T1959c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].default_create */
extern T0* T1958c3(TC* ac);
/* ET_ECF_AST_FACTORY.new_adapted_precompiled_library */
extern T0* T166f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make */
extern T0* T857c19(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make_adapted_library */
extern void T857f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.default_read_only_value */
extern T1 T857f18(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_library */
extern T0* T78f243(TC* ac, T0* C);
/* ET_LIBRARY.make */
extern T0* T910c106(TC* ac, T0* a1, T0* a2);
/* ET_LIBRARY.make_from_system */
extern void T910f107(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_kernel_types */
extern void T910f111(TC* ac, T0* C);
/* ET_LIBRARY.set_wide_character_type */
extern void T910f153(TC* ac, T0* C);
/* ET_LIBRARY.tokens */
extern T0* T910f95(TC* ac, T0* C);
/* ET_LIBRARY.set_typed_pointer_type */
extern void T910f152(TC* ac, T0* C);
/* ET_LIBRARY.set_type_type */
extern void T910f151(TC* ac, T0* C);
/* ET_LIBRARY.set_system_string_type */
extern void T910f150(TC* ac, T0* C);
/* ET_LIBRARY.set_system_object_type */
extern void T910f149(TC* ac, T0* C);
/* ET_LIBRARY.set_string_type */
extern void T910f148(TC* ac, T0* C);
/* ET_LIBRARY.set_string_32_type */
extern void T910f147(TC* ac, T0* C);
/* ET_LIBRARY.set_string_8_type */
extern void T910f146(TC* ac, T0* C);
/* ET_LIBRARY.set_special_type */
extern void T910f145(TC* ac, T0* C);
/* ET_LIBRARY.set_routine_type */
extern void T910f144(TC* ac, T0* C);
/* ET_LIBRARY.set_real_64_type */
extern void T910f143(TC* ac, T0* C);
/* ET_LIBRARY.set_real_32_type */
extern void T910f142(TC* ac, T0* C);
/* ET_LIBRARY.set_real_type */
extern void T910f141(TC* ac, T0* C);
/* ET_LIBRARY.set_procedure_type */
extern void T910f140(TC* ac, T0* C);
/* ET_LIBRARY.set_predicate_type */
extern void T910f139(TC* ac, T0* C);
/* ET_LIBRARY.set_pointer_type */
extern void T910f138(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_64_type */
extern void T910f137(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_32_type */
extern void T910f136(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_16_type */
extern void T910f135(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_8_type */
extern void T910f134(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_type */
extern void T910f133(TC* ac, T0* C);
/* ET_LIBRARY.set_iterable_type */
extern void T910f132(TC* ac, T0* C);
/* ET_LIBRARY.set_ise_exception_manager_type */
extern void T910f131(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_64_type */
extern void T910f130(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_32_type */
extern void T910f129(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_16_type */
extern void T910f128(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_8_type */
extern void T910f127(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_type */
extern void T910f126(TC* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_32_type */
extern void T910f125(TC* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_8_type */
extern void T910f124(TC* ac, T0* C);
/* ET_LIBRARY.set_function_type */
extern void T910f123(TC* ac, T0* C);
/* ET_LIBRARY.set_exception_manager_type */
extern void T910f122(TC* ac, T0* C);
/* ET_LIBRARY.set_exception_type */
extern void T910f121(TC* ac, T0* C);
/* ET_LIBRARY.set_double_type */
extern void T910f120(TC* ac, T0* C);
/* ET_LIBRARY.set_character_32_type */
extern void T910f119(TC* ac, T0* C);
/* ET_LIBRARY.set_character_8_type */
extern void T910f118(TC* ac, T0* C);
/* ET_LIBRARY.set_character_type */
extern void T910f117(TC* ac, T0* C);
/* ET_LIBRARY.set_boolean_type */
extern void T910f116(TC* ac, T0* C);
/* ET_LIBRARY.set_array_type */
extern void T910f115(TC* ac, T0* C);
/* ET_LIBRARY.set_tuple_type */
extern void T910f114(TC* ac, T0* C);
/* ET_LIBRARY.set_none_type */
extern void T910f113(TC* ac, T0* C);
/* ET_LIBRARY.set_any_type */
extern void T910f112(TC* ac, T0* C);
/* ET_LIBRARY.make_adapted */
extern void T910f110(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.default_read_only_value */
extern T1 T910f91(TC* ac, T0* C);
/* ET_LIBRARY.set_unknown_kernel_types */
extern void T910f109(TC* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T910f108(TC* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T910f108p1(TC* ac, T0* C);
/* ET_LIBRARY.class_name_tester */
extern T0* T910f90(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.tokens */
extern T0* T857f17(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_actions */
extern T0* T60f115(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].force_last */
extern void T856f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].force */
extern void T1650f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ACTION].fill_with */
extern void T1651f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ACTION].extend */
extern void T1651f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].resize */
extern void T856f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].aliased_resized_area */
extern T0* T1650f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ACTION].aliased_resized_area */
extern T0* T1651f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].new_capacity */
extern T6 T856f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].extendible */
extern T1 T856f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_actions */
extern T0* T166f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].make */
extern T0* T856c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].set_internal_cursor */
extern void T856f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].new_cursor */
extern T0* T856f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION].make */
extern T0* T1652c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].make */
extern T0* T1650f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ACTION].make_empty */
extern T0* T1651c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].default_create */
extern T0* T1650c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_action */
extern T0* T60f138(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f138ot1(TC* ac, T0* a1);
extern T1 T60f138ot2(TC* ac, T0* a1);
/* ET_ECF_ACTION.set_conditions */
extern void T869f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_working_directory */
extern void T869f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_must_succeed */
extern void T869f8(TC* ac, T0* C, T1 a1);
/* ET_ECF_ACTION.set_description */
extern void T869f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_action */
extern T0* T166f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.make */
extern T0* T869c6(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_options */
extern void T60f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T60f246ot1(TC* ac, T0* a1);
extern T1 T60f246ot2(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.set_description */
extern void T473f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_warning */
extern void T60f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_warning_value */
extern void T473f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_warning_value */
extern T0* T473f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_1_21_0 */
extern T0* T60f67(TC* ac, T0* C);
/* ET_ECF_LIBRARY.ecf_version */
extern T0* T191f4(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.ecf_version */
extern T0* T189f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM.ecf_version */
extern T0* T63f124(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.add_debug */
extern void T60f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_debug_value */
extern void T473f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_debug_value */
extern T0* T473f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_assertions */
extern void T60f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T60f258ot1(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.set_primary_assertion_value */
extern void T473f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_assertion_value */
extern T0* T473f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_mappings */
extern T0* T60f112(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_mapping */
extern void T60f251(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_mappings */
extern T0* T166f21(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_adapted_libraries */
extern T0* T60f110(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T846f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T1640f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].force */
extern void T1923f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T1922f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].extend */
extern void T1922f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].resize */
extern void T1640f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1923f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1922f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T1640f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T1640f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T166f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T846c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T1640f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1640c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1640f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T1640f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1924c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1923f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T1922c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T1923c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T60f137(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T60f137ac1(TC* ac, T0* a1);
extern T1 T60f137ot1(TC* ac, T0* a1);
extern T1 T60f137ot2(TC* ac, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_notes */
extern void T212f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_conditions */
extern void T212f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_visible_classes */
extern void T212f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T212f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_options */
extern void T212f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_options */
extern void T212f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_use_application_options */
extern void T212f26(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T212f25(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T212f24(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_description */
extern void T212f23(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T166f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T212c22(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T212f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T212f18(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T212f17(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_override_clusters */
extern T0* T60f108(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_AST_FACTORY.new_clusters */
extern T0* T166f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make */
extern T0* T845c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].put_last */
extern void T1639f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T60f136(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T60f136ac1(TC* ac, T0* a1);
extern T1 T60f136ot1(TC* ac, T0* a1);
extern T1 T60f136ot2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_conditions */
extern void T860f83(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_file_rules */
extern void T860f76(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_subclusters */
extern void T860f75(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_provider_groups */
extern T0* T60f167(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_provider_group */
extern void T60f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_provider_groups */
extern T0* T166f43(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_overridden_group */
extern T0* T60f174(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_description */
extern void T860f70(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_cluster */
extern T0* T166f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_CLUSTER.make */
extern T0* T860c69(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_file_rules */
extern T0* T60f106(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_FILE_RULES.put_last */
extern void T848f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].force_last */
extern void T1642f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].force */
extern void T1928f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].fill_with */
extern void T1929f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].extend */
extern void T1929f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].resize */
extern void T1642f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1928f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1929f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_capacity */
extern T6 T1642f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].extendible */
extern T1 T1642f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T166f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.make */
extern T0* T848c4(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].put_last */
extern void T1642f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].make */
extern T0* T1642c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].set_internal_cursor */
extern void T1642f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_cursor */
extern T0* T1642f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE].make */
extern T0* T1930c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].make */
extern T0* T1928f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_FILE_RULE].make_empty */
extern T0* T1929c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].default_create */
extern T0* T1928c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T60f135(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f135ot1(TC* ac, T0* a1);
/* ET_ECF_FILE_RULE.set_description */
extern void T868f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULE.set_conditions */
extern void T868f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T166f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.make */
extern T0* T868c11(TC* ac, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T868f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T399f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T1653f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].force */
extern void T1952f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T1953f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T1953f7(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T87f307(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T399f6(TC* ac, T0* C);
/* ET_ECF_FILE_RULE.operating_system */
extern T0* T868f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T399f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1653c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T1653f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T1653f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1954c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1952f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T1953c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T1952c2(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resources */
extern T0* T60f104(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_RESOURCES.put_last */
extern void T855f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].force_last */
extern void T1649f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].force */
extern void T1949f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].fill_with */
extern void T1950f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].extend */
extern void T1950f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].resize */
extern void T1649f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T1949f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T1950f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].new_capacity */
extern T6 T1649f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].extendible */
extern T1 T1649f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_resources */
extern T0* T166f18(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCES.make */
extern T0* T855c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].put_last */
extern void T1649f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1649c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].set_internal_cursor */
extern void T1649f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].new_cursor */
extern T0* T1649f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1951c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1949f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].make_empty */
extern T0* T1950c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].default_create */
extern T0* T1949c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resource */
extern T0* T60f134(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f134ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.set_conditions */
extern void T867f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.set_description */
extern void T867f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_resource */
extern T0* T166f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.make */
extern T0* T867c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_objects */
extern T0* T60f102(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T854f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T1648f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].force */
extern void T1946f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T1947f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].extend */
extern void T1947f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].resize */
extern void T1648f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1946f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1947f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T1648f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T1648f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T166f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T854c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T1648f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1648c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T1648f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T1648f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1948c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1946f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T1947c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T1946c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T60f133(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f133ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.set_conditions */
extern void T866f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.set_description */
extern void T866f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_object */
extern T0* T166f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T866c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_makes */
extern T0* T60f100(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_MAKES.put_last */
extern void T853f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].force_last */
extern void T1647f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].force */
extern void T1943f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].fill_with */
extern void T1944f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].extend */
extern void T1944f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].resize */
extern void T1647f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T1943f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T1944f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].new_capacity */
extern T6 T1647f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].extendible */
extern T1 T1647f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_makes */
extern T0* T166f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKES.make */
extern T0* T853c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].put_last */
extern void T1647f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1647c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].set_internal_cursor */
extern void T1647f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].new_cursor */
extern T0* T1647f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1945c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1943f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].make_empty */
extern T0* T1944c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].default_create */
extern T0* T1943c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_make */
extern T0* T60f132(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f132ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.set_conditions */
extern void T865f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.set_description */
extern void T865f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_make */
extern T0* T166f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.make */
extern T0* T865c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flags */
extern T0* T60f98(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.put_last */
extern void T852f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].force_last */
extern void T1646f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].force */
extern void T1940f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].fill_with */
extern void T1941f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].extend */
extern void T1941f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].resize */
extern void T1646f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T1940f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T1941f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].new_capacity */
extern T6 T1646f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].extendible */
extern T1 T1646f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flags */
extern T0* T166f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.make */
extern T0* T852c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].put_last */
extern void T1646f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1646c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].set_internal_cursor */
extern void T1646f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].new_cursor */
extern T0* T1646f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1942c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1940f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].make_empty */
extern T0* T1941c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].default_create */
extern T0* T1940c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flag */
extern T0* T60f131(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f131ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_conditions */
extern void T864f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_description */
extern void T864f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flag */
extern T0* T166f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.make */
extern T0* T864c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_libraries */
extern T0* T60f96(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T851f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T1645f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].force */
extern void T1937f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T1938f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T1938f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T1645f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1937f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1938f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T1645f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T1645f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T166f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T851c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T1645f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1645c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T1645f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T1645f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1939c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1937f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T1938c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T1937c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T60f130(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f130ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.set_conditions */
extern void T863f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.set_description */
extern void T863f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_library */
extern T0* T166f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T863c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_includes */
extern T0* T60f94(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T850f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T1644f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].force */
extern void T1934f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T1935f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T1935f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T1644f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1934f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1935f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T1644f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T1644f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T166f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T850c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T1644f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1644c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T1644f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T1644f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1936c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1934f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T1935c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T1934c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T60f129(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f129ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.set_conditions */
extern void T862f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.set_description */
extern void T862f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_include */
extern T0* T166f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T862c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_cflags */
extern T0* T60f92(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_CFLAGS.put_last */
extern void T849f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].force_last */
extern void T1643f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].force */
extern void T1931f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].fill_with */
extern void T1932f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].extend */
extern void T1932f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].resize */
extern void T1643f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T1931f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T1932f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].new_capacity */
extern T6 T1643f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].extendible */
extern T1 T1643f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_cflags */
extern T0* T166f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAGS.make */
extern T0* T849c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].put_last */
extern void T1643f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1643c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].set_internal_cursor */
extern void T1643f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].new_cursor */
extern T0* T1643f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1933c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1931f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].make_empty */
extern T0* T1932c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].default_create */
extern T0* T1931c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_cflag */
extern T0* T60f128(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f128ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.set_conditions */
extern void T861f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.set_description */
extern void T861f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_cflag */
extern T0* T166f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.make */
extern T0* T861c5(TC* ac, T0* a1);
/* ET_ECF_TARGET.set_description */
extern void T64f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_clusters */
extern T0* T60f90(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T60f127(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T60f127ac1(TC* ac, T0* a1);
extern T1 T60f127ot1(TC* ac, T0* a1);
extern T1 T60f127ot2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_notes */
extern void T860f84(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_capabilities */
extern void T60f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T60f245ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assemblies */
extern T0* T60f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T847f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1641f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1926f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1925f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1925f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1641f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1926f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1925f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1641f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1641f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T166f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T847c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T1641f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1641c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1641f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1641f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1927c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1926f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1925c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1926c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T60f126(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T60f126ac1(TC* ac, T0* a1);
extern T1 T60f126ot1(TC* ac, T0* a1);
extern T1 T60f126ot2(TC* ac, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_notes */
extern void T218f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_conditions */
extern void T218f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T218f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_options */
extern void T218f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_options */
extern void T218f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T218f31(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T218f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_version */
extern void T218f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_name */
extern void T218f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_key */
extern void T218f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_culture */
extern void T218f26(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_description */
extern void T218f25(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T166f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T218c24(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T218f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T218f20(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern T0* T78f244(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make */
extern T0* T628c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.make_from_system */
extern void T628f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T628f110(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T628f152(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T628f151(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_type_type */
extern void T628f150(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T628f149(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T628f148(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_type */
extern void T628f147(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T628f146(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T628f145(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_special_type */
extern void T628f144(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T628f143(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T628f142(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T628f141(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_type */
extern void T628f140(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T628f139(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T628f138(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T628f137(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T628f136(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T628f135(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T628f134(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T628f133(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T628f132(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T628f131(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T628f130(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T628f129(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T628f128(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T628f127(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T628f126(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T628f125(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T628f124(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_8_type */
extern void T628f123(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_function_type */
extern void T628f122(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T628f121(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T628f120(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_double_type */
extern void T628f119(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T628f118(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T628f117(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_type */
extern void T628f116(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T628f115(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_array_type */
extern void T628f114(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T628f113(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_none_type */
extern void T628f112(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_any_type */
extern void T628f111(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make_adapted */
extern void T628f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T628f90(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T628f108(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.initialize */
extern void T628f107(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T628f89(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T218f19(TC* ac, T0* C);
/* ET_ECF_TARGET.set_parent */
extern void T64f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.execution_environment */
extern T0* T64f28(TC* ac, T0* C);
/* ET_ECF_VARIABLES.set_secondary_variables */
extern void T67f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET_PARENT.make */
extern T0* T204c4(TC* ac, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.set_secondary_options */
extern void T473f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.set_secondary_capabilities */
extern void T66f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.set_secondary_settings */
extern void T62f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_target */
extern T0* T166f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.make */
extern T0* T64c32(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.make */
extern T0* T66c13(TC* ac);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.make */
extern T0* T66f13ac1(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_hash_function */
extern void T226f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.string_ */
extern T0* T66f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_key_equality_tester */
extern void T226f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.case_insensitive_string_equality_tester */
extern T0* T66f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_map */
extern T0* T226c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_with_equality_testers */
extern void T226f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_sparse_container */
extern void T226f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_internal_cursor */
extern void T226f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_cursor */
extern T0* T226f28(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].make */
extern T0* T634c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_slots */
extern void T226f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_clashes */
extern void T226f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_key_storage */
extern void T226f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_item_storage */
extern void T226f56(TC* ac, T0* C, T6 a1);
/* ET_ECF_VARIABLES.make */
extern T0* T67c20(TC* ac);
/* Creation of agent #1 in feature ET_ECF_VARIABLES.make */
extern T0* T67f20ac1(TC* ac, T0* a1);
/* ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T67f4(TC* ac, T0* C);
/* ET_ECF_VARIABLES.execution_environment */
extern T0* T67f3(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_notes */
extern void T191f125(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T189f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_notes */
extern void T63f219(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_notes */
extern T0* T60f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].force_last */
extern void T474f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].force */
extern void T984f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].fill_with */
extern void T985f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].extend */
extern void T985f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].resize */
extern void T474f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T984f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T985f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].new_capacity */
extern T6 T474f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].extendible */
extern T1 T474f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_notes */
extern T0* T166f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make */
extern void T474f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make */
extern T0* T474c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].set_internal_cursor */
extern void T474f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].new_cursor */
extern T0* T474f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT].make */
extern T0* T986c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].make */
extern T0* T984f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].make_empty */
extern T0* T985c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].default_create */
extern T0* T984c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_note_element */
extern T0* T60f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T60f79ot1(TC* ac, T0* a1);
extern T1 T60f79ot2(TC* ac, T0* a1);
/* ET_ECF_NOTE_ELEMENT.set_content */
extern void T844f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_element */
extern void T844f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_attribute */
extern void T844f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_note */
extern T0* T166f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.make */
extern T0* T844c7(TC* ac, T0* a1);
/* Creation of agent #1 in feature ET_ECF_NOTE_ELEMENT.make */
extern T0* T844f7ac1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make_default */
extern T0* T474c14(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].default_capacity */
extern T6 T474f9(TC* ac, T0* C);
/* ET_ECF_NOTE_ELEMENT.string_ */
extern T0* T844f6(TC* ac, T0* C);
/* ET_ECF_NOTE_ELEMENT.case_insensitive_string_equality_tester */
extern T0* T844f5(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T219c94(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T219f46(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_description */
extern void T191f124(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_description */
extern void T189f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_description */
extern void T63f218(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.text */
extern T0* T172f14(TC* ac, T0* C);
extern T1 T172f14ot1(TC* ac, T0* a1);
/* XM_ELEMENT.string_ */
extern T0* T172f15(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T60f20(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].item */
extern T0* T476f8(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].start */
extern void T476f11(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_start */
extern void T951f14(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_off */
extern T1 T951f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].off */
extern T1 T476f9(TC* ac, T0* C);
/* XM_ELEMENT.new_cursor */
extern T0* T172f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].new_cursor */
extern T0* T951f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].make */
extern T0* T476c10(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options */
extern T0* T60f43(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_0_0 */
extern T0* T60f78(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_0_0 */
extern void T60f244(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_5_0 */
extern void T60f243(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_9_0 */
extern void T60f242(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_11_0 */
extern void T60f241(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_15_0 */
extern void T60f240(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_18_0 */
extern void T60f239(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_21_0 */
extern void T60f238(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_22_0 */
extern void T60f237(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_latest */
extern void T60f257(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_5_0 */
extern T0* T60f77(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_9_0 */
extern T0* T60f75(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_9_0 */
extern T0* T60f74(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_11_0 */
extern T0* T60f73(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_15_0 */
extern T0* T60f72(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_15_0 */
extern T0* T60f71(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_18_0 */
extern T0* T60f70(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_18_0 */
extern T0* T60f69(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_21_0 */
extern T0* T60f68(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_22_0 */
extern T0* T60f66(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_22_0 */
extern T0* T60f65(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities */
extern T0* T60f42(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_0_0 */
extern T0* T60f64(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_0_0 */
extern void T60f236(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_11_0 */
extern void T60f235(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_13_0 */
extern void T60f234(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_16_0 */
extern void T60f233(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_latest */
extern void T60f256(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_11_0 */
extern T0* T60f63(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_13_0 */
extern T0* T60f61(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_13_0 */
extern T0* T60f60(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_16_0 */
extern T0* T60f59(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_16_0 */
extern T0* T60f58(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_settings */
extern T0* T60f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_settings_1_0_0 */
extern T0* T60f57(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_1_0_0 */
extern void T60f232(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_1_20_0 */
extern void T60f231(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_latest */
extern void T60f255(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_settings_1_20_0 */
extern T0* T60f56(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_20_0 */
extern T0* T60f55(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_latest */
extern T0* T60f40(TC* ac, T0* C);
/* UT_VERSION.make_latest */
extern T0* T51c20(TC* ac);
/* ET_ECF_LIBRARY.set_ecf_version */
extern void T191f123(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T189f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_version */
extern void T63f217(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T60f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_namespace */
extern void T191f122(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T189f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_namespace */
extern void T63f216(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eate_error */
extern void T61f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eate */
extern T0* T220c102(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T60f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found_item */
extern T0* T178f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found */
extern T1 T178f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search */
extern void T178f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search_position */
extern void T178f56(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatm_error */
extern void T61f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eatm */
extern T0* T220c101(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_library */
extern T0* T166f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make */
extern T0* T191c121(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make_library */
extern void T191f130(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.make_from_system */
extern void T191f131(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_kernel_types */
extern void T191f135(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_type */
extern void T191f177(TC* ac, T0* C);
/* ET_ECF_LIBRARY.tokens */
extern T0* T191f102(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T191f176(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_type_type */
extern void T191f175(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_string_type */
extern void T191f174(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_object_type */
extern void T191f173(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_type */
extern void T191f172(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_32_type */
extern void T191f171(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_8_type */
extern void T191f170(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_special_type */
extern void T191f169(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_routine_type */
extern void T191f168(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_64_type */
extern void T191f167(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_32_type */
extern void T191f166(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_type */
extern void T191f165(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_procedure_type */
extern void T191f164(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_predicate_type */
extern void T191f163(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_pointer_type */
extern void T191f162(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_64_type */
extern void T191f161(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_32_type */
extern void T191f160(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_16_type */
extern void T191f159(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_8_type */
extern void T191f158(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_type */
extern void T191f157(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_iterable_type */
extern void T191f156(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T191f155(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_64_type */
extern void T191f154(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_32_type */
extern void T191f153(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_16_type */
extern void T191f152(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_8_type */
extern void T191f151(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_type */
extern void T191f150(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_32_type */
extern void T191f149(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_8_type */
extern void T191f148(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_function_type */
extern void T191f147(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_manager_type */
extern void T191f146(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_type */
extern void T191f145(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_double_type */
extern void T191f144(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_32_type */
extern void T191f143(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_8_type */
extern void T191f142(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_type */
extern void T191f141(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_boolean_type */
extern void T191f140(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_array_type */
extern void T191f139(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_tuple_type */
extern void T191f138(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_none_type */
extern void T191f137(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_any_type */
extern void T191f136(TC* ac, T0* C);
/* ET_ECF_LIBRARY.make_adapted */
extern void T191f134(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.default_read_only_value */
extern T1 T191f103(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T191f133(TC* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T191f132(TC* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T191f132p1(TC* ac, T0* C);
/* ET_ECF_LIBRARY.class_name_tester */
extern T0* T191f116(TC* ac, T0* C);
/* XM_ELEMENT.attribute_by_name */
extern T0* T172f5(TC* ac, T0* C, T0* a1);
extern T1 T172f5ot1(TC* ac, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].go_after */
extern void T476f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_go_after */
extern void T951f16(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_after */
extern void T476f16(TC* ac, T0* C);
/* XM_ELEMENT.attribute_same_name */
extern T1 T172f7(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T172f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T172f9(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].forth */
extern void T209f11(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_forth */
extern void T208f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].add_traversing_cursor */
extern void T208f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_next_cursor */
extern void T209f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_position */
extern void T209f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove_traversing_cursor */
extern void T208f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_after */
extern void T209f13(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_item */
extern T6 T208f29(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eadp_error */
extern void T61f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eadp */
extern T0* T220c100(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T877f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T877f3p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_PLATFORM_CONDITION.is_capability_supported */
extern T1 T886f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_supported */
extern T1 T885f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_CONDITION.is_capability_supported */
extern T1 T884f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.is_capability_supported */
extern T1 T883f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T1 T882f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T0* T882f4ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T0* T882f4ac2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [STRING_8]].set_rout_disp_final */
extern void T1804f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_SET [STRING_8].go_after */
extern void T75f80(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T75f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].put_last */
extern void T75f79(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T75f82(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T75f84(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_LINKED_LIST [STRING_8].do_all */
extern void T156f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].append_last */
extern void T75f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].extend_last */
extern void T75f81(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].extendible */
extern T1 T75f37(TC* ac, T0* C, T6 a1);
/* ET_ECF_VOID_SAFETY_CONDITION.supported_void_safety_capability_values */
extern T0* T882f8(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.supported_void_safety_capability_values */
extern T0* T882f8ac1(TC* ac, T0* a1);
/* DS_HASH_SET [STRING_8].set_hash_function */
extern void T75f77(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.string_ */
extern T0* T882f6(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T882f7(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T1 T881f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T881f4ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T881f4ac2(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T881f8(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T881f8ac1(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T881f6(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T881f7(TC* ac, T0* C);
/* ET_ECF_BUILD_CONDITION.is_capability_supported */
extern T1 T880f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_supported */
extern T1 T889f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_supported */
extern T1 T888f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_PLATFORM_CONDITION.is_capability_aware */
extern T1 T886f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_aware */
extern T1 T885f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_capability_aware */
extern T1 T884f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_capability_aware */
extern T1 T883f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.is_capability_aware */
extern T1 T882f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_aware */
extern T1 T881f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.is_capability_aware */
extern T1 T880f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_aware */
extern T1 T889f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_aware */
extern T1 T888f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].item */
extern T0* T1663f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T876f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].item */
extern T0* T1662f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T876f3p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CAPABILITIES.is_capability_supported */
extern T1 T66f9(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].found_item */
extern T0* T1807f24(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_item */
extern T0* T1807f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].found */
extern T1 T1807f25(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].search */
extern void T1807f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].search_position */
extern void T1807f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].hash_position */
extern T6 T1807f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_item */
extern T0* T1807f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_item */
extern T6 T1807f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_item */
extern T6 T1807f23(TC* ac, T0* C, T6 a1);
/* ET_ECF_CAPABILITIES.capability_order */
extern T0* T66f12(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.capability_order */
extern T0* T66f12ac1(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].put_last */
extern void T1807f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_put */
extern void T1807f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_put */
extern void T1807f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_put */
extern void T1807f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].compress */
extern void T1807f41(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_wipe_out */
extern void T1807f50(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_wipe_out */
extern void T1807f49(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_keep_head */
extern void T1807f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_keep_head */
extern void T1807f47(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].keep_head */
extern void T2071f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].set_count */
extern void T2071f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].move_all_cursors */
extern void T1807f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_position */
extern void T2075f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_put */
extern void T1807f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].force */
extern void T2074f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].fill_with */
extern void T2071f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].extend */
extern void T2071f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].unset_found_item */
extern void T1807f39(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_last */
extern void T1806f39(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].compress */
extern void T1806f47(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_wipe_out */
extern void T1806f57(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_wipe_out */
extern void T1806f56(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_keep_head */
extern void T1806f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_keep_head */
extern void T1806f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].move_all_cursors */
extern void T1806f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].set_position */
extern void T2070f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_hash_function */
extern void T1806f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_hash_function */
extern void T1807f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_key_equality_tester */
extern void T1807f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_map */
extern T0* T1807c32(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_with_equality_testers */
extern void T1807f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_sparse_container */
extern void T1807f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_internal_cursor */
extern void T1807f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].new_cursor */
extern T0* T1807f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make */
extern T0* T2075c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_slots */
extern void T1807f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].new_modulus */
extern T6 T1807f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_clashes */
extern void T1807f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_key_storage */
extern void T1807f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_item_storage */
extern void T1807f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].make */
extern T0* T2074f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].make_empty */
extern T0* T2071c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].default_create */
extern T0* T2074c2(TC* ac);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].key */
extern T0* T209f8(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_key */
extern T0* T208f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_item */
extern T0* T208f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].after */
extern T1 T209f4(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_iterator */
extern T0* T208f23(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].start */
extern void T209f12(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_start */
extern void T208f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_off */
extern T1 T208f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].off */
extern T1 T209f9(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].is_empty */
extern T1 T208f35(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor */
extern T0* T208f25(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T209c10(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T60f28(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T60f28ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.void_safety_detection_capability_value_regexp */
extern T0* T60f37(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.concurrency_capability_value_regexp */
extern T0* T60f36(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].force_last */
extern void T208f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_put */
extern void T208f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_put */
extern void T208f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_put */
extern void T208f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_item */
extern T6 T208f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].hash_position */
extern T6 T208f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].resize */
extern void T208f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_resize */
extern void T208f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].special_integer_ */
extern T0* T208f30(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_resize */
extern void T208f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_resize */
extern void T208f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T624f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T625f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_resize */
extern void T208f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_modulus */
extern T6 T208f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_capacity */
extern T6 T208f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_put */
extern void T208f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].force */
extern void T624f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].fill_with */
extern void T625f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].extend */
extern void T625f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].search_position */
extern void T208f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].unset_found_item */
extern void T208f46(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.catcall_detection_capability_value_regexp */
extern T0* T60f35(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_hash_function */
extern void T208f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_key_equality_tester */
extern void T208f42(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].internal_set_equality_tester */
extern void T623f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T60f14(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_map */
extern T0* T208c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_with_equality_testers */
extern void T208f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_sparse_container */
extern void T208f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_internal_cursor */
extern void T208f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_slots */
extern void T208f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_clashes */
extern void T208f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_key_storage */
extern void T208f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_item_storage */
extern void T208f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].make */
extern T0* T624f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].make_empty */
extern T0* T625c6(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].default_create */
extern T0* T624c3(TC* ac);
/* ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T61f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabw */
extern T0* T220c99(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T212f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T61f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabv */
extern T0* T220c98(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.pathname */
extern T0* T212f20(TC* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.library */
extern T0* T192f2(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T192f3(TC* ac, T0* C);
/* DS_CELL [detachable ET_ECF_LIBRARY].make */
extern T0* T211c2(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.build_ise_eiffel_to_gobo_uuid_mappings */
extern void T60f227(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].put */
extern void T219f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.uuid_from_ecf_file */
extern T0* T60f31(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.uuid_from_ecf_file */
extern T0* T60f31ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_config */
extern void T60f230(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_SYSTEM_PARSER.new_redirection_config */
extern T0* T60f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_REDIRECTION_CONFIG.set_ecf_version */
extern void T478f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_ecf_namespace */
extern void T478f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_message */
extern void T478f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_uuid */
extern void T478f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_redirection_config */
extern T0* T166f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_REDIRECTION_CONFIG.make */
extern T0* T478c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_system_config */
extern T0* T166f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_CONFIG.make */
extern T0* T189c12(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_CELL [detachable ET_ECF_CONFIG].put */
extern void T469f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_system_config */
extern T0* T60f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_CELL [detachable ET_ECF_CONFIG].make */
extern T0* T469c2(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.make */
extern T0* T63c165(TC* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make_system */
extern void T63f166(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_kernel_types */
extern void T63f171(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_type */
extern void T63f213(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tokens */
extern T0* T63f143(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T63f212(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_type_type */
extern void T63f211(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_string_type */
extern void T63f210(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_object_type */
extern void T63f209(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_type */
extern void T63f208(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_32_type */
extern void T63f207(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_8_type */
extern void T63f206(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_type */
extern void T63f205(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_routine_type */
extern void T63f204(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_64_type */
extern void T63f203(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_32_type */
extern void T63f202(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_type */
extern void T63f201(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_procedure_type */
extern void T63f200(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_predicate_type */
extern void T63f199(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_pointer_type */
extern void T63f198(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_64_type */
extern void T63f197(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_32_type */
extern void T63f196(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_16_type */
extern void T63f195(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_8_type */
extern void T63f194(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_type */
extern void T63f193(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_type */
extern void T63f192(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T63f191(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_64_type */
extern void T63f190(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_32_type */
extern void T63f189(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_16_type */
extern void T63f188(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_8_type */
extern void T63f187(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_type */
extern void T63f186(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_32_type */
extern void T63f185(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_8_type */
extern void T63f184(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_type */
extern void T63f183(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_manager_type */
extern void T63f182(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_type */
extern void T63f181(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_double_type */
extern void T63f180(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_32_type */
extern void T63f179(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_8_type */
extern void T63f178(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_type */
extern void T63f177(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_boolean_type */
extern void T63f176(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_array_type */
extern void T63f175(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_tuple_type */
extern void T63f174(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_none_type */
extern void T63f173(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_any_type */
extern void T63f172(TC* ac, T0* C);
/* ET_ECF_SYSTEM.make_adapted */
extern void T63f170(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.default_read_only_value */
extern T1 T63f144(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T63f169(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_name */
extern void T63f168(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.initialize */
extern void T63f167(TC* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T63f167p1(TC* ac, T0* C);
/* ET_ECF_SYSTEM.class_name_tester */
extern T0* T63f151(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T60f25(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.select_target */
extern void T60f223(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.select_target */
extern T0* T60f223ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T60f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].put */
extern void T205f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_universe */
extern void T64f54(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T64f54ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern void T852f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern T0* T852f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]].set_rout_disp_final */
extern void T1853f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LINKER_FLAG.fill_external_linker_flags */
extern void T864f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.add_external_value */
extern void T864f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.is_enabled */
extern T1 T864f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_ANDED_CONDITIONS.is_enabled */
extern T1 T877f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T886f5(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T886f5ac1(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [STRING_8].there_exists */
extern T1 T156f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T886f7(TC* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T886f6(TC* ac, T0* C);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T885f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T884f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T883f7(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile_case_sensitive */
extern T0* T2142c19(TC* ac, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T883f8(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.is_enabled */
extern T1 T882f5(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.is_enabled */
extern T0* T882f5ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities */
extern T0* T882f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_0_0 */
extern T0* T882f16(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_0_0 */
extern void T882f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_11_0 */
extern void T882f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_13_0 */
extern void T882f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_16_0 */
extern void T882f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_latest */
extern void T882f23(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_11_0 */
extern T0* T882f15(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_11_0 */
extern T0* T882f14(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_13_0 */
extern T0* T882f13(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_13_0 */
extern T0* T882f12(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_16_0 */
extern T0* T882f11(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_16_0 */
extern T0* T882f10(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T881f5(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T881f5ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities */
extern T0* T881f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_0_0 */
extern T0* T881f16(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_0_0 */
extern void T881f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_11_0 */
extern void T881f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_13_0 */
extern void T881f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_16_0 */
extern void T881f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_latest */
extern void T881f23(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_11_0 */
extern T0* T881f15(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_11_0 */
extern T0* T881f14(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_13_0 */
extern T0* T881f13(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_13_0 */
extern T0* T881f12(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_16_0 */
extern T0* T881f11(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_16_0 */
extern T0* T881f10(TC* ac, T0* C);
/* ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T880f5(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_BUILD_CONDITION.is_enabled */
extern T0* T880f5ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_BUILD_CONDITION.string_ */
extern T0* T880f6(TC* ac, T0* C);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_enabled */
extern T1 T889f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_included */
extern T1 T889f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T888f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T888f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.is_enabled */
extern T1 T876f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].do_all */
extern void T1646f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].item */
extern T0* T1646f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern void T849f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern T0* T849f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]].set_rout_disp_final */
extern void T1846f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_CFLAG.fill_external_cflags */
extern void T861f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.add_external_value */
extern void T861f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.is_enabled */
extern T1 T861f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].do_all */
extern void T1643f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].item */
extern T0* T1643f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern void T853f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern T0* T853f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]].set_rout_disp_final */
extern void T1855f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_MAKE.fill_external_makes */
extern void T865f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.add_external_value */
extern void T865f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.file_system */
extern T0* T865f5(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.unix_file_system */
extern T0* T865f8(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.windows_file_system */
extern T0* T865f7(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.operating_system */
extern T0* T865f6(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.is_enabled */
extern T1 T865f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].do_all */
extern void T1647f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].item */
extern T0* T1647f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern void T855f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern T0* T855f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]].set_rout_disp_final */
extern void T1859f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_RESOURCE.fill_external_resources */
extern void T867f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.add_external_value */
extern void T867f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.file_system */
extern T0* T867f5(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.unix_file_system */
extern T0* T867f8(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.windows_file_system */
extern T0* T867f7(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.operating_system */
extern T0* T867f6(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.is_enabled */
extern T1 T867f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].do_all */
extern void T1649f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].item */
extern T0* T1649f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T851f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T851f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]].set_rout_disp_final */
extern void T1851f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T863f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.add_external_value */
extern void T863f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T863f5(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T863f8(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T863f7(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T863f6(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T863f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T1645f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T1645f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T854f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T854f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]].set_rout_disp_final */
extern void T1857f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T866f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.add_external_value */
extern void T866f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T866f5(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T866f8(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T866f7(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T866f6(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T866f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T1648f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T1648f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T850f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T850f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]].set_rout_disp_final */
extern void T1849f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T862f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.add_external_value */
extern void T862f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T862f5(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T862f8(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T862f7(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T862f6(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T862f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T1644f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T1644f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dotnet */
extern void T63f246(TC* ac, T0* C, T1 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T215f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T626f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1462f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1461f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1461f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T626f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1462f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1461f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T626f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T626f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T218f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T847f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1641f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T847f3(TC* ac, T0* C);
/* ET_ECF_STATE.is_dotnet */
extern T1 T187f3(TC* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.put_last */
extern void T192f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].force_last */
extern void T610f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].force */
extern void T1457f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].fill_with */
extern void T1456f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].extend */
extern void T1456f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].resize */
extern void T610f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1457f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1456f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T610f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].extendible */
extern T1 T610f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T212f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T846f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T1640f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T846f3(TC* ac, T0* C);
/* ET_ECF_CLUSTER.fill_file_rules */
extern void T860f93(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_CLUSTER.fill_file_rules */
extern T0* T860f93ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_CLUSTER]].set_rout_disp_final */
extern void T1795f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_CLUSTERS.do_all */
extern void T845f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.fill_file_rules */
extern void T848f7(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T848f7ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T848f7ac2(TC* ac, T0* a1);
/* ET_ECF_FILE_RULE.is_enabled */
extern T1 T868f9(TC* ac, T0* C, T0* a1);
/* PROCEDURE [TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2132f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].do_if */
extern void T1642f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.fill_file_rules */
extern void T64f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULES.make_empty */
extern T0* T848c6(TC* ac);
/* ET_ECF_CLUSTER.fill_subclusters */
extern void T860f92(TC* ac, T0* C, T0* a1);
/* ET_CLUSTERS.put_last */
extern void T479f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].force_last */
extern void T987f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].force */
extern void T1698f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLUSTER].fill_with */
extern void T1697f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLUSTER].extend */
extern void T1697f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].resize */
extern void T987f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].aliased_resized_area */
extern T0* T1698f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLUSTER].aliased_resized_area */
extern T0* T1697f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_capacity */
extern T6 T987f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].extendible */
extern T1 T987f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.is_enabled */
extern T1 T860f67(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.cluster */
extern T0* T845f4(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTERS.count */
extern T6 T845f3(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epcd_error */
extern void T61f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR.make_epcd */
extern T0* T220c97(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR_HANDLER.report_epcl_error */
extern void T61f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_epcl */
extern T0* T220c96(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_epcr_error */
extern void T61f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_epcr */
extern T0* T220c95(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eadq_error */
extern void T61f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadq */
extern T0* T220c94(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].before */
extern T1 T203f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_before */
extern T1 T203f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].before */
extern T1 T618f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].back */
extern void T203f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_back */
extern void T203f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].add_traversing_cursor */
extern void T203f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_next_cursor */
extern void T618f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_position */
extern void T618f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].remove_traversing_cursor */
extern void T203f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_before */
extern void T618f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_item */
extern T6 T203f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].finish */
extern void T203f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_finish */
extern void T203f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_off */
extern T1 T203f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].off */
extern T1 T618f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].is_empty */
extern T1 T203f36(TC* ac, T0* C);
/* ET_ECF_TARGET_PARENT.set_target */
extern void T204f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_epcy_error */
extern void T61f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epcy */
extern T0* T220c93(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_for_iteration */
extern T0* T203f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_item */
extern T0* T203f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_item */
extern T0* T203f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].forth */
extern void T203f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_forth */
extern void T203f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_after */
extern void T618f10(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_for_iteration */
extern T0* T203f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_key */
extern T0* T203f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_item */
extern T0* T203f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].after */
extern T1 T203f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_after */
extern T1 T203f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].after */
extern T1 T618f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].start */
extern void T203f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_start */
extern void T203f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].has */
extern T1 T203f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].search_position */
extern void T203f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].hash_position */
extern T6 T203f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_item */
extern T6 T203f24(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_internal_error */
extern void T61f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_internal */
extern T0* T220c92(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epud_error */
extern void T61f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epud */
extern T0* T220c91(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.library_target */
extern T0* T191f10(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T189f11(TC* ac, T0* C);
/* ET_ECF_SYSTEM.library_target */
extern T0* T63f103(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epul_error */
extern void T61f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_epul */
extern T0* T220c90(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epur_error */
extern void T61f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epur */
extern T0* T220c89(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.targets */
extern T0* T191f7(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T189f8(TC* ac, T0* C);
/* ET_ECF_SYSTEM.targets */
extern T0* T63f102(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epfe_error */
extern void T61f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epfe */
extern T0* T220c88(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].found_item */
extern T0* T202f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_item */
extern T0* T202f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].found */
extern T1 T202f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].search */
extern void T202f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].search_position */
extern void T202f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].hash_position */
extern T6 T202f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_item */
extern T0* T202f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_item */
extern T6 T202f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_item */
extern T6 T202f26(TC* ac, T0* C, T6 a1);
/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].make */
extern T0* T205c2(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].force_last */
extern void T203f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_put */
extern void T203f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_put */
extern void T203f55(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_put */
extern void T203f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].resize */
extern void T203f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_resize */
extern void T203f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].special_integer_ */
extern T0* T203f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_resize */
extern void T203f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_resize */
extern void T203f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_resize */
extern void T203f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_modulus */
extern T6 T203f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_capacity */
extern T6 T203f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_put */
extern void T203f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].unset_found_item */
extern void T203f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_default */
extern T0* T203c43(TC* ac);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make */
extern void T203f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_with_equality_testers */
extern void T203f61(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_sparse_container */
extern void T203f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].set_internal_cursor */
extern void T203f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_cursor */
extern T0* T203f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].make */
extern T0* T618c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_slots */
extern void T203f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_clashes */
extern void T203f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_key_storage */
extern void T203f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_item_storage */
extern void T203f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].default_capacity */
extern T6 T203f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].force_last */
extern void T202f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_put */
extern void T202f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_put */
extern void T202f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_put */
extern void T202f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].resize */
extern void T202f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_resize */
extern void T202f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].special_integer_ */
extern T0* T202f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_resize */
extern void T202f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_resize */
extern void T202f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T616f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T614f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_resize */
extern void T202f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_modulus */
extern T6 T202f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_capacity */
extern T6 T202f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_put */
extern void T202f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].force */
extern void T616f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].fill_with */
extern void T614f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].extend */
extern void T614f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].unset_found_item */
extern void T202f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_default */
extern T0* T202c34(TC* ac);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make */
extern void T202f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_with_equality_testers */
extern void T202f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_sparse_container */
extern void T202f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].set_internal_cursor */
extern void T202f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_cursor */
extern T0* T202f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8].make */
extern T0* T617c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_slots */
extern void T202f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_clashes */
extern void T202f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_key_storage */
extern void T202f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_item_storage */
extern void T202f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].make */
extern T0* T616f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].make_empty */
extern T0* T614c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].default_create */
extern T0* T616c3(TC* ac);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].default_capacity */
extern T6 T202f27(TC* ac, T0* C);
/* ET_ECF_LIBRARY.select_target */
extern void T191f178(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.select_target */
extern void T63f215(TC* ac, T0* C, T0* a1);
/* ET_ECF_STATE.make */
extern T0* T187c4(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_etnu_error */
extern void T61f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_etnu */
extern T0* T220c81(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T60f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.target_with_name */
extern T0* T63f153(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.target */
extern T0* T207f4(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T60f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_system */
extern T0* T166f1(TC* ac, T0* C, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_TARGET]].set_rout_disp_final */
extern void T169f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.override_target */
extern void T60f220(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_variables */
extern void T64f59(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_capabilities */
extern void T64f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].forth */
extern void T634f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_forth */
extern void T226f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].add_traversing_cursor */
extern void T226f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_next_cursor */
extern void T634f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_position */
extern void T634f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].remove_traversing_cursor */
extern void T226f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_after */
extern void T634f13(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].item */
extern T0* T634f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_item */
extern T0* T226f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].key */
extern T0* T634f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_key */
extern T0* T226f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].after */
extern T1 T634f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_iterator */
extern T0* T226f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].start */
extern void T634f12(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_start */
extern void T226f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_off */
extern T1 T226f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].off */
extern T1 T634f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].is_empty */
extern T1 T226f37(TC* ac, T0* C);
/* ET_ECF_TARGET.override_settings */
extern void T64f57(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_settings */
extern T0* T64f57ac1(TC* ac, T0* a1);
/* ET_ECF_TARGET.override_all_assertions */
extern void T64f63(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T64f63ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T64f63ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T64f63ac3(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T1801f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T1799f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_TARGET.override_all_assertions_in_cluster */
extern void T64f65(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_cluster */
extern T0* T64f65ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern void T64f66(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern T0* T64f66ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.class_options */
extern T0* T218f13(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.class_options */
extern T0* T212f10(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.class_options */
extern T0* T857f11(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.options */
extern T0* T218f12(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.options */
extern T0* T212f9(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.options */
extern T0* T857f10(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T847f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.do_adapted */
extern void T846f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_explicit */
extern void T845f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_all_assertions_in_option */
extern void T64f64(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_option */
extern T0* T64f64ac1(TC* ac, T0* a1, T0* a2);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].do_all */
extern void T623f9(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].forth */
extern void T2108f7(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_forth */
extern void T623f12(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].item */
extern T0* T2108f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_item */
extern T0* T623f6(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].after */
extern T1 T2108f3(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].start */
extern void T2108f6(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_start */
extern void T623f11(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor */
extern T0* T623f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T2108c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].keys */
extern T0* T208f37(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T623c7(TC* ac, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].set_internal_cursor */
extern void T623f10(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor_with_table_cursor */
extern T0* T623f5(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make_with_table_cursor */
extern T0* T2108c8(TC* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.do_all */
extern void T207f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].do_all */
extern void T963f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.parse_file_with_action */
extern void T60f222(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T182f120(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.position */
extern T0* T182f114(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T565f6(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T182f118(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T182f88(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T566f7(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T566f4(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T566f3(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T565f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].put_right */
extern void T1430f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].attach_left */
extern void T1430f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].make */
extern T0* T1430c4(TC* ac, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T565c7(TC* ac);
/* DS_BILINKED_LIST [XM_POSITION].set_internal_cursor */
extern void T565f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T565f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T1431c3(TC* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T566f6(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T1432f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T1432c3(TC* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T566c5(TC* ac);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T602f59(TC* ac, T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T563c5(TC* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T605f61(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T603f59(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T562f70(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T61f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_syntax */
extern T0* T220c87(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T183f5(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T61f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabx */
extern T0* T220c86(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadf_error */
extern void T61f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadf */
extern T0* T220c85(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eadi_error */
extern void T61f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadi */
extern T0* T220c84(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T60f30(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eadh_error */
extern void T61f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadh */
extern T0* T220c83(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadg_error */
extern void T61f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadg */
extern T0* T220c82(TC* ac, T0* a1, T0* a2);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T183f8(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T182f90(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T182f208(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T182f213(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T182f219(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T606f29(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T199f10(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T199f10p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T186f15(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.on_finish */
extern void T567f3(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T182f218(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T182f228(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T182f227(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T182f226(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T182f256(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T572f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T582f5(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T581f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T583f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T582f4(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T182f168(TC* ac, T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T582c3(TC* ac);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T182f255(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force_new */
extern void T568f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T568f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T568f51(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].force */
extern void T1437f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1433f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].extend */
extern void T1433f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T568f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T568f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T568f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T568f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T568f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T568f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T568f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T568f33(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T568f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T568f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1437f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1433f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T568f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T568f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T568f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T568f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T568f43(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T568f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T568f40(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T605c214(TC* ac, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T605f216(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T570c3(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T605f217(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T605f219(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T605f222(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T605f219p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T605f219p0(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T605f219p2(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T605f219p3(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T605f218(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T605f221(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T605f224(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T605f220(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T605f220p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T605f223(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern T0* T605f54(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T605f58(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T605f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T605f279(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T605f60(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T605f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T605f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T605f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern T0* T605f52(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern T0* T605f73(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T605f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T605f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern T0* T605f68(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T605f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T605f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T605f227(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T605f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T605f225(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern T0* T605f57(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T605f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T605f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T605f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T605f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T605f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern T0* T605f55(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T605f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T605f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T605f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T605f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T605f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T605f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T605f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T605f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T605f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T605f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T605f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T605f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T605f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T605f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T605f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T605f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T605f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T605f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern T0* T605f97(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T605f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T605f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T605f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T605f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T605f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T605f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T605f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T605f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T605f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T605f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T605f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T605f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T605f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T605f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T605f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T605f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T605f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T605f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T605f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T605f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T605f56(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T605f53(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1428c8(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T605f215(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T182f167(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T602c213(TC* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T602f214(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T602f216(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T602f216p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T602f216p0(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T602f216p2(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T602f215(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T602f218(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T602f220(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T602f217(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T602f217p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T602f219(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T602f52(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T602f56(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T602f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T602f275(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T602f58(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T602f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T602f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T602f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T602f50(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T602f71(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T602f227(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T602f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T602f66(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T602f225(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T602f224(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T602f223(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T602f222(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T602f221(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T602f55(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T602f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T602f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T602f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T602f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T602f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T602f53(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T602f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T602f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T602f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T602f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T602f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T602f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T602f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T602f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T602f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T602f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T602f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T602f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T602f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T602f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T602f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T602f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T602f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T602f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T602f94(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T602f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T602f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T602f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T602f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T602f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T602f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T602f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T602f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T602f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T602f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T602f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T602f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T602f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T602f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T602f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T602f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T602f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T602f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T602f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T602f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T602f70(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T602f60(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T182f254(TC* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T572f7(TC* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T182f253(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T182f166(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T602c212(TC* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T602f281(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T602f290(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T602f277(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T602f63(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T605f285(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T605f295(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T605f281(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T605f65(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T603f209(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T603f223(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T603f212(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T603f53(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T603f65(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T562f207(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T562f218(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T562f226(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T562f46(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T562f54(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T591f26(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T591f25(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T591f24(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T591f23(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T593f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T595f4(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T594f11(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].put_right */
extern void T1446f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].attach_left */
extern void T1446f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].make */
extern T0* T1446c4(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T182f163(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T594f12(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T182f177(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T594c10(TC* ac);
/* DS_BILINKED_LIST [STRING_8].set_internal_cursor */
extern void T594f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T594f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1445c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].force */
extern void T593f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].fill_with */
extern void T595f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].extend */
extern void T595f10(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T591f22(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T591f27(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern T0* T591f11(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T591f21(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T591f20(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T591f19(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T591f18(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T591f17(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T591f16(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T591f15(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T182f162(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T590f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T592f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T591c12(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T590f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T592f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T592f10(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T591f14(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T591f10(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T591f9(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T591f8(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T591f7(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T591f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T587f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T589f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T589f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T587f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T589f4(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T588f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1444f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1444f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1444c4(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T182f160(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T588c7(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T588f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T588f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1443c8(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T182f252(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1443f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T588f11(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T588f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1443f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T588f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1443f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T182f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T572f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1443f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1443f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T588f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T588f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1443f7(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T585f11(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T585c10(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T585f21(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T585f19(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T585f16(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T585f22(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T585f12(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T585f20(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1442c6(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1442f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1442f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1787c3(TC* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T585c9(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1442f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1788f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1788f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1788c4(TC* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T585c8(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1442f7(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T182f155(TC* ac, T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T585c15(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T182f251(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T585f14(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T585f13(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T585c7(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T585f18(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].force */
extern void T584f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T586f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].extend */
extern void T586f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T584f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T586f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T585c6(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T585f17(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T182f250(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T572f6(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T182f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T606f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1447f14(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T219f96(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T1790f5(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T606f37(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_error */
extern void T567f11(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T199f17(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T199f17p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T186f22(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1447f4(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T606f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T1451f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_QUEUE [detachable STRING_8].force */
extern void T1450f7(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [detachable STRING_8].put_right */
extern void T1792f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [detachable STRING_8].make */
extern T0* T1792c3(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1447f13(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern T0* T1447f7(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T606f9(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T606f23(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T606f26(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern T0* T606f22(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T606f10(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T567f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T579f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T579f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T579f24(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T576f16(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T576f17(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T594f8(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1440f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T579f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T579f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T579f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T579f17(TC* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T579f25(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].force */
extern void T578f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T580f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].extend */
extern void T580f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T578f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T580f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T579f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T579f39(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T579f38(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T579f37(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T579f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T579f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T579f28(TC* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T579f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T579f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T579f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T579f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T579f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T579f35(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T182f148(TC* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T579c31(TC* ac, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1440c2(TC* ac);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T579f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T579f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T579f21(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1441c4(TC* ac, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T579f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T579f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T579f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T579f40(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T575f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T577c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T575c3(TC* ac);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T182f248(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T606f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1447f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T1790f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T1999f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T1999f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1999c4(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1447f8(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T219f95(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1447f9(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T567f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T182f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T606f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1447f11(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T1790f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T1790f14(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T1999f7(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T1790f13(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T1791f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T1791f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T1790f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T1790f15(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1447f3(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T606f34p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T199f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T199f16p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T186f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T172f10(TC* ac, T0* C);
extern T1 T172f10ot1(TC* ac, T0* a1);
/* XM_ELEMENT.is_root_node */
extern T1 T172f11(TC* ac, T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T196f8(TC* ac, T0* C);
/* XM_DOCUMENT.parent */
extern T0* T196f9(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1447f2(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T1791f11(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T1790f18(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T1790f19(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T1790f20(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T1791f14(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T1791f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T1790f17(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T1791f15(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T1790f7(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].off */
extern T1 T1791f7(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T1791f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T1791f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T1790f16(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T1790f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1791c8(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern T0* T1447f6(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T567f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T576f11(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1445f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T594f15(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T594f16(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1445f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T594f17(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1445f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1445f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1445f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T594f14(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T594f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].off */
extern T1 T1445f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T576f10(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T576f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T594f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T576f8(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T576f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T576f18(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T576c18(TC* ac);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T576f15(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T576f14(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T182f246(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T606f33(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T606f33p1(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T199f15(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T199f15p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T186f20(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T606f14(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T606f40(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T606f44(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T1451f7(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T1451f8(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].remove */
extern void T1450f8(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].wipe_out */
extern void T1450f9(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T606f19(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern T0* T606f25(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern T0* T606f18(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern T0* T606f17(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T606f16(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern T0* T606f24(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T199f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T199f18p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T186f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T186f24(TC* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T173f5(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T956f9(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1863f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1863c3(TC* ac, T0* a1);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T957c3(TC* ac, T0* a1, T0* a2);
/* XM_ATTRIBUTE.make_last */
extern T0* T200c5(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ELEMENT.force_last */
extern void T172f20(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T951f13(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T951f13p1(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].put_right */
extern void T1814f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].make */
extern T0* T1814c3(TC* ac, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].before_addition */
extern void T951f18(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T172f22(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1532f4(TC* ac, T0* C, T0* a1);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1531f6(TC* ac, T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1530f5(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T172f17(TC* ac, T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T200f6(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T196f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].forth */
extern void T962f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_forth */
extern void T611f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T611f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_next_cursor */
extern void T962f16(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T611f23(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set */
extern void T962f15(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].remove */
extern void T962f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_at_cursor */
extern void T611f16(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors */
extern void T611f22(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_current_cell */
extern void T962f17(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].put */
extern void T1459f6(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].put_right */
extern void T1459f4(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_last_cell */
extern void T611f21(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].forget_right */
extern void T1459f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_last */
extern void T611f20(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T611f26(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_after */
extern void T962f18(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].wipe_out */
extern void T611f24(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T611f27(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_last */
extern T1 T962f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T611f10(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_first */
extern void T611f19(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_first_cell */
extern void T611f25(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_first */
extern T1 T962f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T611f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].item */
extern T0* T962f8(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].start */
extern void T962f11(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_start */
extern void T611f15(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_off */
extern T1 T611f8(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].off */
extern T1 T962f9(TC* ac, T0* C);
/* XM_DOCUMENT.new_cursor */
extern T0* T196f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].new_cursor */
extern T0* T611f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].make */
extern T0* T962c10(TC* ac, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T172f21(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].remove */
extern void T476f14(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_at_cursor */
extern void T951f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors */
extern void T951f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_current_cell */
extern void T476f18(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].put */
extern void T1814f6(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_last_cell */
extern void T951f23(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].forget_right */
extern void T1814f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_last */
extern void T951f22(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_last_cursors_after */
extern void T951f27(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].wipe_out */
extern void T951f25(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors_after */
extern void T951f28(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_last */
extern T1 T476f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_last */
extern T1 T951f10(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_first */
extern void T951f21(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_first_cell */
extern void T951f26(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_first */
extern T1 T476f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_first */
extern T1 T951f9(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.parent */
extern T0* T1532f2(TC* ac, T0* C);
/* XM_PROCESSING_INSTRUCTION.parent */
extern T0* T1531f3(TC* ac, T0* C);
/* XM_COMMENT.parent */
extern T0* T1530f2(TC* ac, T0* C);
/* XM_ELEMENT.parent */
extern T0* T172f3(TC* ac, T0* C);
/* XM_ATTRIBUTE.parent */
extern T0* T200f4(TC* ac, T0* C);
/* XM_ELEMENT.last */
extern T0* T172f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].last */
extern T0* T951f8(TC* ac, T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T172f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].is_empty */
extern T1 T951f7(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T186f8(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T609f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T609f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T609f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T609f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T609f20(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T475f6(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T609f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T609f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T609f29(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T609f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T609f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].aliased_resized_area */
extern T0* T1454f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].aliased_resized_area */
extern T0* T1455f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T609f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T609f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T609f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T609f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T609f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T609f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T609f41(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].force */
extern void T1454f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].fill_with */
extern void T1455f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].extend */
extern void T1455f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T609f40(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1452f1(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.is_equal */
extern T1 T475f4(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T475f5(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T609f25(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T609f37(TC* ac, T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T475f3(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T609f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T609f30(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.make */
extern void T475f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T475c8(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T1451f4(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].item */
extern T0* T1450f5(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T606f12(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].is_empty */
extern T1 T1450f4(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T199f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T199f14p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T186f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T172c19(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T196f15(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.force_last */
extern void T196f12(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T611f12(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T611f12p1(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].make */
extern T0* T1459c3(TC* ac, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].before_addition */
extern void T611f14(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.before_addition */
extern void T196f13(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.last */
extern T0* T196f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].last */
extern T0* T611f7(TC* ac, T0* C);
/* XM_DOCUMENT.is_empty */
extern T1 T196f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].is_empty */
extern T1 T611f6(TC* ac, T0* C);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T196f16(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].go_after */
extern void T962f14(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_go_after */
extern void T611f28(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].make */
extern T0* T951c11(TC* ac);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_internal_cursor */
extern void T951f12(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.make_last */
extern T0* T172c18(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1447f5(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T567f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T576f6(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T576f13(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T182f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T602f283(TC* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T570f2(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T605f287(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T603f211(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T562f209(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T603c205(TC* ac);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T603f205p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T603f214(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T603f214p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T603f214p0(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T603f213(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T603f225(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T603f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T603f224(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T603f224p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T603f229(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T603f199(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T603f202(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T603f283(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T603f284(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T603f204(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T603f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T603f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T603f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T603f198(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T603f197(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T603f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T603f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T603f196(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T603f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T603f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T603f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T603f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T603f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T603f195(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T603f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T603f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T603f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T603f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T603f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T603f194(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T603f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T603f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T603f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T603f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T603f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T603f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T603f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T603f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T603f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T603f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T603f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T603f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T603f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T603f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T603f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T603f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T603f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T603f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T603f193(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T603f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T603f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T603f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T603f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T603f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T603f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T603f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T603f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T603f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T603f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T603f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T603f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T603f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T603f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T603f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T603f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T603f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T603f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T603f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T603f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T603f52(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T566f8(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.null_resolver */
extern T0* T182f112(TC* ac, T0* C);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T570f1(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T182f261(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T570f5(TC* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T570f4(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].force */
extern void T581f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].fill_with */
extern void T583f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].extend */
extern void T583f10(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T182f244(TC* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T572f5(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T182f243(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T572f4(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T598f9(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T598f8(TC* ac, T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T598f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].force */
extern void T597f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].fill_with */
extern void T599f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].extend */
extern void T599f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T597f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T599f4(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T598c7(TC* ac);
/* XM_EIFFEL_DECLARATION.process */
extern void T598f10(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T182f287(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T606f45(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T199f19(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T186f25(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T567f12(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T182f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T602f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T958f31(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T605f286(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T603f210(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T562f208(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T602f62(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T958f16(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T958f9(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T605f64(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T603f51(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T562f74(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T182f241(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T606f32(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T199f13(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T199f13p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T186f18(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1532c3(TC* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T567f6(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T182f240(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T572f3(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T182f239(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T606f31(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T199f12(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T199f12p1(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T186f17(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1531c5(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1531c4(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T567f5(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T182f238(TC* ac, T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T572f2(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T182f237(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T606f30(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T199f11(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T199f11p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T186f16(TC* ac, T0* C, T0* a1);
/* XM_COMMENT.make_last_in_document */
extern T0* T1530c4(TC* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last */
extern T0* T1530c3(TC* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_comment */
extern void T567f4(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T182f138(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T182f191(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T182f198(TC* ac, T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f81(TC* ac, T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T570f6(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T958f30(TC* ac, T0* C, T6 a1);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T831f3(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T182f203(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T958c29(TC* ac, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1685c5(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T568f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T568f35(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T182f137(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.force_error */
extern void T182f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T182f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T182f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T182f173(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T182f193(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T182f201(TC* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T182f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T602f280(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.close */
extern void T1539f11(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1539f7(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T605f284(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T603f208(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T562f206(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T182f126(TC* ac, T0* C, T0* a1);
/* STRING_8.string */
extern T0* T17f42(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T10 T182f186(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T182f185(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T182f181(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T834c71(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T834f92(TC* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T459f25(TC* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8_substring */
extern T1 T459f26(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T459f32(TC* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T459f28(TC* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T459f27(TC* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T182f184(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T182f182(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T182f124(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T182f180(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T182f135(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern T0* T182f190(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern T0* T182f189(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T182f197(TC* ac, T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T834c81(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].force */
extern void T575f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].fill_with */
extern void T577f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].extend */
extern void T577f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T575f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T577f4(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T182f235(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T576f19(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T576f12(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T182f134(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T576c20(TC* ac);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T182f225(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T182f224(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T182f222(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T182f233(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T182f221(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T182f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T182f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T602f276(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T459f51(TC* ac, T0* C, T0* a1);
extern T1 T459f51ot1(TC* ac, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T602f69(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T602f284(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T605f280(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T605f71(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T605f288(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T602f64(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T602f67(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T605f66(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T605f69(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.process_entity */
extern void T182f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T182f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T602f61(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T605f63(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T603f69(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T562f72(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.last_value */
extern T0* T602f10(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.last_value */
extern T0* T605f10(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.last_value */
extern T0* T603f2(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.last_value */
extern T0* T562f2(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.last_token */
extern T6 T602f45(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.last_token */
extern T6 T605f47(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.last_token */
extern T6 T603f1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.last_token */
extern T6 T562f1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T602f279(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T602f279p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T602f289(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1428f10(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T88f20(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1428f7(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1428f3(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1428f6(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1428f2(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1428f5(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T451f30(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1428f4(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1428f9(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T602f204(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T602f184(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T602f183(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T602f165(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T602f211(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T602f124(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T602f124p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T602f294(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T602f108(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T602f293(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T602f292(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T602f288(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T602f291(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T602f102(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T602f287(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T602f101(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T602f100(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.report_invalid_unicode_character_error */
extern void T602f286(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_at_beginning_of_line */
extern T6 T602f89(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T605f283(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T605f283p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T605f283p0(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T605f294(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T605f207(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T605f187(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T605f186(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T605f168(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T605f213(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T605f127(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T605f127p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T605f298(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T605f111(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T605f297(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T605f296(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T605f293(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T605f105(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T605f292(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T605f104(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T605f103(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.report_invalid_unicode_character_error */
extern void T605f291(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_at_beginning_of_line */
extern T6 T605f92(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T605f290(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T603f207(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T603f207p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T603f222(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T603f187(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T603f167(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T603f166(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T603f148(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T603f201(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T603f110(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T603f228(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T603f84(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T603f227(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T603f221(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T603f72(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T603f220(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T603f71(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T603f70(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T603f219(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.report_invalid_unicode_character_error */
extern void T603f218(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_at_beginning_of_line */
extern T6 T603f62(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T603f217(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T603f216(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.read_token */
extern void T562f205(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T562f217(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T562f185(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T562f165(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T562f164(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T562f146(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T562f199(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T562f105(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T562f225(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T562f79(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T562f224(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T562f223(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T562f216(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T562f222(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T562f67(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T562f215(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T562f221(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T562f66(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T562f65(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T562f214(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.report_invalid_unicode_character_error */
extern void T562f213(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_SCANNER.yy_at_beginning_of_line */
extern T6 T562f50(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T182f97(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T182f220(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T182f229(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T182f257(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T182f263(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T182f264(TC* ac, T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].keep_head */
extern void T599f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].set_count */
extern void T599f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].keep_head */
extern void T595f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].set_count */
extern void T595f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T592f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T592f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T589f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T589f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T586f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].set_count */
extern void T586f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].keep_head */
extern void T583f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].set_count */
extern void T583f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T580f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].set_count */
extern void T580f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].keep_head */
extern void T577f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].set_count */
extern void T577f9(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.abort */
extern void T182f223(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T182f217(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T606f28(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T199f9(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T199f9p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T186f14(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T186f12(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T609c31(TC* ac, T6 a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1452c2(TC* ac);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T609f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].set_internal_cursor */
extern void T609f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T609f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1453c4(TC* ac, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T609f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T609f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T609f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T609f33(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1454f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].make_empty */
extern T0* T1455c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1454c3(TC* ac);
/* XM_DOCUMENT.make */
extern T0* T196c10(TC* ac);
/* XM_DOCUMENT.make_with_root_named */
extern void T196f11(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.make */
extern T0* T172c16(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].make */
extern T0* T611c11(TC* ac);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_internal_cursor */
extern void T611f13(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.default_ns */
extern T0* T196f3(TC* ac, T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T475c7(TC* ac);
/* XM_NAMESPACE_RESOLVER.initialize */
extern void T606f39(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T606f43(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T606f21(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T1451c5(TC* ac);
/* XM_NAMESPACE_RESOLVER.new_detachable_string_queue */
extern T0* T606f20(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].make */
extern T0* T1450c6(TC* ac);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1447c10(TC* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1790c8(TC* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_internal_cursor */
extern void T1790f11(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T567f2(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T182f216(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T602f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T602f285(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T995f14(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T602f285p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T602f72(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T605f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T605f289(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T605f289p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T605f74(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T603f206(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T603f215(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T603f215p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T603f58(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T562f204(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T562f212(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T562f212p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T562f220(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T562f48(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.reset */
extern void T182f212(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T568f37(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T568f47(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T568f46(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T568f45(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T568f44(TC* ac, T0* C);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1433f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1433f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T568f42(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1436f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_after */
extern void T1436f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T182f210(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T562c203(TC* ac);
/* XM_EIFFEL_SCANNER.reset */
extern void T562f211(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T562f211p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T562f211p0(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T562f210(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T562f219(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T562f219p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T562f227(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T562f197(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T562f200(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T562f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T562f282(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T562f202(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T562f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T562f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T562f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T562f196(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T562f195(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T562f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T562f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T562f194(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T562f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T562f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T562f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T562f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T562f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T562f193(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T562f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T562f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T562f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T562f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T562f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T562f192(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T562f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T562f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T562f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T562f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T562f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T562f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T562f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T562f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T562f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T562f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T562f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T562f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T562f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T562f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T562f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T562f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T562f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T562f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T562f191(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T562f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T562f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T562f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T562f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T562f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T562f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T562f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T562f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T562f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T562f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T562f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T562f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T562f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T562f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T562f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T562f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T562f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T562f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T562f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T562f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T562f45(TC* ac, T0* C);
/* DS_CELL [detachable ET_ECF_SYSTEM].make */
extern T0* T167c2(TC* ac, T0* a1);
/* GEC.target_name */
extern T0* T25f36(TC* ac, T0* C);
/* AP_STRING_OPTION.parameter */
extern T0* T49f15(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_override_variables */
extern void T60f217(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_override_capabilities */
extern void T60f216(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_override_settings */
extern void T60f215(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.set_primary_value */
extern void T62f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SETTINGS.make */
extern T0* T62c7(TC* ac);
/* Creation of agent #1 in feature ET_ECF_SETTINGS.make */
extern T0* T62f7ac1(TC* ac, T0* a1);
/* ET_ECF_SETTINGS.string_ */
extern T0* T62f3(TC* ac, T0* C);
/* ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T62f6(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.make */
extern T0* T60c214(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T60f219(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T186f10(TC* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T173c4(TC* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T956c7(TC* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].set_internal_cursor */
extern void T956f8(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T182f207(TC* ac, T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T183c10(TC* ac);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T183f9(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T199f8(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T606f42(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T186f13(TC* ac, T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T607f4(TC* ac, T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T186c9(TC* ac);
/* XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T186f11(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T186f7(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T567c1(TC* ac);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T183f7(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T199c5(TC* ac);
/* XM_STOP_ON_ERROR_FILTER.make_next */
extern void T199f6(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.initialize */
extern void T199f7(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T199f4(TC* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T183f6(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T606c27(TC* ac);
/* XM_NAMESPACE_RESOLVER.make_next */
extern void T606f38(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T606f13(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T182f206(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T182c205(TC* ac);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T182f85(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T568f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T568c36(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T568f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T568f53(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T568f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_internal_cursor */
extern void T568f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T568f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1436c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T568f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T568f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T568f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T568f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1437f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1433c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1437c3(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T568f30(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T182f211(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T182f215(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern T0* T182f121(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T182f178(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T182f285(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T182f286(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PARSER.integer_array_ */
extern T0* T182f204(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T182f284(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T182f283(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T182f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern T0* T182f119(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytable_template_4 */
extern void T182f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_3 */
extern void T182f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_2 */
extern void T182f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_1 */
extern void T182f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern T0* T182f117(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern T0* T182f115(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template_3 */
extern void T182f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_2 */
extern void T182f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_1 */
extern void T182f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern T0* T182f113(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern T0* T182f105(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T182f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T182f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T182f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern T0* T182f98(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern T0* T182f93(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T182f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T182f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T182f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template */
extern T0* T182f89(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T182f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T182f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern T0* T182f87(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T182f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T182f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T182f214(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T597f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].make_empty */
extern T0* T599c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T597c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T593f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make_empty */
extern T0* T595c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T593c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T590f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T592c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T590c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T587f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T589c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T587c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T584f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T586c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T584c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T581f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T583c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T581c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T578f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T580c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T578c3(TC* ac);
/* XM_EIFFEL_PARSER.initialize */
extern void T182f209(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T182f86(TC* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T572c1(TC* ac);
/* XM_EIFFEL_PARSER.null_callbacks */
extern T0* T182f84(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_key_equality_tester */
extern void T180f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_map */
extern T0* T180c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_with_equality_testers */
extern void T180f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_sparse_container */
extern void T180f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_internal_cursor */
extern void T180f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_cursor */
extern T0* T180f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make */
extern T0* T560c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_slots */
extern void T180f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_clashes */
extern void T180f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_key_storage */
extern void T180f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_item_storage */
extern void T180f57(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T561f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T557c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T561c3(TC* ac);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_key_equality_tester */
extern void T178f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_map */
extern T0* T178c40(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_with_equality_testers */
extern void T178f47(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_sparse_container */
extern void T178f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_internal_cursor */
extern void T178f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_cursor */
extern T0* T178f37(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].make */
extern T0* T552c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_slots */
extern void T178f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_clashes */
extern void T178f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_key_storage */
extern void T178f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_item_storage */
extern void T178f69(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].make */
extern T0* T556f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].make_empty */
extern T0* T553c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].default_create */
extern T0* T556c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T60f219p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T60f15(TC* ac, T0* C);
/* ET_ECF_AST_FACTORY.make */
extern T0* T166c54(TC* ac);
/* ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T61c10(TC* ac);
/* ET_ECF_ERROR_HANDLER.std */
extern T0* T61f7(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.make_null */
extern T0* T61c9(TC* ac);
/* ET_ECF_ERROR_HANDLER.null_output_stream */
extern T0* T61f6(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T42f14(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T42f27(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T42f62(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T42f67(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T42f67p1(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T42f25(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T42f16(TC* ac, T0* C);
/* FILE_INFO.is_readable */
extern T1 T144f8(TC* ac, T0* C);
/* FILE_INFO.file_eaccess */
extern T1 T144f6(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T42f61(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T42c61(TC* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern void T42f61p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T42f66(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make_with_name */
extern void T42f66p1(TC* ac, T0* C, T0* a1);
/* AP_FLAG.was_found */
extern T1 T44f9(TC* ac, T0* C);
/* GEC.parse_arguments */
extern void T25f65(TC* ac, T0* C, T0* a1);
/* GEC.set_new_instance_types */
extern void T25f76(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].force */
extern void T75f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make_equal */
extern T0* T75c38(TC* ac, T6 a1);
/* GEC.set_split_size */
extern void T25f75(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.set_override_variables */
extern void T25f74(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].forth */
extern void T155f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_forth */
extern void T154f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_position */
extern void T155f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].add_traversing_cursor */
extern void T154f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_next_cursor */
extern void T155f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable STRING_8].remove_traversing_cursor */
extern void T154f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].item */
extern T0* T155f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_item */
extern T0* T154f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].after */
extern T1 T155f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].new_iterator */
extern T0* T154f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].start */
extern void T155f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_start */
extern void T154f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_after */
extern void T155f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].off */
extern T1 T155f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].before */
extern T1 T155f8(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T91f17(TC* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.put */
extern void T128f11(TC* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T128f8(TC* ac, T0* C, T14 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].force */
extern void T527f35(TC* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [NATIVE_STRING].force */
extern void T1426f5(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATIVE_STRING].extend */
extern void T1426f7(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].position */
extern T6 T527f22(TC* ac, T0* C);
/* SPECIAL [IMMUTABLE_STRING_32].force */
extern void T532f5(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].force */
extern void T133f6(TC* ac, T0* C, T1 a1, T6 a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].deleted_position */
extern T6 T527f21(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].add_space */
extern void T527f37(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].accommodate */
extern void T527f38(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_indexes_map */
extern void T527f42(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_deleted_marks */
extern void T527f41(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_keys */
extern void T527f40(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_content */
extern void T527f39(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].put */
extern void T527f43(TC* ac, T0* C, T0* a1, T0* a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_conflict */
extern void T527f45(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].found */
extern T1 T527f31(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].occupied */
extern T1 T527f29(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T527f28(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].compare_objects */
extern void T527f44(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].make */
extern T0* T527c34(TC* ac, T6 a1);
/* SPECIAL [NATIVE_STRING].make_empty */
extern T0* T1426c4(TC* ac, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].soon_full */
extern T1 T527f20(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].not_found */
extern T1 T527f19(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].internal_search */
extern void T527f36(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].same_keys */
extern T1 T527f26(TC* ac, T0* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.is_equal */
extern T1 T20f12(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].hash_code_of */
extern T6 T527f25(TC* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.hash_code */
extern T6 T20f11(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T20c13(TC* ac, T0* a1);
extern T1 T20f13ot1(TC* ac, T0* a1);
extern T1 T20f13ot2(TC* ac, T0* a1);
/* STRING_32.to_string_32 */
extern T0* T18f11(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_32 */
extern void T20f19(TC* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_string_8 */
extern void T20f18(TC* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.environ */
extern T0* T128f6(TC* ac, T0* C);
/* GEC.execution_environment */
extern T0* T25f54(TC* ac, T0* C);
/* GEC.set_override_capabilities */
extern void T25f73(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.set_override_settings */
extern void T25f72(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.set_ise_version */
extern void T25f71(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.report_usage_message */
extern void T25f70(TC* ac, T0* C, T0* a1);
/* GEC.report_version_number */
extern void T25f69(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.force_last */
extern void T48f14(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [AP_OPTION].put_right */
extern void T152f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [AP_OPTION].make */
extern T0* T152c3(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T53f28(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T53f27(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T53c26(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T53f30(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T53f29(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T53f29p1(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T53f29p0(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T52f28(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T52f27(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T52f32(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T156f21(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T156f10(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T156f7(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T156f8(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T156f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T156f11(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T156f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T156f20(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T52f26(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T52c25(TC* ac, T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T52f30(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T52f29(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T156f19(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T52f14(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T52f29p1(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T52f29p0(TC* ac, T0* C);
/* AP_STRING_OPTION.set_default_parameter */
extern void T49f27(TC* ac, T0* C, T0* a1);
/* UT_VERSION.out */
extern T0* T51f10(TC* ac, T0* C);
/* GEC.ise_latest */
extern T0* T25f34(TC* ac, T0* C);
/* AP_FLAG.make_with_long_form */
extern T0* T44c17(TC* ac, T0* a1);
/* AP_STRING_OPTION.set_parameter_description */
extern void T49f26(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.set_description */
extern void T49f25(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.make_with_long_form */
extern T0* T49c24(TC* ac, T0* a1);
/* AP_STRING_OPTION.set_long_form */
extern void T49f29(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.initialize */
extern void T49f28(TC* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T49f28p1(TC* ac, T0* C);
/* ET_ISE_VARIABLES.set_ise_variables */
extern void T43f18(TC* ac, T0* C);
/* ET_ISE_VARIABLES.set_ise_c_compiler_variable */
extern void T43f22(TC* ac, T0* C);
/* ET_ISE_VARIABLES.string_ */
extern T0* T43f11(TC* ac, T0* C);
/* ET_ISE_VARIABLES.file_system */
extern T0* T43f10(TC* ac, T0* C);
/* ET_ISE_VARIABLES.unix_file_system */
extern T0* T43f16(TC* ac, T0* C);
/* ET_ISE_VARIABLES.windows_file_system */
extern T0* T43f15(TC* ac, T0* C);
/* ET_ISE_VARIABLES.operating_system */
extern T0* T43f14(TC* ac, T0* C);
/* ET_ISE_VARIABLES.ise_c_compiler_value */
extern T0* T43f9(TC* ac, T0* C);
/* ET_ISE_VARIABLES.set_ise_platform_variable */
extern void T43f21(TC* ac, T0* C);
/* ET_ISE_VARIABLES.set_eiffel_library_variable */
extern void T43f20(TC* ac, T0* C);
/* ET_ISE_VARIABLES.ise_eiffel_value */
extern T0* T43f2(TC* ac, T0* C);
/* ET_ISE_VARIABLES.eiffel_library_value */
extern T0* T43f5(TC* ac, T0* C);
/* ET_ISE_VARIABLES.set_ise_library_variable */
extern void T43f19(TC* ac, T0* C);
/* ET_ISE_VARIABLES.ise_library_value */
extern T0* T43f1(TC* ac, T0* C);
/* GEC.ise_variables */
extern T0* T25f35(TC* ac, T0* C);
/* KL_ARGUMENTS.set_program_name */
extern void T32f7(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T41c189(TC* ac);
/* ET_ERROR_HANDLER.make_standard */
extern void T41f189p1(TC* ac, T0* C);
/* ET_ERROR_HANDLER.std */
extern T0* T41f24(TC* ac, T0* C);
/* KL_ARGUMENTS.to_array */
extern T0* T32f5(TC* ac, T0* C);
/* KL_ARGUMENTS.argument_count */
extern T6 T32f2(TC* ac, T0* C);
/* GEC.arguments */
extern T0* T25f46(TC* ac, T0* C);
/* KL_EXCEPTIONS.die */
extern void T35f2(TC* ac, T0* C, T6 a1);
/* KL_EXCEPTIONS.exceptions_die */
extern void T35f3(TC* ac, T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T25f37(TC* ac, T0* C);
/* KL_STDERR_FILE.put_string */
extern void T38f6(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.string_ */
extern T0* T38f2(TC* ac, T0* C);
/* KL_STANDARD_FILES.error */
extern T0* T37f1(TC* ac, T0* C);
/* KL_STDERR_FILE.make */
extern T0* T38c5(TC* ac);
/* GEC.std */
extern T0* T25f33(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T21f16(TC* ac, T0* C, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* NO_MORE_MEMORY.set_type_name */
extern void T103f16(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_type_name */
extern void T127f13(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_type_name */
extern void T101f13(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_type_name */
extern void T108f21(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T126f13(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_type_name */
extern void T125f17(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_type_name */
extern void T124f13(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T107f15(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_type_name */
extern void T106f17(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T123f13(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T122f13(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_type_name */
extern void T121f13(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_type_name */
extern void T120f13(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_type_name */
extern void T119f13(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_type_name */
extern void T118f13(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T109f16(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T105f15(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T117f13(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_type_name */
extern void T116f13(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_type_name */
extern void T115f13(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_type_name */
extern void T99f17(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_type_name */
extern void T114f13(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_type_name */
extern void T104f15(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_type_name */
extern void T113f13(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_type_name */
extern void T112f13(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_type_name */
extern void T111f13(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_type_name */
extern void T97f13(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_recipient_name */
extern void T103f15(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_recipient_name */
extern void T127f12(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_recipient_name */
extern void T101f12(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_recipient_name */
extern void T108f20(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T126f12(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_recipient_name */
extern void T125f16(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_recipient_name */
extern void T124f12(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T107f14(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_recipient_name */
extern void T106f16(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T123f12(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T122f12(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_recipient_name */
extern void T121f12(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_recipient_name */
extern void T120f12(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_recipient_name */
extern void T119f12(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_recipient_name */
extern void T118f12(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T109f15(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T105f14(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T117f12(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_recipient_name */
extern void T116f12(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_recipient_name */
extern void T115f12(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_recipient_name */
extern void T99f16(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_recipient_name */
extern void T114f12(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_recipient_name */
extern void T104f14(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_recipient_name */
extern void T113f12(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_recipient_name */
extern void T112f12(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_recipient_name */
extern void T111f12(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_recipient_name */
extern void T97f12(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_exception_trace */
extern void T103f11(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_exception_trace */
extern void T127f10(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_exception_trace */
extern void T101f10(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_trace */
extern void T108f18(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T126f10(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_exception_trace */
extern void T125f14(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_exception_trace */
extern void T124f10(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T107f12(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_exception_trace */
extern void T106f14(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T123f10(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T122f10(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_exception_trace */
extern void T121f10(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_exception_trace */
extern void T120f10(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_exception_trace */
extern void T119f10(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_exception_trace */
extern void T118f10(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T109f13(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T105f12(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T117f10(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_exception_trace */
extern void T116f10(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_exception_trace */
extern void T115f10(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_exception_trace */
extern void T99f14(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_exception_trace */
extern void T114f10(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_exception_trace */
extern void T104f12(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_exception_trace */
extern void T113f10(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_exception_trace */
extern void T112f10(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_exception_trace */
extern void T111f10(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_exception_trace */
extern void T97f10(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T21f10(TC* ac, T0* C);
extern T1 T21f10ot1(TC* ac, T0* a1);
extern T1 T21f10ot2(TC* ac, T0* a1);
extern T1 T21f10ot3(TC* ac, T0* a1);
extern T1 T21f10ot4(TC* ac, T0* a1);
extern T1 T21f10ot5(TC* ac, T0* a1);
extern T1 T21f10ot6(TC* ac, T0* a1);
extern T1 T21f10ot7(TC* ac, T0* a1);
/* NO_MORE_MEMORY.set_description */
extern void T103f14(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_description */
extern void T127f11(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_description */
extern void T101f11(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_description */
extern void T108f19(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T126f11(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_description */
extern void T124f11(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_description */
extern void T107f13(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_description */
extern void T106f15(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T123f11(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T122f11(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_description */
extern void T121f11(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_description */
extern void T120f11(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_description */
extern void T119f11(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_description */
extern void T118f11(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_description */
extern void T109f14(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T105f13(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_description */
extern void T117f11(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_description */
extern void T116f11(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_description */
extern void T115f11(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_description */
extern void T99f15(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_description */
extern void T114f11(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_description */
extern void T104f13(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_description */
extern void T113f11(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_description */
extern void T112f11(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_description */
extern void T111f11(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_description */
extern void T97f11(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_information */
extern void T108f17(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.ccom_hresult_to_string */
extern T0* T108f12(TC* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f29(TC* ac, volatile T6* C);
/* INTEGER_32.to_hex_character */
extern T2 T6f31(TC* ac, volatile T6* C);
/* COM_FAILURE.set_hresult_code */
extern void T108f16(TC* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T107f11(TC* ac, T0* C, T6 a1);
/* IO_FAILURE.set_error_code */
extern void T106f13(TC* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T105f11(TC* ac, T0* C, T6 a1);
/* INVARIANT_VIOLATION.set_is_entry */
extern void T104f11(TC* ac, T0* C, T1 a1);
/* ROUTINE_FAILURE.set_class_name */
extern void T99f12(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_routine_name */
extern void T99f11(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_throwing_exception */
extern void T103f13(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_throwing_exception */
extern void T127f9(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_throwing_exception */
extern void T101f9(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_throwing_exception */
extern void T108f15(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T126f9(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_throwing_exception */
extern void T124f9(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T107f10(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_throwing_exception */
extern void T106f12(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T123f9(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T122f9(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_throwing_exception */
extern void T121f9(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_throwing_exception */
extern void T120f9(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_throwing_exception */
extern void T119f9(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_throwing_exception */
extern void T118f9(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T109f12(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T105f10(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T117f9(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_throwing_exception */
extern void T116f9(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_throwing_exception */
extern void T115f9(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_throwing_exception */
extern void T99f13(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_throwing_exception */
extern void T114f9(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_throwing_exception */
extern void T104f10(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T113f9(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T112f9(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_throwing_exception */
extern void T111f9(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_throwing_exception */
extern void T97f9(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T21f12(TC* ac, T0* C, T6 a1);
/* SERIALIZATION_FAILURE.default_create */
extern T0* T127c8(TC* ac);
/* OLD_VIOLATION.default_create */
extern T0* T101c8(TC* ac);
/* COM_FAILURE.default_create */
extern T0* T108c14(TC* ac);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T126c8(TC* ac);
/* MISMATCH_FAILURE.default_create */
extern T0* T124c8(TC* ac);
/* OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T107c9(TC* ac);
/* IO_FAILURE.set_code */
extern void T106f11(TC* ac, T0* C, T6 a1);
/* IO_FAILURE.default_create */
extern T0* T106c10(TC* ac);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T123c8(TC* ac);
/* VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T122c8(TC* ac);
/* EXTERNAL_FAILURE.default_create */
extern T0* T121c8(TC* ac);
/* CREATE_ON_DEFERRED.default_create */
extern T0* T120c8(TC* ac);
/* RESUMPTION_FAILURE.default_create */
extern T0* T119c8(TC* ac);
/* RESCUE_FAILURE.default_create */
extern T0* T118c8(TC* ac);
/* EIFFEL_RUNTIME_PANIC.set_code */
extern void T109f11(TC* ac, T0* C, T6 a1);
/* EIFFEL_RUNTIME_PANIC.code */
extern T6 T109f9(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T109c10(TC* ac);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T105c9(TC* ac);
/* LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T117c8(TC* ac);
/* VARIANT_VIOLATION.default_create */
extern T0* T116c8(TC* ac);
/* BAD_INSPECT_VALUE.default_create */
extern T0* T115c8(TC* ac);
/* ROUTINE_FAILURE.default_create */
extern T0* T99c10(TC* ac);
/* CHECK_VIOLATION.default_create */
extern T0* T114c8(TC* ac);
/* INVARIANT_VIOLATION.default_create */
extern T0* T104c9(TC* ac);
/* FLOATING_POINT_FAILURE.default_create */
extern T0* T113c8(TC* ac);
/* POSTCONDITION_VIOLATION.default_create */
extern T0* T112c8(TC* ac);
/* PRECONDITION_VIOLATION.default_create */
extern T0* T111c8(TC* ac);
/* NO_MORE_MEMORY.set_code */
extern void T103f12(TC* ac, T0* C, T6 a1);
/* NO_MORE_MEMORY.code */
extern T6 T103f9(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern T0* T21f7(TC* ac, T0* C);
/* CELL [NO_MORE_MEMORY].put */
extern T0* T29c2(TC* ac, T0* a1);
/* NO_MORE_MEMORY.default_create */
extern T0* T103c10(TC* ac);
/* VOID_TARGET.default_create */
extern T0* T97c8(TC* ac);
/* ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T21f11(TC* ac, T0* C);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern void T28f2(TC* ac, T0* C, T0* a1);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern T0* T28c2(TC* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_data_cell */
extern T0* T21f6(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.once_raise */
extern void T21f15(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T21f1(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T21f14(TC* ac, T0* C);
/* CELL [NO_MORE_MEMORY].do_nothing */
extern void T29f3(TC* ac, T0* C);
/* CELL [detachable EXCEPTION].do_nothing */
extern void T26f3(TC* ac, T0* C);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].do_nothing */
extern void T28f3(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern T0* T21f5(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].force */
extern void T27f37(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].position */
extern T6 T27f22(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].deleted_position */
extern T6 T27f21(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].add_space */
extern void T27f39(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].accommodate */
extern void T27f40(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_indexes_map */
extern void T27f44(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_deleted_marks */
extern void T27f43(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_keys */
extern void T27f42(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_content */
extern void T27f41(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].put */
extern void T27f45(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_conflict */
extern void T27f47(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].found */
extern T1 T27f31(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].occupied */
extern T1 T27f29(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].empty_duplicate */
extern T0* T27f28(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].compare_objects */
extern void T27f46(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].soon_full */
extern T1 T27f20(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].not_found */
extern T1 T27f19(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].internal_search */
extern void T27f38(TC* ac, T0* C, T6 a1);
/* ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern T0* T21f4(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].do_nothing */
extern void T27f36(TC* ac, T0* C);
/* KL_DIRECTORY.dispose */
extern void T352f32(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T321f28(TC* ac, T0* C);
/* MANAGED_POINTER.dispose */
extern void T143f9(TC* ac, T0* C);
/* MUTEX.dispose */
extern void T137f9(TC* ac, T0* C);
/* MUTEX.destroy */
extern void T137f13(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_destroy */
extern void T137f16(TC* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T42f60(TC* ac, T0* C);
/* PLATFORM.is_mac */
extern T1 T55s4(TC* ac);
/* PLATFORM.is_64_bits */
extern T1 T55s3(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T1802s2(TC* ac);
/* Creation of agent #1 in feature ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T1802s2ac1(TC* ac, T0* a1);
/* ET_ECF_OPTION_DEFAULTS.boolean_option_value_regexp */
extern T0* T1802s8(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.string_ */
extern T0* T1802s7(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.case_insensitive_string_equality_tester */
extern T0* T1802s6(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions */
extern T0* T1802s1(TC* ac, T0* a1);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_1_0_0 */
extern T0* T1802s5(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_1_2_0 */
extern T0* T1802s4(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.ecf_1_2_0 */
extern T0* T1802s3(TC* ac);
/* UT_SHARED_ECF_VERSIONS.ecf_last_known */
extern T0* T2141s1(TC* ac);
/* UT_SHARED_ECF_VERSIONS.ecf_1_22_0 */
extern T0* T2141s2(TC* ac);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T459s58(TC* ac, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T459s32(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T459s28(TC* ac, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T459s27(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T459s42(TC* ac, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T459s44(TC* ac, T2 a1, T2 a2);
/* UC_UNICODE_CONSTANTS.bom_character */
extern T3 T838s6(TC* ac);
/* UC_UTF8_ROUTINES.append_substring_to_utf8 */
extern void T459s56(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_ROUTINES.append_natural_32_code_to_utf8 */
extern void T459s57(TC* ac, T0* a1, T10 a2);
/* UC_UTF8_ROUTINES.four_byte_character_code */
extern T10 T459s50(TC* ac, T2 a1, T2 a2, T2 a3, T2 a4);
/* UC_UTF8_ROUTINES.three_byte_character_code */
extern T10 T459s49(TC* ac, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.two_byte_character_code */
extern T10 T459s48(TC* ac, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T459s3(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.unicode_character_count */
extern T6 T459s40(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.unicode_substring_character_count */
extern T6 T459s43(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.is_string_8 */
extern T1 T459s52(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.is_string_32 */
extern T1 T459s53(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.reset_context_if_multiple_constraints */
extern void T430s11(TC* ac, T1 a1, T0* a2, T0* a3);
/* ET_ADAPTED_BASE_CLASS_CHECKER.tokens */
extern T0* T430s7(TC* ac);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_natural_32_code */
extern T1 T451s1(TC* ac, T10 a1);
/* UC_UTF8_ROUTINES.string_to_utf8 */
extern T0* T459s1(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.substring_to_utf8 */
extern T0* T459s10(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T459s2(TC* ac, T0* a1, T6 a2, T6 a3);
extern T1 T459s2ot1(TC* ac, T0* a1);
extern T1 T459s2ot2(TC* ac, T0* a1);
extern T1 T459s2ot3(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.character_32_byte_count */
extern T6 T459s15(TC* ac, T3 a1);
/* UC_UTF8_ROUTINES.natural_32_code_byte_count */
extern T6 T459s20(TC* ac, T10 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern T0* T459s14(TC* ac);
/* UC_UTF8_ROUTINES.character_8_byte_count */
extern T6 T459s13(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T459s11(TC* ac);
/* PLATFORM.is_windows */
extern T1 T55s2(TC* ac);
/* EXECUTION_ENVIRONMENT.available_cpu_count */
extern T10 T128s7(TC* ac);
/* PLATFORM.is_thread_capable */
extern T1 T55s1(TC* ac);
/* THREAD_CONTROL.join_all */
extern void T458s1(TC* ac);
/* EXECUTION_ENVIRONMENT.sleep */
extern void T128s9(TC* ac, T7 a1);
/* EXECUTION_ENVIRONMENT.eif_sleep */
extern void T128s12(TC* ac, T7 a1);
/* ET_SYSTEM_PROCESSOR_FACTORY.new_system_processor */
extern T0* T74s1(TC* ac, T6 a1);
/* ISE_RUNTIME.check_assert */
extern T1 T833s1(TC* ac, T1 a1);
/* UTF_CONVERTER.escaped_utf_32_string_to_utf_8_string_8 */
extern T0* T39s3(TC* ac, T0* a1);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T39s15(TC* ac, T0* a1, T0* a2);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T39s6(TC* ac, T0* a1);
/* UTF_CONVERTER.ctoi_convertor */
extern T0* T39s7(TC* ac);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T39s5(TC* ac, T0* a1);
/* EXCEPTIONS.exception_trace */
extern T0* T36s1(TC* ac);
/* EXCEPTIONS.exception_manager */
extern T0* T36s2(TC* ac);
/* SERIALIZATION_FAILURE.trace */
extern T0* T127f7(TC* ac, T0* C);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.trace */
extern T0* T126f7(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.trace */
extern T0* T125f7(TC* ac, T0* C);
/* MISMATCH_FAILURE.trace */
extern T0* T124f7(TC* ac, T0* C);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.trace */
extern T0* T123f7(TC* ac, T0* C);
/* VOID_ASSIGNED_TO_EXPANDED.trace */
extern T0* T122f7(TC* ac, T0* C);
/* EXTERNAL_FAILURE.trace */
extern T0* T121f7(TC* ac, T0* C);
/* CREATE_ON_DEFERRED.trace */
extern T0* T120f7(TC* ac, T0* C);
/* RESUMPTION_FAILURE.trace */
extern T0* T119f7(TC* ac, T0* C);
/* RESCUE_FAILURE.trace */
extern T0* T118f7(TC* ac, T0* C);
/* LOOP_INVARIANT_VIOLATION.trace */
extern T0* T117f7(TC* ac, T0* C);
/* VARIANT_VIOLATION.trace */
extern T0* T116f7(TC* ac, T0* C);
/* BAD_INSPECT_VALUE.trace */
extern T0* T115f7(TC* ac, T0* C);
/* CHECK_VIOLATION.trace */
extern T0* T114f7(TC* ac, T0* C);
/* FLOATING_POINT_FAILURE.trace */
extern T0* T113f7(TC* ac, T0* C);
/* POSTCONDITION_VIOLATION.trace */
extern T0* T112f7(TC* ac, T0* C);
/* PRECONDITION_VIOLATION.trace */
extern T0* T111f7(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.trace */
extern T0* T109f8(TC* ac, T0* C);
/* COM_FAILURE.trace */
extern T0* T108f13(TC* ac, T0* C);
/* OPERATING_SYSTEM_FAILURE.trace */
extern T0* T107f7(TC* ac, T0* C);
/* IO_FAILURE.trace */
extern T0* T106f9(TC* ac, T0* C);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.trace */
extern T0* T105f7(TC* ac, T0* C);
/* INVARIANT_VIOLATION.trace */
extern T0* T104f7(TC* ac, T0* C);
/* NO_MORE_MEMORY.trace */
extern T0* T103f8(TC* ac, T0* C);
/* OLD_VIOLATION.trace */
extern T0* T101f7(TC* ac, T0* C);
/* ROUTINE_FAILURE.trace */
extern T0* T99f9(TC* ac, T0* C);
/* VOID_TARGET.trace */
extern T0* T97f7(TC* ac, T0* C);
/* NO_MORE_MEMORY.original */
extern T0* T103f7(TC* ac, T0* C);
/* SERIALIZATION_FAILURE.original */
extern T0* T127f6(TC* ac, T0* C);
/* OLD_VIOLATION.original */
extern T0* T101f6(TC* ac, T0* C);
/* COM_FAILURE.original */
extern T0* T108f11(TC* ac, T0* C);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.original */
extern T0* T126f6(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.original */
extern T0* T125f6(TC* ac, T0* C);
/* MISMATCH_FAILURE.original */
extern T0* T124f6(TC* ac, T0* C);
/* OPERATING_SYSTEM_FAILURE.original */
extern T0* T107f8(TC* ac, T0* C);
/* IO_FAILURE.original */
extern T0* T106f8(TC* ac, T0* C);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.original */
extern T0* T123f6(TC* ac, T0* C);
/* VOID_ASSIGNED_TO_EXPANDED.original */
extern T0* T122f6(TC* ac, T0* C);
/* EXTERNAL_FAILURE.original */
extern T0* T121f6(TC* ac, T0* C);
/* CREATE_ON_DEFERRED.original */
extern T0* T120f6(TC* ac, T0* C);
/* RESUMPTION_FAILURE.original */
extern T0* T119f6(TC* ac, T0* C);
/* RESCUE_FAILURE.original */
extern T0* T118f6(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.original */
extern T0* T109f7(TC* ac, T0* C);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.original */
extern T0* T105f8(TC* ac, T0* C);
/* LOOP_INVARIANT_VIOLATION.original */
extern T0* T117f6(TC* ac, T0* C);
/* VARIANT_VIOLATION.original */
extern T0* T116f6(TC* ac, T0* C);
/* BAD_INSPECT_VALUE.original */
extern T0* T115f6(TC* ac, T0* C);
/* ROUTINE_FAILURE.original */
extern T0* T99f8(TC* ac, T0* C);
/* CHECK_VIOLATION.original */
extern T0* T114f6(TC* ac, T0* C);
/* INVARIANT_VIOLATION.original */
extern T0* T104f8(TC* ac, T0* C);
/* FLOATING_POINT_FAILURE.original */
extern T0* T113f6(TC* ac, T0* C);
/* POSTCONDITION_VIOLATION.original */
extern T0* T112f6(TC* ac, T0* C);
/* PRECONDITION_VIOLATION.original */
extern T0* T111f6(TC* ac, T0* C);
/* VOID_TARGET.original */
extern T0* T97f6(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make */
extern T0* T69c47(TC* ac);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern T0* T78f155(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern T0* T501c1063(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T501f1065(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T501f1068(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern T0* T501f684(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T501f748(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_44 */
extern void T501f1185(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T501f1257(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.integer_array_ */
extern T0* T501f754(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template_43 */
extern void T501f1184(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_42 */
extern void T501f1183(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_41 */
extern void T501f1182(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_40 */
extern void T501f1181(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_39 */
extern void T501f1180(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_38 */
extern void T501f1179(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_37 */
extern void T501f1178(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_36 */
extern void T501f1177(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T501f1176(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T501f1175(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T501f1174(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T501f1173(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T501f1172(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T501f1171(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T501f1170(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T501f1169(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T501f1168(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T501f1167(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T501f1166(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T501f1165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T501f1164(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T501f1163(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T501f1162(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T501f1161(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T501f1160(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T501f1159(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T501f1158(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T501f1157(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T501f1156(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T501f1155(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T501f1154(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T501f1153(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T501f1152(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T501f1151(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T501f1150(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T501f1149(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T501f1148(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T501f1147(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T501f1146(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T501f1145(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T501f1144(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T501f1143(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T501f1142(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern T0* T501f770(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytable_template_44 */
extern void T501f1141(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_43 */
extern void T501f1140(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_42 */
extern void T501f1139(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_41 */
extern void T501f1138(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_40 */
extern void T501f1137(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_39 */
extern void T501f1136(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_38 */
extern void T501f1135(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_37 */
extern void T501f1134(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_36 */
extern void T501f1133(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_35 */
extern void T501f1132(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_34 */
extern void T501f1131(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_33 */
extern void T501f1130(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_32 */
extern void T501f1129(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_31 */
extern void T501f1128(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_30 */
extern void T501f1127(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_29 */
extern void T501f1126(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_28 */
extern void T501f1125(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_27 */
extern void T501f1124(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_26 */
extern void T501f1123(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_25 */
extern void T501f1122(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_24 */
extern void T501f1121(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_23 */
extern void T501f1120(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_22 */
extern void T501f1119(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_21 */
extern void T501f1118(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_20 */
extern void T501f1117(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_19 */
extern void T501f1116(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_18 */
extern void T501f1115(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_17 */
extern void T501f1114(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_16 */
extern void T501f1113(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_15 */
extern void T501f1112(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_14 */
extern void T501f1111(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_13 */
extern void T501f1110(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_12 */
extern void T501f1109(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_11 */
extern void T501f1108(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_10 */
extern void T501f1107(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_9 */
extern void T501f1106(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_8 */
extern void T501f1105(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_7 */
extern void T501f1104(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T501f1103(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T501f1102(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T501f1101(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T501f1100(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T501f1099(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T501f1098(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern T0* T501f764(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T501f1097(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T501f1096(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template */
extern T0* T501f762(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yypact_template_10 */
extern void T501f1095(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_9 */
extern void T501f1094(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_8 */
extern void T501f1093(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_7 */
extern void T501f1092(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_6 */
extern void T501f1091(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_5 */
extern void T501f1090(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_4 */
extern void T501f1089(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_3 */
extern void T501f1088(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T501f1087(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T501f1086(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern T0* T501f760(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T501f1085(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T501f1084(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template */
extern T0* T501f757(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_10 */
extern void T501f1083(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T501f1082(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T501f1081(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T501f1080(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T501f1079(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T501f1078(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T501f1077(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T501f1076(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T501f1075(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T501f1074(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern T0* T501f755(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern T0* T501f745(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_10 */
extern void T501f1253(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T501f1252(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T501f1251(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T501f1250(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T501f1249(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T501f1248(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T501f1247(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T501f1246(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T501f1245(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T501f1244(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern T0* T501f742(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T501f1238(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T501f1237(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T501f1236(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T501f1235(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T501f1234(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern T0* T501f738(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T501f1230(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T501f1229(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T501f1067(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T1376f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T1377c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T1376c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T1373f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T1375c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T1373c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T1370f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T1372c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T1370c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].make */
extern T0* T1367f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].make_empty */
extern T0* T1369c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].default_create */
extern T0* T1367c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].make */
extern T0* T1364f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].make_empty */
extern T0* T1366c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].default_create */
extern T0* T1364c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T1361f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T1363c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T1361c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T1359f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T1360c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T1359c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T1356f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T1358c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T1356c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].make */
extern T0* T1353f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].make_empty */
extern T0* T1355c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].default_create */
extern T0* T1353c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].make */
extern T0* T1350f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].make_empty */
extern T0* T1352c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].default_create */
extern T0* T1350c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].make */
extern T0* T1347f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].make_empty */
extern T0* T1349c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].default_create */
extern T0* T1347c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].make */
extern T0* T1345f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE].make_empty */
extern T0* T1346c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].default_create */
extern T0* T1345c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T1342f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T1344c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T1342c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T1339f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T1341c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T1339c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].make */
extern T0* T1336f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].make_empty */
extern T0* T1338c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].default_create */
extern T0* T1336c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T1334f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T1335c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T1334c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T1331f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T1333c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T1331c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].make */
extern T0* T1329f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].make_empty */
extern T0* T1330c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].default_create */
extern T0* T1329c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].make */
extern T0* T1326f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].make_empty */
extern T0* T1328c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].default_create */
extern T0* T1326c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T1323f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T1325c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T1323c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].make */
extern T0* T1321f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].make_empty */
extern T0* T1322c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].default_create */
extern T0* T1321c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].make */
extern T0* T1319f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].make_empty */
extern T0* T1320c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].default_create */
extern T0* T1319c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T1316f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T1318c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T1316c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T1314f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T1315c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T1314c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T1312f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T1313c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T1312c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].make */
extern T0* T1309f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].make_empty */
extern T0* T1311c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].default_create */
extern T0* T1309c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T1307f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T1308c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T1307c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T1304f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T1306c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T1304c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T1301f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T1303c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T1301c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].make */
extern T0* T1298f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].make_empty */
extern T0* T1300c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].default_create */
extern T0* T1298c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].make */
extern T0* T1295f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].make_empty */
extern T0* T1297c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].default_create */
extern T0* T1295c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].make */
extern T0* T1293f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].make_empty */
extern T0* T1294c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].default_create */
extern T0* T1293c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].make */
extern T0* T1290f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].make_empty */
extern T0* T1292c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].default_create */
extern T0* T1290c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].make */
extern T0* T1287f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].make_empty */
extern T0* T1289c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].default_create */
extern T0* T1287c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T1285f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T1286c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T1285c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T1282f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T1284c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T1282c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T1279f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1281c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1279c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T1276f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T1278c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T1276c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T1273f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T1275c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T1273c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T1271f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T1272c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T1271c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1268f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1270c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1268c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T1265f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T1267c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T1265c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T1262f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T1264c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T1262c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T1260f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T1261c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T1260c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T1257f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T1259c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T1257c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T1255f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T1256c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T1255c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T1252f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T1254c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T1252c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].make */
extern T0* T1249f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].make_empty */
extern T0* T1251c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].default_create */
extern T0* T1249c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].make */
extern T0* T1247f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].make_empty */
extern T0* T1248c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].default_create */
extern T0* T1247c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].make */
extern T0* T1245f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].make_empty */
extern T0* T1246c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].default_create */
extern T0* T1245c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].make */
extern T0* T1243f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].make_empty */
extern T0* T1244c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].default_create */
extern T0* T1243c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1241f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].make_empty */
extern T0* T1242c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].default_create */
extern T0* T1241c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].make */
extern T0* T1239f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].make_empty */
extern T0* T1240c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].default_create */
extern T0* T1239c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T1236f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T1238c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T1236c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].make */
extern T0* T1233f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].make_empty */
extern T0* T1235c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].default_create */
extern T0* T1233c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T1231f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T1232c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T1231c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1228f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1230c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1228c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T1226f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T1227c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T1226c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T1224f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T1225c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T1224c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T1221f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T1223c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T1221c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T1219f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T1220c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T1219c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T1216f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1218c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1216c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T1214f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T1215c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T1214c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T1211f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T1213c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T1211c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T1208f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T1210c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T1208c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T1205f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T1207c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T1205c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T1202f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T1204c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T1202c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T1200f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T1201c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T1200c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].make */
extern T0* T1198f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].make_empty */
extern T0* T1199c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].default_create */
extern T0* T1198c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].make */
extern T0* T1196f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].make_empty */
extern T0* T1197c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].default_create */
extern T0* T1196c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T1194f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T1195c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T1194c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T1191f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T1193c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T1191c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T1188f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T1190c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T1188c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T1185f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T1187c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T1185c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].make */
extern T0* T1182f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].make_empty */
extern T0* T1184c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].default_create */
extern T0* T1182c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].make */
extern T0* T1179f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T1181c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].default_create */
extern T0* T1179c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T1176f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T1178c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T1176c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T1173f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T1175c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T1173c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T1170f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T1172c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T1170c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].make */
extern T0* T1167f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].make_empty */
extern T0* T1169c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].default_create */
extern T0* T1167c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T1165f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T1166c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T1165c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T1162f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T1164c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T1162c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1159f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1161c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1159c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T1156f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T1158c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T1156c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1153f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T1155c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T1153c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].make */
extern T0* T1150f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].make_empty */
extern T0* T1152c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].default_create */
extern T0* T1150c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T1147f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T1149c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T1147c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T1144f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T1146c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T1144c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1141f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1143c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1141c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].make */
extern T0* T1139f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].make_empty */
extern T0* T1140c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].default_create */
extern T0* T1139c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T1136f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T1138c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T1136c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T1134f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T1135c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T1134c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T1131f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T1133c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T1131c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T1129f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T1130c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T1129c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T1127f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T1128c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T1127c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T1124f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T1126c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T1124c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T1121f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T1123c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T1121c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T1118f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T1120c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T1118c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T1115f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T1117c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T1115c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T1112f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T1114c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T1112c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T1110f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T1111c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T1110c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T1107f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T1109c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T1107c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T1104f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T1106c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T1104c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T1101f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T1103c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T1101c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].make */
extern T0* T1099f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].make_empty */
extern T0* T1100c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].default_create */
extern T0* T1099c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T1096f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T1098c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T1096c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T1094f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T1095c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T1094c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T1091f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T1093c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T1091c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1088f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T1090c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T1088c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T1086f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T1087c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T1086c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T1084f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T1085c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T1084c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1082f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1083c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1082c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T1080f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T1081c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T1080c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T1077f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T1079c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T1077c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T1074f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T1076c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T1074c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T1071f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T1073c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T1071c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T1069f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T1070c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T1069c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T1066f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T1068c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T1066c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T1063f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].make_empty */
extern T0* T1065c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T1063c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T1060f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T1062c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T1060c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T1057f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T1059c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T1057c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T1055f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T1056c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T1055c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T1052f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T1054c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T1052c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T1050f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T1051c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T1050c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T1047f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T1049c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T1047c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T1044f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T1046c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T1044c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].make */
extern T0* T1042f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].make_empty */
extern T0* T1043c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].default_create */
extern T0* T1042c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T1039f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T1041c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T1039c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T1037f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T1038c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T1037c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T1034f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T1036c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T1034c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T1031f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T1033c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T1031c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T1028f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T1030c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T1028c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T1026f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T1027c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T1026c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T1024f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T1025c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T1024c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T1021f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T1023c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T1021c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T1018f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T1020c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T1018c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T1016f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T1017c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T1016c3(TC* ac);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T501f1064(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T501f1066(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T501f1069(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T501f1069p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T501f1071(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern T0* T501f743(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T501f749(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_5 */
extern void T501f1243(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T501f1258(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_acclist_template_4 */
extern void T501f1242(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T501f1241(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T501f1240(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T501f1239(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern T0* T501f741(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T501f1233(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T501f1232(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T501f1231(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern T0* T501f739(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern T0* T501f737(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template_6 */
extern void T501f1228(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_5 */
extern void T501f1227(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_4 */
extern void T501f1226(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_3 */
extern void T501f1225(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T501f1224(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T501f1223(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template */
extern T0* T501f714(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T501f1222(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T501f1221(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T501f1220(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template */
extern T0* T501f712(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T501f1219(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T501f1218(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T501f1217(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern T0* T501f710(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_17 */
extern void T501f1216(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_16 */
extern void T501f1215(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T501f1214(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T501f1213(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T501f1212(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T501f1211(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T501f1210(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T501f1209(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T501f1208(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T501f1207(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T501f1206(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T501f1205(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T501f1204(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T501f1203(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T501f1202(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T501f1201(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T501f1200(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern T0* T501f708(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T501f1199(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T501f1198(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T501f1197(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T501f1196(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T501f1195(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T501f1194(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T501f1193(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T501f1192(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T501f1191(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T501f1190(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T501f1189(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T501f1188(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T501f1187(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T501f1186(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T501f740(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1014c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T1014f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T1014f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1719c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T1013c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].set_internal_cursor */
extern void T1013f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T1013f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1718c5(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1012c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1714f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].make_empty */
extern T0* T1715c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].default_create */
extern T0* T1714c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1011c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1713f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make_empty */
extern T0* T1712c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].default_create */
extern T0* T1713c3(TC* ac);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1010c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1710f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].make_empty */
extern T0* T1711c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].default_create */
extern T0* T1710c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1009c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1709f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].make_empty */
extern T0* T1708c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].default_create */
extern T0* T1709c3(TC* ac);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].make */
extern T0* T1008c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].make */
extern T0* T1706f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1707c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].default_create */
extern T0* T1706c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1007c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1705f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1704c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1705c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T1006c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T1005c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T1004c9(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T1003c9(TC* ac, T6 a1);
/* YY_UNICODE_FILE_BUFFER.make_with_size */
extern T0* T1001c22(TC* ac, T0* a1, T6 a2);
/* YY_UNICODE_FILE_BUFFER.new_default_buffer */
extern T0* T1001f21(TC* ac, T0* C, T6 a1);
/* KL_STANDARD_FILES.input */
extern T0* T37f3(TC* ac, T0* C);
/* KL_STDIN_FILE.make */
extern T0* T996c12(TC* ac);
/* ET_EIFFEL_PARSER.std */
extern T0* T501f766(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern void T501f1063p1(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.make */
extern T0* T500c7(TC* ac, T0* a1);
/* ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T500f4(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T499c136(TC* ac, T0* a1);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T499f137(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T499f138(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T499f139(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T499f139p1(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T499f141(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern T0* T499f87(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T499f96(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T499f173(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T499f183(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T499f102(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T499f172(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T499f171(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T499f170(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern T0* T499f85(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T499f169(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T499f168(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T499f167(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern T0* T499f80(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern T0* T499f74(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template_6 */
extern void T499f166(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_5 */
extern void T499f165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_4 */
extern void T499f164(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_3 */
extern void T499f163(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T499f162(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T499f161(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern T0* T499f71(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template_6 */
extern void T499f160(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_5 */
extern void T499f159(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_4 */
extern void T499f158(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T499f157(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T499f156(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T499f155(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern T0* T499f63(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T499f154(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T499f153(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T499f152(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern T0* T499f59(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T499f151(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T499f150(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T499f149(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T499f148(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T499f147(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T499f146(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T499f145(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T499f144(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T499f143(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern T0* T499f94(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T499f182(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T499f181(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T499f180(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T499f179(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T499f178(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T499f177(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T499f176(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T499f175(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T499f174(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T499f83(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T499f95(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.make */
extern T0* T398c49(TC* ac, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.make_single */
extern void T398f61(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.make_null_single */
extern void T398f73(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T398f86(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_unknown_builtin_reported_only */
extern void T398f85(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_preparse_shallow_mode_only */
extern void T398f84(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].put_last */
extern void T758f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].force */
extern void T1484f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_SYSTEM_PROCESSOR].fill_with */
extern void T1483f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYSTEM_PROCESSOR].extend */
extern void T1483f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].make */
extern T0* T758c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].set_internal_cursor */
extern void T758f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].new_cursor */
extern T0* T758f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR].make */
extern T0* T1485c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].make */
extern T0* T1484f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_SYSTEM_PROCESSOR].make_empty */
extern T0* T1483c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].default_create */
extern T0* T1484c2(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove */
extern void T208f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove_position */
extern void T208f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_keep_head */
extern void T208f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_keep_head */
extern void T208f78(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].keep_head */
extern void T625f10(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].set_count */
extern void T625f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].move_cursors_forth */
extern void T208f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].internal_set_key_equality_tester */
extern void T208f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].twin */
extern T0* T208f38(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].copy */
extern void T208f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].copy */
extern void T208f68p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_clashes */
extern void T208f75(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_slots */
extern void T208f74(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_key_storage */
extern void T208f73(TC* ac, T0* C);
/* SPECIAL [STRING_8].resized_area */
extern T0* T34f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T34f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].force */
extern void T34f15(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].move_data */
extern void T34f14(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T34f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T34f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_item_storage */
extern void T208f72(TC* ac, T0* C);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].resized_area */
extern T0* T625f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].copy_data */
extern void T625f11(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].force */
extern void T625f14(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].move_data */
extern void T625f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].overlapping_move */
extern void T625f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].non_overlapping_move */
extern void T625f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].valid_cursor */
extern T1 T208f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].move_all_cursors_after */
extern void T208f70(TC* ac, T0* C);
/* Call to STRING_8.to_integer */
extern T6 T17x2228289(TC* ac, T0* C);
/* Call to STRING_8.is_integer */
extern T1 T17x2228255(TC* ac, T0* C);
/* Call to STRING_8.count */
extern T6 T17x2228263(TC* ac, T0* C);
/* Call to STRING_8.is_empty */
extern T1 T17x2228241(TC* ac, T0* C);
/* Call to STRING_8.hash_code */
extern T6 T17x655361(TC* ac, T0* C);
/* Call to STRING_8.item */
extern T2 T17x2572289T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.twin */
extern T0* T17x229387(TC* ac, T0* C);
/* Call to STRING_8.has */
extern T1 T17x2211867T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.as_lower */
extern T0* T17x2228285(TC* ac, T0* C);
/* Call to STRING_8.substring */
extern T0* T17x2228304T6T6(TC* ac, T0* C, T6 a1, T6 a2);
/* Call to STRING_8.ends_with */
extern T1 T17x2211869T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.code */
extern T10 T17x2228225T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.alias "+" */
extern T0* T17x2211872T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.starts_with */
extern T1 T17x2211868T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.same_string */
extern T1 T17x2211860T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.has_substring */
extern T1 T17x2228268T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.to_boolean */
extern T1 T17x2228301(TC* ac, T0* C);
/* Call to STRING_8.is_boolean */
extern T1 T17x2228252(TC* ac, T0* C);
/* Call to STRING_8.as_upper */
extern T0* T17x2228286(TC* ac, T0* C);
/* Call to STRING_8.same_type */
extern T1 T17x229380T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.occurrences */
extern T6 T17x2211855T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.index_of */
extern T6 T17x2211845T2T6(TC* ac, T0* C, T2 a1, T6 a2);
/* Call to EXCEPTION.original */
extern T0* T22x1753096(TC* ac, T0* C);
/* Call to EXCEPTION.trace */
extern T0* T22x1753094(TC* ac, T0* C);
/* Call to ANY.same_type */
extern T1 T23x229380T0(TC* ac, T0* C, T0* a1);
/* Call to READABLE_STRING_GENERAL.item */
extern T3 T40x2228226T6(TC* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.count */
extern T6 T40x2228263(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.code */
extern T10 T40x2228225T6(TC* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.is_empty */
extern T1 T40x2228241(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.as_string_8 */
extern T0* T40x2228280(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.as_string_32 */
extern T0* T40x2228283(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.to_string_32 */
extern T0* T40x2228284(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring */
extern T0* T40x2228304T6T6(TC* ac, T0* C, T6 a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.substring_index */
extern T6 T40x2228274T0T6(TC* ac, T0* C, T0* a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.same_string */
extern T1 T40x2228269T0(TC* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T46x6078465T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T46x6193157(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T46x6193160(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T46x6193159(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T46x6193154(TC* ac, T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T56x5586952(TC* ac, T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T56x5586947(TC* ac, T0* C);
/* Call to AP_OPTION.description */
extern T0* T56x5586945(TC* ac, T0* C);
/* Call to AP_OPTION.names */
extern T0* T56x5586949(TC* ac, T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T56x5586955(TC* ac, T0* C);
/* Call to AP_OPTION.name */
extern T0* T56x5586948(TC* ac, T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T56x5586958(TC* ac, T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T56x5586954(TC* ac, T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T56x5586957(TC* ac, T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T56x5586951(TC* ac, T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T56x5586950(TC* ac, T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T56x5586961(TC* ac, T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T56x5586956(TC* ac, T0* C);
/* Call to AP_OPTION.example */
extern T0* T56x5586946(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T71x22642691(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.index_of_label */
extern T6 T71x22069257T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T71x22609933T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T71x15368199T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.same_base_type_with_type_marks */
extern T1 T71x22609976T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T71x22610001(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T71x15368202T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.is_type_attached */
extern T1 T71x15368197T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_type_expanded */
extern T1 T71x15368196T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.type_with_type_mark */
extern T0* T71x22609941T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T71x22069252(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T71x22609926T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.adapted_base_class_with_named_feature */
extern T0* T71x22609925T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T71x22609954T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.named_base_class */
extern T0* T71x22642692(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T71x22609931T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T71x22069260(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T71x22642694T6(TC* ac, T0* C, T6 a1);
/* Call to ET_BASE_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T71x22642693T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T71x22609968T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T71x22069264(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_attached */
extern T1 T71x22069265(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_controlled */
extern T1 T71x22609959(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T71x22609937T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T71x22609928T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T71x22609952T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T71x22609992T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.is_type_separate_with_type_mark */
extern T1 T71x22609948T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T71x22609950T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T71x22609956T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T71x22609993T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T71x22609991T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T71x22609930T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type */
extern T1 T71x22609973T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T71x22609974T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.canonical_to_text */
extern T0* T71x22610003(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T71x22609984T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T71x22609985T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T71x22609983T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.base_type_actual_count */
extern T6 T71x22609943T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T71x22609935T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T71x22495234(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T71x22495233(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.same_as_base_class */
extern T1 T71x22069276(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.runtime_name_to_text */
extern T0* T71x22610004(TC* ac, T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T83x11878403(TC* ac, T0* C);
/* Call to READABLE_STRING_8.area */
extern T0* T85x2211878(TC* ac, T0* C);
/* Call to READABLE_STRING_8.count */
extern T6 T85x2228263(TC* ac, T0* C);
/* Call to READABLE_STRING_8.area_lower */
extern T6 T85x2211879(TC* ac, T0* C);
/* Call to READABLE_STRING_8.to_string_8 */
extern T0* T85x2228277(TC* ac, T0* C);
/* Call to KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T158x7618561T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ECF_SYSTEM_CONFIG.ecf_version */
extern T0* T189x13336580(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T189x13336577(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T189x13336581(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T189x14106627(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T189x14106628(TC* ac, T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T201x20840451(TC* ac, T0* C);
/* Call to ET_POSITION.column */
extern T6 T201x20840450(TC* ac, T0* C);
/* Call to ET_POSITION.line */
extern T6 T201x20840449(TC* ac, T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T201x20840455(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.conforms_to_primary_type */
extern T1 T228x24117269T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_query */
extern T0* T228x24117285T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_basic */
extern T1 T228x24526852(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_expanded */
extern T1 T228x24559617(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.base_type */
extern T0* T228x24526857(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_agent_type */
extern T1 T228x24117250(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_procedure */
extern T0* T228x24117286T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.dynamic_query */
extern T0* T228x24117283T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.dynamic_procedure */
extern T0* T228x24117284T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.queries */
extern T0* T228x24117281(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attribute_count */
extern T6 T228x24117271(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.base_class */
extern T0* T228x24526858(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.id */
extern T6 T228x24117267(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_special */
extern T1 T228x24117251(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_builtin_attribute */
extern T1 T228x24117287T0T8T8(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T228x24117278(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_redefined_copy_routine */
extern T1 T228x24117277(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_once_per_object_routines */
extern T1 T228x24117274(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T228x24117280(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.primary_type */
extern T0* T228x24526859(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.separate_type */
extern T0* T228x24117264(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.hash_code */
extern T6 T228x655361(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_fields */
extern T1 T228x24117276(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_attributes */
extern T1 T228x24117273(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_redefined_is_equal_routine */
extern T1 T228x24117279(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_alive */
extern T1 T228x24117249(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attached_type */
extern T0* T228x24117263(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.next_type */
extern T0* T228x24117294(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.conforming_ancestors */
extern T0* T228x24117270(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.type_mark */
extern T0* T228x24526861(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attached_separate_type */
extern T0* T228x24117265(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.procedure_calls */
extern T0* T228x24117291(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.query_calls */
extern T0* T228x24117290(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.procedures */
extern T0* T228x24117282(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.meta_type */
extern T0* T228x24526860(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_boolean */
extern T1 T228x24117253(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_tuple */
extern T1 T228x24117252(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_static */
extern T1 T228x24117257(TC* ac, T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T239x655361(TC* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_names */
extern T0* T239x18268167(TC* ac, T0* C);
/* Call to ET_PROCEDURE.alias_names */
extern T0* T239x18268163(TC* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T239x18268166(TC* ac, T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T239x18350088(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T239x18268217T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.lower_name */
extern T0* T239x19005443(TC* ac, T0* C);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T239x18350091(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_static */
extern T1 T239x18268198(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T239x18268215T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T239x18268214(TC* ac, T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T239x18350090(TC* ac, T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T239x18268221T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T239x18350086T6(TC* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.implementation_class */
extern T0* T239x19005445(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_parenthesisable */
extern T1 T239x18268205(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T239x18268187(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T239x18268188(TC* ac, T0* C);
/* Call to ET_PROCEDURE.postconditions */
extern T0* T239x17858570(TC* ac, T0* C);
/* Call to ET_PROCEDURE.preconditions */
extern T0* T239x17858569(TC* ac, T0* C);
/* Call to ET_QUERY.type */
extern T0* T240x18350089(TC* ac, T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T240x19005443(TC* ac, T0* C);
/* Call to ET_QUERY.overloaded_alias_names */
extern T0* T240x18268167(TC* ac, T0* C);
/* Call to ET_QUERY.alias_names */
extern T0* T240x18268163(TC* ac, T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T240x18268166(TC* ac, T0* C);
/* Call to ET_QUERY.name */
extern T0* T240x18350088(TC* ac, T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T240x655361(TC* ac, T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T240x18268215T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.first_seed */
extern T6 T240x18350091(TC* ac, T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T240x18808835(TC* ac, T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T240x18268191(TC* ac, T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T240x18350090(TC* ac, T0* C);
/* Call to ET_QUERY.is_static */
extern T1 T240x18268198(TC* ac, T0* C);
/* Call to ET_QUERY.is_stable_attribute */
extern T1 T240x18268201(TC* ac, T0* C);
/* Call to ET_QUERY.arguments_count */
extern T6 T240x18268214(TC* ac, T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T240x18350086T6(TC* ac, T0* C, T6 a1);
/* Call to ET_QUERY.implementation_class */
extern T0* T240x19005445(TC* ac, T0* C);
/* Call to ET_QUERY.implementation_feature */
extern T0* T240x17858574(TC* ac, T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T240x18268193(TC* ac, T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T240x18268192(TC* ac, T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T240x18268221T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.is_prefixable */
extern T1 T240x18268203(TC* ac, T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T240x18268202(TC* ac, T0* C);
/* Call to ET_QUERY.is_once_per_object */
extern T1 T240x17858564(TC* ac, T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T240x17858561(TC* ac, T0* C);
/* Call to ET_QUERY.is_parenthesisable */
extern T1 T240x18268205(TC* ac, T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T240x18268204(TC* ac, T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T240x18268187(TC* ac, T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T240x18268188(TC* ac, T0* C);
/* Call to ET_QUERY.postconditions */
extern T0* T240x17858570(TC* ac, T0* C);
/* Call to ET_QUERY.preconditions */
extern T0* T240x17858569(TC* ac, T0* C);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T243x22609933T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T243x22609926T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.adapted_base_class_with_named_feature */
extern T0* T243x22609925T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T243x15368199T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_base_type_with_type_marks */
extern T1 T243x22609976T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_type_with_type_marks */
extern T1 T243x22609974T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.to_text */
extern T0* T243x22610001(TC* ac, T0* C);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T243x15368201T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.has_identifier_anchored_type */
extern T1 T243x22609962(TC* ac, T0* C);
/* Call to ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T243x22609963T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T243x22609934T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T243x22609971T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T243x22609994T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T243x22609964T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_unqualified_anchored_type */
extern T1 T243x22609961(TC* ac, T0* C);
/* Call to ET_TYPE.same_named_type */
extern T1 T243x22609973T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T243x21970950T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.position */
extern T0* T243x20627457(TC* ac, T0* C);
/* Call to ET_TYPE.type_with_type_mark */
extern T0* T243x22609941T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T243x22609930T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T243x22609981T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T243x22609980T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T243x22609979T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T243x22609982T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T243x22609978T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T243x22609972T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T243x22609977T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T243x22609968T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T243x22609937T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_with_type_mark */
extern T0* T243x22609928T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_reference_with_type_mark */
extern T1 T243x22609952T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_attached_with_type_mark */
extern T1 T243x22609954T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T243x22609992T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.is_type_separate_with_type_mark */
extern T1 T243x22609948T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T243x22609950T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T243x22609956T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T243x22609993T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T243x22609991T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.named_base_class */
extern T0* T243x22609924T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T243x15368202T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.base_type_actual */
extern T0* T243x22609931T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T243x22609943T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type_with_type_mark */
extern T0* T243x22609935T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T243x22609984T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T243x22609985T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T243x22609983T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_class */
extern T0* T243x22609923T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.conforms_to_constraint */
extern T1 T243x22609989T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_type_reference */
extern T1 T243x22609951T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T243x15368196T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_detachable */
extern T1 T243x22609955T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T243x22609936T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_separate */
extern T1 T243x22609947T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_base_type */
extern T1 T243x22609946(TC* ac, T0* C);
/* Call to ET_TYPE.is_named_type */
extern T1 T243x15368195(TC* ac, T0* C);
/* Call to ET_TYPE.is_controlled */
extern T1 T243x22609959(TC* ac, T0* C);
/* Call to ET_TYPE.is_like_current */
extern T1 T243x22609944(TC* ac, T0* C);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T243x22609929T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_self_initializing */
extern T1 T243x22609957T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_attached */
extern T1 T243x15368197T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type_mark */
extern T0* T243x22609921(TC* ac, T0* C);
/* Call to ET_TYPE.type */
extern T0* T243x22659073(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T244x22642745(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T244x22642744(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T244x22642691(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T244x22642689(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_root_context */
extern T1 T244x22642704(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T244x22642697T6(TC* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T244x22642702(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T244x22642723(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.has_nested_non_separate_reference_attributes */
extern T1 T244x22642717(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T244x22642730T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.scoop_mode */
extern T1 T244x22642724(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T244x22642700(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.adapted_base_class_with_seeded_feature */
extern T0* T244x22642694T6(TC* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.adapted_base_class_with_named_feature */
extern T0* T244x22642693T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_separate */
extern T1 T244x22642706(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T244x22642711T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T244x22642713T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T244x22642742T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T244x22642732T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T244x22642701T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T244x22642738T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T244x22642726T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T244x22642743T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T244x22642741T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T244x22642733T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T244x22642731T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T244x22642715T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_separate_with_type_mark */
extern T1 T244x22642707T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T244x22642709T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.named_base_class */
extern T0* T244x22642692(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T244x22642696T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T247x22347779(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T247x22347780(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T247x22609956T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T247x22609954T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T247x22609941T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T247x22609922T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_separate_with_type_mark */
extern T1 T247x22609948T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T247x22495233(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T247x22659073(TC* ac, T0* C);
/* Call to ET_UNIVERSE.shortest_path */
extern T0* T248x19529747T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.adapted_universe */
extern T0* T248x19529746T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.full_name */
extern T0* T248x19529750T2(TC* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.master_class */
extern T0* T248x19529735T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.classes_in_group */
extern T0* T248x19529740T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.real_64_convert_feature */
extern T0* T248x19529838(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_type */
extern T0* T248x19529799(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_convert_feature */
extern T0* T248x19529837(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_type */
extern T0* T248x19529798(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_convert_feature */
extern T0* T248x19529836(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_type */
extern T0* T248x19529791(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_convert_feature */
extern T0* T248x19529835(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_type */
extern T0* T248x19529790(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_convert_feature */
extern T0* T248x19529834(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_type */
extern T0* T248x19529789(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_convert_feature */
extern T0* T248x19529833(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_type */
extern T0* T248x19529788(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_convert_feature */
extern T0* T248x19529832(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_type */
extern T0* T248x19529784(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_convert_feature */
extern T0* T248x19529831(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_type */
extern T0* T248x19529783(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_convert_feature */
extern T0* T248x19529830(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_type */
extern T0* T248x19529782(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_convert_feature */
extern T0* T248x19529829(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_type */
extern T0* T248x19529781(TC* ac, T0* C);
/* Call to ET_UNIVERSE.full_lower_name */
extern T0* T248x19529751T2(TC* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.kind_name */
extern T0* T248x19529753(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_separate_any_type */
extern T0* T248x19529761(TC* ac, T0* C);
/* Call to ET_UNIVERSE.any_clients */
extern T0* T248x19529764(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_convert_feature */
extern T0* T248x19529828(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_type */
extern T0* T248x19529772(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_convert_feature */
extern T0* T248x19529827(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_type */
extern T0* T248x19529771(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_convert_feature */
extern T0* T248x19529840(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_type */
extern T0* T248x19529808(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_convert_feature */
extern T0* T248x19529839(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_type */
extern T0* T248x19529806(TC* ac, T0* C);
/* Call to ET_UNIVERSE.has_master_class */
extern T1 T248x19529729T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T248x19529823(TC* ac, T0* C);
/* Call to ET_UNIVERSE.boolean_type */
extern T0* T248x19529769(TC* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_type */
extern T0* T248x19529812(TC* ac, T0* C);
/* Call to ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T248x19529815(TC* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T248x19529825(TC* ac, T0* C);
/* Call to ET_UNIVERSE.function_identity_any_type */
extern T0* T248x19529777(TC* ac, T0* C);
/* Call to ET_UNIVERSE.predicate_identity_type */
extern T0* T248x19529795(TC* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_identity_type */
extern T0* T248x19529814(TC* ac, T0* C);
/* Call to ET_UNIVERSE.procedure_identity_type */
extern T0* T248x19529796(TC* ac, T0* C);
/* Call to ET_UNIVERSE.pointer_type */
extern T0* T248x19529794(TC* ac, T0* C);
/* Call to ET_UNIVERSE.typed_pointer_identity_type */
extern T0* T248x19529821(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_identity_type */
extern T0* T248x19529820(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T248x19529780(TC* ac, T0* C);
/* Call to ET_UNIVERSE.iterable_detachable_separate_any_type */
extern T0* T248x19529786(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_any_type */
extern T0* T248x19529760(TC* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_32_type */
extern T0* T248x19529779(TC* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_8_type */
extern T0* T248x19529778(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_type */
extern T0* T248x19529770(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_string_type */
extern T0* T248x19529811(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T248x19529804(TC* ac, T0* C);
/* Call to ET_UNIVERSE.hash_code */
extern T6 T248x655361(TC* ac, T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T248x19529773(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T248x19529797(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_string_8_type */
extern T0* T248x19529807(TC* ac, T0* C);
/* Call to ET_UNIVERSE.any_type */
extern T0* T248x19529759(TC* ac, T0* C);
/* Call to ET_UNIVERSE.special_any_type */
extern T0* T248x19529801(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_any_type */
extern T0* T248x19529816(TC* ac, T0* C);
/* Call to ET_UNIVERSE.special_detachable_any_type */
extern T0* T248x19529802(TC* ac, T0* C);
/* Call to ET_UNIVERSE.exception_manager_type */
extern T0* T248x19529776(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_exception_type */
extern T0* T248x19529818(TC* ac, T0* C);
/* Call to ET_UNIVERSE.exception_type */
extern T0* T248x19529774(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_exception_type */
extern T0* T248x19529817(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_exception_type */
extern T0* T248x19529775(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T248x19529819(TC* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_iteration_mode */
extern T1 T248x19529824(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_parents */
extern T0* T248x19529810(TC* ac, T0* C);
/* Call to ET_UNIVERSE.use_obsolete_syntax_mode */
extern T1 T248x19529826(TC* ac, T0* C);
/* Call to ET_UNIVERSE.any_parents */
extern T0* T248x19529763(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_type */
extern T0* T248x19529809(TC* ac, T0* C);
/* Call to ET_UNIVERSE.current_system */
extern T0* T248x19529745(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T251x22020101T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T251x22020098(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T251x22020097(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_detachable_mark */
extern T1 T253x21053444(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attached_mark */
extern T1 T253x21053443(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.position */
extern T0* T253x20627457(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separate_mark */
extern T1 T253x21053451(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expandedness_mark */
extern T1 T253x21053454(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attachment_mark */
extern T1 T253x21053441(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_reference_mark */
extern T1 T253x21053457(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expanded_mark */
extern T1 T253x21053456(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_implicit_mark */
extern T1 T253x21053460(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separateness_mark */
extern T1 T253x21053449(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.overridden_type_mark */
extern T0* T253x21053461T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.is_explicit_attachment_mark */
extern T1 T253x21053442(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.type */
extern T0* T254x21987331T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.count */
extern T6 T254x21987329(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T254x21987333T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T254x21987330T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T254x20627461(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T254x21987335(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T254x21987344T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T254x21987338(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T254x21987342T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T254x21987339T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T254x21987343T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T254x21987348T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T254x21987340T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T254x21987337(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T254x21987345T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_ACTUAL_PARAMETERS.named_types */
extern T0* T254x21987332T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T256x24559621(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T256x24559617(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T256x24559618(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T256x24559619(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T256x24133633T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T256x24133636(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T256x24133640(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T256x24133638T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T256x24133637(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T256x24133634(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T256x24559623(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.primary_type */
extern T0* T257x24526859(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T257x655361(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.type_mark */
extern T0* T257x24526861(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_attached */
extern T1 T257x24526854(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T257x24526867T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T257x24526858(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T257x24526857(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_separate */
extern T1 T257x24526855(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T257x24559617(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_basic */
extern T1 T257x24526852(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_self_initializing */
extern T1 T257x24526853(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T257x24526860(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.type_id */
extern T6 T257x24526862(TC* ac, T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T292x20627457(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T292x16678916(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_typed_object_test */
extern T1 T292x16678920(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_agent */
extern T1 T292x16678919(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_address_expression */
extern T1 T292x16678918(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_result */
extern T1 T292x16678917(TC* ac, T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T292x17465352(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T292x17465346(TC* ac, T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T292x17006605T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.is_false */
extern T1 T292x17006597(TC* ac, T0* C);
/* Call to ET_EXPRESSION.unparenthesized_expression */
extern T0* T292x17006595(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T292x17465347(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_never_void */
extern T1 T292x17006596(TC* ac, T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T296x19005443(TC* ac, T0* C);
/* Call to ET_FEATURE.name */
extern T0* T296x18350088(TC* ac, T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T296x18350090(TC* ac, T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T296x18350086T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.version */
extern T6 T296x18268172(TC* ac, T0* C);
/* Call to ET_FEATURE.are_postconditions_instance_free_recursive */
extern T1 T296x18268207(TC* ac, T0* C);
/* Call to ET_FEATURE.are_preconditions_instance_free_recursive */
extern T1 T296x18268206(TC* ac, T0* C);
/* Call to ET_FEATURE.extended_name */
extern T0* T296x18268164(TC* ac, T0* C);
/* Call to ET_FEATURE.alias_names */
extern T0* T296x18268163(TC* ac, T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T296x19005447(TC* ac, T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T296x18268188(TC* ac, T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T296x18350091(TC* ac, T0* C);
/* Call to ET_FEATURE.is_static */
extern T1 T296x18268198(TC* ac, T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T296x18268215T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.arguments_count */
extern T6 T296x18268214(TC* ac, T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T296x17858574(TC* ac, T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T296x19005445(TC* ac, T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T296x18268195(TC* ac, T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T296x18350092(TC* ac, T0* C);
/* Call to ET_FEATURE.type */
extern T0* T296x18350089(TC* ac, T0* C);
/* Call to ET_FEATURE.has_class_postcondition_recursive */
extern T1 T296x18268208(TC* ac, T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T296x18268193(TC* ac, T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T296x18268192(TC* ac, T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T296x18268191(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_thread */
extern T1 T296x17858563(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_process */
extern T1 T296x17858562(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_object */
extern T1 T296x17858564(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T296x17858561(TC* ac, T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T296x18268187(TC* ac, T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T296x18268202(TC* ac, T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T296x18268203(TC* ac, T0* C);
/* Call to ET_FEATURE.is_parenthesisable */
extern T1 T296x18268205(TC* ac, T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T296x18268204(TC* ac, T0* C);
/* Call to ET_FEATURE.id */
extern T6 T296x18268171(TC* ac, T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T296x18268222T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T296x18268223T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.postconditions */
extern T0* T296x17858570(TC* ac, T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T296x17858569(TC* ac, T0* C);
/* Call to ET_FEATURE.same_version */
extern T1 T296x18268220T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T296x18350085(TC* ac, T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T296x18268194(TC* ac, T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T296x18268174(TC* ac, T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T296x19005444(TC* ac, T0* C);
/* Call to ET_FEATURE.has_validity_error */
extern T1 T296x19005449(TC* ac, T0* C);
/* Call to ET_FEATURE.validity_checked */
extern T1 T296x19005448(TC* ac, T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T296x655361(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.position */
extern T0* T301x20627457(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_inline_separate_instruction */
extern T1 T301x20152326(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_typed_object_test */
extern T1 T301x20152325(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_agent */
extern T1 T301x20152324(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_address_expression */
extern T1 T301x20152323(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_result */
extern T1 T301x20152322(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.nested_instruction_count */
extern T6 T301x20152327(TC* ac, T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T307x21217282(TC* ac, T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T307x20627457(TC* ac, T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T307x21217283(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T307x21217289(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else_symbol */
extern T1 T307x21217311(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T307x21217310(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies_symbol */
extern T1 T307x21217303(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T307x21217302(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then_symbol */
extern T1 T307x21217296(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T307x21217295(TC* ac, T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T307x21217329(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T307x21217327(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not_symbol */
extern T1 T307x21217323(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T307x21217322(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T307x21217320(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T307x21217319(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T307x21217317(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor_symbol */
extern T1 T307x21217316(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T307x21217315(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T307x21217314(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T307x21217313(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T307x21217312(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_symbol */
extern T1 T307x21217309(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T307x21217308(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T307x21217307(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T307x21217306(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T307x21217305(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T307x21217304(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T307x21217301(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T307x21217300(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T307x21217298(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T307x21217297(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_symbol */
extern T1 T307x21217294(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T307x21217293(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_parenthesis */
extern T1 T307x21217325(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T307x21217324(TC* ac, T0* C);
/* Call to ET_CALL_NAME.hash_code */
extern T6 T307x655361(TC* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T308x16678921T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T308x16678922(TC* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T308x16678914(TC* ac, T0* C);
/* Call to ET_AGENT.target */
extern T0* T331x14467074(TC* ac, T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T331x14467075(TC* ac, T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T331x14467086(TC* ac, T0* C);
/* Call to ET_AGENT.position */
extern T0* T331x20627457(TC* ac, T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T331x14467080(TC* ac, T0* C);
/* Call to ET_AGENT.index */
extern T6 T331x17465352(TC* ac, T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T331x14467077(TC* ac, T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T331x14467076(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.expression */
extern T0* T332x17416196(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.index */
extern T6 T332x17465352(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.type */
extern T0* T332x17416195(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.name */
extern T0* T332x17416197(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T335x16728066(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T335x16728067(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T335x20627457(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T335x16728069(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_call_agent */
extern T1 T335x16728070(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T340x16302083(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T340x16302082(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T340x16302081(TC* ac, T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T340x17465352(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T349x22577153(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T349x20627457(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T349x20627461(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_instance_free */
extern T1 T354x17465346(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T354x17465352(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_typed_object_test */
extern T1 T354x17465351(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_address_expression */
extern T1 T354x17465349(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_result */
extern T1 T354x17465348(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T354x20627457(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T354x17465345(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_instance_free */
extern T1 T356x17465346(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_typed_object_test */
extern T1 T356x17465351(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_address_expression */
extern T1 T356x17465349(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_result */
extern T1 T356x17465348(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T356x17465345(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T356x17465352(TC* ac, T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T357x17465345(TC* ac, T0* C);
/* Call to ET_OPERAND.index */
extern T6 T357x17465352(TC* ac, T0* C);
/* Call to ET_OPERAND.is_current */
extern T1 T357x17465347(TC* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T359x17072129(TC* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T359x20627457(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.dynamic_type */
extern T0* T360x24133633T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.count */
extern T6 T360x24133636(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.has_type */
extern T1 T360x24133638T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.index_of */
extern T6 T360x24133635T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T363x16678921T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T363x16678922(TC* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T363x16678914(TC* ac, T0* C);
/* Call to ET_SEPARATE_CALL.arguments */
extern T0* T374x19677186(TC* ac, T0* C);
/* Call to ET_SEPARATE_CALL.target */
extern T0* T374x20463617(TC* ac, T0* C);
/* Call to ET_SEPARATE_CALL.name */
extern T0* T374x19677185(TC* ac, T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T375x17858565(TC* ac, T0* C);
/* Call to ET_CLOSURE.iteration_components */
extern T0* T375x17858572(TC* ac, T0* C);
/* Call to ET_CLOSURE.object_tests */
extern T0* T375x17858571(TC* ac, T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T375x17858568(TC* ac, T0* C);
/* Call to ET_CLOSURE.inline_separate_arguments */
extern T0* T375x17858573(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T379x16728066(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T379x16728065(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T379x16728067(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T379x19972099(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T379x19677191(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T379x17465352(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T379x16728070(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T379x16728069(TC* ac, T0* C);
/* Call to ET_CREATION_COMPONENT.position */
extern T0* T380x20627457(TC* ac, T0* C);
/* Call to ET_CREATION_COMPONENT.name */
extern T0* T380x19677185(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T381x16728065(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T381x16728066(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T381x16728070(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T381x16728069(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T381x16728067(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.position */
extern T0* T381x20627457(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.item_name */
extern T0* T386x20168707(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.hash_code */
extern T6 T386x655361(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.unfolded_cursor_name */
extern T0* T386x20168716(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_item_expression */
extern T0* T386x20168718(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.new_cursor_expression */
extern T0* T386x20168717(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.has_cursor_name */
extern T1 T386x20168705(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_forth_instruction */
extern T0* T386x20168720(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_after_expression */
extern T0* T386x20168719(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.iterable_expression */
extern T0* T386x20168706(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.position */
extern T0* T387x20627457(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T387x14467076(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T387x17858566(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T387x14467075(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T387x14467074(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T387x17858568(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.attached_result_index */
extern T6 T387x14778370(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.result_index */
extern T6 T387x14778369(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T387x17858565(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value_position */
extern T0* T393x16384011(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T393x16384008(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T393x16384006(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T393x20627457(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T393x17465352(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.is_string_32 */
extern T1 T393x16384002(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.is_string_8 */
extern T1 T393x16384001(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T408x19005449(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T408x17858574(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.postconditions */
extern T0* T408x17858570(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.preconditions */
extern T0* T408x17858569(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T408x19005451(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T408x19005442(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T408x19005450(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T408x19005441(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T408x19005444(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T408x19005447(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T408x17858568(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T408x17858566(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T408x17858565(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T408x19005445(TC* ac, T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T434x14942210(TC* ac, T0* C);
/* Call to ET_ASSERTION.is_class_assertion */
extern T1 T434x14942209(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.full_lower_name */
extern T0* T436x19382295T2(TC* ac, T0* C, T2 a1);
/* Call to ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T436x19382293T0T2(TC* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_PRIMARY_GROUP.kind_name */
extern T0* T436x19382299(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_hidden */
extern T1 T436x19382282(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_cluster */
extern T1 T436x19382275(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.current_system */
extern T0* T436x19382289(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T436x19382283(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.universe */
extern T0* T436x19382288(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T436x19382314(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.cluster */
extern T0* T436x19382312(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_unknown */
extern T1 T436x19382279(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_override */
extern T1 T436x19382280(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T436x19382277(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_none */
extern T1 T436x19382278(TC* ac, T0* C);
/* Call to STRING_GENERAL.item */
extern T3 T445x2228226T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.count */
extern T6 T445x2228263(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T562x12632074(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T562x29327364T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T562x12632080(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T562x29327373(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T562x12632065(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T562x29327371(TC* ac, T0* C);
/* Call to XM_DOCUMENT_NODE.parent */
extern T0* T613x30244865(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.label */
extern T0* T652x22020099(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.position */
extern T0* T652x20627457(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T652x21970950T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T652x21970948T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T652x22020098(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T652x20627461(TC* ac, T0* C);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T653x22610001(TC* ac, T0* C);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T653x22609964T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_base_type_with_type_marks */
extern T1 T653x22609976T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T653x22609981T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T653x22609980T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T653x22609979T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T653x15368199T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T653x22609982T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T653x22609978T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T653x22609972T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T653x22609977T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T653x22609968T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T653x22609952T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T653x22609954T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T653x22609992T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.is_type_separate_with_type_mark */
extern T1 T653x22609948T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T653x22609950T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T653x22609956T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T653x22609993T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T653x22609991T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T653x15368202T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T653x22609974T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T653x22609984T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T653x22609985T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T653x22609983T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.type_with_type_mark */
extern T0* T653x22609941T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T653x22609923T0(TC* ac, T0* C, T0* a1);
/* Call to ET_SYMBOL.position */
extern T0* T655x20627457(TC* ac, T0* C);
/* Call to ET_SYMBOL.text */
extern T0* T655x20709378(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_equal_symbol */
extern T1 T655x20955155(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_not_tilde */
extern T1 T655x20955170(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_not_equal */
extern T1 T655x20955169(TC* ac, T0* C);
/* Call to ET_SYMBOL.break */
extern T0* T655x20627462(TC* ac, T0* C);
/* Call to ET_SYMBOL.column */
extern T6 T655x20840450(TC* ac, T0* C);
/* Call to ET_SYMBOL.line */
extern T6 T655x20840449(TC* ac, T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T756x20627459(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.note_term_value */
extern T0* T814x15859714(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.position */
extern T0* T814x20627457(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.has_note_term_value */
extern T1 T814x15859715T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_CONDITION_ITEM.is_enabled */
extern T1 T879x13271041T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_supported */
extern T1 T879x13271042T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_aware */
extern T1 T879x13320193T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T899x655361(TC* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.name */
extern T0* T965x19169282(TC* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T965x19169283(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T3 T1035x16285702(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value_position */
extern T0* T1035x16285707(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T1035x16285703(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T1035x17465352(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.is_character_32 */
extern T1 T1035x16285698(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.is_character_8 */
extern T1 T1035x16285697(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T1045x16367617(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T1045x16367627(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value_position */
extern T0* T1045x16367632(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.cast_type */
extern T0* T1045x16367628(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T1045x17465352(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1045x16367647(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T11 T1045x16367618(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_binary */
extern T1 T1045x16367638(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1045x16367637(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1045x16367643(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1045x16367642(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1045x16367646(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1045x16367645(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1045x16367644(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1045x16367641(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1045x16367640(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T1045x16367635(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1045x16367621(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T1089x14532609(TC* ac, T0* C);
/* Call to ET_CHOICE.has_typed_object_test */
extern T1 T1116x19726341(TC* ac, T0* C);
/* Call to ET_CHOICE.has_agent */
extern T1 T1116x19726340(TC* ac, T0* C);
/* Call to ET_CHOICE.has_address_expression */
extern T1 T1116x19726339(TC* ac, T0* C);
/* Call to ET_CHOICE.has_result */
extern T1 T1116x19726338(TC* ac, T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T1116x19726343(TC* ac, T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T1116x19726337(TC* ac, T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T1116x19726342(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T1119x20627457(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_typed_object_test */
extern T1 T1119x19726341(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_agent */
extern T1 T1119x19726340(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_address_expression */
extern T1 T1119x19726339(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_result */
extern T1 T1119x19726338(TC* ac, T0* C);
/* Call to ET_CHOICE_ITEM.position */
extern T0* T1122x20627457(TC* ac, T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T1122x19775489(TC* ac, T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T1137x16760833(TC* ac, T0* C);
/* Call to ET_CONDITIONAL.position */
extern T0* T1137x20627457(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T1142x22200324T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T1142x22200322(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T1142x22200323(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T1154x22315010T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T1157x15433731(TC* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T1157x15433730(TC* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T1157x15433729(TC* ac, T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T1203x18169857(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.to_text */
extern T0* T1263x22610001(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T1263x20627457(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1263x22609994T0(TC* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T1263x22478849(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.has_formal_types */
extern T1 T1263x22609964T0(TC* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.has_unqualified_anchored_type */
extern T1 T1263x22609961(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING_ITEM.position */
extern T0* T1280x20627457(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T1280x17334273(TC* ac, T0* C);
/* Call to ET_NOTE_TERM_ITEM.note_term */
extern T0* T1296x15859713(TC* ac, T0* C);
/* Call to ET_NOTE_TERM_ITEM.position */
extern T0* T1296x20627457(TC* ac, T0* C);
/* Call to ET_NOTE_TERM_ITEM.has_note_term_value */
extern T1 T1296x15859715T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONSTRAINT.type */
extern T0* T1348x16154626(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT.renames */
extern T0* T1348x16154627(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT_ITEM.type_constraint */
extern T0* T1351x16154625(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT_ITEM.type */
extern T0* T1351x16154626(TC* ac, T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T1357x22659073(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.last_leaf */
extern T0* T1406x20627461(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.type_constraint */
extern T0* T1406x15368193T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTRAINT.count */
extern T6 T1406x15368200(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.types_to_text */
extern T0* T1406x15368203(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_BASE_TYPES.type_constraint */
extern T0* T1407x15368193T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.count */
extern T6 T1407x15368200(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_nested_non_separate_reference_attributes */
extern T1 T1407x15368199T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_expanded_type */
extern T1 T1407x15368196T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_attached_type */
extern T1 T1407x15368197T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.conforms_to_type_with_type_marks */
extern T1 T1407x15368202T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_CONSTRAINT_BASE_TYPES.types_to_text */
extern T0* T1407x15368203(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.type */
extern T0* T1408x16154626(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.renames */
extern T0* T1408x16154627(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.has_nested_non_separate_reference_attributes */
extern T1 T1408x15368199T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.is_type_attached */
extern T1 T1408x15368197T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.is_type_expanded */
extern T1 T1408x15368196T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.base_class */
extern T0* T1408x15138817(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.named_feature */
extern T0* T1408x15138821T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1415x18350097(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1415x18350084(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1415x18350095(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1415x18350082(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1415x18350096(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1415x18350083(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1415x18350081(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1415x18350093(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1415x18350094(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.base_class */
extern T0* T1487x15138817(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.named_query */
extern T0* T1487x15138819T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_CLASS.base_type */
extern T0* T1487x15138818(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.named_procedure */
extern T0* T1487x15138820T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_CLASS.base_type_index_of_label */
extern T6 T1487x15138822T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ADAPTED_CLASS.named_feature */
extern T0* T1487x15138821T0(TC* ac, T0* C, T0* a1);
/* Call to XM_ELEMENT_NODE.parent */
extern T0* T1533x30244865(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T1572x22331393(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.last_leaf */
extern T0* T1572x20627461(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.position */
extern T0* T1572x20627457(TC* ac, T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T1575x18202625(TC* ac, T0* C);
/* Call to ET_UNTAGGED_ASSERTION.is_class_assertion */
extern T1 T1622x14942209(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T1624x20627457(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T1624x14974977(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1751x18857987(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1751x18857986(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1751x18857985(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1751x18857988(TC* ac, T0* C);
/* Call to ET_ECF_GROUP.class_options */
extern T0* T1797x13795334(TC* ac, T0* C);
/* Call to ET_ECF_GROUP.options */
extern T0* T1797x13795333(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_attribute */
extern T1 T1808x18268191(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.implementation_feature */
extern T0* T1808x17858574(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_object */
extern T1 T1808x17858564(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_thread */
extern T1 T1808x17858563(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_process */
extern T1 T1808x17858562(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once */
extern T1 T1808x17858561(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.lower_name */
extern T0* T1808x19005443(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.rescue_clause */
extern T0* T1808x18497539(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.compound */
extern T0* T1808x18497537(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.arguments */
extern T0* T1808x18350090(TC* ac, T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1809x17858574(TC* ac, T0* C);
/* Call to ET_ROUTINE.arguments */
extern T0* T1809x18350090(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.locals */
extern T0* T1810x17858568(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.compound */
extern T0* T1810x18497537(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.inline_separate_arguments */
extern T0* T1810x17858573(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.is_once_per_process */
extern T1 T1810x17858562(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.rescue_clause */
extern T0* T1810x18497539(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.arguments */
extern T0* T1810x17858566(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T1816x21217289(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not_symbol */
extern T1 T1816x21217323(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not */
extern T1 T1816x21217322(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then_symbol */
extern T1 T1816x21217296(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_symbol */
extern T1 T1816x21217294(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then */
extern T1 T1816x21217295(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and */
extern T1 T1816x21217293(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies_symbol */
extern T1 T1816x21217303(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies */
extern T1 T1816x21217302(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else_symbol */
extern T1 T1816x21217311(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_symbol */
extern T1 T1816x21217309(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else */
extern T1 T1816x21217310(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or */
extern T1 T1816x21217308(TC* ac, T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T1816x20627457(TC* ac, T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T1820x19382275(TC* ac, T0* C);
/* Call to ET_GROUP.absolute_pathname */
extern T0* T1820x19382298(TC* ac, T0* C);
/* Call to ET_GROUP.universe */
extern T0* T1820x19382288(TC* ac, T0* C);
/* Call to ET_GROUP.parent */
extern T0* T1820x19382315(TC* ac, T0* C);
/* Call to ET_GROUP.full_name */
extern T0* T1820x19382294T2(TC* ac, T0* C, T2 a1);
/* Call to ET_GROUP.full_lower_name */
extern T0* T1820x19382295T2(TC* ac, T0* C, T2 a1);
/* Call to ET_GROUP.kind_lower_name */
extern T0* T1820x19382300(TC* ac, T0* C);
/* Call to ET_GROUP.cluster */
extern T0* T1820x19382312(TC* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T2010x14467076(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.expression */
extern T0* T2022x16793601(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.index */
extern T6 T2022x17465352(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T2022x16793602(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T2027x19677185(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T2027x19677186(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T2030x16728066(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T2032x19972099(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.name */
extern T0* T2032x16728066(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.target */
extern T0* T2032x16728065(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T2032x16728067(TC* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T2037x17858565(TC* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T2037x17858566(TC* ac, T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T2040x17858566(TC* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T2042x16728067(TC* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T2042x16728065(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.arguments */
extern T0* T2044x19677186(TC* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.name */
extern T0* T2049x22446081(TC* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.to_text */
extern T0* T2049x22610001(TC* ac, T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T2060x20627457(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.loop_compound */
extern T0* T2063x20217861(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.until_conditional */
extern T0* T2063x20217860(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.variant_part */
extern T0* T2063x20217859(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.invariant_part */
extern T0* T2063x20217858(TC* ac, T0* C);
/* Call to LX_TRANSITION [LX_NFA_STATE].target */
extern T0* T2233x26869761(TC* ac, T0* C);
/* Call to LX_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2233x26869762T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.append_character */
extern void T17x2293809T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.append_string */
extern void T17x2293820T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.put */
extern void T17x2588678T2T6(TC* ac, T0* C, T2 a1, T6 a2);
/* Call to STRING_8.remove_head */
extern void T17x2326533T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.append_code */
extern void T17x2326558T10(TC* ac, T0* C, T10 a1);
/* Call to STRING_8.append_substring */
extern void T17x2293821T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to STRING_8.append_string_general */
extern void T17x2326547T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.append_substring_general */
extern void T17x2326546T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to STRING_8.wipe_out */
extern void T17x2326530(TC* ac, T0* C);
/* Call to STRING_8.remove_tail */
extern void T17x2326531T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.keep_head */
extern void T17x2326539T6(TC* ac, T0* C, T6 a1);
/* Call to EXCEPTION.set_type_name */
extern void T22x1753112T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_recipient_name */
extern void T22x1753115T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_description */
extern void T22x1753117T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_exception_trace */
extern void T22x1753111T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_throwing_exception */
extern void T22x1753116T0(TC* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T46x6193164(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T46x6193162(TC* ac, T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T56x5586963T0(TC* ac, T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T56x5586962(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.append_to_string */
extern void T71x22610009T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.add_adapted_base_classes_to_list */
extern void T71x22610010T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_add_adapted_base_classes_to_list */
extern void T71x22642747T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.process */
extern void T71x20627466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.append_canonical_to_string */
extern void T71x22610007T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T80x6094862T6(TC* ac, T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T80x6225926T2(TC* ac, T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T80x6307842(TC* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T80x6094864T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T80x6225925T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T80x6307843T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T184x28377090T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T185x28311565T0T0T1(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_attribute */
extern void T185x28311560T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_error */
extern void T185x28311564T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T185x28311558T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T185x28311559(TC* ac, T0* C);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T185x28311561T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T185x28311557T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T185x28311563T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T185x28311562T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_finish */
extern void T185x28311566(TC* ac, T0* C);
/* Call to XM_CALLBACKS.on_start */
extern void T185x28311567(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T189x14106635T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T189x13336585T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T189x14106638T1(TC* ac, T0* C, T1 a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T189x14106636T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T189x14106633T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_description */
extern void T189x14106634T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T189x13336583T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T189x13336584T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_query_call */
extern void T228x24117302T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_procedure_call */
extern void T228x24117301T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_object_equality_expression */
extern void T228x24117299T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_equality_expression */
extern void T228x24117300T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_static */
extern void T228x24117314T1(TC* ac, T0* C, T1 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.use_all_attributes */
extern void T228x24117307T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_alive */
extern void T228x24117315(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attribute_position */
extern void T228x24117308T0T6(TC* ac, T0* C, T0* a1, T6 a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_next_type */
extern void T228x24117298T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_hash_code */
extern void T228x24117309T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attached_type */
extern void T228x24117313T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attached_separate_type */
extern void T228x24117311T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_separate_type */
extern void T228x24117312T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_id */
extern void T228x24117310T6(TC* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.add_creation_clients_to */
extern void T239x18268245T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.reset_after_interface_checked */
extern void T239x18268247(TC* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T239x18268248(TC* ac, T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T239x18268249(TC* ac, T0* C);
/* Call to ET_PROCEDURE.set_inline_separate_arguments */
extern void T239x17858575T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_iteration_components */
extern void T239x17858576T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_object_tests */
extern void T239x17858577T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T239x18268233T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_validity_checked */
extern void T239x19005453(TC* ac, T0* C);
/* Call to ET_QUERY.reset_after_interface_checked */
extern void T240x18268247(TC* ac, T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T240x18268248(TC* ac, T0* C);
/* Call to ET_QUERY.reset */
extern void T240x18268249(TC* ac, T0* C);
/* Call to ET_QUERY.set_inline_separate_arguments */
extern void T240x17858575T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_iteration_components */
extern void T240x17858576T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_object_tests */
extern void T240x17858577T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T240x18268233T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.reset_validity_checked */
extern void T240x19005453(TC* ac, T0* C);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T242x25133231T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_from_expression */
extern void T242x25133233T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T242x25133237T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T242x25133165T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T242x25133240T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T242x25133184T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T242x25133098T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T242x25133066T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T242x25133085T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T242x25133108T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T242x25133229T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T242x25133266T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T242x25133137T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T242x25133270T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T242x25133272T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T242x25133263T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T242x25133127T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T242x25133177T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T242x25133073T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T242x25133064T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T242x25133087T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T242x25133255T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_repeat_instruction */
extern void T242x25133092T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T242x25133155T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T242x25133172T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T242x25133222T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T242x25133253T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_instruction */
extern void T242x25133291T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T242x25133089T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T242x25133144T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T242x25133068T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T242x25133241T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T242x25133267T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_extended_attribute */
extern void T242x25133200T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T242x25133230T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_test */
extern void T242x25133128T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T242x25133271T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inline_separate_instruction */
extern void T242x25133158T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T242x25133103T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T242x25133078T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T242x25133198T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T242x25133181T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T242x25133247T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T242x25133195T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T242x25133120T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T242x25133216T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T242x25133197T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T242x25133123T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T242x25133218T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_iteration_cursor */
extern void T242x25133153T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T242x25133122T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_object_test */
extern void T242x25133125T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T242x25133126T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T242x25133106T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T242x25133131T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_equality_expression */
extern void T242x25133129T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T242x25133163T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T242x25133202T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T242x25133090T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T242x25133224T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T242x25133193T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T242x25133109T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T242x25133101T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T242x25133102T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T242x25133143T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T242x25133196T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T242x25133121T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T242x25133221T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T242x25133124T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T242x25133256T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T242x25133257T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T242x25133194T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T242x25133079T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T242x25133072T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T242x25133096T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T242x25133097T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T242x25133084T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T242x25133086T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_quantifier_expression */
extern void T242x25133100T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T242x25133112T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T242x25133135T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_expression */
extern void T242x25133156T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_expression */
extern void T242x25133173T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T242x25133254T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T242x25133259T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_expression */
extern void T242x25133292T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T242x25133063T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_named_object_test */
extern void T242x25133130T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T242x25133067T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T242x25133206T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T242x25133219T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T242x25133220T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T242x25133217T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T242x25133132T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inlined_expression */
extern void T242x25133157T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T242x25133104T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T242x25133225T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T242x25133091T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T242x25133176T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T242x25133249T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T243x15368206(TC* ac, T0* C);
/* Call to ET_TYPE.process */
extern void T243x20627466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.add_adapted_base_classes_to_list */
extern void T243x22610010T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T243x22610011(TC* ac, T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T243x22610009T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_runtime_name_to_string */
extern void T243x22610006T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_canonical_to_string */
extern void T243x22610007T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_canonical_actual_parameter_to_string */
extern void T243x21970953T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.universes_do_if */
extern void T248x19529862T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_if_until */
extern void T248x19529868T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.master_classes_do_if */
extern void T248x19529869T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_until */
extern void T248x19529870T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_all */
extern void T248x19529871T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.classes_do_if */
extern void T248x19529879T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_until */
extern void T248x19529880T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_all */
extern void T248x19529881T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.append_to_string_with_space */
extern void T253x21053465T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T254x21987353(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.reset */
extern void T254x21987354(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.append_to_string */
extern void T254x21987352T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T254x21987349T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T254x21987350T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T256x24559626T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.add_common_types_to_list */
extern void T256x24133643T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T256x24133641T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T256x24559627(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T256x24444929T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_type_from_type_set */
extern void T256x24444931T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T257x24559626T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T257x24526872T0(TC* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.process */
extern void T292x20627466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.add_separate_arguments */
extern void T292x17006606T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_EXPRESSION.reset */
extern void T292x14942212(TC* ac, T0* C);
/* Call to ET_EXPRESSION.set_index */
extern void T292x17465353T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_id */
extern void T296x18268243T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.process */
extern void T296x20627466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_other_seeds */
extern void T296x18268236T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T296x18268237T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T296x18268244T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T296x18268240T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T296x18268234T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T296x18268235T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T296x18268229(TC* ac, T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T296x18268230(TC* ac, T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T296x18268239T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T296x18268238T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_validity_error */
extern void T296x19005454(TC* ac, T0* C);
/* Call to ET_FEATURE.set_validity_checked */
extern void T296x19005455(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T301x20627466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T301x20152328(TC* ac, T0* C);
/* Call to ET_CALL_NAME.set_seed */
extern void T307x21217337T6(TC* ac, T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T331x14467088T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T331x20627466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T340x17465353T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T340x20627466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.process */
extern void T354x20627466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T354x17465353T6(TC* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T354x17465354(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T356x20627466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T356x17465354(TC* ac, T0* C);
/* Call to ET_OPERAND.set_index */
extern void T357x17465353T6(TC* ac, T0* C, T6 a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T379x17465353T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_attached_result_index */
extern void T387x14778379T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_result_index */
extern void T387x14778380T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_inline_separate_arguments */
extern void T387x17858575T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_iteration_components */
extern void T387x17858576T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_object_tests */
extern void T387x17858577T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_actual_arguments */
extern void T387x14467088T0(TC* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T393x17465353T6(TC* ac, T0* C, T6 a1);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T393x16384016T0(TC* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_cast_type */
extern void T393x16384017T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.process */
extern void T434x20627466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T434x14942212(TC* ac, T0* C);
/* Call to STRING_GENERAL.keep_head */
extern void T445x2326539T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.remove_head */
extern void T445x2326533T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.append_code */
extern void T445x2326558T10(TC* ac, T0* C, T10 a1);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T562x29327384(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T562x29327385T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T562x29327383T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T562x29327388(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T562x12632122(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T562x29327386T0(TC* ac, T0* C, T0* a1);
/* Call to XM_DOCUMENT_NODE.node_set_parent */
extern void T613x30097410T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T652x21970953T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T755x24444929T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T755x24444931T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T899x19415082T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T899x19415075T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T1035x17465353T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CHARACTER_CONSTANT.set_cast_type */
extern void T1035x16285711T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T1035x16285710T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T1045x17465353T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T1045x16367657T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T1045x16367656T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T1045x16367658T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHOICE.reset */
extern void T1116x19726345(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T1119x19726345(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1263x22610011(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T1263x15368206(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T1263x22610009T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONSTRAINT.reset */
extern void T1348x15368206(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT.reset_renames */
extern void T1348x15368205(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.reset */
extern void T1406x15368206(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.reset_renames */
extern void T1406x15368205(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.add_overloaded_procedures */
extern void T1487x15138823T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ADAPTED_CLASS.add_overloaded_queries */
extern void T1487x15138824T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_ELEMENT_NODE.node_set_parent */
extern void T1533x30097410T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNTAGGED_ASSERTION.reset */
extern void T1622x14942212(TC* ac, T0* C);
/* Call to ET_ECF_GROUP.set_options */
extern void T1797x13795344T0(TC* ac, T0* C, T0* a1);
/* Call to ET_OPERATOR.set_seed */
extern void T1816x21217337T6(TC* ac, T0* C, T6 a1);
/* Call to ET_OPERATOR.reset */
extern void T1816x21217338(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T2032x20414466T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.set_arguments */
extern void T2044x19693570T0(TC* ac, T0* C, T0* a1);
/* Call to LX_TRANSITION [LX_NFA_STATE].record */
extern void T2233x26869764T0(TC* ac, T0* C, T0* a1);
extern T0* GE_ma33(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma1638(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma1637(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma312(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma452(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma249(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma607(TC* ac, T6 c, T6 n, ...);
extern T0* GE_mt2064(TC* ac, T0* a1, T0* a2, T8 a3);
extern T0* GE_mt782(TC* ac, T0* a1, T0* a2, T0* a3);
extern T0* GE_mt170(TC* ac);
extern T0* GE_mt915(TC* ac, T0* a1);
extern T0* GE_mt31(TC* ac, T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* ge401ov6307841;
extern T0* ge489ov8011841;
extern T0* ge499ov8175673;
extern T0* ge366ov5996588;
extern T0* ge731ov11878404;
extern T0* ge730ov11878404;
extern T0* ge724ov11878404;
extern T0* ge735ov11878404;
extern T0* ge728ov11878404;
extern T0* ge723ov11878404;
extern T0* ge410ov6307841;
extern T0* ge725ov11878406;
extern T0* ge1664ov11878404;
extern T0* ge1649ov11878404;
extern T0* ge1655ov11878404;
extern T0* ge1654ov11878404;
extern T0* ge1653ov11878404;
extern T0* ge1644ov11878404;
extern T0* ge1643ov11878404;
extern T0* ge1661ov11878404;
extern T0* ge1658ov11878404;
extern T0* ge1674ov11878404;
extern T0* ge332ov5439510;
extern T0* ge439ov7192577;
extern T0* ge334ov5472263;
extern T0* ge337ov5521413;
extern T0* ge337ov5521420;
extern T0* ge337ov5521411;
extern T0* ge337ov5521418;
extern T0* ge332ov5439511;
extern T0* ge332ov5439512;
extern T0* ge332ov5439513;
extern T0* ge337ov5521410;
extern T0* ge337ov5521417;
extern T0* ge337ov5521412;
extern T0* ge337ov5521419;
extern T0* ge337ov5521414;
extern T0* ge337ov5521421;
extern T0* ge337ov5521415;
extern T0* ge337ov5521422;
extern T0* ge334ov5472258;
extern T0* ge334ov5472257;
extern T0* ge334ov5472265;
extern T0* ge334ov5472264;
extern T0* ge412ov6307841;
extern T0* ge1515ov24822387;
extern T0* ge1515ov24822392;
extern T0* ge416ov6307841;
extern T0* ge396ov6488072;
extern T0* ge1515ov24822383;
extern T0* ge1515ov24822391;
extern T0* ge1567ov25673735;
extern T0* ge1515ov24822389;
extern T0* ge1515ov24822388;
extern T0* ge1515ov24822390;
extern T0* ge397ov6504464;
extern T0* ge1515ov24822384;
extern T0* ge1515ov24822386;
extern T0* ge1515ov24821982;
extern T0* ge1515ov24822316;
extern T0* ge1515ov24822315;
extern T0* ge1515ov24822330;
extern T0* ge395ov6471699;
extern T0* ge395ov6471700;
extern T0* ge785ov12861471;
extern T0* ge785ov12861457;
extern T0* ge785ov12861455;
extern T0* ge785ov12861441;
extern T0* ge785ov12861459;
extern T0* ge785ov12861456;
extern T0* ge785ov12861460;
extern T0* ge785ov12861465;
extern T0* ge785ov12861462;
extern T0* ge785ov12861458;
extern T0* ge785ov12861452;
extern T0* ge785ov12861453;
extern T0* ge785ov12861461;
extern T0* ge785ov12861454;
extern T0* ge785ov12861466;
extern T0* ge785ov12861442;
extern T0* ge785ov12861468;
extern T0* ge785ov12861469;
extern T0* ge785ov12861444;
extern T0* ge785ov12861443;
extern T0* ge785ov12861467;
extern T0* ge785ov12861470;
extern T0* ge785ov12861450;
extern T0* ge785ov12861451;
extern T0* ge785ov12861447;
extern T0* ge785ov12861464;
extern T0* ge785ov12861463;
extern T0* ge785ov12861448;
extern T0* ge785ov12861449;
extern T0* ge785ov12861446;
extern T0* ge785ov12861445;
extern T0* ge781ov12795922;
extern T0* ge1515ov24822393;
extern T0* ge1515ov24822385;
extern T0* ge1515ov24822022;
extern T0* ge1515ov24822313;
extern T0* ge411ov6193159;
extern T0* ge411ov6733834;
extern T0* ge398ov6520842;
extern T0* ge1515ov24822016;
extern T0* ge1515ov24821990;
extern T0* ge1515ov24821986;
extern T0* ge1515ov24821988;
extern T0* ge1515ov24822326;
extern T0* ge1515ov24821980;
extern T0* ge1515ov24822024;
extern T0* ge1515ov24822308;
extern T0* ge1515ov24822312;
extern T0* ge1515ov24822309;
extern T0* ge1515ov24822311;
extern T0* ge1515ov24822310;
extern T0* ge1515ov24822317;
extern T0* ge1515ov24822319;
extern T0* ge1515ov24822318;
extern T0* ge1515ov24822320;
extern T0* ge1278ov20938763;
extern T0* ge1509ov24723459;
extern T0* ge1509ov24723458;
extern T0* ge1509ov24723457;
extern T0* ge1284ov21037890;
extern T0* ge1284ov21037875;
extern T0* ge1514ov24806071;
extern T0* ge1514ov24805812;
extern T0* ge1514ov24805529;
extern T0* ge1372ov22478855;
extern T0* ge1379ov22593562;
extern T0* ge1368ov22413357;
extern T0* ge1284ov21037990;
extern T0* ge1284ov21038037;
extern T0* ge1284ov21038016;
extern T0* ge1284ov21038038;
extern T0* ge1284ov21038040;
extern T0* ge1284ov21038023;
extern T0* ge1284ov21038039;
extern T0* ge1284ov21037974;
extern T0* ge1284ov21038035;
extern T0* ge1284ov21037984;
extern T0* ge1284ov21038036;
extern T0* ge1514ov24806094;
extern T0* ge1514ov24805817;
extern T0* ge1514ov24805551;
extern T0* ge1514ov24806087;
extern T0* ge1514ov24805815;
extern T0* ge1514ov24805544;
extern T0* ge1284ov21038138;
extern T0* ge1284ov21038137;
extern T0* ge1284ov21038134;
extern T0* ge1284ov21038133;
extern T0* ge1311ov21479431;
extern T0* ge1284ov21038111;
extern T0* ge1284ov21038114;
extern T0* ge1284ov21038116;
extern T0* ge1284ov21038119;
extern T0* ge1284ov21038135;
extern T0* ge1284ov21038090;
extern T0* ge1284ov21038121;
extern T0* ge1284ov21038122;
extern T0* ge1284ov21038123;
extern T0* ge1284ov21038124;
extern T0* ge1284ov21038125;
extern T0* ge1284ov21038126;
extern T0* ge1284ov21038127;
extern T0* ge1284ov21038128;
extern T0* ge1284ov21038129;
extern T0* ge1284ov21038130;
extern T0* ge1284ov21038131;
extern T0* ge1284ov21038132;
extern T0* ge1284ov21037637;
extern T0* ge1284ov21038004;
extern T0* ge1284ov21037959;
extern T0* ge1514ov24806177;
extern T0* ge1514ov24805860;
extern T0* ge1514ov24805634;
extern T0* ge1514ov24806179;
extern T0* ge1514ov24805861;
extern T0* ge1514ov24805636;
extern T0* ge1514ov24806083;
extern T0* ge1514ov24805540;
extern T0* ge1514ov24806086;
extern T0* ge1514ov24805543;
extern T0* ge1514ov24806085;
extern T0* ge1514ov24805542;
extern T0* ge1514ov24806084;
extern T0* ge1514ov24805541;
extern T0* ge1514ov24806175;
extern T0* ge1514ov24805632;
extern T0* ge1514ov24806176;
extern T0* ge1514ov24805633;
extern T0* ge1514ov24806250;
extern T0* ge1514ov24805895;
extern T0* ge1514ov24805705;
extern T0* ge1514ov24806180;
extern T0* ge1514ov24805862;
extern T0* ge1514ov24805637;
extern T0* ge1514ov24806263;
extern T0* ge1514ov24805907;
extern T0* ge1514ov24805718;
extern T0* ge1514ov24806264;
extern T0* ge1514ov24805719;
extern T0* ge1514ov24806188;
extern T0* ge1514ov24805866;
extern T0* ge1514ov24805643;
extern T0* ge1514ov24806187;
extern T0* ge1514ov24805865;
extern T0* ge1514ov24805642;
extern T0* ge1514ov24806183;
extern T0* ge1514ov24805864;
extern T0* ge1514ov24805640;
extern T0* ge1514ov24806181;
extern T0* ge1514ov24805863;
extern T0* ge1514ov24805638;
extern T0* ge1514ov24806182;
extern T0* ge1514ov24805639;
extern T0* ge1504ov24641550;
extern T0* ge1504ov24641545;
extern T0* ge1504ov24641540;
extern T0* ge1284ov21037640;
extern T0* ge1284ov21037639;
extern T0* ge1284ov21037638;
extern T0* ge1284ov21037636;
extern T0* ge1284ov21038000;
extern T0* ge1284ov21037988;
extern T0* ge1284ov21037635;
extern T0* ge1284ov21037632;
extern T0* ge1284ov21037634;
extern T0* ge1284ov21037633;
extern T0* ge1284ov21037631;
extern T0* ge1284ov21037630;
extern T0* ge1284ov21037629;
extern T0* ge1284ov21037628;
extern T0* ge1284ov21037627;
extern T0* ge1284ov21037626;
extern T0* ge1284ov21037625;
extern T0* ge1284ov21037624;
extern T0* ge1284ov21037621;
extern T0* ge1284ov21037620;
extern T0* ge1284ov21037619;
extern T0* ge1284ov21037618;
extern T0* ge1284ov21037617;
extern T0* ge1284ov21037613;
extern T0* ge1284ov21037611;
extern T0* ge1284ov21037609;
extern T0* ge1284ov21037608;
extern T0* ge1284ov21037607;
extern T0* ge1284ov21037606;
extern T0* ge1284ov21037605;
extern T0* ge1284ov21037604;
extern T0* ge1284ov21037603;
extern T0* ge1284ov21037601;
extern T0* ge1284ov21037599;
extern T0* ge1284ov21037598;
extern T0* ge1284ov21037597;
extern T0* ge1284ov21037594;
extern T0* ge1284ov21037593;
extern T0* ge1284ov21037592;
extern T0* ge1284ov21037591;
extern T0* ge1284ov21037590;
extern T0* ge1284ov21037641;
extern T0* ge1284ov21037614;
extern T0* ge1284ov21037596;
extern T0* ge1284ov21037588;
extern T0* ge1284ov21037977;
extern T0* ge1284ov21037622;
extern T0* ge1504ov24641551;
extern T0* ge1504ov24641546;
extern T0* ge1504ov24641541;
extern T0* ge418ov6144031;
extern T0* ge418ov6144032;
extern T0* ge403ov6602764;
extern T0* ge403ov6602763;
extern T0* ge421ov6144031;
extern T0* ge421ov6144032;
extern T0* ge858ov14057497;
extern T0* ge1284ov21037732;
extern T0* ge1284ov21037642;
extern T0* ge1284ov21037837;
extern T0* ge1284ov21037703;
extern T0* ge1284ov21037809;
extern T0* ge1284ov21037668;
extern T0* ge1284ov21037782;
extern T0* ge1514ov24806259;
extern T0* ge1514ov24805904;
extern T0* ge1514ov24805714;
extern T0* ge1284ov21037949;
extern T0* ge1284ov21037691;
extern T0* ge1514ov24806255;
extern T0* ge1514ov24805900;
extern T0* ge1514ov24805710;
extern T0* ge1514ov24806258;
extern T0* ge1514ov24805903;
extern T0* ge1514ov24805713;
extern T0* ge1284ov21037697;
extern T0* ge1514ov24806066;
extern T0* ge1514ov24805810;
extern T0* ge1514ov24805524;
extern T0* ge1514ov24806067;
extern T0* ge1514ov24805525;
extern T0* ge1514ov24806060;
extern T0* ge1514ov24805807;
extern T0* ge1514ov24805518;
extern T0* ge1514ov24806069;
extern T0* ge1514ov24805811;
extern T0* ge1514ov24805527;
extern T0* ge1514ov24806068;
extern T0* ge1514ov24805526;
extern T0* ge1514ov24806065;
extern T0* ge1514ov24805809;
extern T0* ge1514ov24805523;
extern T0* ge1514ov24806008;
extern T0* ge1514ov24805794;
extern T0* ge1514ov24805468;
extern T0* ge1514ov24806007;
extern T0* ge1514ov24805793;
extern T0* ge1514ov24805467;
extern T0* ge1514ov24806006;
extern T0* ge1514ov24805792;
extern T0* ge1514ov24805466;
extern T0* ge1514ov24806005;
extern T0* ge1514ov24805791;
extern T0* ge1514ov24805465;
extern T0* ge1514ov24806004;
extern T0* ge1514ov24805464;
extern T0* ge1514ov24805939;
extern T0* ge1514ov24805760;
extern T0* ge1514ov24805399;
extern T0* ge1514ov24805937;
extern T0* ge1514ov24805759;
extern T0* ge1514ov24805397;
extern T0* ge1514ov24805959;
extern T0* ge1514ov24805770;
extern T0* ge1514ov24805419;
extern T0* ge1514ov24805960;
extern T0* ge1514ov24805420;
extern T0* ge1514ov24805943;
extern T0* ge1514ov24805763;
extern T0* ge1514ov24805403;
extern T0* ge1514ov24805942;
extern T0* ge1514ov24805402;
extern T0* ge1514ov24805944;
extern T0* ge1514ov24805404;
extern T0* ge1514ov24805968;
extern T0* ge1514ov24805774;
extern T0* ge1514ov24805428;
extern T0* ge1514ov24805957;
extern T0* ge1514ov24805417;
extern T0* ge1514ov24805958;
extern T0* ge1514ov24805418;
extern T0* ge1514ov24806014;
extern T0* ge1514ov24805795;
extern T0* ge1514ov24805474;
extern T0* ge1288ov21102603;
extern T0* ge1514ov24806011;
extern T0* ge1514ov24805471;
extern T0* ge1514ov24806033;
extern T0* ge1514ov24805797;
extern T0* ge1514ov24805493;
extern T0* ge1514ov24806026;
extern T0* ge1514ov24805796;
extern T0* ge1514ov24805486;
extern T0* ge1514ov24806015;
extern T0* ge1514ov24805475;
extern T0* ge1514ov24806012;
extern T0* ge1514ov24805472;
extern T0* ge1514ov24806034;
extern T0* ge1514ov24805494;
extern T0* ge1514ov24806027;
extern T0* ge1514ov24805487;
extern T0* ge1514ov24806016;
extern T0* ge1514ov24805476;
extern T0* ge1514ov24806013;
extern T0* ge1514ov24805473;
extern T0* ge1514ov24806035;
extern T0* ge1514ov24805495;
extern T0* ge1514ov24806028;
extern T0* ge1514ov24805488;
extern T0* ge1514ov24806178;
extern T0* ge1514ov24805635;
extern T0* ge1514ov24806056;
extern T0* ge1514ov24805801;
extern T0* ge1514ov24805514;
extern T0* ge1514ov24806055;
extern T0* ge1514ov24805513;
extern T0* ge1514ov24806051;
extern T0* ge1514ov24805799;
extern T0* ge1514ov24805511;
extern T0* ge1514ov24806017;
extern T0* ge1514ov24805477;
extern T0* ge1514ov24806010;
extern T0* ge1514ov24805470;
extern T0* ge1514ov24806042;
extern T0* ge1514ov24805798;
extern T0* ge1514ov24805502;
extern T0* ge1514ov24806009;
extern T0* ge1514ov24805469;
extern T0* ge1514ov24806041;
extern T0* ge1514ov24805501;
extern T0* ge1514ov24806032;
extern T0* ge1514ov24805492;
extern T0* ge1514ov24806040;
extern T0* ge1514ov24805500;
extern T0* ge1514ov24806025;
extern T0* ge1514ov24805485;
extern T0* ge1514ov24806039;
extern T0* ge1514ov24805499;
extern T0* ge1514ov24806052;
extern T0* ge1514ov24805800;
extern T0* ge1514ov24805512;
extern T0* ge1514ov24806167;
extern T0* ge1514ov24805855;
extern T0* ge1514ov24805624;
extern T0* ge1514ov24806165;
extern T0* ge1514ov24805854;
extern T0* ge1514ov24805622;
extern T0* ge1514ov24805946;
extern T0* ge1514ov24805764;
extern T0* ge1514ov24805406;
extern T0* ge1514ov24806115;
extern T0* ge1514ov24805829;
extern T0* ge1514ov24805572;
extern T0* ge1514ov24805945;
extern T0* ge1514ov24805405;
extern T0* ge1514ov24806114;
extern T0* ge1514ov24805571;
extern T0* ge1284ov21037983;
extern T0* ge1284ov21038029;
extern T0* ge1284ov21038003;
extern T0* ge1514ov24806113;
extern T0* ge1514ov24805828;
extern T0* ge1514ov24805570;
extern T0* ge1514ov24805976;
extern T0* ge1514ov24805779;
extern T0* ge1514ov24805436;
extern T0* ge1514ov24805974;
extern T0* ge1514ov24805777;
extern T0* ge1514ov24805434;
extern T0* ge1514ov24805973;
extern T0* ge1514ov24805433;
extern T0* ge1514ov24805980;
extern T0* ge1514ov24805781;
extern T0* ge1514ov24805440;
extern T0* ge1514ov24805979;
extern T0* ge1514ov24805439;
extern T0* ge1514ov24805981;
extern T0* ge1514ov24805782;
extern T0* ge1514ov24805441;
extern T0* ge1514ov24806020;
extern T0* ge1514ov24805480;
extern T0* ge1514ov24806019;
extern T0* ge1514ov24805479;
extern T0* ge1514ov24806046;
extern T0* ge1514ov24805506;
extern T0* ge1514ov24806018;
extern T0* ge1514ov24805478;
extern T0* ge1514ov24806045;
extern T0* ge1514ov24805505;
extern T0* ge1514ov24806036;
extern T0* ge1514ov24805496;
extern T0* ge1514ov24806044;
extern T0* ge1514ov24805504;
extern T0* ge1514ov24806029;
extern T0* ge1514ov24805489;
extern T0* ge1514ov24806043;
extern T0* ge1514ov24805503;
extern T0* ge1284ov21038139;
extern T0* ge1284ov21038141;
extern T0* ge1284ov21038140;
extern T0* ge1514ov24806254;
extern T0* ge1514ov24805899;
extern T0* ge1514ov24805709;
extern T0* ge1284ov21038109;
extern T0* ge1514ov24806253;
extern T0* ge1514ov24805898;
extern T0* ge1514ov24805708;
extern T0* ge1284ov21037948;
extern T0* ge1284ov21037947;
extern T0* ge1284ov21037946;
extern T0* ge1284ov21037940;
extern T0* ge1284ov21037876;
extern T0* ge1284ov21037859;
extern T0* ge1284ov21037857;
extern T0* ge1284ov21037851;
extern T0* ge1284ov21037849;
extern T0* ge1284ov21037848;
extern T0* ge1284ov21037819;
extern T0* ge1284ov21037793;
extern T0* ge1284ov21037791;
extern T0* ge1284ov21037790;
extern T0* ge1284ov21037788;
extern T0* ge1284ov21037753;
extern T0* ge1284ov21037752;
extern T0* ge1284ov21037751;
extern T0* ge1284ov21037750;
extern T0* ge1284ov21037749;
extern T0* ge1284ov21037748;
extern T0* ge1284ov21037747;
extern T0* ge1284ov21037746;
extern T0* ge1284ov21037731;
extern T0* ge1284ov21037730;
extern T0* ge1284ov21037675;
extern T0* ge1284ov21037674;
extern T0* ge1284ov21037911;
extern T0* ge1284ov21037856;
extern T0* ge1284ov21037836;
extern T0* ge1284ov21037821;
extern T0* ge1284ov21038108;
extern T0* ge1284ov21038105;
extern T0* ge1284ov21038104;
extern T0* ge1284ov21038103;
extern T0* ge1284ov21038102;
extern T0* ge1284ov21038100;
extern T0* ge1284ov21038099;
extern T0* ge1284ov21038098;
extern T0* ge1284ov21037945;
extern T0* ge1284ov21037944;
extern T0* ge1284ov21037943;
extern T0* ge1284ov21037939;
extern T0* ge1284ov21037938;
extern T0* ge1284ov21037772;
extern T0* ge1284ov21037771;
extern T0* ge1284ov21037662;
extern T0* ge1284ov21037661;
extern T0* ge1284ov21037660;
extern T0* ge1284ov21037659;
extern T0* ge1284ov21037658;
extern T0* ge1284ov21037657;
extern T0* ge1284ov21037653;
extern T0* ge1284ov21037652;
extern T0* ge1284ov21037651;
extern T0* ge1284ov21037650;
extern T0* ge1284ov21037649;
extern T0* ge1284ov21037648;
extern T0* ge1284ov21037647;
extern T0* ge1284ov21037646;
extern T0* ge1284ov21038097;
extern T0* ge1284ov21037920;
extern T0* ge1284ov21037874;
extern T0* ge1284ov21037873;
extern T0* ge1284ov21037872;
extern T0* ge1284ov21037871;
extern T0* ge1284ov21037870;
extern T0* ge1284ov21037869;
extern T0* ge1284ov21037868;
extern T0* ge1284ov21037867;
extern T0* ge1284ov21037866;
extern T0* ge1284ov21037865;
extern T0* ge1284ov21037864;
extern T0* ge1284ov21037863;
extern T0* ge1284ov21037862;
extern T0* ge1284ov21037861;
extern T0* ge1284ov21037885;
extern T0* ge1284ov21037882;
extern T0* ge1284ov21037855;
extern T0* ge1284ov21037844;
extern T0* ge1284ov21037834;
extern T0* ge1284ov21037831;
extern T0* ge1284ov21037827;
extern T0* ge1284ov21037824;
extern T0* ge1284ov21037810;
extern T0* ge1284ov21037769;
extern T0* ge1284ov21037766;
extern T0* ge1284ov21037763;
extern T0* ge1284ov21037760;
extern T0* ge1284ov21037692;
extern T0* ge1284ov21037681;
extern T0* ge1284ov21037678;
extern T0* ge1284ov21037666;
extern T0* ge1284ov21037718;
extern T0* ge1284ov21037717;
extern T0* ge1284ov21037958;
extern T0* ge1284ov21037886;
extern T0* ge1284ov21037852;
extern T0* ge1284ov21037808;
extern T0* ge1284ov21037807;
extern T0* ge1284ov21037806;
extern T0* ge1284ov21037805;
extern T0* ge1284ov21037802;
extern T0* ge1284ov21037795;
extern T0* ge1284ov21037789;
extern T0* ge1284ov21037781;
extern T0* ge1284ov21037773;
extern T0* ge1284ov21037770;
extern T0* ge1284ov21037704;
extern T0* ge1284ov21037682;
extern T0* ge1284ov21037663;
extern T0* ge1284ov21037623;
extern T0* ge1284ov21037956;
extern T0* ge1284ov21037955;
extern T0* ge1284ov21037930;
extern T0* ge1284ov21037929;
extern T0* ge1284ov21037928;
extern T0* ge1284ov21037927;
extern T0* ge1284ov21037926;
extern T0* ge1284ov21037925;
extern T0* ge1284ov21037924;
extern T0* ge1284ov21037923;
extern T0* ge1284ov21037922;
extern T0* ge1284ov21037919;
extern T0* ge1284ov21037918;
extern T0* ge1284ov21037917;
extern T0* ge1284ov21037916;
extern T0* ge1284ov21037915;
extern T0* ge1284ov21037914;
extern T0* ge1284ov21037913;
extern T0* ge1284ov21037912;
extern T0* ge1284ov21037909;
extern T0* ge1284ov21037908;
extern T0* ge1284ov21037907;
extern T0* ge1284ov21037906;
extern T0* ge1284ov21037905;
extern T0* ge1284ov21037904;
extern T0* ge1284ov21037903;
extern T0* ge1284ov21037902;
extern T0* ge1284ov21037899;
extern T0* ge1284ov21037898;
extern T0* ge1284ov21037897;
extern T0* ge1284ov21037896;
extern T0* ge1284ov21037895;
extern T0* ge1284ov21037894;
extern T0* ge1284ov21037817;
extern T0* ge1284ov21037813;
extern T0* ge1284ov21037952;
extern T0* ge1284ov21037950;
extern T0* ge1284ov21037935;
extern T0* ge1284ov21037889;
extern T0* ge1284ov21037888;
extern T0* ge1284ov21037887;
extern T0* ge1284ov21037884;
extern T0* ge1284ov21037883;
extern T0* ge1284ov21037881;
extern T0* ge1284ov21037880;
extern T0* ge1284ov21037879;
extern T0* ge1284ov21037878;
extern T0* ge1284ov21037858;
extern T0* ge1284ov21037854;
extern T0* ge1284ov21037853;
extern T0* ge1284ov21037850;
extern T0* ge1284ov21037846;
extern T0* ge1284ov21037845;
extern T0* ge1284ov21037843;
extern T0* ge1284ov21037842;
extern T0* ge1284ov21037841;
extern T0* ge1284ov21037839;
extern T0* ge1284ov21037833;
extern T0* ge1284ov21037832;
extern T0* ge1284ov21037830;
extern T0* ge1284ov21037829;
extern T0* ge1284ov21037826;
extern T0* ge1284ov21037825;
extern T0* ge1284ov21037823;
extern T0* ge1284ov21037822;
extern T0* ge1284ov21037804;
extern T0* ge1284ov21037803;
extern T0* ge1284ov21037801;
extern T0* ge1284ov21037800;
extern T0* ge1284ov21037799;
extern T0* ge1284ov21037798;
extern T0* ge1284ov21037797;
extern T0* ge1284ov21037796;
extern T0* ge1284ov21037792;
extern T0* ge1284ov21037785;
extern T0* ge1284ov21037784;
extern T0* ge1284ov21037783;
extern T0* ge1284ov21037777;
extern T0* ge1284ov21037775;
extern T0* ge1284ov21037768;
extern T0* ge1284ov21037767;
extern T0* ge1284ov21037765;
extern T0* ge1284ov21037764;
extern T0* ge1284ov21037762;
extern T0* ge1284ov21037761;
extern T0* ge1284ov21037759;
extern T0* ge1284ov21037758;
extern T0* ge1284ov21037756;
extern T0* ge1284ov21037740;
extern T0* ge1284ov21037739;
extern T0* ge1284ov21037738;
extern T0* ge1284ov21037736;
extern T0* ge1284ov21037735;
extern T0* ge1284ov21037728;
extern T0* ge1284ov21037726;
extern T0* ge1284ov21037724;
extern T0* ge1284ov21037723;
extern T0* ge1284ov21037721;
extern T0* ge1284ov21037708;
extern T0* ge1284ov21037706;
extern T0* ge1284ov21037705;
extern T0* ge1284ov21037698;
extern T0* ge1284ov21037687;
extern T0* ge1284ov21037684;
extern T0* ge1284ov21037680;
extern T0* ge1284ov21037679;
extern T0* ge1284ov21037677;
extern T0* ge1284ov21037676;
extern T0* ge1284ov21037665;
extern T0* ge1284ov21037664;
extern T0* ge1284ov21037654;
extern T0* ge1284ov21037612;
extern T0* ge1284ov21037712;
extern T0* ge1284ov21037711;
extern T0* ge1284ov21037710;
extern T0* ge1284ov21037709;
extern T0* ge1284ov21037707;
extern T0* ge1284ov21037602;
extern T0* ge1284ov21037699;
extern T0* ge1284ov21037715;
extern T0* ge1284ov21037600;
extern T0* ge1284ov21037910;
extern T0* ge1284ov21037877;
extern T0* ge1284ov21037754;
extern T0* ge1284ov21037670;
extern T0* ge1284ov21037953;
extern T0* ge1284ov21037811;
extern T0* ge1284ov21037794;
extern T0* ge1284ov21037787;
extern T0* ge1284ov21037786;
extern T0* ge1284ov21037776;
extern T0* ge1284ov21037714;
extern T0* ge1284ov21037733;
extern T0* ge1284ov21037729;
extern T0* ge1284ov21037615;
extern T0* ge1284ov21037694;
extern T0* ge1284ov21037693;
extern T0* ge1284ov21037683;
extern T0* ge1284ov21037673;
extern T0* ge1284ov21037672;
extern T0* ge1284ov21037671;
extern T0* ge1284ov21037667;
extern T0* ge1284ov21037595;
extern T0* ge1284ov21037745;
extern T0* ge1284ov21037744;
extern T0* ge1284ov21037645;
extern T0* ge1284ov21037589;
extern T0* ge1284ov21037941;
extern T0* ge1284ov21037779;
extern T0* ge1284ov21037743;
extern T0* ge1284ov21038106;
extern T0* ge1284ov21037835;
extern T0* ge1284ov21037755;
extern T0* ge1284ov21037702;
extern T0* ge1284ov21037701;
extern T0* ge1284ov21037700;
extern T0* ge1284ov21037690;
extern T0* ge1284ov21037689;
extern T0* ge1284ov21038091;
extern T0* ge1284ov21038094;
extern T0* ge1284ov21037828;
extern T0* ge1284ov21037686;
extern T0* ge1284ov21038093;
extern T0* ge1284ov21037900;
extern T0* ge1284ov21037860;
extern T0* ge1284ov21037816;
extern T0* ge1284ov21037716;
extern T0* ge1284ov21037713;
extern T0* ge1284ov21037669;
extern T0* ge1284ov21037655;
extern T0* ge1284ov21037643;
extern T0* ge1284ov21037951;
extern T0* ge1284ov21037892;
extern T0* ge1284ov21037780;
extern T0* ge1284ov21037774;
extern T0* ge1284ov21037742;
extern T0* ge1284ov21037741;
extern T0* ge1284ov21037696;
extern T0* ge1284ov21037932;
extern T0* ge1284ov21037936;
extern T0* ge1284ov21037934;
extern T0* ge1284ov21037933;
extern T0* ge1284ov21037893;
extern T0* ge1284ov21037778;
extern T0* ge1284ov21037737;
extern T0* ge1284ov21037734;
extern T0* ge1284ov21037695;
extern T0* ge1284ov21037688;
extern T0* ge1514ov24806221;
extern T0* ge1514ov24805877;
extern T0* ge1514ov24805676;
extern T0* ge1515ov24822031;
extern T0* ge1515ov24822379;
extern T0* ge1515ov24822380;
extern T0* ge1515ov24822357;
extern T0* ge1515ov24822064;
extern T0* ge1515ov24821969;
extern T0* ge1515ov24822045;
extern T0* ge1515ov24822368;
extern T0* ge1515ov24821971;
extern T0* ge1515ov24821974;
extern T0* ge1515ov24822369;
extern T0* ge1515ov24822348;
extern T0* ge1515ov24821976;
extern T0* ge1515ov24822191;
extern T0* ge1515ov24822080;
extern T0* ge1515ov24822015;
extern T0* ge1515ov24822003;
extern T0* ge1515ov24822242;
extern T0* ge1515ov24822236;
extern T0* ge1515ov24822363;
extern T0* ge1515ov24822359;
extern T0* ge1515ov24822233;
extern T0* ge1515ov24822375;
extern T0* ge1515ov24822371;
extern T0* ge1515ov24822329;
extern T0* ge1515ov24822325;
extern T0* ge1515ov24822248;
extern T0* ge1515ov24822249;
extern T0* ge1515ov24822245;
extern T0* ge1515ov24822130;
extern T0* ge1515ov24822355;
extern T0* ge1515ov24822339;
extern T0* ge1515ov24822073;
extern T0* ge1515ov24822048;
extern T0* ge1514ov24806088;
extern T0* ge1514ov24805545;
extern T0* ge1514ov24806209;
extern T0* ge1514ov24805873;
extern T0* ge1514ov24805664;
extern T0* ge1514ov24806191;
extern T0* ge1514ov24805867;
extern T0* ge1514ov24805646;
extern T0* ge1514ov24806228;
extern T0* ge1514ov24805880;
extern T0* ge1514ov24805683;
extern T0* ge1514ov24806226;
extern T0* ge1514ov24805879;
extern T0* ge1514ov24805681;
extern T0* ge1514ov24806103;
extern T0* ge1514ov24805823;
extern T0* ge1514ov24805560;
extern T0* ge1284ov21038014;
extern T0* ge1514ov24806196;
extern T0* ge1514ov24805870;
extern T0* ge1514ov24805651;
extern T0* ge1514ov24806194;
extern T0* ge1514ov24805869;
extern T0* ge1514ov24805649;
extern T0* ge1514ov24806193;
extern T0* ge1514ov24805868;
extern T0* ge1514ov24805648;
extern T0* ge1514ov24806192;
extern T0* ge1514ov24805647;
extern T0* ge1514ov24805956;
extern T0* ge1514ov24805769;
extern T0* ge1514ov24805416;
extern T0* ge1514ov24805932;
extern T0* ge1514ov24805755;
extern T0* ge1514ov24805392;
extern T0* ge1514ov24806062;
extern T0* ge1514ov24805520;
extern T0* ge1514ov24806190;
extern T0* ge1514ov24805645;
extern T0* ge1514ov24806189;
extern T0* ge1514ov24805644;
extern T0* ge1514ov24805955;
extern T0* ge1514ov24805768;
extern T0* ge1514ov24805415;
extern T0* ge1284ov21038043;
extern T0* ge1284ov21038044;
extern T0* ge1284ov21038045;
extern T0* ge1284ov21038046;
extern T0* ge1284ov21038047;
extern T0* ge1284ov21038051;
extern T0* ge1284ov21038052;
extern T0* ge1284ov21038053;
extern T0* ge1284ov21038054;
extern T0* ge1284ov21038055;
extern T0* ge1284ov21038056;
extern T0* ge1284ov21038057;
extern T0* ge1284ov21038058;
extern T0* ge1284ov21038060;
extern T0* ge1284ov21038061;
extern T0* ge1284ov21038063;
extern T0* ge1284ov21038064;
extern T0* ge1284ov21038065;
extern T0* ge1284ov21038066;
extern T0* ge1284ov21038067;
extern T0* ge1284ov21038068;
extern T0* ge1284ov21038069;
extern T0* ge1284ov21038070;
extern T0* ge1284ov21038072;
extern T0* ge1284ov21038073;
extern T0* ge1284ov21038078;
extern T0* ge1284ov21038079;
extern T0* ge1284ov21038080;
extern T0* ge1284ov21038081;
extern T0* ge1284ov21038082;
extern T0* ge1284ov21038083;
extern T0* ge1284ov21038084;
extern T0* ge1284ov21038085;
extern T0* ge1284ov21038087;
extern T0* ge1284ov21038088;
extern T0* ge1514ov24805931;
extern T0* ge1514ov24805754;
extern T0* ge1514ov24805391;
extern T0* ge1514ov24806210;
extern T0* ge1514ov24805665;
extern T0* ge1514ov24806227;
extern T0* ge1514ov24805682;
extern T0* ge1514ov24806225;
extern T0* ge1514ov24805680;
extern T0* ge1514ov24806106;
extern T0* ge1514ov24805824;
extern T0* ge1514ov24805563;
extern T0* ge1284ov21038144;
extern T0* ge1284ov21038147;
extern T0* ge1514ov24805930;
extern T0* ge1514ov24805390;
extern T0* ge1514ov24806201;
extern T0* ge1514ov24805871;
extern T0* ge1514ov24805656;
extern T0* ge1515ov24822023;
extern T0* ge1515ov24822017;
extern T0* ge1515ov24821991;
extern T0* ge1515ov24822360;
extern T0* ge1515ov24822170;
extern T0* ge1515ov24822283;
extern T0* ge1515ov24821975;
extern T0* ge1515ov24822247;
extern T0* ge1515ov24822237;
extern T0* ge1515ov24822243;
extern T0* ge1515ov24822246;
extern T0* ge1515ov24822244;
extern T0* ge1515ov24822239;
extern T0* ge1515ov24822238;
extern T0* ge1515ov24822240;
extern T0* ge1515ov24822235;
extern T0* ge1515ov24821978;
extern T0* ge1515ov24822358;
extern T0* ge1515ov24822169;
extern T0* ge1515ov24822362;
extern T0* ge1515ov24822373;
extern T0* ge1515ov24822366;
extern T0* ge1515ov24822367;
extern T0* ge1515ov24821977;
extern T0* ge1515ov24821973;
extern T0* ge1514ov24806208;
extern T0* ge1514ov24805872;
extern T0* ge1514ov24805663;
extern T0* ge1514ov24806105;
extern T0* ge1514ov24805562;
extern T0* ge1514ov24806287;
extern T0* ge1514ov24805916;
extern T0* ge1514ov24805742;
extern T0* ge1514ov24806285;
extern T0* ge1514ov24805740;
extern T0* ge1514ov24806286;
extern T0* ge1514ov24805741;
extern T0* ge1514ov24806269;
extern T0* ge1514ov24805909;
extern T0* ge1514ov24805724;
extern T0* ge1514ov24806267;
extern T0* ge1514ov24805722;
extern T0* ge1514ov24806268;
extern T0* ge1514ov24805723;
extern T0* ge1514ov24805993;
extern T0* ge1514ov24805786;
extern T0* ge1514ov24805453;
extern T0* ge1514ov24805992;
extern T0* ge1514ov24805452;
extern T0* ge1514ov24806290;
extern T0* ge1514ov24805917;
extern T0* ge1514ov24805745;
extern T0* ge1514ov24806288;
extern T0* ge1514ov24805743;
extern T0* ge1514ov24806289;
extern T0* ge1514ov24805744;
extern T0* ge1514ov24806277;
extern T0* ge1514ov24805912;
extern T0* ge1514ov24805732;
extern T0* ge1514ov24806275;
extern T0* ge1514ov24805730;
extern T0* ge1514ov24806276;
extern T0* ge1514ov24805731;
extern T0* ge1514ov24805997;
extern T0* ge1514ov24805788;
extern T0* ge1514ov24805457;
extern T0* ge1514ov24805996;
extern T0* ge1514ov24805456;
extern T0* ge1514ov24806282;
extern T0* ge1514ov24805914;
extern T0* ge1514ov24805737;
extern T0* ge1514ov24806280;
extern T0* ge1514ov24805735;
extern T0* ge1514ov24806281;
extern T0* ge1514ov24805736;
extern T0* ge1514ov24805995;
extern T0* ge1514ov24805787;
extern T0* ge1514ov24805455;
extern T0* ge1514ov24805994;
extern T0* ge1514ov24805454;
extern T0* ge1514ov24806283;
extern T0* ge1514ov24805915;
extern T0* ge1514ov24805738;
extern T0* ge1514ov24806284;
extern T0* ge1514ov24805739;
extern T0* ge1514ov24806270;
extern T0* ge1514ov24805910;
extern T0* ge1514ov24805725;
extern T0* ge1514ov24806271;
extern T0* ge1514ov24805726;
extern T0* ge1514ov24805999;
extern T0* ge1514ov24805790;
extern T0* ge1514ov24805459;
extern T0* ge1514ov24805987;
extern T0* ge1514ov24805785;
extern T0* ge1514ov24805447;
extern T0* ge1514ov24805989;
extern T0* ge1514ov24805449;
extern T0* ge1514ov24806278;
extern T0* ge1514ov24805913;
extern T0* ge1514ov24805733;
extern T0* ge1514ov24806279;
extern T0* ge1514ov24805734;
extern T0* ge1514ov24806265;
extern T0* ge1514ov24805908;
extern T0* ge1514ov24805720;
extern T0* ge1514ov24806266;
extern T0* ge1514ov24805721;
extern T0* ge1514ov24806104;
extern T0* ge1514ov24805561;
extern T0* ge1514ov24805927;
extern T0* ge1514ov24805751;
extern T0* ge1514ov24805387;
extern T0* ge1514ov24805926;
extern T0* ge1514ov24805386;
extern T0* ge1514ov24805925;
extern T0* ge1514ov24805385;
extern T0* ge1514ov24805924;
extern T0* ge1514ov24805384;
extern T0* ge1514ov24805923;
extern T0* ge1514ov24805383;
extern T0* ge1514ov24805922;
extern T0* ge1514ov24805382;
extern T0* ge1514ov24805921;
extern T0* ge1514ov24805750;
extern T0* ge1514ov24805381;
extern T0* ge1514ov24805928;
extern T0* ge1514ov24805752;
extern T0* ge1514ov24805388;
extern T0* ge1514ov24806235;
extern T0* ge1514ov24805884;
extern T0* ge1514ov24805690;
extern T0* ge1514ov24805934;
extern T0* ge1514ov24805756;
extern T0* ge1514ov24805394;
extern T0* ge1514ov24806126;
extern T0* ge1514ov24805835;
extern T0* ge1514ov24805583;
extern T0* ge1514ov24806125;
extern T0* ge1514ov24805582;
extern T0* ge1514ov24806124;
extern T0* ge1514ov24805581;
extern T0* ge1514ov24806123;
extern T0* ge1514ov24805580;
extern T0* ge1514ov24806122;
extern T0* ge1514ov24805579;
extern T0* ge1514ov24806121;
extern T0* ge1514ov24805834;
extern T0* ge1514ov24805578;
extern T0* ge1515ov24822381;
extern T0* ge1515ov24822077;
extern T0* ge1514ov24806212;
extern T0* ge1514ov24805875;
extern T0* ge1514ov24805667;
extern T0* ge1514ov24806213;
extern T0* ge1514ov24805668;
extern T0* ge1514ov24806211;
extern T0* ge1514ov24805874;
extern T0* ge1514ov24805666;
extern T0* ge1514ov24805951;
extern T0* ge1514ov24805767;
extern T0* ge1514ov24805411;
extern T0* ge1514ov24805950;
extern T0* ge1514ov24805410;
extern T0* ge1514ov24805949;
extern T0* ge1514ov24805766;
extern T0* ge1514ov24805409;
extern T0* ge1514ov24806205;
extern T0* ge1514ov24805660;
extern T0* ge1514ov24805953;
extern T0* ge1514ov24805413;
extern T0* ge1514ov24805954;
extern T0* ge1514ov24805414;
extern T0* ge1514ov24805947;
extern T0* ge1514ov24805765;
extern T0* ge1514ov24805407;
extern T0* ge1514ov24806129;
extern T0* ge1514ov24805838;
extern T0* ge1514ov24805586;
extern T0* ge1514ov24806130;
extern T0* ge1514ov24805587;
extern T0* ge1514ov24806128;
extern T0* ge1514ov24805837;
extern T0* ge1514ov24805585;
extern T0* ge1515ov24822153;
extern T0* ge1515ov24821981;
extern T0* ge1515ov24822081;
extern T0* ge1515ov24822101;
extern T0* ge1515ov24822102;
extern T0* ge1515ov24822140;
extern T0* ge1515ov24822103;
extern T0* ge1515ov24822046;
extern T0* ge1515ov24822141;
extern T0* ge1515ov24822104;
extern T0* ge1515ov24822151;
extern T0* ge1515ov24822152;
extern T0* ge1515ov24822047;
extern T0* ge1515ov24822154;
extern T0* ge1514ov24806063;
extern T0* ge1514ov24805521;
extern T0* ge1514ov24805933;
extern T0* ge1514ov24805393;
extern T0* ge1514ov24806064;
extern T0* ge1514ov24805808;
extern T0* ge1514ov24805522;
extern T0* ge1514ov24806057;
extern T0* ge1514ov24805804;
extern T0* ge1514ov24805515;
extern T0* ge1514ov24806059;
extern T0* ge1514ov24805806;
extern T0* ge1514ov24805517;
extern T0* ge1514ov24806058;
extern T0* ge1514ov24805805;
extern T0* ge1514ov24805516;
extern T0* ge1514ov24806200;
extern T0* ge1514ov24805655;
extern T0* ge1514ov24806099;
extern T0* ge1514ov24805821;
extern T0* ge1514ov24805556;
extern T0* ge1514ov24805983;
extern T0* ge1514ov24805784;
extern T0* ge1514ov24805443;
extern T0* ge1514ov24805984;
extern T0* ge1514ov24805444;
extern T0* ge1514ov24806100;
extern T0* ge1514ov24805557;
extern T0* ge1514ov24806101;
extern T0* ge1514ov24805558;
extern T0* ge1514ov24805985;
extern T0* ge1514ov24805445;
extern T0* ge1514ov24805991;
extern T0* ge1514ov24805451;
extern T0* ge1515ov24822043;
extern T0* ge1515ov24822370;
extern T0* ge1515ov24822190;
extern T0* ge1515ov24822378;
extern T0* ge1284ov21038143;
extern T0* ge1284ov21038146;
extern T0* ge1278ov20938761;
extern T0* ge1284ov21038145;
extern T0* ge1278ov20938762;
extern T0* ge1515ov24822352;
extern T0* ge1515ov24822321;
extern T0* ge1515ov24822322;
extern T0* ge1515ov24822044;
extern T0* ge1514ov24806102;
extern T0* ge1514ov24805822;
extern T0* ge1514ov24805559;
extern T0* ge1515ov24822020;
extern T0* ge1514ov24806098;
extern T0* ge1514ov24805820;
extern T0* ge1514ov24805555;
extern T0* ge1514ov24806097;
extern T0* ge1514ov24805554;
extern T0* ge1514ov24806197;
extern T0* ge1514ov24805652;
extern T0* ge1514ov24806195;
extern T0* ge1514ov24805650;
extern T0* ge1514ov24805935;
extern T0* ge1514ov24805757;
extern T0* ge1514ov24805395;
extern T0* ge1514ov24805936;
extern T0* ge1514ov24805758;
extern T0* ge1514ov24805396;
extern T0* ge1514ov24806248;
extern T0* ge1514ov24805892;
extern T0* ge1514ov24805703;
extern T0* ge1515ov24822026;
extern T0* ge1515ov24822029;
extern T0* ge1515ov24822323;
extern T0* ge1515ov24822234;
extern T0* ge1515ov24821900;
extern T0* ge1515ov24822002;
extern T0* ge1515ov24822307;
extern T0* ge1515ov24822306;
extern T0* ge1515ov24822280;
extern T0* ge1515ov24822279;
extern T0* ge1515ov24822278;
extern T0* ge1515ov24822277;
extern T0* ge1515ov24822276;
extern T0* ge1515ov24822275;
extern T0* ge1515ov24822274;
extern T0* ge1515ov24822273;
extern T0* ge1515ov24822272;
extern T0* ge1515ov24822271;
extern T0* ge1515ov24822270;
extern T0* ge1515ov24822269;
extern T0* ge1515ov24822268;
extern T0* ge1515ov24822267;
extern T0* ge1515ov24822266;
extern T0* ge1515ov24822265;
extern T0* ge1515ov24822264;
extern T0* ge1515ov24822263;
extern T0* ge1515ov24822262;
extern T0* ge1515ov24822261;
extern T0* ge1515ov24822260;
extern T0* ge1515ov24822259;
extern T0* ge1515ov24822258;
extern T0* ge1515ov24822257;
extern T0* ge1515ov24822255;
extern T0* ge1515ov24822254;
extern T0* ge1515ov24822253;
extern T0* ge1515ov24822252;
extern T0* ge1515ov24822251;
extern T0* ge1515ov24822250;
extern T0* ge1515ov24822139;
extern T0* ge1515ov24822133;
extern T0* ge1515ov24822071;
extern T0* ge1515ov24822181;
extern T0* ge1515ov24822054;
extern T0* ge1515ov24822342;
extern T0* ge1515ov24822340;
extern T0* ge1515ov24822324;
extern T0* ge1515ov24822069;
extern T0* ge1515ov24822088;
extern T0* ge1515ov24822018;
extern T0* ge1515ov24822372;
extern T0* ge1515ov24822117;
extern T0* ge1515ov24822114;
extern T0* ge1515ov24822213;
extern T0* ge1515ov24822230;
extern T0* ge1515ov24822212;
extern T0* ge1515ov24822229;
extern T0* ge1515ov24822211;
extern T0* ge1515ov24822228;
extern T0* ge1515ov24822188;
extern T0* ge1515ov24821983;
extern T0* ge1515ov24822210;
extern T0* ge1515ov24822227;
extern T0* ge1515ov24822209;
extern T0* ge1515ov24822226;
extern T0* ge1515ov24822208;
extern T0* ge1515ov24822225;
extern T0* ge1515ov24822207;
extern T0* ge1515ov24822224;
extern T0* ge1515ov24822205;
extern T0* ge1515ov24822222;
extern T0* ge1515ov24822204;
extern T0* ge1515ov24822221;
extern T0* ge1515ov24822203;
extern T0* ge1515ov24822220;
extern T0* ge1515ov24822202;
extern T0* ge1515ov24822219;
extern T0* ge1515ov24822201;
extern T0* ge1515ov24822218;
extern T0* ge1515ov24822200;
extern T0* ge1515ov24822217;
extern T0* ge1515ov24822199;
extern T0* ge1515ov24822216;
extern T0* ge1515ov24822087;
extern T0* ge1515ov24822056;
extern T0* ge1515ov24822337;
extern T0* ge1515ov24822012;
extern T0* ge1515ov24822010;
extern T0* ge1515ov24822001;
extern T0* ge1515ov24822000;
extern T0* ge1515ov24821999;
extern T0* ge1515ov24821998;
extern T0* ge1515ov24821997;
extern T0* ge1515ov24822113;
extern T0* ge1515ov24821995;
extern T0* ge1515ov24822013;
extern T0* ge1515ov24821987;
extern T0* ge1515ov24821985;
extern T0* ge1515ov24822032;
extern T0* ge1515ov24822075;
extern T0* ge1515ov24822074;
extern T0* ge1515ov24822282;
extern T0* ge1515ov24822177;
extern T0* ge1515ov24822232;
extern T0* ge1515ov24822231;
extern T0* ge1515ov24822215;
extern T0* ge1515ov24822214;
extern T0* ge1515ov24822198;
extern T0* ge1515ov24822197;
extern T0* ge1515ov24822193;
extern T0* ge1515ov24822194;
extern T0* ge1515ov24822187;
extern T0* ge1515ov24822186;
extern T0* ge1515ov24822185;
extern T0* ge1515ov24822351;
extern T0* ge1515ov24822182;
extern T0* ge1515ov24822175;
extern T0* ge1515ov24822174;
extern T0* ge1515ov24822171;
extern T0* ge1515ov24822165;
extern T0* ge1515ov24822162;
extern T0* ge1515ov24822161;
extern T0* ge1515ov24822160;
extern T0* ge1515ov24822159;
extern T0* ge1515ov24822158;
extern T0* ge1515ov24822157;
extern T0* ge1515ov24822156;
extern T0* ge1515ov24822155;
extern T0* ge1515ov24822127;
extern T0* ge1515ov24822128;
extern T0* ge1515ov24822124;
extern T0* ge1515ov24822126;
extern T0* ge1515ov24822125;
extern T0* ge1515ov24822123;
extern T0* ge1515ov24822121;
extern T0* ge1515ov24822122;
extern T0* ge1515ov24822120;
extern T0* ge1515ov24822119;
extern T0* ge1515ov24822118;
extern T0* ge1515ov24822116;
extern T0* ge1515ov24822115;
extern T0* ge1515ov24822112;
extern T0* ge1515ov24822111;
extern T0* ge1515ov24822110;
extern T0* ge1515ov24822109;
extern T0* ge1515ov24822108;
extern T0* ge1515ov24822107;
extern T0* ge1515ov24822106;
extern T0* ge1515ov24822105;
extern T0* ge1515ov24822093;
extern T0* ge1515ov24822091;
extern T0* ge1515ov24822090;
extern T0* ge1515ov24822089;
extern T0* ge1515ov24822086;
extern T0* ge1515ov24822085;
extern T0* ge1515ov24822084;
extern T0* ge1515ov24822083;
extern T0* ge1515ov24822082;
extern T0* ge1515ov24822092;
extern T0* ge1515ov24822179;
extern T0* ge1515ov24822178;
extern T0* ge1515ov24822176;
extern T0* ge1515ov24822062;
extern T0* ge1515ov24822061;
extern T0* ge1515ov24822060;
extern T0* ge1515ov24822059;
extern T0* ge1515ov24822058;
extern T0* ge1515ov24822057;
extern T0* ge1515ov24822042;
extern T0* ge1515ov24822041;
extern T0* ge1515ov24822039;
extern T0* ge1515ov24822180;
extern T0* ge1515ov24822094;
extern T0* ge1515ov24822050;
extern T0* ge1515ov24822049;
extern T0* ge1515ov24822053;
extern T0* ge1515ov24822052;
extern T0* ge1515ov24822051;
extern T0* ge1515ov24822055;
extern T0* ge1515ov24822129;
extern T0* ge1515ov24822038;
extern T0* ge1515ov24822037;
extern T0* ge1515ov24822341;
extern T0* ge1515ov24822349;
extern T0* ge1515ov24822206;
extern T0* ge1515ov24822223;
extern T0* ge1515ov24822143;
extern T0* ge1515ov24822142;
extern T0* ge1515ov24822305;
extern T0* ge1515ov24822068;
extern T0* ge1515ov24822304;
extern T0* ge1515ov24822033;
extern T0* ge1515ov24822289;
extern T0* ge1514ov24806061;
extern T0* ge1514ov24805519;
extern T0* ge1514ov24806291;
extern T0* ge1514ov24805918;
extern T0* ge1514ov24805746;
extern T0* ge1514ov24806241;
extern T0* ge1514ov24805889;
extern T0* ge1514ov24805696;
extern T0* ge1514ov24806293;
extern T0* ge1514ov24805748;
extern T0* ge1514ov24806244;
extern T0* ge1514ov24805699;
extern T0* ge1515ov24822144;
extern T0* ge1515ov24822096;
extern T0* ge1515ov24822095;
extern T0* ge1514ov24806292;
extern T0* ge1514ov24805747;
extern T0* ge1514ov24806243;
extern T0* ge1514ov24805698;
extern T0* ge1514ov24806151;
extern T0* ge1514ov24805845;
extern T0* ge1514ov24805608;
extern T0* ge1514ov24806139;
extern T0* ge1514ov24805843;
extern T0* ge1514ov24805596;
extern T0* ge1514ov24806138;
extern T0* ge1514ov24805595;
extern T0* ge1514ov24806137;
extern T0* ge1514ov24805842;
extern T0* ge1514ov24805594;
extern T0* ge1514ov24806136;
extern T0* ge1514ov24805593;
extern T0* ge1514ov24806135;
extern T0* ge1514ov24805841;
extern T0* ge1514ov24805592;
extern T0* ge1514ov24806134;
extern T0* ge1514ov24805591;
extern T0* ge1514ov24806222;
extern T0* ge1514ov24805677;
extern T0* ge1514ov24806148;
extern T0* ge1514ov24805844;
extern T0* ge1514ov24805605;
extern T0* ge1514ov24806146;
extern T0* ge1514ov24805603;
extern T0* ge1514ov24806144;
extern T0* ge1514ov24805601;
extern T0* ge1514ov24806141;
extern T0* ge1514ov24805598;
extern T0* ge1514ov24806140;
extern T0* ge1514ov24805597;
extern T0* ge1514ov24806168;
extern T0* ge1514ov24805625;
extern T0* ge1514ov24806163;
extern T0* ge1514ov24805853;
extern T0* ge1514ov24805620;
extern T0* ge1514ov24806206;
extern T0* ge1514ov24805661;
extern T0* ge1514ov24806150;
extern T0* ge1514ov24805607;
extern T0* ge1514ov24806232;
extern T0* ge1514ov24805882;
extern T0* ge1514ov24805687;
extern T0* ge1514ov24806230;
extern T0* ge1514ov24805881;
extern T0* ge1514ov24805685;
extern T0* ge950ov15859714;
extern T0* ge1514ov24806229;
extern T0* ge1514ov24805684;
extern T0* ge1514ov24806233;
extern T0* ge1514ov24805688;
extern T0* ge1514ov24806231;
extern T0* ge1514ov24805686;
extern T0* ge1514ov24806149;
extern T0* ge1514ov24805606;
extern T0* ge1514ov24806147;
extern T0* ge1514ov24805604;
extern T0* ge1514ov24806145;
extern T0* ge1514ov24805602;
extern T0* ge1514ov24806143;
extern T0* ge1514ov24805600;
extern T0* ge1514ov24806142;
extern T0* ge1514ov24805599;
extern T0* ge1514ov24806172;
extern T0* ge1514ov24805858;
extern T0* ge1514ov24805629;
extern T0* ge1514ov24806174;
extern T0* ge1514ov24805859;
extern T0* ge1514ov24805631;
extern T0* ge1514ov24806164;
extern T0* ge1514ov24805621;
extern T0* ge1515ov24822078;
extern T0* ge1515ov24822150;
extern T0* ge1515ov24822189;
extern T0* ge1515ov24822344;
extern T0* ge1515ov24822364;
extern T0* ge1515ov24822356;
extern T0* ge1515ov24822028;
extern T0* ge1515ov24822132;
extern T0* ge1515ov24822036;
extern T0* ge1515ov24822365;
extern T0* ge1514ov24806002;
extern T0* ge1514ov24805462;
extern T0* ge1514ov24806127;
extern T0* ge1514ov24805836;
extern T0* ge1514ov24805584;
extern T0* ge1514ov24806224;
extern T0* ge1514ov24805878;
extern T0* ge1514ov24805679;
extern T0* ge1514ov24806223;
extern T0* ge1514ov24805678;
extern T0* ge1514ov24806219;
extern T0* ge1514ov24805876;
extern T0* ge1514ov24805674;
extern T0* ge1514ov24806218;
extern T0* ge1514ov24805673;
extern T0* ge1514ov24806217;
extern T0* ge1514ov24805672;
extern T0* ge1514ov24806216;
extern T0* ge1514ov24805671;
extern T0* ge1514ov24806215;
extern T0* ge1514ov24805670;
extern T0* ge1514ov24806214;
extern T0* ge1514ov24805669;
extern T0* ge1514ov24806220;
extern T0* ge1514ov24805675;
extern T0* ge1514ov24805929;
extern T0* ge1514ov24805753;
extern T0* ge1514ov24805389;
extern T0* ge1514ov24806238;
extern T0* ge1514ov24805886;
extern T0* ge1514ov24805693;
extern T0* ge1515ov24822345;
extern T0* ge1515ov24822346;
extern T0* ge1515ov24822025;
extern T0* ge1515ov24822338;
extern T0* ge1514ov24805986;
extern T0* ge1514ov24805450;
extern T0* ge1514ov24805988;
extern T0* ge1514ov24805448;
extern T0* ge1514ov24805446;
extern T0* ge1284ov21037962;
extern T0* ge1514ov24806204;
extern T0* ge1514ov24805659;
extern T0* ge1514ov24805998;
extern T0* ge1514ov24805789;
extern T0* ge1514ov24805458;
extern T0* ge1514ov24806202;
extern T0* ge1514ov24805657;
extern T0* ge1514ov24805948;
extern T0* ge1514ov24805408;
extern T0* ge1514ov24806242;
extern T0* ge1514ov24805697;
extern T0* ge1514ov24806247;
extern T0* ge1514ov24805891;
extern T0* ge1514ov24805702;
extern T0* ge1514ov24806245;
extern T0* ge1514ov24805890;
extern T0* ge1514ov24805700;
extern T0* ge1514ov24806240;
extern T0* ge1514ov24805888;
extern T0* ge1514ov24805695;
extern T0* ge1514ov24806239;
extern T0* ge1514ov24805887;
extern T0* ge1514ov24805694;
extern T0* ge1515ov24822134;
extern T0* ge1515ov24822332;
extern T0* ge1515ov24822040;
extern T0* ge1514ov24806089;
extern T0* ge1514ov24805546;
extern T0* ge1514ov24806132;
extern T0* ge1514ov24805839;
extern T0* ge1514ov24805589;
extern T0* ge1514ov24806133;
extern T0* ge1514ov24805840;
extern T0* ge1514ov24805590;
extern T0* ge1514ov24806131;
extern T0* ge1514ov24805588;
extern T0* ge1514ov24806207;
extern T0* ge1514ov24805662;
extern T0* ge1514ov24806107;
extern T0* ge1514ov24805564;
extern T0* ge1514ov24806274;
extern T0* ge1514ov24805911;
extern T0* ge1514ov24805729;
extern T0* ge1514ov24806272;
extern T0* ge1514ov24805727;
extern T0* ge1514ov24806273;
extern T0* ge1514ov24805728;
extern T0* ge1514ov24806237;
extern T0* ge1514ov24805692;
extern T0* ge1515ov24822145;
extern T0* ge1514ov24806000;
extern T0* ge1514ov24805460;
extern T0* ge1514ov24806203;
extern T0* ge1514ov24805658;
extern T0* ge1515ov24822327;
extern T0* ge1515ov24822137;
extern T0* ge1515ov24822138;
extern T0* ge1515ov24822343;
extern T0* ge1515ov24822354;
extern T0* ge1515ov24822027;
extern T0* ge1515ov24822374;
extern T0* ge1515ov24822035;
extern T0* ge1515ov24822163;
extern T0* ge1515ov24822328;
extern T0* ge1515ov24822281;
extern T0* ge1514ov24806199;
extern T0* ge1514ov24805654;
extern T0* ge1514ov24806169;
extern T0* ge1514ov24805856;
extern T0* ge1514ov24805626;
extern T0* ge1514ov24806170;
extern T0* ge1514ov24805857;
extern T0* ge1514ov24805627;
extern T0* ge1514ov24806166;
extern T0* ge1514ov24805623;
extern T0* ge1515ov24822168;
extern T0* ge1515ov24822148;
extern T0* ge1515ov24822149;
extern T0* ge1515ov24822192;
extern T0* ge1515ov24822183;
extern T0* ge1514ov24806001;
extern T0* ge1514ov24805461;
extern T0* ge1514ov24806160;
extern T0* ge1514ov24805852;
extern T0* ge1514ov24805617;
extern T0* ge1514ov24806158;
extern T0* ge1514ov24805850;
extern T0* ge1514ov24805615;
extern T0* ge1514ov24806159;
extern T0* ge1514ov24805616;
extern T0* ge1514ov24806157;
extern T0* ge1514ov24805849;
extern T0* ge1514ov24805614;
extern T0* ge1514ov24806155;
extern T0* ge1514ov24805848;
extern T0* ge1514ov24805612;
extern T0* ge1514ov24806156;
extern T0* ge1514ov24805613;
extern T0* ge1514ov24806153;
extern T0* ge1514ov24805847;
extern T0* ge1514ov24805610;
extern T0* ge1514ov24806154;
extern T0* ge1514ov24805611;
extern T0* ge1514ov24806152;
extern T0* ge1514ov24805846;
extern T0* ge1514ov24805609;
extern T0* ge1514ov24806198;
extern T0* ge1514ov24805653;
extern T0* ge1514ov24806234;
extern T0* ge1514ov24805883;
extern T0* ge1514ov24805689;
extern T0* ge1514ov24806003;
extern T0* ge1514ov24805463;
extern T0* ge1514ov24805962;
extern T0* ge1514ov24805771;
extern T0* ge1514ov24805422;
extern T0* ge1514ov24805961;
extern T0* ge1514ov24805421;
extern T0* ge1514ov24805967;
extern T0* ge1514ov24805427;
extern T0* ge1514ov24805964;
extern T0* ge1514ov24805772;
extern T0* ge1514ov24805424;
extern T0* ge1514ov24805965;
extern T0* ge1514ov24805425;
extern T0* ge1514ov24806112;
extern T0* ge1514ov24805569;
extern T0* ge1514ov24805963;
extern T0* ge1514ov24805423;
extern T0* ge1514ov24805977;
extern T0* ge1514ov24805437;
extern T0* ge1514ov24805966;
extern T0* ge1514ov24805773;
extern T0* ge1514ov24805426;
extern T0* ge1514ov24805971;
extern T0* ge1514ov24805775;
extern T0* ge1514ov24805431;
extern T0* ge1514ov24805969;
extern T0* ge1514ov24805429;
extern T0* ge1514ov24805970;
extern T0* ge1514ov24805430;
extern T0* ge1514ov24806120;
extern T0* ge1514ov24805833;
extern T0* ge1514ov24805577;
extern T0* ge1514ov24806117;
extern T0* ge1514ov24805830;
extern T0* ge1514ov24805574;
extern T0* ge1514ov24806116;
extern T0* ge1514ov24805573;
extern T0* ge1514ov24806118;
extern T0* ge1514ov24805831;
extern T0* ge1514ov24805575;
extern T0* ge1514ov24805972;
extern T0* ge1514ov24805776;
extern T0* ge1514ov24805432;
extern T0* ge1514ov24805978;
extern T0* ge1514ov24805780;
extern T0* ge1514ov24805438;
extern T0* ge1514ov24806109;
extern T0* ge1514ov24805826;
extern T0* ge1514ov24805566;
extern T0* ge1514ov24806095;
extern T0* ge1514ov24805818;
extern T0* ge1514ov24805552;
extern T0* ge1514ov24806119;
extern T0* ge1514ov24805832;
extern T0* ge1514ov24805576;
extern T0* ge1514ov24805975;
extern T0* ge1514ov24805778;
extern T0* ge1514ov24805435;
extern T0* ge1514ov24805982;
extern T0* ge1514ov24805783;
extern T0* ge1514ov24805442;
extern T0* ge1514ov24806110;
extern T0* ge1514ov24805827;
extern T0* ge1514ov24805567;
extern T0* ge1514ov24806108;
extern T0* ge1514ov24805825;
extern T0* ge1514ov24805565;
extern T0* ge1514ov24806096;
extern T0* ge1514ov24805819;
extern T0* ge1514ov24805553;
extern T0* ge1514ov24806111;
extern T0* ge1514ov24805568;
extern T0* ge1284ov21037972;
extern T0* ge1505ov24657926;
extern T0* ge1505ov24657924;
extern T0* ge1505ov24657922;
extern T0* ge1504ov24641549;
extern T0* ge1504ov24641544;
extern T0* ge1504ov24641539;
extern T0* ge1514ov24806262;
extern T0* ge1514ov24805906;
extern T0* ge1514ov24805717;
extern T0* ge1284ov21037967;
extern T0* ge1284ov21038011;
extern T0* ge1284ov21037963;
extern T0* ge1284ov21037966;
extern T0* ge1284ov21038025;
extern T0* ge1284ov21038010;
extern T0* ge1284ov21037986;
extern T0* ge1284ov21038012;
extern T0* ge1284ov21038026;
extern T0* ge1284ov21037970;
extern T0* ge1284ov21037982;
extern T0* ge1284ov21037985;
extern T0* ge1284ov21038033;
extern T0* ge1284ov21037979;
extern T0* ge1284ov21037976;
extern T0* ge1284ov21038006;
extern T0* ge1284ov21037995;
extern T0* ge1284ov21038019;
extern T0* ge1284ov21037975;
extern T0* ge1284ov21038031;
extern T0* ge1284ov21038002;
extern T0* ge1284ov21037989;
extern T0* ge1284ov21038018;
extern T0* ge1511ov24756227;
extern T0* ge1511ov24756226;
extern T0* ge1284ov21038005;
extern T0* ge1284ov21037968;
extern T0* ge1284ov21037994;
extern T0* ge1284ov21037978;
extern T0* ge1284ov21038015;
extern T0* ge1284ov21037969;
extern T0* ge1284ov21037991;
extern T0* ge1284ov21038017;
extern T0* ge1514ov24806261;
extern T0* ge1514ov24805716;
extern T0* ge1284ov21038008;
extern T0* ge1526ov25002035;
extern T0* ge1284ov21038092;
extern T0* ge1284ov21038095;
extern T0* ge1284ov21038096;
extern T0* ge1284ov21038101;
extern T0* ge1284ov21038107;
extern T0* ge1284ov21038110;
extern T0* ge1284ov21037610;
extern T0* ge1284ov21037616;
extern T0* ge1284ov21037644;
extern T0* ge1284ov21037656;
extern T0* ge1284ov21037685;
extern T0* ge1284ov21037719;
extern T0* ge1284ov21037720;
extern T0* ge1284ov21037722;
extern T0* ge1284ov21037725;
extern T0* ge1284ov21037727;
extern T0* ge1284ov21037757;
extern T0* ge1284ov21037812;
extern T0* ge1284ov21037814;
extern T0* ge1284ov21037815;
extern T0* ge1284ov21037818;
extern T0* ge1284ov21037820;
extern T0* ge1284ov21037838;
extern T0* ge1284ov21037840;
extern T0* ge1284ov21037847;
extern T0* ge1284ov21037891;
extern T0* ge1284ov21037901;
extern T0* ge1284ov21037921;
extern T0* ge1284ov21037931;
extern T0* ge1284ov21037937;
extern T0* ge1284ov21037942;
extern T0* ge1284ov21037954;
extern T0* ge1284ov21037957;
extern T0* ge1284ov21037960;
extern T0* ge1284ov21037961;
extern T0* ge1284ov21037964;
extern T0* ge1284ov21037965;
extern T0* ge1284ov21037973;
extern T0* ge1284ov21037980;
extern T0* ge1284ov21037981;
extern T0* ge1284ov21037987;
extern T0* ge1284ov21037992;
extern T0* ge1284ov21037993;
extern T0* ge1284ov21037996;
extern T0* ge1284ov21037997;
extern T0* ge1284ov21037998;
extern T0* ge1284ov21037999;
extern T0* ge1284ov21038001;
extern T0* ge1284ov21038007;
extern T0* ge1284ov21038009;
extern T0* ge1284ov21038020;
extern T0* ge1284ov21038021;
extern T0* ge1284ov21038022;
extern T0* ge1284ov21038024;
extern T0* ge1284ov21038027;
extern T0* ge1284ov21038028;
extern T0* ge1284ov21038030;
extern T0* ge1284ov21038032;
extern T0* ge1284ov21038034;
extern T0* ge499ov8175628;
extern T0* ge1526ov25002056;
extern T0* ge1514ov24806091;
extern T0* ge1514ov24805802;
extern T0* ge1514ov24805548;
extern T0* ge1514ov24805941;
extern T0* ge1514ov24805762;
extern T0* ge1514ov24805401;
extern T0* ge1514ov24805940;
extern T0* ge1514ov24805761;
extern T0* ge1514ov24805400;
extern T0* ge1514ov24806249;
extern T0* ge1514ov24805893;
extern T0* ge1514ov24805704;
extern T0* ge1514ov24806093;
extern T0* ge1514ov24805803;
extern T0* ge1514ov24805550;
extern T0* ge1514ov24806252;
extern T0* ge1514ov24805897;
extern T0* ge1514ov24805707;
extern T0* ge1514ov24806251;
extern T0* ge1514ov24805896;
extern T0* ge1514ov24805706;
extern T0* ge1514ov24806090;
extern T0* ge1514ov24805816;
extern T0* ge1514ov24805547;
extern T0* ge1514ov24806092;
extern T0* ge1514ov24805549;
extern T0* ge1514ov24806080;
extern T0* ge1514ov24805814;
extern T0* ge1514ov24805537;
extern T0* ge1514ov24806079;
extern T0* ge1514ov24805536;
extern T0* ge1514ov24806081;
extern T0* ge1514ov24805538;
extern T0* ge1514ov24806082;
extern T0* ge1514ov24805539;
extern T0* ge1514ov24806070;
extern T0* ge1514ov24805528;
extern T0* ge1514ov24806024;
extern T0* ge1514ov24805484;
extern T0* ge1514ov24806023;
extern T0* ge1514ov24805483;
extern T0* ge1514ov24806038;
extern T0* ge1514ov24805498;
extern T0* ge1514ov24806031;
extern T0* ge1514ov24805491;
extern T0* ge1514ov24806077;
extern T0* ge1514ov24805813;
extern T0* ge1514ov24805535;
extern T0* ge1514ov24806076;
extern T0* ge1514ov24805534;
extern T0* ge1514ov24806022;
extern T0* ge1514ov24805482;
extern T0* ge1514ov24806050;
extern T0* ge1514ov24805510;
extern T0* ge1514ov24806021;
extern T0* ge1514ov24805481;
extern T0* ge1514ov24806049;
extern T0* ge1514ov24805509;
extern T0* ge1514ov24806037;
extern T0* ge1514ov24805497;
extern T0* ge1514ov24806048;
extern T0* ge1514ov24805508;
extern T0* ge1514ov24806030;
extern T0* ge1514ov24805490;
extern T0* ge1514ov24806047;
extern T0* ge1514ov24805507;
extern T0* ge1514ov24806072;
extern T0* ge1514ov24805530;
extern T0* ge1514ov24806075;
extern T0* ge1514ov24805533;
extern T0* ge1514ov24806074;
extern T0* ge1514ov24805532;
extern T0* ge1514ov24806073;
extern T0* ge1514ov24805531;
extern T0* ge396ov6488074;
extern T0* ge1515ov24822063;
extern T0* ge1515ov24822070;
extern T0* ge1515ov24822164;
extern T0* ge1515ov24822099;
extern T0* ge1515ov24822131;
extern T0* ge1515ov24822184;
extern T0* ge1515ov24822256;
extern T0* ge1515ov24822100;
extern T0* ge1515ov24822146;
extern T0* ge1515ov24822284;
extern T0* ge1515ov24822097;
extern T0* ge1515ov24822066;
extern T0* ge1515ov24822241;
extern T0* ge1515ov24822350;
extern T0* ge1515ov24822302;
extern T0* ge1515ov24822303;
extern T0* ge1515ov24822298;
extern T0* ge1515ov24822285;
extern T0* ge1515ov24822286;
extern T0* ge1515ov24822287;
extern T0* ge1515ov24822290;
extern T0* ge1515ov24822291;
extern T0* ge1515ov24822292;
extern T0* ge1515ov24822293;
extern T0* ge1515ov24822294;
extern T0* ge1515ov24822295;
extern T0* ge1515ov24822296;
extern T0* ge1515ov24822297;
extern T0* ge1515ov24822299;
extern T0* ge1515ov24822300;
extern T0* ge1515ov24822301;
extern T0* ge1515ov24822288;
extern T0* ge1515ov24822019;
extern T0* ge1515ov24822098;
extern T0* ge1515ov24822067;
extern T0* ge1515ov24822072;
extern T0* ge1515ov24822147;
extern T0* ge1515ov24822135;
extern T0* ge1515ov24822196;
extern T0* ge1515ov24822331;
extern T0* ge1515ov24822136;
extern T0* ge1515ov24822195;
extern T0* ge1515ov24822167;
extern T0* ge1515ov24822166;
extern T0* ge1515ov24822173;
extern T0* ge1515ov24822172;
extern T0* ge414ov6307841;
extern T0* ge1515ov24821984;
extern T0* ge1515ov24822377;
extern T0* ge1515ov24822014;
extern T0* ge1515ov24822008;
extern T0* ge1515ov24822007;
extern T0* ge1515ov24822006;
extern T0* ge1515ov24822005;
extern T0* ge1515ov24821996;
extern T0* ge1515ov24821994;
extern T0* ge1515ov24821993;
extern T0* ge1515ov24821989;
extern T0* ge1515ov24822011;
extern T0* ge1515ov24822004;
extern T0* ge1515ov24821992;
extern T0* ge1515ov24822021;
extern T0* ge1512ov24772625;
extern T0* ge1512ov24772619;
extern T0* ge1512ov24772613;
extern T0* ge1512ov24772621;
extern T0* ge1512ov24772615;
extern T0* ge1512ov24772609;
extern T0* ge1512ov24772624;
extern T0* ge1512ov24772618;
extern T0* ge1512ov24772612;
extern T0* ge1512ov24772626;
extern T0* ge1512ov24772620;
extern T0* ge1512ov24772614;
extern T0* ge1512ov24772623;
extern T0* ge1512ov24772617;
extern T0* ge1512ov24772611;
extern T0* ge1514ov24806260;
extern T0* ge1514ov24805905;
extern T0* ge1514ov24805715;
extern T0* ge1514ov24806257;
extern T0* ge1514ov24805902;
extern T0* ge1514ov24805712;
extern T0* ge1514ov24806256;
extern T0* ge1514ov24805901;
extern T0* ge1514ov24805711;
extern T0* ge1512ov24772622;
extern T0* ge1512ov24772616;
extern T0* ge1512ov24772610;
extern T0* ge1513ov24789002;
extern T0* ge1513ov24788998;
extern T0* ge1513ov24788997;
extern T0* ge1513ov24789001;
extern T0* ge1513ov24788996;
extern T0* ge1513ov24789000;
extern T0* ge1513ov24788995;
extern T0* ge1513ov24788999;
extern T0* ge1513ov24788994;
extern T0* ge1679ov27508753;
extern T0* ge1687ov27639831;
extern T0* ge543ov8896516;
extern T0* ge1504ov24641548;
extern T0* ge1504ov24641543;
extern T0* ge1504ov24641538;
extern T0* ge1172ov19202099;
extern T0* ge1172ov19202100;
extern T0* ge858ov14057490;
extern T0* ge858ov14057531;
extern T0* ge849ov13910026;
extern T0* ge849ov13910027;
extern T0* ge849ov13910028;
extern T0* ge849ov13910037;
extern T0* ge805ov13189122;
extern T0* ge805ov13189129;
extern T0* ge805ov13189128;
extern T0* ge805ov13189123;
extern T0* ge805ov13189127;
extern T0* ge805ov13189124;
extern T0* ge805ov13189130;
extern T0* ge858ov14057482;
extern T0* ge858ov14057487;
extern T0* ge858ov14057514;
extern T0* ge858ov14057498;
extern T0* ge858ov14057494;
extern T0* ge858ov14057495;
extern T0* ge877ov14368854;
extern T0* ge877ov14368825;
extern T0* ge877ov14368791;
extern T0* ge877ov14368827;
extern T0* ge877ov14368848;
extern T0* ge877ov14368814;
extern T0* ge877ov14368838;
extern T0* ge871ov14270530;
extern T0* ge871ov14270495;
extern T0* ge871ov14270539;
extern T0* ge871ov14270504;
extern T0* ge871ov14270522;
extern T0* ge871ov14270487;
extern T0* ge880ov14417990;
extern T0* ge880ov14417989;
extern T0* ge877ov14368798;
extern T0* ge877ov14368799;
extern T0* ge877ov14368771;
extern T0* ge877ov14368778;
extern T0* ge877ov14368782;
extern T0* ge877ov14368800;
extern T0* ge877ov14368801;
extern T0* ge877ov14368802;
extern T0* ge877ov14368803;
extern T0* ge877ov14368804;
extern T0* ge877ov14368805;
extern T0* ge877ov14368806;
extern T0* ge877ov14368809;
extern T0* ge877ov14368830;
extern T0* ge877ov14368813;
extern T0* ge877ov14368817;
extern T0* ge877ov14368829;
extern T0* ge877ov14368833;
extern T0* ge877ov14368834;
extern T0* ge877ov14368835;
extern T0* ge877ov14368843;
extern T0* ge877ov14368844;
extern T0* ge877ov14368856;
extern T0* ge877ov14368857;
extern T0* ge877ov14368769;
extern T0* ge858ov14057492;
extern T0* ge849ov13910025;
extern T0* ge849ov13910036;
extern T0* ge849ov13910035;
extern T0* ge849ov13910063;
extern T0* ge849ov13910066;
extern T0* ge849ov13910065;
extern T0* ge849ov13910038;
extern T0* ge849ov13910054;
extern T0* ge849ov13910029;
extern T0* ge849ov13910023;
extern T0* ge805ov13189121;
extern T0* ge858ov14057481;
extern T0* ge858ov14057509;
extern T0* ge877ov14368816;
extern T0* ge877ov14368822;
extern T0* ge877ov14368841;
extern T0* ge877ov14368777;
extern T0* ge877ov14368837;
extern T0* ge877ov14368784;
extern T0* ge877ov14368788;
extern T0* ge877ov14368849;
extern T0* ge871ov14270528;
extern T0* ge871ov14270493;
extern T0* ge871ov14270525;
extern T0* ge871ov14270490;
extern T0* ge877ov14368855;
extern T0* ge858ov14057483;
extern T0* ge858ov14057521;
extern T0* ge858ov14057527;
extern T0* ge858ov14057522;
extern T0* ge877ov14368770;
extern T0* ge877ov14368779;
extern T0* ge877ov14368807;
extern T0* ge877ov14368815;
extern T0* ge877ov14368787;
extern T0* ge877ov14368780;
extern T0* ge877ov14368842;
extern T0* ge877ov14368858;
extern T0* ge877ov14368794;
extern T0* ge877ov14368836;
extern T0* ge877ov14368852;
extern T0* ge877ov14368781;
extern T0* ge877ov14368808;
extern T0* ge877ov14368828;
extern T0* ge877ov14368826;
extern T0* ge871ov14270523;
extern T0* ge871ov14270488;
extern T0* ge877ov14368786;
extern T0* ge877ov14368859;
extern T0* ge877ov14368789;
extern T0* ge877ov14368792;
extern T0* ge877ov14368793;
extern T0* ge877ov14368824;
extern T0* ge877ov14368832;
extern T0* ge877ov14368821;
extern T0* ge877ov14368819;
extern T0* ge877ov14368850;
extern T0* ge877ov14368785;
extern T0* ge877ov14368823;
extern T0* ge871ov14270512;
extern T0* ge871ov14270477;
extern T0* ge871ov14270511;
extern T0* ge871ov14270476;
extern T0* ge871ov14270510;
extern T0* ge871ov14270475;
extern T0* ge871ov14270509;
extern T0* ge871ov14270474;
extern T0* ge871ov14270508;
extern T0* ge871ov14270473;
extern T0* ge877ov14368797;
extern T0* ge871ov14270527;
extern T0* ge871ov14270492;
extern T0* ge871ov14270529;
extern T0* ge871ov14270494;
extern T0* ge877ov14368818;
extern T0* ge877ov14368783;
extern T0* ge877ov14368845;
extern T0* ge877ov14368861;
extern T0* ge877ov14368776;
extern T0* ge877ov14368790;
extern T0* ge877ov14368860;
extern T0* ge849ov13910039;
extern T0* ge849ov13910058;
extern T0* ge849ov13910062;
extern T0* ge849ov13910067;
extern T0* ge849ov13910068;
extern T0* ge849ov13910043;
extern T0* ge877ov14368795;
extern T0* ge849ov13910056;
extern T0* ge877ov14368831;
extern T0* ge877ov14368853;
extern T0* ge877ov14368811;
extern T0* ge877ov14368839;
extern T0* ge877ov14368810;
extern T0* ge877ov14368796;
extern T0* ge877ov14368812;
extern T0* ge877ov14368846;
extern T0* ge877ov14368851;
extern T0* ge877ov14368772;
extern T0* ge877ov14368773;
extern T0* ge877ov14368774;
extern T0* ge877ov14368775;
extern T0* ge849ov13910030;
extern T0* ge849ov13910061;
extern T0* ge849ov13910041;
extern T0* ge849ov13910024;
extern T0* ge849ov13910031;
extern T0* ge849ov13910033;
extern T0* ge849ov13910034;
extern T0* ge849ov13910017;
extern T0* ge849ov13910018;
extern T0* ge849ov13910019;
extern T0* ge849ov13910020;
extern T0* ge849ov13910021;
extern T0* ge849ov13910022;
extern T0* ge849ov13910040;
extern T0* ge849ov13910042;
extern T0* ge849ov13910044;
extern T0* ge849ov13910045;
extern T0* ge849ov13910046;
extern T0* ge849ov13910047;
extern T0* ge849ov13910048;
extern T0* ge849ov13910049;
extern T0* ge849ov13910050;
extern T0* ge849ov13910051;
extern T0* ge849ov13910052;
extern T0* ge849ov13910053;
extern T0* ge858ov14057473;
extern T0* ge858ov14057474;
extern T0* ge858ov14057475;
extern T0* ge858ov14057476;
extern T0* ge858ov14057477;
extern T0* ge858ov14057478;
extern T0* ge858ov14057479;
extern T0* ge858ov14057480;
extern T0* ge858ov14057517;
extern T0* ge858ov14057484;
extern T0* ge858ov14057485;
extern T0* ge858ov14057486;
extern T0* ge858ov14057491;
extern T0* ge858ov14057493;
extern T0* ge858ov14057496;
extern T0* ge858ov14057499;
extern T0* ge858ov14057518;
extern T0* ge858ov14057505;
extern T0* ge858ov14057506;
extern T0* ge858ov14057520;
extern T0* ge858ov14057508;
extern T0* ge858ov14057510;
extern T0* ge858ov14057511;
extern T0* ge858ov14057515;
extern T0* ge858ov14057516;
extern T0* ge871ov14270524;
extern T0* ge871ov14270489;
extern T0* ge871ov14270526;
extern T0* ge871ov14270491;
extern T0* ge871ov14270520;
extern T0* ge871ov14270485;
extern T0* ge805ov13189132;
extern T0* ge805ov13189125;
extern T0* ge805ov13189126;
extern T0* ge871ov14270514;
extern T0* ge871ov14270479;
extern T0* ge871ov14270513;
extern T0* ge871ov14270478;
extern T0* ge877ov14368847;
extern T0* ge877ov14368820;
extern T0* ge858ov14057534;
extern T0* ge858ov14057532;
extern T0* ge815ov13352965;
extern T0* ge815ov13352966;
extern T0* ge815ov13352967;
extern T0* ge858ov14057523;
extern T0* ge858ov14057535;
extern T0* ge871ov14270531;
extern T0* ge871ov14270496;
extern T0* ge871ov14270532;
extern T0* ge871ov14270497;
extern T0* ge871ov14270533;
extern T0* ge871ov14270498;
extern T0* ge871ov14270521;
extern T0* ge871ov14270486;
extern T0* ge871ov14270534;
extern T0* ge871ov14270499;
extern T0* ge871ov14270507;
extern T0* ge871ov14270472;
extern T0* ge871ov14270536;
extern T0* ge871ov14270501;
extern T0* ge871ov14270537;
extern T0* ge871ov14270502;
extern T0* ge871ov14270538;
extern T0* ge871ov14270503;
extern T0* ge871ov14270535;
extern T0* ge871ov14270500;
extern T0* ge877ov14368840;
extern T0* ge871ov14270506;
extern T0* ge871ov14270471;
extern T0* ge871ov14270515;
extern T0* ge871ov14270480;
extern T0* ge871ov14270516;
extern T0* ge871ov14270481;
extern T0* ge871ov14270519;
extern T0* ge871ov14270484;
extern T0* ge871ov14270518;
extern T0* ge871ov14270483;
extern T0* ge871ov14270517;
extern T0* ge871ov14270482;
extern T0* ge1783ov29212714;
extern T0* ge1783ov29212676;
extern T0* ge1783ov29212674;
extern T0* ge1783ov29212715;
extern T0* ge1783ov29212687;
extern T0* ge1783ov29212686;
extern T0* ge1783ov29212697;
extern T0* ge1783ov29212691;
extern T0* ge1783ov29212690;
extern T0* ge1783ov29212689;
extern T0* ge1783ov29212695;
extern T0* ge1783ov29212694;
extern T0* ge1783ov29212696;
extern T0* ge1783ov29212673;
extern T0* ge1783ov29212699;
extern T0* ge1783ov29212708;
extern T0* ge1786ov29261851;
extern T0* ge1786ov29261849;
extern T0* ge1786ov29261850;
extern T0* ge1783ov29212709;
extern T0* ge1783ov29212710;
extern T0* ge1783ov29212713;
extern T0* ge1783ov29212711;
extern T0* ge1783ov29212712;
extern T0* ge1750ov28672013;
extern T0* ge1750ov28672012;
extern T0* ge1783ov29212706;
extern T0* ge1779ov29147137;
extern T0* ge1779ov29147138;
extern T0* ge1783ov29212679;
extern T0* ge1781ov29179908;
extern T0* ge1781ov29179910;
extern T0* ge1781ov29179907;
extern T0* ge1781ov29179909;
extern T0* ge1783ov29212702;
extern T0* ge1794ov29392913;
extern T0* ge1794ov29392912;
extern T0* ge1783ov29212722;
extern T0* ge1783ov29212723;
extern T0* ge1783ov29212724;
extern T0* ge1783ov29212717;
extern T0* ge1783ov29212700;
extern T0* ge1783ov29212701;
extern T0* ge1783ov29212703;
extern T0* ge1783ov29212707;
extern T0* ge1790ov29327380;
extern T0* ge1790ov29327379;
extern T0* ge1838ov30113793;
extern T0* ge1567ov25673737;
extern T0* ge1567ov25673733;
extern T0* ge1567ov25673729;
extern T0* ge1567ov25673731;
extern T0* geic24821761;
extern T0* geic24821762;
extern T0* geic13205505;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const21(void);
extern void GE_init_const22(void);
extern void GE_init_const23(void);
extern void GE_init_const(void);

#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_TIME_H
#define GE_TIME_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void *) ((char *) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type *)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type *)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field(eif_array, "area", EIF_REFERENCE); \
		memcpy((type *)area, c_array, nelts * sizeof(type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference(EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2023, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif
#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_H
#include "ge_thread.h"
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GE_USE_THREADS

/*
 * Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
 */

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, set_terminated_func, attr)
#define eif_thr_wait(obj,get_terminated)
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) EIF_TRUE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_TRUE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 1
#define eif_thr_cond_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_TRUE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,set_terminated_func,attr) GE_thread_create_with_attr((current_obj),(void (*)(EIF_REFERENCE,EIF_INTEGER))(init_func),(void (*)(EIF_REFERENCE,EIF_BOOLEAN))(set_terminated_func),(EIF_THR_ATTR_TYPE*)(attr),0)
#define eif_thr_wait(obj,get_terminated) GE_thread_wait((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated))
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) GE_thread_wait_with_timeout((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_try_lock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() GE_condition_variable_create()
#define eif_thr_cond_broadcast(a_cond_ptr) GE_condition_variable_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr) GE_condition_variable_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr) GE_condition_variable_wait((a_cond_ptr),(a_mutex_ptr))
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) GE_condition_variable_wait_with_timeout((a_cond_ptr),(a_mutex_ptr),(a_timeout))
#define eif_thr_cond_destroy(a_cond_ptr) GE_condition_variable_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) GE_semaphore_create(a_count)
#define eif_thr_sem_wait(a_sem_pointer) GE_semaphore_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer) GE_semaphore_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) GE_semaphore_try_wait(a_sem_pointer)
#define eif_thr_sem_destroy(a_sem_pointer) GE_semaphore_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() GE_read_write_lock_create()
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer) GE_read_write_lock_read_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer) GE_read_write_lock_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer) GE_read_write_lock_write_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer) GE_read_write_lock_destroy(a_read_write_lock_pointer)

/* WEL */
#ifdef EIF_WINDOWS
#define eif_thr_create_wel_per_thread_data(a_size) GE_thread_create_wel_per_thread_data(a_size)
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile ISE's compiler."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_SIZE_H
#define EIF_SIZE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Basic sizes */
#define EIF_ALIGN	8	/* Alignment restrictions */
#define R64SIZ	8	/* Size of double */
#define I64SIZ	8	/* Size of integer 64 bits */
#define R32SIZ	4	/* Size of float */
#define REFSIZ	sizeof(char*)	/* Size of char* */
#define LNGSIZ	4	/* Size of long */
#define I16SIZ	2	/* Size of integer 16 bits */
#define CHRSIZ	1	/* Size of char */
#define PTRSIZ	sizeof(void*)	/* Size of a function pointer */

/* Macros used to access fields in the object */
#define REFACS(n) ((n)*REFSIZ)
#define CHRACS(n) ((n)*CHRSIZ)
#define I16ACS(n) ((n)*I16SIZ)
#define LNGACS(n) ((n)*LNGSIZ)
#define R32ACS(n) ((n)*R32SIZ)
#define I64ACS(n) ((n)*I64SIZ)
#define R64ACS(n) ((n)*R64SIZ)
#define PTRACS(n) ((n)*PTRSIZ)

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif
#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif
#ifndef EIF_SIZE_H
#include "eif_size.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_THREADS
#define EIF_GET_CONTEXT \
	GE_context* eif_globals = GE_current_context();
#else
#define EIF_GET_CONTEXT
#endif

#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
 * Raise an Eiffel exception.
 */
extern void eraise(const char* name, long code);

/*
 * Raise an Eiffel exception of the given code with no associated tag.
 */
extern void xraise(int code);

/*
 * Raise an "Operating system error" exception.
 */
extern void esys(void);

/*
 * As a special case, an I/O error is raised when a system call which is I/O bound fails.
 */
extern void eise_io(const char* tag);

/*
 * Raise a "No more memory" exception.
 */
extern void enomem(void);

/*
 * Raise EiffelCOM exception.
 */
extern void com_eraise(const char* tag, long num);

/*
 * Terminate execution with exit status `code',
 * without triggering an exception.
 */
extern void esdie(int code);

/*
 * Exception tag associated with `code'.
 * This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
 */
extern EIF_REFERENCE eename(long except);

/*
 * Is exception `ex' defined?
 * Used in EiffelCOM.
 */
extern char eedefined(long ex);

/*
 * Enable/diable printing of the exception trace.
 * Per thead information.
 */
extern void eetrace(char b);

/*
 * Is current execution during rescue?
 */
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void set_windows_exception_filter(void);
#endif

/*
 * Used in EiffelCOM.
 */
#define echval GE_current_context()->exception_code
#define echtg GE_current_context()->exception_tag

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_STRING_H
#include "ge_string.h"
#endif
#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef __LCC__
#		define rt_stat_buf	struct stat
#	elif defined EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen(EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date(EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date(EIF_FILENAME name);

/*
 * Generate a temporary file with a name based on a template and
 * return a file descriptor to the file.
 * The template is overwritten with the name of the new file.
 * Return a non-zero file descriptor for the temporary file upon success, -1 otherwise.
 * `template'is the template to use for creating the temporary file.
 * It must match the rules for mk[s]temp (i.e. end in "XXXXXX").
 * On exit, it is updated with the new name.
 * `is_text_mode', if non-zero, then the temporary file is created
 * in text mode, otherwise in binary mode.<param>
 * Note: Code was inspired from https://github.com/mirror/mingw-w64/blob/master/mingw-w64-crt/misc/mkstemp.c
 */
extern EIF_INTEGER eif_file_mkstemp(EIF_FILENAME a_template, EIF_BOOLEAN is_text_mode);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_REAL_H
#define GE_REAL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v) != (v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v) != (v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))
#define GE_real_32_is_equal(v1,v2) ((v1) == (v1) ? (v1) == (v2) : (v2) != (v2))
#define GE_real_64_is_equal(v1,v2) ((v1) == (v1) ? (v1) == (v2) : (v2) != (v2))
#define GE_real_32_is_less(v1,v2) ((v1) == (v1) ? (v1) < (v2) : (v2) == (v2))
#define GE_real_64_is_less(v1,v2) ((v1) == (v1) ? (v1) < (v2) : (v2) == (v2))
#define GE_real_32_ieee_is_equal(v1,v2) (v1) == (v2)
#define GE_real_64_ieee_is_equal(v1,v2) (v1) == (v2)
#define GE_real_32_ieee_is_greater(v1,v2) isgreater(v1,v2)
#define GE_real_64_ieee_is_greater(v1,v2) isgreater(v1,v2)
#define GE_real_32_ieee_is_greater_equal(v1,v2) isgreaterequal(v1,v2)
#define GE_real_64_ieee_is_greater_equal(v1,v2) isgreaterequal(v1,v2)
#define GE_real_32_ieee_is_less(v1,v2) isless(v1,v2)
#define GE_real_64_ieee_is_less(v1,v2) isless(v1,v2)
#define GE_real_32_ieee_is_less_equal(v1,v2) islessequal(v1,v2)
#define GE_real_64_ieee_is_less_equal(v1,v2) islessequal(v1,v2)
#define GE_real_32_ieee_maximum_number(v1,v2) fmaxf(v1,v2)
#define GE_real_64_ieee_maximum_number(v1,v2) fmax(v1,v2)
#define GE_real_32_ieee_minimum_number(v1,v2) fminf(v1,v2)
#define GE_real_64_ieee_minimum_number(v1,v2) fmin(v1,v2)

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open(EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next(EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind(EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close(EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable(EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current(EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir(EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_DLL_H
#define GE_DLL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)(name))

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_DLL_H
#include "ge_dll.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size(void);

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		""Part of ISE Eiffel runtime. Needed to compile class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2018-2020, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_SYSTEM_H
#define EIF_SYSTEM_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef EIF_WINDOWS
#include "Winbase.h"
#elif defined(EIF_VMS) || defined(EIF_MACOSX)
#include "sysctl.conf"
#else
#include <unistd.h>
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
