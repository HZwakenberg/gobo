#define GE_USE_THREADS

/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Class name mapping as defined in the FreeELKS library. */
#ifndef EIF_INTEGER
#define EIF_INTEGER EIF_INTEGER_32
#endif
#ifndef EIF_CHARACTER
#define EIF_CHARACTER EIF_CHARACTER_8
#endif
#ifndef EIF_REAL
#define EIF_REAL EIF_REAL_32
#endif
#ifndef EIF_DOUBLE
#define EIF_DOUBLE EIF_REAL_64
#endif
#ifndef GE_ms
#if EIF_CHARACTER == EIF_CHARACTER_8
#define GE_ms(s,c) GE_ms8((s),(c))
#else
#define GE_ms(s,c) GE_ms32((s),(c))
#endif
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#define GE_WINDOWS
#define WIN32_LEAN_AND_MEAN 1 /* Needed when using winsock2.h. */
#include <windows.h>
#endif

/* See https://sourceforge.net/p/predef/wiki/OperatingSystems/ */
#if (defined(macintosh) || defined(Macintosh))
#define EIF_MAC 1
#define EIF_MACOSX 1
#define GE_MACOS
#endif
#if (defined(__APPLE__) && defined(__MACH__))
/* Apparently ISE does not define EIF_MASOSX for Mac OS X >=10.4 (see EXECUTION_ENVIRONMENT.available_cpu_count) */
#define EIF_MAC 1
#define GE_MACOS
#endif

#if (defined(VMS) || defined(__VMS))
#define EIF_VMS 1
#endif

#if (defined(__VXWORKS__) || defined(__vxworks))
#define EIF_VXWORKS 1
#endif

#if defined(__OpenBSD__)
#define GE_OPENBSD
#endif

#define BYTEORDER 0x1234

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <stddef.h>

#define EIF_OS_WINNT 	1
#define EIF_OS_LINUX 	2
#define EIF_OS_DARWIN 	4
#define EIF_OS_VXWORKS	11
#define EIF_OS_VMS	12

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
#define EIF_OS EIF_OS_LINUX
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_WINNT
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_VMS
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_DARWIN
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_VXWORKS
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#ifndef _UINTPTR_T_DEFINED
#define _UINTPTR_T_DEFINED
#ifdef _WIN64
typedef unsigned __int64 uintptr_t;
#else
typedef unsigned int uintptr_t;
#endif
#endif
#endif

/* C type for underlying integer type identifying object's dynamic type. */
typedef uint16_t EIF_TYPE_INDEX;

/*
 * Abstraction representing an Eiffel type.
 * It is made of a compiler type-id,
 * and of some annotations (attached/detachable/separate/variant/frozen).
 */
typedef volatile struct {
	EIF_TYPE_INDEX volatile id;
	EIF_TYPE_INDEX volatile annotations;
} EIF_TYPE;

/*
 * Since EIF_TYPE and EIF_ENCODED_TYPE have the same size, the encoded version
 * is basically a memcpy version of the EIF_TYPE representation.
 * It is used to provide backward compatibility to most Eiffel and
 * C APIs manipulating types as an INTEGER.
 */
typedef int32_t EIF_ENCODED_TYPE;
typedef EIF_ENCODED_TYPE EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)

/* SCOOP */
#ifdef GE_USE_SCOOP
typedef struct GE_scoop_region_struct GE_scoop_region;
#endif

/* Basic Eiffel types */
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef volatile void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;

typedef volatile struct {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
#ifdef GE_USE_SCOOP
	GE_scoop_region* volatile region;
#endif
} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;

typedef volatile struct {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
#ifdef GE_USE_SCOOP
	GE_scoop_region* volatile region;
#endif
#ifdef GE_HAS_STRING_8_ONCE_PER_OBJECT
	void* volatile onces;
#endif
	EIF_REFERENCE volatile area;
	EIF_INTEGER volatile count;
} EIF_STRING_8;

typedef volatile struct {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
#ifdef GE_USE_SCOOP
	GE_scoop_region* volatile region;
#endif
#ifdef GE_HAS_STRING_32_ONCE_PER_OBJECT
	void* volatile onces;
#endif
	EIF_REFERENCE volatile area;
	EIF_INTEGER volatile count;
} EIF_STRING_32;

typedef volatile struct {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
#ifdef GE_USE_SCOOP
	GE_scoop_region* volatile region;
#endif
#ifdef GE_HAS_IMMUTABLE_STRING_8_ONCE_PER_OBJECT
	void* volatile onces;
#endif
	EIF_REFERENCE volatile area;
	EIF_INTEGER volatile count;
} EIF_IMMUTABLE_STRING_8;

typedef volatile struct {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
#ifdef GE_USE_SCOOP
	GE_scoop_region* volatile region;
#endif
#ifdef GE_HAS_IMMUTABLE_STRING_32_ONCE_PER_OBJECT
	void* volatile onces;
#endif
	EIF_REFERENCE volatile area;
	EIF_INTEGER volatile count;
} EIF_IMMUTABLE_STRING_32;

typedef volatile struct {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
#ifdef GE_USE_SCOOP
	GE_scoop_region* volatile region;
#endif
#ifdef GE_HAS_SPECIAL_ONCE_PER_OBJECT
	void* volatile onces;
#endif
	EIF_INTEGER volatile capacity;
	EIF_INTEGER volatile count;
} EIF_SPECIAL;

/* SCOOP */
typedef uint16_t EIF_SCP_PID; /* Processor ID */
#ifdef GE_USE_SCOOP
#define RTS_PID(o) (EIF_SCP_PID)(uintptr_t)(((EIF_REFERENCE)(o))->region)
#else
#define RTS_PID(o) (EIF_SCP_PID)0
#endif

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#ifdef __LCC__
/* lcc-win32 reports a constant overflow for -21474836478. */
#define GE_min_int32 (-GE_int32(2147483647)-GE_int32(1))
#else
#define GE_min_int32 GE_int32(-2147483648)
#endif
#define GE_max_int32 GE_int32(2147483647)
#if defined(__LCC__) || defined(__GNUC__) || defined(__MINGW32__)
/* lcc-win32 reports a constant overflow for -9223372036854775808. */
/* gcc and mingw-win64 warn that integer constant is so large that it is unsigned. */
#define GE_min_int64 (-GE_int64(9223372036854775807)-GE_int64(1))
#else
#define GE_min_int64 GE_int64(-9223372036854775808)
#endif
#if defined(__LCC__) && !defined(_WIN64)
/* lcc-win32 does not consider 64 bit constants as constants in case statement. */
#define GE_case_int64(x) ((int32_t)(x))
#define GE_case_nat64(x) ((uint32_t)(x))
#else
#define GE_case_int64(x) (x)
#define GE_case_nat64(x) (x)
#endif

#ifdef _WIN64
#define GE_IS_64_BITS EIF_TRUE
#else
#define GE_IS_64_BITS EIF_TEST(sizeof(void*)==8)
#endif

/* Posix threads */
#if !defined(EIF_WINDOWS)
#define GE_USE_POSIX_THREADS
#endif

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Gobo compiler version.
 * Starts with 6080 (looks like GOBO) followed by 5 digits.
 */
#define GE_compiler_version() 608000001

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define RTU64C(x) GE_nat64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
#define OVERHEAD sizeof(EIF_ANY)
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef intptr_t rt_int_ptr;
typedef uintptr_t rt_uint_ptr;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C types used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_THREAD_TYPES_H
#define GE_THREAD_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#define EIF_THREADS
#ifdef GE_USE_POSIX_THREADS
#define EIF_POSIX_THREADS
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef GE_USE_POSIX_THREADS
#include <pthread.h>
#include <semaphore.h>
#elif defined EIF_WINDOWS
#include <windows.h>
#include <process.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS

#define EIF_THR_TYPE            pthread_t
#define EIF_CS_TYPE				pthread_mutex_t
#define EIF_MUTEX_TYPE          pthread_mutex_t
#define EIF_COND_TYPE			pthread_cond_t
#define EIF_SEM_TYPE			sem_t
#define EIF_RWL_TYPE			pthread_rwlock_t

#elif defined EIF_WINDOWS

#define EIF_THR_TYPE            HANDLE
#define EIF_CS_TYPE				CRITICAL_SECTION
#define EIF_MUTEX_TYPE          CRITICAL_SECTION
#define EIF_SEM_TYPE            HANDLE

typedef volatile struct {
		/* Semaphore used to queue up threads waiting for the condition to become signaled. */
	EIF_SEM_TYPE* volatile semaphore;
		/* Serialize access to fields of Current. */
	EIF_CS_TYPE* volatile csection;
		/* Number of waiters. */
	unsigned long volatile num_waiting;
		/* Number of already awoken. */
	unsigned long volatile num_wake;
		/* Number of time we signaled/broadcasted for improving fairness.
		 * This ensures one thread won't steal wakeups from other threads in queue. */
	unsigned long volatile generation;
} EIF_COND_TYPE;

typedef volatile struct {
	EIF_MUTEX_TYPE* volatile m; /* Internal monitor lock. */
	int volatile rwlock; /* >0 = # readers, <0 = writer, 0 = none */
	EIF_COND_TYPE* volatile readers_ok; /* Start waiting readers. */
	unsigned int volatile waiting_writers; /* Number of waiting writers. */
	EIF_COND_TYPE* volatile writers_ok; /* Start a waiting writer. */
} EIF_RWL_TYPE;

#endif

typedef volatile struct {
	unsigned int volatile priority;
	unsigned int volatile stack_size;
} EIF_THR_ATTR_TYPE;

/* Struct for thread context. */
typedef volatile struct GE_thread_context_struct GE_thread_context;
struct GE_thread_context_struct {
	EIF_THR_TYPE volatile thread_id; /* Thread identifier for associated thread. */
	EIF_REFERENCE volatile current; /* Eiffel root object. */
	void (*volatile routine)(EIF_REFERENCE, EIF_INTEGER); /* Eiffel routine. */
	void (*volatile set_terminated)(EIF_REFERENCE, EIF_BOOLEAN); /* Eiffel routine to set {THREAD}.terminated. */
	unsigned int volatile initial_priority; /* Initial priority. */
	EIF_THR_TYPE volatile last_thread_id; /* Last thread created from current thread. */
	int volatile n_children; /* Number of direct thread children. */
	EIF_MUTEX_TYPE* volatile children_mutex; /* Mutex to wait for thread children. */
	EIF_COND_TYPE* volatile children_cond; /* Condition variable to wait for thread children. */
	GE_thread_context* volatile parent_context;	/* Context of parent thread, NULL if main thread. */
	int volatile thread_exiting; /* Has current thread already called GE_thread_exit? */
	int volatile is_alive; /* Is current thread still alive? */
	void* volatile wel_per_thread_data; /* WEL private data */
#ifdef GE_USE_SCOOP
	int volatile is_scoop_processor; /* Is current thread a SCOOP processor? */
#endif
};

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to implement once features"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_ONCE_H
#define GE_ONCE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Struct to keep track of the call status
 * and results of once features.
 */
typedef volatile struct {
	EIF_BOOLEAN* volatile boolean_value;
	EIF_REFERENCE* volatile boolean_exception;
	unsigned char* volatile boolean_status;
	uint32_t volatile boolean_count;
	EIF_CHARACTER_8* volatile character_8_value;
	EIF_REFERENCE* volatile character_8_exception;
	unsigned char* volatile character_8_status;
	uint32_t volatile character_8_count;
	EIF_CHARACTER_32* volatile character_32_value;
	EIF_REFERENCE* volatile character_32_exception;
	unsigned char* volatile character_32_status;
	uint32_t volatile character_32_count;
	EIF_INTEGER_8* volatile integer_8_value;
	EIF_REFERENCE* volatile integer_8_exception;
	unsigned char* volatile integer_8_status;
	uint32_t volatile integer_8_count;
	EIF_INTEGER_16* volatile integer_16_value;
	EIF_REFERENCE* volatile integer_16_exception;
	unsigned char* volatile integer_16_status;
	uint32_t volatile integer_16_count;
	EIF_INTEGER_32* volatile integer_32_value;
	EIF_REFERENCE* volatile integer_32_exception;
	unsigned char* volatile integer_32_status;
	uint32_t volatile integer_32_count;
	EIF_INTEGER_64* volatile integer_64_value;
	EIF_REFERENCE* volatile integer_64_exception;
	unsigned char* volatile integer_64_status;
	uint32_t volatile integer_64_count;
	EIF_NATURAL_8* volatile natural_8_value;
	EIF_REFERENCE* volatile natural_8_exception;
	unsigned char* volatile natural_8_status;
	uint32_t volatile natural_8_count;
	EIF_NATURAL_16* volatile natural_16_value;
	EIF_REFERENCE* volatile natural_16_exception;
	unsigned char* volatile natural_16_status;
	uint32_t volatile natural_16_count;
	EIF_NATURAL_32* volatile natural_32_value;
	EIF_REFERENCE* volatile natural_32_exception;
	unsigned char* volatile natural_32_status;
	uint32_t volatile natural_32_count;
	EIF_NATURAL_64* volatile natural_64_value;
	EIF_REFERENCE* volatile natural_64_exception;
	unsigned char* volatile natural_64_status;
	uint32_t volatile natural_64_count;
	EIF_POINTER* volatile pointer_value;
	EIF_REFERENCE* volatile pointer_exception;
	unsigned char* volatile pointer_status;
	uint32_t volatile pointer_count;
	EIF_REAL_32* volatile real_32_value;
	EIF_REFERENCE* volatile real_32_exception;
	unsigned char* volatile real_32_status;
	uint32_t volatile real_32_count;
	EIF_REAL_64* volatile real_64_value;
	EIF_REFERENCE* volatile real_64_exception;
	unsigned char* volatile real_64_status;
	uint32_t volatile real_64_count;
	EIF_REFERENCE* volatile reference_value;
	EIF_REFERENCE* volatile reference_exception;
	unsigned char* volatile reference_status;
	uint32_t volatile reference_count;
	EIF_REFERENCE* volatile procedure_exception;
	unsigned char* volatile procedure_status;
	uint32_t volatile procedure_count;
} GE_onces;

/*
 * Variable to keep track of the call status
 * and results of once-per-process features.
 */
extern GE_onces* GE_process_onces;

/*
 * Initialize `GE_process_onces'.
 */
extern void GE_init_onces(
	uint32_t a_boolean_count,
	uint32_t a_character_8_count,
	uint32_t a_character_32_count,
	uint32_t a_integer_8_count,
	uint32_t a_integer_16_count,
	uint32_t a_integer_32_count,
	uint32_t a_integer_64_count,
	uint32_t a_natural_8_count,
	uint32_t a_natural_16_count,
	uint32_t a_natural_32_count,
	uint32_t a_natural_64_count,
	uint32_t a_pointer_count,
	uint32_t a_real_32_count,
	uint32_t a_real_64_count,
	uint32_t a_reference_count,
	uint32_t a_procedure_count);

/*
 * Create a new 'GE_onces' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_onces* GE_new_onces(
	uint32_t a_boolean_count,
	uint32_t a_character_8_count,
	uint32_t a_character_32_count,
	uint32_t a_integer_8_count,
	uint32_t a_integer_16_count,
	uint32_t a_integer_32_count,
	uint32_t a_integer_64_count,
	uint32_t a_natural_8_count,
	uint32_t a_natural_16_count,
	uint32_t a_natural_32_count,
	uint32_t a_natural_64_count,
	uint32_t a_pointer_count,
	uint32_t a_real_32_count,
	uint32_t a_real_64_count,
	uint32_t a_reference_count,
	uint32_t a_procedure_count);

/*
 * Free memory allocated by `a_onces'.
 */
extern void GE_free_onces(GE_onces* a_onces);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_ONCE_H
#include "ge_once.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#endif

#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp(*(GE_jmp_buf*)&(x),1)
#define GE_longjmp(x,y) siglongjmp(*(GE_jmp_buf*)&(x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp(*(GE_jmp_buf*)&(x))
#define GE_longjmp(x,y) longjmp(*(GE_jmp_buf*)&(x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef volatile struct {
	char* volatile area;
	uint32_t volatile count;
	uint32_t volatile capacity;
} GE_exception_trace_buffer;

/*
 * Information about the feature being executed.
 */
typedef volatile struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef GE_USE_CURRENT_IN_EXCEPTION_TRACE
	void* volatile object; /* Current object */
#endif
	const char* volatile class_name;
	const char* volatile feature_name;
	GE_call* volatile caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef volatile struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* volatile previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef volatile struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* volatile call; /* Call stack */
	uint32_t volatile in_assertion; /* Is an assertion evaluated? */
	GE_rescue* volatile last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t volatile in_rescue; /* Number of rescue clauses currently being executed */
	uint32_t volatile in_qualified_call; /* Is the current call a qualified call? 1 means that it is a regular call, 2 means that it is a creation call. */
	EIF_REFERENCE volatile exception_manager; /* Exception manager */
	char volatile raising_exception; /* Is an exception currently being raised? */
	char volatile exception_trace_enabled; /* Should exception trace be displayed? */
	long volatile exception_code; /* Code of the exception currently being raised, 0 otherwise */
	const char* volatile exception_tag; /* Tag of the exception currently being raised, NULL otherwise */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
	int volatile signal_number; /* Number of last signal received */
	int volatile pre_ecma_mapping_status; /* Do we map old names to new name? (i.e. STRING to STRING_8, INTEGER to INTEGER_32, ...). */
#ifdef GE_USE_THREADS
	GE_thread_context* volatile thread; /* Thread context */
	GE_onces* volatile process_onces; /* Cache for status and results of onces-per-process */
	GE_onces* volatile thread_onces; /* Status and results of onces-per-thread */
#endif
#ifdef GE_USE_SCOOP
	GE_scoop_region* volatile region; /* SCOOP region whose processor is executing the current code */
	char volatile is_region_alive;
#endif
};
#define TC GE_context

/*
 * New execution context.
 */
extern GE_context* GE_new_context(int is_scoop_processor);

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context(void);

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Free memory allocated in `a_context' for exception handling.
 */
extern void GE_free_exception(GE_context* a_context);

/*
 * Pointer to function to create a new exception manager object
 * (of type ISE_EXCEPTION_MANAGER).
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(GE_context*, EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.last_exception.
 */
extern EIF_REFERENCE (*GE_last_exception)(GE_context*);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.once_raise.
 */
extern void (*GE_once_raise)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `a_code'.
 */
extern char* GE_exception_tag(long a_code);

/*
 * Append `a_string' to `a_trace'.
 * Resize area if needed.
 */
extern void GE_append_to_exception_trace_buffer(GE_exception_trace_buffer* a_trace, char* a_string);

/*
 * Wipe out `a_trace'.
 */
extern void GE_wipe_out_exception_trace_buffer(GE_exception_trace_buffer* a_trace);

/*
 * Raise an exception with code `a_code'.
 */
extern void GE_raise(long a_code);

/*
 * Raise an exception with code `a_code' and message `msg'.
 */
extern void GE_raise_with_message(long a_code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long a_code, EIF_POINTER a_meaning, EIF_POINTER a_message);

/*
 * Raise exception which was raised the first time a once routine
 * was executed when executing it again.
 */
extern void GE_raise_once_exception(GE_context* a_context, EIF_REFERENCE a_exception);

/*
 * Raise exception which was raised when an old expression was evaluated.
 */
extern int GE_raise_old_exception(GE_context* a_context, EIF_REFERENCE a_exception);

/*
 * Exception, if any, which was last raised in `a_context'.
 */
extern EIF_REFERENCE GE_last_exception_raised(GE_context* a_context);

/*
 * Jump to execute the rescue of the last routine with a rescue
 * in the call stack.
 */
extern void GE_jump_to_last_rescue(GE_context* a_context);

/*
 * Set `in_assertion' to 'not b'.
 * Return the opposite of previous value.
 */
extern EIF_BOOLEAN GE_check_assert(EIF_BOOLEAN b);

/*
 * Check whether the type id of `obj' is not in `type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if `obj' is Void.
 * `nb' is the number of ids in `type_ids' and is expected to be >0.
 * `type_ids' is sorted in increasing order.
 * Return `obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
extern EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, EIF_TYPE_INDEX type_ids[], int nb);

/*
 * Check whether `obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * If `i' is provided, then include it in the message displayed
 * in the console to make debugging easier when `obj' is Void.
 * Return `obj'.
 */
#define GE_void(obj) ((obj)?(obj):GE_check_void(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);
#ifdef GE_DEBUG
#define GE_void2(obj,i) ((obj)?(obj):GE_check_void2((obj),(i)))
extern EIF_REFERENCE GE_check_void2(EIF_REFERENCE obj, EIF_INTEGER i);
#else
#define GE_void2(obj,i) ((obj)?(obj):GE_check_void(obj))
#endif

/*
 * Check whether `ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return `ptr'.
 */
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

/* Make a qualified call to `call'. */
#define GE_qualified(ac, call) (((ac)->in_qualified_call = 1), (call))
/* Make an unqualified call to `call'. */
#define GE_unqualified(ac, call) (((ac)->in_qualified_call = 0), (call))
/* Make a creation call to `call'. */
#define GE_creation(ac, call) (((ac)->in_qualified_call = 2), (call))

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter(void);
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_THREAD_H
#define GE_THREAD_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS
#include <unistd.h>
#endif

#ifdef GE_USE_POSIX_THREADS
#	define EIF_TSD_VAL_TYPE        void*
#	define EIF_TSD_TYPE            pthread_key_t
#	define EIF_TSD_CREATE(key,msg) \
		if (pthread_key_create(&(key),NULL)) \
			GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (pthread_setspecific((key), (EIF_TSD_VAL_TYPE)(val))) \
			GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) (val = pthread_getspecific(key))
#	define EIF_TSD_GET(val_type,key,val,msg) \
		if (EIF_TSD_GET0(val_type,key,val) == (void*) 0) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) if (pthread_key_delete(key)) GE_raise_with_message(GE_EX_EXT, msg)
#elif defined EIF_WINDOWS
#	define EIF_TSD_VAL_TYPE        LPVOID
#	define EIF_TSD_TYPE            DWORD
#	define EIF_TSD_CREATE(key,msg) \
		if ((key=TlsAlloc())==TLS_OUT_OF_INDEXES) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (!TlsSetValue((key),(EIF_TSD_VAL_TYPE)(val))) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) \
		val=(val_type) TlsGetValue(key)
#	define EIF_TSD_GET(val_type,key,val,msg) \
		EIF_TSD_GET0(val_type,key,val); \
		if (GetLastError() != NO_ERROR) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) \
		if (!TlsFree(key)) GE_raise_with_message(GE_EX_EXT, msg)
#endif

/* Thread priority levels. */
#define EIF_MIN_THR_PRIORITY			0L
#define EIF_BELOW_NORMAL_THR_PRIORITY	100L
#define EIF_DEFAULT_THR_PRIORITY		127L
#define EIF_ABOVE_NORMAL_THR_PRIORITY	154L
#define EIF_MAX_THR_PRIORITY			255L

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
typedef volatile struct {
	EIF_POINTER* volatile boolean_mutex;
	EIF_POINTER* volatile character_8_mutex;
	EIF_POINTER* volatile character_32_mutex;
	EIF_POINTER* volatile integer_8_mutex;
	EIF_POINTER* volatile integer_16_mutex;
	EIF_POINTER* volatile integer_32_mutex;
	EIF_POINTER* volatile integer_64_mutex;
	EIF_POINTER* volatile natural_8_mutex;
	EIF_POINTER* volatile natural_16_mutex;
	EIF_POINTER* volatile natural_32_mutex;
	EIF_POINTER* volatile natural_64_mutex;
	EIF_POINTER* volatile pointer_mutex;
	EIF_POINTER* volatile real_32_mutex;
	EIF_POINTER* volatile real_64_mutex;
	EIF_POINTER* volatile reference_mutex;
	EIF_POINTER* volatile procedure_mutex;
} GE_once_mutexes;

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
extern GE_once_mutexes* GE_process_once_mutexes;

/*
 * Numbers of once-per-thread features.
 */
extern uint32_t GE_thread_onces_boolean_count;
extern uint32_t GE_thread_onces_character_8_count;
extern uint32_t GE_thread_onces_character_32_count;
extern uint32_t GE_thread_onces_integer_8_count;
extern uint32_t GE_thread_onces_integer_16_count;
extern uint32_t GE_thread_onces_integer_32_count;
extern uint32_t GE_thread_onces_integer_64_count;
extern uint32_t GE_thread_onces_natural_8_count;
extern uint32_t GE_thread_onces_natural_16_count;
extern uint32_t GE_thread_onces_natural_32_count;
extern uint32_t GE_thread_onces_natural_64_count;
extern uint32_t GE_thread_onces_pointer_count;
extern uint32_t GE_thread_onces_real_32_count;
extern uint32_t GE_thread_onces_real_64_count;
extern uint32_t GE_thread_onces_reference_count;
extern uint32_t GE_thread_onces_procedure_count;

/*
 * Create a new 'GE_once_mutexes' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_once_mutexes* GE_new_once_mutexes(
	uint32_t a_boolean_count,
	uint32_t a_character_8_count,
	uint32_t a_character_32_count,
	uint32_t a_integer_8_count,
	uint32_t a_integer_16_count,
	uint32_t a_integer_32_count,
	uint32_t a_integer_64_count,
	uint32_t a_natural_8_count,
	uint32_t a_natural_16_count,
	uint32_t a_natural_32_count,
	uint32_t a_natural_64_count,
	uint32_t a_pointer_count,
	uint32_t a_real_32_count,
	uint32_t a_real_64_count,
	uint32_t a_reference_count,
	uint32_t a_procedure_count);

/*
 * Keep track of the numbers of once-per-thread features.
 */
extern void GE_thread_onces_set_counts(
	uint32_t a_boolean_count,
	uint32_t a_character_8_count,
	uint32_t a_character_32_count,
	uint32_t a_integer_8_count,
	uint32_t a_integer_16_count,
	uint32_t a_integer_32_count,
	uint32_t a_integer_64_count,
	uint32_t a_natural_8_count,
	uint32_t a_natural_16_count,
	uint32_t a_natural_32_count,
	uint32_t a_natural_64_count,
	uint32_t a_pointer_count,
	uint32_t a_real_32_count,
	uint32_t a_real_64_count,
	uint32_t a_reference_count,
	uint32_t a_procedure_count);

/*
 * Initialize `process_onces' and `thread_onces' in `a_context'.
 */
extern void GE_thread_init_onces(GE_context* a_context);

/* Global mutex to protect creation of once-per-object data. */
extern EIF_POINTER GE_once_per_object_data_mutex;

/*
 * Initialize data to handle threads.
 * To be called at the beginning of the main function
 * on the main thread.
 */
extern void GE_init_thread(GE_context* a_context);

/*
 * Create a new thread with attributes `attr' and execute
 * Eiffel routine `routine' on object `current'.
 */
extern void GE_thread_create_with_attr(EIF_REFERENCE current, void (*routine)(EIF_REFERENCE, EIF_INTEGER), void (*set_terminated)(EIF_REFERENCE,EIF_BOOLEAN), EIF_THR_ATTR_TYPE* attr, int is_scoop_processor);

/*
 * Execution context of current thread.
 */
extern GE_context* GE_thread_current_context(void);

/*
 * Execution context of current thread.
 * Return Null in case of non-Eiffel threads.
 */
extern GE_context* GE_unprotected_thread_current_context(void);

/*
 * Thead ID of current thread.
 */
extern EIF_POINTER GE_thread_id(void);

/*
 * Thread ID of last thread created from current thread.
 */
extern EIF_POINTER GE_last_thread_created(void);

#ifdef EIF_WINDOWS
/*
 * Support for Windows GUI that requires that all GUI operations are performed in the same thread.
 * Allocate new structure of the given size `a_size', assign it to `wel_per_thread_data'.
 * Return newly allocated memory block. It will be freed automatically on thread termination.
 */
extern void* GE_thread_create_wel_per_thread_data(size_t a_size);
#endif

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated. The calling thread must be the
 * direct parent of the thread, or the function might loop indefinitely.
 */
extern void GE_thread_wait(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE));

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated, or reaching `a_timeout_ms'.
 * The calling thread must be the direct parent of the thread,
 * or the function might loop indefinitely.
 */
extern EIF_BOOLEAN GE_thread_wait_with_timeout(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE), EIF_NATURAL_64 a_timeout_ms);

/*
 * Yields execution to other threads.
 */
extern void GE_thread_yield(void);

/*
 * The calling thread waits for all other children threads to terminate.
 */
extern void GE_thread_join_all(void);

/*
 * Function called to terminate a thread launched by Eiffel with `GE_thread_create_with_attr'.
 * This function must be called from the thread itself (not the parent).
 */
extern void GE_thread_exit(void);

/*
 * Default thread priority level.
 */
extern EIF_INTEGER GE_thread_default_priority(void);

/*
 * Minimum thread priority level.
 */
extern EIF_INTEGER GE_thread_min_priority(void);

/*
 * Maximum thread priority level.
 */
extern EIF_INTEGER GE_thread_max_priority(void);

/*
 * Create a new mutex.
 */
extern EIF_POINTER GE_mutex_create(void);

/*
 * Lock mutex.
 */
extern void GE_mutex_lock(EIF_POINTER a_mutex);

/*
 * Try to lock mutex. Return True on success.
 */
extern EIF_BOOLEAN GE_mutex_try_lock(EIF_POINTER a_mutex);

/*
 * Unlock mutex.
 */
extern void GE_mutex_unlock(EIF_POINTER a_mutex);

/*
 * Destroy and free all resources used by mutex.
 */
extern void GE_mutex_destroy(EIF_POINTER a_mutex);

/*
 * Create a new semaphore allowing `a_count' threads
 * to go into a critical section.
 */
extern EIF_POINTER GE_semaphore_create(EIF_INTEGER a_count);

/*
 * Decrement semaphore count, waiting if necessary
 * until that becomes possible.
 */
extern void GE_semaphore_wait(EIF_POINTER a_semaphore);

/*
 * Has client been successful in decrementing semaphore
 * count without waiting?
 */
extern EIF_BOOLEAN GE_semaphore_try_wait(EIF_POINTER a_semaphore);

/*
 * Increment semaphore count.
 */
extern void GE_semaphore_post(EIF_POINTER a_semaphore);

/*
 * Destroy and free all resources used by semaphore.
 */
extern void GE_semaphore_destroy(EIF_POINTER a_semaphore);

/*
 * Create a new condition variable.
 */
extern EIF_POINTER GE_condition_variable_create(void);

/*
 * Unblock all threads blocked on condition variable.
 */
extern void GE_condition_variable_broadcast(EIF_POINTER a_condition_variable);

/*
 * Unblock one thread blocked on condition variable.
 */
extern void GE_condition_variable_signal(EIF_POINTER a_condition_variable);

/*
 * Block calling thread on condition variable.
 */
extern void GE_condition_variable_wait(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex);

/*
 * Block calling thread on condition variable for at most `a_timeout' milliseconds.
 * Return 1 is we got the condition variable on time, otherwise return 0.
 */
extern EIF_INTEGER GE_condition_variable_wait_with_timeout(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex, EIF_INTEGER a_timeout);

/*
 * Destroy and free all resources used by condition variable.
 */
extern void GE_condition_variable_destroy(EIF_POINTER a_condition_variable);

/*
 * Create a new read-write lock.
 */
extern EIF_POINTER GE_read_write_lock_create(void);

/*
 * Acquire a read lock. Multiple readers can go if there are no writer.
 */
extern void GE_read_write_lock_read_lock(EIF_POINTER a_read_write_lock);

/*
 * Acquire a write lock. Only a single write can proceed.
 */
extern void GE_read_write_lock_write_lock(EIF_POINTER a_read_write_lock);

/*
 * Unlock a read or write lock.
 */
extern void GE_read_write_lock_unlock(EIF_POINTER a_read_write_lock);

/*
 * Destroy and free all resources used by read-write lock.
 */
extern void GE_read_write_lock_destroy(EIF_POINTER a_read_write_lock);

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <string.h>
#ifdef EIF_WINDOWS
#ifdef __LCC__
/* With lcc-win32, stat.h should be included before wchar.h. */
#include <sys/stat.h>
#endif
#include <wchar.h>
#else
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/* Macro used to manipulate native strings, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen _wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */
#define GE_nstr_cat_ascii(dest, src) {							\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR)src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR)0;			\
	}

#else /* not EIF_WINDOWS */

/* Macro used to manipulate native strings, i.e: (char*) */
#define GE_nstrlen strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */
#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement type information"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_TYPES_H
#define GE_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Type annotations.
 * When a type has no annotation, it means a detachable, non-separate, variant type.
 * In all other cases, there will be an annotation.
 */
#define ANNOTATION_MASK			0x007F	/* All possible annotations. */
#define ATTACHED_FLAG			0x0001
#define DETACHABLE_FLAG			0x0002	/* Only present when overriding an attached type. */
#define SEPARATE_FLAG			0x0004
#define VARIANT_FLAG			0x0008	/* Only present when overriding a frozen/poly type. */
#define UNUSABLE_FLAG			0x0010	/* Reserved for backward compatibility for storables. */
#define FROZEN_FLAG				0x0020
#define POLY_FLAG				0x0040

/*
 * Type flags.
 */
#define GE_TYPE_FLAG_SPECIAL		0x0010
#define GE_TYPE_FLAG_TUPLE			0x0020
#define GE_TYPE_FLAG_EXPANDED		0x0040
#define GE_TYPE_FLAG_DEFERRED		0x0080
#define GE_TYPE_FLAG_NONE			0x0100
#define GE_TYPE_FLAG_BASIC_MASK		0x000F /* One of "BOOLEAN", "CHARACTER_8", "CHARACTER_32", "INTEGER_8", "INTEGER_16", "INTEGER_32", "INTEGER_64", "NATURAL_8", "NATURAL_16", "NATURAL_32", "NATURAL_64", "POINTER", "REAL_32", "REAL_64" */
#define GE_TYPE_FLAG_BOOLEAN		0x0001
#define GE_TYPE_FLAG_CHARACTER_8	0x0002
#define GE_TYPE_FLAG_CHARACTER_32	0x0003
#define GE_TYPE_FLAG_INTEGER_8		0x0004
#define GE_TYPE_FLAG_INTEGER_16		0x0005
#define GE_TYPE_FLAG_INTEGER_32		0x0006
#define GE_TYPE_FLAG_INTEGER_64		0x0007
#define GE_TYPE_FLAG_NATURAL_8		0x0008
#define GE_TYPE_FLAG_NATURAL_16		0x0009
#define GE_TYPE_FLAG_NATURAL_32		0x000A
#define GE_TYPE_FLAG_NATURAL_64		0x000B
#define GE_TYPE_FLAG_POINTER		0x000C
#define GE_TYPE_FLAG_REAL_32		0x000D
#define GE_TYPE_FLAG_REAL_64		0x000E

/*
 * Convention for attribute types.
 * The values are in sync with REFLECTOR_CONSTANTS.
 */
#define GE_TYPE_KIND_INVALID		-1
#define GE_TYPE_KIND_POINTER		0
#define GE_TYPE_KIND_REFERENCE		1
#define GE_TYPE_KIND_CHARACTER_8	2
#define GE_TYPE_KIND_BOOLEAN		3
#define GE_TYPE_KIND_INTEGER_32		4
#define GE_TYPE_KIND_REAL_32		5
#define GE_TYPE_KIND_REAL_64		6
#define GE_TYPE_KIND_EXPANDED		7
#define GE_TYPE_KIND_INTEGER_8		9
#define GE_TYPE_KIND_INTEGER_16		10
#define GE_TYPE_KIND_INTEGER_64 	11
#define GE_TYPE_KIND_CHARACTER_32	12
#define GE_TYPE_KIND_NATURAL_8		13
#define GE_TYPE_KIND_NATURAL_16		14
#define GE_TYPE_KIND_NATURAL_32 	15
#define GE_TYPE_KIND_NATURAL_64 	16

/*
 * Object flags.
 */
#define GE_OBJECT_FLAG_MARKED		0x0001

/*
 * Ancestor relationship between two types X and Y.
 */
#ifdef GE_USE_ANCESTORS
typedef volatile struct {
	EIF_TYPE_INDEX volatile type_id; /* Type id of Y */
	EIF_BOOLEAN volatile conforms; /* Does X conform to Y? */
	void (**volatile qualified_calls)(); /* Function pointers, indexed by call id, when the static type of the target is Y and the dynamic type is X */
} GE_ancestor;
#endif

/*
 * Attribute.
 */
#ifdef GE_USE_ATTRIBUTES
typedef volatile struct {
#ifdef GE_USE_ATTRIBUTE_NAME
	const char* volatile name; /* Attribute name */
#endif
#ifdef GE_USE_ATTRIBUTE_TYPE_ID
	EIF_ENCODED_TYPE volatile type_id; /* Static type id */
#endif
#ifdef GE_USE_ATTRIBUTE_OFFSET
	uint32_t volatile offset; /* Address offset in object */
#endif
} GE_attribute;
#endif

/*
 * Type information.
 */
typedef volatile struct {
	EIF_TYPE_INDEX volatile type_id;
	uint16_t volatile flags;
#ifdef GE_USE_TYPE_GENERATOR
	const char* volatile generator; /* Generator class name */
#endif
#ifdef GE_USE_TYPE_NAME
	const char* volatile name; /* Full type name */
#endif
#ifdef GE_USE_TYPE_GENERIC_PARAMETERS
	EIF_ENCODED_TYPE* volatile generic_parameters;
	uint32_t volatile generic_parameter_count;
#endif
#ifdef GE_USE_ANCESTORS
	GE_ancestor** volatile ancestors;
	uint32_t volatile ancestor_count;
#endif
#ifdef GE_USE_ATTRIBUTES
	GE_attribute** volatile attributes;
	uint32_t volatile attribute_count;
#endif
#ifdef GE_USE_TYPE_OBJECT_SIZE
	uint64_t volatile object_size;
#endif
	EIF_REFERENCE (*new_instance)();
	void (*volatile dispose)(GE_context*, EIF_REFERENCE);
} GE_type_info;

typedef volatile struct {
	EIF_TYPE_INDEX volatile id; /* Type id of the "TYPE [X]" object */
	uint16_t volatile flags; 
#ifdef GE_USE_SCOOP
	GE_scoop_region* volatile region;
#endif
	EIF_INTEGER volatile type_id; /* Type id of the type "X" */
	EIF_BOOLEAN volatile is_special;
	void (*volatile dispose)(GE_context*, EIF_REFERENCE);
	EIF_REFERENCE volatile a1; /* internal_name */
	EIF_REFERENCE volatile a2; /* internal_name_32 */
} EIF_TYPE_OBJ;

/*
 * Types indexed by type id.
 * Generated by the compiler.
 */
extern EIF_TYPE_OBJ GE_types[][2];
extern GE_type_info GE_type_infos[];

/*
 * Number of type infos in `GE_type_infos'.
 * Do not take into account the fake item at index 0.
 */
extern int GE_type_info_count;

/*
 * Encode a EIF_TYPE into a EIF_ENCODED_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_ENCODED_TYPE GE_encoded_type(EIF_TYPE a_type);

/*
 * Decode a EIF_ENCODED_TYPE into a EIF_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_TYPE GE_decoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Type with `a_id' and `a_annotations'.
 */
extern EIF_TYPE GE_new_type(EIF_TYPE_INDEX a_id, EIF_TYPE_INDEX a_annotations);

/*
 * Type of object `obj'.
 */
#define GE_object_type(obj)	GE_new_type(((EIF_REFERENCE)(obj))->id, 0x0)
#define GE_object_encoded_type(obj) GE_encoded_type(GE_object_type(obj))

/*
 * Attachment status of `a_type'.
 */
#define GE_is_attached_type(a_type) EIF_TEST(((a_type).annotations & ATTACHED_FLAG) || GE_is_expanded_type_index((a_type).id))
#define GE_is_attached_encoded_type(a_type) GE_is_attached_type(GE_decoded_type(a_type))

/*
 * Associated detachable type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_non_attached_type(EIF_TYPE a_type);
#define GE_non_attached_encoded_type(a_type) GE_encoded_type(GE_non_attached_type(GE_decoded_type(a_type)))

/*
 * Associated attached type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_attached_type(EIF_TYPE a_type);
#define GE_attached_encoded_type(t) GE_encoded_type(GE_attached_type(GE_decoded_type(t)))

/*
 * Is `a_type' a SPECIAL type?
 */
#define GE_is_special_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_SPECIAL)
#define GE_is_special_encoded_type(a_type) GE_is_special_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_object(obj) GE_is_special_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of user-defined expanded type?
 */
extern EIF_BOOLEAN GE_is_special_of_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_expanded_encoded_type(a_type) GE_is_special_of_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_expanded_object(obj) GE_is_special_of_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type?
 */
extern EIF_BOOLEAN GE_is_special_of_reference_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_encoded_type(a_type) GE_is_special_of_reference_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_object(obj) GE_is_special_of_reference_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type or basic expanded type?
 * (Note that user-defined expanded types are excluded.)
 */
extern EIF_BOOLEAN GE_is_special_of_reference_or_basic_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_or_basic_expanded_encoded_type(a_type) GE_is_special_of_reference_or_basic_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_or_basic_expanded_object(obj) GE_is_special_of_reference_or_basic_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a TUPLE type?
 */
#define GE_is_tuple_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_TUPLE)
#define GE_is_tuple_encoded_type(a_type) GE_is_tuple_type_index(GE_decoded_type(a_type).id)
#define GE_is_tuple_object(obj) GE_is_tuple_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' an expanded type?
 */
#define GE_is_expanded_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_EXPANDED)
#define GE_is_expanded_encoded_type(a_type) GE_is_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_expanded_object(obj) GE_is_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a type whose base class is deferred?
 */
#define GE_is_deferred_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_DEFERRED)
#define GE_is_deferred_encoded_type(a_type) GE_is_deferred_type_index(GE_decoded_type(a_type).id)

/*
 * Does `i'-th field of `a_object + a_physical_offset' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_copy_semantics_field(EIF_INTEGER i, EIF_POINTER a_object, EIF_INTEGER a_physical_offset);

/*
 * Does `i'-th item of special `a_object' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_special_copy_semantics_item(EIF_INTEGER i, EIF_POINTER a_object);

/*
 * Generator class name of `a_type'.
 */
extern EIF_REFERENCE GE_generator_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_of_encoded_type(a_type) GE_generator_of_type_index(GE_decoded_type(a_type).id)
extern EIF_REFERENCE GE_generator_8_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_8_of_encoded_type(a_type) GE_generator_8_of_type_index(GE_decoded_type(a_type).id)

/*
 * Full name of `a_type'.
 */
extern EIF_REFERENCE GE_generating_type_of_encoded_type(EIF_ENCODED_TYPE a_type);
extern EIF_REFERENCE GE_generating_type_8_of_encoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Encoded type whose name is `a_name'.
 * -1 if no such type.
 */
extern EIF_ENCODED_TYPE GE_encoded_type_from_name(EIF_POINTER a_name);

/*
 * Does `a_type_1' conform to `a_type_2'?
 */
extern EIF_BOOLEAN GE_encoded_type_conforms_to(EIF_ENCODED_TYPE a_type_1, EIF_ENCODED_TYPE a_type_2);

/*
 * Number of generic parameters.
 */
extern EIF_INTEGER GE_generic_parameter_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generic_parameter_count_of_encoded_type(a_type) GE_generic_parameter_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Type of `i'-th generic parameter of `a_type'.
 */
extern EIF_INTEGER GE_generic_parameter_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER i);
#define GE_generic_parameter_of_encoded_type(a_type,i) GE_generic_parameter_of_type_index(GE_decoded_type(a_type).id, (i))

/*
 * Number of fields of an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_field_count_of_encoded_type(a_type) GE_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Physical offset of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_offset_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_offset_of_encoded_type(i, a_type) GE_field_offset_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Name of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_POINTER GE_field_name_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_name_of_encoded_type(i, a_type) GE_field_name_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Static type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_static_type_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_static_type_of_encoded_type(i, a_type) GE_field_static_type_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Kind of type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_type_kind_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_type_kind_of_encoded_type(i, a_type) GE_field_type_kind_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Physical size of `a_object'.
 */
extern EIF_NATURAL_64 GE_object_size(EIF_POINTER a_object);

/*
 * Is `i'-th field of objects of type `a_type' a user-defined expanded attribute?
 */
extern EIF_BOOLEAN GE_is_field_expanded_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_is_field_expanded_of_encoded_type(i, a_type) GE_is_field_expanded_of_type_index((i), GE_decoded_type(a_type).id)

#define GE_field_address_at(a_field_offset, a_object, a_physical_offset) ((char*)(a_object) + (a_physical_offset) + (a_field_offset))
#define GE_object_at_offset(a_enclosing, a_physical_offset) (EIF_REFERENCE)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_raw_object_at_offset(a_enclosing, a_physical_offset) (EIF_POINTER)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_object_encoded_type_at_offset(a_enclosing, a_physical_offset) GE_object_encoded_type(GE_raw_object_at_offset((a_enclosing), (a_physical_offset)))
#define GE_boolean_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_pointer_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_raw_reference_field_at(a_field_offset, a_object, a_physical_offset) (EIF_POINTER)*(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_reference_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_set_boolean_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_boolean_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_pointer_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_pointer_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_reference_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_reference_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value

#if defined(GE_USE_ATTRIBUTES) && defined(GE_USE_ATTRIBUTE_OFFSET)
#define GE_field_address(i, a_object, a_physical_offset) GE_field_address_at(GE_type_infos[((EIF_REFERENCE)(a_object))->id].attributes[(i) - 1]->offset, (a_object), (a_physical_offset))
#define GE_boolean_field(i, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_8_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_32_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_8_field(i, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_16_field(i, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_32_field(i, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_64_field(i, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_8_field(i, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_16_field(i, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_32_field(i, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_64_field(i, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_pointer_field(i, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_32_field(i, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_64_field(i, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_reference_field(i, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value) GE_boolean_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value) GE_character_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value) GE_character_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value) GE_integer_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value) GE_integer_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value) GE_integer_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value) GE_integer_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value) GE_natural_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value) GE_natural_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value) GE_natural_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value) GE_natural_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value) GE_pointer_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value) GE_real_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value) GE_real_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value) GE_reference_field((i), (a_object), (a_physical_offset)) = (a_value)
#else
#define GE_boolean_field(i, a_object, a_physical_offset) (EIF_BOOLEAN)0
#define GE_character_8_field(i, a_object, a_physical_offset) (EIF_CHARACTER_8)0
#define GE_character_32_field(i, a_object, a_physical_offset) (EIF_CHARACTER_32)0
#define GE_integer_8_field(i, a_object, a_physical_offset) (EIF_INTEGER_8)0
#define GE_integer_16_field(i, a_object, a_physical_offset) (EIF_INTEGER_16)0
#define GE_integer_32_field(i, a_object, a_physical_offset) (EIF_INTEGER_32)0
#define GE_integer_64_field(i, a_object, a_physical_offset) (EIF_INTEGER_64)0
#define GE_natural_8_field(i, a_object, a_physical_offset) (EIF_NATURAL_8)0
#define GE_natural_16_field(i, a_object, a_physical_offset) (EIF_NATURAL_16)0
#define GE_natural_32_field(i, a_object, a_physical_offset) (EIF_NATURAL_32)0
#define GE_natural_64_field(i, a_object, a_physical_offset) (EIF_NATURAL_64)0
#define GE_pointer_field(i, a_object, a_physical_offset) (EIF_POINTER)0
#define GE_real_32_field(i, a_object, a_physical_offset) (EIF_REAL_32)0
#define GE_real_64_field(i, a_object, a_physical_offset) (EIF_REAL_64)0
#define GE_reference_field(i, a_object, a_physical_offset) (EIF_REFERENCE)0
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value)
#endif

/*
 * Number of non-transient fields of an object of dynamic type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_persistent_field_count_of_type_index(a_type) GE_field_count_of_type_index(a_type)
#define GE_persistent_field_count_of_encoded_type(a_type) GE_persistent_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Is `i'-th field of objects of type `a_type' a transient field?
 * TODO: storable not implemented yet.
 */
#define GE_is_field_transient_of_type_index(i, a_type) EIF_FALSE
#define GE_is_field_transient_of_encoded_type(i, a_type) GE_is_field_transient_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Storable version of objects of type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_storable_version_of_type_index(a_type) EIF_VOID
#define GE_storable_version_of_encoded_type(a_type) GE_storable_version_of_type_index(GE_decoded_type(a_type).id)

/*
 * Get a lock on `GE_mark_object' and `GE_unmark_object' routines so that
 * 2 threads cannot `GE_mark_object' and `GE_unmark_object' at the same time.
 */
extern void GE_lock_marking(void);

/*
 * Release a lock on `GE_mark_object' and `GE_unmark_object', so that another
 * thread can use `GE_mark_object' and `GE_unmark_object'.
 */
extern void GE_unlock_marking(void);

/*
 * Is `obj' marked?
 */
extern EIF_BOOLEAN GE_is_object_marked(EIF_POINTER obj);

/*
 * Mark `obj'.
 */
extern void GE_mark_object(EIF_POINTER obj);

/*
 * Unmark `obj'.
 */
extern void GE_unmark_object(EIF_POINTER obj);

/*
 * New instance of dynamic `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 * `a_type' cannot represent a SPECIAL type, use
 * `GE_new_special_of_reference_instance_of_type_index' instead.
 */
extern EIF_REFERENCE GE_new_instance_of_type_index(GE_context* a_context, EIF_TYPE_INDEX a_type);
#define GE_new_instance_of_encoded_type(a_context, a_type) GE_new_instance_of_type_index((a_context), GE_decoded_type(a_type).id)

/*
 * New instance of dynamic `a_type' that represents
 * a SPECIAL with can contain `a_capacity' elements of reference type.
 * To create a SPECIAL of basic type, use class SPECIAL directly.
 */
extern EIF_REFERENCE GE_new_special_of_reference_instance_of_type_index(GE_context* a_context, EIF_TYPE_INDEX a_type, EIF_INTEGER a_capacity);
#define GE_new_special_of_reference_instance_of_encoded_type(a_context, a_type, a_capacity) GE_new_special_of_reference_instance_of_type_index((a_context), GE_decoded_type(a_type).id, (a_capacity))

/*
 * New instance of tuple of type `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 */
#define GE_new_tuple_instance_of_type_index(a_context, a_type) GE_new_instance_of_type_index((a_context), (a_type))
#define GE_new_tuple_instance_of_encoded_type(a_context, a_type) GE_new_tuple_instance_of_type_index((a_context), GE_decoded_type(a_type).id)

/*
 * New instance of TYPE for object of type `a_type'.
 */
extern EIF_REFERENCE GE_new_type_instance_of_encoded_type(GE_context* a_context, EIF_ENCODED_TYPE a_type);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_STRING_H
#define GE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * New Eiffel empty string of type "STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str32(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr32(EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ms8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_str8(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_8" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ims8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ms32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' 32-bit characters built from `s' by reading
 * groups of four bytes with little-endian byte order.
 */
extern EIF_REFERENCE GE_ms32_from_utf32le(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_str32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing
 * the first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ims32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `c' 32-bit characters built from `s' by reading
 * groups of four bytes with little-endian byte order.
 */
extern EIF_REFERENCE GE_ms32_from_utf32le(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_istr32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `n' native characters found in native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_ims32_from_nstr(EIF_NATIVE_CHAR* s, EIF_INTEGER n);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_istr32_from_nstr(EIF_NATIVE_CHAR* s);

/*
 * New Eiffel string of type "STRING" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'
 */
extern EIF_REFERENCE GE_str(const char* s);

/*
 * Base address of `o' of type "SPECIAL [CHARACTER_8].
 * The base address is the addresss of the first character in `o'.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_POINTER GE_sp8_base_address(EIF_REFERENCE o);

/*
 * Base address of `o' of type "SPECIAL [CHARACTER_832.
 * The base address is the addresss of the first character in `o'.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_POINTER GE_sp32_base_address(EIF_REFERENCE o);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize mutex to determine whether a new
 * console needs to be created.
 */
#ifdef EIF_WINDOWS
extern void GE_init_console(void);
#else
#define GE_init_console()
#endif

/*
 * Create a new DOS console if needed (i.e. in case of a Windows application).
 */
#ifdef EIF_WINDOWS
extern void GE_show_console(void);
#else
#define GE_show_console()
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_GC_H
#define GE_GC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef GE_USE_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */

/* 
 * In the case of multithreaded code, gc.h should be included after the threads header file, 
 * and after defining the appropriate GC_XXXX_THREADS macro. (For 6.2alpha4 and later, 
 * simply defining GC_THREADS should suffice.) The header file gc.h must be included in files 
 * that use either GC or threads primitives, since threads primitives will be redefined to 
 * cooperate with the GC on many platforms. 
 * See: https://hboehm.info/gc/gcinterface.html
*/
#ifdef GE_USE_POSIX_THREADS
#include <pthread.h>
#include <semaphore.h>
#elif defined EIF_WINDOWS
#include <windows.h>
#include <process.h>
#endif

#define GC_IGNORE_WARN
#define GC_NOT_DLL
#define GC_THREADS
#define PARALLEL_MARK
#define THREAD_LOCAL_ALLOC
#define GC_ENABLE_SUSPEND_THREAD
#define LARGE_CONFIG
#define ALL_INTERIOR_POINTERS
#define ENABLE_DISCLAIM
#define GC_ATOMIC_UNCOLLECTABLE
#define GC_GCJ_SUPPORT
#define JAVA_FINALIZATION
#define NO_EXECUTE_PERMISSION
#define USE_MMAP
#define USE_MUNMAP

#if defined(GE_WINDOWS)
#	undef GC_NO_THREAD_DECLS
#	undef GC_NO_THREAD_REDIRECTS
#	define EMPTY_GETENV_RESULTS
#	define DONT_USE_USER32_DLL
#else
#	if !defined(GE_MACOS)
#		define GC_PTHREAD_START_STANDALONE
#	endif
#	ifndef _REENTRANT
#		define _REENTRANT
#	endif
#	define HANDLE_FORK
#endif

#if defined(__clang__) || defined(__GNUC__) || defined(__MINGW32__) || defined(__MINGW64__)
#	define GC_BUILTIN_ATOMIC
#endif

#if defined(__clang__)
#	define HAVE_DL_ITERATE_PHDR
#	define GC_REQUIRE_WCSDUP
#	define HAVE_DLADDR
#	define HAVE_SYS_TYPES_H
#	define HAVE_UNISTD_H
#	if defined(GE_MACOS)
#		define HAVE_PTHREAD_SETNAME_NP_WITHOUT_TID
#	elif !defined(GE_WINDOWS)
#		if defined(GE_OPENBSD)
#			define HAVE_PTHREAD_SET_NAME_NP
#		else
#			define HAVE_PTHREAD_SETNAME_NP_WITH_TID
#		endif
#		define HAVE_PTHREAD_SIGMASK
#		define NO_GETCONTEXT
#	endif
#endif

#include "gc.h"
#else
#include <stdlib.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * GC initialization.
 */

#if !defined(GE_USE_BOEHM_GC)
#define GE_init_gc() /* do nothing */
#elif defined(GE_WINDOWS) || (defined(GE_MACOS) && !defined(__aarch64__)) || !defined(__clang__)
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads(); \
	GC_enable_incremental()
#else
/*
 * No incremental GC under Macos arm64 and Linux when compiled wtih zig/clang,
 * because otherwise the program does not behave as expected.
 */
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads()
#endif

/*
 * Memory allocation.
 */

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc(size) GC_MALLOC(size)
#else /* No GC */
#define GE_unprotected_malloc(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc(size) GE_null(GE_unprotected_malloc(size))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic(size) GC_MALLOC_ATOMIC(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic(size) GE_unprotected_malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_atomic(size) GE_null(GE_unprotected_malloc_atomic(size))

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc(nelem, elsize) GC_MALLOC((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc(nelem, elsize) GE_null(GE_unprotected_calloc((nelem), (elsize)))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic(nelem, elsize) GE_calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_uncollectable(size) GC_MALLOC_UNCOLLECTABLE(size)
#else /* No GC */
#define GE_unprotected_malloc_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_uncollectable(size) GE_null(GE_unprotected_malloc_uncollectable(size))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic_uncollectable(size) GC_malloc_atomic_uncollectable(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_atomic_uncollectable(size) GE_null(GE_unprotected_malloc_atomic_uncollectable(size))
/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc_uncollectable(nelem, elsize) GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GE_unprotected_calloc_uncollectable((nelem), (elsize)))


/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
extern void* GE_unprotected_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_unprotected_calloc_atomic_uncollectable(nelem, elsize) GE_unprotected_calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(GE_unprotected_calloc_atomic_uncollectable((nelem), (elsize)))

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_realloc(p, size) GC_REALLOC((void*)(p), (size))
#else /* No GC */
#define GE_unprotected_realloc(p, size) realloc((void*)(p), (size))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Raise an exception when no-more-memory.
 */
#define GE_realloc(p, size) GE_null(GE_unprotected_realloc((p), (size)))

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_unprotected_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Raise an exception when no-more-memory.
 */
#define GE_recalloc(p, old_nelem, new_nelem, elsize) GE_null(GE_unprotected_recalloc((void*)(p), (old_nelem), (new_nelem), (elsize)))

/*
 * Explicitly deallocate an object.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_free(p) GC_FREE((void*)(p))
#else /* No GC */
#define GE_free(p) free((void*)(p))
#endif

/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, (void*)(disp), NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif

/*
 * Register dispose routine `disp' to be called on once-per-object `data' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose_once_per_object_data(void* data, void* disp); /* Call dispose routine `disp' on once-per-object data `data'. */
#define GE_register_dispose_once_per_object_data(data, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(data), (void (*) (void*, void*)) &GE_boehm_dispose_once_per_object_data, (void*)(disp), NULL, NULL)
#else /* No GC */
#define GE_register_dispose_once_per_object_data(data, disp) /* do nothing */
#endif

/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector. */
#define eif_access(obj) (obj)
/* Freeze memory address. */
#define eif_freeze(obj) (obj)
/* The C side adopts an object. */
#define eif_adopt(obj) (obj)
/* The C side protects an object. */
#define eif_protect(obj) (obj)
/* The C side weans adopted object. */
extern EIF_REFERENCE eif_wean(EIF_OBJECT object);
/* Forget a frozen memory address. */
#define eif_unfreeze(obj)
/* Always frozen since they do not move. */
#define eif_frozen(obj) 1
/* Always frozen since they do not move. */
#define spfrozen(obj) 1

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to handle signals"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_SIGNAL_H
#define GE_SIGNAL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Set signal handlers.
 * To be called at the beginning of the main thread.
 */
extern void GE_init_signal(void);

/* Initialize `GE_ignored_signals_mutex'. */
extern void GE_init_ignored_signals_mutex(void);

/* Description of sinal `a_sig'. */
extern char *GE_signal_name(EIF_INTEGER a_sig);

/* Is signal `a_sig' defined? */
extern char GE_is_signal_defined(EIF_INTEGER a_sig);

/* C signal code for signal of index `idx'. */
extern EIF_INTEGER GE_signal_map(EIF_INTEGER idx);

/*
 * Catch signal `a_sig'.
 * Check that the signal is defined.
 */
extern void GE_catch_signal(EIF_INTEGER a_sig);

/* 
 * Ignore signal `a_sig'.
 * Check that the signal is defined.
 */
extern void GE_ignore_signal(EIF_INTEGER a_sig);

/*
 * Is signal of number `a_sig' caught?
 * Check that the signal is defined.
 */
extern char GE_is_signal_caught(EIF_INTEGER a_sig);

/* Reset all the signals to their default handling. */
extern void GE_reset_all_signals(void);

/* Reset signal `a_sig' to its default handling. */
extern void GE_reset_signal_to_default(EIF_INTEGER a_sig);

/* Number of last signal. */
extern EIF_INTEGER GE_signal_number();

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize data to keep track of object ids.
 */
extern void GE_init_identified(void);

/*
 * Get a new id for `object', assuming it is NOT in the stack.
 */
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
 * Return the object associated with `id'.
 */
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
 * Remove the object associated with `id' from the stack.
 */
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(TC* ac, T1 a1);
extern T0* GE_boxed_pointer1(TC* ac, volatile T1* a1);
typedef volatile struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(TC* ac, T2 a1);
extern T0* GE_boxed_pointer2(TC* ac, volatile T2* a1);
typedef volatile struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(TC* ac, T3 a1);
extern T0* GE_boxed_pointer3(TC* ac, volatile T3* a1);
typedef volatile struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(TC* ac, T4 a1);
extern T0* GE_boxed_pointer4(TC* ac, volatile T4* a1);
typedef volatile struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(TC* ac, T5 a1);
extern T0* GE_boxed_pointer5(TC* ac, volatile T5* a1);
typedef volatile struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(TC* ac, T6 a1);
extern T0* GE_boxed_pointer6(TC* ac, volatile T6* a1);
typedef volatile struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(TC* ac, T7 a1);
extern T0* GE_boxed_pointer7(TC* ac, volatile T7* a1);
typedef volatile struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(TC* ac, T8 a1);
extern T0* GE_boxed_pointer8(TC* ac, volatile T8* a1);
typedef volatile struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(TC* ac, T9 a1);
extern T0* GE_boxed_pointer9(TC* ac, volatile T9* a1);
typedef volatile struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(TC* ac, T10 a1);
extern T0* GE_boxed_pointer10(TC* ac, volatile T10* a1);
typedef volatile struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(TC* ac, T11 a1);
extern T0* GE_boxed_pointer11(TC* ac, volatile T11* a1);
typedef volatile struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(TC* ac, T12 a1);
extern T0* GE_boxed_pointer12(TC* ac, volatile T12* a1);
typedef volatile struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(TC* ac, T13 a1);
extern T0* GE_boxed_pointer13(TC* ac, volatile T13* a1);
typedef volatile struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(TC* ac, T14 a1);
extern T0* GE_boxed_pointer14(TC* ac, volatile T14* a1);
typedef volatile struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef volatile struct S15 T15;

/* SPECIAL [CHARACTER_32] */
typedef volatile struct S16 T16;

/* STRING_8 */
typedef volatile struct S17 T17;

/* STRING_32 */
typedef volatile struct S18 T18;

/* IMMUTABLE_STRING_32 */
typedef volatile struct S20 T20;

/* ISE_EXCEPTION_MANAGER */
typedef volatile struct S21 T21;

/* GEC */
typedef volatile struct S26 T26;

/* CELL [detachable EXCEPTION] */
typedef volatile struct S27 T27;

/* HASH_TABLE [INTEGER_32, INTEGER_32] */
typedef volatile struct S28 T28;

/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
typedef volatile struct S29 T29;

/* CELL [NO_MORE_MEMORY] */
typedef volatile struct S30 T30;

/* C_STRING */
typedef volatile struct S31 T31;

/* TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
typedef volatile struct S32 T32;

/* KL_ARGUMENTS */
typedef volatile struct S33 T33;

/* ARRAY [STRING_8] */
typedef volatile struct S34 T34;

/* SPECIAL [STRING_8] */
typedef volatile struct S35 T35;

/* KL_EXCEPTIONS */
typedef volatile struct S36 T36;

/* EXCEPTIONS */
typedef volatile struct S37 T37;

/* KL_STANDARD_FILES */
typedef volatile struct S38 T38;

/* KL_STDERR_FILE */
typedef volatile struct S39 T39;

/* UTF_CONVERTER */
typedef volatile struct S40 T40;
extern T0* GE_boxed40(TC* ac, T40 a1);
extern T0* GE_boxed_pointer40(TC* ac, T40* a1);
typedef volatile struct Sb40 Tb40;

/* ET_ERROR_HANDLER */
typedef volatile struct S42 T42;

/* KL_TEXT_INPUT_FILE */
typedef volatile struct S43 T43;

/* UT_GOBO_VARIABLES */
typedef volatile struct S44 T44;

/* UT_ISE_VARIABLES */
typedef volatile struct S45 T45;

/* AP_FLAG */
typedef volatile struct S46 T46;

/* KL_EXECUTION_ENVIRONMENT */
typedef volatile struct S49 T49;

/* ET_SYSTEM */
typedef volatile struct S50 T50;

/* AP_PARSER */
typedef volatile struct S52 T52;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef volatile struct S53 T53;

/* AP_STRING_OPTION */
typedef volatile struct S54 T54;

/* UT_VERSION */
typedef volatile struct S56 T56;

/* AP_ENUMERATION_OPTION */
typedef volatile struct S57 T57;

/* AP_BOOLEAN_OPTION */
typedef volatile struct S58 T58;

/* AP_INTEGER_OPTION */
typedef volatile struct S59 T59;

/* ET_NULL_ERROR_HANDLER */
typedef volatile struct S63 T63;

/* ET_AST_FACTORY */
typedef volatile struct S65 T65;

/* ET_SYSTEM_PROCESSOR */
typedef volatile struct S66 T66;

/* ET_CLUSTER */
typedef volatile struct S67 T67;

/* ET_EIFFEL_PARSER */
typedef volatile struct S68 T68;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef volatile struct S69 T69;

/* ET_CLASS */
typedef volatile struct S70 T70;

/* TUPLE [ET_CLASS] */
typedef volatile struct S74 T74;

/* PROCEDURE [TUPLE [ET_CLASS]] */
typedef volatile struct S75 T75;

/* TUPLE */
typedef volatile struct S76 T76;

/* TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
typedef volatile struct S77 T77;

/* PREDICATE [TUPLE [ET_CLASS]] */
typedef volatile struct S78 T78;

/* ET_CREATOR_LIST */
typedef volatile struct S80 T80;

/* ET_TOKEN_CONSTANTS */
typedef volatile struct S81 T81;

/* ET_CREATOR */
typedef volatile struct S82 T82;

/* UT_CANNOT_READ_FILE_ERROR */
typedef volatile struct S83 T83;

/* ET_ECF_SYSTEM_PARSER */
typedef volatile struct S85 T85;

/* ET_ECF_ERROR_HANDLER */
typedef volatile struct S86 T86;

/* ET_ECF_SYSTEM */
typedef volatile struct S87 T87;

/* ET_ECF_TARGET */
typedef volatile struct S88 T88;

/* ET_ECF_CLUSTER */
typedef volatile struct S89 T89;

/* ET_ECF_SETTINGS */
typedef volatile struct S90 T90;

/* ET_ECF_CAPABILITIES */
typedef volatile struct S91 T91;

/* ET_ECF_VARIABLES */
typedef volatile struct S92 T92;

/* ET_CLUSTERS */
typedef volatile struct S94 T94;

/* ET_DYNAMIC_SYSTEM */
typedef volatile struct S95 T95;

/* DT_DATE_TIME */
typedef volatile struct S97 T97;

/* DS_HASH_SET [STRING_8] */
typedef volatile struct S99 T99;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef volatile struct S100 T100;

/* ET_CLASS_TYPE */
typedef volatile struct S102 T102;

/* UT_VERSION_NUMBER */
typedef volatile struct S103 T103;

/* EXECUTION_ENVIRONMENT */
typedef volatile struct S105 T105;

/* UT_MESSAGE */
typedef volatile struct S106 T106;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef volatile struct S107 T107;

/* KL_STRING_ROUTINES */
typedef volatile struct S108 T108;

/* ST_SPLITTER */
typedef volatile struct S109 T109;

/* AP_ERROR */
typedef volatile struct S113 T113;

/* ET_C_GENERATOR */
typedef volatile struct S114 T114;

/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S116 T116;

/* KL_SHELL_COMMAND */
typedef volatile struct S117 T117;

/* GECC */
typedef volatile struct S118 T118;

/* KL_OPERATING_SYSTEM */
typedef volatile struct S119 T119;

/* VOID_TARGET */
typedef volatile struct S120 T120;

/* TYPE [VOID_TARGET] */
#define T121 EIF_TYPE_OBJ

/* ROUTINE_FAILURE */
typedef volatile struct S122 T122;

/* TYPE [ROUTINE_FAILURE] */
#define T123 EIF_TYPE_OBJ

/* OLD_VIOLATION */
typedef volatile struct S124 T124;

/* TYPE [OLD_VIOLATION] */
#define T125 EIF_TYPE_OBJ

/* NO_MORE_MEMORY */
typedef volatile struct S126 T126;

/* INVARIANT_VIOLATION */
typedef volatile struct S127 T127;

/* OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef volatile struct S128 T128;

/* IO_FAILURE */
typedef volatile struct S129 T129;

/* OPERATING_SYSTEM_FAILURE */
typedef volatile struct S130 T130;

/* COM_FAILURE */
typedef volatile struct S131 T131;

/* EIFFEL_RUNTIME_PANIC */
typedef volatile struct S132 T132;

/* PRECONDITION_VIOLATION */
typedef volatile struct S134 T134;

/* POSTCONDITION_VIOLATION */
typedef volatile struct S135 T135;

/* FLOATING_POINT_FAILURE */
typedef volatile struct S136 T136;

/* CHECK_VIOLATION */
typedef volatile struct S137 T137;

/* BAD_INSPECT_VALUE */
typedef volatile struct S138 T138;

/* VARIANT_VIOLATION */
typedef volatile struct S139 T139;

/* LOOP_INVARIANT_VIOLATION */
typedef volatile struct S140 T140;

/* RESCUE_FAILURE */
typedef volatile struct S141 T141;

/* RESUMPTION_FAILURE */
typedef volatile struct S142 T142;

/* CREATE_ON_DEFERRED */
typedef volatile struct S143 T143;

/* EXTERNAL_FAILURE */
typedef volatile struct S144 T144;

/* VOID_ASSIGNED_TO_EXPANDED */
typedef volatile struct S145 T145;

/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef volatile struct S146 T146;

/* MISMATCH_FAILURE */
typedef volatile struct S147 T147;

/* DEVELOPER_EXCEPTION */
typedef volatile struct S148 T148;

/* ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef volatile struct S149 T149;

/* SERIALIZATION_FAILURE */
typedef volatile struct S150 T150;

/* KL_WINDOWS_FILE_SYSTEM */
typedef volatile struct S151 T151;

/* KL_UNIX_FILE_SYSTEM */
typedef volatile struct S152 T152;

/* PRIMES */
typedef volatile struct S153 T153;

/* SPECIAL [INTEGER_32] */
typedef volatile struct S154 T154;

/* SPECIAL [BOOLEAN] */
typedef volatile struct S155 T155;

/* ARGUMENTS_32 */
typedef volatile struct S156 T156;

/* MUTEX */
typedef volatile struct S159 T159;

/* UT_ERROR_HANDLER */
typedef volatile struct S160 T160;

/* KL_STDOUT_FILE */
typedef volatile struct S161 T161;

/* MANAGED_POINTER */
typedef volatile struct S162 T162;

/* KL_LINKABLE [CHARACTER_8] */
typedef volatile struct S164 T164;

/* FILE_INFO */
typedef volatile struct S166 T166;

/* KL_DIRECTORY */
typedef volatile struct S167 T167;

/* UC_UTF8_ROUTINES */
typedef volatile struct S168 T168;

/* DS_ARRAYED_LIST [STRING_8] */
typedef volatile struct S170 T170;

/* TUPLE [ET_UNIVERSE] */
typedef volatile struct S171 T171;

/* PROCEDURE [TUPLE [ET_UNIVERSE]] */
typedef volatile struct S172 T172;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
typedef volatile struct S173 T173;

/* ET_ADAPTED_LIBRARIES */
typedef volatile struct S174 T174;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef volatile struct S175 T175;

/* ET_IMPLICIT_TYPE_MARK */
typedef volatile struct S177 T177;

/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef volatile struct S178 T178;

/* ET_CLASS_NAME_TESTER */
typedef volatile struct S179 T179;

/* ET_PARENT */
typedef volatile struct S181 T181;

/* ET_PARENT_LIST */
typedef volatile struct S182 T182;

/* ET_CLIENT_LIST */
typedef volatile struct S183 T183;

/* ET_TUPLE_TYPE */
typedef volatile struct S184 T184;

/* ET_ACTUAL_PARAMETER_LIST */
typedef volatile struct S186 T186;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef volatile struct S187 T187;

/* DS_HASH_SET [ET_UNIVERSE] */
typedef volatile struct S188 T188;

/* ET_MASTER_CLASS */
typedef volatile struct S189 T189;

/* ET_CLIENT */
typedef volatile struct S190 T190;

/* ET_KEYWORD */
typedef volatile struct S192 T192;

/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
typedef volatile struct S193 T193;

/* ET_RENAME_LIST */
typedef volatile struct S194 T194;

/* ET_EXPORT_LIST */
typedef volatile struct S195 T195;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef volatile struct S196 T196;

/* ET_NONE_GROUP */
typedef volatile struct S199 T199;

/* ET_LIKE_CURRENT */
typedef volatile struct S200 T200;

/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef volatile struct S202 T202;

/* ET_LIBRARY */
typedef volatile struct S204 T204;

/* TUPLE [ET_LIBRARY] */
typedef volatile struct S205 T205;

/* PROCEDURE [TUPLE [ET_LIBRARY]] */
typedef volatile struct S206 T206;

/* TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
typedef volatile struct S207 T207;

/* ET_DOTNET_ASSEMBLY */
typedef volatile struct S208 T208;

/* TUPLE [ET_DOTNET_ASSEMBLY] */
typedef volatile struct S209 T209;

/* PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef volatile struct S210 T210;

/* ST_WORD_WRAPPER */
typedef volatile struct S211 T211;

/* AP_DISPLAY_HELP_FLAG */
typedef volatile struct S213 T213;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef volatile struct S214 T214;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef volatile struct S215 T215;

/* AP_ERROR_HANDLER */
typedef volatile struct S216 T216;

/* DS_LINKABLE [AP_OPTION] */
typedef volatile struct S217 T217;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef volatile struct S218 T218;

/* DS_ARRAYED_LIST [detachable STRING_8] */
typedef volatile struct S219 T219;

/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
typedef volatile struct S220 T220;

/* DS_LINKED_LIST [STRING_8] */
typedef volatile struct S221 T221;

/* KL_STRING_EQUALITY_TESTER */
typedef volatile struct S222 T222;

/* KL_EQUALITY_TESTER [STRING_8] */
typedef volatile struct S223 T223;

/* DS_LINKED_LIST [BOOLEAN] */
typedef volatile struct S226 T226;

/* DS_LINKED_LIST [INTEGER_32] */
typedef volatile struct S229 T229;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef volatile struct S230 T230;

/* ET_EIFFEL_PREPARSER */
typedef volatile struct S232 T232;

/* ET_MASTER_CLASS_CHECKER */
typedef volatile struct S233 T233;

/* ET_PROVIDER_CHECKER */
typedef volatile struct S234 T234;

/* ET_ANCESTOR_BUILDER */
typedef volatile struct S235 T235;

/* ET_FEATURE_FLATTENER */
typedef volatile struct S236 T236;

/* ET_INTERFACE_CHECKER */
typedef volatile struct S237 T237;

/* ET_IMPLEMENTATION_CHECKER */
typedef volatile struct S238 T238;

/* ET_AST_NULL_PROCESSOR */
typedef volatile struct S239 T239;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef volatile struct S240 T240;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef volatile struct S242 T242;

/* YY_UNICODE_FILE_BUFFER */
typedef volatile struct S244 T244;

/* KL_STDIN_FILE */
typedef volatile struct S245 T245;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef volatile struct S246 T246;

/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef volatile struct S247 T247;

/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef volatile struct S248 T248;

/* DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef volatile struct S249 T249;

/* DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef volatile struct S250 T250;

/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef volatile struct S251 T251;

/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
typedef volatile struct S252 T252;

/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
typedef volatile struct S253 T253;

/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
typedef volatile struct S254 T254;

/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef volatile struct S255 T255;

/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef volatile struct S256 T256;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef volatile struct S257 T257;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef volatile struct S258 T258;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef volatile struct S259 T259;

/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef volatile struct S260 T260;

/* DS_HASH_SET [ET_NAMED_CLASS] */
typedef volatile struct S261 T261;

/* YY_BUFFER */
typedef volatile struct S262 T262;

/* ET_UNKNOWN_GROUP */
typedef volatile struct S263 T263;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef volatile struct S264 T264;

/* KL_UNICODE_CHARACTER_BUFFER */
typedef volatile struct S266 T266;

/* ET_CLIENTS */
typedef volatile struct S268 T268;

/* ET_FEATURE_CLAUSE */
typedef volatile struct S269 T269;

/* KL_SPECIAL_ROUTINES [detachable ANY] */
typedef volatile struct S272 T272;

/* SPECIAL [detachable ANY] */
typedef volatile struct S273 T273;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef volatile struct S274 T274;

/* SPECIAL [detachable ET_KEYWORD] */
typedef volatile struct S275 T275;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef volatile struct S276 T276;

/* ET_AGENT_KEYWORD */
typedef volatile struct S277 T277;

/* SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef volatile struct S278 T278;

/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANT_KEYWORD] */
typedef volatile struct S279 T279;

/* ET_INVARIANT_KEYWORD */
typedef volatile struct S280 T280;

/* SPECIAL [detachable ET_INVARIANT_KEYWORD] */
typedef volatile struct S281 T281;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef volatile struct S282 T282;

/* ET_PRECURSOR_KEYWORD */
typedef volatile struct S283 T283;

/* SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef volatile struct S284 T284;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef volatile struct S285 T285;

/* ET_SYMBOL */
typedef volatile struct S286 T286;

/* SPECIAL [detachable ET_SYMBOL] */
typedef volatile struct S287 T287;

/* KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef volatile struct S288 T288;

/* SPECIAL [detachable ET_POSITION] */
typedef volatile struct S290 T290;

/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef volatile struct S291 T291;

/* SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef volatile struct S293 T293;

/* KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef volatile struct S294 T294;

/* SPECIAL [detachable ET_BREAK] */
typedef volatile struct S296 T296;

/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef volatile struct S297 T297;

/* SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef volatile struct S299 T299;

/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef volatile struct S300 T300;

/* ET_CURRENT */
typedef volatile struct S301 T301;

/* SPECIAL [detachable ET_CURRENT] */
typedef volatile struct S302 T302;

/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef volatile struct S303 T303;

/* ET_FREE_OPERATOR */
typedef volatile struct S304 T304;

/* SPECIAL [detachable ET_FREE_OPERATOR] */
typedef volatile struct S305 T305;

/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
typedef volatile struct S306 T306;

/* ET_IDENTIFIER */
typedef volatile struct S307 T307;

/* SPECIAL [detachable ET_IDENTIFIER] */
typedef volatile struct S308 T308;

/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef volatile struct S309 T309;

/* SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef volatile struct S311 T311;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef volatile struct S312 T312;

/* ET_KEYWORD_OPERATOR */
typedef volatile struct S313 T313;

/* SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef volatile struct S314 T314;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef volatile struct S315 T315;

/* SPECIAL [detachable ET_MANIFEST_STRING] */
typedef volatile struct S317 T317;

/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef volatile struct S318 T318;

/* SPECIAL [detachable ET_REAL_CONSTANT] */
typedef volatile struct S320 T320;

/* KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef volatile struct S321 T321;

/* ET_RESULT */
typedef volatile struct S322 T322;

/* SPECIAL [detachable ET_RESULT] */
typedef volatile struct S323 T323;

/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef volatile struct S324 T324;

/* ET_RETRY_INSTRUCTION */
typedef volatile struct S325 T325;

/* SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef volatile struct S326 T326;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef volatile struct S327 T327;

/* ET_SYMBOL_OPERATOR */
typedef volatile struct S328 T328;

/* SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef volatile struct S329 T329;

/* KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef volatile struct S330 T330;

/* ET_VOID */
typedef volatile struct S331 T331;

/* SPECIAL [detachable ET_VOID] */
typedef volatile struct S332 T332;

/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef volatile struct S333 T333;

/* ET_SEMICOLON_SYMBOL */
typedef volatile struct S334 T334;

/* SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef volatile struct S335 T335;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef volatile struct S336 T336;

/* ET_BRACKET_SYMBOL */
typedef volatile struct S337 T337;

/* SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef volatile struct S338 T338;

/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef volatile struct S339 T339;

/* ET_QUESTION_MARK_SYMBOL */
typedef volatile struct S340 T340;

/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef volatile struct S341 T341;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef volatile struct S342 T342;

/* ET_ACROSS_EXPRESSION */
typedef volatile struct S343 T343;

/* SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef volatile struct S344 T344;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef volatile struct S345 T345;

/* ET_ACROSS_INSTRUCTION */
typedef volatile struct S346 T346;

/* SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef volatile struct S347 T347;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef volatile struct S348 T348;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef volatile struct S349 T349;

/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef volatile struct S350 T350;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef volatile struct S351 T351;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef volatile struct S352 T352;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef volatile struct S353 T353;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef volatile struct S354 T354;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef volatile struct S355 T355;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef volatile struct S357 T357;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef volatile struct S358 T358;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef volatile struct S360 T360;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef volatile struct S361 T361;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef volatile struct S362 T362;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef volatile struct S363 T363;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef volatile struct S364 T364;

/* SPECIAL [detachable ET_AGENT_TARGET] */
typedef volatile struct S366 T366;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef volatile struct S367 T367;

/* ET_ALIAS_NAME */
typedef volatile struct S368 T368;

/* SPECIAL [detachable ET_ALIAS_NAME] */
typedef volatile struct S369 T369;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
typedef volatile struct S370 T370;

/* ET_ALIAS_NAME_LIST */
typedef volatile struct S371 T371;

/* SPECIAL [detachable ET_ALIAS_NAME_LIST] */
typedef volatile struct S372 T372;

/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef volatile struct S373 T373;

/* SPECIAL [detachable ET_ASSIGNER] */
typedef volatile struct S375 T375;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef volatile struct S376 T376;

/* ET_BRACKET_EXPRESSION */
typedef volatile struct S377 T377;

/* SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef volatile struct S378 T378;

/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef volatile struct S379 T379;

/* ET_CALL_AGENT */
typedef volatile struct S380 T380;

/* SPECIAL [detachable ET_CALL_AGENT] */
typedef volatile struct S381 T381;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef volatile struct S382 T382;

/* ET_QUALIFIED_CALL_EXPRESSION */
typedef volatile struct S383 T383;

/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef volatile struct S384 T384;

/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef volatile struct S385 T385;

/* ET_CHECK_INSTRUCTION */
typedef volatile struct S386 T386;

/* SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef volatile struct S387 T387;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef volatile struct S388 T388;

/* SPECIAL [detachable ET_CHOICE] */
typedef volatile struct S390 T390;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef volatile struct S391 T391;

/* SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef volatile struct S393 T393;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef volatile struct S394 T394;

/* SPECIAL [detachable ET_CHOICE_ITEM] */
typedef volatile struct S396 T396;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef volatile struct S397 T397;

/* ET_CHOICE_LIST */
typedef volatile struct S398 T398;

/* SPECIAL [detachable ET_CHOICE_LIST] */
typedef volatile struct S399 T399;

/* KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef volatile struct S400 T400;

/* SPECIAL [detachable ET_CLASS] */
typedef volatile struct S401 T401;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef volatile struct S402 T402;

/* SPECIAL [detachable ET_CLIENT_ITEM] */
typedef volatile struct S403 T403;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef volatile struct S404 T404;

/* SPECIAL [detachable ET_CLIENTS] */
typedef volatile struct S405 T405;

/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef volatile struct S406 T406;

/* ET_COMPOUND */
typedef volatile struct S407 T407;

/* SPECIAL [detachable ET_COMPOUND] */
typedef volatile struct S408 T408;

/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef volatile struct S409 T409;

/* SPECIAL [detachable ET_CONDITIONAL] */
typedef volatile struct S411 T411;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
typedef volatile struct S412 T412;

/* SPECIAL [detachable ET_CONSTANT] */
typedef volatile struct S414 T414;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef volatile struct S415 T415;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef volatile struct S417 T417;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef volatile struct S418 T418;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef volatile struct S419 T419;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef volatile struct S420 T420;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef volatile struct S421 T421;

/* ET_CONSTRAINT_CREATOR */
typedef volatile struct S422 T422;

/* SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef volatile struct S423 T423;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
typedef volatile struct S424 T424;

/* ET_CONSTRAINT_RENAME_LIST */
typedef volatile struct S425 T425;

/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
typedef volatile struct S426 T426;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef volatile struct S427 T427;

/* SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef volatile struct S429 T429;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef volatile struct S430 T430;

/* SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef volatile struct S432 T432;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef volatile struct S433 T433;

/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef volatile struct S435 T435;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef volatile struct S436 T436;

/* ET_CONVERT_FEATURE_LIST */
typedef volatile struct S437 T437;

/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef volatile struct S438 T438;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef volatile struct S439 T439;

/* ET_CREATE_EXPRESSION */
typedef volatile struct S440 T440;

/* SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef volatile struct S441 T441;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
typedef volatile struct S442 T442;

/* ET_CREATION_REGION */
typedef volatile struct S443 T443;

/* SPECIAL [detachable ET_CREATION_REGION] */
typedef volatile struct S444 T444;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef volatile struct S445 T445;

/* SPECIAL [detachable ET_CREATOR] */
typedef volatile struct S446 T446;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef volatile struct S447 T447;

/* SPECIAL [detachable ET_CREATOR_LIST] */
typedef volatile struct S448 T448;

/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef volatile struct S449 T449;

/* ET_DEBUG_INSTRUCTION */
typedef volatile struct S450 T450;

/* SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef volatile struct S451 T451;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
typedef volatile struct S452 T452;

/* ET_ELSEIF_EXPRESSION */
typedef volatile struct S453 T453;

/* SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
typedef volatile struct S454 T454;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef volatile struct S455 T455;

/* ET_ELSEIF_EXPRESSION_LIST */
typedef volatile struct S456 T456;

/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef volatile struct S457 T457;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef volatile struct S458 T458;

/* ET_ELSEIF_PART */
typedef volatile struct S459 T459;

/* SPECIAL [detachable ET_ELSEIF_PART] */
typedef volatile struct S460 T460;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef volatile struct S461 T461;

/* ET_ELSEIF_PART_LIST */
typedef volatile struct S462 T462;

/* SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef volatile struct S463 T463;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef volatile struct S464 T464;

/* SPECIAL [detachable ET_EXPORT] */
typedef volatile struct S466 T466;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef volatile struct S467 T467;

/* SPECIAL [detachable ET_EXPORT_LIST] */
typedef volatile struct S468 T468;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
typedef volatile struct S469 T469;

/* SPECIAL [detachable ET_EXPRESSION] */
typedef volatile struct S471 T471;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
typedef volatile struct S472 T472;

/* SPECIAL [detachable ET_EXPRESSION_ITEM] */
typedef volatile struct S474 T474;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef volatile struct S475 T475;

/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef volatile struct S477 T477;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef volatile struct S478 T478;

/* SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef volatile struct S480 T480;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef volatile struct S481 T481;

/* SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef volatile struct S482 T482;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef volatile struct S483 T483;

/* ET_FEATURE_CLAUSE_LIST */
typedef volatile struct S484 T484;

/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef volatile struct S485 T485;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef volatile struct S486 T486;

/* ET_FEATURE_EXPORT */
typedef volatile struct S487 T487;

/* SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef volatile struct S488 T488;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef volatile struct S489 T489;

/* SPECIAL [detachable ET_FEATURE_NAME] */
typedef volatile struct S490 T490;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef volatile struct S491 T491;

/* SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef volatile struct S493 T493;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef volatile struct S494 T494;

/* ET_FORMAL_ARGUMENT */
typedef volatile struct S495 T495;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef volatile struct S496 T496;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef volatile struct S497 T497;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef volatile struct S499 T499;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef volatile struct S500 T500;

/* ET_FORMAL_ARGUMENT_LIST */
typedef volatile struct S501 T501;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef volatile struct S502 T502;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef volatile struct S503 T503;

/* ET_FORMAL_PARAMETER */
typedef volatile struct S504 T504;

/* SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef volatile struct S505 T505;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef volatile struct S506 T506;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef volatile struct S508 T508;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef volatile struct S509 T509;

/* ET_FORMAL_PARAMETER_LIST */
typedef volatile struct S510 T510;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef volatile struct S511 T511;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
typedef volatile struct S512 T512;

/* ET_IF_EXPRESSION */
typedef volatile struct S513 T513;

/* SPECIAL [detachable ET_IF_EXPRESSION] */
typedef volatile struct S514 T514;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef volatile struct S515 T515;

/* ET_IF_INSTRUCTION */
typedef volatile struct S516 T516;

/* SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef volatile struct S517 T517;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
typedef volatile struct S518 T518;

/* SPECIAL [detachable ET_INLINE_AGENT] */
typedef volatile struct S520 T520;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
typedef volatile struct S521 T521;

/* ET_INLINE_SEPARATE_ARGUMENT */
typedef volatile struct S522 T522;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
typedef volatile struct S523 T523;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef volatile struct S524 T524;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef volatile struct S526 T526;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
typedef volatile struct S527 T527;

/* ET_INLINE_SEPARATE_ARGUMENTS */
typedef volatile struct S528 T528;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
typedef volatile struct S529 T529;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
typedef volatile struct S530 T530;

/* ET_INLINE_SEPARATE_INSTRUCTION */
typedef volatile struct S531 T531;

/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
typedef volatile struct S532 T532;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
typedef volatile struct S533 T533;

/* ET_INSPECT_EXPRESSION */
typedef volatile struct S534 T534;

/* SPECIAL [detachable ET_INSPECT_EXPRESSION] */
typedef volatile struct S535 T535;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef volatile struct S536 T536;

/* ET_INSPECT_INSTRUCTION */
typedef volatile struct S537 T537;

/* SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef volatile struct S538 T538;

/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef volatile struct S539 T539;

/* SPECIAL [detachable ET_INSTRUCTION] */
typedef volatile struct S541 T541;

/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef volatile struct S542 T542;

/* ET_INVARIANTS */
typedef volatile struct S543 T543;

/* SPECIAL [detachable ET_INVARIANTS] */
typedef volatile struct S544 T544;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef volatile struct S545 T545;

/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef volatile struct S546 T546;

/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef volatile struct S547 T547;

/* SPECIAL [detachable ET_LIKE_TYPE] */
typedef volatile struct S549 T549;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef volatile struct S550 T550;

/* ET_LOCAL_VARIABLE */
typedef volatile struct S551 T551;

/* SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef volatile struct S552 T552;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef volatile struct S553 T553;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef volatile struct S555 T555;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef volatile struct S556 T556;

/* ET_LOCAL_VARIABLE_LIST */
typedef volatile struct S557 T557;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef volatile struct S558 T558;

/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef volatile struct S559 T559;

/* ET_LOOP_INVARIANTS */
typedef volatile struct S560 T560;

/* SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef volatile struct S561 T561;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef volatile struct S562 T562;

/* ET_MANIFEST_ARRAY */
typedef volatile struct S563 T563;

/* SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef volatile struct S564 T564;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef volatile struct S565 T565;

/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef volatile struct S567 T567;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef volatile struct S568 T568;

/* ET_MANIFEST_STRING_LIST */
typedef volatile struct S569 T569;

/* SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef volatile struct S570 T570;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef volatile struct S571 T571;

/* ET_MANIFEST_TUPLE */
typedef volatile struct S572 T572;

/* SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef volatile struct S573 T573;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
typedef volatile struct S574 T574;

/* ET_NOTE_LIST */
typedef volatile struct S575 T575;

/* SPECIAL [detachable ET_NOTE_LIST] */
typedef volatile struct S576 T576;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
typedef volatile struct S577 T577;

/* SPECIAL [detachable ET_NOTE_ITEM] */
typedef volatile struct S579 T579;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
typedef volatile struct S580 T580;

/* SPECIAL [detachable ET_NOTE_TERM] */
typedef volatile struct S582 T582;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
typedef volatile struct S583 T583;

/* SPECIAL [detachable ET_NOTE_TERM_ITEM] */
typedef volatile struct S585 T585;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
typedef volatile struct S586 T586;

/* ET_NOTE_TERM_LIST */
typedef volatile struct S587 T587;

/* SPECIAL [detachable ET_NOTE_TERM_LIST] */
typedef volatile struct S588 T588;

/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef volatile struct S589 T589;

/* SPECIAL [detachable ET_OBSOLETE] */
typedef volatile struct S591 T591;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef volatile struct S592 T592;

/* ET_PARENTHESIZED_EXPRESSION */
typedef volatile struct S593 T593;

/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef volatile struct S594 T594;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef volatile struct S595 T595;

/* SPECIAL [detachable ET_PARENT] */
typedef volatile struct S596 T596;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
typedef volatile struct S597 T597;

/* ET_PARENT_CLAUSE_LIST */
typedef volatile struct S598 T598;

/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
typedef volatile struct S599 T599;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef volatile struct S600 T600;

/* SPECIAL [detachable ET_PARENT_ITEM] */
typedef volatile struct S601 T601;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef volatile struct S602 T602;

/* SPECIAL [detachable ET_PARENT_LIST] */
typedef volatile struct S603 T603;

/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef volatile struct S604 T604;

/* ET_POSTCONDITIONS */
typedef volatile struct S605 T605;

/* SPECIAL [detachable ET_POSTCONDITIONS] */
typedef volatile struct S606 T606;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
typedef volatile struct S607 T607;

/* ET_PRECONDITIONS */
typedef volatile struct S608 T608;

/* SPECIAL [detachable ET_PRECONDITIONS] */
typedef volatile struct S609 T609;

/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
typedef volatile struct S610 T610;

/* SPECIAL [detachable ET_PROCEDURE] */
typedef volatile struct S612 T612;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef volatile struct S613 T613;

/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef volatile struct S615 T615;

/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
typedef volatile struct S616 T616;

/* ET_QUANTIFIER_EXPRESSION */
typedef volatile struct S617 T617;

/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
typedef volatile struct S618 T618;

/* KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
typedef volatile struct S619 T619;

/* SPECIAL [detachable ET_QUERY] */
typedef volatile struct S621 T621;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef volatile struct S622 T622;

/* SPECIAL [detachable ET_RENAME_ITEM] */
typedef volatile struct S624 T624;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef volatile struct S625 T625;

/* SPECIAL [detachable ET_RENAME_LIST] */
typedef volatile struct S626 T626;

/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
typedef volatile struct S627 T627;

/* ET_REPEAT_INSTRUCTION */
typedef volatile struct S628 T628;

/* SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
typedef volatile struct S629 T629;

/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef volatile struct S630 T630;

/* ET_STATIC_CALL_EXPRESSION */
typedef volatile struct S631 T631;

/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef volatile struct S632 T632;

/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef volatile struct S633 T633;

/* ET_STRIP_EXPRESSION */
typedef volatile struct S634 T634;

/* SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef volatile struct S635 T635;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
typedef volatile struct S636 T636;

/* SPECIAL [detachable ET_TYPE] */
typedef volatile struct S637 T637;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
typedef volatile struct S638 T638;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT] */
typedef volatile struct S640 T640;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
typedef volatile struct S641 T641;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
typedef volatile struct S643 T643;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
typedef volatile struct S644 T644;

/* ET_TYPE_CONSTRAINT_LIST */
typedef volatile struct S645 T645;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
typedef volatile struct S646 T646;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef volatile struct S647 T647;

/* SPECIAL [detachable ET_TYPE_ITEM] */
typedef volatile struct S649 T649;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef volatile struct S650 T650;

/* SPECIAL [detachable ET_TYPE_LIST] */
typedef volatile struct S652 T652;

/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef volatile struct S653 T653;

/* ET_VARIANT */
typedef volatile struct S654 T654;

/* SPECIAL [detachable ET_VARIANT] */
typedef volatile struct S655 T655;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
typedef volatile struct S656 T656;

/* ET_WHEN_EXPRESSION */
typedef volatile struct S657 T657;

/* SPECIAL [detachable ET_WHEN_EXPRESSION] */
typedef volatile struct S658 T658;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
typedef volatile struct S659 T659;

/* ET_WHEN_EXPRESSION_LIST */
typedef volatile struct S660 T660;

/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
typedef volatile struct S661 T661;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef volatile struct S662 T662;

/* ET_WHEN_PART */
typedef volatile struct S663 T663;

/* SPECIAL [detachable ET_WHEN_PART] */
typedef volatile struct S664 T664;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef volatile struct S665 T665;

/* ET_WHEN_PART_LIST */
typedef volatile struct S666 T666;

/* SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef volatile struct S667 T667;

/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef volatile struct S668 T668;

/* SPECIAL [detachable ET_WRITABLE] */
typedef volatile struct S670 T670;

/* ET_OBJECT_TEST_LIST */
typedef volatile struct S672 T672;

/* ET_ITERATION_COMPONENT_LIST */
typedef volatile struct S673 T673;

/* ET_INLINE_SEPARATE_ARGUMENT_LIST */
typedef volatile struct S674 T674;

/* ET_C3_CHARACTER_CONSTANT */
typedef volatile struct S675 T675;

/* ET_REGULAR_MANIFEST_STRING */
typedef volatile struct S676 T676;

/* ET_SPECIAL_MANIFEST_STRING */
typedef volatile struct S677 T677;

/* ET_VERBATIM_STRING */
typedef volatile struct S678 T678;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef volatile struct S679 T679;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef volatile struct S680 T680;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef volatile struct S681 T681;

/* ET_OCTAL_INTEGER_CONSTANT */
typedef volatile struct S682 T682;

/* ET_BINARY_INTEGER_CONSTANT */
typedef volatile struct S683 T683;

/* ET_REGULAR_REAL_CONSTANT */
typedef volatile struct S684 T684;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef volatile struct S685 T685;

/* ET_COMMENT */
typedef volatile struct S686 T686;

/* ET_TRUE_CONSTANT */
typedef volatile struct S687 T687;

/* ET_FALSE_CONSTANT */
typedef volatile struct S688 T688;

/* ET_C1_CHARACTER_CONSTANT */
typedef volatile struct S689 T689;

/* ET_C2_CHARACTER_CONSTANT */
typedef volatile struct S690 T690;

/* ET_TAGGED_NOTE */
typedef volatile struct S692 T692;

/* ET_NOTE */
typedef volatile struct S693 T693;

/* ET_CUSTOM_ATTRIBUTE */
typedef volatile struct S694 T694;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef volatile struct S695 T695;

/* ET_TYPE_RENAME_CONSTRAINT */
typedef volatile struct S696 T696;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef volatile struct S697 T697;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef volatile struct S698 T698;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef volatile struct S699 T699;

/* ET_RENAME */
typedef volatile struct S700 T700;

/* ET_ALL_EXPORT */
typedef volatile struct S701 T701;

/* ET_CONVERT_FUNCTION */
typedef volatile struct S703 T703;

/* ET_CONVERT_PROCEDURE */
typedef volatile struct S704 T704;

/* ET_ATTRIBUTE */
typedef volatile struct S706 T706;

/* ET_EXTENDED_ATTRIBUTE */
typedef volatile struct S707 T707;

/* ET_CONSTANT_ATTRIBUTE */
typedef volatile struct S708 T708;

/* ET_UNIQUE_ATTRIBUTE */
typedef volatile struct S709 T709;

/* ET_DO_FUNCTION */
typedef volatile struct S710 T710;

/* ET_ONCE_FUNCTION */
typedef volatile struct S711 T711;

/* ET_DEFERRED_FUNCTION */
typedef volatile struct S712 T712;

/* ET_EXTERNAL_FUNCTION */
typedef volatile struct S714 T714;

/* ET_DO_PROCEDURE */
typedef volatile struct S715 T715;

/* ET_ONCE_PROCEDURE */
typedef volatile struct S716 T716;

/* ET_DEFERRED_PROCEDURE */
typedef volatile struct S717 T717;

/* ET_EXTERNAL_PROCEDURE */
typedef volatile struct S718 T718;

/* ET_ALIASED_FEATURE_NAME */
typedef volatile struct S719 T719;

/* ET_ALIAS_FREE_NAME */
typedef volatile struct S720 T720;

/* ET_CLASS_ASSERTION */
typedef volatile struct S723 T723;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef volatile struct S724 T724;

/* ET_LIKE_FEATURE */
typedef volatile struct S726 T726;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef volatile struct S728 T728;

/* ET_QUALIFIED_LIKE_TYPE */
typedef volatile struct S729 T729;

/* ET_ASSIGNER_INSTRUCTION */
typedef volatile struct S730 T730;

/* ET_ASSIGNMENT */
typedef volatile struct S731 T731;

/* ET_ASSIGNMENT_ATTEMPT */
typedef volatile struct S732 T732;

/* ET_LOOP_INSTRUCTION */
typedef volatile struct S733 T733;

/* ET_BANG_INSTRUCTION */
typedef volatile struct S735 T735;

/* ET_QUALIFIED_CALL */
typedef volatile struct S736 T736;

/* ET_CREATE_INSTRUCTION */
typedef volatile struct S738 T738;

/* ET_CHOICE_RANGE */
typedef volatile struct S739 T739;

/* ET_QUALIFIED_CALL_INSTRUCTION */
typedef volatile struct S740 T740;

/* ET_PRECURSOR_INSTRUCTION */
typedef volatile struct S741 T741;

/* ET_STATIC_CALL_INSTRUCTION */
typedef volatile struct S743 T743;

/* ET_PRECURSOR_EXPRESSION */
typedef volatile struct S744 T744;

/* ET_FEATURE_ADDRESS */
typedef volatile struct S745 T745;

/* ET_CURRENT_ADDRESS */
typedef volatile struct S746 T746;

/* ET_RESULT_ADDRESS */
typedef volatile struct S747 T747;

/* ET_EXPRESSION_ADDRESS */
typedef volatile struct S748 T748;

/* ET_INFIX_EXPRESSION */
typedef volatile struct S749 T749;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef volatile struct S750 T750;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef volatile struct S751 T751;

/* ET_EQUALITY_EXPRESSION */
typedef volatile struct S752 T752;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef volatile struct S753 T753;

/* ET_MANIFEST_TYPE */
typedef volatile struct S754 T754;

/* ET_PREFIX_EXPRESSION */
typedef volatile struct S755 T755;

/* ET_OLD_EXPRESSION */
typedef volatile struct S756 T756;

/* ET_OLD_OBJECT_TEST */
typedef volatile struct S757 T757;

/* ET_OBJECT_TEST */
typedef volatile struct S758 T758;

/* ET_NAMED_OBJECT_TEST */
typedef volatile struct S759 T759;

/* ET_ONCE_MANIFEST_STRING */
typedef volatile struct S760 T760;

/* ET_ITERATION_CURSOR */
typedef volatile struct S761 T761;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef volatile struct S763 T763;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef volatile struct S764 T764;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef volatile struct S765 T765;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef volatile struct S766 T766;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef volatile struct S767 T767;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef volatile struct S768 T768;

/* ET_AGENT_OPEN_TARGET */
typedef volatile struct S769 T769;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef volatile struct S770 T770;

/* ET_QUERY_LIST */
typedef volatile struct S773 T773;

/* ET_PROCEDURE_LIST */
typedef volatile struct S774 T774;

/* ET_TAGGED_ASSERTION */
typedef volatile struct S776 T776;

/* ET_FILE_POSITION */
typedef volatile struct S778 T778;

/* SPECIAL [ET_CLASS] */
typedef volatile struct S779 T779;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef volatile struct S780 T780;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef volatile struct S781 T781;

/* ET_BASE_TYPE_LIST */
typedef volatile struct S782 T782;

/* ET_CLASS_CODES */
typedef volatile struct S783 T783;

/* ET_ECF_AST_FACTORY */
typedef volatile struct S784 T784;

/* DS_CELL [detachable ET_ECF_SYSTEM] */
typedef volatile struct S785 T785;

/* TUPLE [ET_ECF_TARGET] */
typedef volatile struct S786 T786;

/* PROCEDURE [TUPLE [ET_ECF_TARGET]] */
typedef volatile struct S787 T787;

/* TUPLE [ET_ECF_SYSTEM_PARSER] */
typedef volatile struct S788 T788;

/* XM_ELEMENT */
typedef volatile struct S789 T789;

/* XM_POSITION_TABLE */
typedef volatile struct S790 T790;

/* TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
typedef volatile struct S791 T791;

/* PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
typedef volatile struct S792 T792;

/* TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
typedef volatile struct S793 T793;

/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
typedef volatile struct S795 T795;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef volatile struct S796 T796;

/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef volatile struct S797 T797;

/* XM_EIFFEL_PARSER */
typedef volatile struct S799 T799;

/* XM_TREE_CALLBACKS_PIPE */
typedef volatile struct S800 T800;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef volatile struct S803 T803;

/* ET_ECF_STATE */
typedef volatile struct S804 T804;

/* ET_ECF_SYSTEM_CONFIG */
typedef volatile struct S805 T805;

/* ET_ECF_LIBRARY */
typedef volatile struct S806 T806;

/* TUPLE [ET_ADAPTED_LIBRARY] */
typedef volatile struct S808 T808;

/* PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
typedef volatile struct S809 T809;

/* XM_DOCUMENT */
typedef volatile struct S810 T810;

/* ET_COMPRESSED_POSITION */
typedef volatile struct S811 T811;

/* XM_STOP_ON_ERROR_FILTER */
typedef volatile struct S813 T813;

/* XM_ATTRIBUTE */
typedef volatile struct S814 T814;

/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
typedef volatile struct S815 T815;

/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
typedef volatile struct S816 T816;

/* ET_ECF_TARGET_PARENT */
typedef volatile struct S817 T817;

/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
typedef volatile struct S818 T818;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
typedef volatile struct S819 T819;

/* ET_ECF_TARGETS */
typedef volatile struct S820 T820;

/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef volatile struct S821 T821;

/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef volatile struct S822 T822;

/* DS_CELL [detachable ET_ECF_LIBRARY] */
typedef volatile struct S824 T824;

/* ET_ECF_ADAPTED_LIBRARY */
typedef volatile struct S825 T825;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
typedef volatile struct S826 T826;

/* ET_ECF_DOTNET_ASSEMBLY */
typedef volatile struct S828 T828;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef volatile struct S830 T830;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef volatile struct S831 T831;

/* ET_ECF_ERROR */
typedef volatile struct S832 T832;

/* ET_ECF_OPTIONS */
typedef volatile struct S833 T833;

/* ET_ECF_CLUSTERS */
typedef volatile struct S834 T834;

/* KL_AGENT_HASH_FUNCTION [STRING_8] */
typedef volatile struct S835 T835;

/* TUPLE [STRING_8] */
typedef volatile struct S836 T836;

/* FUNCTION [TUPLE [STRING_8], INTEGER_32] */
typedef volatile struct S837 T837;

/* TUPLE [KL_STRING_ROUTINES] */
typedef volatile struct S838 T838;

/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
typedef volatile struct S840 T840;

/* DS_ARRAYED_LIST [ET_CLUSTER] */
typedef volatile struct S842 T842;

/* ET_DYNAMIC_PRIMARY_TYPE */
typedef volatile struct S843 T843;

/* ET_DYNAMIC_FEATURE_LIST */
typedef volatile struct S844 T844;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
typedef volatile struct S845 T845;

/* TUPLE [INTEGER_32] */
typedef volatile struct S846 T846;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef volatile struct S847 T847;

/* TUPLE [ET_DYNAMIC_SYSTEM] */
typedef volatile struct S848 T848;

/* ET_DYNAMIC_FEATURE */
typedef volatile struct S850 T850;

/* ET_NESTED_TYPE_CONTEXT */
typedef volatile struct S852 T852;

/* ET_FORMAL_PARAMETER_TYPE */
typedef volatile struct S853 T853;

/* ARRAY [ET_TYPE] */
typedef volatile struct S854 T854;

/* SPECIAL [ET_TYPE] */
typedef volatile struct S855 T855;

/* ET_SYSTEM_MULTIPROCESSOR */
typedef volatile struct S858 T858;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef volatile struct S859 T859;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef volatile struct S860 T860;

/* TYPE [STRING_8] */
#define T861 EIF_TYPE_OBJ

/* ET_FEATURE_CHECKER */
typedef volatile struct S862 T862;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef volatile struct S863 T863;

/* DS_HASH_SET [ET_FEATURE] */
typedef volatile struct S864 T864;

/* ET_DYNAMIC_PRECURSOR */
typedef volatile struct S865 T865;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef volatile struct S866 T866;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef volatile struct S867 T867;

/* ET_TYPE_CHECKER */
typedef volatile struct S869 T869;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef volatile struct S872 T872;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef volatile struct S873 T873;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef volatile struct S874 T874;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef volatile struct S875 T875;

/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef volatile struct S876 T876;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef volatile struct S877 T877;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef volatile struct S878 T878;

/* ET_OBJECT_TEST_SCOPE */
typedef volatile struct S879 T879;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef volatile struct S880 T880;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
typedef volatile struct S881 T881;

/* ET_ITERATION_ITEM_SCOPE */
typedef volatile struct S882 T882;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
typedef volatile struct S883 T883;

/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
typedef volatile struct S884 T884;

/* ET_ATTACHMENT_SCOPE */
typedef volatile struct S885 T885;

/* ET_ATTACHMENT_SCOPE_BUILDER */
typedef volatile struct S886 T886;

/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
typedef volatile struct S887 T887;

/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
typedef volatile struct S888 T888;

/* DS_ARRAYED_LIST [ET_NOTE_TERM] */
typedef volatile struct S889 T889;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef volatile struct S890 T890;

/* ET_ADAPTED_BASE_CLASS_CHECKER */
typedef volatile struct S891 T891;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef volatile struct S893 T893;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef volatile struct S894 T894;

/* DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32] */
typedef volatile struct S896 T896;

/* DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32] */
typedef volatile struct S897 T897;

/* DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32] */
typedef volatile struct S898 T898;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef volatile struct S904 T904;

/* ET_FEATURE_LIST */
typedef volatile struct S907 T907;

/* NATIVE_STRING */
typedef volatile struct S909 T909;

/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
typedef volatile struct S910 T910;

/* RX_BYTE_CODE */
typedef volatile struct S912 T912;

/* RX_CHARACTER_SET */
typedef volatile struct S913 T913;

/* RX_CASE_MAPPING */
typedef volatile struct S914 T914;

/* UC_UNICODE_ROUTINES */
typedef volatile struct S916 T916;

/* ARRAY [RX_CHARACTER_SET] */
typedef volatile struct S917 T917;

/* SPECIAL [RX_CHARACTER_SET] */
typedef volatile struct S918 T918;

/* UC_STRING */
typedef volatile struct S919 T919;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef volatile struct S920 T920;

/* DS_HASH_SET [NATURAL_32] */
typedef volatile struct S921 T921;

/* KL_STRING_OUTPUT_STREAM */
typedef volatile struct S922 T922;

/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION] */
typedef volatile struct S923 T923;

/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION] */
typedef volatile struct S924 T924;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef volatile struct S925 T925;

/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S926 T926;

/* DS_ARRAYED_LIST [BOOLEAN] */
typedef volatile struct S927 T927;

/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
typedef volatile struct S928 T928;

/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
typedef volatile struct S929 T929;

/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef volatile struct S930 T930;

/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef volatile struct S931 T931;

/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
typedef volatile struct S932 T932;

/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
typedef volatile struct S933 T933;

/* DS_ARRAYED_LIST [ET_RESULT] */
typedef volatile struct S934 T934;

/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
typedef volatile struct S935 T935;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef volatile struct S936 T936;

/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef volatile struct S937 T937;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef volatile struct S938 T938;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef volatile struct S939 T939;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
typedef volatile struct S940 T940;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef volatile struct S941 T941;

/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S942 T942;

/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S943 T943;

/* DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32] */
typedef volatile struct S944 T944;

/* DS_HASH_TABLE [INTEGER_32, INTEGER_32] */
typedef volatile struct S945 T945;

/* DS_HASH_SET [INTEGER_32] */
typedef volatile struct S946 T946;

/* DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32] */
typedef volatile struct S947 T947;

/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
typedef volatile struct S948 T948;

/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
typedef volatile struct S950 T950;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef volatile struct S951 T951;

/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE] */
typedef volatile struct S952 T952;

/* ARRAY [INTEGER_32] */
typedef volatile struct S953 T953;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef volatile struct S954 T954;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
typedef volatile struct S955 T955;

/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S956 T956;

/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef volatile struct S957 T957;

/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
typedef volatile struct S958 T958;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef volatile struct S959 T959;

/* DS_HASH_SET [ET_DYNAMIC_FEATURE] */
typedef volatile struct S960 T960;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef volatile struct S961 T961;

/* DS_STRING_HASH_TABLE */
typedef volatile struct S962 T962;

/* KL_TEXT_OUTPUT_FILE */
typedef volatile struct S963 T963;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef volatile struct S964 T964;

/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
typedef volatile struct S965 T965;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef volatile struct S966 T966;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]] */
typedef volatile struct S967 T967;

/* DS_QUICK_SORTER [STRING_8] */
typedef volatile struct S968 T968;

/* UC_STRING_COMPARATOR */
typedef volatile struct S969 T969;

/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
typedef volatile struct S970 T970;

/* TUPLE [STRING_8, STRING_8] */
typedef volatile struct S973 T973;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S974 T974;

/* ET_DYNAMIC_EQUALITY_TYPES */
typedef volatile struct S975 T975;

/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
typedef volatile struct S977 T977;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef volatile struct S978 T978;

/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S980 T980;

/* ET_DYNAMIC_SECONDARY_TYPE */
typedef volatile struct S981 T981;

/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
typedef volatile struct S982 T982;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S988 T988;

/* ET_DYNAMIC_INLINED_EXPRESSION */
typedef volatile struct S992 T992;

/* ET_DYNAMIC_CALL_CONTEXT */
typedef volatile struct S993 T993;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef volatile struct S994 T994;

/* PROCEDURE [TUPLE] */
typedef volatile struct S996 T996;

/* TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef volatile struct S997 T997;

/* TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef volatile struct S998 T998;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef volatile struct S999 T999;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef volatile struct S1000 T1000;

/* UT_INTEGER_FORMATTER */
typedef volatile struct S1001 T1001;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef volatile struct S1006 T1006;

/* TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1007 T1007;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef volatile struct S1011 T1011;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef volatile struct S1016 T1016;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
typedef volatile struct S1017 T1017;

/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1018 T1018;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1019 T1019;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1020 T1020;

/* TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
typedef volatile struct S1023 T1023;

/* WORKER_THREAD */
typedef volatile struct S1024 T1024;

/* PATH */
typedef volatile struct S1026 T1026;

/* STRING_TO_INTEGER_CONVERTOR */
typedef volatile struct S1027 T1027;

/* STRING_8_SEARCHER */
typedef volatile struct S1029 T1029;

/* STD_FILES */
typedef volatile struct S1031 T1031;

/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef volatile struct S1032 T1032;

/* DT_SHARED_SYSTEM_CLOCK */
typedef volatile struct S1034 T1034;

/* DT_SYSTEM_CLOCK */
typedef volatile struct S1035 T1035;

/* DT_DATE_TIME_DURATION */
typedef volatile struct S1036 T1036;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef volatile struct S1041 T1041;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef volatile struct S1044 T1044;

/* ET_UNQUALIFIED_CALL_EXPRESSION */
typedef volatile struct S1045 T1045;

/* ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef volatile struct S1046 T1046;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef volatile struct S1047 T1047;

/* DS_CELL [detachable ET_ECF_CONFIG] */
typedef volatile struct S1050 T1050;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
typedef volatile struct S1052 T1052;

/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
typedef volatile struct S1054 T1054;

/* XM_NAMESPACE */
typedef volatile struct S1055 T1055;

/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
typedef volatile struct S1056 T1056;

/* ET_ECF_REDIRECTION_CONFIG */
typedef volatile struct S1058 T1058;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef volatile struct S1059 T1059;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef volatile struct S1060 T1060;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef volatile struct S1061 T1061;

/* KL_PLATFORM */
typedef volatile struct S1062 T1062;

/* UT_CONFIG_PARSER */
typedef volatile struct S1063 T1063;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef volatile struct S1064 T1064;

/* CELL [INTEGER_32] */
typedef volatile struct S1067 T1067;

/* KL_PATHNAME */
typedef volatile struct S1069 T1069;

/* KL_ANY_ROUTINES */
typedef volatile struct S1070 T1070;

/* KL_WINDOWS_INPUT_FILE */
typedef volatile struct S1071 T1071;

/* KL_UNIX_INPUT_FILE */
typedef volatile struct S1072 T1072;

/* ARRAY [IMMUTABLE_STRING_32] */
typedef volatile struct S1073 T1073;

/* SPECIAL [IMMUTABLE_STRING_32] */
typedef volatile struct S1074 T1074;

/* SPECIAL [NATURAL_8] */
typedef volatile struct S1075 T1075;

/* TYPED_POINTER [SPECIAL [NATURAL_8]] */
typedef volatile struct S1076 T1076;
extern T0* GE_boxed1076(TC* ac, T1076 a1);
extern T0* GE_boxed_pointer1076(TC* ac, T1076* a1);
typedef volatile struct Sb1076 Tb1076;

/* UC_UTF8_STRING */
typedef volatile struct S1078 T1078;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef volatile struct S1079 T1079;

/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
typedef volatile struct S1080 T1080;

/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef volatile struct S1081 T1081;

/* SPECIAL [ET_MASTER_CLASS] */
typedef volatile struct S1082 T1082;

/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
typedef volatile struct S1085 T1085;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef volatile struct S1086 T1086;

/* SPECIAL [ET_CLASS_NAME] */
typedef volatile struct S1087 T1087;

/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef volatile struct S1088 T1088;

/* SPECIAL [ET_PARENT_ITEM] */
typedef volatile struct S1090 T1090;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef volatile struct S1091 T1091;

/* SPECIAL [ET_CLIENT_ITEM] */
typedef volatile struct S1092 T1092;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
typedef volatile struct S1093 T1093;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef volatile struct S1094 T1094;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef volatile struct S1096 T1096;

/* ET_BRACED_TYPE_LIST */
typedef volatile struct S1097 T1097;

/* DS_HASH_SET_CURSOR [ET_UNIVERSE] */
typedef volatile struct S1098 T1098;

/* KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
typedef volatile struct S1100 T1100;

/* SPECIAL [ET_UNIVERSE] */
typedef volatile struct S1101 T1101;

/* DS_ARRAYED_LIST [ET_MASTER_CLASS] */
typedef volatile struct S1102 T1102;

/* TUPLE [ET_MASTER_CLASS] */
typedef volatile struct S1103 T1103;

/* PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
typedef volatile struct S1104 T1104;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef volatile struct S1105 T1105;

/* SPECIAL [AP_OPTION] */
typedef volatile struct S1107 T1107;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef volatile struct S1108 T1108;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef volatile struct S1109 T1109;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef volatile struct S1110 T1110;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef volatile struct S1111 T1111;

/* SPECIAL [detachable STRING_8] */
typedef volatile struct S1112 T1112;

/* KL_SPECIAL_ROUTINES [detachable STRING_8] */
typedef volatile struct S1113 T1113;

/* DS_LINKABLE [STRING_8] */
typedef volatile struct S1114 T1114;

/* DS_LINKABLE [BOOLEAN] */
typedef volatile struct S1115 T1115;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef volatile struct S1116 T1116;

/* DS_LINKABLE [INTEGER_32] */
typedef volatile struct S1117 T1117;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef volatile struct S1118 T1118;

/* YY_FILE_BUFFER */
typedef volatile struct S1120 T1120;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef volatile struct S1121 T1121;

/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
typedef volatile struct S1122 T1122;

/* ET_PARENT_CHECKER1 */
typedef volatile struct S1123 T1123;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef volatile struct S1124 T1124;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef volatile struct S1125 T1125;

/* ET_FEATURE_NAME_TESTER */
typedef volatile struct S1126 T1126;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef volatile struct S1128 T1128;

/* ET_ALIAS_NAME_TESTER */
typedef volatile struct S1129 T1129;

/* DS_ARRAYED_LIST [ET_CLIENT_LIST] */
typedef volatile struct S1131 T1131;

/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
typedef volatile struct S1132 T1132;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef volatile struct S1133 T1133;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef volatile struct S1134 T1134;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef volatile struct S1135 T1135;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef volatile struct S1136 T1136;

/* ET_ANCHORED_TYPE_CHECKER */
typedef volatile struct S1137 T1137;

/* ET_SIGNATURE_CHECKER */
typedef volatile struct S1138 T1138;

/* ET_PARENT_CHECKER2 */
typedef volatile struct S1139 T1139;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef volatile struct S1140 T1140;

/* ET_BUILTIN_FEATURE_CHECKER */
typedef volatile struct S1141 T1141;

/* ET_PRECURSOR_CHECKER */
typedef volatile struct S1142 T1142;

/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
typedef volatile struct S1143 T1143;

/* DS_HASH_SET [ET_CLASS] */
typedef volatile struct S1144 T1144;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef volatile struct S1145 T1145;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef volatile struct S1146 T1146;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef volatile struct S1147 T1147;

/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
typedef volatile struct S1148 T1148;

/* ET_PARENT_CHECKER3 */
typedef volatile struct S1149 T1149;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef volatile struct S1150 T1150;

/* DS_HASH_SET [ET_QUERY] */
typedef volatile struct S1151 T1151;

/* ET_SUPPLIER_BUILDER */
typedef volatile struct S1152 T1152;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef volatile struct S1153 T1153;

/* YY_UNICODE_BUFFER */
typedef volatile struct S1155 T1155;

/* SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef volatile struct S1156 T1156;

/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef volatile struct S1157 T1157;

/* SPECIAL [ET_OBJECT_TEST_LIST] */
typedef volatile struct S1158 T1158;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
typedef volatile struct S1159 T1159;

/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
typedef volatile struct S1160 T1160;

/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
typedef volatile struct S1161 T1161;

/* SPECIAL [ET_ITERATION_COMPONENT_LIST] */
typedef volatile struct S1162 T1162;

/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
typedef volatile struct S1163 T1163;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef volatile struct S1164 T1164;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef volatile struct S1165 T1165;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef volatile struct S1166 T1166;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef volatile struct S1167 T1167;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef volatile struct S1168 T1168;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef volatile struct S1169 T1169;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef volatile struct S1170 T1170;

/* SPECIAL [ET_QUERY] */
typedef volatile struct S1171 T1171;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef volatile struct S1172 T1172;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef volatile struct S1173 T1173;

/* SPECIAL [ET_PROCEDURE] */
typedef volatile struct S1174 T1174;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef volatile struct S1175 T1175;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef volatile struct S1176 T1176;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef volatile struct S1177 T1177;

/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
typedef volatile struct S1178 T1178;

/* SPECIAL [ET_NAMED_CLASS] */
typedef volatile struct S1179 T1179;

/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
typedef volatile struct S1180 T1180;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef volatile struct S1182 T1182;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef volatile struct S1184 T1184;

/* SPECIAL [ET_INSTRUCTION] */
typedef volatile struct S1186 T1186;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef volatile struct S1187 T1187;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef volatile struct S1189 T1189;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef volatile struct S1190 T1190;

/* SPECIAL [ET_NAMED_OBJECT_TEST] */
typedef volatile struct S1191 T1191;

/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
typedef volatile struct S1192 T1192;

/* SPECIAL [ET_ITERATION_COMPONENT] */
typedef volatile struct S1193 T1193;

/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
typedef volatile struct S1194 T1194;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
typedef volatile struct S1195 T1195;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
typedef volatile struct S1196 T1196;

/* SPECIAL [ET_BASE_TYPE] */
typedef volatile struct S1197 T1197;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef volatile struct S1198 T1198;

/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
typedef volatile struct S1199 T1199;

/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
typedef volatile struct S1200 T1200;

/* SPECIAL [ET_ECF_LIBRARY] */
typedef volatile struct S1201 T1201;

/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
typedef volatile struct S1204 T1204;

/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
typedef volatile struct S1205 T1205;

/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef volatile struct S1208 T1208;

/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
typedef volatile struct S1209 T1209;

/* XM_EIFFEL_SCANNER */
typedef volatile struct S1210 T1210;

/* XM_DEFAULT_POSITION */
typedef volatile struct S1211 T1211;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef volatile struct S1213 T1213;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef volatile struct S1214 T1214;

/* XM_CALLBACKS_NULL */
typedef volatile struct S1215 T1215;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef volatile struct S1216 T1216;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef volatile struct S1218 T1218;

/* XM_DTD_CALLBACKS_NULL */
typedef volatile struct S1220 T1220;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef volatile struct S1221 T1221;

/* XM_EIFFEL_PARSER_NAME */
typedef volatile struct S1222 T1222;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef volatile struct S1223 T1223;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef volatile struct S1224 T1224;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef volatile struct S1225 T1225;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef volatile struct S1226 T1226;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef volatile struct S1227 T1227;

/* XM_DTD_EXTERNAL_ID */
typedef volatile struct S1228 T1228;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef volatile struct S1229 T1229;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef volatile struct S1230 T1230;

/* XM_DTD_ELEMENT_CONTENT */
typedef volatile struct S1231 T1231;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef volatile struct S1232 T1232;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef volatile struct S1233 T1233;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef volatile struct S1234 T1234;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef volatile struct S1235 T1235;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef volatile struct S1236 T1236;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef volatile struct S1237 T1237;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef volatile struct S1238 T1238;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef volatile struct S1239 T1239;

/* DS_BILINKED_LIST [STRING_8] */
typedef volatile struct S1240 T1240;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef volatile struct S1241 T1241;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef volatile struct S1242 T1242;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef volatile struct S1243 T1243;

/* XM_EIFFEL_DECLARATION */
typedef volatile struct S1244 T1244;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef volatile struct S1245 T1245;

/* XM_EIFFEL_ENTITY_DEF */
typedef volatile struct S1248 T1248;

/* XM_EIFFEL_SCANNER_DTD */
typedef volatile struct S1249 T1249;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef volatile struct S1251 T1251;

/* XM_NAMESPACE_RESOLVER */
typedef volatile struct S1252 T1252;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef volatile struct S1253 T1253;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef volatile struct S1254 T1254;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef volatile struct S1255 T1255;

/* XM_LINKED_LIST [XM_DOCUMENT_NODE] */
typedef volatile struct S1256 T1256;

/* SPECIAL [ET_ECF_SYSTEM_CONFIG] */
typedef volatile struct S1259 T1259;

/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
typedef volatile struct S1261 T1261;

/* DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
typedef volatile struct S1262 T1262;

/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
typedef volatile struct S1263 T1263;

/* SPECIAL [ET_ECF_TARGET] */
typedef volatile struct S1264 T1264;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
typedef volatile struct S1266 T1266;

/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef volatile struct S1268 T1268;

/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
typedef volatile struct S1269 T1269;

/* SPECIAL [detachable RX_REGULAR_EXPRESSION] */
typedef volatile struct S1270 T1270;

/* ET_DOTNET_ASSEMBLIES */
typedef volatile struct S1271 T1271;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef volatile struct S1275 T1275;

/* SPECIAL [ET_IDENTIFIER] */
typedef volatile struct S1276 T1276;

/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
typedef volatile struct S1277 T1277;

/* KL_SPECIAL_ROUTINES [ET_CLUSTER] */
typedef volatile struct S1278 T1278;

/* SPECIAL [ET_CLUSTER] */
typedef volatile struct S1279 T1279;

/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
typedef volatile struct S1280 T1280;

/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
typedef volatile struct S1281 T1281;

/* ET_FEATURE_IDS */
typedef volatile struct S1282 T1282;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef volatile struct S1283 T1283;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef volatile struct S1284 T1284;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
typedef volatile struct S1286 T1286;

/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
typedef volatile struct S1287 T1287;

/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
typedef volatile struct S1288 T1288;

/* ET_LIKE_N */
typedef volatile struct S1290 T1290;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef volatile struct S1291 T1291;

/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
typedef volatile struct S1292 T1292;

/* TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
typedef volatile struct S1293 T1293;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef volatile struct S1294 T1294;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef volatile struct S1295 T1295;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef volatile struct S1296 T1296;

/* SPECIAL [ET_FEATURE] */
typedef volatile struct S1297 T1297;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef volatile struct S1298 T1298;

/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
typedef volatile struct S1300 T1300;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef volatile struct S1301 T1301;

/* SPECIAL [ET_INLINE_AGENT] */
typedef volatile struct S1302 T1302;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef volatile struct S1303 T1303;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef volatile struct S1304 T1304;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef volatile struct S1305 T1305;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef volatile struct S1306 T1306;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef volatile struct S1307 T1307;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef volatile struct S1308 T1308;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef volatile struct S1309 T1309;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef volatile struct S1310 T1310;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef volatile struct S1311 T1311;

/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef volatile struct S1312 T1312;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef volatile struct S1313 T1313;

/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef volatile struct S1314 T1314;

/* TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
typedef volatile struct S1315 T1315;

/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef volatile struct S1316 T1316;

/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef volatile struct S1317 T1317;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef volatile struct S1318 T1318;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef volatile struct S1319 T1319;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef volatile struct S1320 T1320;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef volatile struct S1321 T1321;

/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
typedef volatile struct S1324 T1324;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
typedef volatile struct S1325 T1325;

/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
typedef volatile struct S1327 T1327;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
typedef volatile struct S1329 T1329;

/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
typedef volatile struct S1330 T1330;

/* SPECIAL [ET_ATTACHMENT_SCOPE] */
typedef volatile struct S1332 T1332;

/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
typedef volatile struct S1333 T1333;

/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
typedef volatile struct S1334 T1334;

/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
typedef volatile struct S1335 T1335;

/* SPECIAL [ET_ASSERTIONS] */
typedef volatile struct S1336 T1336;

/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
typedef volatile struct S1338 T1338;

/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
typedef volatile struct S1339 T1339;

/* SPECIAL [ET_NOTE_TERM] */
typedef volatile struct S1340 T1340;

/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
typedef volatile struct S1341 T1341;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef volatile struct S1342 T1342;

/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef volatile struct S1343 T1343;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef volatile struct S1344 T1344;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef volatile struct S1345 T1345;

/* SPECIAL [ET_PRECONDITIONS] */
typedef volatile struct S1346 T1346;

/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
typedef volatile struct S1347 T1347;

/* SPECIAL [ET_POSTCONDITIONS] */
typedef volatile struct S1348 T1348;

/* KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
typedef volatile struct S1349 T1349;

/* SPECIAL [ET_INVARIANTS] */
typedef volatile struct S1350 T1350;

/* SPECIAL [NATIVE_STRING] */
typedef volatile struct S1351 T1351;

/* SPECIAL [NATURAL_32] */
typedef volatile struct S1352 T1352;

/* DS_ARRAYED_LIST [RX_CHARACTER_SET] */
typedef volatile struct S1353 T1353;

/* KL_SPECIAL_ROUTINES [NATURAL_32] */
typedef volatile struct S1354 T1354;

/* SPECIAL [NATURAL_64] */
typedef volatile struct S1355 T1355;

/* DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
typedef volatile struct S1356 T1356;

/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
typedef volatile struct S1357 T1357;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef volatile struct S1358 T1358;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef volatile struct S1359 T1359;

/* KL_INTEGER_ROUTINES */
typedef volatile struct S1360 T1360;

/* DS_HASH_SET_CURSOR [NATURAL_32] */
typedef volatile struct S1363 T1363;

/* KL_SPECIAL_ROUTINES [ET_OLD_EXPRESSION] */
typedef volatile struct S1365 T1365;

/* SPECIAL [ET_OLD_EXPRESSION] */
typedef volatile struct S1366 T1366;

/* DS_ARRAYED_LIST_CURSOR [ET_OLD_EXPRESSION] */
typedef volatile struct S1367 T1367;

/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, ET_OLD_EXPRESSION] */
typedef volatile struct S1369 T1369;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef volatile struct S1370 T1370;

/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1371 T1371;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1372 T1372;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1373 T1373;

/* DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
typedef volatile struct S1374 T1374;

/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
typedef volatile struct S1375 T1375;

/* SPECIAL [ET_EQUALITY_EXPRESSION] */
typedef volatile struct S1376 T1376;

/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
typedef volatile struct S1377 T1377;

/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
typedef volatile struct S1378 T1378;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
typedef volatile struct S1379 T1379;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
typedef volatile struct S1380 T1380;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef volatile struct S1381 T1381;

/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef volatile struct S1382 T1382;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef volatile struct S1383 T1383;

/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef volatile struct S1384 T1384;

/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef volatile struct S1385 T1385;

/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef volatile struct S1386 T1386;

/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
typedef volatile struct S1387 T1387;

/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
typedef volatile struct S1388 T1388;

/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
typedef volatile struct S1389 T1389;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef volatile struct S1390 T1390;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef volatile struct S1391 T1391;

/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
typedef volatile struct S1392 T1392;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef volatile struct S1393 T1393;

/* SPECIAL [ET_RESULT] */
typedef volatile struct S1394 T1394;

/* DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
typedef volatile struct S1395 T1395;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef volatile struct S1396 T1396;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef volatile struct S1397 T1397;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef volatile struct S1398 T1398;

/* SPECIAL [ET_EXPRESSION] */
typedef volatile struct S1399 T1399;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef volatile struct S1400 T1400;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef volatile struct S1401 T1401;

/* KL_EQUALITY_TESTER [INTEGER_32] */
typedef volatile struct S1402 T1402;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
typedef volatile struct S1403 T1403;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1404 T1404;

/* SPECIAL [ET_OBJECT_TEST] */
typedef volatile struct S1406 T1406;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
typedef volatile struct S1407 T1407;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, INTEGER_32] */
typedef volatile struct S1409 T1409;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef volatile struct S1410 T1410;

/* TYPE [INTEGER_32] */
#define T1411 EIF_TYPE_OBJ

/* SPECIAL [ET_AGENT] */
typedef volatile struct S1413 T1413;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef volatile struct S1414 T1414;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef volatile struct S1415 T1415;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef volatile struct S1416 T1416;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef volatile struct S1417 T1417;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_STANDALONE_CLOSURE] */
typedef volatile struct S1419 T1419;

/* SPECIAL [ET_STANDALONE_CLOSURE] */
typedef volatile struct S1420 T1420;

/* KL_SPECIAL_ROUTINES [ET_STANDALONE_CLOSURE] */
typedef volatile struct S1421 T1421;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef volatile struct S1422 T1422;

/* SPECIAL [ET_CONSTANT] */
typedef volatile struct S1423 T1423;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef volatile struct S1425 T1425;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
typedef volatile struct S1426 T1426;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef volatile struct S1427 T1427;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef volatile struct S1429 T1429;

/* SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef volatile struct S1430 T1430;

/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1432 T1432;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef volatile struct S1433 T1433;

/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef volatile struct S1434 T1434;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef volatile struct S1435 T1435;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef volatile struct S1436 T1436;

/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
typedef volatile struct S1437 T1437;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
typedef volatile struct S1438 T1438;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
typedef volatile struct S1439 T1439;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef volatile struct S1440 T1440;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
typedef volatile struct S1441 T1441;

/* TYPE [ET_DYNAMIC_FEATURE] */
#define T1443 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef volatile struct S1444 T1444;

/* TYPED_POINTER [ANY] */
typedef volatile struct S1447 T1447;
extern T0* GE_boxed1447(TC* ac, T1447 a1);
extern T0* GE_boxed_pointer1447(TC* ac, T1447* a1);
typedef volatile struct Sb1447 Tb1447;

/* SPECIAL [DS_ARRAYED_LIST [STRING_8]] */
typedef volatile struct S1448 T1448;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]] */
typedef volatile struct S1449 T1449;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]] */
typedef volatile struct S1450 T1450;

/* SPECIAL [TUPLE [STRING_8, detachable STRING_8]] */
typedef volatile struct S1451 T1451;

/* KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]] */
typedef volatile struct S1453 T1453;

/* DS_HASH_TABLE_CURSOR [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
typedef volatile struct S1454 T1454;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1455 T1455;

/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
typedef volatile struct S1456 T1456;

/* ARRAY [BOOLEAN] */
typedef volatile struct S1457 T1457;

/* THREAD_ATTRIBUTES */
typedef volatile struct S1459 T1459;

/* CELL [BOOLEAN] */
typedef volatile struct S1460 T1460;

/* CHARACTER_PROPERTY */
typedef volatile struct S1462 T1462;

/* ET_SYSTEM_ERROR */
typedef volatile struct S1463 T1463;

/* ET_INTERNAL_ERROR */
typedef volatile struct S1464 T1464;

/* ET_SYNTAX_ERROR */
typedef volatile struct S1465 T1465;

/* ET_VALIDITY_ERROR */
typedef volatile struct S1466 T1466;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef volatile struct S1467 T1467;

/* ET_LOCAL_COMMA_VARIABLE */
typedef volatile struct S1468 T1468;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef volatile struct S1469 T1469;

/* ET_KEYWORD_EXPRESSION */
typedef volatile struct S1471 T1471;

/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef volatile struct S1474 T1474;

/* SPECIAL [ET_CREATOR] */
typedef volatile struct S1475 T1475;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef volatile struct S1476 T1476;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef volatile struct S1477 T1477;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef volatile struct S1478 T1478;

/* ET_ECF_NOTE_ELEMENT */
typedef volatile struct S1479 T1479;

/* ET_ECF_ADAPTED_LIBRARIES */
typedef volatile struct S1480 T1480;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef volatile struct S1481 T1481;

/* ET_ECF_FILE_RULES */
typedef volatile struct S1482 T1482;

/* ET_ECF_NAMESPACES */
typedef volatile struct S1483 T1483;

/* ET_ECF_EXTERNAL_CFLAGS */
typedef volatile struct S1484 T1484;

/* ET_ECF_EXTERNAL_INCLUDES */
typedef volatile struct S1485 T1485;

/* ET_ECF_EXTERNAL_LIBRARIES */
typedef volatile struct S1486 T1486;

/* ET_ECF_EXTERNAL_LINKER_FLAGS */
typedef volatile struct S1487 T1487;

/* ET_ECF_EXTERNAL_MAKES */
typedef volatile struct S1488 T1488;

/* ET_ECF_EXTERNAL_OBJECTS */
typedef volatile struct S1489 T1489;

/* ET_ECF_EXTERNAL_RESOURCES */
typedef volatile struct S1490 T1490;

/* DS_ARRAYED_LIST [ET_ECF_ACTION] */
typedef volatile struct S1491 T1491;

/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
typedef volatile struct S1492 T1492;

/* ET_ECF_VERSION */
typedef volatile struct S1494 T1494;

/* ET_ECF_NAMESPACE */
typedef volatile struct S1495 T1495;

/* ET_ECF_EXTERNAL_CFLAG */
typedef volatile struct S1496 T1496;

/* ET_ECF_EXTERNAL_INCLUDE */
typedef volatile struct S1497 T1497;

/* ET_ECF_EXTERNAL_LIBRARY */
typedef volatile struct S1498 T1498;

/* ET_ECF_EXTERNAL_LINKER_FLAG */
typedef volatile struct S1499 T1499;

/* ET_ECF_EXTERNAL_MAKE */
typedef volatile struct S1500 T1500;

/* ET_ECF_EXTERNAL_OBJECT */
typedef volatile struct S1501 T1501;

/* ET_ECF_EXTERNAL_RESOURCE */
typedef volatile struct S1502 T1502;

/* ET_ECF_FILE_RULE */
typedef volatile struct S1503 T1503;

/* ET_ECF_ACTION */
typedef volatile struct S1504 T1504;

/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
typedef volatile struct S1505 T1505;

/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
typedef volatile struct S1506 T1506;

/* TUPLE [ET_ECF_OPTIONS] */
typedef volatile struct S1507 T1507;

/* PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
typedef volatile struct S1508 T1508;

/* ET_ECF_ROOT_CLASS */
typedef volatile struct S1509 T1509;

/* ET_ECF_ROOT_ALL_CLASSES */
typedef volatile struct S1510 T1510;

/* ET_ECF_ORED_CONDITIONS */
typedef volatile struct S1511 T1511;

/* ET_ECF_ANDED_CONDITIONS */
typedef volatile struct S1512 T1512;

/* ET_ECF_VISIBLE_CLASS */
typedef volatile struct S1513 T1513;

/* ET_ECF_BUILD_CONDITION */
typedef volatile struct S1515 T1515;

/* ET_ECF_CONCURRENCY_CONDITION */
typedef volatile struct S1516 T1516;

/* ET_ECF_VOID_SAFETY_CONDITION */
typedef volatile struct S1517 T1517;

/* ET_ECF_CUSTOM_CONDITION */
typedef volatile struct S1518 T1518;

/* ET_ECF_DOTNET_CONDITION */
typedef volatile struct S1519 T1519;

/* ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef volatile struct S1520 T1520;

/* ET_ECF_PLATFORM_CONDITION */
typedef volatile struct S1521 T1521;

/* ET_ECF_COMPILER_VERSION_CONDITION */
typedef volatile struct S1523 T1523;

/* ET_ECF_MSIL_CLR_VERSION_CONDITION */
typedef volatile struct S1524 T1524;

/* UT_COUNTER */
typedef volatile struct S1526 T1526;

/* KL_AGENT_ROUTINES [ET_CLASS] */
typedef volatile struct S1527 T1527;

/* TUPLE [UT_COUNTER] */
typedef volatile struct S1528 T1528;

/* TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
typedef volatile struct S1529 T1529;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
typedef volatile struct S1530 T1530;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
typedef volatile struct S1531 T1531;

/* DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
typedef volatile struct S1533 T1533;

/* PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef volatile struct S1534 T1534;

/* TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
typedef volatile struct S1535 T1535;

/* TUPLE [ET_INTERNAL_UNIVERSE] */
typedef volatile struct S1536 T1536;

/* PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
typedef volatile struct S1537 T1537;

/* TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
typedef volatile struct S1538 T1538;

/* TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef volatile struct S1539 T1539;

/* TUPLE [ET_SYSTEM_PROCESSOR] */
typedef volatile struct S1540 T1540;

/* TUPLE [ET_CLUSTER] */
typedef volatile struct S1541 T1541;

/* PROCEDURE [TUPLE [ET_CLUSTER]] */
typedef volatile struct S1542 T1542;

/* TUPLE [ET_ECF_SYSTEM] */
typedef volatile struct S1543 T1543;

/* DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
typedef volatile struct S1544 T1544;

/* TUPLE [ET_AST_PROCESSOR] */
typedef volatile struct S1545 T1545;

/* TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef volatile struct S1546 T1546;

/* PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef volatile struct S1547 T1547;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef volatile struct S1548 T1548;

/* ET_FLATTENING_STATUS_CHECKER */
typedef volatile struct S1549 T1549;

/* ET_INTERFACE_STATUS_CHECKER */
typedef volatile struct S1550 T1550;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef volatile struct S1551 T1551;

/* TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
typedef volatile struct S1552 T1552;

/* TUPLE [ET_FLATTENING_STATUS_CHECKER] */
typedef volatile struct S1553 T1553;

/* TUPLE [ET_INTERFACE_STATUS_CHECKER] */
typedef volatile struct S1554 T1554;

/* TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef volatile struct S1555 T1555;

/* TUPLE [BOOLEAN] */
typedef volatile struct S1556 T1556;

/* TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
typedef volatile struct S1559 T1559;

/* TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
typedef volatile struct S1563 T1563;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
typedef volatile struct S1564 T1564;

/* ET_PARENTHESIS_EXPRESSION */
typedef volatile struct S1565 T1565;

/* TYPED_POINTER [NATURAL_8] */
typedef volatile struct S1566 T1566;
extern T0* GE_boxed1566(TC* ac, T1566 a1);
extern T0* GE_boxed_pointer1566(TC* ac, T1566* a1);
typedef volatile struct Sb1566 Tb1566;

/* TYPED_POINTER [NATURAL_16] */
typedef volatile struct S1567 T1567;
extern T0* GE_boxed1567(TC* ac, T1567 a1);
extern T0* GE_boxed_pointer1567(TC* ac, T1567* a1);
typedef volatile struct Sb1567 Tb1567;

/* DS_HASH_SET [ET_LIBRARY] */
typedef volatile struct S1568 T1568;

/* TUPLE [DS_HASH_SET [ET_LIBRARY]] */
typedef volatile struct S1569 T1569;

/* SPECIAL [ET_RENAME_ITEM] */
typedef volatile struct S1573 T1573;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef volatile struct S1574 T1574;

/* SPECIAL [ET_EXPORT] */
typedef volatile struct S1576 T1576;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef volatile struct S1577 T1577;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef volatile struct S1580 T1580;

/* ET_PARENT_FEATURE */
typedef volatile struct S1582 T1582;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef volatile struct S1583 T1583;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef volatile struct S1584 T1584;

/* ET_INHERITED_FEATURE */
typedef volatile struct S1585 T1585;

/* ET_REDECLARED_FEATURE */
typedef volatile struct S1587 T1587;

/* KL_CHARACTER_BUFFER */
typedef volatile struct S1595 T1595;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef volatile struct S1597 T1597;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef volatile struct S1598 T1598;

/* SPECIAL [ET_ALIAS_NAME] */
typedef volatile struct S1599 T1599;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef volatile struct S1600 T1600;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef volatile struct S1601 T1601;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef volatile struct S1603 T1603;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef volatile struct S1604 T1604;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef volatile struct S1605 T1605;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef volatile struct S1607 T1607;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef volatile struct S1608 T1608;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef volatile struct S1610 T1610;

/* SPECIAL [ET_ELSEIF_EXPRESSION] */
typedef volatile struct S1611 T1611;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
typedef volatile struct S1612 T1612;

/* SPECIAL [ET_ELSEIF_PART] */
typedef volatile struct S1613 T1613;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef volatile struct S1614 T1614;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef volatile struct S1615 T1615;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef volatile struct S1616 T1616;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef volatile struct S1617 T1617;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef volatile struct S1619 T1619;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef volatile struct S1620 T1620;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef volatile struct S1621 T1621;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef volatile struct S1622 T1622;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef volatile struct S1624 T1624;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef volatile struct S1626 T1626;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef volatile struct S1627 T1627;

/* SPECIAL [ET_NOTE_ITEM] */
typedef volatile struct S1629 T1629;

/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
typedef volatile struct S1630 T1630;

/* SPECIAL [ET_NOTE_TERM_ITEM] */
typedef volatile struct S1631 T1631;

/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
typedef volatile struct S1632 T1632;

/* SPECIAL [ET_PARENT_LIST] */
typedef volatile struct S1633 T1633;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef volatile struct S1634 T1634;

/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
typedef volatile struct S1636 T1636;

/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
typedef volatile struct S1637 T1637;

/* SPECIAL [ET_WHEN_EXPRESSION] */
typedef volatile struct S1638 T1638;

/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
typedef volatile struct S1639 T1639;

/* SPECIAL [ET_WHEN_PART] */
typedef volatile struct S1640 T1640;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef volatile struct S1641 T1641;

/* XM_LINKED_LIST [XM_ELEMENT_NODE] */
typedef volatile struct S1643 T1643;

/* UC_STRING_EQUALITY_TESTER */
typedef volatile struct S1645 T1645;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef volatile struct S1647 T1647;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef volatile struct S1648 T1648;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef volatile struct S1649 T1649;

/* XM_EIFFEL_INPUT_STREAM */
typedef volatile struct S1650 T1650;

/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
typedef volatile struct S1651 T1651;

/* DS_ARRAYED_LIST [ET_ECF_TARGET] */
typedef volatile struct S1652 T1652;

/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
typedef volatile struct S1653 T1653;

/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
typedef volatile struct S1654 T1654;

/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
typedef volatile struct S1656 T1656;

/* DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
typedef volatile struct S1657 T1657;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef volatile struct S1659 T1659;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef volatile struct S1662 T1662;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef volatile struct S1663 T1663;

/* INTEGER_OVERFLOW_CHECKER */
typedef volatile struct S1668 T1668;

/* CONSOLE */
typedef volatile struct S1669 T1669;

/* C_DATE */
typedef volatile struct S1670 T1670;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef volatile struct S1672 T1672;

/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
typedef volatile struct S1673 T1673;

/* SPECIAL [ET_ECF_NOTE_ELEMENT] */
typedef volatile struct S1674 T1674;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
typedef volatile struct S1675 T1675;

/* ET_DYNAMIC_TARGET_LIST */
typedef volatile struct S1677 T1677;

/* DS_ARRAYED_STACK [YY_BUFFER] */
typedef volatile struct S1678 T1678;

/* UT_SYNTAX_ERROR */
typedef volatile struct S1679 T1679;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef volatile struct S1680 T1680;

/* ARRAY [detachable STRING_8] */
typedef volatile struct S1681 T1681;

/* SPECIAL [ET_ADAPTED_LIBRARY] */
typedef volatile struct S1683 T1683;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
typedef volatile struct S1684 T1684;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
typedef volatile struct S1685 T1685;

/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef volatile struct S1686 T1686;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef volatile struct S1687 T1687;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef volatile struct S1688 T1688;

/* SPECIAL [ET_TYPE_ITEM] */
typedef volatile struct S1689 T1689;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef volatile struct S1690 T1690;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef volatile struct S1691 T1691;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef volatile struct S1692 T1692;

/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
typedef volatile struct S1694 T1694;

/* DS_ARRAYED_LIST [NATURAL_32] */
typedef volatile struct S1695 T1695;

/* ET_BASE_TYPE_CONSTRAINT_LIST */
typedef volatile struct S1696 T1696;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef volatile struct S1697 T1697;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef volatile struct S1698 T1698;

/* SPECIAL [ET_FEATURE_NAME] */
typedef volatile struct S1701 T1701;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef volatile struct S1702 T1702;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef volatile struct S1703 T1703;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef volatile struct S1705 T1705;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
typedef volatile struct S1706 T1706;

/* SPECIAL [ET_CLIENT_LIST] */
typedef volatile struct S1707 T1707;

/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
typedef volatile struct S1708 T1708;

/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
typedef volatile struct S1710 T1710;

/* KL_SPECIAL_ROUTINES [ET_CLIENT] */
typedef volatile struct S1711 T1711;

/* SPECIAL [ET_CLIENT] */
typedef volatile struct S1712 T1712;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef volatile struct S1713 T1713;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef volatile struct S1714 T1714;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef volatile struct S1715 T1715;

/* ET_REPLICATED_FEATURE */
typedef volatile struct S1717 T1717;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef volatile struct S1718 T1718;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef volatile struct S1719 T1719;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef volatile struct S1720 T1720;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef volatile struct S1721 T1721;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef volatile struct S1723 T1723;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef volatile struct S1725 T1725;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
typedef volatile struct S1726 T1726;

/* DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
typedef volatile struct S1727 T1727;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef volatile struct S1728 T1728;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef volatile struct S1729 T1729;

/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef volatile struct S1730 T1730;

/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
typedef volatile struct S1731 T1731;

/* TYPE [ET_FEATURE] */
#define T1732 EIF_TYPE_OBJ

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef volatile struct S1734 T1734;

/* TYPE [ET_CLASS] */
#define T1735 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef volatile struct S1736 T1736;

/* SPECIAL [ET_RENAME] */
typedef volatile struct S1737 T1737;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef volatile struct S1740 T1740;

/* TYPE [ET_RENAME] */
#define T1741 EIF_TYPE_OBJ

/* TYPE [ET_FEATURE_NAME] */
#define T1742 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
typedef volatile struct S1744 T1744;

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef volatile struct S1745 T1745;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef volatile struct S1746 T1746;

/* KL_SPECIAL_ROUTINES [NATURAL_8] */
typedef volatile struct S1749 T1749;

/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
typedef volatile struct S1750 T1750;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef volatile struct S1751 T1751;

/* DS_BILINKABLE [XM_POSITION] */
typedef volatile struct S1752 T1752;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef volatile struct S1753 T1753;

/* DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef volatile struct S1754 T1754;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef volatile struct S1755 T1755;

/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef volatile struct S1758 T1758;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef volatile struct S1759 T1759;

/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef volatile struct S1762 T1762;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef volatile struct S1763 T1763;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef volatile struct S1764 T1764;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef volatile struct S1765 T1765;

/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef volatile struct S1766 T1766;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef volatile struct S1767 T1767;

/* DS_BILINKABLE [STRING_8] */
typedef volatile struct S1768 T1768;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef volatile struct S1769 T1769;

/* DS_LINKED_QUEUE [detachable STRING_8] */
typedef volatile struct S1772 T1772;

/* DS_LINKED_QUEUE [STRING_8] */
typedef volatile struct S1773 T1773;

/* KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef volatile struct S1774 T1774;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef volatile struct S1775 T1775;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef volatile struct S1776 T1776;

/* SPECIAL [XM_NAMESPACE] */
typedef volatile struct S1777 T1777;

/* DS_LINKABLE [XM_DOCUMENT_NODE] */
typedef volatile struct S1778 T1778;

/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
typedef volatile struct S1780 T1780;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
typedef volatile struct S1781 T1781;

/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
typedef volatile struct S1783 T1783;

/* SPECIAL [ET_CALL_NAME] */
typedef volatile struct S1785 T1785;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
typedef volatile struct S1787 T1787;

/* KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
typedef volatile struct S1788 T1788;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
typedef volatile struct S1789 T1789;

/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
typedef volatile struct S1790 T1790;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
typedef volatile struct S1792 T1792;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
typedef volatile struct S1793 T1793;

/* SPECIAL [ET_SYSTEM_PROCESSOR] */
typedef volatile struct S1794 T1794;

/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
typedef volatile struct S1795 T1795;

/* DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
typedef volatile struct S1796 T1796;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
typedef volatile struct S1797 T1797;

/* SPECIAL [ET_ADAPTED_CLASS] */
typedef volatile struct S1799 T1799;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
typedef volatile struct S1800 T1800;

/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
typedef volatile struct S1801 T1801;

/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
typedef volatile struct S1802 T1802;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
typedef volatile struct S1803 T1803;

/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
typedef volatile struct S1804 T1804;

/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
typedef volatile struct S1805 T1805;

/* KL_SPECIAL_ROUTINES [NATURAL_64] */
typedef volatile struct S1810 T1810;

/* TYPE [NATURAL_64] */
#define T1811 EIF_TYPE_OBJ

/* TYPE [NATURAL_32] */
#define T1812 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S1814 T1814;

/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
typedef volatile struct S1815 T1815;

/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
typedef volatile struct S1816 T1816;

/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
typedef volatile struct S1817 T1817;

/* KL_STRING_INPUT_STREAM */
typedef volatile struct S1819 T1819;

/* UT_TRISTATE */
typedef volatile struct S1821 T1821;

/* KL_AGENT_ROUTINES [ANY] */
typedef volatile struct S1822 T1822;

/* TUPLE [UT_TRISTATE] */
typedef volatile struct S1823 T1823;

/* TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
typedef volatile struct S1824 T1824;

/* PREDICATE [TUPLE [ET_MASTER_CLASS]] */
typedef volatile struct S1825 T1825;

/* PREDICATE [TUPLE] */
typedef volatile struct S1826 T1826;

/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
typedef volatile struct S1828 T1828;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
typedef volatile struct S1829 T1829;

/* TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef volatile struct S1830 T1830;

/* KL_AGENT_ROUTINES [ET_UNIVERSE] */
typedef volatile struct S1831 T1831;

/* PREDICATE [TUPLE [ET_UNIVERSE]] */
typedef volatile struct S1832 T1832;

/* TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
typedef volatile struct S1833 T1833;

/* TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
typedef volatile struct S1834 T1834;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
typedef volatile struct S1836 T1836;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
typedef volatile struct S1837 T1837;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
typedef volatile struct S1838 T1838;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef volatile struct S1839 T1839;

/* TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
typedef volatile struct S1847 T1847;

/* DS_CELL [detachable ET_CLASS] */
typedef volatile struct S1848 T1848;

/* TUPLE [DS_CELL [detachable ET_CLASS]] */
typedef volatile struct S1849 T1849;

/* TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef volatile struct S1851 T1851;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef volatile struct S1853 T1853;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef volatile struct S1856 T1856;

/* TUPLE [ET_CLIENT_LIST] */
typedef volatile struct S1860 T1860;

/* ET_STANDARD_ONCE_KEYS */
typedef volatile struct S1864 T1864;

/* XM_COMMENT */
typedef volatile struct S1867 T1867;

/* XM_PROCESSING_INSTRUCTION */
typedef volatile struct S1868 T1868;

/* XM_CHARACTER_DATA */
typedef volatile struct S1869 T1869;

/* ET_PARENTHESIS_SYMBOL */
typedef volatile struct S1885 T1885;

/* ET_PARENTHESIS_INSTRUCTION */
typedef volatile struct S1888 T1888;

/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
typedef volatile struct S1892 T1892;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef volatile struct S1893 T1893;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef volatile struct S1894 T1894;

/* ET_INFIX_CAST_EXPRESSION */
typedef volatile struct S1896 T1896;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef volatile struct S1899 T1899;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef volatile struct S1900 T1900;

/* TYPE [ET_NESTED_TYPE_CONTEXT] */
#define T1902 EIF_TYPE_OBJ

/* TYPE [ET_ITERATION_COMPONENT] */
#define T1903 EIF_TYPE_OBJ

/* TYPE [ET_INLINE_SEPARATE_ARGUMENT] */
#define T1905 EIF_TYPE_OBJ

/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
typedef volatile struct S1908 T1908;

/* ET_BASE_TYPE_RENAME_CONSTRAINT */
typedef volatile struct S1910 T1910;

/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
typedef volatile struct S1913 T1913;

/* SPECIAL [NATURAL_16] */
typedef volatile struct S1922 T1922;

/* ARRAY [NATURAL_16] */
typedef volatile struct S1923 T1923;

/* ARRAY [NATURAL_32] */
typedef volatile struct S1924 T1924;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef volatile struct S1925 T1925;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef volatile struct S1926 T1926;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef volatile struct S1927 T1927;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
typedef volatile struct S1928 T1928;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef volatile struct S1929 T1929;

/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
typedef volatile struct S1930 T1930;

/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE] */
typedef volatile struct S1931 T1931;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
typedef volatile struct S1932 T1932;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
typedef volatile struct S1933 T1933;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
typedef volatile struct S1934 T1934;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef volatile struct S1935 T1935;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
typedef volatile struct S1936 T1936;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
typedef volatile struct S1937 T1937;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
typedef volatile struct S1938 T1938;

/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
typedef volatile struct S1939 T1939;

/* SPECIAL [ET_ECF_ACTION] */
typedef volatile struct S1940 T1940;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
typedef volatile struct S1941 T1941;

/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
typedef volatile struct S1942 T1942;

/* SPECIAL [ET_ECF_OPTIONS] */
typedef volatile struct S1943 T1943;

/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
typedef volatile struct S1946 T1946;

/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
typedef volatile struct S1947 T1947;

/* SPECIAL [ET_ECF_VISIBLE_CLASS] */
typedef volatile struct S1948 T1948;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
typedef volatile struct S1949 T1949;

/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
typedef volatile struct S1950 T1950;

/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
typedef volatile struct S1951 T1951;

/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef volatile struct S1952 T1952;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
typedef volatile struct S1953 T1953;

/* SPECIAL [ET_DOTNET_ASSEMBLY] */
typedef volatile struct S1954 T1954;

/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
typedef volatile struct S1956 T1956;

/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
typedef volatile struct S1958 T1958;

/* SPECIAL [ET_INTERNAL_UNIVERSE] */
typedef volatile struct S1959 T1959;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef volatile struct S1960 T1960;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef volatile struct S1961 T1961;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef volatile struct S1962 T1962;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef volatile struct S1963 T1963;

/* DS_HASH_SET_CURSOR [ET_LIBRARY] */
typedef volatile struct S1964 T1964;

/* KL_SPECIAL_ROUTINES [ET_LIBRARY] */
typedef volatile struct S1965 T1965;

/* SPECIAL [ET_LIBRARY] */
typedef volatile struct S1966 T1966;

/* LX_DFA_WILDCARD */
typedef volatile struct S1967 T1967;

/* DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
typedef volatile struct S1968 T1968;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef volatile struct S1971 T1971;

/* UC_UTF16_ROUTINES */
typedef volatile struct S1972 T1972;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
typedef volatile struct S1973 T1973;

/* SPECIAL [ET_ADAPTED_UNIVERSE] */
typedef volatile struct S1974 T1974;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
typedef volatile struct S1975 T1975;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
typedef volatile struct S1976 T1976;

/* SPECIAL [ET_ECF_TARGET_PARENT] */
typedef volatile struct S1977 T1977;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
typedef volatile struct S1978 T1978;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
typedef volatile struct S1979 T1979;

/* SPECIAL [ET_ECF_CLUSTER] */
typedef volatile struct S1980 T1980;

/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
typedef volatile struct S1981 T1981;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
typedef volatile struct S1982 T1982;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef volatile struct S1983 T1983;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef volatile struct S1984 T1984;

/* SPECIAL [YY_BUFFER] */
typedef volatile struct S1985 T1985;

/* KL_SPECIAL_ROUTINES [YY_BUFFER] */
typedef volatile struct S1986 T1986;

/* TYPE [detachable STRING_8] */
#define T1987 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef volatile struct S1988 T1988;

/* SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
typedef volatile struct S1989 T1989;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
typedef volatile struct S1990 T1990;

/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
typedef volatile struct S1991 T1991;

/* DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
typedef volatile struct S1992 T1992;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef volatile struct S1993 T1993;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef volatile struct S1994 T1994;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef volatile struct S1996 T1996;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef volatile struct S1997 T1997;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef volatile struct S1999 T1999;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef volatile struct S2000 T2000;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef volatile struct S2001 T2001;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef volatile struct S2002 T2002;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef volatile struct S2003 T2003;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef volatile struct S2004 T2004;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef volatile struct S2005 T2005;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef volatile struct S2006 T2006;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef volatile struct S2007 T2007;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef volatile struct S2008 T2008;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef volatile struct S2011 T2011;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef volatile struct S2012 T2012;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef volatile struct S2013 T2013;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef volatile struct S2014 T2014;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
typedef volatile struct S2015 T2015;

/* SPECIAL [ET_LIKE_FEATURE] */
typedef volatile struct S2016 T2016;

/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
typedef volatile struct S2017 T2017;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
typedef volatile struct S2018 T2018;

/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef volatile struct S2020 T2020;

/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef volatile struct S2021 T2021;

/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef volatile struct S2022 T2022;

/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef volatile struct S2023 T2023;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef volatile struct S2024 T2024;

/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef volatile struct S2025 T2025;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef volatile struct S2027 T2027;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef volatile struct S2028 T2028;

/* DS_LINKABLE [detachable STRING_8] */
typedef volatile struct S2029 T2029;

/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef volatile struct S2030 T2030;

/* ET_CLUSTER_ERROR */
typedef volatile struct S2031 T2031;

/* TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef volatile struct S2032 T2032;

/* TUPLE [ET_ECF_CLUSTER] */
typedef volatile struct S2033 T2033;

/* PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
typedef volatile struct S2034 T2034;

/* TUPLE [ET_ECF_TARGET, STRING_8] */
typedef volatile struct S2035 T2035;

/* TUPLE [ET_ECF_ADAPTED_LIBRARY] */
typedef volatile struct S2037 T2037;

/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
typedef volatile struct S2038 T2038;

/* TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef volatile struct S2039 T2039;

/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
typedef volatile struct S2040 T2040;

/* PROCEDURE [TUPLE [STRING_8]] */
typedef volatile struct S2043 T2043;

/* TUPLE [ET_ECF_OPTIONS, STRING_8] */
typedef volatile struct S2044 T2044;

/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
typedef volatile struct S2045 T2045;

/* ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef volatile struct S2046 T2046;

/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef volatile struct S2047 T2047;

/* ET_AST_PRETTY_PRINTER */
typedef volatile struct S2052 T2052;

/* KL_CHARACTER_ROUTINES */
typedef volatile struct S2054 T2054;

/* TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S2055 T2055;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef volatile struct S2056 T2056;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef volatile struct S2057 T2057;

/* TYPE [detachable DEVELOPER_EXCEPTION] */
#define T2058 EIF_TYPE_OBJ

/* TUPLE [ET_GROUP] */
typedef volatile struct S2065 T2065;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
typedef volatile struct S2066 T2066;

/* TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef volatile struct S2067 T2067;

/* ET_CONVERT_BUILTIN_EXPRESSION */
typedef volatile struct S2068 T2068;

/* ET_CONVERT_FROM_EXPRESSION */
typedef volatile struct S2069 T2069;

/* ET_CONVERT_TO_EXPRESSION */
typedef volatile struct S2070 T2070;

/* DS_LINKABLE [XM_ELEMENT_NODE] */
typedef volatile struct S2082 T2082;

/* TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
typedef volatile struct S2083 T2083;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef volatile struct S2086 T2086;

/* TUPLE [ET_ECF_EXTERNAL_CFLAG] */
typedef volatile struct S2092 T2092;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
typedef volatile struct S2093 T2093;

/* TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
typedef volatile struct S2094 T2094;

/* TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
typedef volatile struct S2095 T2095;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
typedef volatile struct S2096 T2096;

/* TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
typedef volatile struct S2097 T2097;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
typedef volatile struct S2098 T2098;

/* TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef volatile struct S2099 T2099;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
typedef volatile struct S2100 T2100;

/* TUPLE [ET_ECF_EXTERNAL_MAKE] */
typedef volatile struct S2101 T2101;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
typedef volatile struct S2102 T2102;

/* TUPLE [ET_ECF_EXTERNAL_OBJECT] */
typedef volatile struct S2103 T2103;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
typedef volatile struct S2104 T2104;

/* TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
typedef volatile struct S2105 T2105;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
typedef volatile struct S2106 T2106;

/* TUPLE [LX_WILDCARD] */
typedef volatile struct S2109 T2109;

/* PREDICATE [TUPLE [LX_WILDCARD]] */
typedef volatile struct S2110 T2110;

/* TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
typedef volatile struct S2111 T2111;

/* PREDICATE [TUPLE [STRING_8]] */
typedef volatile struct S2113 T2113;

/* TUPLE [KL_STRING_ROUTINES, STRING_8] */
typedef volatile struct S2114 T2114;

/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef volatile struct S2116 T2116;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef volatile struct S2118 T2118;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef volatile struct S2119 T2119;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
typedef volatile struct S2120 T2120;

/* SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
typedef volatile struct S2122 T2122;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
typedef volatile struct S2123 T2123;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
typedef volatile struct S2124 T2124;

/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef volatile struct S2125 T2125;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef volatile struct S2126 T2126;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef volatile struct S2127 T2127;

/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
typedef volatile struct S2128 T2128;

/* SPECIAL [ET_ECF_FILE_RULE] */
typedef volatile struct S2129 T2129;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
typedef volatile struct S2130 T2130;

/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE] */
typedef volatile struct S2131 T2131;

/* SPECIAL [ET_ECF_NAMESPACE] */
typedef volatile struct S2132 T2132;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE] */
typedef volatile struct S2133 T2133;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
typedef volatile struct S2134 T2134;

/* SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
typedef volatile struct S2135 T2135;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
typedef volatile struct S2136 T2136;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
typedef volatile struct S2137 T2137;

/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
typedef volatile struct S2138 T2138;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
typedef volatile struct S2139 T2139;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
typedef volatile struct S2140 T2140;

/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
typedef volatile struct S2141 T2141;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
typedef volatile struct S2142 T2142;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef volatile struct S2143 T2143;

/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef volatile struct S2144 T2144;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef volatile struct S2145 T2145;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
typedef volatile struct S2146 T2146;

/* SPECIAL [ET_ECF_EXTERNAL_MAKE] */
typedef volatile struct S2147 T2147;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
typedef volatile struct S2148 T2148;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
typedef volatile struct S2149 T2149;

/* SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
typedef volatile struct S2150 T2150;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
typedef volatile struct S2151 T2151;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
typedef volatile struct S2152 T2152;

/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
typedef volatile struct S2153 T2153;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
typedef volatile struct S2154 T2154;

/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
typedef volatile struct S2155 T2155;

/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
typedef volatile struct S2156 T2156;

/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
typedef volatile struct S2157 T2157;

/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
typedef volatile struct S2158 T2158;

/* SPECIAL [ET_ECF_ANDED_CONDITIONS] */
typedef volatile struct S2159 T2159;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
typedef volatile struct S2160 T2160;

/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
typedef volatile struct S2161 T2161;

/* SPECIAL [ET_ECF_CONDITION_ITEM] */
typedef volatile struct S2162 T2162;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
typedef volatile struct S2163 T2163;

/* LX_WILDCARD_PARSER */
typedef volatile struct S2165 T2165;

/* LX_DESCRIPTION */
typedef volatile struct S2166 T2166;

/* LX_FULL_DFA */
typedef volatile struct S2167 T2167;

/* SPECIAL [LX_WILDCARD] */
typedef volatile struct S2169 T2169;

/* KL_SPECIAL_ROUTINES [LX_WILDCARD] */
typedef volatile struct S2172 T2172;

/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
typedef volatile struct S2173 T2173;

/* DS_LINKABLE [CHARACTER_8] */
typedef volatile struct S2174 T2174;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
typedef volatile struct S2176 T2176;

/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef volatile struct S2177 T2177;

/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef volatile struct S2180 T2180;

/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef volatile struct S2181 T2181;

/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef volatile struct S2182 T2182;

/* ARRAYED_LIST [INTEGER_32] */
typedef volatile struct S2183 T2183;

/* ET_UNIVERSE_ERROR */
typedef volatile struct S2184 T2184;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef volatile struct S2185 T2185;

/* AP_OPTION_COMPARATOR */
typedef volatile struct S2186 T2186;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef volatile struct S2187 T2187;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef volatile struct S2190 T2190;

/* ET_ACTUAL_PARAMETER_SUBLIST */
typedef volatile struct S2191 T2191;

/* TUPLE [ET_ECF_FILE_RULE] */
typedef volatile struct S2194 T2194;

/* PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
typedef volatile struct S2195 T2195;

/* PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
typedef volatile struct S2197 T2197;

/* TUPLE [ET_ECF_FILE_RULES] */
typedef volatile struct S2198 T2198;

/* TUPLE [ET_ECF_STATE] */
typedef volatile struct S2199 T2199;

/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
typedef volatile struct S2202 T2202;

/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
typedef volatile struct S2205 T2205;

/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
typedef volatile struct S2206 T2206;

/* ET_COMMENT_FINDER */
typedef volatile struct S2208 T2208;

/* DS_ARRAYED_LIST [ET_BREAK] */
typedef volatile struct S2209 T2209;

/* TUPLE [ET_BREAK] */
typedef volatile struct S2210 T2210;

/* PROCEDURE [TUPLE [ET_BREAK]] */
typedef volatile struct S2211 T2211;

/* TUPLE [ET_AST_PRETTY_PRINTER] */
typedef volatile struct S2212 T2212;

/* DS_ARRAYED_LIST [LX_RULE] */
typedef volatile struct S2213 T2213;

/* LX_START_CONDITIONS */
typedef volatile struct S2214 T2214;

/* LX_ACTION_FACTORY */
typedef volatile struct S2215 T2215;

/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
typedef volatile struct S2216 T2216;

/* LX_SYMBOL_CLASS */
typedef volatile struct S2217 T2217;

/* DS_HASH_TABLE [STRING_32, STRING_8] */
typedef volatile struct S2218 T2218;

/* DS_HASH_SET [LX_SYMBOL_CLASS] */
typedef volatile struct S2219 T2219;

/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
typedef volatile struct S2220 T2220;

/* KL_EQUALITY_TESTER [STRING_32] */
typedef volatile struct S2221 T2221;

/* DS_ARRAYED_STACK [BOOLEAN] */
typedef volatile struct S2222 T2222;

/* KL_SPECIAL_ROUTINES [STRING_32] */
typedef volatile struct S2223 T2223;

/* SPECIAL [STRING_32] */
typedef volatile struct S2224 T2224;

/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
typedef volatile struct S2225 T2225;

/* SPECIAL [LX_SYMBOL_CLASS] */
typedef volatile struct S2226 T2226;

/* KL_SPECIAL_ROUTINES [LX_NFA] */
typedef volatile struct S2227 T2227;

/* LX_NFA */
typedef volatile struct S2228 T2228;

/* SPECIAL [LX_NFA] */
typedef volatile struct S2229 T2229;

/* LX_RULE */
typedef volatile struct S2230 T2230;

/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
typedef volatile struct S2231 T2231;

/* LX_EQUIVALENCE_CLASSES */
typedef volatile struct S2232 T2232;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef volatile struct S2233 T2233;

/* LX_INVALID_UNICODE_CHARACTER_ERROR */
typedef volatile struct S2234 T2234;

/* LX_MISSING_QUOTE_ERROR */
typedef volatile struct S2235 T2235;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef volatile struct S2236 T2236;

/* LX_BAD_CHARACTER_ERROR */
typedef volatile struct S2237 T2237;

/* LX_FULL_AND_META_ERROR */
typedef volatile struct S2238 T2238;

/* LX_FULL_AND_REJECT_ERROR */
typedef volatile struct S2239 T2239;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef volatile struct S2240 T2240;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef volatile struct S2241 T2241;

/* ARRAY [LX_RULE] */
typedef volatile struct S2242 T2242;

/* SPECIAL [LX_RULE] */
typedef volatile struct S2243 T2243;

/* LX_DFA_STATE */
typedef volatile struct S2244 T2244;

/* DS_ARRAYED_LIST [LX_NFA_STATE] */
typedef volatile struct S2245 T2245;

/* DS_ARRAYED_LIST [LX_DFA_STATE] */
typedef volatile struct S2246 T2246;

/* LX_SYMBOL_PARTITIONS */
typedef volatile struct S2247 T2247;

/* KL_ARRAY_ROUTINES [LX_RULE] */
typedef volatile struct S2248 T2248;

/* ARRAY [detachable LX_RULE] */
typedef volatile struct S2249 T2249;

/* SPECIAL [detachable LX_RULE] */
typedef volatile struct S2250 T2250;

/* LX_START_CONDITION */
typedef volatile struct S2251 T2251;

/* LX_TRANSITION_TABLE [LX_DFA_STATE] */
typedef volatile struct S2252 T2252;

/* DS_ARRAYED_LIST [LX_NFA] */
typedef volatile struct S2253 T2253;

/* DS_HASH_TABLE [LX_NFA, INTEGER_32] */
typedef volatile struct S2254 T2254;

/* LX_NFA_STATE */
typedef volatile struct S2255 T2255;

/* TYPE [detachable RX_REGULAR_EXPRESSION] */
#define T2259 EIF_TYPE_OBJ

/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef volatile struct S2261 T2261;

/* TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
typedef volatile struct S2262 T2262;

/* PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
typedef volatile struct S2263 T2263;

/* TUPLE [DS_HASH_SET [STRING_8]] */
typedef volatile struct S2266 T2266;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef volatile struct S2268 T2268;

/* ARRAY [detachable LX_SYMBOL_CLASS] */
typedef volatile struct S2269 T2269;

/* SPECIAL [detachable LX_SYMBOL_CLASS] */
typedef volatile struct S2270 T2270;

/* ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
typedef volatile struct S2271 T2271;

/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
typedef volatile struct S2272 T2272;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef volatile struct S2273 T2273;

/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
typedef volatile struct S2274 T2274;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef volatile struct S2275 T2275;

/* ET_AST_NULL_LEAF */
typedef volatile struct S2276 T2276;

/* DS_ARRAYED_LIST [ET_AST_NODE] */
typedef volatile struct S2277 T2277;

/* SPECIAL [ET_BREAK] */
typedef volatile struct S2279 T2279;

/* KL_SPECIAL_ROUTINES [ET_BREAK] */
typedef volatile struct S2280 T2280;

/* DS_ARRAYED_LIST_CURSOR [ET_BREAK] */
typedef volatile struct S2281 T2281;

/* KL_SPECIAL_ROUTINES [LX_RULE] */
typedef volatile struct S2282 T2282;

/* DS_ARRAYED_LIST_CURSOR [LX_RULE] */
typedef volatile struct S2283 T2283;

/* KL_ARRAY_ROUTINES [STRING_8] */
typedef volatile struct S2284 T2284;

/* SPECIAL [LX_START_CONDITION] */
typedef volatile struct S2285 T2285;

/* KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
typedef volatile struct S2286 T2286;

/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
typedef volatile struct S2287 T2287;

/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
typedef volatile struct S2288 T2288;

/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
typedef volatile struct S2289 T2289;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
typedef volatile struct S2291 T2291;

/* DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
typedef volatile struct S2292 T2292;

/* SPECIAL [detachable SPECIAL [NATURAL_64]] */
typedef volatile struct S2293 T2293;

/* DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
typedef volatile struct S2295 T2295;

/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
typedef volatile struct S2297 T2297;

/* LX_EPSILON_TRANSITION [LX_NFA_STATE] */
typedef volatile struct S2298 T2298;

/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
typedef volatile struct S2301 T2301;

/* LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
typedef volatile struct S2302 T2302;

/* LX_ACTION */
typedef volatile struct S2304 T2304;

/* ARRAY [DS_BILINKABLE [INTEGER_32]] */
typedef volatile struct S2305 T2305;

/* DS_BILINKABLE [INTEGER_32] */
typedef volatile struct S2306 T2306;

/* SPECIAL [DS_BILINKABLE [INTEGER_32]] */
typedef volatile struct S2307 T2307;

/* DS_BUBBLE_SORTER [LX_NFA_STATE] */
typedef volatile struct S2308 T2308;

/* DS_BUBBLE_SORTER [LX_RULE] */
typedef volatile struct S2310 T2310;

/* SPECIAL [LX_NFA_STATE] */
typedef volatile struct S2312 T2312;

/* KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
typedef volatile struct S2314 T2314;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
typedef volatile struct S2315 T2315;

/* SPECIAL [LX_DFA_STATE] */
typedef volatile struct S2317 T2317;

/* KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
typedef volatile struct S2318 T2318;

/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
typedef volatile struct S2319 T2319;

/* KL_ARRAY [LX_RULE] */
typedef volatile struct S2320 T2320;

/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
typedef volatile struct S2321 T2321;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA] */
typedef volatile struct S2322 T2322;

/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
typedef volatile struct S2324 T2324;

/* TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef volatile struct S2325 T2325;

/* TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef volatile struct S2326 T2326;

/* TUPLE [ET_ECF_LIBRARY] */
typedef volatile struct S2327 T2327;

/* TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef volatile struct S2329 T2329;

/* KL_COMPARABLE_COMPARATOR [LX_RULE] */
typedef volatile struct S2334 T2334;

/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
typedef volatile struct S2337 T2337;

/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef volatile struct S2340 T2340;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef volatile struct S2341 T2341;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef volatile struct S2342 T2342;

/* DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
typedef volatile struct S2343 T2343;

/* SPECIAL [ET_AST_NODE] */
typedef volatile struct S2345 T2345;

/* KL_SPECIAL_ROUTINES [ET_AST_NODE] */
typedef volatile struct S2346 T2346;

/* DS_ARRAYED_LIST_CURSOR [ET_AST_NODE] */
typedef volatile struct S2347 T2347;

/* KL_ARRAY [STRING_8] */
typedef volatile struct S2348 T2348;

/* DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
typedef volatile struct S2350 T2350;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile* volatile p1; /* pointer */
	T1 volatile z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile* volatile p1; /* pointer */
	T2 volatile z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T3 volatile* volatile p1; /* pointer */
	T3 volatile z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T4 volatile* volatile p1; /* pointer */
	T4 volatile z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T5 volatile* volatile p1; /* pointer */
	T5 volatile z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile* volatile p1; /* pointer */
	T6 volatile z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T7 volatile* volatile p1; /* pointer */
	T7 volatile z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T8 volatile* volatile p1; /* pointer */
	T8 volatile z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T9 volatile* volatile p1; /* pointer */
	T9 volatile z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T10 volatile* volatile p1; /* pointer */
	T10 volatile z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T11 volatile* volatile p1; /* pointer */
	T11 volatile z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T12 volatile* volatile p1; /* pointer */
	T12 volatile z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T13 volatile* volatile p1; /* pointer */
	T13 volatile z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile* volatile p1; /* pointer */
	T14 volatile z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S40 {
	char volatile dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb40 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T40* volatile p1; /* pointer */
	T40 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_16] */
struct S1567 {
	T14 volatile a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_16] */
struct Sb1567 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1567* volatile p1; /* pointer */
	T1567 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1566 {
	T14 volatile a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_8] */
struct Sb1566 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1566* volatile p1; /* pointer */
	T1566 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S1447 {
	T14 volatile a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [ANY] */
struct Sb1447 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1447* volatile p1; /* pointer */
	T1447 z1; /* item */
};

/* Struct for type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct S1076 {
	T14 volatile a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct Sb1076 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1076* volatile p1; /* pointer */
	T1076 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T2 volatile z2[]; /* item */
};

/* Struct for type SPECIAL [CHARACTER_32] */
struct S16 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T3 volatile z2[]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* count */
	T6 volatile a3; /* internal_hash_code */
	T6 volatile a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type STRING_32 */
struct S18 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* count */
	T6 volatile a3; /* internal_hash_code */
	T6 volatile a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type IMMUTABLE_STRING_32 */
struct S20 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* count */
	T6 volatile a3; /* area_lower */
	T6 volatile a4; /* internal_hash_code */
};

/* Struct for type ISE_EXCEPTION_MANAGER */
struct S21 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type GEC */
struct S26 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* exit_code */
	T0* volatile a2; /* error_handler */
	T0* volatile a3; /* version_flag */
	T0* volatile a4; /* input_filename */
	T0* volatile a5; /* override_root_type */
	T0* volatile a6; /* last_system */
	T0* volatile a7; /* target_option */
	T0* volatile a8; /* setting_option */
	T0* volatile a9; /* capability_option */
	T0* volatile a10; /* variable_option */
	T0* volatile a11; /* finalize_flag */
	T0* volatile a12; /* gelint_flag */
	T0* volatile a13; /* ise_option */
	T0* volatile a14; /* catcall_option */
	T0* volatile a15; /* c_compile_option */
	T0* volatile a16; /* split_option */
	T0* volatile a17; /* split_size_option */
	T0* volatile a18; /* new_instance_types_option */
	T0* volatile a19; /* gc_option */
	T0* volatile a20; /* thread_option */
	T0* volatile a21; /* silent_flag */
	T0* volatile a22; /* no_benchmark_flag */
	T0* volatile a23; /* nested_benchmark_flag */
	T0* volatile a24; /* metrics_flag */
	T0* volatile a25; /* verbose_flag */
	T0* volatile a26; /* ise_version */
	T0* volatile a27; /* override_root_cluster_pathname */
	T0* volatile a28; /* override_root_creation */
	T0* volatile a29; /* override_settings */
	T0* volatile a30; /* override_capabilities */
	T0* volatile a31; /* override_variables */
	T1 volatile a32; /* ecf_gelint_option */
	T0* volatile a33; /* ecf_scoop_exceptions_option */
	T0* volatile a34; /* new_instance_types */
	T6 volatile a35; /* split_size */
};

/* Struct for type CELL [detachable EXCEPTION] */
struct S27 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
};

/* Struct for type HASH_TABLE [INTEGER_32, INTEGER_32] */
struct S28 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T0* volatile a2; /* content */
	T0* volatile a3; /* keys */
	T0* volatile a4; /* deleted_marks */
	T0* volatile a5; /* indexes_map */
	T6 volatile a6; /* iteration_position */
	T6 volatile a7; /* count */
	T6 volatile a8; /* deleted_item_position */
	T6 volatile a9; /* control */
	T6 volatile a10; /* found_item */
	T1 volatile a11; /* has_default */
	T6 volatile a12; /* item_position */
	T6 volatile a13; /* ht_lowest_deleted_position */
	T6 volatile a14; /* ht_deleted_item */
	T6 volatile a15; /* ht_deleted_key */
	T1 volatile a16; /* object_comparison */
};

/* Struct for type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
struct S29 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
};

/* Struct for type CELL [NO_MORE_MEMORY] */
struct S30 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
};

/* Struct for type C_STRING */
struct S31 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* managed_data */
	T6 volatile a2; /* count */
};

/* Struct for type TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
struct S32 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile z1;
	T6 volatile z2;
	T6 volatile z3;
	T0* volatile z4;
	T0* volatile z5;
	T0* volatile z6;
	T0* volatile z7;
	T0* volatile z8;
	T0* volatile z9;
	T6 volatile z10;
	T1 volatile z11;
};

/* Struct for type KL_ARGUMENTS */
struct S33 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* program_name */
};

/* Struct for type ARRAY [STRING_8] */
struct S34 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type SPECIAL [STRING_8] */
struct S35 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_EXCEPTIONS */
struct S36 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type EXCEPTIONS */
struct S37 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_STANDARD_FILES */
struct S38 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_STDERR_FILE */
struct S39 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ERROR_HANDLER */
struct S42 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_error */
	T0* volatile a2; /* info_file */
	T0* volatile a3; /* mutex */
	T0* volatile a4; /* error_file */
	T0* volatile a5; /* warning_file */
	T1 volatile a6; /* is_ise */
	T1 volatile a7; /* is_verbose */
	T1 volatile a8; /* has_eiffel_error */
	T1 volatile a9; /* has_internal_error */
	T1 volatile a10; /* is_ge */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S43 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T1 volatile a2; /* end_of_file */
	T0* volatile a3; /* last_string */
	T6 volatile a4; /* mode */
	T0* volatile a5; /* internal_name */
	T0* volatile a6; /* internal_detachable_name_pointer */
	T0* volatile a7; /* character_buffer */
	T2 volatile a8; /* last_character */
	T14 volatile a9; /* file_pointer */
	T1 volatile a10; /* descriptor_available */
	T0* volatile a11; /* last_string_32 */
};

/* Struct for type UT_GOBO_VARIABLES */
struct S44 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type UT_ISE_VARIABLES */
struct S45 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type AP_FLAG */
struct S46 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* occurrences */
	T0* volatile a2; /* description */
	T0* volatile a3; /* long_form */
	T2 volatile a4; /* short_form */
	T1 volatile a5; /* has_short_form */
	T1 volatile a6; /* is_hidden */
	T1 volatile a7; /* is_mandatory */
	T6 volatile a8; /* maximum_occurrences */
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S49 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_SYSTEM */
struct S50 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* register_class_mutex */
	T0* volatile a2; /* external_include_pathnames */
	T0* volatile a3; /* external_object_pathnames */
	T0* volatile a4; /* external_library_pathnames */
	T0* volatile a5; /* external_make_pathnames */
	T0* volatile a6; /* external_resource_pathnames */
	T0* volatile a7; /* external_cflags */
	T0* volatile a8; /* external_linker_flags */
	T1 volatile a9; /* console_application_mode */
	T1 volatile a10; /* total_order_on_reals_mode */
	T0* volatile a11; /* current_system */
	T0* volatile a12; /* universe */
	T0* volatile a13; /* name */
	T0* volatile a14; /* libraries */
	T0* volatile a15; /* clusters */
	T0* volatile a16; /* dotnet_assemblies */
	T0* volatile a17; /* implicit_attachment_type_mark */
	T0* volatile a18; /* master_classes */
	T0* volatile a19; /* master_class_mutex */
	T0* volatile a20; /* system_name */
	T0* volatile a21; /* any_type */
	T0* volatile a22; /* detachable_any_type */
	T0* volatile a23; /* detachable_separate_any_type */
	T0* volatile a24; /* any_parent */
	T0* volatile a25; /* any_parents */
	T0* volatile a26; /* any_clients */
	T0* volatile a27; /* tuple_type */
	T0* volatile a28; /* detachable_tuple_type */
	T0* volatile a29; /* tuple_identity_type */
	T0* volatile a30; /* unfolded_empty_tuple_actual_parameters */
	T0* volatile a31; /* array_any_type */
	T0* volatile a32; /* array_detachable_any_type */
	T0* volatile a33; /* array_none_type */
	T0* volatile a34; /* array_identity_type */
	T0* volatile a35; /* boolean_type */
	T0* volatile a36; /* character_type */
	T0* volatile a37; /* character_8_type */
	T0* volatile a38; /* character_8_convert_feature */
	T0* volatile a39; /* character_32_type */
	T0* volatile a40; /* character_32_convert_feature */
	T0* volatile a41; /* double_type */
	T0* volatile a42; /* exception_type */
	T0* volatile a43; /* detachable_exception_type */
	T0* volatile a44; /* exception_manager_type */
	T0* volatile a45; /* function_identity_any_type */
	T0* volatile a46; /* immutable_string_8_type */
	T0* volatile a47; /* immutable_string_32_type */
	T0* volatile a48; /* integer_type */
	T0* volatile a49; /* integer_8_type */
	T0* volatile a50; /* integer_8_convert_feature */
	T0* volatile a51; /* integer_16_type */
	T0* volatile a52; /* integer_16_convert_feature */
	T0* volatile a53; /* integer_32_type */
	T0* volatile a54; /* integer_32_convert_feature */
	T0* volatile a55; /* integer_64_type */
	T0* volatile a56; /* integer_64_convert_feature */
	T0* volatile a57; /* ise_exception_manager_type */
	T0* volatile a58; /* iterable_detachable_separate_any_type */
	T0* volatile a59; /* natural_type */
	T0* volatile a60; /* natural_8_type */
	T0* volatile a61; /* natural_8_convert_feature */
	T0* volatile a62; /* natural_16_type */
	T0* volatile a63; /* natural_16_convert_feature */
	T0* volatile a64; /* natural_32_type */
	T0* volatile a65; /* natural_32_convert_feature */
	T0* volatile a66; /* natural_64_type */
	T0* volatile a67; /* natural_64_convert_feature */
	T0* volatile a68; /* none_type */
	T0* volatile a69; /* detachable_none_type */
	T0* volatile a70; /* pointer_type */
	T0* volatile a71; /* predicate_identity_type */
	T0* volatile a72; /* procedure_identity_type */
	T0* volatile a73; /* real_type */
	T0* volatile a74; /* real_32_type */
	T0* volatile a75; /* real_32_convert_feature */
	T0* volatile a76; /* real_64_type */
	T0* volatile a77; /* real_64_convert_feature */
	T0* volatile a78; /* routine_identity_type */
	T0* volatile a79; /* special_any_type */
	T0* volatile a80; /* special_detachable_any_type */
	T0* volatile a81; /* special_identity_type */
	T0* volatile a82; /* string_type */
	T0* volatile a83; /* detachable_string_type */
	T0* volatile a84; /* string_8_type */
	T0* volatile a85; /* detachable_string_8_type */
	T0* volatile a86; /* string_8_convert_feature */
	T0* volatile a87; /* string_32_type */
	T0* volatile a88; /* string_32_convert_feature */
	T0* volatile a89; /* system_object_type */
	T0* volatile a90; /* system_object_parents */
	T0* volatile a91; /* system_string_type */
	T0* volatile a92; /* type_detachable_any_type */
	T0* volatile a93; /* detachable_type_exception_type */
	T0* volatile a94; /* type_detachable_exception_type */
	T0* volatile a95; /* type_detachable_like_current_type */
	T0* volatile a96; /* type_identity_type */
	T0* volatile a97; /* typed_pointer_identity_type */
	T0* volatile a98; /* wide_character_type */
	T1 volatile a99; /* is_read_only */
	T6 volatile a100; /* registered_class_count */
	T1 volatile a101; /* use_obsolete_syntax_mode */
	T1 volatile a102; /* obsolete_iteration_mode */
	T1 volatile a103; /* attachment_type_conformance_mode */
	T1 volatile a104; /* scoop_mode */
	T6 volatile a105; /* is_equal_seed */
	T1 volatile a106; /* target_type_attachment_mode */
	T6 volatile a107; /* default_create_seed */
	T6 volatile a108; /* iterable_new_cursor_seed */
	T6 volatile a109; /* iteration_cursor_after_seed */
	T6 volatile a110; /* iteration_cursor_forth_seed */
	T6 volatile a111; /* iteration_cursor_item_seed */
	T1 volatile a112; /* is_dotnet */
	T6 volatile a113; /* copy_seed */
	T6 volatile a114; /* twin_seed */
	T6 volatile a115; /* routine_call_seed */
	T6 volatile a116; /* function_item_seed */
	T6 volatile a117; /* dispose_seed */
	T6 volatile a118; /* special_item_seed */
	T1 volatile a119; /* obsolete_routine_type_mode */
};

/* Struct for type AP_PARSER */
struct S52 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* options */
	T0* volatile a2; /* alternative_options_lists */
	T0* volatile a3; /* parameters */
	T0* volatile a4; /* parameters_description */
	T0* volatile a5; /* help_option */
	T0* volatile a6; /* error_handler */
	T0* volatile a7; /* application_description */
	T0* volatile a8; /* current_options */
	T1 volatile a9; /* is_first_option */
	T0* volatile a10; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S53 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_cell */
	T6 volatile a2; /* count */
	T0* volatile a3; /* first_cell */
	T0* volatile a4; /* introduction_option */
	T0* volatile a5; /* parameters_description */
	T0* volatile a6; /* internal_cursor */
};

/* Struct for type AP_STRING_OPTION */
struct S54 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
	T0* volatile a2; /* default_parameter */
	T0* volatile a3; /* description */
	T0* volatile a4; /* parameter_description */
	T1 volatile a5; /* has_default_parameter */
	T1 volatile a6; /* needs_parameter */
	T0* volatile a7; /* long_form */
	T1 volatile a8; /* is_hidden */
	T1 volatile a9; /* is_mandatory */
	T6 volatile a10; /* maximum_occurrences */
	T1 volatile a11; /* has_short_form */
	T2 volatile a12; /* short_form */
};

/* Struct for type UT_VERSION */
struct S56 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* internal_major */
	T6 volatile a2; /* internal_minor */
	T6 volatile a3; /* internal_revision */
	T6 volatile a4; /* internal_build */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S57 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
	T0* volatile a2; /* default_parameter */
	T0* volatile a3; /* description */
	T0* volatile a4; /* possible_values */
	T0* volatile a5; /* parameter_description */
	T1 volatile a6; /* needs_parameter */
	T0* volatile a7; /* long_form */
	T1 volatile a8; /* is_hidden */
	T1 volatile a9; /* is_mandatory */
	T6 volatile a10; /* maximum_occurrences */
	T1 volatile a11; /* has_short_form */
	T2 volatile a12; /* short_form */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S58 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
	T1 volatile a2; /* default_parameter */
	T0* volatile a3; /* description */
	T0* volatile a4; /* parameter_description */
	T1 volatile a5; /* needs_parameter */
	T0* volatile a6; /* long_form */
	T1 volatile a7; /* is_hidden */
	T1 volatile a8; /* is_mandatory */
	T6 volatile a9; /* maximum_occurrences */
	T1 volatile a10; /* has_short_form */
	T2 volatile a11; /* short_form */
};

/* Struct for type AP_INTEGER_OPTION */
struct S59 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
	T6 volatile a2; /* default_parameter */
	T0* volatile a3; /* description */
	T0* volatile a4; /* parameter_description */
	T1 volatile a5; /* needs_parameter */
	T0* volatile a6; /* long_form */
	T2 volatile a7; /* short_form */
	T1 volatile a8; /* is_hidden */
	T1 volatile a9; /* is_mandatory */
	T6 volatile a10; /* maximum_occurrences */
	T1 volatile a11; /* has_short_form */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S63 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_error */
	T0* volatile a2; /* info_file */
	T0* volatile a3; /* mutex */
	T0* volatile a4; /* error_file */
	T0* volatile a5; /* warning_file */
	T1 volatile a6; /* is_ise */
	T1 volatile a7; /* is_verbose */
	T1 volatile a8; /* has_eiffel_error */
	T1 volatile a9; /* has_internal_error */
	T1 volatile a10; /* is_ge */
};

/* Struct for type ET_AST_FACTORY */
struct S65 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_SYSTEM_PROCESSOR */
struct S66 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* eiffel_preparser */
	T0* volatile a2; /* master_class_checker */
	T0* volatile a3; /* eiffel_parser */
	T0* volatile a4; /* provider_checker */
	T0* volatile a5; /* ancestor_builder */
	T0* volatile a6; /* feature_flattener */
	T0* volatile a7; /* interface_checker */
	T0* volatile a8; /* implementation_checker */
	T0* volatile a9; /* error_handler */
	T0* volatile a10; /* processed_class_count_stack */
	T0* volatile a11; /* ast_factory */
	T0* volatile a12; /* dotnet_assembly_consumer */
	T0* volatile a13; /* ise_version */
	T0* volatile a14; /* ecma_version */
	T1 volatile a15; /* preparse_shallow_mode */
	T1 volatile a16; /* preparse_single_mode */
	T1 volatile a17; /* preparse_multiple_mode */
	T1 volatile a18; /* unknown_builtin_reported */
	T1 volatile a19; /* qualified_anchored_types_cycle_detection_enabled */
	T1 volatile a20; /* use_attribute_keyword */
	T1 volatile a21; /* use_note_keyword */
	T1 volatile a22; /* use_reference_keyword */
	T1 volatile a23; /* use_attached_keyword */
	T1 volatile a24; /* use_detachable_keyword */
	T1 volatile a25; /* benchmark_shown */
	T1 volatile a26; /* nested_benchmark_shown */
	T0* volatile a27; /* stop_request */
	T1 volatile a28; /* metrics_shown */
	T1 volatile a29; /* flat_mode */
	T1 volatile a30; /* flat_dbc_mode */
	T1 volatile a31; /* cluster_dependence_enabled */
	T6 volatile a32; /* postponed_class_count */
	T6 volatile a33; /* processed_class_count */
	T1 volatile a34; /* providers_enabled */
	T1 volatile a35; /* preparse_override_mode */
	T1 volatile a36; /* preparse_readonly_mode */
	T1 volatile a37; /* use_cluster_dependence_pathnames */
	T1 volatile a38; /* suppliers_enabled */
};

/* Struct for type ET_CLUSTER */
struct S67 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* pathname */
	T1 volatile a3; /* is_relative */
	T0* volatile a4; /* universe */
	T1 volatile a5; /* overridden_constraint_enabled */
	T1 volatile a6; /* scm_mapping_constraint_enabled */
	T0* volatile a7; /* subclusters */
	T1 volatile a8; /* use_obsolete_syntax */
	T1 volatile a9; /* is_override */
	T0* volatile a10; /* provider_constraint */
	T0* volatile a11; /* dependant_constraint */
	T0* volatile a12; /* scm_write_mapping */
	T0* volatile a13; /* parent */
	T1 volatile a14; /* is_read_only */
	T1 volatile a15; /* is_abstract */
	T0* volatile a16; /* cached_absolute_pathname */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S68 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* yy_parsing_status */
	T0* volatile a2; /* eiffel_buffer */
	T0* volatile a3; /* counters */
	T0* volatile a4; /* last_formal_arguments_stack */
	T0* volatile a5; /* last_local_variables_stack */
	T0* volatile a6; /* last_keywords */
	T0* volatile a7; /* last_symbols */
	T0* volatile a8; /* last_object_tests_stack */
	T0* volatile a9; /* last_object_tests_pool */
	T0* volatile a10; /* last_iteration_components_stack */
	T0* volatile a11; /* last_iteration_components_pool */
	T0* volatile a12; /* last_inline_separate_arguments_stack */
	T0* volatile a13; /* last_inline_separate_arguments_pool */
	T0* volatile a14; /* assertions */
	T0* volatile a15; /* assertion_counters */
	T0* volatile a16; /* assertion_kinds */
	T6 volatile a17; /* assertion_kind */
	T0* volatile a18; /* queries */
	T0* volatile a19; /* procedures */
	T0* volatile a20; /* constraints */
	T0* volatile a21; /* providers */
	T0* volatile a22; /* current_class */
	T0* volatile a23; /* system_processor */
	T0* volatile a24; /* group */
	T0* volatile a25; /* filename */
	T6 volatile a26; /* time_stamp */
	T0* volatile a27; /* input_buffer */
	T0* volatile a28; /* last_class */
	T6 volatile a29; /* last_text_count */
	T6 volatile a30; /* last_literal_start */
	T0* volatile a31; /* verbatim_marker */
	T6 volatile a32; /* verbatim_marker_count */
	T0* volatile a33; /* verbatim_open_white_characters */
	T0* volatile a34; /* verbatim_close_white_characters */
	T0* volatile a35; /* yyss */
	T6 volatile a36; /* yy_end */
	T6 volatile a37; /* yy_start */
	T6 volatile a38; /* yy_line */
	T6 volatile a39; /* yy_column */
	T6 volatile a40; /* yy_position */
	T6 volatile a41; /* yy_suspended_yystacksize */
	T6 volatile a42; /* yy_suspended_yystate */
	T6 volatile a43; /* yy_suspended_yyn */
	T6 volatile a44; /* yy_suspended_yychar1 */
	T6 volatile a45; /* yy_suspended_index */
	T6 volatile a46; /* yy_suspended_yyss_top */
	T6 volatile a47; /* yy_suspended_yy_goto */
	T0* volatile a48; /* yyr1 */
	T6 volatile a49; /* yyssp */
	T0* volatile a50; /* yypgoto */
	T0* volatile a51; /* yycheck */
	T0* volatile a52; /* yytable */
	T0* volatile a53; /* yydefgoto */
	T6 volatile a54; /* error_count */
	T1 volatile a55; /* yy_lookahead_needed */
	T6 volatile a56; /* yyerrstatus */
	T0* volatile a57; /* yypact */
	T6 volatile a58; /* last_token */
	T0* volatile a59; /* yytranslate */
	T0* volatile a60; /* yydefact */
	T0* volatile a61; /* last_clients */
	T0* volatile a62; /* last_export_clients */
	T0* volatile a63; /* last_feature_clause */
	T6 volatile a64; /* last_literal_end */
	T1 volatile a65; /* yy_rejected */
	T6 volatile a66; /* yy_state_count */
	T6 volatile a67; /* yy_full_match */
	T6 volatile a68; /* yy_lp */
	T6 volatile a69; /* yy_looking_for_trail_begin */
	T6 volatile a70; /* yy_full_lp */
	T6 volatile a71; /* yy_full_state */
	T6 volatile a72; /* pushed_start_condition_count */
	T6 volatile a73; /* yy_start_state */
	T6 volatile a74; /* line */
	T6 volatile a75; /* column */
	T6 volatile a76; /* position */
	T1 volatile a77; /* yy_more_flag */
	T6 volatile a78; /* yy_more_len */
	T6 volatile a79; /* yy_last_accepting_state */
	T6 volatile a80; /* yy_last_accepting_cpos */
	T0* volatile a81; /* yy_pushed_start_conditions */
	T0* volatile a82; /* yyspecial_routines1 */
	T6 volatile a83; /* yyvsc1 */
	T0* volatile a84; /* yyvs1 */
	T0* volatile a85; /* yyspecial_routines2 */
	T6 volatile a86; /* yyvsc2 */
	T0* volatile a87; /* yyvs2 */
	T0* volatile a88; /* yyspecial_routines3 */
	T6 volatile a89; /* yyvsc3 */
	T0* volatile a90; /* yyvs3 */
	T0* volatile a91; /* yyspecial_routines4 */
	T6 volatile a92; /* yyvsc4 */
	T0* volatile a93; /* yyvs4 */
	T0* volatile a94; /* yyspecial_routines5 */
	T6 volatile a95; /* yyvsc5 */
	T0* volatile a96; /* yyvs5 */
	T0* volatile a97; /* yyspecial_routines6 */
	T6 volatile a98; /* yyvsc6 */
	T0* volatile a99; /* yyvs6 */
	T0* volatile a100; /* yyspecial_routines7 */
	T6 volatile a101; /* yyvsc7 */
	T0* volatile a102; /* yyvs7 */
	T0* volatile a103; /* yyspecial_routines8 */
	T6 volatile a104; /* yyvsc8 */
	T0* volatile a105; /* yyvs8 */
	T0* volatile a106; /* yyspecial_routines9 */
	T6 volatile a107; /* yyvsc9 */
	T0* volatile a108; /* yyvs9 */
	T0* volatile a109; /* yyspecial_routines10 */
	T6 volatile a110; /* yyvsc10 */
	T0* volatile a111; /* yyvs10 */
	T0* volatile a112; /* yyspecial_routines11 */
	T6 volatile a113; /* yyvsc11 */
	T0* volatile a114; /* yyvs11 */
	T0* volatile a115; /* yyspecial_routines12 */
	T6 volatile a116; /* yyvsc12 */
	T0* volatile a117; /* yyvs12 */
	T0* volatile a118; /* yyspecial_routines13 */
	T6 volatile a119; /* yyvsc13 */
	T0* volatile a120; /* yyvs13 */
	T0* volatile a121; /* yyspecial_routines14 */
	T6 volatile a122; /* yyvsc14 */
	T0* volatile a123; /* yyvs14 */
	T0* volatile a124; /* yyspecial_routines15 */
	T6 volatile a125; /* yyvsc15 */
	T0* volatile a126; /* yyvs15 */
	T0* volatile a127; /* yyspecial_routines16 */
	T6 volatile a128; /* yyvsc16 */
	T0* volatile a129; /* yyvs16 */
	T0* volatile a130; /* yyspecial_routines17 */
	T6 volatile a131; /* yyvsc17 */
	T0* volatile a132; /* yyvs17 */
	T0* volatile a133; /* yyspecial_routines18 */
	T6 volatile a134; /* yyvsc18 */
	T0* volatile a135; /* yyvs18 */
	T0* volatile a136; /* yyspecial_routines19 */
	T6 volatile a137; /* yyvsc19 */
	T0* volatile a138; /* yyvs19 */
	T0* volatile a139; /* yyspecial_routines20 */
	T6 volatile a140; /* yyvsc20 */
	T0* volatile a141; /* yyvs20 */
	T0* volatile a142; /* yyspecial_routines21 */
	T6 volatile a143; /* yyvsc21 */
	T0* volatile a144; /* yyvs21 */
	T0* volatile a145; /* yyspecial_routines22 */
	T6 volatile a146; /* yyvsc22 */
	T0* volatile a147; /* yyvs22 */
	T0* volatile a148; /* yyspecial_routines23 */
	T6 volatile a149; /* yyvsc23 */
	T0* volatile a150; /* yyvs23 */
	T0* volatile a151; /* yyspecial_routines24 */
	T6 volatile a152; /* yyvsc24 */
	T0* volatile a153; /* yyvs24 */
	T0* volatile a154; /* yyspecial_routines25 */
	T6 volatile a155; /* yyvsc25 */
	T0* volatile a156; /* yyvs25 */
	T0* volatile a157; /* yyspecial_routines26 */
	T6 volatile a158; /* yyvsc26 */
	T0* volatile a159; /* yyvs26 */
	T0* volatile a160; /* yyspecial_routines27 */
	T6 volatile a161; /* yyvsc27 */
	T0* volatile a162; /* yyvs27 */
	T0* volatile a163; /* yyspecial_routines28 */
	T6 volatile a164; /* yyvsc28 */
	T0* volatile a165; /* yyvs28 */
	T0* volatile a166; /* yyspecial_routines29 */
	T6 volatile a167; /* yyvsc29 */
	T0* volatile a168; /* yyvs29 */
	T0* volatile a169; /* yyspecial_routines30 */
	T6 volatile a170; /* yyvsc30 */
	T0* volatile a171; /* yyvs30 */
	T0* volatile a172; /* yyspecial_routines31 */
	T6 volatile a173; /* yyvsc31 */
	T0* volatile a174; /* yyvs31 */
	T0* volatile a175; /* yyspecial_routines32 */
	T6 volatile a176; /* yyvsc32 */
	T0* volatile a177; /* yyvs32 */
	T0* volatile a178; /* yyspecial_routines33 */
	T6 volatile a179; /* yyvsc33 */
	T0* volatile a180; /* yyvs33 */
	T0* volatile a181; /* yyspecial_routines34 */
	T6 volatile a182; /* yyvsc34 */
	T0* volatile a183; /* yyvs34 */
	T0* volatile a184; /* yyspecial_routines35 */
	T6 volatile a185; /* yyvsc35 */
	T0* volatile a186; /* yyvs35 */
	T0* volatile a187; /* yyspecial_routines36 */
	T6 volatile a188; /* yyvsc36 */
	T0* volatile a189; /* yyvs36 */
	T0* volatile a190; /* yyspecial_routines37 */
	T6 volatile a191; /* yyvsc37 */
	T0* volatile a192; /* yyvs37 */
	T0* volatile a193; /* yyspecial_routines38 */
	T6 volatile a194; /* yyvsc38 */
	T0* volatile a195; /* yyvs38 */
	T0* volatile a196; /* yyspecial_routines39 */
	T6 volatile a197; /* yyvsc39 */
	T0* volatile a198; /* yyvs39 */
	T0* volatile a199; /* yyspecial_routines40 */
	T6 volatile a200; /* yyvsc40 */
	T0* volatile a201; /* yyvs40 */
	T0* volatile a202; /* yyspecial_routines41 */
	T6 volatile a203; /* yyvsc41 */
	T0* volatile a204; /* yyvs41 */
	T0* volatile a205; /* yyspecial_routines42 */
	T6 volatile a206; /* yyvsc42 */
	T0* volatile a207; /* yyvs42 */
	T0* volatile a208; /* yyspecial_routines43 */
	T6 volatile a209; /* yyvsc43 */
	T0* volatile a210; /* yyvs43 */
	T0* volatile a211; /* yyspecial_routines44 */
	T6 volatile a212; /* yyvsc44 */
	T0* volatile a213; /* yyvs44 */
	T0* volatile a214; /* yyspecial_routines45 */
	T6 volatile a215; /* yyvsc45 */
	T0* volatile a216; /* yyvs45 */
	T0* volatile a217; /* yyspecial_routines46 */
	T6 volatile a218; /* yyvsc46 */
	T0* volatile a219; /* yyvs46 */
	T0* volatile a220; /* yyspecial_routines47 */
	T6 volatile a221; /* yyvsc47 */
	T0* volatile a222; /* yyvs47 */
	T0* volatile a223; /* yyspecial_routines48 */
	T6 volatile a224; /* yyvsc48 */
	T0* volatile a225; /* yyvs48 */
	T0* volatile a226; /* yyspecial_routines49 */
	T6 volatile a227; /* yyvsc49 */
	T0* volatile a228; /* yyvs49 */
	T0* volatile a229; /* yyspecial_routines50 */
	T6 volatile a230; /* yyvsc50 */
	T0* volatile a231; /* yyvs50 */
	T0* volatile a232; /* yyspecial_routines51 */
	T6 volatile a233; /* yyvsc51 */
	T0* volatile a234; /* yyvs51 */
	T0* volatile a235; /* yyspecial_routines52 */
	T6 volatile a236; /* yyvsc52 */
	T0* volatile a237; /* yyvs52 */
	T0* volatile a238; /* yyspecial_routines53 */
	T6 volatile a239; /* yyvsc53 */
	T0* volatile a240; /* yyvs53 */
	T0* volatile a241; /* yyspecial_routines54 */
	T6 volatile a242; /* yyvsc54 */
	T0* volatile a243; /* yyvs54 */
	T0* volatile a244; /* yyspecial_routines55 */
	T6 volatile a245; /* yyvsc55 */
	T0* volatile a246; /* yyvs55 */
	T0* volatile a247; /* yyspecial_routines56 */
	T6 volatile a248; /* yyvsc56 */
	T0* volatile a249; /* yyvs56 */
	T0* volatile a250; /* yyspecial_routines57 */
	T6 volatile a251; /* yyvsc57 */
	T0* volatile a252; /* yyvs57 */
	T0* volatile a253; /* yyspecial_routines58 */
	T6 volatile a254; /* yyvsc58 */
	T0* volatile a255; /* yyvs58 */
	T0* volatile a256; /* yyspecial_routines59 */
	T6 volatile a257; /* yyvsc59 */
	T0* volatile a258; /* yyvs59 */
	T0* volatile a259; /* yyspecial_routines60 */
	T6 volatile a260; /* yyvsc60 */
	T0* volatile a261; /* yyvs60 */
	T0* volatile a262; /* yyspecial_routines61 */
	T6 volatile a263; /* yyvsc61 */
	T0* volatile a264; /* yyvs61 */
	T0* volatile a265; /* yyspecial_routines62 */
	T6 volatile a266; /* yyvsc62 */
	T0* volatile a267; /* yyvs62 */
	T0* volatile a268; /* yyspecial_routines63 */
	T6 volatile a269; /* yyvsc63 */
	T0* volatile a270; /* yyvs63 */
	T0* volatile a271; /* yyspecial_routines64 */
	T6 volatile a272; /* yyvsc64 */
	T0* volatile a273; /* yyvs64 */
	T0* volatile a274; /* yyspecial_routines65 */
	T6 volatile a275; /* yyvsc65 */
	T0* volatile a276; /* yyvs65 */
	T0* volatile a277; /* yyspecial_routines66 */
	T6 volatile a278; /* yyvsc66 */
	T0* volatile a279; /* yyvs66 */
	T0* volatile a280; /* yyspecial_routines67 */
	T6 volatile a281; /* yyvsc67 */
	T0* volatile a282; /* yyvs67 */
	T0* volatile a283; /* yyspecial_routines68 */
	T6 volatile a284; /* yyvsc68 */
	T0* volatile a285; /* yyvs68 */
	T0* volatile a286; /* yyspecial_routines69 */
	T6 volatile a287; /* yyvsc69 */
	T0* volatile a288; /* yyvs69 */
	T0* volatile a289; /* yyspecial_routines70 */
	T6 volatile a290; /* yyvsc70 */
	T0* volatile a291; /* yyvs70 */
	T0* volatile a292; /* yyspecial_routines71 */
	T6 volatile a293; /* yyvsc71 */
	T0* volatile a294; /* yyvs71 */
	T0* volatile a295; /* yyspecial_routines72 */
	T6 volatile a296; /* yyvsc72 */
	T0* volatile a297; /* yyvs72 */
	T0* volatile a298; /* yyspecial_routines73 */
	T6 volatile a299; /* yyvsc73 */
	T0* volatile a300; /* yyvs73 */
	T0* volatile a301; /* yyspecial_routines74 */
	T6 volatile a302; /* yyvsc74 */
	T0* volatile a303; /* yyvs74 */
	T0* volatile a304; /* yyspecial_routines75 */
	T6 volatile a305; /* yyvsc75 */
	T0* volatile a306; /* yyvs75 */
	T0* volatile a307; /* yyspecial_routines76 */
	T6 volatile a308; /* yyvsc76 */
	T0* volatile a309; /* yyvs76 */
	T0* volatile a310; /* yyspecial_routines77 */
	T6 volatile a311; /* yyvsc77 */
	T0* volatile a312; /* yyvs77 */
	T0* volatile a313; /* yyspecial_routines78 */
	T6 volatile a314; /* yyvsc78 */
	T0* volatile a315; /* yyvs78 */
	T0* volatile a316; /* yyspecial_routines79 */
	T6 volatile a317; /* yyvsc79 */
	T0* volatile a318; /* yyvs79 */
	T0* volatile a319; /* yyspecial_routines80 */
	T6 volatile a320; /* yyvsc80 */
	T0* volatile a321; /* yyvs80 */
	T0* volatile a322; /* yyspecial_routines81 */
	T6 volatile a323; /* yyvsc81 */
	T0* volatile a324; /* yyvs81 */
	T0* volatile a325; /* yyspecial_routines82 */
	T6 volatile a326; /* yyvsc82 */
	T0* volatile a327; /* yyvs82 */
	T0* volatile a328; /* yyspecial_routines83 */
	T6 volatile a329; /* yyvsc83 */
	T0* volatile a330; /* yyvs83 */
	T0* volatile a331; /* yyspecial_routines84 */
	T6 volatile a332; /* yyvsc84 */
	T0* volatile a333; /* yyvs84 */
	T0* volatile a334; /* yyspecial_routines85 */
	T6 volatile a335; /* yyvsc85 */
	T0* volatile a336; /* yyvs85 */
	T0* volatile a337; /* yyspecial_routines86 */
	T6 volatile a338; /* yyvsc86 */
	T0* volatile a339; /* yyvs86 */
	T0* volatile a340; /* yyspecial_routines87 */
	T6 volatile a341; /* yyvsc87 */
	T0* volatile a342; /* yyvs87 */
	T0* volatile a343; /* yyspecial_routines88 */
	T6 volatile a344; /* yyvsc88 */
	T0* volatile a345; /* yyvs88 */
	T0* volatile a346; /* yyspecial_routines89 */
	T6 volatile a347; /* yyvsc89 */
	T0* volatile a348; /* yyvs89 */
	T0* volatile a349; /* yyspecial_routines90 */
	T6 volatile a350; /* yyvsc90 */
	T0* volatile a351; /* yyvs90 */
	T0* volatile a352; /* yyspecial_routines91 */
	T6 volatile a353; /* yyvsc91 */
	T0* volatile a354; /* yyvs91 */
	T0* volatile a355; /* yyspecial_routines92 */
	T6 volatile a356; /* yyvsc92 */
	T0* volatile a357; /* yyvs92 */
	T0* volatile a358; /* yyspecial_routines93 */
	T6 volatile a359; /* yyvsc93 */
	T0* volatile a360; /* yyvs93 */
	T0* volatile a361; /* yyspecial_routines94 */
	T6 volatile a362; /* yyvsc94 */
	T0* volatile a363; /* yyvs94 */
	T0* volatile a364; /* yyspecial_routines95 */
	T6 volatile a365; /* yyvsc95 */
	T0* volatile a366; /* yyvs95 */
	T0* volatile a367; /* yyspecial_routines96 */
	T6 volatile a368; /* yyvsc96 */
	T0* volatile a369; /* yyvs96 */
	T0* volatile a370; /* yyspecial_routines97 */
	T6 volatile a371; /* yyvsc97 */
	T0* volatile a372; /* yyvs97 */
	T0* volatile a373; /* yyspecial_routines98 */
	T6 volatile a374; /* yyvsc98 */
	T0* volatile a375; /* yyvs98 */
	T0* volatile a376; /* yyspecial_routines99 */
	T6 volatile a377; /* yyvsc99 */
	T0* volatile a378; /* yyvs99 */
	T0* volatile a379; /* yyspecial_routines100 */
	T6 volatile a380; /* yyvsc100 */
	T0* volatile a381; /* yyvs100 */
	T0* volatile a382; /* yyspecial_routines101 */
	T6 volatile a383; /* yyvsc101 */
	T0* volatile a384; /* yyvs101 */
	T0* volatile a385; /* yyspecial_routines102 */
	T6 volatile a386; /* yyvsc102 */
	T0* volatile a387; /* yyvs102 */
	T0* volatile a388; /* yyspecial_routines103 */
	T6 volatile a389; /* yyvsc103 */
	T0* volatile a390; /* yyvs103 */
	T0* volatile a391; /* yyspecial_routines104 */
	T6 volatile a392; /* yyvsc104 */
	T0* volatile a393; /* yyvs104 */
	T0* volatile a394; /* yyspecial_routines105 */
	T6 volatile a395; /* yyvsc105 */
	T0* volatile a396; /* yyvs105 */
	T0* volatile a397; /* yyspecial_routines106 */
	T6 volatile a398; /* yyvsc106 */
	T0* volatile a399; /* yyvs106 */
	T0* volatile a400; /* yyspecial_routines107 */
	T6 volatile a401; /* yyvsc107 */
	T0* volatile a402; /* yyvs107 */
	T0* volatile a403; /* yyspecial_routines108 */
	T6 volatile a404; /* yyvsc108 */
	T0* volatile a405; /* yyvs108 */
	T0* volatile a406; /* yyspecial_routines109 */
	T6 volatile a407; /* yyvsc109 */
	T0* volatile a408; /* yyvs109 */
	T0* volatile a409; /* yyspecial_routines110 */
	T6 volatile a410; /* yyvsc110 */
	T0* volatile a411; /* yyvs110 */
	T0* volatile a412; /* yyspecial_routines111 */
	T6 volatile a413; /* yyvsc111 */
	T0* volatile a414; /* yyvs111 */
	T0* volatile a415; /* yyspecial_routines112 */
	T6 volatile a416; /* yyvsc112 */
	T0* volatile a417; /* yyvs112 */
	T0* volatile a418; /* yyspecial_routines113 */
	T6 volatile a419; /* yyvsc113 */
	T0* volatile a420; /* yyvs113 */
	T0* volatile a421; /* yyspecial_routines114 */
	T6 volatile a422; /* yyvsc114 */
	T0* volatile a423; /* yyvs114 */
	T0* volatile a424; /* yyspecial_routines115 */
	T6 volatile a425; /* yyvsc115 */
	T0* volatile a426; /* yyvs115 */
	T0* volatile a427; /* yyspecial_routines116 */
	T6 volatile a428; /* yyvsc116 */
	T0* volatile a429; /* yyvs116 */
	T0* volatile a430; /* yyspecial_routines117 */
	T6 volatile a431; /* yyvsc117 */
	T0* volatile a432; /* yyvs117 */
	T0* volatile a433; /* yyspecial_routines118 */
	T6 volatile a434; /* yyvsc118 */
	T0* volatile a435; /* yyvs118 */
	T0* volatile a436; /* yyspecial_routines119 */
	T6 volatile a437; /* yyvsc119 */
	T0* volatile a438; /* yyvs119 */
	T0* volatile a439; /* yyspecial_routines120 */
	T6 volatile a440; /* yyvsc120 */
	T0* volatile a441; /* yyvs120 */
	T0* volatile a442; /* yyspecial_routines121 */
	T6 volatile a443; /* yyvsc121 */
	T0* volatile a444; /* yyvs121 */
	T0* volatile a445; /* yyspecial_routines122 */
	T6 volatile a446; /* yyvsc122 */
	T0* volatile a447; /* yyvs122 */
	T0* volatile a448; /* yyspecial_routines123 */
	T6 volatile a449; /* yyvsc123 */
	T0* volatile a450; /* yyvs123 */
	T0* volatile a451; /* yyspecial_routines124 */
	T6 volatile a452; /* yyvsc124 */
	T0* volatile a453; /* yyvs124 */
	T0* volatile a454; /* yyspecial_routines125 */
	T6 volatile a455; /* yyvsc125 */
	T0* volatile a456; /* yyvs125 */
	T0* volatile a457; /* yyspecial_routines126 */
	T6 volatile a458; /* yyvsc126 */
	T0* volatile a459; /* yyvs126 */
	T0* volatile a460; /* yyspecial_routines127 */
	T6 volatile a461; /* yyvsc127 */
	T0* volatile a462; /* yyvs127 */
	T0* volatile a463; /* yyspecial_routines128 */
	T6 volatile a464; /* yyvsc128 */
	T0* volatile a465; /* yyvs128 */
	T0* volatile a466; /* yyspecial_routines129 */
	T6 volatile a467; /* yyvsc129 */
	T0* volatile a468; /* yyvs129 */
	T0* volatile a469; /* yyspecial_routines130 */
	T6 volatile a470; /* yyvsc130 */
	T0* volatile a471; /* yyvs130 */
	T0* volatile a472; /* yyspecial_routines131 */
	T6 volatile a473; /* yyvsc131 */
	T0* volatile a474; /* yyvs131 */
	T0* volatile a475; /* yyspecial_routines132 */
	T6 volatile a476; /* yyvsc132 */
	T0* volatile a477; /* yyvs132 */
	T0* volatile a478; /* yyspecial_routines133 */
	T6 volatile a479; /* yyvsc133 */
	T0* volatile a480; /* yyvs133 */
	T0* volatile a481; /* yyspecial_routines134 */
	T6 volatile a482; /* yyvsc134 */
	T0* volatile a483; /* yyvs134 */
	T0* volatile a484; /* yyspecial_routines135 */
	T6 volatile a485; /* yyvsc135 */
	T0* volatile a486; /* yyvs135 */
	T0* volatile a487; /* yyspecial_routines136 */
	T6 volatile a488; /* yyvsc136 */
	T0* volatile a489; /* yyvs136 */
	T0* volatile a490; /* yyspecial_routines137 */
	T6 volatile a491; /* yyvsc137 */
	T0* volatile a492; /* yyvs137 */
	T0* volatile a493; /* yyspecial_routines138 */
	T6 volatile a494; /* yyvsc138 */
	T0* volatile a495; /* yyvs138 */
	T0* volatile a496; /* yyspecial_routines139 */
	T6 volatile a497; /* yyvsc139 */
	T0* volatile a498; /* yyvs139 */
	T0* volatile a499; /* yytypes1 */
	T0* volatile a500; /* yytypes2 */
	T0* volatile a501; /* yy_content */
	T0* volatile a502; /* yy_content_area */
	T0* volatile a503; /* yy_unicode_content_area */
	T0* volatile a504; /* yy_state_stack */
	T6 volatile a505; /* yyvsp1 */
	T6 volatile a506; /* yyvsp2 */
	T6 volatile a507; /* yyvsp3 */
	T6 volatile a508; /* yyvsp4 */
	T6 volatile a509; /* yyvsp5 */
	T6 volatile a510; /* yyvsp6 */
	T6 volatile a511; /* yyvsp7 */
	T6 volatile a512; /* yyvsp8 */
	T6 volatile a513; /* yyvsp9 */
	T6 volatile a514; /* yyvsp10 */
	T6 volatile a515; /* yyvsp11 */
	T6 volatile a516; /* yyvsp12 */
	T6 volatile a517; /* yyvsp13 */
	T6 volatile a518; /* yyvsp14 */
	T6 volatile a519; /* yyvsp15 */
	T6 volatile a520; /* yyvsp16 */
	T6 volatile a521; /* yyvsp17 */
	T6 volatile a522; /* yyvsp18 */
	T6 volatile a523; /* yyvsp19 */
	T6 volatile a524; /* yyvsp20 */
	T6 volatile a525; /* yyvsp21 */
	T6 volatile a526; /* yyvsp22 */
	T6 volatile a527; /* yyvsp23 */
	T6 volatile a528; /* yyvsp24 */
	T6 volatile a529; /* yyvsp25 */
	T6 volatile a530; /* yyvsp26 */
	T6 volatile a531; /* yyvsp27 */
	T6 volatile a532; /* yyvsp28 */
	T6 volatile a533; /* yyvsp29 */
	T6 volatile a534; /* yyvsp30 */
	T6 volatile a535; /* yyvsp31 */
	T6 volatile a536; /* yyvsp32 */
	T6 volatile a537; /* yyvsp33 */
	T6 volatile a538; /* yyvsp34 */
	T6 volatile a539; /* yyvsp35 */
	T6 volatile a540; /* yyvsp36 */
	T6 volatile a541; /* yyvsp37 */
	T6 volatile a542; /* yyvsp38 */
	T6 volatile a543; /* yyvsp39 */
	T6 volatile a544; /* yyvsp40 */
	T6 volatile a545; /* yyvsp41 */
	T6 volatile a546; /* yyvsp42 */
	T6 volatile a547; /* yyvsp43 */
	T6 volatile a548; /* yyvsp44 */
	T6 volatile a549; /* yyvsp45 */
	T6 volatile a550; /* yyvsp46 */
	T6 volatile a551; /* yyvsp47 */
	T6 volatile a552; /* yyvsp48 */
	T6 volatile a553; /* yyvsp49 */
	T6 volatile a554; /* yyvsp50 */
	T6 volatile a555; /* yyvsp51 */
	T6 volatile a556; /* yyvsp52 */
	T6 volatile a557; /* yyvsp53 */
	T6 volatile a558; /* yyvsp54 */
	T6 volatile a559; /* yyvsp55 */
	T6 volatile a560; /* yyvsp56 */
	T6 volatile a561; /* yyvsp57 */
	T6 volatile a562; /* yyvsp58 */
	T6 volatile a563; /* yyvsp59 */
	T6 volatile a564; /* yyvsp60 */
	T6 volatile a565; /* yyvsp61 */
	T6 volatile a566; /* yyvsp62 */
	T6 volatile a567; /* yyvsp63 */
	T6 volatile a568; /* yyvsp64 */
	T6 volatile a569; /* yyvsp65 */
	T6 volatile a570; /* yyvsp66 */
	T6 volatile a571; /* yyvsp67 */
	T6 volatile a572; /* yyvsp68 */
	T6 volatile a573; /* yyvsp69 */
	T6 volatile a574; /* yyvsp70 */
	T6 volatile a575; /* yyvsp71 */
	T6 volatile a576; /* yyvsp72 */
	T6 volatile a577; /* yyvsp73 */
	T6 volatile a578; /* yyvsp74 */
	T6 volatile a579; /* yyvsp75 */
	T6 volatile a580; /* yyvsp76 */
	T6 volatile a581; /* yyvsp77 */
	T6 volatile a582; /* yyvsp78 */
	T6 volatile a583; /* yyvsp79 */
	T6 volatile a584; /* yyvsp80 */
	T6 volatile a585; /* yyvsp81 */
	T6 volatile a586; /* yyvsp82 */
	T6 volatile a587; /* yyvsp83 */
	T6 volatile a588; /* yyvsp84 */
	T6 volatile a589; /* yyvsp85 */
	T6 volatile a590; /* yyvsp86 */
	T6 volatile a591; /* yyvsp87 */
	T6 volatile a592; /* yyvsp88 */
	T6 volatile a593; /* yyvsp89 */
	T6 volatile a594; /* yyvsp90 */
	T6 volatile a595; /* yyvsp91 */
	T6 volatile a596; /* yyvsp92 */
	T6 volatile a597; /* yyvsp93 */
	T6 volatile a598; /* yyvsp94 */
	T6 volatile a599; /* yyvsp95 */
	T6 volatile a600; /* yyvsp96 */
	T6 volatile a601; /* yyvsp97 */
	T6 volatile a602; /* yyvsp98 */
	T6 volatile a603; /* yyvsp99 */
	T6 volatile a604; /* yyvsp100 */
	T6 volatile a605; /* yyvsp101 */
	T6 volatile a606; /* yyvsp102 */
	T6 volatile a607; /* yyvsp103 */
	T6 volatile a608; /* yyvsp104 */
	T6 volatile a609; /* yyvsp105 */
	T6 volatile a610; /* yyvsp106 */
	T6 volatile a611; /* yyvsp107 */
	T6 volatile a612; /* yyvsp108 */
	T6 volatile a613; /* yyvsp109 */
	T6 volatile a614; /* yyvsp110 */
	T6 volatile a615; /* yyvsp111 */
	T6 volatile a616; /* yyvsp112 */
	T6 volatile a617; /* yyvsp113 */
	T6 volatile a618; /* yyvsp114 */
	T6 volatile a619; /* yyvsp115 */
	T6 volatile a620; /* yyvsp116 */
	T6 volatile a621; /* yyvsp117 */
	T6 volatile a622; /* yyvsp118 */
	T6 volatile a623; /* yyvsp119 */
	T6 volatile a624; /* yyvsp120 */
	T6 volatile a625; /* yyvsp121 */
	T6 volatile a626; /* yyvsp122 */
	T6 volatile a627; /* yyvsp123 */
	T6 volatile a628; /* yyvsp124 */
	T6 volatile a629; /* yyvsp125 */
	T6 volatile a630; /* yyvsp126 */
	T6 volatile a631; /* yyvsp127 */
	T6 volatile a632; /* yyvsp128 */
	T6 volatile a633; /* yyvsp129 */
	T6 volatile a634; /* yyvsp130 */
	T6 volatile a635; /* yyvsp131 */
	T6 volatile a636; /* yyvsp132 */
	T6 volatile a637; /* yyvsp133 */
	T6 volatile a638; /* yyvsp134 */
	T6 volatile a639; /* yyvsp135 */
	T6 volatile a640; /* yyvsp136 */
	T6 volatile a641; /* yyvsp137 */
	T6 volatile a642; /* yyvsp138 */
	T6 volatile a643; /* yyvsp139 */
	T0* volatile a644; /* yy_accept */
	T0* volatile a645; /* yy_ec */
	T0* volatile a646; /* yy_chk */
	T0* volatile a647; /* yy_base */
	T0* volatile a648; /* yy_def */
	T0* volatile a649; /* yy_meta */
	T0* volatile a650; /* yy_nxt */
	T0* volatile a651; /* yy_acclist */
	T0* volatile a652; /* last_detachable_any_value */
	T0* volatile a653; /* last_detachable_et_keyword_value */
	T0* volatile a654; /* last_detachable_et_agent_keyword_value */
	T0* volatile a655; /* last_detachable_et_invariant_keyword_value */
	T0* volatile a656; /* last_detachable_et_precursor_keyword_value */
	T0* volatile a657; /* last_detachable_et_symbol_value */
	T0* volatile a658; /* last_detachable_et_position_value */
	T0* volatile a659; /* last_detachable_et_boolean_constant_value */
	T0* volatile a660; /* last_detachable_et_break_value */
	T0* volatile a661; /* last_detachable_et_character_constant_value */
	T0* volatile a662; /* last_detachable_et_current_value */
	T0* volatile a663; /* last_detachable_et_free_operator_value */
	T0* volatile a664; /* last_detachable_et_identifier_value */
	T0* volatile a665; /* last_detachable_et_integer_constant_value */
	T0* volatile a666; /* last_detachable_et_keyword_operator_value */
	T0* volatile a667; /* last_detachable_et_manifest_string_value */
	T0* volatile a668; /* last_detachable_et_real_constant_value */
	T0* volatile a669; /* last_detachable_et_result_value */
	T0* volatile a670; /* last_detachable_et_retry_instruction_value */
	T0* volatile a671; /* last_detachable_et_symbol_operator_value */
	T0* volatile a672; /* last_detachable_et_void_value */
	T0* volatile a673; /* last_detachable_et_semicolon_symbol_value */
	T0* volatile a674; /* last_detachable_et_bracket_symbol_value */
	T0* volatile a675; /* last_detachable_et_question_mark_symbol_value */
	T0* volatile a676; /* last_formal_arguments */
	T0* volatile a677; /* last_local_variables */
	T0* volatile a678; /* last_object_tests */
	T0* volatile a679; /* last_iteration_components */
	T0* volatile a680; /* last_inline_separate_arguments */
	T6 volatile a681; /* last_break_end */
	T6 volatile a682; /* last_comment_end */
	T6 volatile a683; /* ms_column */
	T6 volatile a684; /* ms_line */
	T6 volatile a685; /* break_kind */
	T3 volatile a686; /* verbatim_opening_character */
	T1 volatile a687; /* has_natural_64_overflow */
	T11 volatile a688; /* last_natural_64 */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S69 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
	T0* volatile a6; /* equality_tester */
};

/* Struct for type ET_CLASS */
struct S70 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T6 volatile a2; /* id */
	T0* volatile a3; /* ancestors */
	T0* volatile a4; /* conforming_ancestors */
	T0* volatile a5; /* queries */
	T0* volatile a6; /* procedures */
	T0* volatile a7; /* class_keyword */
	T0* volatile a8; /* end_keyword */
	T0* volatile a9; /* group */
	T0* volatile a10; /* status_mutex */
	T0* volatile a11; /* processing_mutex */
	T0* volatile a12; /* formal_parameter_types_mutex */
	T0* volatile a13; /* named_base_class */
	T6 volatile a14; /* time_stamp */
	T8 volatile a15; /* class_code */
	T1 volatile a16; /* tuple_actual_parameters_unfolded_1 */
	T1 volatile a17; /* tuple_actual_parameters_unfolded_2 */
	T0* volatile a18; /* filename */
	T1 volatile a19; /* unprotected_is_parsed */
	T0* volatile a20; /* formal_parameters */
	T1 volatile a21; /* unprotected_has_syntax_error */
	T1 volatile a22; /* unprotected_ancestors_built */
	T1 volatile a23; /* unprotected_has_ancestors_error */
	T1 volatile a24; /* unprotected_features_flattened */
	T1 volatile a25; /* unprotected_has_flattening_error */
	T1 volatile a26; /* unprotected_interface_checked */
	T1 volatile a27; /* unprotected_has_interface_error */
	T1 volatile a28; /* unprotected_implementation_checked */
	T1 volatile a29; /* unprotected_has_implementation_error */
	T0* volatile a30; /* frozen_keyword */
	T0* volatile a31; /* external_keyword */
	T1 volatile a32; /* has_utf8_bom */
	T0* volatile a33; /* providers */
	T6 volatile a34; /* tuple_constraint_position */
	T6 volatile a35; /* registered_feature_count */
	T0* volatile a36; /* class_mark */
	T6 volatile a37; /* index */
	T1 volatile a38; /* unprotected_is_marked */
	T6 volatile a39; /* registered_inline_constant_count */
	T0* volatile a40; /* suppliers */
	T1 volatile a41; /* has_deferred_features */
	T1 volatile a42; /* redeclared_signatures_checked */
	T0* volatile a43; /* creators */
	T0* volatile a44; /* convert_features */
	T0* volatile a45; /* feature_clauses */
	T0* volatile a46; /* first_note_clause */
	T0* volatile a47; /* second_note_clause */
	T0* volatile a48; /* invariants */
	T0* volatile a49; /* obsolete_message */
	T0* volatile a50; /* parent_clauses */
	T0* volatile a51; /* leading_break */
	T1 volatile a52; /* is_interface */
	T1 volatile a53; /* is_checking_implementation */
	T1 volatile a54; /* is_ignored */
	T1 volatile a55; /* invariants_enabled */
	T1 volatile a56; /* preconditions_enabled */
	T1 volatile a57; /* postconditions_enabled */
	T0* volatile a58; /* formal_parameter_types */
	T1 volatile a59; /* loop_assertions_enabled */
	T1 volatile a60; /* supplier_preconditions_enabled */
	T1 volatile a61; /* check_assertions_enabled */
};

/* Struct for type TUPLE [ET_CLASS] */
struct S74 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_CLASS]] */
struct S75 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE */
struct S76 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
struct S77 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PREDICATE [TUPLE [ET_CLASS]] */
struct S78 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type ET_CREATOR_LIST */
struct S80 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S81 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CREATOR */
struct S82 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* create_keyword */
	T0* volatile a2; /* clients */
	T0* volatile a3; /* storage */
	T6 volatile a4; /* count */
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S83 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type ET_ECF_SYSTEM_PARSER */
struct S85 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_system */
	T0* volatile a2; /* ast_factory */
	T0* volatile a3; /* override_settings */
	T0* volatile a4; /* override_capabilities */
	T0* volatile a5; /* override_variables */
	T0* volatile a6; /* parsed_libraries */
	T0* volatile a7; /* parsed_dotnet_assemblies */
	T0* volatile a8; /* redirected_locations */
	T0* volatile a9; /* xml_parser */
	T0* volatile a10; /* tree_pipe */
	T0* volatile a11; /* error_handler */
	T0* volatile a12; /* ise_version */
	T0* volatile a13; /* ise_eiffel_to_gobo_uuid_mappings */
};

/* Struct for type ET_ECF_ERROR_HANDLER */
struct S86 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* error_count */
	T0* volatile a2; /* error_file */
	T0* volatile a3; /* warning_file */
	T0* volatile a4; /* info_file */
};

/* Struct for type ET_ECF_SYSTEM */
struct S87 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* filename */
	T0* volatile a3; /* register_class_mutex */
	T0* volatile a4; /* external_include_pathnames */
	T0* volatile a5; /* external_object_pathnames */
	T0* volatile a6; /* external_library_pathnames */
	T0* volatile a7; /* external_make_pathnames */
	T0* volatile a8; /* external_resource_pathnames */
	T0* volatile a9; /* external_cflags */
	T0* volatile a10; /* external_linker_flags */
	T1 volatile a11; /* console_application_mode */
	T1 volatile a12; /* total_order_on_reals_mode */
	T0* volatile a13; /* current_system */
	T0* volatile a14; /* universe */
	T0* volatile a15; /* libraries */
	T0* volatile a16; /* clusters */
	T0* volatile a17; /* dotnet_assemblies */
	T0* volatile a18; /* implicit_attachment_type_mark */
	T0* volatile a19; /* master_classes */
	T0* volatile a20; /* master_class_mutex */
	T0* volatile a21; /* system_name */
	T0* volatile a22; /* any_type */
	T0* volatile a23; /* detachable_any_type */
	T0* volatile a24; /* detachable_separate_any_type */
	T0* volatile a25; /* any_parent */
	T0* volatile a26; /* any_parents */
	T0* volatile a27; /* any_clients */
	T0* volatile a28; /* tuple_type */
	T0* volatile a29; /* detachable_tuple_type */
	T0* volatile a30; /* tuple_identity_type */
	T0* volatile a31; /* unfolded_empty_tuple_actual_parameters */
	T0* volatile a32; /* array_any_type */
	T0* volatile a33; /* array_detachable_any_type */
	T0* volatile a34; /* array_none_type */
	T0* volatile a35; /* array_identity_type */
	T0* volatile a36; /* boolean_type */
	T0* volatile a37; /* character_type */
	T0* volatile a38; /* character_8_type */
	T0* volatile a39; /* character_8_convert_feature */
	T0* volatile a40; /* character_32_type */
	T0* volatile a41; /* character_32_convert_feature */
	T0* volatile a42; /* double_type */
	T0* volatile a43; /* exception_type */
	T0* volatile a44; /* detachable_exception_type */
	T0* volatile a45; /* exception_manager_type */
	T0* volatile a46; /* function_identity_any_type */
	T0* volatile a47; /* immutable_string_8_type */
	T0* volatile a48; /* immutable_string_32_type */
	T0* volatile a49; /* integer_type */
	T0* volatile a50; /* integer_8_type */
	T0* volatile a51; /* integer_8_convert_feature */
	T0* volatile a52; /* integer_16_type */
	T0* volatile a53; /* integer_16_convert_feature */
	T0* volatile a54; /* integer_32_type */
	T0* volatile a55; /* integer_32_convert_feature */
	T0* volatile a56; /* integer_64_type */
	T0* volatile a57; /* integer_64_convert_feature */
	T0* volatile a58; /* ise_exception_manager_type */
	T0* volatile a59; /* iterable_detachable_separate_any_type */
	T0* volatile a60; /* natural_type */
	T0* volatile a61; /* natural_8_type */
	T0* volatile a62; /* natural_8_convert_feature */
	T0* volatile a63; /* natural_16_type */
	T0* volatile a64; /* natural_16_convert_feature */
	T0* volatile a65; /* natural_32_type */
	T0* volatile a66; /* natural_32_convert_feature */
	T0* volatile a67; /* natural_64_type */
	T0* volatile a68; /* natural_64_convert_feature */
	T0* volatile a69; /* none_type */
	T0* volatile a70; /* detachable_none_type */
	T0* volatile a71; /* pointer_type */
	T0* volatile a72; /* predicate_identity_type */
	T0* volatile a73; /* procedure_identity_type */
	T0* volatile a74; /* real_type */
	T0* volatile a75; /* real_32_type */
	T0* volatile a76; /* real_32_convert_feature */
	T0* volatile a77; /* real_64_type */
	T0* volatile a78; /* real_64_convert_feature */
	T0* volatile a79; /* routine_identity_type */
	T0* volatile a80; /* special_any_type */
	T0* volatile a81; /* special_detachable_any_type */
	T0* volatile a82; /* special_identity_type */
	T0* volatile a83; /* string_type */
	T0* volatile a84; /* detachable_string_type */
	T0* volatile a85; /* string_8_type */
	T0* volatile a86; /* detachable_string_8_type */
	T0* volatile a87; /* string_8_convert_feature */
	T0* volatile a88; /* string_32_type */
	T0* volatile a89; /* string_32_convert_feature */
	T0* volatile a90; /* system_object_type */
	T0* volatile a91; /* system_object_parents */
	T0* volatile a92; /* system_string_type */
	T0* volatile a93; /* type_detachable_any_type */
	T0* volatile a94; /* detachable_type_exception_type */
	T0* volatile a95; /* type_detachable_exception_type */
	T0* volatile a96; /* type_detachable_like_current_type */
	T0* volatile a97; /* type_identity_type */
	T0* volatile a98; /* typed_pointer_identity_type */
	T0* volatile a99; /* wide_character_type */
	T1 volatile a100; /* is_read_only */
	T6 volatile a101; /* registered_class_count */
	T0* volatile a102; /* targets */
	T0* volatile a103; /* library_target */
	T0* volatile a104; /* selected_target */
	T0* volatile a105; /* ecf_version */
	T0* volatile a106; /* executable_name */
	T0* volatile a107; /* root_type */
	T0* volatile a108; /* root_creation */
	T6 volatile a109; /* default_create_seed */
	T1 volatile a110; /* inlining_mode */
	T6 volatile a111; /* inlining_size */
	T1 volatile a112; /* scoop_mode */
	T1 volatile a113; /* attachment_type_conformance_mode */
	T6 volatile a114; /* twin_seed */
	T6 volatile a115; /* is_equal_seed */
	T6 volatile a116; /* dispose_seed */
	T1 volatile a117; /* use_boehm_gc */
	T6 volatile a118; /* routine_call_seed */
	T6 volatile a119; /* function_item_seed */
	T1 volatile a120; /* trace_mode */
	T1 volatile a121; /* exception_trace_mode */
	T1 volatile a122; /* check_for_void_target_mode */
	T1 volatile a123; /* line_generation_mode */
	T1 volatile a124; /* multithreaded_mode */
	T6 volatile a125; /* copy_seed */
	T0* volatile a126; /* ecf_namespace */
	T0* volatile a127; /* description */
	T0* volatile a128; /* notes */
	T0* volatile a129; /* uuid */
	T1 volatile a130; /* is_preparsed */
	T0* volatile a131; /* scm_read_mapping_builder */
	T0* volatile a132; /* scm_write_mapping_builder */
	T1 volatile a133; /* use_obsolete_syntax_mode */
	T1 volatile a134; /* obsolete_iteration_mode */
	T1 volatile a135; /* target_type_attachment_mode */
	T6 volatile a136; /* iterable_new_cursor_seed */
	T6 volatile a137; /* iteration_cursor_after_seed */
	T6 volatile a138; /* iteration_cursor_forth_seed */
	T6 volatile a139; /* iteration_cursor_item_seed */
	T1 volatile a140; /* is_dotnet */
	T6 volatile a141; /* special_item_seed */
	T1 volatile a142; /* obsolete_routine_type_mode */
};

/* Struct for type ET_ECF_TARGET */
struct S88 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* settings */
	T0* volatile a2; /* capabilities */
	T0* volatile a3; /* options */
	T0* volatile a4; /* system_config */
	T0* volatile a5; /* root */
	T0* volatile a6; /* variables */
	T0* volatile a7; /* name */
	T0* volatile a8; /* parent */
	T0* volatile a9; /* description */
	T0* volatile a10; /* precompiled_library */
	T0* volatile a11; /* version */
	T1 volatile a12; /* is_abstract */
	T0* volatile a13; /* clusters */
	T0* volatile a14; /* libraries */
	T0* volatile a15; /* dotnet_assemblies */
	T0* volatile a16; /* file_rules */
	T0* volatile a17; /* class_mappings */
	T0* volatile a18; /* namespaces */
	T0* volatile a19; /* external_cflags */
	T0* volatile a20; /* external_includes */
	T0* volatile a21; /* external_libraries */
	T0* volatile a22; /* external_linker_flags */
	T0* volatile a23; /* external_makes */
	T0* volatile a24; /* external_objects */
	T0* volatile a25; /* external_resources */
	T0* volatile a26; /* pre_compile_actions */
	T0* volatile a27; /* post_compile_actions */
	T0* volatile a28; /* notes */
};

/* Struct for type ET_ECF_CLUSTER */
struct S89 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* pathname */
	T1 volatile a3; /* is_relative */
	T0* volatile a4; /* universe */
	T0* volatile a5; /* target */
	T0* volatile a6; /* options */
	T1 volatile a7; /* overridden_constraint_enabled */
	T1 volatile a8; /* scm_mapping_constraint_enabled */
	T0* volatile a9; /* subclusters */
	T1 volatile a10; /* use_obsolete_syntax */
	T0* volatile a11; /* scm_read_mapping */
	T0* volatile a12; /* scm_write_mapping */
	T0* volatile a13; /* description */
	T1 volatile a14; /* is_hidden */
	T0* volatile a15; /* classname_prefix */
	T1 volatile a16; /* is_read_only */
	T1 volatile a17; /* is_recursive */
	T0* volatile a18; /* conditioned_subclusters */
	T0* volatile a19; /* conditioned_file_rules */
	T0* volatile a20; /* class_options */
	T0* volatile a21; /* class_renamings */
	T0* volatile a22; /* class_mappings */
	T0* volatile a23; /* visible_classes */
	T0* volatile a24; /* provider_groups */
	T0* volatile a25; /* conditions */
	T0* volatile a26; /* notes */
	T1 volatile a27; /* is_override */
	T0* volatile a28; /* overridden_group */
	T1 volatile a29; /* is_preparsed */
	T1 volatile a30; /* is_abstract */
	T0* volatile a31; /* parent */
	T0* volatile a32; /* file_rules */
	T1 volatile a33; /* is_implicit */
	T0* volatile a34; /* provider_constraint */
	T0* volatile a35; /* dependant_constraint */
	T0* volatile a36; /* cached_absolute_pathname */
};

/* Struct for type ET_ECF_SETTINGS */
struct S90 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* primary_settings */
	T0* volatile a2; /* secondary_settings */
};

/* Struct for type ET_ECF_CAPABILITIES */
struct S91 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* primary_use_capabilities */
	T0* volatile a2; /* primary_support_capabilities */
	T0* volatile a3; /* secondary_capabilities */
};

/* Struct for type ET_ECF_VARIABLES */
struct S92 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* secondary_variables */
	T0* volatile a2; /* primary_variables */
};

/* Struct for type ET_CLUSTERS */
struct S94 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* clusters */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S95 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* current_system */
	T0* volatile a3; /* dynamic_types */
	T0* volatile a4; /* dynamic_type_set_builder */
	T1 volatile a5; /* catcall_error_mode */
	T0* volatile a6; /* system_processor */
	T0* volatile a7; /* dynamic_generic_types_by_name */
	T0* volatile a8; /* null_dynamic_type_set_builder */
	T1 volatile a9; /* full_class_checking */
	T1 volatile a10; /* catcall_warning_mode */
	T0* volatile a11; /* new_instance_types */
	T0* volatile a12; /* unknown_type */
	T0* volatile a13; /* boolean_type */
	T0* volatile a14; /* character_8_type */
	T0* volatile a15; /* character_32_type */
	T0* volatile a16; /* immutable_string_8_type */
	T0* volatile a17; /* immutable_string_32_type */
	T0* volatile a18; /* integer_8_type */
	T0* volatile a19; /* integer_16_type */
	T0* volatile a20; /* integer_32_type */
	T0* volatile a21; /* integer_64_type */
	T0* volatile a22; /* natural_8_type */
	T0* volatile a23; /* natural_16_type */
	T0* volatile a24; /* natural_32_type */
	T0* volatile a25; /* natural_64_type */
	T0* volatile a26; /* real_32_type */
	T0* volatile a27; /* real_64_type */
	T0* volatile a28; /* pointer_type */
	T0* volatile a29; /* string_8_type */
	T0* volatile a30; /* string_32_type */
	T0* volatile a31; /* special_character_8_type */
	T0* volatile a32; /* special_character_32_type */
	T0* volatile a33; /* type_none_type */
	T0* volatile a34; /* ise_exception_manager_type */
	T0* volatile a35; /* any_type */
	T0* volatile a36; /* none_type */
	T0* volatile a37; /* root_type */
	T0* volatile a38; /* root_creation_procedure */
	T0* volatile a39; /* special_count_feature */
	T0* volatile a40; /* special_capacity_feature */
	T0* volatile a41; /* special_item_feature */
	T0* volatile a42; /* array_area_feature */
	T0* volatile a43; /* array_lower_feature */
	T0* volatile a44; /* array_upper_feature */
	T0* volatile a45; /* typed_pointer_to_pointer_feature */
	T0* volatile a46; /* routine_closed_operands_feature */
	T0* volatile a47; /* routine_rout_disp_feature */
	T0* volatile a48; /* routine_set_rout_disp_final_feature */
	T0* volatile a49; /* ise_exception_manager_init_exception_manager_feature */
	T0* volatile a50; /* ise_exception_manager_last_exception_feature */
	T0* volatile a51; /* ise_exception_manager_once_raise_feature */
	T0* volatile a52; /* ise_exception_manager_set_exception_data_feature */
	T1 volatile a53; /* has_special_once_per_object_routines */
	T0* volatile a54; /* ise_runtime_type_conforms_to_feature */
	T1 volatile a55; /* in_dynamic_primary_type */
	T0* volatile a56; /* ise_runtime_new_type_instance_of_feature */
	T1 volatile a57; /* in_create_meta_type */
	T1 volatile a58; /* all_attributes_used */
	T1 volatile a59; /* has_separate_creation */
	T0* volatile a60; /* ise_runtime_reference_field_feature */
	T0* volatile a61; /* ise_runtime_set_reference_field_feature */
};

/* Struct for type DT_DATE_TIME */
struct S97 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* time_storage */
	T6 volatile a2; /* date_storage */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S99 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* internal_cursor */
	T0* volatile a3; /* item_storage */
	T0* volatile a4; /* equality_tester */
	T6 volatile a5; /* count */
	T6 volatile a6; /* capacity */
	T6 volatile a7; /* slots_position */
	T6 volatile a8; /* free_slot */
	T6 volatile a9; /* last_position */
	T6 volatile a10; /* modulus */
	T6 volatile a11; /* clashes_previous_position */
	T6 volatile a12; /* found_position */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* clashes */
	T0* volatile a15; /* slots */
	T0* volatile a16; /* hash_function */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S100 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* dynamic_type_set_count */
	T1 volatile a2; /* has_fatal_error */
	T0* volatile a3; /* current_dynamic_system */
	T0* volatile a4; /* feature_checker */
	T0* volatile a5; /* current_dynamic_type */
	T0* volatile a6; /* current_dynamic_feature */
	T0* volatile a7; /* dynamic_type_sets */
	T0* volatile a8; /* object_id_dynamic_type_set */
	T0* volatile a9; /* precursors */
	T0* volatile a10; /* dummy_operand */
	T1 volatile a11; /* catcall_error_mode */
	T1 volatile a12; /* catcall_warning_mode */
	T1 volatile a13; /* no_debug */
	T1 volatile a14; /* is_built */
	T0* volatile a15; /* alive_conforming_descendants_per_type */
	T0* volatile a16; /* type_checker */
	T0* volatile a17; /* current_type */
	T0* volatile a18; /* current_class */
	T0* volatile a19; /* current_feature */
	T0* volatile a20; /* current_feature_impl */
	T0* volatile a21; /* current_class_impl */
	T0* volatile a22; /* enclosing_inline_agents */
	T0* volatile a23; /* unused_overloaded_procedures_list */
	T0* volatile a24; /* unused_overloaded_queries_list */
	T0* volatile a25; /* unused_overloaded_features_list */
	T0* volatile a26; /* unused_call_infos */
	T0* volatile a27; /* unused_contexts */
	T0* volatile a28; /* current_context */
	T0* volatile a29; /* current_target_type */
	T0* volatile a30; /* current_object_test_types */
	T0* volatile a31; /* current_object_test_scope */
	T0* volatile a32; /* object_test_scope_builder */
	T0* volatile a33; /* current_iteration_cursor_types */
	T0* volatile a34; /* current_iteration_item_types */
	T0* volatile a35; /* current_iteration_item_scope */
	T0* volatile a36; /* current_inline_separate_argument_types */
	T0* volatile a37; /* current_inline_separate_argument_scope */
	T0* volatile a38; /* current_initialization_scope */
	T0* volatile a39; /* current_attachment_scope */
	T0* volatile a40; /* attachment_scope_builder */
	T0* volatile a41; /* unused_attachment_scopes */
	T0* volatile a42; /* assertions_by_feature */
	T0* volatile a43; /* common_ancestor_type_list */
	T0* volatile a44; /* note_term_list */
	T0* volatile a45; /* vape_non_descendant_clients */
	T0* volatile a46; /* vape_creation_clients */
	T0* volatile a47; /* vape_client */
	T0* volatile a48; /* unused_adapted_base_classes */
	T0* volatile a49; /* adapted_base_class_checker */
	T0* volatile a50; /* system_processor */
	T1 volatile a51; /* in_precursor */
	T1 volatile a52; /* in_static_feature */
	T6 volatile a53; /* index_offset */
	T6 volatile a54; /* index_count */
	T6 volatile a55; /* result_index */
	T6 volatile a56; /* attached_result_index */
	T6 volatile a57; /* current_index */
	T6 volatile a58; /* boolean_index */
	T6 volatile a59; /* character_8_index */
	T6 volatile a60; /* character_32_index */
	T6 volatile a61; /* integer_8_index */
	T6 volatile a62; /* integer_16_index */
	T6 volatile a63; /* integer_32_index */
	T6 volatile a64; /* integer_64_index */
	T6 volatile a65; /* natural_8_index */
	T6 volatile a66; /* natural_16_index */
	T6 volatile a67; /* natural_32_index */
	T6 volatile a68; /* natural_64_index */
	T6 volatile a69; /* pointer_index */
	T6 volatile a70; /* real_32_index */
	T6 volatile a71; /* real_64_index */
	T6 volatile a72; /* string_8_index */
	T6 volatile a73; /* string_32_index */
	T6 volatile a74; /* immutable_string_8_index */
	T6 volatile a75; /* immutable_string_32_index */
	T6 volatile a76; /* void_index */
	T1 volatile a77; /* in_precondition */
	T1 volatile a78; /* in_postcondition */
	T1 volatile a79; /* in_invariant */
	T0* volatile a80; /* supplier_handler */
	T0* volatile a81; /* current_inline_agent */
	T1 volatile a82; /* in_check_instruction */
	T1 volatile a83; /* in_rescue */
	T0* volatile a84; /* precursor_queries */
	T0* volatile a85; /* precursor_procedures */
};

/* Struct for type ET_CLASS_TYPE */
struct S102 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type_mark */
	T0* volatile a2; /* name */
	T0* volatile a3; /* named_base_class */
	T0* volatile a4; /* actual_parameters */
	T1 volatile a5; /* tuple_actual_parameters_unfolded_2 */
	T1 volatile a6; /* tuple_actual_parameters_unfolded_1 */
};

/* Struct for type UT_VERSION_NUMBER */
struct S103 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S105 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* return_code */
};

/* Struct for type UT_MESSAGE */
struct S106 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S107 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* match_count */
	T0* volatile a2; /* subject */
	T0* volatile a3; /* offset_vector */
	T6 volatile a4; /* offset_vector_count */
	T6 volatile a5; /* brastart_capacity */
	T0* volatile a6; /* brastart_vector */
	T6 volatile a7; /* brastart_lower */
	T6 volatile a8; /* brastart_count */
	T6 volatile a9; /* eptr_capacity */
	T0* volatile a10; /* eptr_vector */
	T6 volatile a11; /* eptr_lower */
	T6 volatile a12; /* eptr_upper */
	T0* volatile a13; /* byte_code */
	T0* volatile a14; /* internal_start_bits */
	T0* volatile a15; /* pattern_buffer */
	T6 volatile a16; /* subexpression_count */
	T0* volatile a17; /* pattern */
	T6 volatile a18; /* pattern_count */
	T6 volatile a19; /* pattern_position */
	T6 volatile a20; /* code_index */
	T6 volatile a21; /* maxbackrefs */
	T10 volatile a22; /* optchanged */
	T7 volatile a23; /* first_character */
	T7 volatile a24; /* required_character */
	T6 volatile a25; /* regexp_countlits */
	T0* volatile a26; /* start_bits */
	T0* volatile a27; /* error_message */
	T1 volatile a28; /* is_anchored */
	T0* volatile a29; /* character_case_mapping */
	T0* volatile a30; /* word_set */
	T6 volatile a31; /* subject_next_start */
	T6 volatile a32; /* subject_start */
	T6 volatile a33; /* subject_end */
	T6 volatile a34; /* error_code */
	T6 volatile a35; /* error_position */
	T1 volatile a36; /* is_startline */
	T1 volatile a37; /* is_caseless */
	T1 volatile a38; /* is_multiline */
	T1 volatile a39; /* is_dotall */
	T1 volatile a40; /* is_extended */
	T1 volatile a41; /* is_empty_allowed */
	T1 volatile a42; /* is_dollar_endonly */
	T1 volatile a43; /* is_bol */
	T1 volatile a44; /* is_eol */
	T1 volatile a45; /* is_greedy */
	T1 volatile a46; /* is_strict */
	T1 volatile a47; /* is_ichanged */
	T6 volatile a48; /* first_matched_index */
	T6 volatile a49; /* eptr */
	T6 volatile a50; /* offset_top */
	T1 volatile a51; /* is_matching_caseless */
	T1 volatile a52; /* is_matching_multiline */
	T1 volatile a53; /* is_matching_dotall */
};

/* Struct for type KL_STRING_ROUTINES */
struct S108 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ST_SPLITTER */
struct S109 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_escape_character */
	T2 volatile a2; /* escape_character */
	T0* volatile a3; /* separator_codes */
	T0* volatile a4; /* separators */
};

/* Struct for type AP_ERROR */
struct S113 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
	T0* volatile a2; /* default_template */
	T0* volatile a3; /* code */
};

/* Struct for type ET_C_GENERATOR */
struct S114 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* never_void_target_count */
	T6 volatile a2; /* can_be_void_target_count */
	T1 volatile a3; /* has_fatal_error */
	T0* volatile a4; /* system_processor */
	T0* volatile a5; /* current_dynamic_system */
	T0* volatile a6; /* dynamic_types */
	T1 volatile a7; /* short_names */
	T1 volatile a8; /* split_mode */
	T6 volatile a9; /* split_threshold */
	T1 volatile a10; /* use_boehm_gc */
	T0* volatile a11; /* system_name */
	T0* volatile a12; /* current_file */
	T0* volatile a13; /* header_file */
	T0* volatile a14; /* current_type */
	T0* volatile a15; /* current_feature */
	T0* volatile a16; /* current_non_inlined_feature */
	T0* volatile a17; /* extra_dynamic_type_sets */
	T0* volatile a18; /* current_dynamic_type_sets */
	T0* volatile a19; /* current_function_header_buffer */
	T0* volatile a20; /* current_function_body_buffer */
	T0* volatile a21; /* current_separate_function_header_buffer */
	T0* volatile a22; /* current_separate_function_body_buffer */
	T0* volatile a23; /* old_expressions */
	T0* volatile a24; /* old_expression_temp_variables */
	T0* volatile a25; /* old_expression_exception_temp_variables */
	T0* volatile a26; /* temp_variables */
	T0* volatile a27; /* used_temp_variables */
	T0* volatile a28; /* free_temp_variables */
	T0* volatile a29; /* frozen_temp_variables */
	T0* volatile a30; /* volatile_temp_variables */
	T0* volatile a31; /* separate_temp_variables */
	T0* volatile a32; /* used_separate_temp_variables */
	T0* volatile a33; /* free_separate_temp_variables */
	T0* volatile a34; /* frozen_separate_temp_variables */
	T0* volatile a35; /* volatile_separate_temp_variables */
	T0* volatile a36; /* unused_equality_expressions */
	T0* volatile a37; /* unused_equality_types */
	T0* volatile a38; /* unused_object_equality_types */
	T0* volatile a39; /* unused_unqualified_call_expressions */
	T0* volatile a40; /* unused_qualified_call_expressions */
	T0* volatile a41; /* unused_actual_argument_lists */
	T0* volatile a42; /* unused_result_expressions */
	T0* volatile a43; /* unused_identifiers */
	T0* volatile a44; /* conforming_types */
	T0* volatile a45; /* non_conforming_types */
	T0* volatile a46; /* equality_type_set */
	T0* volatile a47; /* equality_common_types */
	T0* volatile a48; /* equality_common_reference_types */
	T0* volatile a49; /* unused_standalone_type_sets */
	T0* volatile a50; /* operand_stack */
	T0* volatile a51; /* call_operands */
	T0* volatile a52; /* attachment_dynamic_type_ids */
	T0* volatile a53; /* target_dynamic_type_ids */
	T0* volatile a54; /* target_dynamic_types */
	T0* volatile a55; /* standalone_type_sets */
	T0* volatile a56; /* deep_twin_types */
	T0* volatile a57; /* deep_equal_types */
	T0* volatile a58; /* deep_feature_target_type_sets */
	T0* volatile a59; /* current_object_tests */
	T0* volatile a60; /* current_object_test_local_types */
	T0* volatile a61; /* current_object_test_locals */
	T0* volatile a62; /* object_test_local_name */
	T0* volatile a63; /* current_iteration_cursor_types */
	T0* volatile a64; /* current_iteration_cursors */
	T0* volatile a65; /* iteration_cursor_name */
	T0* volatile a66; /* current_inline_separate_arguments */
	T0* volatile a67; /* current_equalities */
	T0* volatile a68; /* current_agents */
	T0* volatile a69; /* agent_open_operands */
	T0* volatile a70; /* agent_closed_operands */
	T0* volatile a71; /* agent_target */
	T0* volatile a72; /* agent_arguments */
	T0* volatile a73; /* agent_instruction */
	T0* volatile a74; /* agent_expression */
	T0* volatile a75; /* agent_inline_separate_argument */
	T0* volatile a76; /* agent_controlled_target_instruction */
	T0* volatile a77; /* agent_expression_assignment */
	T0* volatile a78; /* agent_controlled_target_expression */
	T0* volatile a79; /* agent_closed_operands_type */
	T0* volatile a80; /* agent_manifest_tuple */
	T0* volatile a81; /* separate_call_arguments */
	T0* volatile a82; /* separate_call_instruction */
	T0* volatile a83; /* separate_call_expression */
	T0* volatile a84; /* separate_arguments */
	T0* volatile a85; /* formal_arguments */
	T0* volatile a86; /* manifest_array_types */
	T0* volatile a87; /* big_manifest_array_types */
	T0* volatile a88; /* manifest_tuple_types */
	T0* volatile a89; /* once_features */
	T0* volatile a90; /* once_per_process_counts */
	T0* volatile a91; /* once_per_thread_counts */
	T0* volatile a92; /* constant_features */
	T0* volatile a93; /* inline_constants */
	T0* volatile a94; /* dispose_procedures */
	T0* volatile a95; /* dynamic_type_id_set_names */
	T0* volatile a96; /* used_inlined_operands */
	T0* volatile a97; /* unused_inlined_operands */
	T0* volatile a98; /* used_call_contexts */
	T0* volatile a99; /* unused_call_contexts */
	T6 volatile a100; /* max_nested_inlining_count */
	T0* volatile a101; /* inlined_void */
	T0* volatile a102; /* inlined_integer */
	T0* volatile a103; /* inlined_real */
	T0* volatile a104; /* inlined_character */
	T0* volatile a105; /* inlined_boolean */
	T0* volatile a106; /* called_features */
	T0* volatile a107; /* inlined_features */
	T0* volatile a108; /* included_header_filenames */
	T0* volatile a109; /* included_cpp_header_filenames */
	T0* volatile a110; /* included_runtime_header_files */
	T0* volatile a111; /* included_runtime_c_files */
	T0* volatile a112; /* c_filenames */
	T1 volatile a113; /* scoop_exceptions_stop_when_dirty */
	T1 volatile a114; /* finalize_mode */
	T0* volatile a115; /* locals_written_in_body */
	T0* volatile a116; /* locals_written_in_rescue */
	T0* volatile a117; /* locals_written */
	T0* volatile a118; /* locals_read_in_body */
	T0* volatile a119; /* locals_read_in_rescue */
	T0* volatile a120; /* locals_read */
	T0* volatile a121; /* volatile_locals */
	T0* volatile a122; /* volatile_object_test_locals */
	T0* volatile a123; /* volatile_iteration_cursors */
	T0* volatile a124; /* volatile_inline_separate_arguments */
	T0* volatile a125; /* external_c_regexp */
	T0* volatile a126; /* external_c_macro_regexp */
	T0* volatile a127; /* external_c_struct_regexp */
	T0* volatile a128; /* external_c_inline_regexp */
	T0* volatile a129; /* old_external_c_regexp */
	T0* volatile a130; /* old_external_c_macro_regexp */
	T0* volatile a131; /* old_external_c_struct_regexp */
	T0* volatile a132; /* external_cpp_regexp */
	T0* volatile a133; /* external_cpp_macro_regexp */
	T0* volatile a134; /* external_cpp_struct_regexp */
	T0* volatile a135; /* external_cpp_inline_regexp */
	T0* volatile a136; /* external_dllwin_regexp */
	T0* volatile a137; /* old_external_dllwin32_regexp */
	T1 volatile a138; /* type_info_ancestors_used */
	T1 volatile a139; /* type_info_attributes_used */
	T1 volatile a140; /* type_info_attribute_name_used */
	T1 volatile a141; /* type_info_attribute_type_id_used */
	T1 volatile a142; /* type_info_attribute_offset_used */
	T1 volatile a143; /* type_info_generator_used */
	T1 volatile a144; /* type_info_name_used */
	T1 volatile a145; /* type_info_generic_parameters_used */
	T1 volatile a146; /* type_info_object_size_used */
	T6 volatile a147; /* current_index */
	T6 volatile a148; /* index_offset */
	T0* volatile a149; /* c_file */
	T6 volatile a150; /* c_file_size */
	T6 volatile a151; /* current_separate_call_count */
	T0* volatile a152; /* cpp_file */
	T6 volatile a153; /* cpp_file_size */
	T6 volatile a154; /* indentation */
	T0* volatile a155; /* call_target_type */
	T1 volatile a156; /* in_qualified_call */
	T0* volatile a157; /* assignment_target */
	T1 volatile a158; /* in_operand */
	T1 volatile a159; /* in_procedure_call_target */
	T0* volatile a160; /* inlining_context */
	T1 volatile a161; /* has_rescue */
	T1 volatile a162; /* result_written */
	T1 volatile a163; /* result_read */
	T0* volatile a164; /* current_agent */
	T1 volatile a165; /* in_separate_creation_call */
	T1 volatile a166; /* call_target_check_void */
	T6 volatile a167; /* nested_inlining_count */
	T1 volatile a168; /* volatile_result */
	T1 volatile a169; /* has_retry */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
struct S116 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type KL_SHELL_COMMAND */
struct S117 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* exit_code */
	T0* volatile a2; /* command */
	T6 volatile a3; /* return_code */
	T1 volatile a4; /* is_system_code */
};

/* Struct for type GECC */
struct S118 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* exit_code */
	T0* volatile a2; /* error_handler */
	T0* volatile a3; /* version_flag */
	T0* volatile a4; /* script_filename */
	T0* volatile a5; /* thread_option */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S119 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type VOID_TARGET */
struct S120 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type ROUTINE_FAILURE */
struct S122 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* routine_name */
	T0* volatile a4; /* class_name */
	T0* volatile a5; /* c_description */
	T0* volatile a6; /* recipient_name */
	T0* volatile a7; /* type_name */
};

/* Struct for type OLD_VIOLATION */
struct S124 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type NO_MORE_MEMORY */
struct S126 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T6 volatile a3; /* internal_code */
	T0* volatile a4; /* c_description */
	T0* volatile a5; /* recipient_name */
	T0* volatile a6; /* type_name */
};

/* Struct for type INVARIANT_VIOLATION */
struct S127 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T1 volatile a3; /* is_entry */
	T0* volatile a4; /* c_description */
	T0* volatile a5; /* recipient_name */
	T0* volatile a6; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S128 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T6 volatile a3; /* signal_code */
	T0* volatile a4; /* c_description */
	T0* volatile a5; /* recipient_name */
	T0* volatile a6; /* type_name */
};

/* Struct for type IO_FAILURE */
struct S129 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T6 volatile a3; /* internal_code */
	T6 volatile a4; /* error_code */
	T0* volatile a5; /* c_description */
	T0* volatile a6; /* recipient_name */
	T0* volatile a7; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_FAILURE */
struct S130 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T6 volatile a3; /* error_code */
	T0* volatile a4; /* c_description */
	T0* volatile a5; /* recipient_name */
	T0* volatile a6; /* type_name */
};

/* Struct for type COM_FAILURE */
struct S131 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T6 volatile a3; /* hresult_code */
	T0* volatile a4; /* exception_information */
	T6 volatile a5; /* hresult */
	T0* volatile a6; /* c_description */
	T0* volatile a7; /* recipient_name */
	T0* volatile a8; /* type_name */
};

/* Struct for type EIFFEL_RUNTIME_PANIC */
struct S132 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T6 volatile a3; /* internal_code */
	T0* volatile a4; /* c_description */
	T0* volatile a5; /* recipient_name */
	T0* volatile a6; /* type_name */
};

/* Struct for type PRECONDITION_VIOLATION */
struct S134 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type POSTCONDITION_VIOLATION */
struct S135 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type FLOATING_POINT_FAILURE */
struct S136 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type CHECK_VIOLATION */
struct S137 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type BAD_INSPECT_VALUE */
struct S138 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type VARIANT_VIOLATION */
struct S139 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type LOOP_INVARIANT_VIOLATION */
struct S140 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type RESCUE_FAILURE */
struct S141 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type RESUMPTION_FAILURE */
struct S142 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type CREATE_ON_DEFERRED */
struct S143 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type EXTERNAL_FAILURE */
struct S144 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type VOID_ASSIGNED_TO_EXPANDED */
struct S145 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S146 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type MISMATCH_FAILURE */
struct S147 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type DEVELOPER_EXCEPTION */
struct S148 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S149 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type SERIALIZATION_FAILURE */
struct S150 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* throwing_exception */
	T0* volatile a2; /* internal_trace */
	T0* volatile a3; /* c_description */
	T0* volatile a4; /* recipient_name */
	T0* volatile a5; /* type_name */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S151 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S152 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type PRIMES */
struct S153 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S154 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T6 volatile z2[]; /* item */
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S155 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T1 volatile z2[]; /* item */
};

/* Struct for type ARGUMENTS_32 */
struct S156 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type MUTEX */
struct S159 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* mutex_pointer */
	T14 volatile a2; /* owner_thread_id */
};

/* Struct for type UT_ERROR_HANDLER */
struct S160 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* error_file */
	T0* volatile a2; /* warning_file */
	T0* volatile a3; /* info_file */
};

/* Struct for type KL_STDOUT_FILE */
struct S161 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type MANAGED_POINTER */
struct S162 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* item */
	T1 volatile a2; /* is_shared */
	T6 volatile a3; /* count */
};

/* Struct for type KL_LINKABLE [CHARACTER_8] */
struct S164 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type FILE_INFO */
struct S166 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* buffered_file_info */
	T1 volatile a2; /* is_following_symlinks */
	T1 volatile a3; /* exists */
	T0* volatile a4; /* internal_file_name */
	T0* volatile a5; /* internal_name_pointer */
};

/* Struct for type KL_DIRECTORY */
struct S167 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* end_of_input */
	T0* volatile a2; /* last_entry */
	T0* volatile a3; /* name */
	T6 volatile a4; /* mode */
	T0* volatile a5; /* internal_detachable_name_pointer */
	T0* volatile a6; /* string_name */
	T0* volatile a7; /* entry_buffer */
	T1 volatile a8; /* old_end_of_input */
	T14 volatile a9; /* directory_pointer */
	T14 volatile a10; /* last_entry_pointer */
	T0* volatile a11; /* lastentry */
	T0* volatile a12; /* internal_name */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S168 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S170 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* internal_cursor */
	T0* volatile a4; /* special_routines */
	T6 volatile a5; /* capacity */
	T0* volatile a6; /* equality_tester */
};

/* Struct for type TUPLE [ET_UNIVERSE] */
struct S171 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_UNIVERSE]] */
struct S172 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
struct S173 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S174 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* libraries */
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S175 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* dotnet_assemblies */
};

/* Struct for type ET_IMPLICIT_TYPE_MARK */
struct S177 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* is_expanded_mark */
	T1 volatile a2; /* is_separate_mark */
	T1 volatile a3; /* is_attached_mark */
	T1 volatile a4; /* is_reference_mark */
	T1 volatile a5; /* is_detachable_mark */
	T1 volatile a6; /* is_non_separate_mark */
};

/* Struct for type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S178 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_equality_tester */
	T0* volatile a4; /* internal_keys */
	T6 volatile a5; /* position */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* capacity */
	T6 volatile a8; /* count */
	T0* volatile a9; /* equality_tester */
	T6 volatile a10; /* modulus */
	T6 volatile a11; /* slots_position */
	T6 volatile a12; /* clashes_previous_position */
	T0* volatile a13; /* clashes */
	T0* volatile a14; /* slots */
	T0* volatile a15; /* special_item_routines */
	T0* volatile a16; /* special_key_routines */
	T0* volatile a17; /* key_storage */
	T6 volatile a18; /* free_slot */
	T0* volatile a19; /* internal_cursor */
	T0* volatile a20; /* hash_function */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S179 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_PARENT */
struct S181 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type */
	T0* volatile a2; /* renames */
	T0* volatile a3; /* exports */
	T0* volatile a4; /* undefines */
	T0* volatile a5; /* redefines */
	T0* volatile a6; /* selects */
	T0* volatile a7; /* end_keyword */
};

/* Struct for type ET_PARENT_LIST */
struct S182 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* inherit_keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
	T0* volatile a4; /* clients_clause */
};

/* Struct for type ET_CLIENT_LIST */
struct S183 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type ET_TUPLE_TYPE */
struct S184 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* actual_parameters */
	T0* volatile a2; /* type_mark */
	T0* volatile a3; /* named_base_class */
	T0* volatile a4; /* tuple_keyword */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S186 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* left_bracket */
	T0* volatile a4; /* right_bracket */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S187 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* types */
	T0* volatile a3; /* type */
};

/* Struct for type DS_HASH_SET [ET_UNIVERSE] */
struct S188 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T6 volatile a2; /* capacity */
	T6 volatile a3; /* modulus */
	T6 volatile a4; /* last_position */
	T6 volatile a5; /* free_slot */
	T6 volatile a6; /* slots_position */
	T6 volatile a7; /* count */
	T6 volatile a8; /* clashes_previous_position */
	T0* volatile a9; /* special_item_routines */
	T0* volatile a10; /* item_storage */
	T0* volatile a11; /* clashes */
	T0* volatile a12; /* slots */
	T6 volatile a13; /* found_position */
	T0* volatile a14; /* internal_cursor */
	T0* volatile a15; /* equality_tester */
	T0* volatile a16; /* hash_function */
};

/* Struct for type ET_MASTER_CLASS */
struct S189 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* processing_mutex */
	T0* volatile a2; /* first_local_override_class */
	T0* volatile a3; /* first_local_non_override_class */
	T0* volatile a4; /* first_local_ignored_class */
	T0* volatile a5; /* other_local_override_classes */
	T0* volatile a6; /* other_local_non_override_classes */
	T0* volatile a7; /* other_local_ignored_classes */
	T0* volatile a8; /* first_local_hidden_class */
	T0* volatile a9; /* other_local_hidden_classes */
	T0* volatile a10; /* mapped_class */
	T0* volatile a11; /* first_overriding_class */
	T0* volatile a12; /* intrinsic_class */
	T0* volatile a13; /* name */
	T0* volatile a14; /* universe */
	T0* volatile a15; /* status_mutex */
	T1 volatile a16; /* unprotected_is_marked */
	T1 volatile a17; /* is_modified */
	T0* volatile a18; /* first_imported_class */
	T0* volatile a19; /* other_imported_classes */
	T0* volatile a20; /* other_overriding_classes */
};

/* Struct for type ET_CLIENT */
struct S190 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* named_base_class */
};

/* Struct for type ET_KEYWORD */
struct S192 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* code */
	T0* volatile a2; /* text */
	T6 volatile a3; /* compressed_position */
	T0* volatile a4; /* break */
};

/* Struct for type ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
struct S193 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* separateness_keyword */
	T0* volatile a2; /* attachment_mark */
};

/* Struct for type ET_RENAME_LIST */
struct S194 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* rename_keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S195 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* export_keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S196 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
};

/* Struct for type ET_NONE_GROUP */
struct S199 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* universe */
	T1 volatile a3; /* use_obsolete_syntax */
	T0* volatile a4; /* cached_absolute_pathname */
};

/* Struct for type ET_LIKE_CURRENT */
struct S200 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type_mark */
	T0* volatile a2; /* like_keyword */
	T0* volatile a3; /* current_keyword */
	T1 volatile a4; /* is_controlled */
};

/* Struct for type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S202 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* tuple_type */
};

/* Struct for type ET_LIBRARY */
struct S204 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* current_system */
	T0* volatile a2; /* library */
	T0* volatile a3; /* name */
	T0* volatile a4; /* libraries */
	T0* volatile a5; /* clusters */
	T0* volatile a6; /* dotnet_assemblies */
	T0* volatile a7; /* implicit_attachment_type_mark */
	T0* volatile a8; /* master_classes */
	T0* volatile a9; /* master_class_mutex */
	T0* volatile a10; /* any_type */
	T0* volatile a11; /* detachable_any_type */
	T0* volatile a12; /* detachable_separate_any_type */
	T0* volatile a13; /* any_parent */
	T0* volatile a14; /* any_parents */
	T0* volatile a15; /* any_clients */
	T0* volatile a16; /* tuple_type */
	T0* volatile a17; /* detachable_tuple_type */
	T0* volatile a18; /* tuple_identity_type */
	T0* volatile a19; /* unfolded_empty_tuple_actual_parameters */
	T0* volatile a20; /* array_any_type */
	T0* volatile a21; /* array_detachable_any_type */
	T0* volatile a22; /* array_none_type */
	T0* volatile a23; /* array_identity_type */
	T0* volatile a24; /* boolean_type */
	T0* volatile a25; /* character_type */
	T0* volatile a26; /* character_8_type */
	T0* volatile a27; /* character_8_convert_feature */
	T0* volatile a28; /* character_32_type */
	T0* volatile a29; /* character_32_convert_feature */
	T0* volatile a30; /* double_type */
	T0* volatile a31; /* exception_type */
	T0* volatile a32; /* detachable_exception_type */
	T0* volatile a33; /* exception_manager_type */
	T0* volatile a34; /* function_identity_any_type */
	T0* volatile a35; /* immutable_string_8_type */
	T0* volatile a36; /* immutable_string_32_type */
	T0* volatile a37; /* integer_type */
	T0* volatile a38; /* integer_8_type */
	T0* volatile a39; /* integer_8_convert_feature */
	T0* volatile a40; /* integer_16_type */
	T0* volatile a41; /* integer_16_convert_feature */
	T0* volatile a42; /* integer_32_type */
	T0* volatile a43; /* integer_32_convert_feature */
	T0* volatile a44; /* integer_64_type */
	T0* volatile a45; /* integer_64_convert_feature */
	T0* volatile a46; /* ise_exception_manager_type */
	T0* volatile a47; /* iterable_detachable_separate_any_type */
	T0* volatile a48; /* natural_type */
	T0* volatile a49; /* natural_8_type */
	T0* volatile a50; /* natural_8_convert_feature */
	T0* volatile a51; /* natural_16_type */
	T0* volatile a52; /* natural_16_convert_feature */
	T0* volatile a53; /* natural_32_type */
	T0* volatile a54; /* natural_32_convert_feature */
	T0* volatile a55; /* natural_64_type */
	T0* volatile a56; /* natural_64_convert_feature */
	T0* volatile a57; /* none_type */
	T0* volatile a58; /* detachable_none_type */
	T0* volatile a59; /* pointer_type */
	T0* volatile a60; /* predicate_identity_type */
	T0* volatile a61; /* procedure_identity_type */
	T0* volatile a62; /* real_type */
	T0* volatile a63; /* real_32_type */
	T0* volatile a64; /* real_32_convert_feature */
	T0* volatile a65; /* real_64_type */
	T0* volatile a66; /* real_64_convert_feature */
	T0* volatile a67; /* routine_identity_type */
	T0* volatile a68; /* special_any_type */
	T0* volatile a69; /* special_detachable_any_type */
	T0* volatile a70; /* special_identity_type */
	T0* volatile a71; /* string_type */
	T0* volatile a72; /* detachable_string_type */
	T0* volatile a73; /* string_8_type */
	T0* volatile a74; /* detachable_string_8_type */
	T0* volatile a75; /* string_8_convert_feature */
	T0* volatile a76; /* string_32_type */
	T0* volatile a77; /* string_32_convert_feature */
	T0* volatile a78; /* system_object_type */
	T0* volatile a79; /* system_object_parents */
	T0* volatile a80; /* system_string_type */
	T0* volatile a81; /* type_detachable_any_type */
	T0* volatile a82; /* detachable_type_exception_type */
	T0* volatile a83; /* type_detachable_exception_type */
	T0* volatile a84; /* type_detachable_like_current_type */
	T0* volatile a85; /* type_identity_type */
	T0* volatile a86; /* typed_pointer_identity_type */
	T0* volatile a87; /* wide_character_type */
	T1 volatile a88; /* is_read_only */
	T1 volatile a89; /* is_preparsed */
};

/* Struct for type TUPLE [ET_LIBRARY] */
struct S205 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_LIBRARY]] */
struct S206 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
struct S207 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type ET_DOTNET_ASSEMBLY */
struct S208 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* pathname */
	T0* volatile a2; /* referenced_assemblies */
	T0* volatile a3; /* current_system */
	T0* volatile a4; /* dotnet_assembly */
	T0* volatile a5; /* name */
	T0* volatile a6; /* implicit_attachment_type_mark */
	T0* volatile a7; /* master_classes */
	T0* volatile a8; /* master_class_mutex */
	T0* volatile a9; /* any_type */
	T0* volatile a10; /* detachable_any_type */
	T0* volatile a11; /* detachable_separate_any_type */
	T0* volatile a12; /* any_parent */
	T0* volatile a13; /* any_parents */
	T0* volatile a14; /* any_clients */
	T0* volatile a15; /* tuple_type */
	T0* volatile a16; /* detachable_tuple_type */
	T0* volatile a17; /* tuple_identity_type */
	T0* volatile a18; /* unfolded_empty_tuple_actual_parameters */
	T0* volatile a19; /* array_any_type */
	T0* volatile a20; /* array_detachable_any_type */
	T0* volatile a21; /* array_none_type */
	T0* volatile a22; /* array_identity_type */
	T0* volatile a23; /* boolean_type */
	T0* volatile a24; /* character_type */
	T0* volatile a25; /* character_8_type */
	T0* volatile a26; /* character_8_convert_feature */
	T0* volatile a27; /* character_32_type */
	T0* volatile a28; /* character_32_convert_feature */
	T0* volatile a29; /* double_type */
	T0* volatile a30; /* exception_type */
	T0* volatile a31; /* detachable_exception_type */
	T0* volatile a32; /* exception_manager_type */
	T0* volatile a33; /* function_identity_any_type */
	T0* volatile a34; /* immutable_string_8_type */
	T0* volatile a35; /* immutable_string_32_type */
	T0* volatile a36; /* integer_type */
	T0* volatile a37; /* integer_8_type */
	T0* volatile a38; /* integer_8_convert_feature */
	T0* volatile a39; /* integer_16_type */
	T0* volatile a40; /* integer_16_convert_feature */
	T0* volatile a41; /* integer_32_type */
	T0* volatile a42; /* integer_32_convert_feature */
	T0* volatile a43; /* integer_64_type */
	T0* volatile a44; /* integer_64_convert_feature */
	T0* volatile a45; /* ise_exception_manager_type */
	T0* volatile a46; /* iterable_detachable_separate_any_type */
	T0* volatile a47; /* natural_type */
	T0* volatile a48; /* natural_8_type */
	T0* volatile a49; /* natural_8_convert_feature */
	T0* volatile a50; /* natural_16_type */
	T0* volatile a51; /* natural_16_convert_feature */
	T0* volatile a52; /* natural_32_type */
	T0* volatile a53; /* natural_32_convert_feature */
	T0* volatile a54; /* natural_64_type */
	T0* volatile a55; /* natural_64_convert_feature */
	T0* volatile a56; /* none_type */
	T0* volatile a57; /* detachable_none_type */
	T0* volatile a58; /* pointer_type */
	T0* volatile a59; /* predicate_identity_type */
	T0* volatile a60; /* procedure_identity_type */
	T0* volatile a61; /* real_type */
	T0* volatile a62; /* real_32_type */
	T0* volatile a63; /* real_32_convert_feature */
	T0* volatile a64; /* real_64_type */
	T0* volatile a65; /* real_64_convert_feature */
	T0* volatile a66; /* routine_identity_type */
	T0* volatile a67; /* special_any_type */
	T0* volatile a68; /* special_detachable_any_type */
	T0* volatile a69; /* special_identity_type */
	T0* volatile a70; /* string_type */
	T0* volatile a71; /* detachable_string_type */
	T0* volatile a72; /* string_8_type */
	T0* volatile a73; /* detachable_string_8_type */
	T0* volatile a74; /* string_8_convert_feature */
	T0* volatile a75; /* string_32_type */
	T0* volatile a76; /* string_32_convert_feature */
	T0* volatile a77; /* system_object_type */
	T0* volatile a78; /* system_object_parents */
	T0* volatile a79; /* system_string_type */
	T0* volatile a80; /* type_detachable_any_type */
	T0* volatile a81; /* detachable_type_exception_type */
	T0* volatile a82; /* type_detachable_exception_type */
	T0* volatile a83; /* type_detachable_like_current_type */
	T0* volatile a84; /* type_identity_type */
	T0* volatile a85; /* typed_pointer_identity_type */
	T0* volatile a86; /* wide_character_type */
	T1 volatile a87; /* is_read_only */
	T1 volatile a88; /* is_preparsed */
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLY] */
struct S209 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S210 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type ST_WORD_WRAPPER */
struct S211 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* new_line_indentation */
	T6 volatile a2; /* broken_words */
	T6 volatile a3; /* maximum_text_width */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S213 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* description */
	T2 volatile a2; /* short_form */
	T1 volatile a3; /* has_short_form */
	T0* volatile a4; /* long_form */
	T6 volatile a5; /* occurrences */
	T1 volatile a6; /* is_hidden */
	T1 volatile a7; /* is_mandatory */
	T6 volatile a8; /* maximum_occurrences */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S214 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T6 volatile a2; /* count */
	T0* volatile a3; /* equality_tester */
	T0* volatile a4; /* storage */
	T0* volatile a5; /* special_routines */
	T6 volatile a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S215 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T6 volatile a5; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S216 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_error */
	T0* volatile a2; /* error_file */
	T0* volatile a3; /* warning_file */
	T0* volatile a4; /* info_file */
};

/* Struct for type DS_LINKABLE [AP_OPTION] */
struct S217 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S218 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T1 volatile a2; /* before */
	T1 volatile a3; /* after */
	T0* volatile a4; /* current_cell */
	T0* volatile a5; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable STRING_8] */
struct S219 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
struct S220 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* container */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S221 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* last_cell */
	T6 volatile a3; /* count */
	T0* volatile a4; /* first_cell */
	T0* volatile a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S222 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_EQUALITY_TESTER [STRING_8] */
struct S223 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S226 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* last_cell */
	T0* volatile a3; /* internal_cursor */
	T0* volatile a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S229 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* last_cell */
	T0* volatile a3; /* internal_cursor */
	T0* volatile a4; /* first_cell */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S230 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S232 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* eiffel_buffer */
	T0* volatile a2; /* system_processor */
	T6 volatile a3; /* last_text_count */
	T6 volatile a4; /* last_literal_start */
	T0* volatile a5; /* filename */
	T0* volatile a6; /* group */
	T0* volatile a7; /* verbatim_marker */
	T6 volatile a8; /* verbatim_marker_count */
	T0* volatile a9; /* verbatim_open_white_characters */
	T0* volatile a10; /* verbatim_close_white_characters */
	T0* volatile a11; /* yy_pushed_start_conditions */
	T0* volatile a12; /* input_buffer */
	T0* volatile a13; /* yy_state_stack */
	T6 volatile a14; /* yy_start_state */
	T6 volatile a15; /* yy_line */
	T6 volatile a16; /* yy_column */
	T6 volatile a17; /* yy_position */
	T6 volatile a18; /* yy_start */
	T6 volatile a19; /* yy_end */
	T6 volatile a20; /* line */
	T6 volatile a21; /* column */
	T6 volatile a22; /* position */
	T0* volatile a23; /* yy_nxt */
	T0* volatile a24; /* yy_chk */
	T0* volatile a25; /* yy_base */
	T0* volatile a26; /* yy_def */
	T0* volatile a27; /* yy_ec */
	T0* volatile a28; /* yy_meta */
	T0* volatile a29; /* yy_accept */
	T0* volatile a30; /* yy_acclist */
	T0* volatile a31; /* yy_content */
	T0* volatile a32; /* yy_content_area */
	T0* volatile a33; /* yy_unicode_content_area */
	T0* volatile a34; /* last_classname */
	T1 volatile a35; /* class_keyword_found */
	T6 volatile a36; /* last_token */
	T1 volatile a37; /* yy_more_flag */
	T6 volatile a38; /* yy_more_len */
	T6 volatile a39; /* yy_state_count */
	T6 volatile a40; /* yy_last_accepting_state */
	T6 volatile a41; /* yy_last_accepting_cpos */
	T6 volatile a42; /* yy_lp */
	T6 volatile a43; /* yy_looking_for_trail_begin */
	T6 volatile a44; /* yy_full_match */
	T6 volatile a45; /* yy_full_state */
	T6 volatile a46; /* yy_full_lp */
	T1 volatile a47; /* yy_rejected */
	T6 volatile a48; /* last_literal_end */
	T6 volatile a49; /* pushed_start_condition_count */
	T6 volatile a50; /* ms_column */
	T6 volatile a51; /* ms_line */
	T6 volatile a52; /* last_break_end */
	T6 volatile a53; /* last_comment_end */
	T3 volatile a54; /* verbatim_opening_character */
};

/* Struct for type ET_MASTER_CLASS_CHECKER */
struct S233 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* current_class */
	T0* volatile a2; /* system_processor */
	T1 volatile a3; /* has_fatal_error */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S234 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* current_class */
	T0* volatile a2; /* system_processor */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S235 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* class_sorter */
	T0* volatile a2; /* ancestors */
	T0* volatile a3; /* conforming_ancestors */
	T0* volatile a4; /* parent_checker */
	T0* volatile a5; /* formal_parameter_checker */
	T0* volatile a6; /* parent_context */
	T0* volatile a7; /* current_class */
	T0* volatile a8; /* system_processor */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S236 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* named_features */
	T0* volatile a2; /* queries */
	T0* volatile a3; /* procedures */
	T0* volatile a4; /* aliased_features */
	T0* volatile a5; /* clients_list */
	T0* volatile a6; /* client_classes */
	T0* volatile a7; /* feature_adaptation_resolver */
	T0* volatile a8; /* dotnet_feature_adaptation_resolver */
	T0* volatile a9; /* identifier_type_resolver */
	T0* volatile a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* volatile a11; /* anchored_type_checker */
	T0* volatile a12; /* signature_checker */
	T0* volatile a13; /* parent_checker */
	T0* volatile a14; /* formal_parameter_checker */
	T0* volatile a15; /* builtin_feature_checker */
	T0* volatile a16; /* precursor_checker */
	T0* volatile a17; /* precursors */
	T0* volatile a18; /* current_class */
	T0* volatile a19; /* system_processor */
	T1 volatile a20; /* has_signature_error */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S237 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* classes_to_be_processed */
	T0* volatile a2; /* qualified_anchored_type_checker */
	T0* volatile a3; /* unfolded_tuple_actual_parameters_resolver */
	T0* volatile a4; /* old_name_rename_table */
	T0* volatile a5; /* new_name_rename_table */
	T0* volatile a6; /* new_alias_name_rename_table */
	T0* volatile a7; /* current_class */
	T0* volatile a8; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S238 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* feature_checker */
	T0* volatile a2; /* named_features */
	T0* volatile a3; /* feature_adaptation_resolver */
	T0* volatile a4; /* system_processor */
	T0* volatile a5; /* dotnet_feature_adaptation_resolver */
	T0* volatile a6; /* signature_checker */
	T0* volatile a7; /* parent_checker3 */
	T0* volatile a8; /* precursor_procedures */
	T0* volatile a9; /* precursor_queries */
	T0* volatile a10; /* supplier_builder */
	T0* volatile a11; /* current_class */
	T0* volatile a12; /* no_suppliers */
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S239 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S240 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T6 volatile a2; /* capacity */
	T0* volatile a3; /* storage */
	T0* volatile a4; /* special_routines */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S242 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* system_processor */
};

/* Struct for type YY_UNICODE_FILE_BUFFER */
struct S244 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_utf8_bom */
	T0* volatile a2; /* content */
	T6 volatile a3; /* index */
	T6 volatile a4; /* line */
	T6 volatile a5; /* column */
	T6 volatile a6; /* position */
	T6 volatile a7; /* count */
	T1 volatile a8; /* filled */
	T1 volatile a9; /* beginning_of_line */
	T6 volatile a10; /* capacity */
	T1 volatile a11; /* end_of_file */
	T1 volatile a12; /* interactive */
	T6 volatile a13; /* encoding */
	T0* volatile a14; /* file */
	T6 volatile a15; /* default_encoding */
};

/* Struct for type KL_STDIN_FILE */
struct S245 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* end_of_file */
	T0* volatile a2; /* last_string */
	T0* volatile a3; /* character_buffer */
	T2 volatile a4; /* last_character */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S246 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* storage */
	T6 volatile a2; /* count */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S247 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S248 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S249 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* storage */
	T6 volatile a2; /* count */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S250 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* storage */
	T6 volatile a2; /* count */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S251 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
struct S252 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
struct S253 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
struct S254 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S255 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S256 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S257 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S258 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* internal_cursor */
	T0* volatile a4; /* special_routines */
	T6 volatile a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S259 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* internal_cursor */
	T0* volatile a4; /* special_routines */
	T6 volatile a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S260 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_NAMED_CLASS] */
struct S261 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* internal_cursor */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* capacity */
	T6 volatile a5; /* modulus */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* position */
	T6 volatile a9; /* slots_position */
	T0* volatile a10; /* special_item_routines */
	T0* volatile a11; /* clashes */
	T0* volatile a12; /* slots */
	T6 volatile a13; /* found_position */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* hash_function */
	T0* volatile a16; /* equality_tester */
};

/* Struct for type YY_BUFFER */
struct S262 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* content */
	T6 volatile a2; /* index */
	T6 volatile a3; /* line */
	T6 volatile a4; /* column */
	T6 volatile a5; /* position */
	T6 volatile a6; /* count */
	T1 volatile a7; /* filled */
	T1 volatile a8; /* beginning_of_line */
	T6 volatile a9; /* capacity */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S263 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* use_obsolete_syntax */
	T0* volatile a2; /* name */
	T0* volatile a3; /* cached_absolute_pathname */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S264 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_UNICODE_CHARACTER_BUFFER */
struct S266 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* as_unicode_special */
	T2 volatile a2; /* invalid_character */
	T0* volatile a3; /* unicode_area */
	T0* volatile a4; /* area */
	T3 volatile a5; /* invalid_unicode_character */
};

/* Struct for type ET_CLIENTS */
struct S268 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* left_brace */
	T0* volatile a2; /* right_brace */
	T6 volatile a3; /* count */
	T0* volatile a4; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S269 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* feature_keyword */
	T0* volatile a2; /* clients */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ANY] */
struct S272 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ANY] */
struct S273 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S274 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD] */
struct S275 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S276 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S277 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* code */
	T6 volatile a2; /* compressed_position */
	T0* volatile a3; /* name */
	T0* volatile a4; /* break */
};

/* Struct for type SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S278 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INVARIANT_KEYWORD] */
struct S279 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_INVARIANT_KEYWORD */
struct S280 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* compressed_position */
	T2 volatile a2; /* code */
	T0* volatile a3; /* name */
	T6 volatile a4; /* seed */
	T0* volatile a5; /* break */
};

/* Struct for type SPECIAL [detachable ET_INVARIANT_KEYWORD] */
struct S281 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S282 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S283 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* code */
	T6 volatile a2; /* compressed_position */
	T0* volatile a3; /* name */
	T6 volatile a4; /* seed */
	T0* volatile a5; /* break */
};

/* Struct for type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S284 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S285 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_SYMBOL */
struct S286 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* break */
	T2 volatile a2; /* code */
	T6 volatile a3; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_SYMBOL] */
struct S287 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S288 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_POSITION] */
struct S290 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S291 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S293 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S294 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_BREAK] */
struct S296 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S297 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S299 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S300 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CURRENT */
struct S301 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* text */
	T6 volatile a3; /* compressed_position */
	T2 volatile a4; /* code */
	T0* volatile a5; /* break */
};

/* Struct for type SPECIAL [detachable ET_CURRENT] */
struct S302 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S303 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_FREE_OPERATOR */
struct S304 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* code */
	T6 volatile a2; /* hash_code */
	T6 volatile a3; /* compressed_position */
	T0* volatile a4; /* break */
	T0* volatile a5; /* operator_name */
	T6 volatile a6; /* seed */
};

/* Struct for type SPECIAL [detachable ET_FREE_OPERATOR] */
struct S305 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
struct S306 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_IDENTIFIER */
struct S307 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T6 volatile a2; /* seed */
	T6 volatile a3; /* index */
	T6 volatile a4; /* hash_code */
	T2 volatile a5; /* status_code */
	T6 volatile a6; /* compressed_position */
	T0* volatile a7; /* break */
};

/* Struct for type SPECIAL [detachable ET_IDENTIFIER] */
struct S308 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S309 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S311 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S312 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S313 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* compressed_position */
	T2 volatile a2; /* code */
	T0* volatile a3; /* text */
	T6 volatile a4; /* seed */
	T0* volatile a5; /* break */
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S314 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S315 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING] */
struct S317 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S318 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_REAL_CONSTANT] */
struct S320 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S321 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_RESULT */
struct S322 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* code */
	T0* volatile a2; /* text */
	T6 volatile a3; /* compressed_position */
	T6 volatile a4; /* index */
	T0* volatile a5; /* break */
};

/* Struct for type SPECIAL [detachable ET_RESULT] */
struct S323 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S324 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S325 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* code */
	T6 volatile a2; /* compressed_position */
	T0* volatile a3; /* text */
	T0* volatile a4; /* break */
};

/* Struct for type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S326 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S327 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S328 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* break */
	T2 volatile a2; /* code */
	T6 volatile a3; /* compressed_position */
	T6 volatile a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S329 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S330 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_VOID */
struct S331 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T2 volatile a2; /* code */
	T0* volatile a3; /* text */
	T6 volatile a4; /* compressed_position */
	T0* volatile a5; /* break */
};

/* Struct for type SPECIAL [detachable ET_VOID] */
struct S332 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S333 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S334 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* code */
	T6 volatile a2; /* compressed_position */
	T0* volatile a3; /* break */
};

/* Struct for type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S335 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S336 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S337 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* break */
	T2 volatile a2; /* code */
	T6 volatile a3; /* compressed_position */
	T6 volatile a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S338 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S339 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S340 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* code */
	T6 volatile a2; /* compressed_position */
	T6 volatile a3; /* index */
	T0* volatile a4; /* break */
};

/* Struct for type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S341 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S342 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ACROSS_EXPRESSION */
struct S343 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item_name */
	T0* volatile a2; /* as_keyword */
	T0* volatile a3; /* unfolded_cursor_name */
	T6 volatile a4; /* index */
	T0* volatile a5; /* across_keyword */
	T0* volatile a6; /* iterable_expression */
	T0* volatile a7; /* until_conditional */
	T0* volatile a8; /* iteration_conditional */
	T0* volatile a9; /* end_keyword */
	T1 volatile a10; /* is_all */
	T1 volatile a11; /* has_cursor_name */
	T0* volatile a12; /* invariant_part */
	T0* volatile a13; /* variant_part */
	T0* volatile a14; /* new_cursor_expression */
	T0* volatile a15; /* cursor_item_expression */
	T0* volatile a16; /* cursor_after_expression */
	T0* volatile a17; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S344 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S345 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ACROSS_INSTRUCTION */
struct S346 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item_name */
	T0* volatile a2; /* as_keyword */
	T0* volatile a3; /* unfolded_cursor_name */
	T0* volatile a4; /* across_keyword */
	T0* volatile a5; /* iterable_expression */
	T0* volatile a6; /* from_compound */
	T0* volatile a7; /* until_conditional */
	T0* volatile a8; /* loop_compound */
	T0* volatile a9; /* end_keyword */
	T1 volatile a10; /* has_cursor_name */
	T0* volatile a11; /* invariant_part */
	T0* volatile a12; /* variant_part */
	T0* volatile a13; /* new_cursor_expression */
	T0* volatile a14; /* cursor_item_expression */
	T0* volatile a15; /* cursor_after_expression */
	T0* volatile a16; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S347 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S348 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S349 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* left_symbol */
	T0* volatile a4; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S350 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S351 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S352 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S353 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S354 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S355 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S357 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S358 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S360 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S361 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S362 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* left_parenthesis */
	T0* volatile a2; /* right_parenthesis */
	T6 volatile a3; /* count */
	T0* volatile a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S363 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S364 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_TARGET] */
struct S366 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S367 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ALIAS_NAME */
struct S368 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* alias_keyword */
	T0* volatile a2; /* alias_string */
	T2 volatile a3; /* code */
	T0* volatile a4; /* convert_keyword */
	T6 volatile a5; /* seed */
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME] */
struct S369 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
struct S370 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ALIAS_NAME_LIST */
struct S371 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME_LIST] */
struct S372 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S373 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_ASSIGNER] */
struct S375 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S376 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S377 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* target */
	T0* volatile a3; /* name */
	T0* volatile a4; /* arguments */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S378 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S379 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CALL_AGENT */
struct S380 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* agent_keyword */
	T0* volatile a3; /* qualified_name */
	T0* volatile a4; /* arguments */
	T0* volatile a5; /* target */
	T0* volatile a6; /* implicit_result */
};

/* Struct for type SPECIAL [detachable ET_CALL_AGENT] */
struct S381 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S382 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_QUALIFIED_CALL_EXPRESSION */
struct S383 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
	T6 volatile a2; /* index */
	T0* volatile a3; /* arguments */
	T0* volatile a4; /* qualified_name */
	T0* volatile a5; /* parenthesis_call */
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S384 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S385 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S386 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* check_keyword */
	T0* volatile a2; /* end_keyword */
	T6 volatile a3; /* count */
	T0* volatile a4; /* storage */
	T0* volatile a5; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S387 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S388 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE] */
struct S390 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S391 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S393 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S394 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_ITEM] */
struct S396 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S397 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CHOICE_LIST */
struct S398 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* when_keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CHOICE_LIST] */
struct S399 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S400 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CLASS] */
struct S401 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S402 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CLIENT_ITEM] */
struct S403 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S404 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CLIENTS] */
struct S405 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S406 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_COMPOUND */
struct S407 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_COMPOUND] */
struct S408 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S409 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CONDITIONAL] */
struct S411 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
struct S412 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTANT] */
struct S414 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S415 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S417 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S418 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S419 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* left_bracket */
	T0* volatile a4; /* right_bracket */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S420 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S421 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S422 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* create_keyword */
	T0* volatile a2; /* end_keyword */
	T6 volatile a3; /* count */
	T0* volatile a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S423 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
struct S424 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CONSTRAINT_RENAME_LIST */
struct S425 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* end_keyword */
	T0* volatile a2; /* rename_keyword */
	T6 volatile a3; /* count */
	T0* volatile a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
struct S426 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S427 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S429 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S430 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S432 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S433 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S435 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S436 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S437 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* convert_keyword */
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S438 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S439 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S440 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* creation_call */
	T0* volatile a3; /* creation_region */
	T0* volatile a4; /* internal_separate_target */
	T0* volatile a5; /* default_create_name */
	T0* volatile a6; /* creation_type */
	T0* volatile a7; /* create_keyword */
};

/* Struct for type SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S441 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
struct S442 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CREATION_REGION */
struct S443 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* class_name */
	T0* volatile a2; /* left_symbol */
	T0* volatile a3; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_CREATION_REGION] */
struct S444 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S445 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CREATOR] */
struct S446 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S447 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_CREATOR_LIST] */
struct S448 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S449 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S450 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* keys */
	T0* volatile a2; /* compound */
	T0* volatile a3; /* end_keyword */
};

/* Struct for type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S451 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
struct S452 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION */
struct S453 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* conditional */
	T0* volatile a2; /* then_keyword */
	T0* volatile a3; /* then_expression */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
struct S454 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S455 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION_LIST */
struct S456 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S457 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S458 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ELSEIF_PART */
struct S459 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* conditional */
	T0* volatile a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART] */
struct S460 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S461 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S462 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S463 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S464 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT] */
struct S466 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S467 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT_LIST] */
struct S468 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
struct S469 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_EXPRESSION] */
struct S471 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
struct S472 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_EXPRESSION_ITEM] */
struct S474 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S475 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S477 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S478 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S480 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S481 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S482 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S483 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S484 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S485 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S486 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S487 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* clients_clause */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* count */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S488 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S489 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME] */
struct S490 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S491 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S493 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S494 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S495 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name_item */
	T0* volatile a2; /* declared_type */
	T6 volatile a3; /* index */
	T6 volatile a4; /* attached_index */
	T1 volatile a5; /* is_used */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S496 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S497 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S499 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S500 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S501 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* left_parenthesis */
	T0* volatile a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S502 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S503 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S504 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T6 volatile a2; /* index */
	T0* volatile a3; /* implementation_class */
	T0* volatile a4; /* type_mark */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S505 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S506 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S508 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S509 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S510 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* right_bracket */
	T0* volatile a4; /* left_bracket */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S511 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
struct S512 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_IF_EXPRESSION */
struct S513 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* conditional */
	T0* volatile a3; /* then_keyword */
	T0* volatile a4; /* then_expression */
	T0* volatile a5; /* else_keyword */
	T0* volatile a6; /* else_expression */
	T0* volatile a7; /* end_keyword */
	T0* volatile a8; /* elseif_parts */
};

/* Struct for type SPECIAL [detachable ET_IF_EXPRESSION] */
struct S514 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S515 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_IF_INSTRUCTION */
struct S516 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* conditional */
	T0* volatile a2; /* then_compound */
	T0* volatile a3; /* end_keyword */
	T0* volatile a4; /* elseif_parts */
	T0* volatile a5; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S517 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
struct S518 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_AGENT] */
struct S520 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
struct S521 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT */
struct S522 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* expression */
	T0* volatile a2; /* as_keyword */
	T0* volatile a3; /* name */
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
struct S523 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S524 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S526 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
struct S527 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENTS */
struct S528 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* separate_keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
struct S529 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
struct S530 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_INLINE_SEPARATE_INSTRUCTION */
struct S531 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* arguments */
	T0* volatile a2; /* compound */
	T0* volatile a3; /* end_keyword */
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
struct S532 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
struct S533 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_INSPECT_EXPRESSION */
struct S534 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* conditional */
	T0* volatile a3; /* when_parts */
	T0* volatile a4; /* end_keyword */
	T0* volatile a5; /* else_part */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_EXPRESSION] */
struct S535 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S536 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S537 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* conditional */
	T0* volatile a2; /* when_parts */
	T0* volatile a3; /* end_keyword */
	T0* volatile a4; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S538 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S539 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_INSTRUCTION] */
struct S541 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S542 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_INVARIANTS */
struct S543 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* implementation_class */
	T1 volatile a2; /* validity_checked */
	T1 volatile a3; /* has_validity_error */
	T6 volatile a4; /* count */
	T0* volatile a5; /* storage */
	T0* volatile a6; /* invariant_keyword */
	T0* volatile a7; /* object_tests */
	T0* volatile a8; /* iteration_components */
	T0* volatile a9; /* inline_separate_arguments */
};

/* Struct for type SPECIAL [detachable ET_INVARIANTS] */
struct S544 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S545 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S546 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S547 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_LIKE_TYPE] */
struct S549 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S550 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S551 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name_item */
	T0* volatile a2; /* declared_type */
	T6 volatile a3; /* index */
	T6 volatile a4; /* attached_index */
	T1 volatile a5; /* is_used */
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S552 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S553 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S555 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S556 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S557 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* local_keyword */
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S558 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S559 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S560 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* invariant_keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S561 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S562 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S563 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* left_symbol */
	T0* volatile a3; /* right_symbol */
	T6 volatile a4; /* count */
	T0* volatile a5; /* storage */
	T0* volatile a6; /* cast_type */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S564 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S565 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S567 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S568 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S569 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* left_parenthesis */
	T0* volatile a2; /* right_parenthesis */
	T6 volatile a3; /* count */
	T0* volatile a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S570 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S571 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S572 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* left_symbol */
	T0* volatile a4; /* right_symbol */
	T6 volatile a5; /* index */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S573 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
struct S574 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_NOTE_LIST */
struct S575 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* note_keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_NOTE_LIST] */
struct S576 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
struct S577 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_ITEM] */
struct S579 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
struct S580 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM] */
struct S582 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
struct S583 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM_ITEM] */
struct S585 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
struct S586 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_NOTE_TERM_LIST */
struct S587 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM_LIST] */
struct S588 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S589 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_OBSOLETE] */
struct S591 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S592 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S593 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* expression */
	T0* volatile a3; /* left_parenthesis */
	T0* volatile a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S594 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S595 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT] */
struct S596 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
struct S597 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_PARENT_CLAUSE_LIST */
struct S598 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
struct S599 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S600 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_ITEM] */
struct S601 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S602 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_LIST] */
struct S603 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S604 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_POSTCONDITIONS */
struct S605 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* ensure_keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
	T0* volatile a4; /* then_keyword */
	T1 volatile a5; /* validity_checked */
	T1 volatile a6; /* has_validity_error */
};

/* Struct for type SPECIAL [detachable ET_POSTCONDITIONS] */
struct S606 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
struct S607 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_PRECONDITIONS */
struct S608 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* require_keyword */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
	T0* volatile a4; /* else_keyword */
	T1 volatile a5; /* validity_checked */
	T1 volatile a6; /* has_validity_error */
};

/* Struct for type SPECIAL [detachable ET_PRECONDITIONS] */
struct S609 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
struct S610 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_PROCEDURE] */
struct S612 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S613 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S615 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
struct S616 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_QUANTIFIER_EXPRESSION */
struct S617 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item_name */
	T0* volatile a2; /* unfolded_cursor_name */
	T6 volatile a3; /* index */
	T0* volatile a4; /* quantifier_symbol */
	T0* volatile a5; /* colon_symbol */
	T0* volatile a6; /* iterable_expression */
	T0* volatile a7; /* bar_symbol */
	T0* volatile a8; /* iteration_expression */
	T1 volatile a9; /* is_all */
	T0* volatile a10; /* new_cursor_expression */
	T0* volatile a11; /* cursor_item_expression */
	T0* volatile a12; /* cursor_after_expression */
	T0* volatile a13; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
struct S618 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
struct S619 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_QUERY] */
struct S621 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S622 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_ITEM] */
struct S624 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S625 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_LIST] */
struct S626 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
struct S627 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_REPEAT_INSTRUCTION */
struct S628 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item_name */
	T0* volatile a2; /* unfolded_cursor_name */
	T0* volatile a3; /* open_repeat_symbol */
	T0* volatile a4; /* colon_symbol */
	T0* volatile a5; /* iterable_expression */
	T0* volatile a6; /* bar_symbol */
	T0* volatile a7; /* loop_compound */
	T0* volatile a8; /* close_repeat_symbol */
	T0* volatile a9; /* new_cursor_expression */
	T0* volatile a10; /* cursor_item_expression */
	T0* volatile a11; /* cursor_after_expression */
	T0* volatile a12; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
struct S629 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S630 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S631 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* static_type */
	T0* volatile a3; /* feature_keyword */
	T0* volatile a4; /* qualified_name */
	T0* volatile a5; /* arguments */
	T0* volatile a6; /* parenthesis_call */
};

/* Struct for type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S632 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S633 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S634 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* strip_keyword */
	T0* volatile a3; /* left_parenthesis */
	T0* volatile a4; /* right_parenthesis */
	T6 volatile a5; /* count */
	T0* volatile a6; /* storage */
};

/* Struct for type SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S635 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
struct S636 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE] */
struct S637 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
struct S638 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT] */
struct S640 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
struct S641 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
struct S643 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
struct S644 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_TYPE_CONSTRAINT_LIST */
struct S645 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* left_brace */
	T0* volatile a2; /* right_brace */
	T6 volatile a3; /* count */
	T0* volatile a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
struct S646 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S647 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_ITEM] */
struct S649 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S650 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_LIST] */
struct S652 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S653 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_VARIANT */
struct S654 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* variant_keyword */
	T0* volatile a2; /* tag */
	T0* volatile a3; /* expression */
};

/* Struct for type SPECIAL [detachable ET_VARIANT] */
struct S655 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
struct S656 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_WHEN_EXPRESSION */
struct S657 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* choices */
	T0* volatile a2; /* then_keyword */
	T0* volatile a3; /* then_expression */
};

/* Struct for type SPECIAL [detachable ET_WHEN_EXPRESSION] */
struct S658 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
struct S659 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_WHEN_EXPRESSION_LIST */
struct S660 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
struct S661 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S662 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_WHEN_PART */
struct S663 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* choices */
	T0* volatile a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART] */
struct S664 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S665 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S666 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S667 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S668 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_WRITABLE] */
struct S670 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S672 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type ET_ITERATION_COMPONENT_LIST */
struct S673 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT_LIST */
struct S674 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S675 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* literal */
	T3 volatile a3; /* value */
	T1 volatile a4; /* has_invalid_code */
	T0* volatile a5; /* cast_type */
	T6 volatile a6; /* compressed_position */
	T0* volatile a7; /* type */
	T0* volatile a8; /* break */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S676 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* value */
	T6 volatile a2; /* index */
	T6 volatile a3; /* compressed_position */
	T0* volatile a4; /* cast_type */
	T0* volatile a5; /* type */
	T0* volatile a6; /* break */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S677 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* value */
	T6 volatile a2; /* index */
	T0* volatile a3; /* cast_type */
	T6 volatile a4; /* compressed_position */
	T0* volatile a5; /* literal */
	T1 volatile a6; /* has_invalid_code */
	T0* volatile a7; /* type */
	T0* volatile a8; /* break */
};

/* Struct for type ET_VERBATIM_STRING */
struct S678 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* value */
	T6 volatile a2; /* index */
	T0* volatile a3; /* cast_type */
	T6 volatile a4; /* compressed_position */
	T0* volatile a5; /* literal */
	T0* volatile a6; /* marker */
	T0* volatile a7; /* open_white_characters */
	T0* volatile a8; /* close_white_characters */
	T1 volatile a9; /* is_left_aligned */
	T0* volatile a10; /* type */
	T0* volatile a11; /* break */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S679 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* literal */
	T11 volatile a3; /* value */
	T1 volatile a4; /* has_overflow */
	T6 volatile a5; /* compressed_position */
	T0* volatile a6; /* sign */
	T0* volatile a7; /* cast_type */
	T0* volatile a8; /* type */
	T0* volatile a9; /* break */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S680 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* sign */
	T6 volatile a2; /* index */
	T0* volatile a3; /* literal */
	T11 volatile a4; /* value */
	T1 volatile a5; /* has_overflow */
	T0* volatile a6; /* cast_type */
	T6 volatile a7; /* compressed_position */
	T0* volatile a8; /* type */
	T0* volatile a9; /* break */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S681 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* sign */
	T6 volatile a2; /* index */
	T0* volatile a3; /* literal */
	T11 volatile a4; /* value */
	T1 volatile a5; /* has_overflow */
	T0* volatile a6; /* cast_type */
	T6 volatile a7; /* compressed_position */
	T0* volatile a8; /* type */
	T0* volatile a9; /* break */
};

/* Struct for type ET_OCTAL_INTEGER_CONSTANT */
struct S682 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* sign */
	T6 volatile a2; /* index */
	T0* volatile a3; /* literal */
	T11 volatile a4; /* value */
	T1 volatile a5; /* has_overflow */
	T0* volatile a6; /* cast_type */
	T6 volatile a7; /* compressed_position */
	T0* volatile a8; /* type */
	T0* volatile a9; /* break */
};

/* Struct for type ET_BINARY_INTEGER_CONSTANT */
struct S683 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* sign */
	T6 volatile a2; /* index */
	T0* volatile a3; /* literal */
	T11 volatile a4; /* value */
	T1 volatile a5; /* has_overflow */
	T0* volatile a6; /* cast_type */
	T6 volatile a7; /* compressed_position */
	T0* volatile a8; /* type */
	T0* volatile a9; /* break */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S684 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* literal */
	T6 volatile a3; /* compressed_position */
	T0* volatile a4; /* sign */
	T0* volatile a5; /* cast_type */
	T0* volatile a6; /* type */
	T0* volatile a7; /* break */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S685 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* sign */
	T6 volatile a2; /* index */
	T0* volatile a3; /* literal */
	T0* volatile a4; /* cast_type */
	T6 volatile a5; /* compressed_position */
	T0* volatile a6; /* type */
	T0* volatile a7; /* break */
};

/* Struct for type ET_COMMENT */
struct S686 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* text */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S687 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* code */
	T0* volatile a2; /* text */
	T6 volatile a3; /* compressed_position */
	T6 volatile a4; /* index */
	T0* volatile a5; /* break */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S688 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T2 volatile a2; /* code */
	T0* volatile a3; /* text */
	T6 volatile a4; /* compressed_position */
	T0* volatile a5; /* break */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S689 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T3 volatile a2; /* value */
	T0* volatile a3; /* cast_type */
	T6 volatile a4; /* compressed_position */
	T0* volatile a5; /* type */
	T0* volatile a6; /* break */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S690 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T3 volatile a2; /* value */
	T6 volatile a3; /* compressed_position */
	T0* volatile a4; /* cast_type */
	T0* volatile a5; /* type */
	T0* volatile a6; /* break */
};

/* Struct for type ET_TAGGED_NOTE */
struct S692 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* tag */
	T0* volatile a2; /* terms */
};

/* Struct for type ET_NOTE */
struct S693 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* terms */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S694 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* creation_expression */
	T0* volatile a2; /* settings */
	T0* volatile a3; /* end_keyword */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S695 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* arrow_symbol */
	T0* volatile a2; /* constraint */
	T0* volatile a3; /* creation_procedures */
	T0* volatile a4; /* constraint_base_types */
	T0* volatile a5; /* implementation_class */
	T0* volatile a6; /* type_mark */
	T6 volatile a7; /* index */
	T0* volatile a8; /* name */
	T0* volatile a9; /* recursive_formal_constraints */
};

/* Struct for type ET_TYPE_RENAME_CONSTRAINT */
struct S696 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type */
	T0* volatile a2; /* renames */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S697 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type_mark */
	T0* volatile a2; /* name */
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S698 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* label */
	T0* volatile a2; /* colon */
	T0* volatile a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S699 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* label */
	T0* volatile a2; /* comma */
	T0* volatile a3; /* type */
};

/* Struct for type ET_RENAME */
struct S700 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* old_name */
	T0* volatile a2; /* as_keyword */
	T0* volatile a3; /* new_name */
};

/* Struct for type ET_ALL_EXPORT */
struct S701 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* clients_clause */
	T0* volatile a2; /* all_keyword */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S703 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* types */
	T0* volatile a3; /* colon */
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S704 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* types */
	T0* volatile a3; /* left_parenthesis */
	T0* volatile a4; /* right_parenthesis */
};

/* Struct for type ET_ATTRIBUTE */
struct S706 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* declared_type */
	T0* volatile a2; /* implementation_class */
	T0* volatile a3; /* assigner */
	T0* volatile a4; /* clients */
	T0* volatile a5; /* semicolon */
	T0* volatile a6; /* feature_clause */
	T0* volatile a7; /* first_note */
	T0* volatile a8; /* object_tests */
	T0* volatile a9; /* iteration_components */
	T0* volatile a10; /* inline_separate_arguments */
	T0* volatile a11; /* extended_name */
	T6 volatile a12; /* hash_code */
	T0* volatile a13; /* implementation_feature */
	T0* volatile a14; /* frozen_keyword */
	T0* volatile a15; /* synonym */
	T6 volatile a16; /* first_seed */
	T0* volatile a17; /* other_seeds */
	T1 volatile a18; /* validity_checked */
	T1 volatile a19; /* has_validity_error */
	T0* volatile a20; /* first_precursor */
	T0* volatile a21; /* other_precursors */
	T6 volatile a22; /* id */
	T6 volatile a23; /* version */
};

/* Struct for type ET_EXTENDED_ATTRIBUTE */
struct S707 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* declared_type */
	T0* volatile a2; /* implementation_class */
	T0* volatile a3; /* assigner */
	T0* volatile a4; /* obsolete_message */
	T0* volatile a5; /* preconditions */
	T0* volatile a6; /* locals */
	T0* volatile a7; /* compound */
	T0* volatile a8; /* postconditions */
	T0* volatile a9; /* rescue_clause */
	T0* volatile a10; /* clients */
	T0* volatile a11; /* end_keyword */
	T0* volatile a12; /* semicolon */
	T0* volatile a13; /* feature_clause */
	T0* volatile a14; /* first_note */
	T0* volatile a15; /* object_tests */
	T0* volatile a16; /* iteration_components */
	T0* volatile a17; /* inline_separate_arguments */
	T0* volatile a18; /* extended_name */
	T6 volatile a19; /* hash_code */
	T0* volatile a20; /* implementation_feature */
	T0* volatile a21; /* frozen_keyword */
	T0* volatile a22; /* synonym */
	T6 volatile a23; /* first_seed */
	T0* volatile a24; /* other_seeds */
	T1 volatile a25; /* validity_checked */
	T1 volatile a26; /* has_validity_error */
	T0* volatile a27; /* first_precursor */
	T0* volatile a28; /* other_precursors */
	T6 volatile a29; /* id */
	T6 volatile a30; /* version */
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S708 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* declared_type */
	T0* volatile a2; /* constant */
	T0* volatile a3; /* implementation_class */
	T0* volatile a4; /* assigner */
	T0* volatile a5; /* clients */
	T0* volatile a6; /* is_keyword */
	T0* volatile a7; /* semicolon */
	T0* volatile a8; /* feature_clause */
	T0* volatile a9; /* first_note */
	T0* volatile a10; /* object_tests */
	T0* volatile a11; /* iteration_components */
	T0* volatile a12; /* inline_separate_arguments */
	T0* volatile a13; /* extended_name */
	T6 volatile a14; /* hash_code */
	T0* volatile a15; /* implementation_feature */
	T0* volatile a16; /* frozen_keyword */
	T0* volatile a17; /* synonym */
	T6 volatile a18; /* first_seed */
	T0* volatile a19; /* other_seeds */
	T1 volatile a20; /* validity_checked */
	T1 volatile a21; /* has_validity_error */
	T0* volatile a22; /* first_precursor */
	T0* volatile a23; /* other_precursors */
	T6 volatile a24; /* id */
	T6 volatile a25; /* version */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S709 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* declared_type */
	T0* volatile a2; /* implementation_class */
	T0* volatile a3; /* assigner */
	T0* volatile a4; /* clients */
	T0* volatile a5; /* is_keyword */
	T0* volatile a6; /* unique_keyword */
	T0* volatile a7; /* semicolon */
	T0* volatile a8; /* feature_clause */
	T0* volatile a9; /* first_note */
	T0* volatile a10; /* object_tests */
	T0* volatile a11; /* iteration_components */
	T0* volatile a12; /* inline_separate_arguments */
	T0* volatile a13; /* constant */
	T0* volatile a14; /* extended_name */
	T6 volatile a15; /* hash_code */
	T0* volatile a16; /* implementation_feature */
	T0* volatile a17; /* frozen_keyword */
	T0* volatile a18; /* synonym */
	T6 volatile a19; /* id */
	T6 volatile a20; /* first_seed */
	T0* volatile a21; /* other_seeds */
	T1 volatile a22; /* validity_checked */
	T1 volatile a23; /* has_validity_error */
	T0* volatile a24; /* first_precursor */
	T0* volatile a25; /* other_precursors */
	T6 volatile a26; /* version */
};

/* Struct for type ET_DO_FUNCTION */
struct S710 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* arguments */
	T0* volatile a2; /* declared_type */
	T0* volatile a3; /* implementation_class */
	T0* volatile a4; /* assigner */
	T0* volatile a5; /* obsolete_message */
	T0* volatile a6; /* preconditions */
	T0* volatile a7; /* locals */
	T0* volatile a8; /* compound */
	T0* volatile a9; /* postconditions */
	T0* volatile a10; /* rescue_clause */
	T0* volatile a11; /* clients */
	T0* volatile a12; /* is_keyword */
	T0* volatile a13; /* end_keyword */
	T0* volatile a14; /* semicolon */
	T0* volatile a15; /* feature_clause */
	T0* volatile a16; /* first_note */
	T0* volatile a17; /* object_tests */
	T0* volatile a18; /* iteration_components */
	T0* volatile a19; /* inline_separate_arguments */
	T0* volatile a20; /* extended_name */
	T6 volatile a21; /* hash_code */
	T0* volatile a22; /* implementation_feature */
	T0* volatile a23; /* frozen_keyword */
	T0* volatile a24; /* synonym */
	T6 volatile a25; /* first_seed */
	T0* volatile a26; /* other_seeds */
	T1 volatile a27; /* validity_checked */
	T1 volatile a28; /* has_validity_error */
	T0* volatile a29; /* first_precursor */
	T0* volatile a30; /* other_precursors */
	T6 volatile a31; /* id */
	T6 volatile a32; /* version */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S711 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* arguments */
	T0* volatile a2; /* declared_type */
	T0* volatile a3; /* implementation_class */
	T0* volatile a4; /* assigner */
	T0* volatile a5; /* obsolete_message */
	T0* volatile a6; /* preconditions */
	T0* volatile a7; /* locals */
	T0* volatile a8; /* compound */
	T0* volatile a9; /* postconditions */
	T0* volatile a10; /* rescue_clause */
	T0* volatile a11; /* clients */
	T0* volatile a12; /* is_keyword */
	T0* volatile a13; /* end_keyword */
	T0* volatile a14; /* semicolon */
	T0* volatile a15; /* feature_clause */
	T0* volatile a16; /* first_note */
	T0* volatile a17; /* object_tests */
	T0* volatile a18; /* iteration_components */
	T0* volatile a19; /* inline_separate_arguments */
	T0* volatile a20; /* extended_name */
	T6 volatile a21; /* hash_code */
	T0* volatile a22; /* implementation_feature */
	T0* volatile a23; /* frozen_keyword */
	T0* volatile a24; /* keys */
	T0* volatile a25; /* synonym */
	T6 volatile a26; /* first_seed */
	T0* volatile a27; /* other_seeds */
	T1 volatile a28; /* validity_checked */
	T1 volatile a29; /* has_validity_error */
	T0* volatile a30; /* first_precursor */
	T0* volatile a31; /* other_precursors */
	T6 volatile a32; /* id */
	T6 volatile a33; /* version */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S712 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* arguments */
	T0* volatile a2; /* declared_type */
	T0* volatile a3; /* implementation_class */
	T0* volatile a4; /* assigner */
	T0* volatile a5; /* obsolete_message */
	T0* volatile a6; /* preconditions */
	T0* volatile a7; /* postconditions */
	T0* volatile a8; /* clients */
	T0* volatile a9; /* is_keyword */
	T0* volatile a10; /* deferred_keyword */
	T0* volatile a11; /* end_keyword */
	T0* volatile a12; /* semicolon */
	T0* volatile a13; /* feature_clause */
	T0* volatile a14; /* first_note */
	T0* volatile a15; /* object_tests */
	T0* volatile a16; /* iteration_components */
	T0* volatile a17; /* inline_separate_arguments */
	T0* volatile a18; /* extended_name */
	T6 volatile a19; /* hash_code */
	T0* volatile a20; /* implementation_feature */
	T0* volatile a21; /* frozen_keyword */
	T0* volatile a22; /* synonym */
	T6 volatile a23; /* first_seed */
	T0* volatile a24; /* other_seeds */
	T1 volatile a25; /* validity_checked */
	T1 volatile a26; /* has_validity_error */
	T0* volatile a27; /* first_precursor */
	T0* volatile a28; /* other_precursors */
	T6 volatile a29; /* id */
	T6 volatile a30; /* version */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S714 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* arguments */
	T0* volatile a2; /* declared_type */
	T0* volatile a3; /* language */
	T0* volatile a4; /* implementation_class */
	T0* volatile a5; /* assigner */
	T0* volatile a6; /* obsolete_message */
	T0* volatile a7; /* preconditions */
	T0* volatile a8; /* postconditions */
	T0* volatile a9; /* alias_clause */
	T0* volatile a10; /* clients */
	T0* volatile a11; /* is_keyword */
	T0* volatile a12; /* end_keyword */
	T0* volatile a13; /* semicolon */
	T0* volatile a14; /* feature_clause */
	T0* volatile a15; /* first_note */
	T0* volatile a16; /* object_tests */
	T0* volatile a17; /* iteration_components */
	T0* volatile a18; /* inline_separate_arguments */
	T8 volatile a19; /* builtin_class_code */
	T0* volatile a20; /* extended_name */
	T6 volatile a21; /* hash_code */
	T0* volatile a22; /* implementation_feature */
	T8 volatile a23; /* builtin_feature_code */
	T0* volatile a24; /* frozen_keyword */
	T0* volatile a25; /* synonym */
	T6 volatile a26; /* first_seed */
	T0* volatile a27; /* other_seeds */
	T1 volatile a28; /* validity_checked */
	T1 volatile a29; /* has_validity_error */
	T0* volatile a30; /* first_precursor */
	T0* volatile a31; /* other_precursors */
	T6 volatile a32; /* id */
	T6 volatile a33; /* version */
};

/* Struct for type ET_DO_PROCEDURE */
struct S715 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* extended_name */
	T6 volatile a2; /* hash_code */
	T0* volatile a3; /* arguments */
	T0* volatile a4; /* end_keyword */
	T0* volatile a5; /* clients */
	T0* volatile a6; /* implementation_class */
	T0* volatile a7; /* implementation_feature */
	T0* volatile a8; /* iteration_components */
	T6 volatile a9; /* first_seed */
	T0* volatile a10; /* rescue_clause */
	T0* volatile a11; /* locals */
	T0* volatile a12; /* object_tests */
	T0* volatile a13; /* compound */
	T0* volatile a14; /* other_seeds */
	T0* volatile a15; /* obsolete_message */
	T0* volatile a16; /* preconditions */
	T0* volatile a17; /* postconditions */
	T0* volatile a18; /* is_keyword */
	T0* volatile a19; /* semicolon */
	T0* volatile a20; /* feature_clause */
	T0* volatile a21; /* first_note */
	T0* volatile a22; /* inline_separate_arguments */
	T0* volatile a23; /* first_precursor */
	T0* volatile a24; /* other_precursors */
	T0* volatile a25; /* frozen_keyword */
	T0* volatile a26; /* synonym */
	T1 volatile a27; /* validity_checked */
	T1 volatile a28; /* has_validity_error */
	T6 volatile a29; /* id */
	T6 volatile a30; /* version */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S716 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* arguments */
	T0* volatile a2; /* implementation_class */
	T0* volatile a3; /* obsolete_message */
	T0* volatile a4; /* preconditions */
	T0* volatile a5; /* locals */
	T0* volatile a6; /* compound */
	T0* volatile a7; /* postconditions */
	T0* volatile a8; /* rescue_clause */
	T0* volatile a9; /* clients */
	T0* volatile a10; /* is_keyword */
	T0* volatile a11; /* end_keyword */
	T0* volatile a12; /* semicolon */
	T0* volatile a13; /* feature_clause */
	T0* volatile a14; /* first_note */
	T0* volatile a15; /* object_tests */
	T0* volatile a16; /* iteration_components */
	T0* volatile a17; /* inline_separate_arguments */
	T0* volatile a18; /* extended_name */
	T6 volatile a19; /* hash_code */
	T0* volatile a20; /* implementation_feature */
	T0* volatile a21; /* frozen_keyword */
	T0* volatile a22; /* keys */
	T0* volatile a23; /* synonym */
	T6 volatile a24; /* first_seed */
	T0* volatile a25; /* other_seeds */
	T1 volatile a26; /* validity_checked */
	T1 volatile a27; /* has_validity_error */
	T0* volatile a28; /* first_precursor */
	T0* volatile a29; /* other_precursors */
	T6 volatile a30; /* id */
	T6 volatile a31; /* version */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S717 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* implementation_feature */
	T0* volatile a2; /* deferred_keyword */
	T0* volatile a3; /* extended_name */
	T6 volatile a4; /* hash_code */
	T0* volatile a5; /* arguments */
	T0* volatile a6; /* end_keyword */
	T0* volatile a7; /* clients */
	T0* volatile a8; /* implementation_class */
	T0* volatile a9; /* iteration_components */
	T6 volatile a10; /* first_seed */
	T0* volatile a11; /* other_seeds */
	T0* volatile a12; /* object_tests */
	T0* volatile a13; /* obsolete_message */
	T0* volatile a14; /* preconditions */
	T0* volatile a15; /* postconditions */
	T0* volatile a16; /* is_keyword */
	T0* volatile a17; /* semicolon */
	T0* volatile a18; /* feature_clause */
	T0* volatile a19; /* first_note */
	T0* volatile a20; /* inline_separate_arguments */
	T0* volatile a21; /* first_precursor */
	T0* volatile a22; /* other_precursors */
	T0* volatile a23; /* frozen_keyword */
	T0* volatile a24; /* synonym */
	T1 volatile a25; /* validity_checked */
	T1 volatile a26; /* has_validity_error */
	T6 volatile a27; /* id */
	T6 volatile a28; /* version */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S718 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* arguments */
	T0* volatile a2; /* language */
	T0* volatile a3; /* implementation_class */
	T0* volatile a4; /* obsolete_message */
	T0* volatile a5; /* preconditions */
	T0* volatile a6; /* postconditions */
	T0* volatile a7; /* alias_clause */
	T0* volatile a8; /* clients */
	T0* volatile a9; /* is_keyword */
	T0* volatile a10; /* end_keyword */
	T0* volatile a11; /* semicolon */
	T0* volatile a12; /* feature_clause */
	T0* volatile a13; /* first_note */
	T0* volatile a14; /* object_tests */
	T0* volatile a15; /* iteration_components */
	T0* volatile a16; /* inline_separate_arguments */
	T8 volatile a17; /* builtin_class_code */
	T0* volatile a18; /* extended_name */
	T6 volatile a19; /* hash_code */
	T0* volatile a20; /* implementation_feature */
	T8 volatile a21; /* builtin_feature_code */
	T0* volatile a22; /* frozen_keyword */
	T0* volatile a23; /* synonym */
	T6 volatile a24; /* first_seed */
	T0* volatile a25; /* other_seeds */
	T1 volatile a26; /* validity_checked */
	T1 volatile a27; /* has_validity_error */
	T0* volatile a28; /* first_precursor */
	T0* volatile a29; /* other_precursors */
	T6 volatile a30; /* id */
	T6 volatile a31; /* version */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S719 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* feature_name */
	T0* volatile a2; /* alias_names */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S720 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* alias_keyword */
	T0* volatile a2; /* alias_string */
	T2 volatile a3; /* code */
	T6 volatile a4; /* hash_code */
	T0* volatile a5; /* convert_keyword */
	T6 volatile a6; /* seed */
};

/* Struct for type ET_CLASS_ASSERTION */
struct S723 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* class_keyword */
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S724 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* label_item */
	T0* volatile a2; /* declared_type */
};

/* Struct for type ET_LIKE_FEATURE */
struct S726 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* type_mark */
	T0* volatile a3; /* like_keyword */
	T6 volatile a4; /* seed */
	T1 volatile a5; /* is_procedure */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S728 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* qualified_name */
	T0* volatile a2; /* type_mark */
	T0* volatile a3; /* like_keyword */
	T0* volatile a4; /* target_type */
	T0* volatile a5; /* implementation_class */
	T0* volatile a6; /* left_brace */
	T0* volatile a7; /* right_brace */
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S729 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* qualified_name */
	T0* volatile a2; /* type_mark */
	T0* volatile a3; /* target_type */
	T0* volatile a4; /* implementation_class */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S730 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* call */
	T0* volatile a2; /* source */
	T0* volatile a3; /* assign_symbol */
	T0* volatile a4; /* name */
};

/* Struct for type ET_ASSIGNMENT */
struct S731 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
	T0* volatile a2; /* source */
	T0* volatile a3; /* assign_symbol */
	T1 volatile a4; /* no_source_twin */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S732 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
	T0* volatile a2; /* source */
	T0* volatile a3; /* assign_attempt_symbol */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S733 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* from_compound */
	T0* volatile a2; /* until_conditional */
	T0* volatile a3; /* loop_compound */
	T0* volatile a4; /* end_keyword */
	T0* volatile a5; /* invariant_part */
	T0* volatile a6; /* variant_part */
	T1 volatile a7; /* has_old_variant_syntax */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S735 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type */
	T0* volatile a2; /* target */
	T0* volatile a3; /* creation_call */
	T0* volatile a4; /* left_bang */
	T0* volatile a5; /* right_bang */
	T0* volatile a6; /* default_create_name */
	T0* volatile a7; /* internal_separate_target */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S736 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* arguments */
	T0* volatile a2; /* qualified_name */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S738 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* creation_type */
	T0* volatile a2; /* target */
	T0* volatile a3; /* creation_call */
	T0* volatile a4; /* create_keyword */
	T0* volatile a5; /* creation_region */
	T0* volatile a6; /* default_create_name */
	T0* volatile a7; /* internal_separate_target */
};

/* Struct for type ET_CHOICE_RANGE */
struct S739 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* lower */
	T0* volatile a2; /* upper */
	T0* volatile a3; /* dotdot */
};

/* Struct for type ET_QUALIFIED_CALL_INSTRUCTION */
struct S740 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
	T0* volatile a2; /* qualified_name */
	T0* volatile a3; /* arguments */
	T0* volatile a4; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S741 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parent_name */
	T0* volatile a2; /* arguments */
	T0* volatile a3; /* precursor_keyword */
	T1 volatile a4; /* is_parent_prefixed */
	T0* volatile a5; /* parenthesis_call */
	T0* volatile a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S743 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* static_type */
	T0* volatile a2; /* feature_keyword */
	T0* volatile a3; /* qualified_name */
	T0* volatile a4; /* arguments */
	T0* volatile a5; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S744 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* parent_name */
	T0* volatile a3; /* arguments */
	T0* volatile a4; /* precursor_keyword */
	T1 volatile a5; /* is_parent_prefixed */
	T0* volatile a6; /* parenthesis_call */
	T0* volatile a7; /* parent_type */
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S745 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* dollar */
	T0* volatile a3; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S746 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* dollar */
	T0* volatile a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S747 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* dollar */
	T0* volatile a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S748 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* dollar */
	T0* volatile a3; /* expression */
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S749 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* left */
	T0* volatile a3; /* name */
	T0* volatile a4; /* right */
	T1 volatile a5; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S750 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* and_keyword */
	T0* volatile a2; /* then_keyword */
	T6 volatile a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S751 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* or_keyword */
	T0* volatile a2; /* else_keyword */
	T6 volatile a3; /* seed */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S752 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* left */
	T0* volatile a3; /* operator */
	T0* volatile a4; /* right */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S753 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* left */
	T0* volatile a3; /* operator */
	T0* volatile a4; /* right */
};

/* Struct for type ET_MANIFEST_TYPE */
struct S754 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* type */
	T0* volatile a3; /* left_brace */
	T0* volatile a4; /* right_brace */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S755 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* name */
	T0* volatile a3; /* expression */
	T1 volatile a4; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S756 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* old_keyword */
	T0* volatile a3; /* expression */
};

/* Struct for type ET_OLD_OBJECT_TEST */
struct S757 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T6 volatile a2; /* index */
	T0* volatile a3; /* attached_keyword */
	T0* volatile a4; /* as_keyword */
	T0* volatile a5; /* left_brace */
	T0* volatile a6; /* colon */
	T0* volatile a7; /* declared_type */
	T0* volatile a8; /* right_brace */
	T0* volatile a9; /* expression */
};

/* Struct for type ET_OBJECT_TEST */
struct S758 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* attached_keyword */
	T0* volatile a3; /* declared_type */
	T0* volatile a4; /* expression */
};

/* Struct for type ET_NAMED_OBJECT_TEST */
struct S759 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T6 volatile a2; /* index */
	T0* volatile a3; /* as_keyword */
	T0* volatile a4; /* expression */
	T0* volatile a5; /* attached_keyword */
	T0* volatile a6; /* declared_type */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S760 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* once_keyword */
	T0* volatile a3; /* manifest_string */
	T6 volatile a4; /* id */
};

/* Struct for type ET_ITERATION_CURSOR */
struct S761 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* at_symbol */
	T0* volatile a3; /* item_name */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S763 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* formal_arguments */
	T0* volatile a3; /* declared_type */
	T0* volatile a4; /* end_keyword */
	T0* volatile a5; /* implicit_result */
	T0* volatile a6; /* object_tests */
	T0* volatile a7; /* iteration_components */
	T0* volatile a8; /* inline_separate_arguments */
	T0* volatile a9; /* actual_arguments */
	T0* volatile a10; /* agent_keyword */
	T0* volatile a11; /* preconditions */
	T0* volatile a12; /* locals */
	T0* volatile a13; /* compound */
	T0* volatile a14; /* postconditions */
	T0* volatile a15; /* rescue_clause */
	T0* volatile a16; /* target */
	T6 volatile a17; /* result_index */
	T6 volatile a18; /* attached_result_index */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S764 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* formal_arguments */
	T0* volatile a3; /* declared_type */
	T0* volatile a4; /* end_keyword */
	T0* volatile a5; /* implicit_result */
	T0* volatile a6; /* object_tests */
	T0* volatile a7; /* iteration_components */
	T0* volatile a8; /* inline_separate_arguments */
	T0* volatile a9; /* actual_arguments */
	T0* volatile a10; /* agent_keyword */
	T0* volatile a11; /* preconditions */
	T0* volatile a12; /* locals */
	T0* volatile a13; /* keys */
	T0* volatile a14; /* compound */
	T0* volatile a15; /* postconditions */
	T0* volatile a16; /* rescue_clause */
	T0* volatile a17; /* target */
	T6 volatile a18; /* result_index */
	T6 volatile a19; /* attached_result_index */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S765 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* language */
	T0* volatile a3; /* object_tests */
	T0* volatile a4; /* iteration_components */
	T0* volatile a5; /* inline_separate_arguments */
	T0* volatile a6; /* actual_arguments */
	T0* volatile a7; /* agent_keyword */
	T0* volatile a8; /* preconditions */
	T0* volatile a9; /* alias_clause */
	T0* volatile a10; /* postconditions */
	T0* volatile a11; /* formal_arguments */
	T0* volatile a12; /* declared_type */
	T0* volatile a13; /* end_keyword */
	T0* volatile a14; /* implicit_result */
	T0* volatile a15; /* target */
	T6 volatile a16; /* result_index */
	T6 volatile a17; /* attached_result_index */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S766 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* formal_arguments */
	T0* volatile a3; /* end_keyword */
	T0* volatile a4; /* object_tests */
	T0* volatile a5; /* iteration_components */
	T0* volatile a6; /* inline_separate_arguments */
	T0* volatile a7; /* actual_arguments */
	T0* volatile a8; /* agent_keyword */
	T0* volatile a9; /* preconditions */
	T0* volatile a10; /* locals */
	T0* volatile a11; /* compound */
	T0* volatile a12; /* postconditions */
	T0* volatile a13; /* rescue_clause */
	T0* volatile a14; /* target */
	T6 volatile a15; /* result_index */
	T6 volatile a16; /* attached_result_index */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S767 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* formal_arguments */
	T0* volatile a3; /* end_keyword */
	T0* volatile a4; /* object_tests */
	T0* volatile a5; /* iteration_components */
	T0* volatile a6; /* inline_separate_arguments */
	T0* volatile a7; /* actual_arguments */
	T0* volatile a8; /* agent_keyword */
	T0* volatile a9; /* preconditions */
	T0* volatile a10; /* locals */
	T0* volatile a11; /* keys */
	T0* volatile a12; /* compound */
	T0* volatile a13; /* postconditions */
	T0* volatile a14; /* rescue_clause */
	T0* volatile a15; /* target */
	T6 volatile a16; /* result_index */
	T6 volatile a17; /* attached_result_index */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S768 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* language */
	T0* volatile a3; /* object_tests */
	T0* volatile a4; /* iteration_components */
	T0* volatile a5; /* inline_separate_arguments */
	T0* volatile a6; /* actual_arguments */
	T0* volatile a7; /* agent_keyword */
	T0* volatile a8; /* preconditions */
	T0* volatile a9; /* alias_clause */
	T0* volatile a10; /* postconditions */
	T0* volatile a11; /* formal_arguments */
	T0* volatile a12; /* end_keyword */
	T0* volatile a13; /* target */
	T6 volatile a14; /* result_index */
	T6 volatile a15; /* attached_result_index */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S769 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type */
	T0* volatile a2; /* left_brace */
	T0* volatile a3; /* right_brace */
	T6 volatile a4; /* index */
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S770 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type */
	T0* volatile a2; /* left_brace */
	T0* volatile a3; /* right_brace */
	T0* volatile a4; /* question_mark */
	T6 volatile a5; /* index */
};

/* Struct for type ET_QUERY_LIST */
struct S773 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* declared_count */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
	T6 volatile a4; /* attribute_count */
	T6 volatile a5; /* declared_attribute_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S774 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* declared_count */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S776 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* tag */
	T0* volatile a2; /* untagged_assertion */
};

/* Struct for type ET_FILE_POSITION */
struct S778 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* compressed_position */
	T0* volatile a2; /* filename */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S779 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S780 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S781 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S782 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type ET_CLASS_CODES */
struct S783 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ECF_AST_FACTORY */
struct S784 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_CELL [detachable ET_ECF_SYSTEM] */
struct S785 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_TARGET] */
struct S786 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_TARGET]] */
struct S787 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER] */
struct S788 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type XM_ELEMENT */
struct S789 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* namespace */
	T0* volatile a3; /* parent */
	T0* volatile a4; /* children */
};

/* Struct for type XM_POSITION_TABLE */
struct S790 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* table */
};

/* Struct for type TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
struct S791 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
};

/* Struct for type PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
struct S792 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
struct S793 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
	T0* volatile z4;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
struct S795 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T6 volatile a2; /* found_position */
	T0* volatile a3; /* item_storage */
	T0* volatile a4; /* key_equality_tester */
	T0* volatile a5; /* internal_keys */
	T6 volatile a6; /* count */
	T6 volatile a7; /* last_position */
	T6 volatile a8; /* free_slot */
	T6 volatile a9; /* position */
	T6 volatile a10; /* capacity */
	T0* volatile a11; /* equality_tester */
	T0* volatile a12; /* key_storage */
	T0* volatile a13; /* clashes */
	T6 volatile a14; /* modulus */
	T0* volatile a15; /* slots */
	T6 volatile a16; /* slots_position */
	T6 volatile a17; /* clashes_previous_position */
	T0* volatile a18; /* special_item_routines */
	T0* volatile a19; /* special_key_routines */
	T0* volatile a20; /* hash_function */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S796 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S797 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_equality_tester */
	T0* volatile a4; /* internal_keys */
	T6 volatile a5; /* count */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* position */
	T6 volatile a9; /* capacity */
	T0* volatile a10; /* equality_tester */
	T0* volatile a11; /* internal_cursor */
	T0* volatile a12; /* key_storage */
	T0* volatile a13; /* clashes */
	T6 volatile a14; /* modulus */
	T0* volatile a15; /* slots */
	T6 volatile a16; /* slots_position */
	T6 volatile a17; /* clashes_previous_position */
	T0* volatile a18; /* special_item_routines */
	T0* volatile a19; /* special_key_routines */
	T0* volatile a20; /* hash_function */
};

/* Struct for type XM_EIFFEL_PARSER */
struct S799 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_last_error_description */
	T0* volatile a2; /* scanner */
	T0* volatile a3; /* error_positions */
	T0* volatile a4; /* scanners */
	T1 volatile a5; /* in_external_dtd */
	T0* volatile a6; /* callbacks */
	T0* volatile a7; /* entities */
	T0* volatile a8; /* pe_entities */
	T0* volatile a9; /* dtd_resolver */
	T0* volatile a10; /* entity_resolver */
	T1 volatile a11; /* use_namespaces */
	T6 volatile a12; /* string_mode */
	T0* volatile a13; /* dtd_callbacks */
	T0* volatile a14; /* last_string_value */
	T0* volatile a15; /* yyss */
	T0* volatile a16; /* yyspecial_routines1 */
	T6 volatile a17; /* yyvsc1 */
	T0* volatile a18; /* yyvs1 */
	T0* volatile a19; /* yyspecial_routines2 */
	T6 volatile a20; /* yyvsc2 */
	T0* volatile a21; /* yyvs2 */
	T0* volatile a22; /* yyspecial_routines3 */
	T6 volatile a23; /* yyvsc3 */
	T0* volatile a24; /* yyvs3 */
	T0* volatile a25; /* yyspecial_routines4 */
	T6 volatile a26; /* yyvsc4 */
	T0* volatile a27; /* yyvs4 */
	T0* volatile a28; /* yyspecial_routines5 */
	T6 volatile a29; /* yyvsc5 */
	T0* volatile a30; /* yyvs5 */
	T0* volatile a31; /* yyspecial_routines6 */
	T6 volatile a32; /* yyvsc6 */
	T0* volatile a33; /* yyvs6 */
	T0* volatile a34; /* yyspecial_routines7 */
	T6 volatile a35; /* yyvsc7 */
	T0* volatile a36; /* yyvs7 */
	T0* volatile a37; /* yyspecial_routines8 */
	T6 volatile a38; /* yyvsc8 */
	T0* volatile a39; /* yyvs8 */
	T0* volatile a40; /* yyspecial_routines9 */
	T6 volatile a41; /* yyvsc9 */
	T0* volatile a42; /* yyvs9 */
	T0* volatile a43; /* yyspecial_routines10 */
	T6 volatile a44; /* yyvsc10 */
	T0* volatile a45; /* yyvs10 */
	T0* volatile a46; /* yyspecial_routines11 */
	T6 volatile a47; /* yyvsc11 */
	T0* volatile a48; /* yyvs11 */
	T0* volatile a49; /* yytranslate */
	T0* volatile a50; /* yyr1 */
	T0* volatile a51; /* yytypes1 */
	T0* volatile a52; /* yytypes2 */
	T0* volatile a53; /* yydefact */
	T0* volatile a54; /* yydefgoto */
	T0* volatile a55; /* yypact */
	T0* volatile a56; /* yypgoto */
	T0* volatile a57; /* yytable */
	T0* volatile a58; /* yycheck */
	T6 volatile a59; /* yy_parsing_status */
	T6 volatile a60; /* yy_suspended_yystacksize */
	T6 volatile a61; /* yy_suspended_yystate */
	T6 volatile a62; /* yy_suspended_yyn */
	T6 volatile a63; /* yy_suspended_yychar1 */
	T6 volatile a64; /* yy_suspended_index */
	T6 volatile a65; /* yy_suspended_yyss_top */
	T6 volatile a66; /* yy_suspended_yy_goto */
	T6 volatile a67; /* yyssp */
	T6 volatile a68; /* error_count */
	T1 volatile a69; /* yy_lookahead_needed */
	T6 volatile a70; /* yyerrstatus */
	T6 volatile a71; /* last_token */
	T6 volatile a72; /* yyvsp1 */
	T6 volatile a73; /* yyvsp2 */
	T6 volatile a74; /* yyvsp3 */
	T6 volatile a75; /* yyvsp4 */
	T6 volatile a76; /* yyvsp5 */
	T6 volatile a77; /* yyvsp6 */
	T6 volatile a78; /* yyvsp7 */
	T6 volatile a79; /* yyvsp8 */
	T6 volatile a80; /* yyvsp9 */
	T6 volatile a81; /* yyvsp10 */
	T6 volatile a82; /* yyvsp11 */
	T0* volatile a83; /* last_detachable_any_value */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S800 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* start */
	T0* volatile a2; /* tree */
	T0* volatile a3; /* error */
	T0* volatile a4; /* last */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S803 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_position_table */
	T0* volatile a2; /* document */
	T0* volatile a3; /* source_parser */
	T0* volatile a4; /* current_element */
	T0* volatile a5; /* namespace_cache */
	T0* volatile a6; /* next */
};

/* Struct for type ET_ECF_STATE */
struct S804 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
	T0* volatile a2; /* ise_version */
};

/* Struct for type ET_ECF_SYSTEM_CONFIG */
struct S805 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* filename */
	T0* volatile a3; /* universe */
	T0* volatile a4; /* ecf_namespace */
	T0* volatile a5; /* ecf_version */
	T0* volatile a6; /* description */
	T0* volatile a7; /* notes */
	T0* volatile a8; /* targets */
	T1 volatile a9; /* is_read_only */
	T0* volatile a10; /* uuid */
	T0* volatile a11; /* library_target */
};

/* Struct for type ET_ECF_LIBRARY */
struct S806 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* filename */
	T0* volatile a3; /* ecf_namespace */
	T0* volatile a4; /* ecf_version */
	T0* volatile a5; /* description */
	T0* volatile a6; /* notes */
	T0* volatile a7; /* targets */
	T1 volatile a8; /* is_read_only */
	T0* volatile a9; /* uuid */
	T0* volatile a10; /* library_target */
	T0* volatile a11; /* current_system */
	T0* volatile a12; /* library */
	T0* volatile a13; /* libraries */
	T0* volatile a14; /* clusters */
	T0* volatile a15; /* dotnet_assemblies */
	T0* volatile a16; /* implicit_attachment_type_mark */
	T0* volatile a17; /* master_classes */
	T0* volatile a18; /* master_class_mutex */
	T0* volatile a19; /* any_type */
	T0* volatile a20; /* detachable_any_type */
	T0* volatile a21; /* detachable_separate_any_type */
	T0* volatile a22; /* any_parent */
	T0* volatile a23; /* any_parents */
	T0* volatile a24; /* any_clients */
	T0* volatile a25; /* tuple_type */
	T0* volatile a26; /* detachable_tuple_type */
	T0* volatile a27; /* tuple_identity_type */
	T0* volatile a28; /* unfolded_empty_tuple_actual_parameters */
	T0* volatile a29; /* array_any_type */
	T0* volatile a30; /* array_detachable_any_type */
	T0* volatile a31; /* array_none_type */
	T0* volatile a32; /* array_identity_type */
	T0* volatile a33; /* boolean_type */
	T0* volatile a34; /* character_type */
	T0* volatile a35; /* character_8_type */
	T0* volatile a36; /* character_8_convert_feature */
	T0* volatile a37; /* character_32_type */
	T0* volatile a38; /* character_32_convert_feature */
	T0* volatile a39; /* double_type */
	T0* volatile a40; /* exception_type */
	T0* volatile a41; /* detachable_exception_type */
	T0* volatile a42; /* exception_manager_type */
	T0* volatile a43; /* function_identity_any_type */
	T0* volatile a44; /* immutable_string_8_type */
	T0* volatile a45; /* immutable_string_32_type */
	T0* volatile a46; /* integer_type */
	T0* volatile a47; /* integer_8_type */
	T0* volatile a48; /* integer_8_convert_feature */
	T0* volatile a49; /* integer_16_type */
	T0* volatile a50; /* integer_16_convert_feature */
	T0* volatile a51; /* integer_32_type */
	T0* volatile a52; /* integer_32_convert_feature */
	T0* volatile a53; /* integer_64_type */
	T0* volatile a54; /* integer_64_convert_feature */
	T0* volatile a55; /* ise_exception_manager_type */
	T0* volatile a56; /* iterable_detachable_separate_any_type */
	T0* volatile a57; /* natural_type */
	T0* volatile a58; /* natural_8_type */
	T0* volatile a59; /* natural_8_convert_feature */
	T0* volatile a60; /* natural_16_type */
	T0* volatile a61; /* natural_16_convert_feature */
	T0* volatile a62; /* natural_32_type */
	T0* volatile a63; /* natural_32_convert_feature */
	T0* volatile a64; /* natural_64_type */
	T0* volatile a65; /* natural_64_convert_feature */
	T0* volatile a66; /* none_type */
	T0* volatile a67; /* detachable_none_type */
	T0* volatile a68; /* pointer_type */
	T0* volatile a69; /* predicate_identity_type */
	T0* volatile a70; /* procedure_identity_type */
	T0* volatile a71; /* real_type */
	T0* volatile a72; /* real_32_type */
	T0* volatile a73; /* real_32_convert_feature */
	T0* volatile a74; /* real_64_type */
	T0* volatile a75; /* real_64_convert_feature */
	T0* volatile a76; /* routine_identity_type */
	T0* volatile a77; /* special_any_type */
	T0* volatile a78; /* special_detachable_any_type */
	T0* volatile a79; /* special_identity_type */
	T0* volatile a80; /* string_type */
	T0* volatile a81; /* detachable_string_type */
	T0* volatile a82; /* string_8_type */
	T0* volatile a83; /* detachable_string_8_type */
	T0* volatile a84; /* string_8_convert_feature */
	T0* volatile a85; /* string_32_type */
	T0* volatile a86; /* string_32_convert_feature */
	T0* volatile a87; /* system_object_type */
	T0* volatile a88; /* system_object_parents */
	T0* volatile a89; /* system_string_type */
	T0* volatile a90; /* type_detachable_any_type */
	T0* volatile a91; /* detachable_type_exception_type */
	T0* volatile a92; /* type_detachable_exception_type */
	T0* volatile a93; /* type_detachable_like_current_type */
	T0* volatile a94; /* type_identity_type */
	T0* volatile a95; /* typed_pointer_identity_type */
	T0* volatile a96; /* wide_character_type */
	T0* volatile a97; /* selected_target */
	T1 volatile a98; /* use_obsolete_syntax_mode */
	T1 volatile a99; /* obsolete_iteration_mode */
	T1 volatile a100; /* obsolete_routine_type_mode */
	T1 volatile a101; /* is_preparsed */
};

/* Struct for type TUPLE [ET_ADAPTED_LIBRARY] */
struct S808 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
struct S809 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type XM_DOCUMENT */
struct S810 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* root_element */
	T0* volatile a2; /* children */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S811 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* compressed_position */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S813 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_error */
	T0* volatile a2; /* last_error */
	T0* volatile a3; /* next */
};

/* Struct for type XM_ATTRIBUTE */
struct S814 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* namespace */
	T0* volatile a3; /* value */
	T0* volatile a4; /* parent */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
struct S815 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* position */
	T6 volatile a4; /* last_position */
	T6 volatile a5; /* capacity */
	T6 volatile a6; /* slots_position */
	T6 volatile a7; /* count */
	T0* volatile a8; /* key_equality_tester */
	T6 volatile a9; /* modulus */
	T6 volatile a10; /* clashes_previous_position */
	T0* volatile a11; /* special_item_routines */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T0* volatile a14; /* special_key_routines */
	T0* volatile a15; /* key_storage */
	T0* volatile a16; /* equality_tester */
	T6 volatile a17; /* free_slot */
	T0* volatile a18; /* internal_cursor */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
struct S816 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T6 volatile a2; /* position */
	T0* volatile a3; /* internal_cursor */
	T0* volatile a4; /* key_storage */
	T0* volatile a5; /* item_storage */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* capacity */
	T6 volatile a8; /* slots_position */
	T6 volatile a9; /* modulus */
	T6 volatile a10; /* clashes_previous_position */
	T0* volatile a11; /* key_equality_tester */
	T6 volatile a12; /* found_position */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* clashes */
	T0* volatile a15; /* slots */
	T0* volatile a16; /* special_key_routines */
	T0* volatile a17; /* equality_tester */
	T6 volatile a18; /* free_slot */
	T0* volatile a19; /* hash_function */
};

/* Struct for type ET_ECF_TARGET_PARENT */
struct S817 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name_id */
	T0* volatile a2; /* location_id */
	T0* volatile a3; /* target */
};

/* Struct for type DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
struct S818 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
struct S819 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
};

/* Struct for type ET_ECF_TARGETS */
struct S820 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* targets */
};

/* Struct for type DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S821 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* key_equality_tester */
	T0* volatile a2; /* internal_keys */
	T0* volatile a3; /* hash_function */
	T6 volatile a4; /* position */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* capacity */
	T6 volatile a7; /* slots_position */
	T6 volatile a8; /* count */
	T0* volatile a9; /* equality_tester */
	T6 volatile a10; /* found_position */
	T6 volatile a11; /* modulus */
	T6 volatile a12; /* clashes_previous_position */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* item_storage */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_key_routines */
	T0* volatile a18; /* key_storage */
	T6 volatile a19; /* free_slot */
	T0* volatile a20; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S822 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* container */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type DS_CELL [detachable ET_ECF_LIBRARY] */
struct S824 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARY */
struct S825 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* options */
	T0* volatile a2; /* name_id */
	T0* volatile a3; /* filename_id */
	T0* volatile a4; /* universe */
	T0* volatile a5; /* target */
	T0* volatile a6; /* description */
	T0* volatile a7; /* classname_prefix */
	T1 volatile a8; /* is_read_only */
	T1 volatile a9; /* use_application_options */
	T0* volatile a10; /* class_options */
	T0* volatile a11; /* class_renamings */
	T0* volatile a12; /* visible_classes */
	T0* volatile a13; /* conditions */
	T0* volatile a14; /* notes */
	T0* volatile a15; /* name */
	T0* volatile a16; /* library */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
struct S826 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
};

/* Struct for type ET_ECF_DOTNET_ASSEMBLY */
struct S828 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* pathname */
	T0* volatile a2; /* referenced_assemblies */
	T0* volatile a3; /* current_system */
	T0* volatile a4; /* dotnet_assembly */
	T0* volatile a5; /* name */
	T0* volatile a6; /* implicit_attachment_type_mark */
	T0* volatile a7; /* master_classes */
	T0* volatile a8; /* master_class_mutex */
	T0* volatile a9; /* any_type */
	T0* volatile a10; /* detachable_any_type */
	T0* volatile a11; /* detachable_separate_any_type */
	T0* volatile a12; /* any_parent */
	T0* volatile a13; /* any_parents */
	T0* volatile a14; /* any_clients */
	T0* volatile a15; /* tuple_type */
	T0* volatile a16; /* detachable_tuple_type */
	T0* volatile a17; /* tuple_identity_type */
	T0* volatile a18; /* unfolded_empty_tuple_actual_parameters */
	T0* volatile a19; /* array_any_type */
	T0* volatile a20; /* array_detachable_any_type */
	T0* volatile a21; /* array_none_type */
	T0* volatile a22; /* array_identity_type */
	T0* volatile a23; /* boolean_type */
	T0* volatile a24; /* character_type */
	T0* volatile a25; /* character_8_type */
	T0* volatile a26; /* character_8_convert_feature */
	T0* volatile a27; /* character_32_type */
	T0* volatile a28; /* character_32_convert_feature */
	T0* volatile a29; /* double_type */
	T0* volatile a30; /* exception_type */
	T0* volatile a31; /* detachable_exception_type */
	T0* volatile a32; /* exception_manager_type */
	T0* volatile a33; /* function_identity_any_type */
	T0* volatile a34; /* immutable_string_8_type */
	T0* volatile a35; /* immutable_string_32_type */
	T0* volatile a36; /* integer_type */
	T0* volatile a37; /* integer_8_type */
	T0* volatile a38; /* integer_8_convert_feature */
	T0* volatile a39; /* integer_16_type */
	T0* volatile a40; /* integer_16_convert_feature */
	T0* volatile a41; /* integer_32_type */
	T0* volatile a42; /* integer_32_convert_feature */
	T0* volatile a43; /* integer_64_type */
	T0* volatile a44; /* integer_64_convert_feature */
	T0* volatile a45; /* ise_exception_manager_type */
	T0* volatile a46; /* iterable_detachable_separate_any_type */
	T0* volatile a47; /* natural_type */
	T0* volatile a48; /* natural_8_type */
	T0* volatile a49; /* natural_8_convert_feature */
	T0* volatile a50; /* natural_16_type */
	T0* volatile a51; /* natural_16_convert_feature */
	T0* volatile a52; /* natural_32_type */
	T0* volatile a53; /* natural_32_convert_feature */
	T0* volatile a54; /* natural_64_type */
	T0* volatile a55; /* natural_64_convert_feature */
	T0* volatile a56; /* none_type */
	T0* volatile a57; /* detachable_none_type */
	T0* volatile a58; /* pointer_type */
	T0* volatile a59; /* predicate_identity_type */
	T0* volatile a60; /* procedure_identity_type */
	T0* volatile a61; /* real_type */
	T0* volatile a62; /* real_32_type */
	T0* volatile a63; /* real_32_convert_feature */
	T0* volatile a64; /* real_64_type */
	T0* volatile a65; /* real_64_convert_feature */
	T0* volatile a66; /* routine_identity_type */
	T0* volatile a67; /* special_any_type */
	T0* volatile a68; /* special_detachable_any_type */
	T0* volatile a69; /* special_identity_type */
	T0* volatile a70; /* string_type */
	T0* volatile a71; /* detachable_string_type */
	T0* volatile a72; /* string_8_type */
	T0* volatile a73; /* detachable_string_8_type */
	T0* volatile a74; /* string_8_convert_feature */
	T0* volatile a75; /* string_32_type */
	T0* volatile a76; /* string_32_convert_feature */
	T0* volatile a77; /* system_object_type */
	T0* volatile a78; /* system_object_parents */
	T0* volatile a79; /* system_string_type */
	T0* volatile a80; /* type_detachable_any_type */
	T0* volatile a81; /* detachable_type_exception_type */
	T0* volatile a82; /* type_detachable_exception_type */
	T0* volatile a83; /* type_detachable_like_current_type */
	T0* volatile a84; /* type_identity_type */
	T0* volatile a85; /* typed_pointer_identity_type */
	T0* volatile a86; /* wide_character_type */
	T1 volatile a87; /* is_read_only */
	T1 volatile a88; /* is_preparsed */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S830 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* options */
	T0* volatile a2; /* name_id */
	T0* volatile a3; /* filename_id */
	T0* volatile a4; /* universe */
	T0* volatile a5; /* target */
	T0* volatile a6; /* description */
	T0* volatile a7; /* assembly_culture */
	T0* volatile a8; /* assembly_key */
	T0* volatile a9; /* assembly_name */
	T0* volatile a10; /* assembly_version */
	T0* volatile a11; /* classname_prefix */
	T1 volatile a12; /* is_read_only */
	T0* volatile a13; /* class_options */
	T0* volatile a14; /* class_renamings */
	T0* volatile a15; /* conditions */
	T0* volatile a16; /* notes */
	T0* volatile a17; /* name */
	T0* volatile a18; /* dotnet_assembly */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S831 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* internal_cursor */
	T6 volatile a3; /* found_position */
	T0* volatile a4; /* item_storage */
	T0* volatile a5; /* key_storage */
	T0* volatile a6; /* key_equality_tester */
	T0* volatile a7; /* internal_keys */
	T6 volatile a8; /* position */
	T6 volatile a9; /* free_slot */
	T6 volatile a10; /* last_position */
	T6 volatile a11; /* slots_position */
	T0* volatile a12; /* hash_function */
	T6 volatile a13; /* capacity */
	T0* volatile a14; /* equality_tester */
	T6 volatile a15; /* modulus */
	T6 volatile a16; /* clashes_previous_position */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* clashes */
	T0* volatile a19; /* slots */
	T0* volatile a20; /* special_key_routines */
};

/* Struct for type ET_ECF_ERROR */
struct S832 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* default_template */
	T0* volatile a2; /* parameters */
	T0* volatile a3; /* system_config */
	T0* volatile a4; /* position */
	T0* volatile a5; /* code */
};

/* Struct for type ET_ECF_OPTIONS */
struct S833 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* primary_options */
	T0* volatile a2; /* primary_debugs */
	T0* volatile a3; /* primary_assertions */
	T0* volatile a4; /* primary_warnings */
	T0* volatile a5; /* secondary_options */
	T0* volatile a6; /* description */
};

/* Struct for type ET_ECF_CLUSTERS */
struct S834 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* clusters */
};

/* Struct for type KL_AGENT_HASH_FUNCTION [STRING_8] */
struct S835 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* hash_agent */
};

/* Struct for type TUPLE [STRING_8] */
struct S836 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type FUNCTION [TUPLE [STRING_8], INTEGER_32] */
struct S837 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [KL_STRING_ROUTINES] */
struct S838 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
struct S840 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* key_equality_tester */
	T0* volatile a2; /* internal_keys */
	T0* volatile a3; /* hash_function */
	T6 volatile a4; /* position */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* capacity */
	T6 volatile a7; /* slots_position */
	T6 volatile a8; /* count */
	T0* volatile a9; /* equality_tester */
	T6 volatile a10; /* found_position */
	T6 volatile a11; /* modulus */
	T6 volatile a12; /* clashes_previous_position */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* item_storage */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_key_routines */
	T0* volatile a18; /* key_storage */
	T6 volatile a19; /* free_slot */
	T0* volatile a20; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLUSTER] */
struct S842 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE */
struct S843 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* is_alive */
	T1 volatile a2; /* has_once_per_object_routines */
	T6 volatile a3; /* attribute_count */
	T0* volatile a4; /* queries */
	T6 volatile a5; /* id */
	T0* volatile a6; /* base_type */
	T0* volatile a7; /* base_class */
	T0* volatile a8; /* meta_type */
	T0* volatile a9; /* separate_type */
	T0* volatile a10; /* attached_separate_type */
	T0* volatile a11; /* attached_type */
	T0* volatile a12; /* conforming_ancestors */
	T0* volatile a13; /* procedures_by_seed */
	T0* volatile a14; /* procedures */
	T0* volatile a15; /* queries_by_seed */
	T1 volatile a16; /* has_redefined_copy_routine */
	T1 volatile a17; /* has_redefined_is_equal_routine */
	T6 volatile a18; /* hash_code */
	T0* volatile a19; /* next_type */
	T1 volatile a20; /* has_reference_attributes */
	T0* volatile a21; /* query_calls */
	T0* volatile a22; /* invariants */
	T0* volatile a23; /* procedure_calls */
	T1 volatile a24; /* has_static */
	T0* volatile a25; /* equality_expressions */
	T0* volatile a26; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S844 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
struct S845 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_equality_tester */
	T6 volatile a4; /* position */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* capacity */
	T6 volatile a7; /* slots_position */
	T6 volatile a8; /* count */
	T0* volatile a9; /* equality_tester */
	T6 volatile a10; /* modulus */
	T6 volatile a11; /* clashes_previous_position */
	T0* volatile a12; /* special_item_routines */
	T0* volatile a13; /* clashes */
	T0* volatile a14; /* slots */
	T0* volatile a15; /* special_key_routines */
	T0* volatile a16; /* key_storage */
	T6 volatile a17; /* free_slot */
	T0* volatile a18; /* internal_cursor */
	T0* volatile a19; /* hash_function */
};

/* Struct for type TUPLE [INTEGER_32] */
struct S846 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile z1;
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S847 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* dynamic_type_set_count */
	T1 volatile a2; /* has_fatal_error */
	T0* volatile a3; /* current_dynamic_system */
	T1 volatile a4; /* catcall_error_mode */
	T1 volatile a5; /* catcall_warning_mode */
	T1 volatile a6; /* no_debug */
	T0* volatile a7; /* alive_conforming_descendants_per_type */
};

/* Struct for type TUPLE [ET_DYNAMIC_SYSTEM] */
struct S848 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S850 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* preconditions */
	T0* volatile a2; /* postconditions */
	T0* volatile a3; /* invariants */
	T6 volatile a4; /* current_index */
	T0* volatile a5; /* static_feature */
	T0* volatile a6; /* dynamic_type_sets */
	T1 volatile a7; /* is_static */
	T6 volatile a8; /* id */
	T0* volatile a9; /* target_type */
	T0* volatile a10; /* result_type_set */
	T1 volatile a11; /* is_generated */
	T1 volatile a12; /* is_inlined */
	T8 volatile a13; /* builtin_class_code */
	T8 volatile a14; /* builtin_feature_code */
	T1 volatile a15; /* is_copy_routine */
	T1 volatile a16; /* is_is_equal_routine */
	T0* volatile a17; /* query_calls */
	T0* volatile a18; /* procedure_calls */
	T1 volatile a19; /* is_regular */
	T0* volatile a20; /* first_precursor */
	T1 volatile a21; /* is_creation */
	T0* volatile a22; /* other_precursors */
	T1 volatile a23; /* is_built */
	T1 volatile a24; /* is_separate_creation */
	T1 volatile a25; /* is_address */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S852 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* root_context */
	T0* volatile a3; /* storage */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S853 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* type_mark */
	T6 volatile a3; /* index */
	T0* volatile a4; /* implementation_class */
};

/* Struct for type ARRAY [ET_TYPE] */
struct S854 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S855 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type ET_SYSTEM_MULTIPROCESSOR */
struct S858 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* benchmark_shown */
	T1 volatile a2; /* nested_benchmark_shown */
	T0* volatile a3; /* interface_checker */
	T0* volatile a4; /* stop_request */
	T0* volatile a5; /* eiffel_parser */
	T0* volatile a6; /* error_handler */
	T0* volatile a7; /* implementation_checker */
	T0* volatile a8; /* ise_version */
	T0* volatile a9; /* other_processors */
	T0* volatile a10; /* eiffel_preparser */
	T0* volatile a11; /* master_class_checker */
	T1 volatile a12; /* preparse_multiple_mode */
	T0* volatile a13; /* ast_factory */
	T1 volatile a14; /* use_note_keyword */
	T1 volatile a15; /* use_attached_keyword */
	T1 volatile a16; /* use_attribute_keyword */
	T1 volatile a17; /* use_reference_keyword */
	T1 volatile a18; /* use_detachable_keyword */
	T1 volatile a19; /* preparse_shallow_mode */
	T1 volatile a20; /* providers_enabled */
	T0* volatile a21; /* provider_checker */
	T0* volatile a22; /* ancestor_builder */
	T0* volatile a23; /* feature_flattener */
	T0* volatile a24; /* ecma_version */
	T1 volatile a25; /* metrics_shown */
	T1 volatile a26; /* flat_mode */
	T1 volatile a27; /* flat_dbc_mode */
	T0* volatile a28; /* processed_class_count_stack */
	T0* volatile a29; /* dotnet_assembly_consumer */
	T6 volatile a30; /* processed_class_count */
	T1 volatile a31; /* preparse_single_mode */
	T1 volatile a32; /* unknown_builtin_reported */
	T1 volatile a33; /* qualified_anchored_types_cycle_detection_enabled */
	T1 volatile a34; /* cluster_dependence_enabled */
	T6 volatile a35; /* postponed_class_count */
	T1 volatile a36; /* preparse_override_mode */
	T1 volatile a37; /* preparse_readonly_mode */
	T1 volatile a38; /* use_cluster_dependence_pathnames */
	T1 volatile a39; /* suppliers_enabled */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S859 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S860 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_FEATURE_CHECKER */
struct S862 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* system_processor */
	T0* volatile a2; /* type_checker */
	T0* volatile a3; /* current_type */
	T0* volatile a4; /* current_class */
	T0* volatile a5; /* current_feature */
	T0* volatile a6; /* current_feature_impl */
	T0* volatile a7; /* current_class_impl */
	T0* volatile a8; /* enclosing_inline_agents */
	T0* volatile a9; /* unused_overloaded_procedures_list */
	T0* volatile a10; /* unused_overloaded_queries_list */
	T0* volatile a11; /* unused_overloaded_features_list */
	T0* volatile a12; /* unused_call_infos */
	T0* volatile a13; /* unused_contexts */
	T0* volatile a14; /* current_context */
	T0* volatile a15; /* current_target_type */
	T0* volatile a16; /* current_object_test_types */
	T0* volatile a17; /* current_object_test_scope */
	T0* volatile a18; /* object_test_scope_builder */
	T0* volatile a19; /* current_iteration_cursor_types */
	T0* volatile a20; /* current_iteration_item_types */
	T0* volatile a21; /* current_iteration_item_scope */
	T0* volatile a22; /* current_inline_separate_argument_types */
	T0* volatile a23; /* current_inline_separate_argument_scope */
	T0* volatile a24; /* current_initialization_scope */
	T0* volatile a25; /* current_attachment_scope */
	T0* volatile a26; /* attachment_scope_builder */
	T0* volatile a27; /* unused_attachment_scopes */
	T0* volatile a28; /* assertions_by_feature */
	T0* volatile a29; /* common_ancestor_type_list */
	T0* volatile a30; /* note_term_list */
	T0* volatile a31; /* vape_non_descendant_clients */
	T0* volatile a32; /* vape_creation_clients */
	T0* volatile a33; /* vape_client */
	T0* volatile a34; /* unused_adapted_base_classes */
	T0* volatile a35; /* adapted_base_class_checker */
	T1 volatile a36; /* has_fatal_error */
	T1 volatile a37; /* in_static_feature */
	T1 volatile a38; /* in_precondition */
	T6 volatile a39; /* index_count */
	T6 volatile a40; /* result_index */
	T6 volatile a41; /* attached_result_index */
	T6 volatile a42; /* current_index */
	T6 volatile a43; /* boolean_index */
	T6 volatile a44; /* character_8_index */
	T6 volatile a45; /* character_32_index */
	T6 volatile a46; /* integer_8_index */
	T6 volatile a47; /* integer_16_index */
	T6 volatile a48; /* integer_32_index */
	T6 volatile a49; /* integer_64_index */
	T6 volatile a50; /* natural_8_index */
	T6 volatile a51; /* natural_16_index */
	T6 volatile a52; /* natural_32_index */
	T6 volatile a53; /* natural_64_index */
	T6 volatile a54; /* pointer_index */
	T6 volatile a55; /* real_32_index */
	T6 volatile a56; /* real_64_index */
	T6 volatile a57; /* string_8_index */
	T6 volatile a58; /* string_32_index */
	T6 volatile a59; /* immutable_string_8_index */
	T6 volatile a60; /* immutable_string_32_index */
	T6 volatile a61; /* void_index */
	T0* volatile a62; /* supplier_handler */
	T1 volatile a63; /* in_invariant */
	T0* volatile a64; /* precursor_queries */
	T0* volatile a65; /* precursor_procedures */
	T1 volatile a66; /* in_postcondition */
	T1 volatile a67; /* in_precursor */
	T0* volatile a68; /* current_inline_agent */
	T1 volatile a69; /* in_check_instruction */
	T1 volatile a70; /* in_rescue */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S863 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S864 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T6 volatile a8; /* count */
	T6 volatile a9; /* slots_position */
	T0* volatile a10; /* special_item_routines */
	T0* volatile a11; /* clashes */
	T0* volatile a12; /* slots */
	T6 volatile a13; /* found_position */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* hash_function */
	T0* volatile a16; /* equality_tester */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S865 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target_type */
	T0* volatile a2; /* static_feature */
	T0* volatile a3; /* result_type_set */
	T1 volatile a4; /* is_static */
	T0* volatile a5; /* current_feature */
	T6 volatile a6; /* id */
	T0* volatile a7; /* dynamic_type_sets */
	T6 volatile a8; /* current_index */
	T0* volatile a9; /* preconditions */
	T0* volatile a10; /* postconditions */
	T1 volatile a11; /* is_generated */
	T1 volatile a12; /* is_inlined */
	T8 volatile a13; /* builtin_class_code */
	T8 volatile a14; /* builtin_feature_code */
	T1 volatile a15; /* is_built */
	T0* volatile a16; /* invariants */
	T0* volatile a17; /* first_precursor */
	T0* volatile a18; /* other_precursors */
	T1 volatile a19; /* is_copy_routine */
	T1 volatile a20; /* is_is_equal_routine */
	T0* volatile a21; /* parent_type */
	T0* volatile a22; /* procedure_calls */
	T0* volatile a23; /* query_calls */
	T1 volatile a24; /* is_regular */
	T1 volatile a25; /* is_creation */
	T1 volatile a26; /* is_address */
	T1 volatile a27; /* is_separate_creation */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S866 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S867 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T6 volatile a2; /* found_position */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* position */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* capacity */
	T6 volatile a7; /* count */
	T6 volatile a8; /* modulus */
	T6 volatile a9; /* slots_position */
	T6 volatile a10; /* clashes_previous_position */
	T0* volatile a11; /* key_equality_tester */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T0* volatile a14; /* special_item_routines */
	T0* volatile a15; /* special_key_routines */
	T0* volatile a16; /* key_storage */
	T0* volatile a17; /* equality_tester */
	T6 volatile a18; /* free_slot */
	T0* volatile a19; /* hash_function */
};

/* Struct for type ET_TYPE_CHECKER */
struct S869 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* current_context */
	T0* volatile a2; /* current_class_impl */
	T0* volatile a3; /* current_feature_impl */
	T0* volatile a4; /* constraint_context */
	T0* volatile a5; /* current_class */
	T0* volatile a6; /* target_context */
	T0* volatile a7; /* other_context */
	T0* volatile a8; /* adapted_base_class_checker */
	T0* volatile a9; /* adapted_base_classes */
	T0* volatile a10; /* system_processor */
	T0* volatile a11; /* supplier_handler */
	T1 volatile a12; /* has_fatal_error */
	T1 volatile a13; /* class_interface_error_only */
	T1 volatile a14; /* in_qualified_anchored_type */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S872 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S873 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S874 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S875 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S876 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S877 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S878 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* count */
	T6 volatile a4; /* last_position */
	T6 volatile a5; /* free_slot */
	T6 volatile a6; /* position */
	T0* volatile a7; /* equality_tester */
	T0* volatile a8; /* key_equality_tester */
	T6 volatile a9; /* found_position */
	T0* volatile a10; /* key_storage */
	T0* volatile a11; /* clashes */
	T6 volatile a12; /* modulus */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* capacity */
	T0* volatile a15; /* special_item_routines */
	T0* volatile a16; /* special_key_routines */
	T6 volatile a17; /* slots_position */
	T6 volatile a18; /* clashes_previous_position */
	T0* volatile a19; /* hash_function */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S879 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* object_tests */
	T6 volatile a2; /* hidden_count */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S880 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* current_class */
	T0* volatile a3; /* system_processor */
	T0* volatile a4; /* scope */
	T1 volatile a5; /* is_negated */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
struct S881 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_storage */
	T6 volatile a4; /* count */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T0* volatile a8; /* equality_tester */
	T0* volatile a9; /* key_equality_tester */
	T6 volatile a10; /* found_position */
	T0* volatile a11; /* clashes */
	T6 volatile a12; /* modulus */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* capacity */
	T0* volatile a15; /* special_item_routines */
	T0* volatile a16; /* special_key_routines */
	T6 volatile a17; /* slots_position */
	T6 volatile a18; /* clashes_previous_position */
	T0* volatile a19; /* internal_keys */
	T0* volatile a20; /* hash_function */
};

/* Struct for type ET_ITERATION_ITEM_SCOPE */
struct S882 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* hidden_count */
	T0* volatile a2; /* iteration_components */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
struct S883 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* equality_tester */
	T0* volatile a2; /* key_equality_tester */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T0* volatile a8; /* special_item_routines */
	T0* volatile a9; /* item_storage */
	T0* volatile a10; /* special_key_routines */
	T0* volatile a11; /* key_storage */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* found_position */
	T0* volatile a15; /* internal_cursor */
	T6 volatile a16; /* slots_position */
	T6 volatile a17; /* count */
	T6 volatile a18; /* clashes_previous_position */
	T0* volatile a19; /* internal_keys */
	T0* volatile a20; /* hash_function */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
struct S884 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* hidden_count */
	T0* volatile a2; /* inline_separate_arguments */
};

/* Struct for type ET_ATTACHMENT_SCOPE */
struct S885 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* locals_attached */
	T0* volatile a2; /* arguments_attached */
	T0* volatile a3; /* attributes_attached */
	T1 volatile a4; /* result_attached */
	T1 volatile a5; /* is_code_unreachable */
};

/* Struct for type ET_ATTACHMENT_SCOPE_BUILDER */
struct S886 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* scope */
	T1 volatile a2; /* is_negated */
};

/* Struct for type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
struct S887 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
struct S888 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* internal_cursor */
	T0* volatile a3; /* clashes */
	T0* volatile a4; /* item_storage */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* position */
	T6 volatile a7; /* capacity */
	T6 volatile a8; /* slots_position */
	T6 volatile a9; /* free_slot */
	T0* volatile a10; /* equality_tester */
	T0* volatile a11; /* key_equality_tester */
	T6 volatile a12; /* found_position */
	T6 volatile a13; /* modulus */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* special_item_routines */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_key_routines */
	T0* volatile a18; /* key_storage */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_NOTE_TERM] */
struct S889 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S890 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type ET_ADAPTED_BASE_CLASS_CHECKER */
struct S891 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* current_class_impl */
	T0* volatile a2; /* current_class */
	T0* volatile a3; /* system_processor */
	T1 volatile a4; /* has_fatal_error */
	T1 volatile a5; /* feature_flattening_error_only */
	T1 volatile a6; /* class_interface_error_only */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S893 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* current_feature */
	T0* volatile a2; /* static_call */
	T0* volatile a3; /* target_type_set */
	T0* volatile a4; /* result_type_set */
	T0* volatile a5; /* current_feature_impl */
	T0* volatile a6; /* current_type */
	T6 volatile a7; /* current_index */
	T6 volatile a8; /* index_offset */
	T0* volatile a9; /* next */
	T1 volatile a10; /* is_generated */
	T1 volatile a11; /* force_result_boxing */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S894 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target_type_set */
	T0* volatile a2; /* static_call */
	T0* volatile a3; /* current_type */
	T0* volatile a4; /* current_feature_impl */
	T0* volatile a5; /* next */
	T1 volatile a6; /* is_generated */
	T0* volatile a7; /* current_feature */
	T6 volatile a8; /* current_index */
	T6 volatile a9; /* index_offset */
};

/* Struct for type DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32] */
struct S896 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* special_routines_1 */
	T0* volatile a3; /* storage_1 */
	T0* volatile a4; /* special_routines_2 */
	T0* volatile a5; /* storage_2 */
	T6 volatile a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32] */
struct S897 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* special_routines_1 */
	T0* volatile a3; /* storage_1 */
	T0* volatile a4; /* special_routines_2 */
	T0* volatile a5; /* storage_2 */
	T6 volatile a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32] */
struct S898 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines_1 */
	T0* volatile a2; /* storage_1 */
	T0* volatile a3; /* special_routines_2 */
	T0* volatile a4; /* storage_2 */
	T6 volatile a5; /* capacity */
	T6 volatile a6; /* count */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S904 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* id */
	T0* volatile a2; /* base_class */
	T0* volatile a3; /* base_type */
	T1 volatile a4; /* is_alive */
	T1 volatile a5; /* has_once_per_object_routines */
	T6 volatile a6; /* attribute_count */
	T0* volatile a7; /* queries */
	T0* volatile a8; /* meta_type */
	T0* volatile a9; /* separate_type */
	T0* volatile a10; /* attached_separate_type */
	T0* volatile a11; /* attached_type */
	T0* volatile a12; /* conforming_ancestors */
	T0* volatile a13; /* queries_by_seed */
	T0* volatile a14; /* procedures_by_seed */
	T0* volatile a15; /* procedures */
	T1 volatile a16; /* has_redefined_copy_routine */
	T0* volatile a17; /* item_type_sets */
	T0* volatile a18; /* invariants */
	T1 volatile a19; /* has_redefined_is_equal_routine */
	T1 volatile a20; /* has_reference_attributes */
	T6 volatile a21; /* hash_code */
	T0* volatile a22; /* next_type */
	T0* volatile a23; /* query_calls */
	T0* volatile a24; /* procedure_calls */
	T1 volatile a25; /* has_static */
	T0* volatile a26; /* equality_expressions */
	T0* volatile a27; /* object_equality_expressions */
};

/* Struct for type ET_FEATURE_LIST */
struct S907 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* storage */
	T6 volatile a2; /* count */
};

/* Struct for type NATIVE_STRING */
struct S909 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* managed_data */
	T6 volatile a2; /* unit_count */
};

/* Struct for type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
struct S910 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T0* volatile a2; /* content */
	T0* volatile a3; /* keys */
	T0* volatile a4; /* deleted_marks */
	T0* volatile a5; /* indexes_map */
	T6 volatile a6; /* iteration_position */
	T6 volatile a7; /* count */
	T6 volatile a8; /* deleted_item_position */
	T6 volatile a9; /* control */
	T0* volatile a10; /* found_item */
	T1 volatile a11; /* has_default */
	T6 volatile a12; /* item_position */
	T6 volatile a13; /* ht_lowest_deleted_position */
	T0* volatile a14; /* ht_deleted_item */
	T0* volatile a15; /* ht_deleted_key */
	T1 volatile a16; /* object_comparison */
};

/* Struct for type RX_BYTE_CODE */
struct S912 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* byte_code */
	T0* volatile a3; /* character_sets */
	T6 volatile a4; /* capacity */
};

/* Struct for type RX_CHARACTER_SET */
struct S913 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* is_empty */
	T1 volatile a2; /* is_negated */
	T11 volatile a3; /* first_set */
	T11 volatile a4; /* second_set */
	T11 volatile a5; /* third_set */
	T11 volatile a6; /* fourth_set */
	T0* volatile a7; /* other_sets */
	T1 volatile a8; /* is_reverted */
};

/* Struct for type RX_CASE_MAPPING */
struct S914 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* lower_table */
	T0* volatile a2; /* flip_table */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S916 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S917 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S918 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type UC_STRING */
struct S919 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* area */
	T6 volatile a3; /* byte_count */
	T6 volatile a4; /* internal_hash_code */
	T6 volatile a5; /* last_byte_index_input */
	T6 volatile a6; /* last_byte_index_result */
	T6 volatile a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S920 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* after */
	T0* volatile a2; /* current_cell */
	T0* volatile a3; /* next_cursor */
	T0* volatile a4; /* container */
	T1 volatile a5; /* before */
};

/* Struct for type DS_HASH_SET [NATURAL_32] */
struct S921 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T6 volatile a2; /* capacity */
	T6 volatile a3; /* modulus */
	T6 volatile a4; /* last_position */
	T6 volatile a5; /* free_slot */
	T6 volatile a6; /* slots_position */
	T6 volatile a7; /* count */
	T6 volatile a8; /* clashes_previous_position */
	T0* volatile a9; /* special_item_routines */
	T0* volatile a10; /* item_storage */
	T0* volatile a11; /* clashes */
	T0* volatile a12; /* slots */
	T6 volatile a13; /* found_position */
	T0* volatile a14; /* internal_cursor */
	T0* volatile a15; /* equality_tester */
	T0* volatile a16; /* hash_function */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S922 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_OLD_EXPRESSION] */
struct S923 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION] */
struct S924 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* equality_tester */
	T0* volatile a2; /* key_equality_tester */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T0* volatile a8; /* special_item_routines */
	T0* volatile a9; /* item_storage */
	T0* volatile a10; /* special_key_routines */
	T0* volatile a11; /* key_storage */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* found_position */
	T0* volatile a15; /* internal_cursor */
	T6 volatile a16; /* count */
	T6 volatile a17; /* slots_position */
	T6 volatile a18; /* clashes_previous_position */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S925 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T6 volatile a2; /* capacity */
	T0* volatile a3; /* storage */
	T0* volatile a4; /* special_routines */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S926 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [BOOLEAN] */
struct S927 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* storage */
	T0* volatile a2; /* special_routines */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
struct S928 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
struct S929 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S930 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S931 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
struct S932 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
struct S933 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_RESULT] */
struct S934 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
struct S935 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* clashes */
	T0* volatile a4; /* slots */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S936 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* static_type */
	T6 volatile a2; /* count */
	T0* volatile a3; /* dynamic_types */
	T1 volatile a4; /* is_never_void */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S937 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S938 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S939 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile a3; /* storage */
	T0* volatile a4; /* special_routines */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
struct S940 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* last_position */
	T6 volatile a4; /* capacity */
	T6 volatile a5; /* count */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* slots_position */
	T6 volatile a8; /* modulus */
	T6 volatile a9; /* clashes_previous_position */
	T0* volatile a10; /* key_equality_tester */
	T0* volatile a11; /* equality_tester */
	T6 volatile a12; /* found_position */
	T0* volatile a13; /* clashes */
	T0* volatile a14; /* slots */
	T0* volatile a15; /* special_item_routines */
	T0* volatile a16; /* special_key_routines */
	T0* volatile a17; /* key_storage */
	T0* volatile a18; /* internal_cursor */
	T0* volatile a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S941 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
struct S942 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T6 volatile a2; /* count */
	T6 volatile a3; /* position */
	T0* volatile a4; /* item_storage */
	T6 volatile a5; /* capacity */
	T6 volatile a6; /* modulus */
	T6 volatile a7; /* last_position */
	T6 volatile a8; /* free_slot */
	T6 volatile a9; /* slots_position */
	T6 volatile a10; /* clashes_previous_position */
	T0* volatile a11; /* special_item_routines */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* found_position */
	T0* volatile a15; /* hash_function */
	T0* volatile a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
struct S943 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* internal_cursor */
	T6 volatile a3; /* found_position */
	T0* volatile a4; /* item_storage */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T6 volatile a8; /* capacity */
	T0* volatile a9; /* equality_tester */
	T0* volatile a10; /* key_equality_tester */
	T0* volatile a11; /* key_storage */
	T0* volatile a12; /* clashes */
	T6 volatile a13; /* modulus */
	T0* volatile a14; /* slots */
	T6 volatile a15; /* slots_position */
	T6 volatile a16; /* clashes_previous_position */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32] */
struct S944 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage_2 */
	T0* volatile a3; /* storage_1 */
	T0* volatile a4; /* special_routines_1 */
	T0* volatile a5; /* special_routines_2 */
	T6 volatile a6; /* capacity */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, INTEGER_32] */
struct S945 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* modulus */
	T0* volatile a2; /* key_equality_tester */
	T0* volatile a3; /* item_storage */
	T0* volatile a4; /* slots */
	T0* volatile a5; /* hash_function */
	T0* volatile a6; /* key_storage */
	T0* volatile a7; /* clashes */
	T0* volatile a8; /* equality_tester */
	T6 volatile a9; /* capacity */
	T6 volatile a10; /* last_position */
	T6 volatile a11; /* free_slot */
	T6 volatile a12; /* position */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* special_key_routines */
	T6 volatile a15; /* found_position */
	T0* volatile a16; /* internal_cursor */
	T6 volatile a17; /* slots_position */
	T6 volatile a18; /* count */
	T6 volatile a19; /* clashes_previous_position */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S946 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* internal_cursor */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* capacity */
	T6 volatile a5; /* modulus */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* slots_position */
	T6 volatile a9; /* count */
	T6 volatile a10; /* clashes_previous_position */
	T0* volatile a11; /* special_item_routines */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* found_position */
	T0* volatile a15; /* equality_tester */
	T0* volatile a16; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32] */
struct S947 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage_2 */
	T0* volatile a3; /* storage_1 */
	T0* volatile a4; /* special_routines_1 */
	T0* volatile a5; /* special_routines_2 */
	T6 volatile a6; /* capacity */
};

/* Struct for type ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
struct S948 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
	T0* volatile a2; /* name */
	T0* volatile a3; /* arguments */
};

/* Struct for type ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
struct S950 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
	T0* volatile a2; /* name */
	T0* volatile a3; /* arguments */
	T6 volatile a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S951 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T6 volatile a8; /* count */
	T0* volatile a9; /* special_item_routines */
	T0* volatile a10; /* clashes */
	T0* volatile a11; /* slots */
	T6 volatile a12; /* found_position */
	T6 volatile a13; /* slots_position */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* hash_function */
	T0* volatile a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE] */
struct S952 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T6 volatile a2; /* found_position */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* count */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* capacity */
	T6 volatile a8; /* slots_position */
	T6 volatile a9; /* modulus */
	T6 volatile a10; /* clashes_previous_position */
	T0* volatile a11; /* key_equality_tester */
	T0* volatile a12; /* equality_tester */
	T0* volatile a13; /* internal_cursor */
	T0* volatile a14; /* key_storage */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* hash_function */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S953 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S954 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* key_storage */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* count */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T6 volatile a8; /* capacity */
	T6 volatile a9; /* slots_position */
	T0* volatile a10; /* equality_tester */
	T0* volatile a11; /* key_equality_tester */
	T6 volatile a12; /* found_position */
	T0* volatile a13; /* clashes */
	T6 volatile a14; /* modulus */
	T0* volatile a15; /* slots */
	T6 volatile a16; /* clashes_previous_position */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
struct S955 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* key_storage */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* count */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T0* volatile a8; /* equality_tester */
	T0* volatile a9; /* key_equality_tester */
	T6 volatile a10; /* found_position */
	T0* volatile a11; /* clashes */
	T6 volatile a12; /* modulus */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* capacity */
	T0* volatile a15; /* special_item_routines */
	T0* volatile a16; /* special_key_routines */
	T6 volatile a17; /* slots_position */
	T6 volatile a18; /* clashes_previous_position */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S956 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* count */
	T6 volatile a4; /* last_position */
	T6 volatile a5; /* free_slot */
	T6 volatile a6; /* position */
	T6 volatile a7; /* capacity */
	T0* volatile a8; /* equality_tester */
	T0* volatile a9; /* key_equality_tester */
	T0* volatile a10; /* internal_cursor */
	T0* volatile a11; /* key_storage */
	T0* volatile a12; /* clashes */
	T6 volatile a13; /* modulus */
	T0* volatile a14; /* slots */
	T6 volatile a15; /* slots_position */
	T6 volatile a16; /* clashes_previous_position */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S957 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
struct S958 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S959 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_FEATURE] */
struct S960 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T6 volatile a8; /* count */
	T6 volatile a9; /* slots_position */
	T0* volatile a10; /* special_item_routines */
	T0* volatile a11; /* clashes */
	T0* volatile a12; /* slots */
	T6 volatile a13; /* found_position */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* equality_tester */
	T0* volatile a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S961 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T6 volatile a2; /* position */
	T0* volatile a3; /* item_storage */
	T0* volatile a4; /* key_storage */
	T0* volatile a5; /* key_equality_tester */
	T0* volatile a6; /* internal_keys */
	T6 volatile a7; /* count */
	T6 volatile a8; /* last_position */
	T6 volatile a9; /* free_slot */
	T6 volatile a10; /* capacity */
	T6 volatile a11; /* slots_position */
	T6 volatile a12; /* modulus */
	T6 volatile a13; /* clashes_previous_position */
	T0* volatile a14; /* equality_tester */
	T6 volatile a15; /* found_position */
	T0* volatile a16; /* clashes */
	T0* volatile a17; /* slots */
	T0* volatile a18; /* special_item_routines */
	T0* volatile a19; /* special_key_routines */
	T0* volatile a20; /* hash_function */
};

/* Struct for type DS_STRING_HASH_TABLE */
struct S962 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T6 volatile a2; /* position */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* modulus */
	T0* volatile a5; /* key_equality_tester */
	T0* volatile a6; /* slots */
	T0* volatile a7; /* hash_function */
	T0* volatile a8; /* key_storage */
	T0* volatile a9; /* clashes */
	T6 volatile a10; /* count */
	T6 volatile a11; /* capacity */
	T6 volatile a12; /* slots_position */
	T6 volatile a13; /* free_slot */
	T6 volatile a14; /* last_position */
	T0* volatile a15; /* internal_keys */
	T6 volatile a16; /* clashes_previous_position */
	T0* volatile a17; /* equality_tester */
	T0* volatile a18; /* special_item_routines */
	T0* volatile a19; /* special_key_routines */
	T0* volatile a20; /* internal_cursor */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S963 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T6 volatile a2; /* mode */
	T14 volatile a3; /* file_pointer */
	T1 volatile a4; /* descriptor_available */
	T0* volatile a5; /* last_string_32 */
	T0* volatile a6; /* last_string */
	T0* volatile a7; /* internal_name */
	T0* volatile a8; /* internal_detachable_name_pointer */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S964 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
struct S965 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S966 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]] */
struct S967 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_QUICK_SORTER [STRING_8] */
struct S968 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* comparator */
};

/* Struct for type UC_STRING_COMPARATOR */
struct S969 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
struct S970 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_equality_tester */
	T6 volatile a4; /* last_position */
	T6 volatile a5; /* capacity */
	T6 volatile a6; /* slots_position */
	T6 volatile a7; /* count */
	T6 volatile a8; /* modulus */
	T6 volatile a9; /* clashes_previous_position */
	T0* volatile a10; /* equality_tester */
	T6 volatile a11; /* found_position */
	T0* volatile a12; /* special_item_routines */
	T0* volatile a13; /* clashes */
	T0* volatile a14; /* slots */
	T0* volatile a15; /* special_key_routines */
	T0* volatile a16; /* key_storage */
	T6 volatile a17; /* free_slot */
	T0* volatile a18; /* internal_cursor */
	T0* volatile a19; /* hash_function */
};

/* Struct for type TUPLE [STRING_8, STRING_8] */
struct S973 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
struct S974 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* sorted_items */
	T0* volatile a2; /* cycle */
	T0* volatile a3; /* indexes */
	T0* volatile a4; /* items */
	T0* volatile a5; /* counts */
	T0* volatile a6; /* successors */
};

/* Struct for type ET_DYNAMIC_EQUALITY_TYPES */
struct S975 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* left */
	T0* volatile a2; /* right */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
struct S977 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* left */
	T0* volatile a2; /* right */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S978 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* id */
	T0* volatile a2; /* base_class */
	T0* volatile a3; /* base_type */
	T1 volatile a4; /* is_alive */
	T1 volatile a5; /* has_once_per_object_routines */
	T6 volatile a6; /* attribute_count */
	T0* volatile a7; /* queries */
	T0* volatile a8; /* meta_type */
	T0* volatile a9; /* separate_type */
	T0* volatile a10; /* attached_separate_type */
	T0* volatile a11; /* attached_type */
	T0* volatile a12; /* conforming_ancestors */
	T0* volatile a13; /* queries_by_seed */
	T0* volatile a14; /* procedures_by_seed */
	T0* volatile a15; /* procedures */
	T0* volatile a16; /* item_type_set */
	T1 volatile a17; /* has_redefined_copy_routine */
	T0* volatile a18; /* invariants */
	T1 volatile a19; /* has_redefined_is_equal_routine */
	T1 volatile a20; /* has_reference_attributes */
	T6 volatile a21; /* hash_code */
	T0* volatile a22; /* next_type */
	T0* volatile a23; /* query_calls */
	T0* volatile a24; /* procedure_calls */
	T1 volatile a25; /* has_static */
	T0* volatile a26; /* equality_expressions */
	T0* volatile a27; /* object_equality_expressions */
};

/* Struct for type DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
struct S980 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_SECONDARY_TYPE */
struct S981 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* primary_type */
	T0* volatile a2; /* meta_type */
	T0* volatile a3; /* type_mark */
	T0* volatile a4; /* internal_base_type */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
struct S982 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
struct S988 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type ET_DYNAMIC_INLINED_EXPRESSION */
struct S992 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* dynamic_type_set */
	T6 volatile a2; /* index */
	T0* volatile a3; /* expression */
	T0* volatile a4; /* context */
};

/* Struct for type ET_DYNAMIC_CALL_CONTEXT */
struct S993 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* current_feature */
	T0* volatile a2; /* arguments */
	T0* volatile a3; /* target */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S994 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* comparator */
};

/* Struct for type PROCEDURE [TUPLE] */
struct S996 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S997 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
	T0* volatile z4;
	T1 volatile z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S998 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
	T0* volatile z4;
	T1 volatile z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S999 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
	T0* volatile z4;
	T1 volatile z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S1000 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T6 volatile z2;
	T0* volatile z3;
	T0* volatile z4;
	T1 volatile z5;
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S1001 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S1006 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T6 volatile z2;
	T0* volatile z3;
	T0* volatile z4;
	T1 volatile z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1007 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S1011 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
	T1 volatile z4;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S1016 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
	T0* volatile z4;
	T1 volatile z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
struct S1017 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T6 volatile z3;
	T6 volatile z4;
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
struct S1018 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
struct S1019 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
struct S1020 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
struct S1023 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T6 volatile z3;
	T0* volatile z4;
};

/* Struct for type WORKER_THREAD */
struct S1024 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* thread_procedure */
	T0* volatile a2; /* launch_mutex */
	T14 volatile a3; /* thread_id */
	T1 volatile a4; /* terminated */
};

/* Struct for type PATH */
struct S1026 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_name */
	T0* volatile a2; /* storage */
	T1 volatile a3; /* is_normalized */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S1027 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* sign */
	T11 volatile a2; /* part1 */
	T11 volatile a3; /* part2 */
	T6 volatile a4; /* last_state */
	T1 volatile a5; /* internal_overflowed */
	T0* volatile a6; /* leading_separators */
	T0* volatile a7; /* trailing_separators */
	T1 volatile a8; /* leading_separators_acceptable */
	T1 volatile a9; /* trailing_separators_acceptable */
	T6 volatile a10; /* conversion_type */
};

/* Struct for type STRING_8_SEARCHER */
struct S1029 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* deltas */
};

/* Struct for type STD_FILES */
struct S1031 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* default_output */
};

/* Struct for type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S1032 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* last_state */
	T1 volatile a2; /* internal_overflowed */
	T11 volatile a3; /* part1 */
	T11 volatile a4; /* part2 */
	T0* volatile a5; /* leading_separators */
	T0* volatile a6; /* trailing_separators */
	T6 volatile a7; /* sign */
	T6 volatile a8; /* conversion_type */
	T2 volatile a9; /* internal_lookahead */
	T1 volatile a10; /* leading_separators_acceptable */
	T1 volatile a11; /* trailing_separators_acceptable */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S1034 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S1035 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* second */
	T6 volatile a2; /* year */
	T6 volatile a3; /* month */
	T6 volatile a4; /* day */
	T6 volatile a5; /* hour */
	T6 volatile a6; /* minute */
	T6 volatile a7; /* millisecond */
	T0* volatile a8; /* local_clock */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S1036 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* year */
	T6 volatile a2; /* month */
	T6 volatile a3; /* day */
	T6 volatile a4; /* hour */
	T6 volatile a5; /* minute */
	T6 volatile a6; /* second */
	T6 volatile a7; /* millisecond */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S1041 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* key_storage */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* position */
	T6 volatile a5; /* count */
	T6 volatile a6; /* capacity */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* last_position */
	T0* volatile a9; /* key_equality_tester */
	T0* volatile a10; /* internal_keys */
	T0* volatile a11; /* equality_tester */
	T6 volatile a12; /* modulus */
	T6 volatile a13; /* slots_position */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* internal_cursor */
	T0* volatile a20; /* hash_function */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1044 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type_mark */
	T0* volatile a2; /* name */
	T0* volatile a3; /* actual_parameters */
};

/* Struct for type ET_UNQUALIFIED_CALL_EXPRESSION */
struct S1045 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* name */
	T0* volatile a3; /* arguments */
	T0* volatile a4; /* parenthesis_call */
};

/* Struct for type ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S1046 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* arguments */
	T0* volatile a3; /* parenthesis_call */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S1047 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_CELL [detachable ET_ECF_CONFIG] */
struct S1050 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
struct S1052 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
struct S1054 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type XM_NAMESPACE */
struct S1055 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* uri */
	T0* volatile a2; /* ns_prefix */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
struct S1056 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* after */
	T0* volatile a2; /* current_cell */
	T0* volatile a3; /* container */
	T1 volatile a4; /* before */
	T0* volatile a5; /* next_cursor */
};

/* Struct for type ET_ECF_REDIRECTION_CONFIG */
struct S1058 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* uuid */
	T0* volatile a2; /* location */
	T0* volatile a3; /* filename */
	T0* volatile a4; /* universe */
	T0* volatile a5; /* message */
	T0* volatile a6; /* ecf_namespace */
	T0* volatile a7; /* ecf_version */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S1059 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* id */
	T0* volatile a2; /* base_class */
	T0* volatile a3; /* base_type */
	T1 volatile a4; /* is_alive */
	T1 volatile a5; /* has_once_per_object_routines */
	T6 volatile a6; /* attribute_count */
	T0* volatile a7; /* queries */
	T0* volatile a8; /* meta_type */
	T0* volatile a9; /* separate_type */
	T0* volatile a10; /* attached_separate_type */
	T0* volatile a11; /* attached_type */
	T0* volatile a12; /* conforming_ancestors */
	T1 volatile a13; /* has_redefined_is_equal_routine */
	T1 volatile a14; /* has_redefined_copy_routine */
	T0* volatile a15; /* open_operand_tuple_type_set */
	T0* volatile a16; /* set_rout_disp_final_feature */
	T0* volatile a17; /* invariants */
	T0* volatile a18; /* next_type */
	T0* volatile a19; /* procedures */
	T0* volatile a20; /* query_calls */
	T0* volatile a21; /* procedure_calls */
	T1 volatile a22; /* has_static */
	T0* volatile a23; /* open_operand_type_sets */
	T6 volatile a24; /* hash_code */
	T0* volatile a25; /* queries_by_seed */
	T0* volatile a26; /* procedures_by_seed */
	T1 volatile a27; /* has_reference_attributes */
	T0* volatile a28; /* equality_expressions */
	T0* volatile a29; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S1060 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* id */
	T0* volatile a2; /* base_class */
	T0* volatile a3; /* base_type */
	T1 volatile a4; /* is_alive */
	T1 volatile a5; /* has_once_per_object_routines */
	T6 volatile a6; /* attribute_count */
	T0* volatile a7; /* queries */
	T0* volatile a8; /* meta_type */
	T0* volatile a9; /* separate_type */
	T0* volatile a10; /* attached_separate_type */
	T0* volatile a11; /* attached_type */
	T0* volatile a12; /* conforming_ancestors */
	T1 volatile a13; /* has_redefined_is_equal_routine */
	T1 volatile a14; /* has_redefined_copy_routine */
	T0* volatile a15; /* open_operand_tuple_type_set */
	T0* volatile a16; /* set_rout_disp_final_feature */
	T0* volatile a17; /* invariants */
	T0* volatile a18; /* next_type */
	T0* volatile a19; /* procedures */
	T0* volatile a20; /* query_calls */
	T0* volatile a21; /* procedure_calls */
	T1 volatile a22; /* has_static */
	T0* volatile a23; /* open_operand_type_sets */
	T0* volatile a24; /* result_type_set */
	T6 volatile a25; /* hash_code */
	T0* volatile a26; /* queries_by_seed */
	T0* volatile a27; /* procedures_by_seed */
	T1 volatile a28; /* has_reference_attributes */
	T0* volatile a29; /* equality_expressions */
	T0* volatile a30; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S1061 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* static_type */
	T6 volatile a2; /* count */
	T1 volatile a3; /* is_never_void */
	T0* volatile a4; /* dynamic_types */
	T0* volatile a5; /* targets */
	T1 volatile a6; /* is_dynamic_types_readonly */
};

/* Struct for type KL_PLATFORM */
struct S1062 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type UT_CONFIG_PARSER */
struct S1063 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_error */
	T0* volatile a2; /* config_values */
	T0* volatile a3; /* error_handler */
	T0* volatile a4; /* defined_values */
	T0* volatile a5; /* include_stack */
	T0* volatile a6; /* line_nb_stack */
	T0* volatile a7; /* last_string_value */
	T6 volatile a8; /* line_nb */
	T0* volatile a9; /* yyss */
	T0* volatile a10; /* input_buffer */
	T6 volatile a11; /* yy_end */
	T6 volatile a12; /* yy_position */
	T6 volatile a13; /* yy_line */
	T6 volatile a14; /* yy_column */
	T6 volatile a15; /* yy_parsing_status */
	T6 volatile a16; /* yy_suspended_yystacksize */
	T6 volatile a17; /* yy_suspended_yystate */
	T6 volatile a18; /* yy_suspended_yyn */
	T6 volatile a19; /* yy_suspended_yychar1 */
	T6 volatile a20; /* yy_suspended_index */
	T6 volatile a21; /* yy_suspended_yyss_top */
	T6 volatile a22; /* yy_suspended_yy_goto */
	T0* volatile a23; /* yyr1 */
	T6 volatile a24; /* yyssp */
	T0* volatile a25; /* yypgoto */
	T0* volatile a26; /* yycheck */
	T0* volatile a27; /* yytable */
	T0* volatile a28; /* yydefgoto */
	T6 volatile a29; /* error_count */
	T1 volatile a30; /* yy_lookahead_needed */
	T6 volatile a31; /* yyerrstatus */
	T0* volatile a32; /* yypact */
	T6 volatile a33; /* last_token */
	T0* volatile a34; /* yytranslate */
	T0* volatile a35; /* yydefact */
	T0* volatile a36; /* yy_pushed_start_conditions */
	T0* volatile a37; /* yyspecial_routines1 */
	T6 volatile a38; /* yyvsc1 */
	T0* volatile a39; /* yyvs1 */
	T0* volatile a40; /* yyspecial_routines2 */
	T6 volatile a41; /* yyvsc2 */
	T0* volatile a42; /* yyvs2 */
	T0* volatile a43; /* yyspecial_routines3 */
	T6 volatile a44; /* yyvsc3 */
	T0* volatile a45; /* yyvs3 */
	T0* volatile a46; /* yytypes1 */
	T0* volatile a47; /* yytypes2 */
	T6 volatile a48; /* yy_start */
	T6 volatile a49; /* yyvsp1 */
	T6 volatile a50; /* yyvsp2 */
	T6 volatile a51; /* yyvsp3 */
	T1 volatile a52; /* yy_more_flag */
	T6 volatile a53; /* yy_more_len */
	T6 volatile a54; /* line */
	T6 volatile a55; /* column */
	T6 volatile a56; /* position */
	T6 volatile a57; /* yy_start_state */
	T0* volatile a58; /* yy_state_stack */
	T6 volatile a59; /* yy_state_count */
	T0* volatile a60; /* yy_content_area */
	T0* volatile a61; /* yy_unicode_content_area */
	T0* volatile a62; /* yy_accept */
	T6 volatile a63; /* yy_last_accepting_state */
	T6 volatile a64; /* yy_last_accepting_cpos */
	T0* volatile a65; /* yy_content */
	T0* volatile a66; /* yy_ec */
	T0* volatile a67; /* yy_chk */
	T0* volatile a68; /* yy_base */
	T0* volatile a69; /* yy_def */
	T0* volatile a70; /* yy_meta */
	T0* volatile a71; /* yy_nxt */
	T6 volatile a72; /* yy_lp */
	T0* volatile a73; /* yy_acclist */
	T6 volatile a74; /* yy_looking_for_trail_begin */
	T6 volatile a75; /* yy_full_match */
	T6 volatile a76; /* yy_full_state */
	T6 volatile a77; /* yy_full_lp */
	T1 volatile a78; /* yy_rejected */
	T0* volatile a79; /* last_detachable_any_value */
	T6 volatile a80; /* if_level */
	T6 volatile a81; /* ignored_level */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S1064 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type CELL [INTEGER_32] */
struct S1067 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* item */
};

/* Struct for type KL_PATHNAME */
struct S1069 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* drive */
	T0* volatile a3; /* hostname */
	T0* volatile a4; /* sharename */
	T1 volatile a5; /* is_relative */
	T0* volatile a6; /* components */
};

/* Struct for type KL_ANY_ROUTINES */
struct S1070 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_WINDOWS_INPUT_FILE */
struct S1071 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_string */
	T6 volatile a2; /* mode */
	T0* volatile a3; /* name */
	T0* volatile a4; /* character_buffer */
	T1 volatile a5; /* end_of_file */
	T2 volatile a6; /* last_character */
	T14 volatile a7; /* file_pointer */
	T1 volatile a8; /* descriptor_available */
	T0* volatile a9; /* internal_name */
	T0* volatile a10; /* internal_detachable_name_pointer */
};

/* Struct for type KL_UNIX_INPUT_FILE */
struct S1072 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_string */
	T6 volatile a2; /* mode */
	T0* volatile a3; /* name */
	T0* volatile a4; /* character_buffer */
	T1 volatile a5; /* end_of_file */
	T2 volatile a6; /* last_character */
	T14 volatile a7; /* file_pointer */
	T1 volatile a8; /* descriptor_available */
	T0* volatile a9; /* internal_name */
	T0* volatile a10; /* internal_detachable_name_pointer */
};

/* Struct for type ARRAY [IMMUTABLE_STRING_32] */
struct S1073 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
	T1 volatile a4; /* object_comparison */
};

/* Struct for type SPECIAL [IMMUTABLE_STRING_32] */
struct S1074 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S1075 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T8 volatile z2[]; /* item */
};

/* Struct for type UC_UTF8_STRING */
struct S1078 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* area */
	T6 volatile a3; /* byte_count */
	T6 volatile a4; /* internal_hash_code */
	T6 volatile a5; /* last_byte_index_input */
	T6 volatile a6; /* last_byte_index_result */
	T6 volatile a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S1079 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
struct S1080 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1081 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_MASTER_CLASS] */
struct S1082 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
struct S1085 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S1086 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S1087 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S1088 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S1090 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S1091 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_CLIENT_ITEM] */
struct S1092 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
struct S1093 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S1094 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S1096 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S1097 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* left_brace */
	T0* volatile a2; /* right_brace */
	T6 volatile a3; /* count */
	T0* volatile a4; /* storage */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
struct S1098 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
struct S1100 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_UNIVERSE] */
struct S1101 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
struct S1102 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* equality_tester */
	T0* volatile a6; /* internal_cursor */
};

/* Struct for type TUPLE [ET_MASTER_CLASS] */
struct S1103 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
struct S1104 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S1105 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S1107 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S1108 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S1109 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S1110 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S1111 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable STRING_8] */
struct S1112 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable STRING_8] */
struct S1113 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_LINKABLE [STRING_8] */
struct S1114 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type DS_LINKABLE [BOOLEAN] */
struct S1115 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S1116 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T1 volatile a2; /* before */
};

/* Struct for type DS_LINKABLE [INTEGER_32] */
struct S1117 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S1118 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T1 volatile a2; /* before */
};

/* Struct for type YY_FILE_BUFFER */
struct S1120 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T0* volatile a2; /* content */
	T1 volatile a3; /* end_of_file */
	T0* volatile a4; /* file */
	T6 volatile a5; /* count */
	T6 volatile a6; /* index */
	T6 volatile a7; /* line */
	T6 volatile a8; /* column */
	T6 volatile a9; /* position */
	T1 volatile a10; /* beginning_of_line */
	T1 volatile a11; /* filled */
	T1 volatile a12; /* interactive */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S1121 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* sorted_items */
	T0* volatile a2; /* cycle */
	T0* volatile a3; /* indexes */
	T0* volatile a4; /* counts */
	T0* volatile a5; /* successors */
	T0* volatile a6; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
struct S1122 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* internal_cursor */
	T6 volatile a3; /* found_position */
	T0* volatile a4; /* item_storage */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T6 volatile a8; /* capacity */
	T0* volatile a9; /* equality_tester */
	T0* volatile a10; /* key_equality_tester */
	T0* volatile a11; /* key_storage */
	T0* volatile a12; /* clashes */
	T6 volatile a13; /* modulus */
	T0* volatile a14; /* slots */
	T6 volatile a15; /* slots_position */
	T6 volatile a16; /* clashes_previous_position */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1123 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* current_class */
	T0* volatile a3; /* system_processor */
	T0* volatile a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1124 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* all_base_types */
	T0* volatile a3; /* base_types */
	T0* volatile a4; /* formal_dependencies */
	T0* volatile a5; /* base_type_dependencies */
	T0* volatile a6; /* recursive_formal_constraints */
	T0* volatile a7; /* recursive_formal_constraints_to_be_processed */
	T0* volatile a8; /* current_class */
	T0* volatile a9; /* system_processor */
	T0* volatile a10; /* current_formal */
	T0* volatile a11; /* current_type_constraint */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1125 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* internal_cursor */
	T6 volatile a3; /* position */
	T6 volatile a4; /* found_position */
	T0* volatile a5; /* item_storage */
	T0* volatile a6; /* key_equality_tester */
	T0* volatile a7; /* internal_keys */
	T6 volatile a8; /* last_position */
	T6 volatile a9; /* free_slot */
	T6 volatile a10; /* modulus */
	T6 volatile a11; /* slots_position */
	T6 volatile a12; /* clashes_previous_position */
	T0* volatile a13; /* equality_tester */
	T0* volatile a14; /* key_storage */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T6 volatile a17; /* capacity */
	T0* volatile a18; /* special_item_routines */
	T0* volatile a19; /* special_key_routines */
	T0* volatile a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1126 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1128 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_storage */
	T0* volatile a4; /* key_equality_tester */
	T0* volatile a5; /* internal_keys */
	T6 volatile a6; /* position */
	T6 volatile a7; /* last_position */
	T6 volatile a8; /* capacity */
	T6 volatile a9; /* count */
	T6 volatile a10; /* free_slot */
	T0* volatile a11; /* equality_tester */
	T6 volatile a12; /* modulus */
	T6 volatile a13; /* slots_position */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* internal_cursor */
	T0* volatile a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1129 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
struct S1131 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
struct S1132 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* equality_tester */
	T0* volatile a2; /* key_equality_tester */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T0* volatile a8; /* special_item_routines */
	T0* volatile a9; /* item_storage */
	T0* volatile a10; /* special_key_routines */
	T0* volatile a11; /* key_storage */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* found_position */
	T0* volatile a15; /* internal_cursor */
	T6 volatile a16; /* count */
	T0* volatile a17; /* internal_keys */
	T6 volatile a18; /* slots_position */
	T6 volatile a19; /* clashes_previous_position */
	T0* volatile a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1133 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* rename_table */
	T0* volatile a3; /* export_table */
	T0* volatile a4; /* undefine_table */
	T0* volatile a5; /* redefine_table */
	T0* volatile a6; /* select_table */
	T0* volatile a7; /* replicable_features */
	T0* volatile a8; /* current_class */
	T0* volatile a9; /* system_processor */
	T0* volatile a10; /* free_parent_feature */
	T0* volatile a11; /* parent_feature_list */
	T0* volatile a12; /* free_inherited_feature */
	T0* volatile a13; /* inherited_feature_list */
	T0* volatile a14; /* free_redeclared_feature */
	T0* volatile a15; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1134 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* dotnet_features */
	T0* volatile a3; /* other_dotnet_features */
	T0* volatile a4; /* current_class */
	T0* volatile a5; /* system_processor */
	T0* volatile a6; /* free_parent_feature */
	T0* volatile a7; /* parent_feature_list */
	T0* volatile a8; /* free_inherited_feature */
	T0* volatile a9; /* inherited_feature_list */
	T0* volatile a10; /* free_redeclared_feature */
	T0* volatile a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1135 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* current_class */
	T0* volatile a3; /* system_processor */
	T0* volatile a4; /* current_feature */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1136 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* constraint_context */
	T0* volatile a2; /* current_class */
	T0* volatile a3; /* system_processor */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1137 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* anchored_type_sorter */
	T0* volatile a3; /* current_class */
	T0* volatile a4; /* system_processor */
	T0* volatile a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1138 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* parent_context */
	T0* volatile a3; /* current_class */
	T0* volatile a4; /* system_processor */
	T6 volatile a5; /* processing_mode */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1139 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* constraint_context */
	T0* volatile a3; /* current_class */
	T0* volatile a4; /* system_processor */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1140 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* constraint_context */
	T0* volatile a3; /* current_class */
	T0* volatile a4; /* system_processor */
};

/* Struct for type ET_BUILTIN_FEATURE_CHECKER */
struct S1141 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* builtin_features */
	T0* volatile a3; /* current_class */
	T0* volatile a4; /* system_processor */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1142 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* current_feature */
	T0* volatile a3; /* current_class */
	T0* volatile a4; /* system_processor */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
struct S1143 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* internal_cursor */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* position */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* capacity */
	T6 volatile a7; /* slots_position */
	T6 volatile a8; /* free_slot */
	T0* volatile a9; /* equality_tester */
	T0* volatile a10; /* key_equality_tester */
	T6 volatile a11; /* found_position */
	T6 volatile a12; /* modulus */
	T6 volatile a13; /* clashes_previous_position */
	T0* volatile a14; /* special_item_routines */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_key_routines */
	T0* volatile a18; /* key_storage */
	T0* volatile a19; /* internal_keys */
	T0* volatile a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S1144 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T6 volatile a2; /* last_position */
	T0* volatile a3; /* clashes */
	T0* volatile a4; /* item_storage */
	T6 volatile a5; /* capacity */
	T6 volatile a6; /* modulus */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* position */
	T0* volatile a9; /* special_item_routines */
	T0* volatile a10; /* slots */
	T6 volatile a11; /* found_position */
	T0* volatile a12; /* internal_cursor */
	T6 volatile a13; /* slots_position */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* equality_tester */
	T0* volatile a16; /* hash_function */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1145 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* current_class_impl */
	T0* volatile a3; /* current_class */
	T0* volatile a4; /* adapted_base_class_checker */
	T0* volatile a5; /* adapted_base_classes */
	T0* volatile a6; /* target_context */
	T0* volatile a7; /* other_context */
	T0* volatile a8; /* classes_to_be_processed */
	T0* volatile a9; /* system_processor */
	T1 volatile a10; /* in_qualified_anchored_type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1146 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* constraint_context */
	T0* volatile a2; /* current_class */
	T0* volatile a3; /* system_processor */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1147 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* found_position */
	T6 volatile a3; /* position */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
	T0* volatile a6; /* item_storage */
	T0* volatile a7; /* key_equality_tester */
	T0* volatile a8; /* internal_keys */
	T6 volatile a9; /* last_position */
	T6 volatile a10; /* free_slot */
	T6 volatile a11; /* modulus */
	T6 volatile a12; /* slots_position */
	T6 volatile a13; /* clashes_previous_position */
	T0* volatile a14; /* equality_tester */
	T0* volatile a15; /* key_storage */
	T0* volatile a16; /* clashes */
	T0* volatile a17; /* slots */
	T0* volatile a18; /* special_item_routines */
	T0* volatile a19; /* special_key_routines */
	T0* volatile a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
struct S1148 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* position */
	T6 volatile a3; /* found_position */
	T0* volatile a4; /* item_storage */
	T0* volatile a5; /* key_storage */
	T0* volatile a6; /* key_equality_tester */
	T0* volatile a7; /* internal_keys */
	T6 volatile a8; /* count */
	T6 volatile a9; /* last_position */
	T6 volatile a10; /* free_slot */
	T6 volatile a11; /* modulus */
	T6 volatile a12; /* slots_position */
	T6 volatile a13; /* clashes_previous_position */
	T0* volatile a14; /* equality_tester */
	T0* volatile a15; /* internal_cursor */
	T0* volatile a16; /* clashes */
	T0* volatile a17; /* slots */
	T0* volatile a18; /* special_item_routines */
	T0* volatile a19; /* special_key_routines */
	T0* volatile a20; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1149 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* current_class */
	T0* volatile a3; /* system_processor */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S1150 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T6 volatile a8; /* count */
	T0* volatile a9; /* special_item_routines */
	T0* volatile a10; /* clashes */
	T0* volatile a11; /* slots */
	T6 volatile a12; /* found_position */
	T6 volatile a13; /* slots_position */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* hash_function */
	T0* volatile a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S1151 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T6 volatile a8; /* count */
	T0* volatile a9; /* special_item_routines */
	T0* volatile a10; /* clashes */
	T0* volatile a11; /* slots */
	T6 volatile a12; /* found_position */
	T6 volatile a13; /* slots_position */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* hash_function */
	T0* volatile a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S1152 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* supplier_classes */
	T0* volatile a2; /* current_class */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S1153 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T6 volatile a2; /* position */
	T0* volatile a3; /* container */
};

/* Struct for type YY_UNICODE_BUFFER */
struct S1155 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* content */
	T6 volatile a2; /* index */
	T6 volatile a3; /* line */
	T6 volatile a4; /* column */
	T6 volatile a5; /* position */
	T6 volatile a6; /* count */
	T1 volatile a7; /* filled */
	T1 volatile a8; /* beginning_of_line */
	T6 volatile a9; /* capacity */
};

/* Struct for type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1156 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1157 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_OBJECT_TEST_LIST] */
struct S1158 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
struct S1159 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
struct S1160 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
struct S1161 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ITERATION_COMPONENT_LIST] */
struct S1162 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
struct S1163 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1164 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1165 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1166 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1167 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1168 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1169 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1170 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T6 volatile a2; /* position */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S1171 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S1172 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S1173 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S1174 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S1175 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S1176 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1177 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
struct S1178 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_NAMED_CLASS] */
struct S1179 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
struct S1180 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S1182 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S1184 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S1186 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S1187 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S1189 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S1190 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_NAMED_OBJECT_TEST] */
struct S1191 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
struct S1192 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ITERATION_COMPONENT] */
struct S1193 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
struct S1194 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
struct S1195 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
struct S1196 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S1197 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S1198 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
struct S1199 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* position */
	T0* volatile a4; /* key_equality_tester */
	T0* volatile a5; /* internal_keys */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* capacity */
	T6 volatile a8; /* slots_position */
	T6 volatile a9; /* count */
	T0* volatile a10; /* equality_tester */
	T6 volatile a11; /* modulus */
	T6 volatile a12; /* clashes_previous_position */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* clashes */
	T0* volatile a15; /* slots */
	T0* volatile a16; /* special_key_routines */
	T0* volatile a17; /* key_storage */
	T6 volatile a18; /* free_slot */
	T0* volatile a19; /* internal_cursor */
	T0* volatile a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
struct S1200 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_LIBRARY] */
struct S1201 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
struct S1204 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
struct S1205 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S1208 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
struct S1209 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S1210 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* last_token */
	T0* volatile a2; /* last_value */
	T0* volatile a3; /* input_name */
	T6 volatile a4; /* position */
	T6 volatile a5; /* column */
	T6 volatile a6; /* line */
	T0* volatile a7; /* input_filter */
	T6 volatile a8; /* yy_start_state */
	T0* volatile a9; /* character_entity */
	T0* volatile a10; /* input_stream */
	T0* volatile a11; /* input_resolver */
	T1 volatile a12; /* yy_more_flag */
	T6 volatile a13; /* yy_more_len */
	T6 volatile a14; /* yy_end */
	T6 volatile a15; /* yy_start */
	T6 volatile a16; /* yy_line */
	T6 volatile a17; /* yy_column */
	T6 volatile a18; /* yy_position */
	T0* volatile a19; /* yy_state_stack */
	T6 volatile a20; /* yy_state_count */
	T0* volatile a21; /* yy_content_area */
	T0* volatile a22; /* yy_unicode_content_area */
	T0* volatile a23; /* yy_accept */
	T6 volatile a24; /* yy_last_accepting_state */
	T6 volatile a25; /* yy_last_accepting_cpos */
	T0* volatile a26; /* yy_content */
	T0* volatile a27; /* yy_ec */
	T0* volatile a28; /* yy_chk */
	T0* volatile a29; /* yy_base */
	T0* volatile a30; /* yy_def */
	T0* volatile a31; /* yy_meta */
	T0* volatile a32; /* yy_nxt */
	T6 volatile a33; /* yy_lp */
	T0* volatile a34; /* yy_acclist */
	T6 volatile a35; /* yy_looking_for_trail_begin */
	T6 volatile a36; /* yy_full_match */
	T6 volatile a37; /* yy_full_state */
	T6 volatile a38; /* yy_full_lp */
	T0* volatile a39; /* input_buffer */
	T1 volatile a40; /* yy_rejected */
	T0* volatile a41; /* yy_pushed_start_conditions */
	T0* volatile a42; /* last_string_value */
	T0* volatile a43; /* last_error */
	T6 volatile a44; /* pushed_start_condition_count */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S1211 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* row */
	T6 volatile a2; /* column */
	T0* volatile a3; /* source_name */
	T6 volatile a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S1213 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* first_cell */
	T0* volatile a2; /* last_cell */
	T6 volatile a3; /* count */
	T0* volatile a4; /* internal_cursor */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S1214 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* first_cell */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S1215 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1216 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* count */
	T6 volatile a4; /* last_position */
	T6 volatile a5; /* free_slot */
	T6 volatile a6; /* capacity */
	T0* volatile a7; /* key_equality_tester */
	T0* volatile a8; /* internal_keys */
	T6 volatile a9; /* modulus */
	T6 volatile a10; /* slots_position */
	T6 volatile a11; /* clashes_previous_position */
	T0* volatile a12; /* internal_cursor */
	T6 volatile a13; /* found_position */
	T0* volatile a14; /* key_storage */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* equality_tester */
	T0* volatile a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S1218 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S1220 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S1221 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S1222 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* use_namespaces */
	T6 volatile a2; /* count */
	T0* volatile a3; /* first */
	T0* volatile a4; /* second */
	T0* volatile a5; /* tail */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S1223 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S1224 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S1225 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* equality_tester */
	T6 volatile a3; /* count */
	T6 volatile a4; /* capacity */
	T6 volatile a5; /* free_slot */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* modulus */
	T6 volatile a8; /* slots_position */
	T6 volatile a9; /* clashes_previous_position */
	T6 volatile a10; /* found_position */
	T0* volatile a11; /* clashes */
	T0* volatile a12; /* slots */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* item_storage */
	T0* volatile a15; /* internal_cursor */
	T0* volatile a16; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S1226 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S1227 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S1228 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* system_id */
	T0* volatile a2; /* public_id */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S1229 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S1230 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S1231 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* items */
	T2 volatile a2; /* repetition */
	T0* volatile a3; /* name */
	T2 volatile a4; /* type */
	T1 volatile a5; /* is_character_data_allowed */
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S1232 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S1233 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1234 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_cell */
	T6 volatile a2; /* count */
	T0* volatile a3; /* first_cell */
	T0* volatile a4; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S1235 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1236 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S1237 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* default_value */
	T2 volatile a3; /* type */
	T1 volatile a4; /* is_list_type */
	T0* volatile a5; /* enumeration_list */
	T2 volatile a6; /* value */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1238 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S1239 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S1240 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_cell */
	T6 volatile a2; /* count */
	T0* volatile a3; /* first_cell */
	T0* volatile a4; /* equality_tester */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S1241 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S1242 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S1243 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S1244 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* encoding */
	T0* volatile a2; /* version */
	T1 volatile a3; /* stand_alone */
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S1245 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S1248 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* literal_name */
	T0* volatile a2; /* value */
	T0* volatile a3; /* resolver */
	T0* volatile a4; /* external_id */
	T0* volatile a5; /* character_entity */
	T0* volatile a6; /* yy_pushed_start_conditions */
	T0* volatile a7; /* input_buffer */
	T1 volatile a8; /* in_use */
	T0* volatile a9; /* input_name */
	T0* volatile a10; /* last_value */
	T0* volatile a11; /* last_string_value */
	T0* volatile a12; /* last_error */
	T1 volatile a13; /* yy_rejected */
	T6 volatile a14; /* yy_state_count */
	T6 volatile a15; /* yy_full_match */
	T6 volatile a16; /* yy_lp */
	T6 volatile a17; /* yy_looking_for_trail_begin */
	T6 volatile a18; /* yy_full_lp */
	T6 volatile a19; /* yy_full_state */
	T6 volatile a20; /* pushed_start_condition_count */
	T6 volatile a21; /* yy_start_state */
	T6 volatile a22; /* yy_line */
	T6 volatile a23; /* yy_column */
	T6 volatile a24; /* yy_position */
	T6 volatile a25; /* yy_start */
	T6 volatile a26; /* yy_end */
	T6 volatile a27; /* line */
	T6 volatile a28; /* column */
	T6 volatile a29; /* position */
	T1 volatile a30; /* yy_more_flag */
	T6 volatile a31; /* yy_more_len */
	T6 volatile a32; /* yy_last_accepting_state */
	T6 volatile a33; /* yy_last_accepting_cpos */
	T0* volatile a34; /* yy_state_stack */
	T0* volatile a35; /* yy_nxt */
	T0* volatile a36; /* yy_chk */
	T0* volatile a37; /* yy_base */
	T0* volatile a38; /* yy_def */
	T0* volatile a39; /* yy_ec */
	T0* volatile a40; /* yy_meta */
	T0* volatile a41; /* yy_accept */
	T0* volatile a42; /* yy_content */
	T0* volatile a43; /* yy_content_area */
	T0* volatile a44; /* yy_unicode_content_area */
	T6 volatile a45; /* last_token */
	T0* volatile a46; /* input_filter */
	T0* volatile a47; /* input_stream */
	T0* volatile a48; /* input_resolver */
	T0* volatile a49; /* yy_acclist */
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S1249 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* last_token */
	T0* volatile a2; /* last_value */
	T0* volatile a3; /* input_name */
	T6 volatile a4; /* position */
	T6 volatile a5; /* column */
	T6 volatile a6; /* line */
	T0* volatile a7; /* input_filter */
	T6 volatile a8; /* yy_start_state */
	T0* volatile a9; /* character_entity */
	T0* volatile a10; /* input_stream */
	T0* volatile a11; /* input_resolver */
	T1 volatile a12; /* decl_start_sent */
	T1 volatile a13; /* decl_end_sent */
	T1 volatile a14; /* yy_more_flag */
	T6 volatile a15; /* yy_more_len */
	T6 volatile a16; /* yy_end */
	T6 volatile a17; /* yy_start */
	T6 volatile a18; /* yy_line */
	T6 volatile a19; /* yy_column */
	T6 volatile a20; /* yy_position */
	T0* volatile a21; /* yy_state_stack */
	T6 volatile a22; /* yy_state_count */
	T0* volatile a23; /* yy_content_area */
	T0* volatile a24; /* yy_unicode_content_area */
	T0* volatile a25; /* yy_accept */
	T6 volatile a26; /* yy_last_accepting_state */
	T6 volatile a27; /* yy_last_accepting_cpos */
	T0* volatile a28; /* yy_content */
	T0* volatile a29; /* yy_ec */
	T0* volatile a30; /* yy_chk */
	T0* volatile a31; /* yy_base */
	T0* volatile a32; /* yy_def */
	T0* volatile a33; /* yy_meta */
	T0* volatile a34; /* yy_nxt */
	T6 volatile a35; /* yy_lp */
	T0* volatile a36; /* yy_acclist */
	T6 volatile a37; /* yy_looking_for_trail_begin */
	T6 volatile a38; /* yy_full_match */
	T6 volatile a39; /* yy_full_state */
	T6 volatile a40; /* yy_full_lp */
	T0* volatile a41; /* input_buffer */
	T1 volatile a42; /* yy_rejected */
	T0* volatile a43; /* yy_pushed_start_conditions */
	T0* volatile a44; /* last_string_value */
	T0* volatile a45; /* last_error */
	T6 volatile a46; /* pushed_start_condition_count */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S1251 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* resolver */
	T0* volatile a2; /* external_id */
	T0* volatile a3; /* literal_name */
	T0* volatile a4; /* value */
	T0* volatile a5; /* character_entity */
	T0* volatile a6; /* yy_pushed_start_conditions */
	T0* volatile a7; /* input_buffer */
	T1 volatile a8; /* in_use */
	T0* volatile a9; /* input_name */
	T0* volatile a10; /* last_value */
	T0* volatile a11; /* last_string_value */
	T0* volatile a12; /* last_error */
	T1 volatile a13; /* yy_rejected */
	T6 volatile a14; /* yy_state_count */
	T6 volatile a15; /* yy_full_match */
	T6 volatile a16; /* yy_lp */
	T6 volatile a17; /* yy_looking_for_trail_begin */
	T6 volatile a18; /* yy_full_lp */
	T6 volatile a19; /* yy_full_state */
	T6 volatile a20; /* pushed_start_condition_count */
	T6 volatile a21; /* yy_start_state */
	T6 volatile a22; /* yy_line */
	T6 volatile a23; /* yy_column */
	T6 volatile a24; /* yy_position */
	T6 volatile a25; /* yy_start */
	T6 volatile a26; /* yy_end */
	T6 volatile a27; /* line */
	T6 volatile a28; /* column */
	T6 volatile a29; /* position */
	T1 volatile a30; /* yy_more_flag */
	T6 volatile a31; /* yy_more_len */
	T6 volatile a32; /* yy_last_accepting_state */
	T6 volatile a33; /* yy_last_accepting_cpos */
	T0* volatile a34; /* yy_state_stack */
	T1 volatile a35; /* pre_sent */
	T1 volatile a36; /* post_sent */
	T0* volatile a37; /* yy_nxt */
	T0* volatile a38; /* yy_chk */
	T0* volatile a39; /* yy_base */
	T0* volatile a40; /* yy_def */
	T0* volatile a41; /* yy_ec */
	T0* volatile a42; /* yy_meta */
	T0* volatile a43; /* yy_accept */
	T0* volatile a44; /* yy_content */
	T0* volatile a45; /* yy_content_area */
	T0* volatile a46; /* yy_unicode_content_area */
	T6 volatile a47; /* last_token */
	T0* volatile a48; /* input_filter */
	T0* volatile a49; /* input_stream */
	T0* volatile a50; /* input_resolver */
	T0* volatile a51; /* yy_acclist */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S1252 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next */
	T0* volatile a2; /* element_local_part */
	T0* volatile a3; /* element_prefix */
	T0* volatile a4; /* context */
	T1 volatile a5; /* forward_xmlns */
	T0* volatile a6; /* attributes_prefix */
	T0* volatile a7; /* attributes_local_part */
	T0* volatile a8; /* attributes_value */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S1253 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S1254 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S1255 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* equality_tester */
	T6 volatile a2; /* capacity */
	T6 volatile a3; /* modulus */
	T6 volatile a4; /* last_position */
	T6 volatile a5; /* free_slot */
	T6 volatile a6; /* position */
	T0* volatile a7; /* special_item_routines */
	T0* volatile a8; /* item_storage */
	T0* volatile a9; /* clashes */
	T0* volatile a10; /* slots */
	T6 volatile a11; /* found_position */
	T0* volatile a12; /* internal_cursor */
	T6 volatile a13; /* slots_position */
	T6 volatile a14; /* count */
	T6 volatile a15; /* clashes_previous_position */
	T0* volatile a16; /* hash_function */
};

/* Struct for type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
struct S1256 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* last_cell */
	T0* volatile a3; /* first_cell */
	T0* volatile a4; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ECF_SYSTEM_CONFIG] */
struct S1259 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
struct S1261 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
struct S1262 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
struct S1263 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_TARGET] */
struct S1264 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
struct S1266 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S1268 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* table */
	T0* volatile a2; /* equality_tester */
	T0* volatile a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
struct S1269 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable RX_REGULAR_EXPRESSION] */
struct S1270 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S1271 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* dotnet_assemblies */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S1275 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S1276 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
struct S1277 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
struct S1278 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_CLUSTER] */
struct S1279 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
struct S1280 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
struct S1281 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* modulus */
	T0* volatile a2; /* key_equality_tester */
	T0* volatile a3; /* item_storage */
	T0* volatile a4; /* slots */
	T0* volatile a5; /* hash_function */
	T0* volatile a6; /* key_storage */
	T0* volatile a7; /* clashes */
	T6 volatile a8; /* position */
	T6 volatile a9; /* last_position */
	T6 volatile a10; /* capacity */
	T6 volatile a11; /* slots_position */
	T6 volatile a12; /* count */
	T0* volatile a13; /* equality_tester */
	T6 volatile a14; /* found_position */
	T6 volatile a15; /* clashes_previous_position */
	T0* volatile a16; /* special_item_routines */
	T0* volatile a17; /* special_key_routines */
	T6 volatile a18; /* free_slot */
	T0* volatile a19; /* internal_cursor */
};

/* Struct for type ET_FEATURE_IDS */
struct S1282 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* feature_ids */
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S1283 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S1284 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
struct S1286 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
struct S1287 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* modulus */
	T0* volatile a2; /* key_equality_tester */
	T0* volatile a3; /* item_storage */
	T0* volatile a4; /* slots */
	T0* volatile a5; /* hash_function */
	T0* volatile a6; /* key_storage */
	T0* volatile a7; /* clashes */
	T6 volatile a8; /* position */
	T6 volatile a9; /* count */
	T6 volatile a10; /* capacity */
	T6 volatile a11; /* slots_position */
	T6 volatile a12; /* free_slot */
	T6 volatile a13; /* last_position */
	T0* volatile a14; /* equality_tester */
	T6 volatile a15; /* found_position */
	T6 volatile a16; /* clashes_previous_position */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
struct S1288 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* modulus */
	T0* volatile a2; /* key_equality_tester */
	T0* volatile a3; /* item_storage */
	T0* volatile a4; /* slots */
	T0* volatile a5; /* hash_function */
	T0* volatile a6; /* key_storage */
	T0* volatile a7; /* clashes */
	T0* volatile a8; /* equality_tester */
	T6 volatile a9; /* capacity */
	T6 volatile a10; /* last_position */
	T6 volatile a11; /* free_slot */
	T6 volatile a12; /* position */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* special_key_routines */
	T6 volatile a15; /* found_position */
	T0* volatile a16; /* internal_cursor */
	T6 volatile a17; /* count */
	T6 volatile a18; /* slots_position */
	T6 volatile a19; /* clashes_previous_position */
};

/* Struct for type ET_LIKE_N */
struct S1290 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type_mark */
	T0* volatile a2; /* like_keyword */
	T6 volatile a3; /* index */
	T0* volatile a4; /* previous */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S1291 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
struct S1292 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
struct S1293 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S1294 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S1295 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S1296 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S1297 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S1298 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
struct S1300 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S1301 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S1302 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S1303 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1304 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1305 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1306 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1307 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1308 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1309 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S1310 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S1311 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* equality_tester */
	T0* volatile a4; /* special_routines */
	T6 volatile a5; /* capacity */
	T0* volatile a6; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S1312 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S1313 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S1314 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
struct S1315 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
};

/* Struct for type SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S1316 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S1317 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S1318 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S1319 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S1320 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S1321 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
struct S1324 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* special_routines */
	T0* volatile a3; /* storage */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
struct S1325 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
struct S1327 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
struct S1329 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
struct S1330 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ATTACHMENT_SCOPE] */
struct S1332 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
struct S1333 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
struct S1334 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
struct S1335 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_ASSERTIONS] */
struct S1336 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
struct S1338 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
struct S1339 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_NOTE_TERM] */
struct S1340 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
struct S1341 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S1342 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S1343 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S1344 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S1345 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S1346 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
struct S1347 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_POSTCONDITIONS] */
struct S1348 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
struct S1349 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_INVARIANTS] */
struct S1350 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type SPECIAL [NATIVE_STRING] */
struct S1351 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type SPECIAL [NATURAL_32] */
struct S1352 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T10 volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [RX_CHARACTER_SET] */
struct S1353 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_32] */
struct S1354 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1355 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T11 volatile z2[]; /* item */
};

/* Struct for type DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
struct S1356 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T6 volatile a2; /* position */
	T0* volatile a3; /* internal_cursor */
	T6 volatile a4; /* found_position */
	T0* volatile a5; /* item_storage */
	T6 volatile a6; /* modulus */
	T0* volatile a7; /* key_equality_tester */
	T0* volatile a8; /* key_storage */
	T0* volatile a9; /* slots */
	T0* volatile a10; /* hash_function */
	T0* volatile a11; /* clashes */
	T0* volatile a12; /* internal_keys */
	T6 volatile a13; /* capacity */
	T6 volatile a14; /* free_slot */
	T6 volatile a15; /* last_position */
	T6 volatile a16; /* slots_position */
	T6 volatile a17; /* clashes_previous_position */
	T0* volatile a18; /* equality_tester */
	T0* volatile a19; /* special_item_routines */
	T0* volatile a20; /* special_key_routines */
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
struct S1357 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S1358 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S1359 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S1360 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_SET_CURSOR [NATURAL_32] */
struct S1363 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OLD_EXPRESSION] */
struct S1365 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_OLD_EXPRESSION] */
struct S1366 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OLD_EXPRESSION] */
struct S1367 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, ET_OLD_EXPRESSION] */
struct S1369 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S1370 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T6 volatile a2; /* position */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S1371 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S1372 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S1373 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
struct S1374 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
struct S1375 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_EQUALITY_EXPRESSION] */
struct S1376 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
struct S1377 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
struct S1378 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
struct S1379 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
struct S1380 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S1381 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S1382 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S1383 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S1384 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S1385 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S1386 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
struct S1387 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
struct S1388 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
struct S1389 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S1390 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S1391 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
struct S1392 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S1393 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S1394 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
struct S1395 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1396 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1397 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1398 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S1399 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S1400 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S1401 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_EQUALITY_TESTER [INTEGER_32] */
struct S1402 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
struct S1403 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1404 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_OBJECT_TEST] */
struct S1406 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
struct S1407 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, INTEGER_32] */
struct S1409 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S1410 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S1413 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S1414 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S1415 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S1416 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S1417 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_STANDALONE_CLOSURE] */
struct S1419 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type SPECIAL [ET_STANDALONE_CLOSURE] */
struct S1420 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STANDALONE_CLOSURE] */
struct S1421 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S1422 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S1423 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S1425 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
struct S1426 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S1427 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S1429 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S1430 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1432 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S1433 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S1434 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S1435 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S1436 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T6 volatile a2; /* position */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
struct S1437 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
struct S1438 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
struct S1439 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T6 volatile a2; /* position */
	T0* volatile a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S1440 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
struct S1441 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S1444 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [STRING_8]] */
struct S1448 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]] */
struct S1449 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]] */
struct S1450 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [TUPLE [STRING_8, detachable STRING_8]] */
struct S1451 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]] */
struct S1453 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
struct S1454 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1455 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T6 volatile a2; /* found_position */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* capacity */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* count */
	T6 volatile a9; /* slots_position */
	T6 volatile a10; /* clashes_previous_position */
	T0* volatile a11; /* key_equality_tester */
	T0* volatile a12; /* equality_tester */
	T0* volatile a13; /* slots */
	T0* volatile a14; /* clashes */
	T0* volatile a15; /* special_item_routines */
	T0* volatile a16; /* key_storage */
	T0* volatile a17; /* special_key_routines */
	T0* volatile a18; /* internal_cursor */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
struct S1456 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* storage */
	T0* volatile a2; /* special_routines */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S1457 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type THREAD_ATTRIBUTES */
struct S1459 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* shared */
	T14 volatile a2; /* internal_item */
	T0* volatile a3; /* managed_pointer */
};

/* Struct for type CELL [BOOLEAN] */
struct S1460 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* item */
};

/* Struct for type CHARACTER_PROPERTY */
struct S1462 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_SYSTEM_ERROR */
struct S1463 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* default_template */
	T0* volatile a2; /* parameters */
	T0* volatile a3; /* code */
	T0* volatile a4; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S1464 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* default_template */
	T0* volatile a2; /* parameters */
	T0* volatile a3; /* code */
	T0* volatile a4; /* etl_code */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S1465 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* default_template */
	T0* volatile a2; /* parameters */
	T0* volatile a3; /* code */
	T0* volatile a4; /* etl_code */
	T0* volatile a5; /* filename */
	T0* volatile a6; /* position */
	T1 volatile a7; /* ise_reported */
	T1 volatile a8; /* ise_fatal */
	T1 volatile a9; /* ge_reported */
	T1 volatile a10; /* ge_fatal */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S1466 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* ise_reported */
	T1 volatile a2; /* ge_reported */
	T0* volatile a3; /* default_template */
	T0* volatile a4; /* parameters */
	T0* volatile a5; /* current_class */
	T0* volatile a6; /* class_impl */
	T0* volatile a7; /* position */
	T0* volatile a8; /* code */
	T0* volatile a9; /* etl_code */
	T1 volatile a10; /* ise_fatal */
	T1 volatile a11; /* ge_fatal */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1467 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name_item */
	T0* volatile a2; /* declared_type */
	T6 volatile a3; /* index */
	T6 volatile a4; /* attached_index */
	T1 volatile a5; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1468 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name_item */
	T0* volatile a2; /* declared_type */
	T6 volatile a3; /* index */
	T6 volatile a4; /* attached_index */
	T1 volatile a5; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1469 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* declared_type */
	T0* volatile a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1471 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* expression */
	T0* volatile a2; /* keyword */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1474 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T6 volatile a2; /* capacity */
	T0* volatile a3; /* storage */
	T0* volatile a4; /* special_routines */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S1475 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S1476 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S1477 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1478 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type ET_ECF_NOTE_ELEMENT */
struct S1479 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* attributes */
	T0* volatile a3; /* elements */
	T0* volatile a4; /* content */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARIES */
struct S1480 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* libraries */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S1481 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_FILE_RULES */
struct S1482 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* file_rules */
};

/* Struct for type ET_ECF_NAMESPACES */
struct S1483 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* namespaces */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAGS */
struct S1484 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDES */
struct S1485 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARIES */
struct S1486 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAGS */
struct S1487 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_MAKES */
struct S1488 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECTS */
struct S1489 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCES */
struct S1490 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* external_values */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ACTION] */
struct S1491 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
struct S1492 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* options */
	T0* volatile a2; /* name_id */
	T0* volatile a3; /* filename_id */
	T0* volatile a4; /* universe */
	T0* volatile a5; /* target */
	T0* volatile a6; /* description */
	T0* volatile a7; /* eifgens_location */
	T0* volatile a8; /* classname_prefix */
	T1 volatile a9; /* is_read_only */
	T1 volatile a10; /* use_application_options */
	T0* volatile a11; /* class_options */
	T0* volatile a12; /* class_renamings */
	T0* volatile a13; /* visible_classes */
	T0* volatile a14; /* conditions */
	T0* volatile a15; /* name */
	T0* volatile a16; /* library */
};

/* Struct for type ET_ECF_VERSION */
struct S1494 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* internal_major */
	T6 volatile a2; /* internal_minor */
	T6 volatile a3; /* internal_release */
	T6 volatile a4; /* internal_build */
	T0* volatile a5; /* product */
	T0* volatile a6; /* company */
	T0* volatile a7; /* copyright */
};

/* Struct for type ET_ECF_NAMESPACE */
struct S1495 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* description */
	T0* volatile a3; /* classname_prefix */
	T0* volatile a4; /* class_renamings */
	T0* volatile a5; /* notes */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAG */
struct S1496 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* flag */
	T0* volatile a2; /* description */
	T0* volatile a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDE */
struct S1497 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* pathname */
	T0* volatile a2; /* description */
	T0* volatile a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARY */
struct S1498 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* pathname */
	T0* volatile a2; /* description */
	T0* volatile a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAG */
struct S1499 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* flag */
	T0* volatile a2; /* description */
	T0* volatile a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_MAKE */
struct S1500 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* pathname */
	T0* volatile a2; /* description */
	T0* volatile a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECT */
struct S1501 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* pathname */
	T0* volatile a2; /* description */
	T0* volatile a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCE */
struct S1502 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* pathname */
	T0* volatile a2; /* description */
	T0* volatile a3; /* conditions */
};

/* Struct for type ET_ECF_FILE_RULE */
struct S1503 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* exclude */
	T0* volatile a2; /* include */
	T0* volatile a3; /* exclude_regexp */
	T0* volatile a4; /* include_regexp */
	T0* volatile a5; /* conditions */
	T0* volatile a6; /* description */
};

/* Struct for type ET_ECF_ACTION */
struct S1504 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* command_name */
	T0* volatile a2; /* description */
	T1 volatile a3; /* must_succeed */
	T0* volatile a4; /* working_directory */
	T0* volatile a5; /* conditions */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
struct S1505 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* last_position */
	T6 volatile a4; /* position */
	T6 volatile a5; /* capacity */
	T6 volatile a6; /* slots_position */
	T6 volatile a7; /* count */
	T0* volatile a8; /* key_equality_tester */
	T0* volatile a9; /* internal_keys */
	T0* volatile a10; /* equality_tester */
	T6 volatile a11; /* modulus */
	T6 volatile a12; /* clashes_previous_position */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* clashes */
	T0* volatile a15; /* slots */
	T0* volatile a16; /* special_key_routines */
	T0* volatile a17; /* key_storage */
	T6 volatile a18; /* free_slot */
	T0* volatile a19; /* internal_cursor */
	T0* volatile a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
struct S1506 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_ECF_OPTIONS] */
struct S1507 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
struct S1508 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type ET_ECF_ROOT_CLASS */
struct S1509 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* class_name */
	T0* volatile a2; /* creation_procedure_name */
	T0* volatile a3; /* cluster_name */
};

/* Struct for type ET_ECF_ROOT_ALL_CLASSES */
struct S1510 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_ECF_ORED_CONDITIONS */
struct S1511 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* conditions */
};

/* Struct for type ET_ECF_ANDED_CONDITIONS */
struct S1512 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* conditions */
};

/* Struct for type ET_ECF_VISIBLE_CLASS */
struct S1513 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* class_name */
	T0* volatile a2; /* feature_name */
	T0* volatile a3; /* new_class_name */
	T0* volatile a4; /* new_feature_name */
};

/* Struct for type ET_ECF_BUILD_CONDITION */
struct S1515 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* value */
	T1 volatile a2; /* is_excluded */
};

/* Struct for type ET_ECF_CONCURRENCY_CONDITION */
struct S1516 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* value */
	T1 volatile a2; /* is_excluded */
};

/* Struct for type ET_ECF_VOID_SAFETY_CONDITION */
struct S1517 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* value */
	T1 volatile a2; /* is_excluded */
};

/* Struct for type ET_ECF_CUSTOM_CONDITION */
struct S1518 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T0* volatile a2; /* value */
	T0* volatile a3; /* match */
	T1 volatile a4; /* is_excluded */
};

/* Struct for type ET_ECF_DOTNET_CONDITION */
struct S1519 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* value */
};

/* Struct for type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S1520 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* value */
};

/* Struct for type ET_ECF_PLATFORM_CONDITION */
struct S1521 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* value */
	T1 volatile a2; /* is_excluded */
};

/* Struct for type ET_ECF_COMPILER_VERSION_CONDITION */
struct S1523 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* min_value */
	T0* volatile a2; /* max_value */
};

/* Struct for type ET_ECF_MSIL_CLR_VERSION_CONDITION */
struct S1524 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* min_value */
	T0* volatile a2; /* max_value */
};

/* Struct for type UT_COUNTER */
struct S1526 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* item */
};

/* Struct for type KL_AGENT_ROUTINES [ET_CLASS] */
struct S1527 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type TUPLE [UT_COUNTER] */
struct S1528 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
struct S1529 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
struct S1530 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
struct S1531 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
struct S1533 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* modulus */
	T6 volatile a3; /* last_position */
	T6 volatile a4; /* free_slot */
	T6 volatile a5; /* position */
	T6 volatile a6; /* slots_position */
	T6 volatile a7; /* count */
	T0* volatile a8; /* special_item_routines */
	T0* volatile a9; /* item_storage */
	T0* volatile a10; /* clashes */
	T0* volatile a11; /* slots */
	T6 volatile a12; /* found_position */
	T0* volatile a13; /* internal_cursor */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* hash_function */
	T0* volatile a16; /* equality_tester */
};

/* Struct for type PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S1534 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
struct S1535 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [ET_INTERNAL_UNIVERSE] */
struct S1536 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
struct S1537 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
struct S1538 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S1539 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [ET_SYSTEM_PROCESSOR] */
struct S1540 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [ET_CLUSTER] */
struct S1541 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_CLUSTER]] */
struct S1542 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM] */
struct S1543 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
struct S1544 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T6 volatile a2; /* capacity */
	T6 volatile a3; /* modulus */
	T6 volatile a4; /* last_position */
	T6 volatile a5; /* free_slot */
	T6 volatile a6; /* slots_position */
	T6 volatile a7; /* count */
	T6 volatile a8; /* clashes_previous_position */
	T0* volatile a9; /* special_item_routines */
	T0* volatile a10; /* item_storage */
	T0* volatile a11; /* clashes */
	T0* volatile a12; /* slots */
	T6 volatile a13; /* found_position */
	T0* volatile a14; /* internal_cursor */
	T0* volatile a15; /* equality_tester */
	T0* volatile a16; /* hash_function */
};

/* Struct for type TUPLE [ET_AST_PROCESSOR] */
struct S1545 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1546 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S1547 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S1548 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* class_type_checker */
	T0* volatile a2; /* current_class */
	T0* volatile a3; /* system_processor */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S1549 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* class_type_checker */
	T0* volatile a2; /* current_class */
	T0* volatile a3; /* system_processor */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S1550 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* qualified_anchored_type_checker */
	T0* volatile a2; /* class_type_checker */
	T0* volatile a3; /* current_class */
	T0* volatile a4; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S1551 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* current_class */
	T0* volatile a2; /* system_processor */
};

/* Struct for type TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
struct S1552 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [ET_FLATTENING_STATUS_CHECKER] */
struct S1553 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [ET_INTERFACE_STATUS_CHECKER] */
struct S1554 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S1555 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [BOOLEAN] */
struct S1556 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
struct S1559 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
struct S1563 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
struct S1564 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type ET_PARENTHESIS_EXPRESSION */
struct S1565 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
	T0* volatile a2; /* name */
	T0* volatile a3; /* arguments */
	T6 volatile a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_LIBRARY] */
struct S1568 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* modulus */
	T6 volatile a3; /* last_position */
	T6 volatile a4; /* free_slot */
	T6 volatile a5; /* position */
	T0* volatile a6; /* special_item_routines */
	T0* volatile a7; /* item_storage */
	T0* volatile a8; /* clashes */
	T0* volatile a9; /* slots */
	T6 volatile a10; /* found_position */
	T0* volatile a11; /* internal_cursor */
	T6 volatile a12; /* slots_position */
	T6 volatile a13; /* count */
	T6 volatile a14; /* clashes_previous_position */
	T0* volatile a15; /* hash_function */
	T0* volatile a16; /* equality_tester */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_LIBRARY]] */
struct S1569 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S1573 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S1574 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S1576 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S1577 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S1580 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* current_cluster */
	T0* volatile a2; /* pathname_buffer */
	T0* volatile a3; /* group_names */
	T0* volatile a4; /* group_pathnames */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1582 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next */
	T0* volatile a2; /* parent */
	T0* volatile a3; /* precursor_feature */
	T0* volatile a4; /* new_name */
	T0* volatile a5; /* undefine_name */
	T0* volatile a6; /* redefine_name */
	T0* volatile a7; /* select_name */
	T0* volatile a8; /* merged_feature */
	T1 volatile a9; /* has_other_deferred */
	T1 volatile a10; /* has_other_effective */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1583 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1584 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* comparator */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1585 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next */
	T0* volatile a2; /* parent_feature */
	T0* volatile a3; /* flattened_feature */
	T0* volatile a4; /* flattened_parent */
	T6 volatile a5; /* first_seed */
	T0* volatile a6; /* other_seeds */
	T1 volatile a7; /* is_selected */
	T0* volatile a8; /* replicated_features */
	T0* volatile a9; /* replicated_seeds */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1587 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next */
	T0* volatile a2; /* flattened_feature */
	T0* volatile a3; /* parent_feature */
	T6 volatile a4; /* first_seed */
	T0* volatile a5; /* other_seeds */
	T1 volatile a6; /* is_selected */
	T0* volatile a7; /* replicated_features */
	T0* volatile a8; /* replicated_seeds */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S1595 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* as_special */
	T0* volatile a2; /* area */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1597 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1598 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S1599 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S1600 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1601 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* agent_expression */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S1603 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S1604 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1605 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1607 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1608 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S1610 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ELSEIF_EXPRESSION] */
struct S1611 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
struct S1612 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S1613 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S1614 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S1615 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S1616 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S1617 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S1619 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1620 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S1621 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1622 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S1624 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1626 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S1627 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_NOTE_ITEM] */
struct S1629 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
struct S1630 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_NOTE_TERM_ITEM] */
struct S1631 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
struct S1632 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S1633 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S1634 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
struct S1636 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
struct S1637 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_WHEN_EXPRESSION] */
struct S1638 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
struct S1639 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S1640 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S1641 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type XM_LINKED_LIST [XM_ELEMENT_NODE] */
struct S1643 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* last_cell */
	T6 volatile a3; /* count */
	T0* volatile a4; /* first_cell */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S1645 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1647 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* after */
	T0* volatile a2; /* current_cell */
	T0* volatile a3; /* container */
	T1 volatile a4; /* before */
	T0* volatile a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1648 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T0* volatile a2; /* last_cell */
	T6 volatile a3; /* count */
	T0* volatile a4; /* first_cell */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S1649 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* first */
	T0* volatile a2; /* second */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S1650 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_string */
	T6 volatile a2; /* encoding */
	T0* volatile a3; /* utf_queue */
	T0* volatile a4; /* impl */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
struct S1651 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* after */
	T0* volatile a2; /* current_cell */
	T0* volatile a3; /* container */
	T1 volatile a4; /* before */
	T0* volatile a5; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET] */
struct S1652 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
struct S1653 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* container */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
struct S1654 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
struct S1656 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
struct S1657 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S1659 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S1662 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S1663 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1668 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* integer_overflow_state1 */
	T0* volatile a2; /* integer_overflow_state2 */
	T0* volatile a3; /* natural_overflow_state1 */
	T0* volatile a4; /* natural_overflow_state2 */
};

/* Struct for type CONSOLE */
struct S1669 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_string */
	T14 volatile a2; /* file_pointer */
	T0* volatile a3; /* last_string_32 */
	T6 volatile a4; /* mode */
	T0* volatile a5; /* internal_name */
	T0* volatile a6; /* internal_detachable_name_pointer */
	T2 volatile a7; /* last_character */
};

/* Struct for type C_DATE */
struct S1670 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* millisecond_now */
	T0* volatile a2; /* internal_item */
	T1 volatile a3; /* is_utc */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S1672 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
struct S1673 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_NOTE_ELEMENT] */
struct S1674 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
struct S1675 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1677 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type DS_ARRAYED_STACK [YY_BUFFER] */
struct S1678 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T6 volatile a2; /* capacity */
	T0* volatile a3; /* storage */
	T0* volatile a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1679 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1680 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type ARRAY [detachable STRING_8] */
struct S1681 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type SPECIAL [ET_ADAPTED_LIBRARY] */
struct S1683 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
struct S1684 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
struct S1685 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1686 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1687 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1688 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S1689 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S1690 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1691 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T6 volatile a2; /* found_position */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* count */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* modulus */
	T6 volatile a8; /* capacity */
	T6 volatile a9; /* slots_position */
	T6 volatile a10; /* clashes_previous_position */
	T0* volatile a11; /* key_equality_tester */
	T0* volatile a12; /* equality_tester */
	T0* volatile a13; /* internal_cursor */
	T0* volatile a14; /* key_storage */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S1692 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
struct S1694 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [NATURAL_32] */
struct S1695 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* storage */
	T0* volatile a2; /* special_routines */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type ET_BASE_TYPE_CONSTRAINT_LIST */
struct S1696 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* left_brace */
	T0* volatile a2; /* right_brace */
	T0* volatile a3; /* storage */
	T6 volatile a4; /* count */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1697 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1698 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S1701 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1702 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S1703 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1705 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
struct S1706 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_CLIENT_LIST] */
struct S1707 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
struct S1708 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1710 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT] */
struct S1711 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_CLIENT] */
struct S1712 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1713 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* found_position */
	T0* volatile a3; /* internal_cursor */
	T6 volatile a4; /* count */
	T0* volatile a5; /* item_storage */
	T6 volatile a6; /* modulus */
	T6 volatile a7; /* last_position */
	T6 volatile a8; /* free_slot */
	T6 volatile a9; /* position */
	T0* volatile a10; /* equality_tester */
	T0* volatile a11; /* special_item_routines */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* slots_position */
	T6 volatile a15; /* clashes_previous_position */
	T0* volatile a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1714 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T6 volatile a2; /* capacity */
	T6 volatile a3; /* found_position */
	T0* volatile a4; /* internal_cursor */
	T0* volatile a5; /* key_storage */
	T0* volatile a6; /* item_storage */
	T0* volatile a7; /* key_equality_tester */
	T0* volatile a8; /* internal_keys */
	T6 volatile a9; /* position */
	T6 volatile a10; /* last_position */
	T6 volatile a11; /* free_slot */
	T6 volatile a12; /* modulus */
	T0* volatile a13; /* equality_tester */
	T6 volatile a14; /* slots_position */
	T6 volatile a15; /* clashes_previous_position */
	T0* volatile a16; /* special_item_routines */
	T0* volatile a17; /* clashes */
	T0* volatile a18; /* slots */
	T0* volatile a19; /* special_key_routines */
	T0* volatile a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1715 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* internal_cursor */
	T6 volatile a2; /* found_position */
	T0* volatile a3; /* item_storage */
	T0* volatile a4; /* key_storage */
	T6 volatile a5; /* count */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* position */
	T6 volatile a9; /* capacity */
	T0* volatile a10; /* equality_tester */
	T0* volatile a11; /* key_equality_tester */
	T0* volatile a12; /* clashes */
	T6 volatile a13; /* modulus */
	T0* volatile a14; /* slots */
	T6 volatile a15; /* slots_position */
	T6 volatile a16; /* clashes_previous_position */
	T0* volatile a17; /* special_item_routines */
	T0* volatile a18; /* special_key_routines */
	T0* volatile a19; /* hash_function */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1717 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* features */
	T6 volatile a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1718 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_cell */
	T6 volatile a2; /* count */
	T0* volatile a3; /* first_cell */
	T0* volatile a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1719 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1720 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1721 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* found_position */
	T0* volatile a3; /* item_storage */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T0* volatile a8; /* equality_tester */
	T6 volatile a9; /* count */
	T6 volatile a10; /* slots_position */
	T0* volatile a11; /* special_item_routines */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T0* volatile a14; /* internal_cursor */
	T6 volatile a15; /* clashes_previous_position */
	T0* volatile a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1723 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_equality_tester */
	T0* volatile a4; /* internal_keys */
	T6 volatile a5; /* count */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* position */
	T6 volatile a9; /* capacity */
	T0* volatile a10; /* equality_tester */
	T0* volatile a11; /* internal_cursor */
	T0* volatile a12; /* key_storage */
	T0* volatile a13; /* clashes */
	T6 volatile a14; /* modulus */
	T0* volatile a15; /* slots */
	T6 volatile a16; /* slots_position */
	T6 volatile a17; /* clashes_previous_position */
	T0* volatile a18; /* special_item_routines */
	T0* volatile a19; /* special_key_routines */
	T0* volatile a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1725 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_cell */
	T6 volatile a2; /* count */
	T0* volatile a3; /* first_cell */
	T0* volatile a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
struct S1726 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* cycle */
	T0* volatile a2; /* counts */
	T0* volatile a3; /* successors */
	T0* volatile a4; /* items */
	T0* volatile a5; /* sorted_items */
	T0* volatile a6; /* indexes */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
struct S1727 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1728 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* after */
	T0* volatile a2; /* current_cell */
	T0* volatile a3; /* container */
	T1 volatile a4; /* before */
	T0* volatile a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1729 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* last_cell */
	T6 volatile a2; /* count */
	T0* volatile a3; /* first_cell */
	T0* volatile a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S1730 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* equality_tester */
	T0* volatile a2; /* key_equality_tester */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T0* volatile a8; /* special_item_routines */
	T0* volatile a9; /* item_storage */
	T0* volatile a10; /* special_key_routines */
	T0* volatile a11; /* key_storage */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* found_position */
	T0* volatile a15; /* internal_cursor */
	T6 volatile a16; /* slots_position */
	T6 volatile a17; /* count */
	T6 volatile a18; /* clashes_previous_position */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
struct S1731 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1734 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1736 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1737 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1740 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
struct S1744 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S1745 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S1746 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_8] */
struct S1749 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
struct S1750 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1751 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* code */
};

/* Struct for type DS_BILINKABLE [XM_POSITION] */
struct S1752 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
	T0* volatile a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S1753 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T1 volatile a2; /* before */
};

/* Struct for type DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S1754 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1755 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1758 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1759 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1762 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1763 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1764 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* first_cell */
	T6 volatile a2; /* count */
	T0* volatile a3; /* last_cell */
	T0* volatile a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1765 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* after */
	T0* volatile a2; /* current_cell */
	T0* volatile a3; /* container */
	T1 volatile a4; /* before */
	T0* volatile a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1766 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
	T0* volatile a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1767 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* after */
	T0* volatile a2; /* current_cell */
	T0* volatile a3; /* container */
	T1 volatile a4; /* before */
	T0* volatile a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [STRING_8] */
struct S1768 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
	T0* volatile a3; /* left */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1769 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* context */
};

/* Struct for type DS_LINKED_QUEUE [detachable STRING_8] */
struct S1772 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* first_cell */
	T6 volatile a2; /* count */
	T0* volatile a3; /* last_cell */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S1773 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* first_cell */
	T0* volatile a2; /* last_cell */
	T6 volatile a3; /* count */
};

/* Struct for type KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1774 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1775 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1776 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1777 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_LINKABLE [XM_DOCUMENT_NODE] */
struct S1778 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
struct S1780 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
	T0* volatile a6; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
struct S1781 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
struct S1783 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_NAME] */
struct S1785 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
struct S1787 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
struct S1788 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
struct S1789 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
struct S1790 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
struct S1792 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
struct S1793 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_SYSTEM_PROCESSOR] */
struct S1794 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
struct S1795 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
struct S1796 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
struct S1797 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ADAPTED_CLASS] */
struct S1799 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
struct S1800 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T6 volatile a2; /* position */
	T0* volatile a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
struct S1801 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
struct S1802 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
struct S1803 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
struct S1804 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
struct S1805 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_64] */
struct S1810 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1814 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
struct S1815 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
struct S1816 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
struct S1817 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1819 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* end_of_input */
	T2 volatile a2; /* last_character */
	T0* volatile a3; /* last_string */
	T0* volatile a4; /* string */
	T6 volatile a5; /* location */
};

/* Struct for type UT_TRISTATE */
struct S1821 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* value */
};

/* Struct for type KL_AGENT_ROUTINES [ANY] */
struct S1822 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type TUPLE [UT_TRISTATE] */
struct S1823 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
struct S1824 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type PREDICATE [TUPLE [ET_MASTER_CLASS]] */
struct S1825 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type PREDICATE [TUPLE] */
struct S1826 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
struct S1828 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T6 volatile a2; /* last_position */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* slots_position */
	T6 volatile a5; /* count */
	T6 volatile a6; /* modulus */
	T6 volatile a7; /* clashes_previous_position */
	T0* volatile a8; /* key_equality_tester */
	T0* volatile a9; /* equality_tester */
	T6 volatile a10; /* found_position */
	T0* volatile a11; /* special_item_routines */
	T0* volatile a12; /* item_storage */
	T0* volatile a13; /* clashes */
	T0* volatile a14; /* slots */
	T0* volatile a15; /* special_key_routines */
	T0* volatile a16; /* key_storage */
	T6 volatile a17; /* free_slot */
	T0* volatile a18; /* internal_cursor */
	T0* volatile a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
struct S1829 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* container */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1830 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T6 volatile z3;
};

/* Struct for type KL_AGENT_ROUTINES [ET_UNIVERSE] */
struct S1831 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type PREDICATE [TUPLE [ET_UNIVERSE]] */
struct S1832 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
struct S1833 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
struct S1834 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
struct S1836 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
struct S1837 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
struct S1838 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S1839 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* static_type */
	T6 volatile a2; /* count */
	T1 volatile a3; /* is_never_void */
	T0* volatile a4; /* dynamic_types */
	T0* volatile a5; /* agent_type */
	T1 volatile a6; /* is_dynamic_types_readonly */
};

/* Struct for type TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
struct S1847 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type DS_CELL [detachable ET_CLASS] */
struct S1848 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
};

/* Struct for type TUPLE [DS_CELL [detachable ET_CLASS]] */
struct S1849 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S1851 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1853 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1856 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type TUPLE [ET_CLIENT_LIST] */
struct S1860 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type ET_STANDARD_ONCE_KEYS */
struct S1864 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type XM_COMMENT */
struct S1867 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* data */
	T0* volatile a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1868 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
	T0* volatile a2; /* data */
	T0* volatile a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1869 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* content */
	T0* volatile a2; /* parent */
};

/* Struct for type ET_PARENTHESIS_SYMBOL */
struct S1885 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* seed */
	T6 volatile a2; /* compressed_position */
	T2 volatile a3; /* code */
};

/* Struct for type ET_PARENTHESIS_INSTRUCTION */
struct S1888 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
	T0* volatile a2; /* name */
	T0* volatile a3; /* arguments */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
struct S1892 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* left_symbol */
	T0* volatile a3; /* actual_arguments */
	T0* volatile a4; /* storage */
	T0* volatile a5; /* right_symbol */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1893 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1894 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* agent_expression */
	T6 volatile a2; /* argument_index */
	T6 volatile a3; /* index */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1896 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* expression */
	T0* volatile a3; /* type */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1899 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1900 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
struct S1908 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T6 volatile a2; /* position */
	T0* volatile a3; /* container */
};

/* Struct for type ET_BASE_TYPE_RENAME_CONSTRAINT */
struct S1910 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* type */
	T0* volatile a2; /* renames */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
struct S1913 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* table */
	T0* volatile a2; /* equality_tester */
	T0* volatile a3; /* internal_cursor */
};

/* Struct for type SPECIAL [NATURAL_16] */
struct S1922 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T9 volatile z2[]; /* item */
};

/* Struct for type ARRAY [NATURAL_16] */
struct S1923 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type ARRAY [NATURAL_32] */
struct S1924 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1925 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1926 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1927 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
struct S1928 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1929 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
struct S1930 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_NAMESPACE] */
struct S1931 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
struct S1932 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
struct S1933 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
struct S1934 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1935 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
struct S1936 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
struct S1937 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
struct S1938 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
struct S1939 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_ACTION] */
struct S1940 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
struct S1941 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
struct S1942 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ECF_OPTIONS] */
struct S1943 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
struct S1946 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
struct S1947 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_VISIBLE_CLASS] */
struct S1948 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
struct S1949 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
struct S1950 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
struct S1951 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1952 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
struct S1953 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_DOTNET_ASSEMBLY] */
struct S1954 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
struct S1956 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
struct S1958 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_INTERNAL_UNIVERSE] */
struct S1959 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1960 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1961 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1962 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
	T0* volatile a2; /* current_class */
	T0* volatile a3; /* system_processor */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1963 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* has_fatal_error */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_LIBRARY] */
struct S1964 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
struct S1965 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_LIBRARY] */
struct S1966 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type LX_DFA_WILDCARD */
struct S1967 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* pattern */
	T1 volatile a2; /* is_case_insensitive */
	T0* volatile a3; /* yy_nxt */
	T0* volatile a4; /* yy_accept */
	T0* volatile a5; /* yy_ec */
	T6 volatile a6; /* yyNb_rows */
	T6 volatile a7; /* yyNull_equiv_class */
	T6 volatile a8; /* yyMax_symbol_equiv_class */
	T6 volatile a9; /* match_count */
	T6 volatile a10; /* subject_start */
	T6 volatile a11; /* subject_end */
	T0* volatile a12; /* subject */
	T6 volatile a13; /* matched_start */
	T6 volatile a14; /* matched_end */
};

/* Struct for type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
struct S1968 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T6 volatile a2; /* last_position */
	T0* volatile a3; /* clashes */
	T0* volatile a4; /* item_storage */
	T0* volatile a5; /* key_equality_tester */
	T0* volatile a6; /* internal_keys */
	T6 volatile a7; /* position */
	T6 volatile a8; /* capacity */
	T6 volatile a9; /* slots_position */
	T0* volatile a10; /* equality_tester */
	T6 volatile a11; /* found_position */
	T6 volatile a12; /* modulus */
	T6 volatile a13; /* clashes_previous_position */
	T0* volatile a14; /* special_item_routines */
	T0* volatile a15; /* slots */
	T0* volatile a16; /* special_key_routines */
	T0* volatile a17; /* key_storage */
	T6 volatile a18; /* free_slot */
	T0* volatile a19; /* internal_cursor */
	T0* volatile a20; /* hash_function */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1971 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* first_cell */
	T0* volatile a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1972 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
struct S1973 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_UNIVERSE] */
struct S1974 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
struct S1975 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
struct S1976 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_TARGET_PARENT] */
struct S1977 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
struct S1978 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
struct S1979 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [ET_ECF_CLUSTER] */
struct S1980 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
struct S1981 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
struct S1982 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1983 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1984 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [YY_BUFFER] */
struct S1985 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [YY_BUFFER] */
struct S1986 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1988 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
struct S1989 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
struct S1990 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
struct S1991 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
struct S1992 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1993 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1994 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1996 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1997 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1999 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S2000 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T1 volatile a2; /* before */
	T1 volatile a3; /* after */
	T0* volatile a4; /* current_cell */
	T0* volatile a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S2001 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S2002 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S2003 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S2004 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S2005 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S2006 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S2007 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S2008 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S2011 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S2012 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S2013 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T1 volatile a2; /* before */
	T1 volatile a3; /* after */
	T0* volatile a4; /* current_cell */
	T0* volatile a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S2014 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
struct S2015 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* count */
	T6 volatile a4; /* last_position */
	T6 volatile a5; /* free_slot */
	T6 volatile a6; /* position */
	T6 volatile a7; /* modulus */
	T6 volatile a8; /* capacity */
	T0* volatile a9; /* equality_tester */
	T0* volatile a10; /* key_equality_tester */
	T0* volatile a11; /* internal_cursor */
	T0* volatile a12; /* key_storage */
	T0* volatile a13; /* clashes */
	T0* volatile a14; /* slots */
	T0* volatile a15; /* special_item_routines */
	T0* volatile a16; /* special_key_routines */
	T6 volatile a17; /* slots_position */
	T6 volatile a18; /* clashes_previous_position */
	T0* volatile a19; /* hash_function */
};

/* Struct for type SPECIAL [ET_LIKE_FEATURE] */
struct S2016 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
struct S2017 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
struct S2018 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T6 volatile a2; /* position */
	T0* volatile a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S2020 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S2021 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S2022 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_equality_tester */
	T0* volatile a4; /* internal_keys */
	T6 volatile a5; /* position */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* capacity */
	T6 volatile a8; /* slots_position */
	T6 volatile a9; /* count */
	T0* volatile a10; /* equality_tester */
	T6 volatile a11; /* modulus */
	T6 volatile a12; /* clashes_previous_position */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* clashes */
	T0* volatile a15; /* slots */
	T0* volatile a16; /* special_key_routines */
	T0* volatile a17; /* key_storage */
	T6 volatile a18; /* free_slot */
	T0* volatile a19; /* internal_cursor */
	T0* volatile a20; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S2023 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S2024 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T1 volatile a2; /* before */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S2025 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
	T0* volatile a3; /* left */
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S2027 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* last_cell */
	T0* volatile a3; /* first_cell */
	T0* volatile a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S2028 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* before */
	T0* volatile a2; /* current_cell */
	T0* volatile a3; /* next_cursor */
	T0* volatile a4; /* container */
	T1 volatile a5; /* after */
};

/* Struct for type DS_LINKABLE [detachable STRING_8] */
struct S2029 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S2030 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S2031 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* default_template */
	T0* volatile a2; /* parameters */
	T0* volatile a3; /* code */
	T0* volatile a4; /* etl_code */
	T0* volatile a5; /* cluster */
};

/* Struct for type TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2032 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T6 volatile z3;
};

/* Struct for type TUPLE [ET_ECF_CLUSTER] */
struct S2033 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
struct S2034 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_TARGET, STRING_8] */
struct S2035 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type TUPLE [ET_ECF_ADAPTED_LIBRARY] */
struct S2037 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
struct S2038 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2039 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
struct S2040 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type PROCEDURE [TUPLE [STRING_8]] */
struct S2043 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_OPTIONS, STRING_8] */
struct S2044 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
struct S2045 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T6 volatile a3; /* position */
	T0* volatile a4; /* key_equality_tester */
	T0* volatile a5; /* internal_keys */
	T0* volatile a6; /* hash_function */
	T6 volatile a7; /* last_position */
	T6 volatile a8; /* capacity */
	T6 volatile a9; /* slots_position */
	T6 volatile a10; /* count */
	T0* volatile a11; /* equality_tester */
	T6 volatile a12; /* modulus */
	T6 volatile a13; /* clashes_previous_position */
	T0* volatile a14; /* special_item_routines */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_key_routines */
	T0* volatile a18; /* key_storage */
	T6 volatile a19; /* free_slot */
	T0* volatile a20; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S2046 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target_type_set */
	T0* volatile a2; /* static_equality */
	T0* volatile a3; /* current_feature */
	T0* volatile a4; /* current_type */
	T0* volatile a5; /* next */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S2047 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target_type_set */
	T0* volatile a2; /* static_equality */
	T0* volatile a3; /* current_feature */
	T0* volatile a4; /* current_type */
	T0* volatile a5; /* next */
};

/* Struct for type ET_AST_PRETTY_PRINTER */
struct S2052 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* comment_finder */
	T0* volatile a2; /* comment_list */
	T0* volatile a3; /* file */
	T1 volatile a4; /* bom_enabled */
	T0* volatile a5; /* buffer */
	T1 volatile a6; /* comment_printed */
	T1 volatile a7; /* use_as_type */
	T1 volatile a8; /* comments_ignored */
	T1 volatile a9; /* indentation_printed */
	T6 volatile a10; /* indentation */
	T1 volatile a11; /* use_is_keyword */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S2054 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S2055 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
	T0* volatile z4;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S2056 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S2057 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T6 volatile z2;
	T0* volatile z3;
	T0* volatile z4;
	T1 volatile z5;
};

/* Struct for type TUPLE [ET_GROUP] */
struct S2065 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
struct S2066 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2067 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T6 volatile z3;
};

/* Struct for type ET_CONVERT_BUILTIN_EXPRESSION */
struct S2068 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* index */
	T0* volatile a2; /* expression */
	T0* volatile a3; /* convert_feature */
	T0* volatile a4; /* type */
};

/* Struct for type ET_CONVERT_FROM_EXPRESSION */
struct S2069 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T6 volatile a2; /* index */
	T0* volatile a3; /* type */
	T0* volatile a4; /* expression */
	T0* volatile a5; /* convert_feature */
	T0* volatile a6; /* internal_separate_target */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S2070 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T6 volatile a2; /* index */
	T0* volatile a3; /* expression */
	T0* volatile a4; /* convert_feature */
};

/* Struct for type DS_LINKABLE [XM_ELEMENT_NODE] */
struct S2082 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* right */
	T0* volatile a2; /* item */
};

/* Struct for type TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
struct S2083 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T8 volatile z3;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S2086 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T6 volatile a2; /* position */
	T0* volatile a3; /* container */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_CFLAG] */
struct S2092 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
struct S2093 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
struct S2094 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
struct S2095 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
struct S2096 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
struct S2097 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
struct S2098 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2099 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
struct S2100 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_MAKE] */
struct S2101 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
struct S2102 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_OBJECT] */
struct S2103 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
struct S2104 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
struct S2105 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
struct S2106 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [LX_WILDCARD] */
struct S2109 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PREDICATE [TUPLE [LX_WILDCARD]] */
struct S2110 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
struct S2111 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T0* volatile z3;
};

/* Struct for type PREDICATE [TUPLE [STRING_8]] */
struct S2113 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [KL_STRING_ROUTINES, STRING_8] */
struct S2114 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
};

/* Struct for type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S2116 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2118 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2119 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
struct S2120 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* table_cursor */
	T0* volatile a2; /* container */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
struct S2122 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
struct S2123 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
struct S2124 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2125 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2126 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2127 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
struct S2128 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_FILE_RULE] */
struct S2129 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
struct S2130 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE] */
struct S2131 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_NAMESPACE] */
struct S2132 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE] */
struct S2133 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
struct S2134 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
struct S2135 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
struct S2136 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
struct S2137 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
struct S2138 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
struct S2139 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
struct S2140 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
struct S2141 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
struct S2142 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2143 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2144 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2145 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
struct S2146 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_MAKE] */
struct S2147 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
struct S2148 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
struct S2149 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
struct S2150 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
struct S2151 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
struct S2152 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
struct S2153 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
struct S2154 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
struct S2155 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
struct S2156 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
struct S2157 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
struct S2158 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_ANDED_CONDITIONS] */
struct S2159 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
struct S2160 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
struct S2161 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [ET_ECF_CONDITION_ITEM] */
struct S2162 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
struct S2163 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type LX_WILDCARD_PARSER */
struct S2165 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* successful */
	T0* volatile a2; /* pending_rules */
	T0* volatile a3; /* start_condition_stack */
	T0* volatile a4; /* action_factory */
	T0* volatile a5; /* old_singleton_lines */
	T0* volatile a6; /* old_singleton_columns */
	T0* volatile a7; /* old_singleton_counts */
	T0* volatile a8; /* old_regexp_lines */
	T0* volatile a9; /* old_regexp_columns */
	T0* volatile a10; /* old_regexp_counts */
	T0* volatile a11; /* unions_of_concatenations_of_symbol_classes_by_utf8_character_class */
	T0* volatile a12; /* buffer */
	T6 volatile a13; /* maximum_used_symbol */
	T0* volatile a14; /* description */
	T0* volatile a15; /* last_string_value */
	T0* volatile a16; /* last_string_32_value */
	T0* volatile a17; /* last_lx_symbol_class_value */
	T0* volatile a18; /* error_handler */
	T0* volatile a19; /* name_definitions */
	T0* volatile a20; /* character_classes */
	T0* volatile a21; /* character_classes_by_name */
	T0* volatile a22; /* equiv_character_classes */
	T0* volatile a23; /* utf8_character_classes_by_name */
	T0* volatile a24; /* utf8_mode */
	T6 volatile a25; /* line_nb */
	T0* volatile a26; /* eiffel_verbatim_marker */
	T0* volatile a27; /* yyss */
	T0* volatile a28; /* input_buffer */
	T6 volatile a29; /* yy_end */
	T6 volatile a30; /* yy_position */
	T6 volatile a31; /* yy_line */
	T6 volatile a32; /* yy_column */
	T6 volatile a33; /* yy_parsing_status */
	T6 volatile a34; /* yy_suspended_yystacksize */
	T6 volatile a35; /* yy_suspended_yystate */
	T6 volatile a36; /* yy_suspended_yyn */
	T6 volatile a37; /* yy_suspended_yychar1 */
	T6 volatile a38; /* yy_suspended_index */
	T6 volatile a39; /* yy_suspended_yyss_top */
	T6 volatile a40; /* yy_suspended_yy_goto */
	T0* volatile a41; /* yyr1 */
	T6 volatile a42; /* yyssp */
	T0* volatile a43; /* yypgoto */
	T0* volatile a44; /* yycheck */
	T0* volatile a45; /* yytable */
	T0* volatile a46; /* yydefgoto */
	T6 volatile a47; /* error_count */
	T1 volatile a48; /* yy_lookahead_needed */
	T6 volatile a49; /* yyerrstatus */
	T0* volatile a50; /* yypact */
	T6 volatile a51; /* last_token */
	T0* volatile a52; /* yytranslate */
	T0* volatile a53; /* yydefact */
	T0* volatile a54; /* yy_pushed_start_conditions */
	T0* volatile a55; /* yyspecial_routines1 */
	T6 volatile a56; /* yyvsc1 */
	T0* volatile a57; /* yyvs1 */
	T0* volatile a58; /* yyspecial_routines2 */
	T6 volatile a59; /* yyvsc2 */
	T0* volatile a60; /* yyvs2 */
	T0* volatile a61; /* yyspecial_routines3 */
	T6 volatile a62; /* yyvsc3 */
	T0* volatile a63; /* yyvs3 */
	T0* volatile a64; /* yyspecial_routines4 */
	T6 volatile a65; /* yyvsc4 */
	T0* volatile a66; /* yyvs4 */
	T0* volatile a67; /* yyspecial_routines5 */
	T6 volatile a68; /* yyvsc5 */
	T0* volatile a69; /* yyvs5 */
	T0* volatile a70; /* yytypes1 */
	T0* volatile a71; /* yytypes2 */
	T6 volatile a72; /* yy_start */
	T6 volatile a73; /* yyvsp1 */
	T6 volatile a74; /* yyvsp2 */
	T6 volatile a75; /* yyvsp3 */
	T6 volatile a76; /* yyvsp4 */
	T6 volatile a77; /* yyvsp5 */
	T1 volatile a78; /* yy_more_flag */
	T6 volatile a79; /* yy_more_len */
	T6 volatile a80; /* line */
	T6 volatile a81; /* column */
	T6 volatile a82; /* position */
	T6 volatile a83; /* yy_start_state */
	T0* volatile a84; /* yy_state_stack */
	T6 volatile a85; /* yy_state_count */
	T0* volatile a86; /* yy_content_area */
	T0* volatile a87; /* yy_unicode_content_area */
	T0* volatile a88; /* yy_accept */
	T6 volatile a89; /* yy_last_accepting_state */
	T6 volatile a90; /* yy_last_accepting_cpos */
	T0* volatile a91; /* yy_content */
	T0* volatile a92; /* yy_ec */
	T0* volatile a93; /* yy_chk */
	T0* volatile a94; /* yy_base */
	T0* volatile a95; /* yy_def */
	T0* volatile a96; /* yy_meta */
	T0* volatile a97; /* yy_nxt */
	T6 volatile a98; /* yy_lp */
	T0* volatile a99; /* yy_acclist */
	T6 volatile a100; /* yy_looking_for_trail_begin */
	T6 volatile a101; /* yy_full_match */
	T6 volatile a102; /* yy_full_state */
	T6 volatile a103; /* yy_full_lp */
	T1 volatile a104; /* yy_rejected */
	T0* volatile a105; /* last_detachable_any_value */
	T6 volatile a106; /* last_integer_value */
	T1 volatile a107; /* in_trail_context */
	T0* volatile a108; /* rule */
	T1 volatile a109; /* has_trail_context */
	T6 volatile a110; /* head_count */
	T6 volatile a111; /* head_line */
	T6 volatile a112; /* head_column */
	T6 volatile a113; /* trail_count */
	T6 volatile a114; /* i_ */
	T6 volatile a115; /* rule_line_nb */
	T1 volatile a116; /* has_bol_context */
};

/* Struct for type LX_DESCRIPTION */
struct S2166 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* maximum_symbol */
	T1 volatile a2; /* utf8_mode */
	T1 volatile a3; /* equiv_classes_used */
	T1 volatile a4; /* full_table */
	T1 volatile a5; /* meta_equiv_classes_used */
	T1 volatile a6; /* reject_used */
	T1 volatile a7; /* variable_trail_context */
	T0* volatile a8; /* rules */
	T0* volatile a9; /* start_conditions */
	T6 volatile a10; /* array_size */
	T1 volatile a11; /* line_pragma */
	T1 volatile a12; /* inspect_used */
	T0* volatile a13; /* eof_rules */
	T0* volatile a14; /* eiffel_header */
	T1 volatile a15; /* case_insensitive */
	T0* volatile a16; /* equiv_classes */
	T1 volatile a17; /* bol_needed */
	T0* volatile a18; /* input_filename */
	T1 volatile a19; /* has_utf8_enconding */
	T1 volatile a20; /* actions_separated */
	T0* volatile a21; /* eiffel_code */
	T1 volatile a22; /* pre_action_used */
	T1 volatile a23; /* post_action_used */
	T1 volatile a24; /* pre_eof_action_used */
	T1 volatile a25; /* post_eof_action_used */
	T1 volatile a26; /* line_used */
	T1 volatile a27; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S2167 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* yy_nxt */
	T0* volatile a2; /* yy_accept */
	T0* volatile a3; /* yy_ec */
	T6 volatile a4; /* yyNb_rows */
	T6 volatile a5; /* yyNull_equiv_class */
	T6 volatile a6; /* yyMax_symbol_equiv_class */
	T0* volatile a7; /* input_filename */
	T1 volatile a8; /* has_utf8_enconding */
	T6 volatile a9; /* array_size */
	T1 volatile a10; /* inspect_used */
	T1 volatile a11; /* actions_separated */
	T0* volatile a12; /* eiffel_code */
	T0* volatile a13; /* eiffel_header */
	T1 volatile a14; /* bol_needed */
	T1 volatile a15; /* pre_action_used */
	T1 volatile a16; /* post_action_used */
	T1 volatile a17; /* pre_eof_action_used */
	T1 volatile a18; /* post_eof_action_used */
	T1 volatile a19; /* line_pragma */
	T0* volatile a20; /* yy_start_conditions */
	T6 volatile a21; /* yyNb_rules */
	T0* volatile a22; /* yy_rules */
	T6 volatile a23; /* yyEnd_of_buffer */
	T1 volatile a24; /* yyLine_used */
	T1 volatile a25; /* yyPosition_used */
	T6 volatile a26; /* minimum_symbol */
	T6 volatile a27; /* maximum_symbol */
	T0* volatile a28; /* states */
	T6 volatile a29; /* backing_up_count */
	T0* volatile a30; /* partitions */
	T6 volatile a31; /* start_states_count */
	T1 volatile a32; /* yyBacking_up */
	T0* volatile a33; /* yy_eof_rules */
};

/* Struct for type SPECIAL [LX_WILDCARD] */
struct S2169 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
struct S2172 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
struct S2173 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type DS_LINKABLE [CHARACTER_8] */
struct S2174 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T2 volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
struct S2176 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S2177 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S2180 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S2181 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S2182 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* left */
	T0* volatile a3; /* right */
};

/* Struct for type ARRAYED_LIST [INTEGER_32] */
struct S2183 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area_v2 */
	T6 volatile a2; /* index */
};

/* Struct for type ET_UNIVERSE_ERROR */
struct S2184 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* default_template */
	T0* volatile a2; /* parameters */
	T0* volatile a3; /* code */
	T0* volatile a4; /* etl_code */
	T0* volatile a5; /* universe */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S2185 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* default_template */
	T0* volatile a2; /* parameters */
	T0* volatile a3; /* code */
	T0* volatile a4; /* etl_code */
	T0* volatile a5; /* assembly */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S2186 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S2187 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* comparator */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S2190 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* actual_parameters */
	T6 volatile a3; /* tuple_position */
	T0* volatile a4; /* tuple_type */
};

/* Struct for type ET_ACTUAL_PARAMETER_SUBLIST */
struct S2191 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* actual_parameters */
	T6 volatile a2; /* upper */
	T6 volatile a3; /* lower */
};

/* Struct for type TUPLE [ET_ECF_FILE_RULE] */
struct S2194 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
struct S2195 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
struct S2197 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_FILE_RULES] */
struct S2198 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [ET_ECF_STATE] */
struct S2199 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
struct S2202 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
struct S2205 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
struct S2206 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type ET_COMMENT_FINDER */
struct S2208 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* comment_list */
	T0* volatile a2; /* excluded_nodes */
	T1 volatile a3; /* comments_ignored */
};

/* Struct for type DS_ARRAYED_LIST [ET_BREAK] */
struct S2209 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_BREAK] */
struct S2210 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_BREAK]] */
struct S2211 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [ET_AST_PRETTY_PRINTER] */
struct S2212 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type DS_ARRAYED_LIST [LX_RULE] */
struct S2213 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S2214 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S2215 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
struct S2216 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_equality_tester */
	T6 volatile a4; /* position */
	T6 volatile a5; /* count */
	T6 volatile a6; /* capacity */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* last_position */
	T0* volatile a9; /* equality_tester */
	T6 volatile a10; /* modulus */
	T6 volatile a11; /* slots_position */
	T6 volatile a12; /* clashes_previous_position */
	T0* volatile a13; /* clashes */
	T0* volatile a14; /* slots */
	T0* volatile a15; /* special_item_routines */
	T0* volatile a16; /* special_key_routines */
	T0* volatile a17; /* key_storage */
	T0* volatile a18; /* internal_cursor */
	T0* volatile a19; /* hash_function */
};

/* Struct for type LX_SYMBOL_CLASS */
struct S2217 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* upper */
	T1 volatile a2; /* is_empty */
	T1 volatile a3; /* is_negated */
	T11 volatile a4; /* first_set */
	T11 volatile a5; /* second_set */
	T11 volatile a6; /* third_set */
	T11 volatile a7; /* fourth_set */
	T0* volatile a8; /* other_sets */
	T6 volatile a9; /* lower */
};

/* Struct for type DS_HASH_TABLE [STRING_32, STRING_8] */
struct S2218 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* key_equality_tester */
	T0* volatile a2; /* internal_keys */
	T0* volatile a3; /* equality_tester */
	T6 volatile a4; /* capacity */
	T6 volatile a5; /* modulus */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* position */
	T0* volatile a9; /* special_item_routines */
	T0* volatile a10; /* item_storage */
	T0* volatile a11; /* special_key_routines */
	T0* volatile a12; /* key_storage */
	T0* volatile a13; /* clashes */
	T0* volatile a14; /* slots */
	T6 volatile a15; /* found_position */
	T0* volatile a16; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [LX_SYMBOL_CLASS] */
struct S2219 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* equality_tester */
	T6 volatile a4; /* capacity */
	T6 volatile a5; /* modulus */
	T6 volatile a6; /* last_position */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* position */
	T6 volatile a9; /* count */
	T6 volatile a10; /* slots_position */
	T0* volatile a11; /* special_item_routines */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T0* volatile a14; /* internal_cursor */
	T6 volatile a15; /* clashes_previous_position */
	T0* volatile a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
struct S2220 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* found_position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_equality_tester */
	T0* volatile a4; /* internal_keys */
	T6 volatile a5; /* position */
	T6 volatile a6; /* count */
	T6 volatile a7; /* capacity */
	T6 volatile a8; /* slots_position */
	T6 volatile a9; /* free_slot */
	T6 volatile a10; /* last_position */
	T0* volatile a11; /* equality_tester */
	T6 volatile a12; /* modulus */
	T6 volatile a13; /* clashes_previous_position */
	T0* volatile a14; /* special_item_routines */
	T0* volatile a15; /* clashes */
	T0* volatile a16; /* slots */
	T0* volatile a17; /* special_key_routines */
	T0* volatile a18; /* key_storage */
	T0* volatile a19; /* internal_cursor */
	T0* volatile a20; /* hash_function */
};

/* Struct for type KL_EQUALITY_TESTER [STRING_32] */
struct S2221 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_STACK [BOOLEAN] */
struct S2222 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* storage */
	T6 volatile a2; /* count */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_32] */
struct S2223 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [STRING_32] */
struct S2224 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
struct S2225 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [LX_SYMBOL_CLASS] */
struct S2226 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA] */
struct S2227 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type LX_NFA */
struct S2228 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* in_trail_context */
	T0* volatile a2; /* states */
};

/* Struct for type SPECIAL [LX_NFA] */
struct S2229 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type LX_RULE */
struct S2230 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* id */
	T0* volatile a2; /* pattern */
	T0* volatile a3; /* action */
	T6 volatile a4; /* head_count */
	T6 volatile a5; /* trail_count */
	T6 volatile a6; /* line_count */
	T6 volatile a7; /* column_count */
	T6 volatile a8; /* line_nb */
	T1 volatile a9; /* has_trail_context */
	T1 volatile a10; /* is_useful */
};

/* Struct for type DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
struct S2231 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* container */
	T0* volatile a3; /* next_cursor */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S2232 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* new_upper */
	T0* volatile a2; /* storage */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S2233 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type LX_INVALID_UNICODE_CHARACTER_ERROR */
struct S2234 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S2235 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S2236 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S2237 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S2238 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S2239 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S2240 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S2241 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type ARRAY [LX_RULE] */
struct S2242 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type SPECIAL [LX_RULE] */
struct S2243 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type LX_DFA_STATE */
struct S2244 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* accepted_rules */
	T0* volatile a2; /* states */
	T0* volatile a3; /* transitions */
	T0* volatile a4; /* accepted_head_rules */
	T6 volatile a5; /* code */
	T6 volatile a6; /* id */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA_STATE] */
struct S2245 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* equality_tester */
	T0* volatile a4; /* special_routines */
	T6 volatile a5; /* capacity */
	T0* volatile a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_DFA_STATE] */
struct S2246 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T6 volatile a2; /* capacity */
	T0* volatile a3; /* storage */
	T0* volatile a4; /* special_routines */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S2247 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* symbols */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* new_upper */
};

/* Struct for type KL_ARRAY_ROUTINES [LX_RULE] */
struct S2248 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type ARRAY [detachable LX_RULE] */
struct S2249 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type SPECIAL [detachable LX_RULE] */
struct S2250 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type LX_START_CONDITION */
struct S2251 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* name */
	T6 volatile a2; /* id */
	T1 volatile a3; /* is_exclusive */
	T0* volatile a4; /* patterns */
	T0* volatile a5; /* bol_patterns */
};

/* Struct for type LX_TRANSITION_TABLE [LX_DFA_STATE] */
struct S2252 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* lower */
	T6 volatile a2; /* upper */
	T6 volatile a3; /* minimum_label */
	T6 volatile a4; /* second_minimum_label */
	T6 volatile a5; /* maximum_label */
	T0* volatile a6; /* transitions */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA] */
struct S2253 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T0* volatile a4; /* internal_cursor */
	T6 volatile a5; /* count */
};

/* Struct for type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
struct S2254 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* item_storage */
	T0* volatile a3; /* key_equality_tester */
	T6 volatile a4; /* count */
	T6 volatile a5; /* capacity */
	T6 volatile a6; /* slots_position */
	T6 volatile a7; /* free_slot */
	T6 volatile a8; /* last_position */
	T6 volatile a9; /* modulus */
	T6 volatile a10; /* clashes_previous_position */
	T0* volatile a11; /* equality_tester */
	T6 volatile a12; /* found_position */
	T0* volatile a13; /* special_item_routines */
	T0* volatile a14; /* clashes */
	T0* volatile a15; /* slots */
	T0* volatile a16; /* special_key_routines */
	T0* volatile a17; /* key_storage */
	T0* volatile a18; /* internal_cursor */
	T0* volatile a19; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S2255 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T1 volatile a1; /* in_trail_context */
	T0* volatile a2; /* transition */
	T0* volatile a3; /* epsilon_transition */
	T6 volatile a4; /* id */
	T0* volatile a5; /* accepted_rule */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S2261 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* table_cursor */
	T0* volatile a2; /* container */
};

/* Struct for type TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
struct S2262 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
struct S2263 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T14 volatile a1; /* rout_disp */
	T0* volatile a2; /* closed_operands */
	T14 volatile a3; /* encaps_rout_disp */
	T14 volatile a4; /* calc_rout_addr */
	T1 volatile a5; /* is_target_closed */
	T6 volatile a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_SET [STRING_8]] */
struct S2266 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S2268 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* item */
	T0* volatile a2; /* right */
};

/* Struct for type ARRAY [detachable LX_SYMBOL_CLASS] */
struct S2269 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type SPECIAL [detachable LX_SYMBOL_CLASS] */
struct S2270 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
struct S2271 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
struct S2272 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2273 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* storage */
	T0* volatile a3; /* special_routines */
	T6 volatile a4; /* capacity */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
struct S2274 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* special_routines */
	T0* volatile a2; /* storage */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* count */
	T0* volatile a5; /* internal_cursor */
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S2275 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* parameters */
};

/* Struct for type ET_AST_NULL_LEAF */
struct S2276 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* break */
	T6 volatile a2; /* compressed_position */
};

/* Struct for type DS_ARRAYED_LIST [ET_AST_NODE] */
struct S2277 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* count */
	T0* volatile a2; /* equality_tester */
	T0* volatile a3; /* storage */
	T0* volatile a4; /* special_routines */
	T6 volatile a5; /* capacity */
	T0* volatile a6; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_BREAK] */
struct S2279 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BREAK] */
struct S2280 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_BREAK] */
struct S2281 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_RULE] */
struct S2282 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
struct S2283 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type KL_ARRAY_ROUTINES [STRING_8] */
struct S2284 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [LX_START_CONDITION] */
struct S2285 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
struct S2286 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
struct S2287 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
struct S2288 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
struct S2289 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
struct S2291 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
struct S2292 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [detachable SPECIAL [NATURAL_64]] */
struct S2293 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
struct S2295 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
struct S2297 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
struct S2298 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* target */
};

/* Struct for type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
struct S2301 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* label */
	T0* volatile a2; /* target */
};

/* Struct for type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
struct S2302 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* label */
	T0* volatile a2; /* target */
};

/* Struct for type LX_ACTION */
struct S2304 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* text */
};

/* Struct for type ARRAY [DS_BILINKABLE [INTEGER_32]] */
struct S2305 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type DS_BILINKABLE [INTEGER_32] */
struct S2306 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* item */
	T0* volatile a2; /* left */
	T0* volatile a3; /* right */
};

/* Struct for type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
struct S2307 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type DS_BUBBLE_SORTER [LX_NFA_STATE] */
struct S2308 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* comparator */
};

/* Struct for type DS_BUBBLE_SORTER [LX_RULE] */
struct S2310 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* comparator */
};

/* Struct for type SPECIAL [LX_NFA_STATE] */
struct S2312 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
struct S2314 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
struct S2315 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* position */
	T0* volatile a2; /* next_cursor */
	T0* volatile a3; /* container */
};

/* Struct for type SPECIAL [LX_DFA_STATE] */
struct S2317 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
struct S2318 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
struct S2319 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type KL_ARRAY [LX_RULE] */
struct S2320 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
struct S2321 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* equality_tester */
	T0* volatile a2; /* key_equality_tester */
	T6 volatile a3; /* capacity */
	T6 volatile a4; /* modulus */
	T6 volatile a5; /* last_position */
	T6 volatile a6; /* free_slot */
	T6 volatile a7; /* position */
	T0* volatile a8; /* special_item_routines */
	T0* volatile a9; /* item_storage */
	T0* volatile a10; /* special_key_routines */
	T0* volatile a11; /* key_storage */
	T0* volatile a12; /* clashes */
	T0* volatile a13; /* slots */
	T6 volatile a14; /* found_position */
	T0* volatile a15; /* internal_cursor */
	T0* volatile a16; /* hash_function */
	T6 volatile a17; /* count */
	T6 volatile a18; /* slots_position */
	T6 volatile a19; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
struct S2322 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
struct S2324 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2325 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T6 volatile z3;
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2326 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T6 volatile z3;
};

/* Struct for type TUPLE [ET_ECF_LIBRARY] */
struct S2327 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
};

/* Struct for type TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2329 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile z1;
	T0* volatile z2;
	T6 volatile z3;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_RULE] */
struct S2334 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
struct S2337 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2340 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2341 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2342 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
struct S2343 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};

/* Struct for type SPECIAL [ET_AST_NODE] */
struct S2345 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T6 volatile a1; /* capacity */
	T6 volatile a2; /* count */
	T0* volatile z2[]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AST_NODE] */
struct S2346 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AST_NODE] */
struct S2347 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* next_cursor */
	T0* volatile a2; /* container */
	T6 volatile a3; /* position */
};

/* Struct for type KL_ARRAY [STRING_8] */
struct S2348 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* area */
	T6 volatile a2; /* lower */
	T6 volatile a3; /* upper */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
struct S2350 {
	EIF_TYPE_INDEX volatile id;
	uint16_t volatile flags;
	T0* volatile a1; /* container */
	T6 volatile a2; /* position */
};


extern T40 GE_default40;
extern T1076 GE_default1076;
extern T1447 GE_default1447;
extern T1566 GE_default1566;
extern T1567 GE_default1567;

extern T0* GE_new_str8(T6 c);
extern T0* GE_new_str32(T6 c);
extern T0* GE_new_istr8(T6 c);
extern T0* GE_new_istr32(T6 c);
extern T14 GE_sp8_base_address(T0* a1);
extern T14 GE_sp32_base_address(T0* a1);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [CHARACTER_32] */
extern T0* GE_new16(TC* ac, T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(TC* ac, T1 initialize);
/* New instance of type STRING_32 */
extern T0* GE_new18(TC* ac, T1 initialize);
/* New instance of type IMMUTABLE_STRING_32 */
extern T0* GE_new20(TC* ac, T1 initialize);
/* New instance of type ISE_EXCEPTION_MANAGER */
extern T0* GE_new21(TC* ac, T1 initialize);
/* New instance of type GEC */
extern T0* GE_new26(TC* ac, T1 initialize);
/* New instance of type CELL [detachable EXCEPTION] */
extern T0* GE_new27(TC* ac, T1 initialize);
/* New instance of type HASH_TABLE [INTEGER_32, INTEGER_32] */
extern T0* GE_new28(TC* ac, T1 initialize);
/* New instance of type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
extern T0* GE_new29(TC* ac, T1 initialize);
/* New instance of type CELL [NO_MORE_MEMORY] */
extern T0* GE_new30(TC* ac, T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new31(TC* ac, T1 initialize);
/* New instance of type TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
extern T0* GE_new32(TC* ac, T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new33(TC* ac, T1 initialize);
/* New instance of type ARRAY [STRING_8] */
extern T0* GE_new34(TC* ac, T1 initialize);
/* New instance of type SPECIAL [STRING_8] */
extern T0* GE_new35(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new36(TC* ac, T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new37(TC* ac, T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new38(TC* ac, T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new39(TC* ac, T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new42(TC* ac, T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new43(TC* ac, T1 initialize);
/* New instance of type UT_GOBO_VARIABLES */
extern T0* GE_new44(TC* ac, T1 initialize);
/* New instance of type UT_ISE_VARIABLES */
extern T0* GE_new45(TC* ac, T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new46(TC* ac, T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new49(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new50(TC* ac, T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new52(TC* ac, T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new53(TC* ac, T1 initialize);
/* New instance of type AP_STRING_OPTION */
extern T0* GE_new54(TC* ac, T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new56(TC* ac, T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new57(TC* ac, T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new58(TC* ac, T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new59(TC* ac, T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new63(TC* ac, T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new65(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM_PROCESSOR */
extern T0* GE_new66(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTER */
extern T0* GE_new67(TC* ac, T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new68(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLASS] */
extern T0* GE_new69(TC* ac, T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new70(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLASS] */
extern T0* GE_new74(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_CLASS]] */
extern T0* GE_new75(TC* ac, T1 initialize);
/* New instance of type TUPLE */
extern T0* GE_new76(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new77(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_CLASS]] */
extern T0* GE_new78(TC* ac, T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new80(TC* ac, T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new81(TC* ac, T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new82(TC* ac, T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new83(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM_PARSER */
extern T0* GE_new85(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ERROR_HANDLER */
extern T0* GE_new86(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM */
extern T0* GE_new87(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGET */
extern T0* GE_new88(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CLUSTER */
extern T0* GE_new89(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SETTINGS */
extern T0* GE_new90(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CAPABILITIES */
extern T0* GE_new91(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VARIABLES */
extern T0* GE_new92(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new94(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new95(TC* ac, T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new97(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [STRING_8] */
extern T0* GE_new99(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new100(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new102(TC* ac, T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new103(TC* ac, T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new105(TC* ac, T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new106(TC* ac, T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new107(TC* ac, T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new108(TC* ac, T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new109(TC* ac, T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new113(TC* ac, T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new114(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new116(TC* ac, T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new117(TC* ac, T1 initialize);
/* New instance of type GECC */
extern T0* GE_new118(TC* ac, T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new119(TC* ac, T1 initialize);
/* New instance of type VOID_TARGET */
extern T0* GE_new120(TC* ac, T1 initialize);
/* New instance of type ROUTINE_FAILURE */
extern T0* GE_new122(TC* ac, T1 initialize);
/* New instance of type OLD_VIOLATION */
extern T0* GE_new124(TC* ac, T1 initialize);
/* New instance of type NO_MORE_MEMORY */
extern T0* GE_new126(TC* ac, T1 initialize);
/* New instance of type INVARIANT_VIOLATION */
extern T0* GE_new127(TC* ac, T1 initialize);
/* New instance of type OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new128(TC* ac, T1 initialize);
/* New instance of type IO_FAILURE */
extern T0* GE_new129(TC* ac, T1 initialize);
/* New instance of type OPERATING_SYSTEM_FAILURE */
extern T0* GE_new130(TC* ac, T1 initialize);
/* New instance of type COM_FAILURE */
extern T0* GE_new131(TC* ac, T1 initialize);
/* New instance of type EIFFEL_RUNTIME_PANIC */
extern T0* GE_new132(TC* ac, T1 initialize);
/* New instance of type PRECONDITION_VIOLATION */
extern T0* GE_new134(TC* ac, T1 initialize);
/* New instance of type POSTCONDITION_VIOLATION */
extern T0* GE_new135(TC* ac, T1 initialize);
/* New instance of type FLOATING_POINT_FAILURE */
extern T0* GE_new136(TC* ac, T1 initialize);
/* New instance of type CHECK_VIOLATION */
extern T0* GE_new137(TC* ac, T1 initialize);
/* New instance of type BAD_INSPECT_VALUE */
extern T0* GE_new138(TC* ac, T1 initialize);
/* New instance of type VARIANT_VIOLATION */
extern T0* GE_new139(TC* ac, T1 initialize);
/* New instance of type LOOP_INVARIANT_VIOLATION */
extern T0* GE_new140(TC* ac, T1 initialize);
/* New instance of type RESCUE_FAILURE */
extern T0* GE_new141(TC* ac, T1 initialize);
/* New instance of type RESUMPTION_FAILURE */
extern T0* GE_new142(TC* ac, T1 initialize);
/* New instance of type CREATE_ON_DEFERRED */
extern T0* GE_new143(TC* ac, T1 initialize);
/* New instance of type EXTERNAL_FAILURE */
extern T0* GE_new144(TC* ac, T1 initialize);
/* New instance of type VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new145(TC* ac, T1 initialize);
/* New instance of type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new146(TC* ac, T1 initialize);
/* New instance of type MISMATCH_FAILURE */
extern T0* GE_new147(TC* ac, T1 initialize);
/* New instance of type DEVELOPER_EXCEPTION */
extern T0* GE_new148(TC* ac, T1 initialize);
/* New instance of type ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new149(TC* ac, T1 initialize);
/* New instance of type SERIALIZATION_FAILURE */
extern T0* GE_new150(TC* ac, T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new151(TC* ac, T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new152(TC* ac, T1 initialize);
/* New instance of type PRIMES */
extern T0* GE_new153(TC* ac, T1 initialize);
/* New instance of type SPECIAL [INTEGER_32] */
extern T0* GE_new154(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [BOOLEAN] */
extern T0* GE_new155(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARGUMENTS_32 */
extern T0* GE_new156(TC* ac, T1 initialize);
/* New instance of type MUTEX */
extern T0* GE_new159(TC* ac, T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new160(TC* ac, T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new161(TC* ac, T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new162(TC* ac, T1 initialize);
/* New instance of type KL_LINKABLE [CHARACTER_8] */
extern T0* GE_new164(TC* ac, T1 initialize);
/* New instance of type FILE_INFO */
extern T0* GE_new166(TC* ac, T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new167(TC* ac, T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new168(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [STRING_8] */
extern T0* GE_new170(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_UNIVERSE] */
extern T0* GE_new171(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_UNIVERSE]] */
extern T0* GE_new172(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
extern T0* GE_new173(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new174(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new175(TC* ac, T1 initialize);
/* New instance of type ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new177(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new178(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new179(TC* ac, T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new181(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new182(TC* ac, T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new183(TC* ac, T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new184(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new186(TC* ac, T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new187(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_UNIVERSE] */
extern T0* GE_new188(TC* ac, T1 initialize);
/* New instance of type ET_MASTER_CLASS */
extern T0* GE_new189(TC* ac, T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new190(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new192(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
extern T0* GE_new193(TC* ac, T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new194(TC* ac, T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new195(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new196(TC* ac, T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new199(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new200(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new202(TC* ac, T1 initialize);
/* New instance of type ET_LIBRARY */
extern T0* GE_new204(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_LIBRARY] */
extern T0* GE_new205(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_LIBRARY]] */
extern T0* GE_new206(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
extern T0* GE_new207(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY */
extern T0* GE_new208(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new209(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new210(TC* ac, T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new211(TC* ac, T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new213(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_OPTION] */
extern T0* GE_new214(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new215(TC* ac, T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new216(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [AP_OPTION] */
extern T0* GE_new217(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new218(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable STRING_8] */
extern T0* GE_new219(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
extern T0* GE_new220(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [STRING_8] */
extern T0* GE_new221(TC* ac, T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new222(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [STRING_8] */
extern T0* GE_new223(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [BOOLEAN] */
extern T0* GE_new226(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [INTEGER_32] */
extern T0* GE_new229(TC* ac, T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new230(TC* ac, T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new232(TC* ac, T1 initialize);
/* New instance of type ET_MASTER_CLASS_CHECKER */
extern T0* GE_new233(TC* ac, T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new234(TC* ac, T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new235(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new236(TC* ac, T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new237(TC* ac, T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new238(TC* ac, T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new239(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new240(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new242(TC* ac, T1 initialize);
/* New instance of type YY_UNICODE_FILE_BUFFER */
extern T0* GE_new244(TC* ac, T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new245(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [INTEGER_32] */
extern T0* GE_new246(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new247(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new248(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new249(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new250(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new251(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
extern T0* GE_new252(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new253(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new254(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new255(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new256(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
extern T0* GE_new257(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUERY] */
extern T0* GE_new258(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PROCEDURE] */
extern T0* GE_new259(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new260(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_NAMED_CLASS] */
extern T0* GE_new261(TC* ac, T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new262(TC* ac, T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new263(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [INTEGER_32] */
extern T0* GE_new264(TC* ac, T1 initialize);
/* New instance of type KL_UNICODE_CHARACTER_BUFFER */
extern T0* GE_new266(TC* ac, T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new268(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new269(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new272(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ANY] */
extern T0* GE_new273(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new274(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new275(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new276(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new277(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new278(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INVARIANT_KEYWORD] */
extern T0* GE_new279(TC* ac, T1 initialize);
/* New instance of type ET_INVARIANT_KEYWORD */
extern T0* GE_new280(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INVARIANT_KEYWORD] */
extern T0* GE_new281(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new282(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new283(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new284(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new285(TC* ac, T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new286(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new287(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new288(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSITION] */
extern T0* GE_new290(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new291(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new293(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new294(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BREAK] */
extern T0* GE_new296(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new297(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new299(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new300(TC* ac, T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new301(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new302(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new303(TC* ac, T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new304(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new305(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
extern T0* GE_new306(TC* ac, T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new307(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IDENTIFIER] */
extern T0* GE_new308(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new309(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new311(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new312(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new313(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new314(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new315(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new317(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new318(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new320(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new321(TC* ac, T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new322(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RESULT] */
extern T0* GE_new323(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new324(TC* ac, T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new325(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new326(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new327(TC* ac, T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new328(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new329(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new330(TC* ac, T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new331(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_VOID] */
extern T0* GE_new332(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new333(TC* ac, T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new334(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new335(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new336(TC* ac, T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new337(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new338(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new339(TC* ac, T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new340(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new341(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new342(TC* ac, T1 initialize);
/* New instance of type ET_ACROSS_EXPRESSION */
extern T0* GE_new343(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new344(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new345(TC* ac, T1 initialize);
/* New instance of type ET_ACROSS_INSTRUCTION */
extern T0* GE_new346(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new347(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new348(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new349(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new350(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new351(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new352(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new353(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new354(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new355(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new357(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new358(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new360(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new361(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new362(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new363(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new364(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new366(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new367(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new368(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new369(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
extern T0* GE_new370(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_NAME_LIST */
extern T0* GE_new371(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME_LIST] */
extern T0* GE_new372(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new373(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new375(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new376(TC* ac, T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new377(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new378(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new379(TC* ac, T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new380(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new381(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new382(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new383(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new384(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new385(TC* ac, T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new386(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new387(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new388(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new390(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new391(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new393(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new394(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new396(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new397(TC* ac, T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new398(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new399(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new400(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLASS] */
extern T0* GE_new401(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new402(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new403(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new404(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new405(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new406(TC* ac, T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new407(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new408(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new409(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new411(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
extern T0* GE_new412(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTANT] */
extern T0* GE_new414(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new415(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new417(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new418(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new419(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new420(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new421(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new422(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new423(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
extern T0* GE_new424(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_RENAME_LIST */
extern T0* GE_new425(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
extern T0* GE_new426(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new427(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new429(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new430(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new432(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new433(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new435(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new436(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new437(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new438(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new439(TC* ac, T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new440(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new441(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
extern T0* GE_new442(TC* ac, T1 initialize);
/* New instance of type ET_CREATION_REGION */
extern T0* GE_new443(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATION_REGION] */
extern T0* GE_new444(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new445(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new446(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new447(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new448(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new449(TC* ac, T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new450(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new451(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new452(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION */
extern T0* GE_new453(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new454(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new455(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION_LIST */
extern T0* GE_new456(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new457(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new458(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new459(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new460(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new461(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new462(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new463(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new464(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new466(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new467(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new468(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
extern T0* GE_new469(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPRESSION] */
extern T0* GE_new471(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new472(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new474(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new475(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new477(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new478(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new480(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new481(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new482(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new483(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new484(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new485(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new486(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new487(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new488(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new489(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new490(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new491(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new493(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new494(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new495(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new496(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new497(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new499(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new500(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new501(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new502(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new503(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new504(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new505(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new506(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new508(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new509(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new510(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new511(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
extern T0* GE_new512(TC* ac, T1 initialize);
/* New instance of type ET_IF_EXPRESSION */
extern T0* GE_new513(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_EXPRESSION] */
extern T0* GE_new514(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new515(TC* ac, T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new516(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new517(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
extern T0* GE_new518(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_AGENT] */
extern T0* GE_new520(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new521(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT */
extern T0* GE_new522(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new523(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new524(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new526(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
extern T0* GE_new527(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENTS */
extern T0* GE_new528(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
extern T0* GE_new529(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
extern T0* GE_new530(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_INSTRUCTION */
extern T0* GE_new531(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
extern T0* GE_new532(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
extern T0* GE_new533(TC* ac, T1 initialize);
/* New instance of type ET_INSPECT_EXPRESSION */
extern T0* GE_new534(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_EXPRESSION] */
extern T0* GE_new535(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new536(TC* ac, T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new537(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new538(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new539(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new541(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new542(TC* ac, T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new543(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new544(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new545(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new546(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new547(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new549(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new550(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new551(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new552(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new553(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new555(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new556(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new557(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new558(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new559(TC* ac, T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new560(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new561(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new562(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new563(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new564(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new565(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new567(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new568(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new569(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new570(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new571(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new572(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new573(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
extern T0* GE_new574(TC* ac, T1 initialize);
/* New instance of type ET_NOTE_LIST */
extern T0* GE_new575(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_LIST] */
extern T0* GE_new576(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
extern T0* GE_new577(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_ITEM] */
extern T0* GE_new579(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
extern T0* GE_new580(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM] */
extern T0* GE_new582(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
extern T0* GE_new583(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM_ITEM] */
extern T0* GE_new585(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
extern T0* GE_new586(TC* ac, T1 initialize);
/* New instance of type ET_NOTE_TERM_LIST */
extern T0* GE_new587(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM_LIST] */
extern T0* GE_new588(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new589(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new591(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new592(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new593(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new594(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new595(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT] */
extern T0* GE_new596(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new597(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CLAUSE_LIST */
extern T0* GE_new598(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new599(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new600(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new601(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new602(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new603(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new604(TC* ac, T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new605(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new606(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
extern T0* GE_new607(TC* ac, T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new608(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECONDITIONS] */
extern T0* GE_new609(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
extern T0* GE_new610(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PROCEDURE] */
extern T0* GE_new612(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new613(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new615(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
extern T0* GE_new616(TC* ac, T1 initialize);
/* New instance of type ET_QUANTIFIER_EXPRESSION */
extern T0* GE_new617(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
extern T0* GE_new618(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
extern T0* GE_new619(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUERY] */
extern T0* GE_new621(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new622(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new624(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new625(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new626(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
extern T0* GE_new627(TC* ac, T1 initialize);
/* New instance of type ET_REPEAT_INSTRUCTION */
extern T0* GE_new628(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
extern T0* GE_new629(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new630(TC* ac, T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new631(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new632(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new633(TC* ac, T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new634(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new635(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
extern T0* GE_new636(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE] */
extern T0* GE_new637(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
extern T0* GE_new638(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT] */
extern T0* GE_new640(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new641(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new643(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
extern T0* GE_new644(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_CONSTRAINT_LIST */
extern T0* GE_new645(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
extern T0* GE_new646(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new647(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new649(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new650(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new652(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new653(TC* ac, T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new654(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new655(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
extern T0* GE_new656(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_EXPRESSION */
extern T0* GE_new657(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_EXPRESSION] */
extern T0* GE_new658(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
extern T0* GE_new659(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_EXPRESSION_LIST */
extern T0* GE_new660(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
extern T0* GE_new661(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new662(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new663(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new664(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new665(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new666(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new667(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new668(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new670(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new672(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_COMPONENT_LIST */
extern T0* GE_new673(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT_LIST */
extern T0* GE_new674(TC* ac, T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new675(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new676(TC* ac, T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new677(TC* ac, T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new678(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new679(TC* ac, T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new680(TC* ac, T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new681(TC* ac, T1 initialize);
/* New instance of type ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new682(TC* ac, T1 initialize);
/* New instance of type ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new683(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new684(TC* ac, T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new685(TC* ac, T1 initialize);
/* New instance of type ET_COMMENT */
extern T0* GE_new686(TC* ac, T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new687(TC* ac, T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new688(TC* ac, T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new689(TC* ac, T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new690(TC* ac, T1 initialize);
/* New instance of type ET_TAGGED_NOTE */
extern T0* GE_new692(TC* ac, T1 initialize);
/* New instance of type ET_NOTE */
extern T0* GE_new693(TC* ac, T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new694(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new695(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_RENAME_CONSTRAINT */
extern T0* GE_new696(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new697(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new698(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new699(TC* ac, T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new700(TC* ac, T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new701(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new703(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new704(TC* ac, T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new706(TC* ac, T1 initialize);
/* New instance of type ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new707(TC* ac, T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new708(TC* ac, T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new709(TC* ac, T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new710(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new711(TC* ac, T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new712(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new714(TC* ac, T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new715(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new716(TC* ac, T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new717(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new718(TC* ac, T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new719(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new720(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_ASSERTION */
extern T0* GE_new723(TC* ac, T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new724(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new726(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new728(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new729(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new730(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new731(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new732(TC* ac, T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new733(TC* ac, T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new735(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new736(TC* ac, T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new738(TC* ac, T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new739(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new740(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new741(TC* ac, T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new743(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new744(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new745(TC* ac, T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new746(TC* ac, T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new747(TC* ac, T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new748(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new749(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new750(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new751(TC* ac, T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new752(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new753(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new754(TC* ac, T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new755(TC* ac, T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new756(TC* ac, T1 initialize);
/* New instance of type ET_OLD_OBJECT_TEST */
extern T0* GE_new757(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new758(TC* ac, T1 initialize);
/* New instance of type ET_NAMED_OBJECT_TEST */
extern T0* GE_new759(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new760(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_CURSOR */
extern T0* GE_new761(TC* ac, T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new763(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new764(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new765(TC* ac, T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new766(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new767(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new768(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new769(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new770(TC* ac, T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new773(TC* ac, T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new774(TC* ac, T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new776(TC* ac, T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new778(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLASS] */
extern T0* GE_new779(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS] */
extern T0* GE_new780(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
extern T0* GE_new781(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new782(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_CODES */
extern T0* GE_new783(TC* ac, T1 initialize);
/* New instance of type ET_ECF_AST_FACTORY */
extern T0* GE_new784(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_SYSTEM] */
extern T0* GE_new785(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET] */
extern T0* GE_new786(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_TARGET]] */
extern T0* GE_new787(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER] */
extern T0* GE_new788(TC* ac, T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new789(TC* ac, T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new790(TC* ac, T1 initialize);
/* New instance of type TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
extern T0* GE_new791(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
extern T0* GE_new792(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
extern T0* GE_new793(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new795(TC* ac, T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new796(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new797(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new799(TC* ac, T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new800(TC* ac, T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new803(TC* ac, T1 initialize);
/* New instance of type ET_ECF_STATE */
extern T0* GE_new804(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM_CONFIG */
extern T0* GE_new805(TC* ac, T1 initialize);
/* New instance of type ET_ECF_LIBRARY */
extern T0* GE_new806(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_LIBRARY] */
extern T0* GE_new808(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
extern T0* GE_new809(TC* ac, T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new810(TC* ac, T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new811(TC* ac, T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new813(TC* ac, T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new814(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
extern T0* GE_new815(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new816(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGET_PARENT */
extern T0* GE_new817(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new818(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
extern T0* GE_new819(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGETS */
extern T0* GE_new820(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new821(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new822(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_LIBRARY] */
extern T0* GE_new824(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new825(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
extern T0* GE_new826(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new828(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new830(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_8, STRING_8] */
extern T0* GE_new831(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ERROR */
extern T0* GE_new832(TC* ac, T1 initialize);
/* New instance of type ET_ECF_OPTIONS */
extern T0* GE_new833(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CLUSTERS */
extern T0* GE_new834(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_HASH_FUNCTION [STRING_8] */
extern T0* GE_new835(TC* ac, T1 initialize);
/* New instance of type TUPLE [STRING_8] */
extern T0* GE_new836(TC* ac, T1 initialize);
/* New instance of type FUNCTION [TUPLE [STRING_8], INTEGER_32] */
extern T0* GE_new837(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_STRING_ROUTINES] */
extern T0* GE_new838(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
extern T0* GE_new840(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLUSTER] */
extern T0* GE_new842(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE */
extern T0* GE_new843(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new844(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
extern T0* GE_new845(TC* ac, T1 initialize);
/* New instance of type TUPLE [INTEGER_32] */
extern T0* GE_new846(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new847(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new848(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new850(TC* ac, T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new852(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new853(TC* ac, T1 initialize);
/* New instance of type ARRAY [ET_TYPE] */
extern T0* GE_new854(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE] */
extern T0* GE_new855(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_SYSTEM_MULTIPROCESSOR */
extern T0* GE_new858(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [STRING_8] */
extern T0* GE_new859(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_8] */
extern T0* GE_new860(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new862(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new863(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE] */
extern T0* GE_new864(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new865(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new866(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new867(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new869(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
extern T0* GE_new872(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new873(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new874(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new875(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new876(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new877(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new878(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new879(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new880(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
extern T0* GE_new881(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_ITEM_SCOPE */
extern T0* GE_new882(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new883(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
extern T0* GE_new884(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE */
extern T0* GE_new885(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new886(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new887(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new888(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NOTE_TERM] */
extern T0* GE_new889(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new890(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_BASE_CLASS_CHECKER */
extern T0* GE_new891(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new893(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new894(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32] */
extern T0* GE_new896(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32] */
extern T0* GE_new897(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32] */
extern T0* GE_new898(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new904(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new907(TC* ac, T1 initialize);
/* New instance of type NATIVE_STRING */
extern T0* GE_new909(TC* ac, T1 initialize);
/* New instance of type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
extern T0* GE_new910(TC* ac, T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new912(TC* ac, T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new913(TC* ac, T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new914(TC* ac, T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new916(TC* ac, T1 initialize);
/* New instance of type ARRAY [RX_CHARACTER_SET] */
extern T0* GE_new917(TC* ac, T1 initialize);
/* New instance of type SPECIAL [RX_CHARACTER_SET] */
extern T0* GE_new918(TC* ac, T6 a1, T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new919(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new920(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [NATURAL_32] */
extern T0* GE_new921(TC* ac, T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new922(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OLD_EXPRESSION] */
extern T0* GE_new923(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION] */
extern T0* GE_new924(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_IDENTIFIER] */
extern T0* GE_new925(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new926(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [BOOLEAN] */
extern T0* GE_new927(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new928(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new929(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new930(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new931(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new932(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new933(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_RESULT] */
extern T0* GE_new934(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
extern T0* GE_new935(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new936(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new937(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_EXPRESSION] */
extern T0* GE_new938(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EXPRESSION] */
extern T0* GE_new939(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
extern T0* GE_new940(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new941(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new942(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new943(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32] */
extern T0* GE_new944(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, INTEGER_32] */
extern T0* GE_new945(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [INTEGER_32] */
extern T0* GE_new946(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32] */
extern T0* GE_new947(TC* ac, T1 initialize);
/* New instance of type ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
extern T0* GE_new948(TC* ac, T1 initialize);
/* New instance of type ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
extern T0* GE_new950(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new951(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE] */
extern T0* GE_new952(TC* ac, T1 initialize);
/* New instance of type ARRAY [INTEGER_32] */
extern T0* GE_new953(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new954(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new955(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new956(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new957(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new958(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
extern T0* GE_new959(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_FEATURE] */
extern T0* GE_new960(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, STRING_8] */
extern T0* GE_new961(TC* ac, T1 initialize);
/* New instance of type DS_STRING_HASH_TABLE */
extern T0* GE_new962(TC* ac, T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new963(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new964(TC* ac, T1 initialize);
/* New instance of type UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
extern T0* GE_new965(TC* ac, T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new966(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new967(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [STRING_8] */
extern T0* GE_new968(TC* ac, T1 initialize);
/* New instance of type UC_STRING_COMPARATOR */
extern T0* GE_new969(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
extern T0* GE_new970(TC* ac, T1 initialize);
/* New instance of type TUPLE [STRING_8, STRING_8] */
extern T0* GE_new973(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new974(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_TYPES */
extern T0* GE_new975(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
extern T0* GE_new977(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new978(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new980(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SECONDARY_TYPE */
extern T0* GE_new981(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
extern T0* GE_new982(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new988(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_INLINED_EXPRESSION */
extern T0* GE_new992(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_CALL_CONTEXT */
extern T0* GE_new993(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [INTEGER_32] */
extern T0* GE_new994(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE] */
extern T0* GE_new996(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new997(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new998(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new999(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new1000(TC* ac, T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new1001(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new1006(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1007(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new1011(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new1016(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
extern T0* GE_new1017(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1018(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1019(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1020(TC* ac, T1 initialize);
/* New instance of type TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
extern T0* GE_new1023(TC* ac, T1 initialize);
/* New instance of type WORKER_THREAD */
extern T0* GE_new1024(TC* ac, T1 initialize);
/* New instance of type PATH */
extern T0* GE_new1026(TC* ac, T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new1027(TC* ac, T1 initialize);
/* New instance of type STRING_8_SEARCHER */
extern T0* GE_new1029(TC* ac, T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new1031(TC* ac, T1 initialize);
/* New instance of type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new1032(TC* ac, T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new1034(TC* ac, T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new1035(TC* ac, T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new1036(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, STRING_8] */
extern T0* GE_new1041(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1044(TC* ac, T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new1045(TC* ac, T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new1046(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [INTEGER_32] */
extern T0* GE_new1047(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_CONFIG] */
extern T0* GE_new1050(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
extern T0* GE_new1052(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1054(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new1055(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
extern T0* GE_new1056(TC* ac, T1 initialize);
/* New instance of type ET_ECF_REDIRECTION_CONFIG */
extern T0* GE_new1058(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new1059(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new1060(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new1061(TC* ac, T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new1062(TC* ac, T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new1063(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
extern T0* GE_new1064(TC* ac, T1 initialize);
/* New instance of type CELL [INTEGER_32] */
extern T0* GE_new1067(TC* ac, T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new1069(TC* ac, T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new1070(TC* ac, T1 initialize);
/* New instance of type KL_WINDOWS_INPUT_FILE */
extern T0* GE_new1071(TC* ac, T1 initialize);
/* New instance of type KL_UNIX_INPUT_FILE */
extern T0* GE_new1072(TC* ac, T1 initialize);
/* New instance of type ARRAY [IMMUTABLE_STRING_32] */
extern T0* GE_new1073(TC* ac, T1 initialize);
/* New instance of type SPECIAL [IMMUTABLE_STRING_32] */
extern T0* GE_new1074(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [NATURAL_8] */
extern T0* GE_new1075(TC* ac, T6 a1, T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new1078(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1079(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1080(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1081(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_MASTER_CLASS] */
extern T0* GE_new1082(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
extern T0* GE_new1085(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
extern T0* GE_new1086(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new1087(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new1088(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_ITEM] */
extern T0* GE_new1090(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
extern T0* GE_new1091(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_ITEM] */
extern T0* GE_new1092(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
extern T0* GE_new1093(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1094(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1096(TC* ac, T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new1097(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
extern T0* GE_new1098(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1100(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_UNIVERSE] */
extern T0* GE_new1101(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
extern T0* GE_new1102(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_MASTER_CLASS] */
extern T0* GE_new1103(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new1104(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new1105(TC* ac, T1 initialize);
/* New instance of type SPECIAL [AP_OPTION] */
extern T0* GE_new1107(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_OPTION] */
extern T0* GE_new1108(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new1109(TC* ac, T1 initialize);
/* New instance of type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new1110(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new1111(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable STRING_8] */
extern T0* GE_new1112(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable STRING_8] */
extern T0* GE_new1113(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [STRING_8] */
extern T0* GE_new1114(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [BOOLEAN] */
extern T0* GE_new1115(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new1116(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [INTEGER_32] */
extern T0* GE_new1117(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new1118(TC* ac, T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new1120(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
extern T0* GE_new1121(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1122(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new1123(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1124(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1125(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1126(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1128(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1129(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
extern T0* GE_new1131(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1132(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1133(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1134(TC* ac, T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1135(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1136(TC* ac, T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1137(TC* ac, T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1138(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1139(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1140(TC* ac, T1 initialize);
/* New instance of type ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1141(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1142(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1143(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_CLASS] */
extern T0* GE_new1144(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1145(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1146(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1147(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
extern T0* GE_new1148(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1149(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_PROCEDURE] */
extern T0* GE_new1150(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_QUERY] */
extern T0* GE_new1151(TC* ac, T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new1152(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new1153(TC* ac, T1 initialize);
/* New instance of type YY_UNICODE_BUFFER */
extern T0* GE_new1155(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1156(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1157(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST_LIST] */
extern T0* GE_new1158(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
extern T0* GE_new1159(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1160(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1161(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1162(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1163(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1164(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1165(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1166(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1167(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new1168(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
extern T0* GE_new1169(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
extern T0* GE_new1170(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_QUERY] */
extern T0* GE_new1171(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
extern T0* GE_new1172(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUERY] */
extern T0* GE_new1173(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PROCEDURE] */
extern T0* GE_new1174(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1175(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
extern T0* GE_new1176(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1177(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
extern T0* GE_new1178(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_CLASS] */
extern T0* GE_new1179(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
extern T0* GE_new1180(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new1182(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
extern T0* GE_new1184(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INSTRUCTION] */
extern T0* GE_new1186(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
extern T0* GE_new1187(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new1189(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new1190(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1191(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1192(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ITERATION_COMPONENT] */
extern T0* GE_new1193(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
extern T0* GE_new1194(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1195(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1196(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new1197(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
extern T0* GE_new1198(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1199(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new1200(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_LIBRARY] */
extern T0* GE_new1201(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
extern T0* GE_new1204(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new1205(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new1208(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new1209(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new1210(TC* ac, T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new1211(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_POSITION] */
extern T0* GE_new1213(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
extern T0* GE_new1214(TC* ac, T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new1215(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1216(TC* ac, T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new1218(TC* ac, T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new1220(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1221(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new1222(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1223(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new1224(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1225(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new1226(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new1227(TC* ac, T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new1228(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new1229(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1230(TC* ac, T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new1231(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1232(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new1233(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1234(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new1235(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1236(TC* ac, T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new1237(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1238(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new1239(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [STRING_8] */
extern T0* GE_new1240(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new1241(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [BOOLEAN] */
extern T0* GE_new1242(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
extern T0* GE_new1243(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new1244(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_DECLARATION] */
extern T0* GE_new1245(TC* ac, T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new1248(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new1249(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new1251(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new1252(TC* ac, T1 initialize);
/* New instance of type ARRAY [XM_CALLBACKS_FILTER] */
extern T0* GE_new1253(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_CALLBACKS_FILTER] */
extern T0* GE_new1254(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET [XM_NAMESPACE] */
extern T0* GE_new1255(TC* ac, T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
extern T0* GE_new1256(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new1259(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new1261(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
extern T0* GE_new1262(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new1263(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET] */
extern T0* GE_new1264(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
extern T0* GE_new1266(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new1268(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new1269(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new1270(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new1271(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
extern T0* GE_new1275(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new1276(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
extern T0* GE_new1277(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
extern T0* GE_new1278(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLUSTER] */
extern T0* GE_new1279(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
extern T0* GE_new1280(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
extern T0* GE_new1281(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new1282(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_FEATURE] */
extern T0* GE_new1283(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
extern T0* GE_new1284(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
extern T0* GE_new1286(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
extern T0* GE_new1287(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
extern T0* GE_new1288(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_N */
extern T0* GE_new1290(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE] */
extern T0* GE_new1291(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1292(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new1293(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1294(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1295(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE] */
extern T0* GE_new1296(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE] */
extern T0* GE_new1297(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE] */
extern T0* GE_new1298(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
extern T0* GE_new1300(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
extern T0* GE_new1301(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new1302(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
extern T0* GE_new1303(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1304(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1305(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1306(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1307(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1308(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1309(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new1310(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FEATURE] */
extern T0* GE_new1311(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new1312(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new1313(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new1314(TC* ac, T1 initialize);
/* New instance of type TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1315(TC* ac, T1 initialize);
/* New instance of type SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new1316(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new1317(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1318(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1319(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1320(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1321(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1324(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
extern T0* GE_new1325(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
extern T0* GE_new1327(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1329(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1330(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1332(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1333(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1334(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new1335(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTIONS] */
extern T0* GE_new1336(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
extern T0* GE_new1338(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
extern T0* GE_new1339(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_TERM] */
extern T0* GE_new1340(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
extern T0* GE_new1341(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new1342(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new1343(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new1344(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
extern T0* GE_new1345(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PRECONDITIONS] */
extern T0* GE_new1346(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
extern T0* GE_new1347(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_POSTCONDITIONS] */
extern T0* GE_new1348(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
extern T0* GE_new1349(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INVARIANTS] */
extern T0* GE_new1350(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [NATIVE_STRING] */
extern T0* GE_new1351(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [NATURAL_32] */
extern T0* GE_new1352(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [RX_CHARACTER_SET] */
extern T0* GE_new1353(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_32] */
extern T0* GE_new1354(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATURAL_64] */
extern T0* GE_new1355(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
extern T0* GE_new1356(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
extern T0* GE_new1357(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ARRAY [INTEGER_32]] */
extern T0* GE_new1358(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
extern T0* GE_new1359(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new1360(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [NATURAL_32] */
extern T0* GE_new1363(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OLD_EXPRESSION] */
extern T0* GE_new1365(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_OLD_EXPRESSION] */
extern T0* GE_new1366(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OLD_EXPRESSION] */
extern T0* GE_new1367(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, ET_OLD_EXPRESSION] */
extern T0* GE_new1369(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new1370(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1371(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1372(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1373(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new1374(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1375(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1376(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1377(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new1378(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new1379(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new1380(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new1381(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new1382(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new1383(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1384(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1385(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1386(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1387(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1388(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1389(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1390(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1391(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1392(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RESULT] */
extern T0* GE_new1393(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RESULT] */
extern T0* GE_new1394(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
extern T0* GE_new1395(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1396(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1397(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1398(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION] */
extern T0* GE_new1399(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
extern T0* GE_new1400(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
extern T0* GE_new1401(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [INTEGER_32] */
extern T0* GE_new1402(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
extern T0* GE_new1403(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1404(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST] */
extern T0* GE_new1406(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
extern T0* GE_new1407(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, INTEGER_32] */
extern T0* GE_new1409(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [INTEGER_32] */
extern T0* GE_new1410(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT] */
extern T0* GE_new1413(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT] */
extern T0* GE_new1414(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1415(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1416(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1417(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_STANDALONE_CLOSURE] */
extern T0* GE_new1419(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_STANDALONE_CLOSURE] */
extern T0* GE_new1420(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_STANDALONE_CLOSURE] */
extern T0* GE_new1421(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new1422(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONSTANT] */
extern T0* GE_new1423(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
extern T0* GE_new1425(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new1426(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_CONSTANT] */
extern T0* GE_new1427(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
extern T0* GE_new1429(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new1430(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1432(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new1433(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new1434(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new1435(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new1436(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new1437(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new1438(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new1439(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new1440(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new1441(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
extern T0* GE_new1444(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1448(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1449(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1450(TC* ac, T1 initialize);
/* New instance of type SPECIAL [TUPLE [STRING_8, detachable STRING_8]] */
extern T0* GE_new1451(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]] */
extern T0* GE_new1453(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [TUPLE [STRING_8, detachable STRING_8], STRING_8] */
extern T0* GE_new1454(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1455(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1456(TC* ac, T1 initialize);
/* New instance of type ARRAY [BOOLEAN] */
extern T0* GE_new1457(TC* ac, T1 initialize);
/* New instance of type THREAD_ATTRIBUTES */
extern T0* GE_new1459(TC* ac, T1 initialize);
/* New instance of type CELL [BOOLEAN] */
extern T0* GE_new1460(TC* ac, T1 initialize);
/* New instance of type CHARACTER_PROPERTY */
extern T0* GE_new1462(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new1463(TC* ac, T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new1464(TC* ac, T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new1465(TC* ac, T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new1466(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1467(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1468(TC* ac, T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1469(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1471(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1474(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CREATOR] */
extern T0* GE_new1475(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CREATOR] */
extern T0* GE_new1476(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1477(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1478(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_ECF_NOTE_ELEMENT */
extern T0* GE_new1479(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new1480(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new1481(TC* ac, T1 initialize);
/* New instance of type ET_ECF_FILE_RULES */
extern T0* GE_new1482(TC* ac, T1 initialize);
/* New instance of type ET_ECF_NAMESPACES */
extern T0* GE_new1483(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAGS */
extern T0* GE_new1484(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new1485(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new1486(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAGS */
extern T0* GE_new1487(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKES */
extern T0* GE_new1488(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new1489(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCES */
extern T0* GE_new1490(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ACTION] */
extern T0* GE_new1491(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
extern T0* GE_new1492(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VERSION */
extern T0* GE_new1494(TC* ac, T1 initialize);
/* New instance of type ET_ECF_NAMESPACE */
extern T0* GE_new1495(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAG */
extern T0* GE_new1496(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new1497(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new1498(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAG */
extern T0* GE_new1499(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKE */
extern T0* GE_new1500(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new1501(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCE */
extern T0* GE_new1502(TC* ac, T1 initialize);
/* New instance of type ET_ECF_FILE_RULE */
extern T0* GE_new1503(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ACTION */
extern T0* GE_new1504(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new1505(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1506(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_OPTIONS] */
extern T0* GE_new1507(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
extern T0* GE_new1508(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ROOT_CLASS */
extern T0* GE_new1509(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new1510(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ORED_CONDITIONS */
extern T0* GE_new1511(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ANDED_CONDITIONS */
extern T0* GE_new1512(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VISIBLE_CLASS */
extern T0* GE_new1513(TC* ac, T1 initialize);
/* New instance of type ET_ECF_BUILD_CONDITION */
extern T0* GE_new1515(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new1516(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VOID_SAFETY_CONDITION */
extern T0* GE_new1517(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new1518(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DOTNET_CONDITION */
extern T0* GE_new1519(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new1520(TC* ac, T1 initialize);
/* New instance of type ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new1521(TC* ac, T1 initialize);
/* New instance of type ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new1523(TC* ac, T1 initialize);
/* New instance of type ET_ECF_MSIL_CLR_VERSION_CONDITION */
extern T0* GE_new1524(TC* ac, T1 initialize);
/* New instance of type UT_COUNTER */
extern T0* GE_new1526(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_CLASS] */
extern T0* GE_new1527(TC* ac, T1 initialize);
/* New instance of type TUPLE [UT_COUNTER] */
extern T0* GE_new1528(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
extern T0* GE_new1529(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
extern T0* GE_new1530(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new1531(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1533(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new1534(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new1535(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1536(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new1537(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new1538(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new1539(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1540(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLUSTER] */
extern T0* GE_new1541(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_CLUSTER]] */
extern T0* GE_new1542(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM] */
extern T0* GE_new1543(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1544(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new1545(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1546(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new1547(TC* ac, T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new1548(TC* ac, T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new1549(TC* ac, T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new1550(TC* ac, T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new1551(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new1552(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new1553(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new1554(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new1555(TC* ac, T1 initialize);
/* New instance of type TUPLE [BOOLEAN] */
extern T0* GE_new1556(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
extern T0* GE_new1559(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new1563(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
extern T0* GE_new1564(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_EXPRESSION */
extern T0* GE_new1565(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_LIBRARY] */
extern T0* GE_new1568(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_LIBRARY]] */
extern T0* GE_new1569(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RENAME_ITEM] */
extern T0* GE_new1573(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
extern T0* GE_new1574(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPORT] */
extern T0* GE_new1576(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPORT] */
extern T0* GE_new1577(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new1580(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1582(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_QUERY] */
extern T0* GE_new1583(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_PROCEDURE] */
extern T0* GE_new1584(TC* ac, T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1585(TC* ac, T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1587(TC* ac, T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new1595(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1597(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1598(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ALIAS_NAME] */
extern T0* GE_new1599(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
extern T0* GE_new1600(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1601(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE_ITEM] */
extern T0* GE_new1603(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
extern T0* GE_new1604(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1605(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1607(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1608(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1610(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1611(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1612(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_PART] */
extern T0* GE_new1613(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
extern T0* GE_new1614(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_CLAUSE] */
extern T0* GE_new1615(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
extern T0* GE_new1616(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1617(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1619(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1620(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1621(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1622(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1624(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1626(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1627(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_ITEM] */
extern T0* GE_new1629(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
extern T0* GE_new1630(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_TERM_ITEM] */
extern T0* GE_new1631(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
extern T0* GE_new1632(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_LIST] */
extern T0* GE_new1633(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
extern T0* GE_new1634(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1636(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1637(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_EXPRESSION] */
extern T0* GE_new1638(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
extern T0* GE_new1639(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_PART] */
extern T0* GE_new1640(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
extern T0* GE_new1641(TC* ac, T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_ELEMENT_NODE] */
extern T0* GE_new1643(TC* ac, T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new1645(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1647(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1648(TC* ac, T1 initialize);
/* New instance of type DS_PAIR [XM_POSITION, XM_NODE] */
extern T0* GE_new1649(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new1650(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
extern T0* GE_new1651(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET] */
extern T0* GE_new1652(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new1653(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1654(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1656(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
extern T0* GE_new1657(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new1659(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
extern T0* GE_new1662(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE] */
extern T0* GE_new1663(TC* ac, T6 a1, T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new1668(TC* ac, T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new1669(TC* ac, T1 initialize);
/* New instance of type C_DATE */
extern T0* GE_new1670(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new1672(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1673(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1674(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1675(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1677(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [YY_BUFFER] */
extern T0* GE_new1678(TC* ac, T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1679(TC* ac, T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1680(TC* ac, T1 initialize);
/* New instance of type ARRAY [detachable STRING_8] */
extern T0* GE_new1681(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1683(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1684(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1685(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1686(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1687(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1688(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_ITEM] */
extern T0* GE_new1689(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
extern T0* GE_new1690(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
extern T0* GE_new1691(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1692(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1694(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [NATURAL_32] */
extern T0* GE_new1695(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_CONSTRAINT_LIST */
extern T0* GE_new1696(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1697(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new1698(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME] */
extern T0* GE_new1701(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
extern T0* GE_new1702(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
extern T0* GE_new1703(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1705(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
extern T0* GE_new1706(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new1707(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
extern T0* GE_new1708(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1710(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT] */
extern T0* GE_new1711(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT] */
extern T0* GE_new1712(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE_NAME] */
extern T0* GE_new1713(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1714(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1715(TC* ac, T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1717(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
extern T0* GE_new1718(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1719(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1720(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_FEATURE] */
extern T0* GE_new1721(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1723(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
extern T0* GE_new1725(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
extern T0* GE_new1726(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
extern T0* GE_new1727(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1728(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1729(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new1730(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1731(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CLASS] */
extern T0* GE_new1734(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1736(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RENAME] */
extern T0* GE_new1737(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME] */
extern T0* GE_new1740(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
extern T0* GE_new1744(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1745(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_QUERY] */
extern T0* GE_new1746(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_8] */
extern T0* GE_new1749(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1750(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1751(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_POSITION] */
extern T0* GE_new1752(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
extern T0* GE_new1753(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [XM_EIFFEL_SCANNER] */
extern T0* GE_new1754(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1755(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1758(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1759(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1762(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1763(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1764(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1765(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1766(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1767(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [STRING_8] */
extern T0* GE_new1768(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1769(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [detachable STRING_8] */
extern T0* GE_new1772(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [STRING_8] */
extern T0* GE_new1773(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [XM_NAMESPACE] */
extern T0* GE_new1774(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
extern T0* GE_new1775(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
extern T0* GE_new1776(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_NAMESPACE] */
extern T0* GE_new1777(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_LINKABLE [XM_DOCUMENT_NODE] */
extern T0* GE_new1778(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1780(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
extern T0* GE_new1781(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
extern T0* GE_new1783(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CALL_NAME] */
extern T0* GE_new1785(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
extern T0* GE_new1787(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
extern T0* GE_new1788(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
extern T0* GE_new1789(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
extern T0* GE_new1790(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
extern T0* GE_new1792(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
extern T0* GE_new1793(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1794(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1795(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1796(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
extern T0* GE_new1797(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_CLASS] */
extern T0* GE_new1799(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
extern T0* GE_new1800(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1801(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
extern T0* GE_new1802(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1803(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
extern T0* GE_new1804(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
extern T0* GE_new1805(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_64] */
extern T0* GE_new1810(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1814(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1815(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1816(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1817(TC* ac, T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new1819(TC* ac, T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new1821(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ANY] */
extern T0* GE_new1822(TC* ac, T1 initialize);
/* New instance of type TUPLE [UT_TRISTATE] */
extern T0* GE_new1823(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
extern T0* GE_new1824(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new1825(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE] */
extern T0* GE_new1826(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1828(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1829(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1830(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1831(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_UNIVERSE]] */
extern T0* GE_new1832(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
extern T0* GE_new1833(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
extern T0* GE_new1834(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new1836(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
extern T0* GE_new1837(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new1838(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new1839(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1847(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_CLASS] */
extern T0* GE_new1848(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new1849(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1851(TC* ac, T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1853(TC* ac, T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1856(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLIENT_LIST] */
extern T0* GE_new1860(TC* ac, T1 initialize);
/* New instance of type ET_STANDARD_ONCE_KEYS */
extern T0* GE_new1864(TC* ac, T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new1867(TC* ac, T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1868(TC* ac, T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new1869(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_SYMBOL */
extern T0* GE_new1885(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_INSTRUCTION */
extern T0* GE_new1888(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new1892(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new1893(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new1894(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new1896(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1899(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1900(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
extern T0* GE_new1908(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_RENAME_CONSTRAINT */
extern T0* GE_new1910(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1913(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATURAL_16] */
extern T0* GE_new1922(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARRAY [NATURAL_16] */
extern T0* GE_new1923(TC* ac, T1 initialize);
/* New instance of type ARRAY [NATURAL_32] */
extern T0* GE_new1924(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1925(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1926(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1927(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1928(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1929(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
extern T0* GE_new1930(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_NAMESPACE] */
extern T0* GE_new1931(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1932(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1933(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1934(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1935(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1936(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1937(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1938(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
extern T0* GE_new1939(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ACTION] */
extern T0* GE_new1940(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
extern T0* GE_new1941(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1942(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_OPTIONS] */
extern T0* GE_new1943(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
extern T0* GE_new1946(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1947(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1948(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1949(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1950(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1951(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1952(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1953(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1954(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1956(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1958(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1959(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1960(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1961(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1962(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1963(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_LIBRARY] */
extern T0* GE_new1964(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
extern T0* GE_new1965(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LIBRARY] */
extern T0* GE_new1966(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_DFA_WILDCARD */
extern T0* GE_new1967(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
extern T0* GE_new1968(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [CHARACTER_8] */
extern T0* GE_new1971(TC* ac, T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new1972(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
extern T0* GE_new1973(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1974(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1975(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1976(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1977(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1978(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1979(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CLUSTER] */
extern T0* GE_new1980(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
extern T0* GE_new1981(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
extern T0* GE_new1982(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TARGET] */
extern T0* GE_new1983(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
extern T0* GE_new1984(TC* ac, T1 initialize);
/* New instance of type SPECIAL [YY_BUFFER] */
extern T0* GE_new1985(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [YY_BUFFER] */
extern T0* GE_new1986(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1988(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1989(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1990(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1991(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
extern T0* GE_new1992(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
extern T0* GE_new1993(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1994(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1996(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1997(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1999(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
extern T0* GE_new2000(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_ADAPTED_FEATURE] */
extern T0* GE_new2001(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
extern T0* GE_new2002(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_FEATURE] */
extern T0* GE_new2003(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new2004(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new2005(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new2006(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
extern T0* GE_new2007(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new2008(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new2011(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new2012(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new2013(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_DOTNET_FEATURE] */
extern T0* GE_new2014(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new2015(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_FEATURE] */
extern T0* GE_new2016(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
extern T0* GE_new2017(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
extern T0* GE_new2018(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new2020(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new2021(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new2022(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new2023(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new2024(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new2025(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new2027(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new2028(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [detachable STRING_8] */
extern T0* GE_new2029(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new2030(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new2031(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2032(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_CLUSTER] */
extern T0* GE_new2033(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
extern T0* GE_new2034(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new2035(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2037(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
extern T0* GE_new2038(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2039(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new2040(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [STRING_8]] */
extern T0* GE_new2043(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new2044(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
extern T0* GE_new2045(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new2046(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new2047(TC* ac, T1 initialize);
/* New instance of type ET_AST_PRETTY_PRINTER */
extern T0* GE_new2052(TC* ac, T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new2054(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new2055(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new2056(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new2057(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_GROUP] */
extern T0* GE_new2065(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
extern T0* GE_new2066(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2067(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new2068(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new2069(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new2070(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [XM_ELEMENT_NODE] */
extern T0* GE_new2082(TC* ac, T1 initialize);
/* New instance of type TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
extern T0* GE_new2083(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
extern T0* GE_new2086(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2092(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
extern T0* GE_new2093(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
extern T0* GE_new2094(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2095(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new2096(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2097(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new2098(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2099(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
extern T0* GE_new2100(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2101(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
extern T0* GE_new2102(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2103(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new2104(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2105(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
extern T0* GE_new2106(TC* ac, T1 initialize);
/* New instance of type TUPLE [LX_WILDCARD] */
extern T0* GE_new2109(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [LX_WILDCARD]] */
extern T0* GE_new2110(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
extern T0* GE_new2111(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [STRING_8]] */
extern T0* GE_new2113(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_STRING_ROUTINES, STRING_8] */
extern T0* GE_new2114(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new2116(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2118(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2119(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new2120(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2122(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2123(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2124(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2125(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2126(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2127(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
extern T0* GE_new2128(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_FILE_RULE] */
extern T0* GE_new2129(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
extern T0* GE_new2130(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE] */
extern T0* GE_new2131(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_NAMESPACE] */
extern T0* GE_new2132(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE] */
extern T0* GE_new2133(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2134(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2135(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2136(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2137(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2138(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2139(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2140(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2141(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2142(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2143(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2144(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2145(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2146(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2147(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2148(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2149(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2150(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2151(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2152(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2153(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2154(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2155(TC* ac, T1 initialize);
/* New instance of type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2156(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2157(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new2158(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new2159(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new2160(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new2161(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new2162(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new2163(TC* ac, T1 initialize);
/* New instance of type LX_WILDCARD_PARSER */
extern T0* GE_new2165(TC* ac, T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new2166(TC* ac, T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new2167(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_WILDCARD] */
extern T0* GE_new2169(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
extern T0* GE_new2172(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
extern T0* GE_new2173(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [CHARACTER_8] */
extern T0* GE_new2174(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new2176(TC* ac, T1 initialize);
/* New instance of type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new2177(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new2180(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new2181(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new2182(TC* ac, T1 initialize);
/* New instance of type ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new2183(TC* ac, T1 initialize);
/* New instance of type ET_UNIVERSE_ERROR */
extern T0* GE_new2184(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new2185(TC* ac, T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new2186(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [AP_OPTION] */
extern T0* GE_new2187(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new2190(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new2191(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_FILE_RULE] */
extern T0* GE_new2194(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new2195(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new2197(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_FILE_RULES] */
extern T0* GE_new2198(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_STATE] */
extern T0* GE_new2199(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
extern T0* GE_new2202(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
extern T0* GE_new2205(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
extern T0* GE_new2206(TC* ac, T1 initialize);
/* New instance of type ET_COMMENT_FINDER */
extern T0* GE_new2208(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_BREAK] */
extern T0* GE_new2209(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_BREAK] */
extern T0* GE_new2210(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_BREAK]] */
extern T0* GE_new2211(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_AST_PRETTY_PRINTER] */
extern T0* GE_new2212(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_RULE] */
extern T0* GE_new2213(TC* ac, T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new2214(TC* ac, T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new2215(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
extern T0* GE_new2216(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new2217(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_32, STRING_8] */
extern T0* GE_new2218(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [LX_SYMBOL_CLASS] */
extern T0* GE_new2219(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
extern T0* GE_new2220(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [STRING_32] */
extern T0* GE_new2221(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [BOOLEAN] */
extern T0* GE_new2222(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_32] */
extern T0* GE_new2223(TC* ac, T1 initialize);
/* New instance of type SPECIAL [STRING_32] */
extern T0* GE_new2224(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
extern T0* GE_new2225(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_SYMBOL_CLASS] */
extern T0* GE_new2226(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA] */
extern T0* GE_new2227(TC* ac, T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new2228(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_NFA] */
extern T0* GE_new2229(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new2230(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
extern T0* GE_new2231(TC* ac, T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new2232(TC* ac, T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new2233(TC* ac, T1 initialize);
/* New instance of type LX_INVALID_UNICODE_CHARACTER_ERROR */
extern T0* GE_new2234(TC* ac, T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new2235(TC* ac, T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new2236(TC* ac, T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new2237(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new2238(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new2239(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new2240(TC* ac, T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new2241(TC* ac, T1 initialize);
/* New instance of type ARRAY [LX_RULE] */
extern T0* GE_new2242(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_RULE] */
extern T0* GE_new2243(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new2244(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA_STATE] */
extern T0* GE_new2245(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_DFA_STATE] */
extern T0* GE_new2246(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new2247(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [LX_RULE] */
extern T0* GE_new2248(TC* ac, T1 initialize);
/* New instance of type ARRAY [detachable LX_RULE] */
extern T0* GE_new2249(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable LX_RULE] */
extern T0* GE_new2250(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new2251(TC* ac, T1 initialize);
/* New instance of type LX_TRANSITION_TABLE [LX_DFA_STATE] */
extern T0* GE_new2252(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA] */
extern T0* GE_new2253(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
extern T0* GE_new2254(TC* ac, T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new2255(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new2261(TC* ac, T1 initialize);
/* New instance of type TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2262(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new2263(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [STRING_8]] */
extern T0* GE_new2266(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_PARENT_FEATURE] */
extern T0* GE_new2268(TC* ac, T1 initialize);
/* New instance of type ARRAY [detachable LX_SYMBOL_CLASS] */
extern T0* GE_new2269(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable LX_SYMBOL_CLASS] */
extern T0* GE_new2270(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
extern T0* GE_new2271(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
extern T0* GE_new2272(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2273(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
extern T0* GE_new2274(TC* ac, T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new2275(TC* ac, T1 initialize);
/* New instance of type ET_AST_NULL_LEAF */
extern T0* GE_new2276(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_AST_NODE] */
extern T0* GE_new2277(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_BREAK] */
extern T0* GE_new2279(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BREAK] */
extern T0* GE_new2280(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_BREAK] */
extern T0* GE_new2281(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_RULE] */
extern T0* GE_new2282(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
extern T0* GE_new2283(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [STRING_8] */
extern T0* GE_new2284(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_START_CONDITION] */
extern T0* GE_new2285(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
extern T0* GE_new2286(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
extern T0* GE_new2287(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
extern T0* GE_new2288(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
extern T0* GE_new2289(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
extern T0* GE_new2291(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
extern T0* GE_new2292(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable SPECIAL [NATURAL_64]] */
extern T0* GE_new2293(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
extern T0* GE_new2295(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
extern T0* GE_new2297(TC* ac, T1 initialize);
/* New instance of type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2298(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2301(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2302(TC* ac, T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new2304(TC* ac, T1 initialize);
/* New instance of type ARRAY [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new2305(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [INTEGER_32] */
extern T0* GE_new2306(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new2307(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_NFA_STATE] */
extern T0* GE_new2308(TC* ac, T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_RULE] */
extern T0* GE_new2310(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_NFA_STATE] */
extern T0* GE_new2312(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
extern T0* GE_new2314(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
extern T0* GE_new2315(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_DFA_STATE] */
extern T0* GE_new2317(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
extern T0* GE_new2318(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
extern T0* GE_new2319(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY [LX_RULE] */
extern T0* GE_new2320(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
extern T0* GE_new2321(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
extern T0* GE_new2322(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
extern T0* GE_new2324(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2325(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2326(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_LIBRARY] */
extern T0* GE_new2327(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2329(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_RULE] */
extern T0* GE_new2334(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
extern T0* GE_new2337(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2340(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2341(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2342(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
extern T0* GE_new2343(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AST_NODE] */
extern T0* GE_new2345(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AST_NODE] */
extern T0* GE_new2346(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_AST_NODE] */
extern T0* GE_new2347(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY [STRING_8] */
extern T0* GE_new2348(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
extern T0* GE_new2350(TC* ac, T1 initialize);
/* GEC.execute */
extern T0* T26c74(TC* ac);
/* GEC.execute_with_arguments */
extern void T26f75(TC* ac, T0* C, T0* a1);
/* GEC.execute_with_arguments_and_error_handler */
extern void T26f76(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.process_system */
extern void T26f81(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.record_end_time */
extern void T66f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.print_time */
extern void T66f80(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STDOUT_FILE.put_line */
extern void T161f9(TC* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.put_new_line */
extern void T161f8(TC* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T230f4(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T230f7(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.out */
extern T0* T1036f9(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T1036f18(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T1036f23(TC* ac, T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T1360s6(TC* ac, T6 a1, T0* a2);
/* STRING_8.append_code */
extern void T17f61(TC* ac, T0* C, T10 a1);
/* STRING_8.put_code */
extern void T17f70(TC* ac, T0* C, T10 a1, T6 a2);
/* STRING_8.reset_hash_codes */
extern void T17f55(TC* ac, T0* C);
/* STRING_8.set_count */
extern void T17f67(TC* ac, T0* C, T6 a1);
/* STRING_8.resize */
extern void T17f54(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(TC* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f15(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].extend */
extern void T15f19(TC* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f17(TC* ac, T6 volatile* C, T6 a1);
/* INTEGER_32.is_less_equal */
extern T1 T6f15(TC* ac, T6 volatile* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(TC* ac, T0* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f7(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T1036s14(TC* ac);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T1360c5(TC* ac);
/* STRING_8.append_character */
extern void T17f52(TC* ac, T0* C, T2 a1);
/* STRING_8.additional_space */
extern T6 T17f8(TC* ac, T0* C);
/* INTEGER_32.max */
extern T6 T6f16(TC* ac, T6 volatile* C, T6 a1);
/* INTEGER_32.is_greater_equal */
extern T1 T6f14(TC* ac, T6 volatile* C, T6 a1);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T1036f22(TC* ac, T0* C, T0* a1);
/* STRING_8.make */
extern void T17f49(TC* ac, T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c49(TC* ac, T6 a1);
/* SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c12(TC* ac, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].make_empty */
extern void T15f16(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c16(TC* ac, T6 a1);
/* KL_STDOUT_FILE.put_string */
extern void T161f6(TC* ac, T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1669f22(TC* ac, T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1669s29(TC* ac, T14 a1, T14 a2, T6 a3);
/* UC_UTF8_STRING.area */
extern T0* T1078f2(TC* ac, T0* C);
/* UC_STRING.area */
extern T0* T919f2(TC* ac, T0* C);
/* STRING_8.area */
extern T0* T17f1(TC* ac, T0* C);
/* UC_UTF8_STRING.count */
extern T6 T1078f1(TC* ac, T0* C);
/* UC_STRING.count */
extern T6 T919f1(TC* ac, T0* C);
/* STRING_8.count */
extern T6 T17f2(TC* ac, T0* C);
/* KL_STRING_ROUTINES.as_readable_string_8_no_uc_string */
extern T0* T108s12(TC* ac, T0* a1);
extern T1 T108s12ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.as_string */
extern T0* T1078f20(TC* ac, T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T1078f51(TC* ac, T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T1078f16(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T1078f50(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T1078f74(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T1078f94(TC* ac, T0* C);
/* UC_STRING.as_string */
extern T0* T919f56(TC* ac, T0* C);
/* UC_STRING.to_utf8 */
extern T0* T919f31(TC* ac, T0* C);
/* UC_STRING.byte_item */
extern T2 T919f36(TC* ac, T0* C, T6 a1);
/* UC_STRING.old_item */
extern T2 T919f54(TC* ac, T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T919f90(TC* ac, T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T919f103(TC* ac, T0* C);
/* KL_STDOUT_FILE.string_ */
extern T0* T161s2(TC* ac);
/* KL_STRING_ROUTINES.default_create */
extern T0* T108c22(TC* ac);
/* KL_STDOUT_FILE.console */
extern T0* T161s1(TC* ac);
/* STD_FILES.output */
extern T0* T1031s3(TC* ac);
/* CONSOLE.make_open_stdout */
extern T0* T1669c23(TC* ac, T0* a1);
/* CONSOLE.set_write_mode */
extern void T1669f28(TC* ac, T0* C);
/* CONSOLE.console_def */
extern T14 T1669s14(TC* ac, T6 a1);
/* CONSOLE.make_with_name */
extern void T1669f27(TC* ac, T0* C, T0* a1);
/* STRING_32.make_empty */
extern T0* T18c22(TC* ac);
/* STRING_32.make */
extern void T18f23(TC* ac, T0* C, T6 a1);
/* STRING_32.make */
extern T0* T18c23(TC* ac, T6 a1);
/* SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c8(TC* ac, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].fill_with */
extern void T16f13(TC* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].extend */
extern void T16f12(TC* ac, T0* C, T3 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern void T16f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c11(TC* ac, T6 a1);
/* CONSOLE.make_with_name */
extern void T1669f27p1(TC* ac, T0* C, T0* a1);
/* STRING_8.make_empty */
extern T0* T17c58(TC* ac);
/* CONSOLE.default_pointer */
extern T14 T1669s9(TC* ac);
/* CONSOLE.set_name */
extern void T1669f33(TC* ac, T0* C, T0* a1);
/* FILE_INFO.file_name_to_pointer */
extern T0* T166f7(TC* ac, T0* C, T0* a1, T0* a2);
/* C_STRING.set_string */
extern void T31f11(TC* ac, T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T31f15(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.put_natural_8 */
extern void T162f16(TC* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f19(TC* ac, T14 volatile* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14s20(TC* ac, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f23(TC* ac, T10 volatile* C);
/* UC_UTF8_STRING.code */
extern T10 T1078f48(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.code_at_byte_index */
extern T10 T1078f43(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.natural_32_encoded_next_value */
extern T10 T168s24(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T168s2(TC* ac, T2 a1);
/* CHARACTER_8.is_less_equal */
extern T1 T2f10(TC* ac, T2 volatile* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f15(TC* ac, T2 volatile* C, T2 a1);
/* UC_UTF8_ROUTINES.natural_32_encoded_first_value */
extern T10 T168s23(TC* ac, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern T0* T1078s45(TC* ac);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T168c58(TC* ac);
/* UC_UTF8_STRING.byte_index */
extern T6 T1078f14(TC* ac, T0* C, T6 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f7(TC* ac, T2 volatile* C);
/* INTEGER_32.to_natural_32 */
extern T10 T6f20(TC* ac, T6 volatile* C);
/* UC_STRING.code */
extern T10 T919f10(TC* ac, T0* C, T6 a1);
/* UC_STRING.code_at_byte_index */
extern T10 T919f38(TC* ac, T0* C, T6 a1);
/* UC_STRING.utf8 */
extern T0* T919s35(TC* ac);
/* UC_STRING.byte_index */
extern T6 T919f37(TC* ac, T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f10(TC* ac, T0* C, T6 a1);
/* C_STRING.make_shared_from_pointer_and_count */
extern void T31f10(TC* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.make_shared_from_pointer_and_count */
extern T0* T31c10(TC* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T162c14(TC* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.increment_counter */
extern void T162f12(TC* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T40s18(TC* ac, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* CELL [INTEGER_32].put */
extern void T1067f2(TC* ac, T0* C, T6 a1);
/* CELL [INTEGER_32].put */
extern T0* T1067c2(TC* ac, T6 a1);
/* NATURAL_32.is_less_equal */
extern T1 T10f5(TC* ac, T10 volatile* C, T10 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T40s6(TC* ac, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T1032f12(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T1032f19(TC* ac, T0* C, T0* a1, T6 a2);
extern T1 T1032f19ot1(TC* ac, T0* a1);
extern T1 T1032f19ot2(TC* ac, T0* a1);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f30(TC* ac, T10 volatile* C);
/* IMMUTABLE_STRING_32.code */
extern T10 T20f5(TC* ac, T0* C, T6 a1);
/* STRING_32.count */
extern T6 T18f2(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.count */
extern T6 T20f2(TC* ac, T0* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f12(TC* ac, T3 volatile* C);
/* STRING_32.area_lower */
extern T6 T18f8(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T1032f22(TC* ac, T0* C, T2 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T1032f16(TC* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1668f7(TC* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f20(TC* ac, T11 volatile* C, T11 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern T0* T1032f15(TC* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1668c13(TC* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f21(TC* ac, T11 volatile* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f28(TC* ac, T10 volatile* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f19(TC* ac, T9 volatile* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f18(TC* ac, T7 volatile* C);
/* INTEGER_32.to_natural_64 */
extern T11 T6f19(TC* ac, T6 volatile* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f6(TC* ac, T5 volatile* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f9(TC* ac, T4 volatile* C);
/* SPECIAL [NATURAL_64].extend */
extern void T1355f13(TC* ac, T0* C, T11 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern void T1355f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern T0* T1355c11(TC* ac, T6 a1);
/* STRING_8.has */
extern T1 T17f16(TC* ac, T0* C, T2 a1);
/* NATURAL_8.to_natural_64 */
extern T11 T8f15(TC* ac, T8 volatile* C);
/* CHARACTER_8.to_hexa_digit */
extern T8 T2f29(TC* ac, T2 volatile* C);
/* INTEGER_8.to_natural_8 */
extern T8 T4f5(TC* ac, T4 volatile* C);
/* NATURAL_8.to_integer_8 */
extern T4 T8f17(TC* ac, T8 volatile* C);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f28(TC* ac, T2 volatile* C);
/* NATURAL_8.is_greater */
extern T1 T8f5(TC* ac, T8 volatile* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f13(TC* ac, T2 volatile* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern T0* T2f16(TC* ac, T2 volatile* C);
/* SPECIAL [NATURAL_8].extend */
extern void T1075f7(TC* ac, T0* C, T8 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern void T1075f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern T0* T1075c6(TC* ac, T6 a1);
/* UC_UTF8_STRING.area_lower */
extern T6 T1078f49(TC* ac, T0* C);
/* UC_STRING.area_lower */
extern T6 T919f11(TC* ac, T0* C);
/* STRING_8.area_lower */
extern T6 T17f9(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T1032f18(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern T0* T40s7(TC* ac);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T1032f21(TC* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T1032f20(TC* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T1032c17(TC* ac);
/* STRING_8.make_from_string */
extern T0* T17c85(TC* ac, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f14(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].force */
extern void T15f18(TC* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f21(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T40s5(TC* ac, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T1032f14(TC* ac, T0* C);
/* UC_UTF8_STRING.substring */
extern T0* T1078f10(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T1078c86(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.make_from_substring_general */
extern void T1078f104(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T1078f103(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T1078f103ot1(TC* ac, T0* a1);
extern T1 T1078f103ot2(TC* ac, T0* a1);
extern T1 T1078f103ot3(TC* ac, T0* a1);
/* NATURAL_32.to_integer_32 */
extern T6 T10f11(TC* ac, T10 volatile* C);
/* UC_STRING.next_byte_index */
extern T6 T919f34(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T1078f18(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T1078f109(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T1360s2(TC* ac, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern T0* T1078s58(TC* ac);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T168s28(TC* ac, T6 a1);
/* UC_UTF8_ROUTINES.natural_32_code_byte_count */
extern T6 T168s16(TC* ac, T10 a1);
/* UC_STRING.item_code_at_byte_index */
extern T6 T919f33(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T1078f17(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T1078f102(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T168s27(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.character_8_byte_count */
extern T6 T168s13(TC* ac, T2 a1);
/* UC_UTF8_STRING.put_byte */
extern void T1078f110(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T1078f101(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.reset_hash_codes */
extern void T1078f98(TC* ac, T0* C);
/* UC_STRING.item */
extern T2 T919f18(TC* ac, T0* C, T6 a1);
/* UC_STRING.character_item_at_byte_index */
extern T2 T919f43(TC* ac, T0* C, T6 a1);
/* UC_STRING.integer_ */
extern T0* T919s57(TC* ac);
/* KL_PLATFORM.maximum_character_code */
extern T6 T1062s2(TC* ac);
/* UC_STRING.platform */
extern T0* T919s41(TC* ac);
/* KL_PLATFORM.default_create */
extern T0* T1062c3(TC* ac);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T168s26(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T168s25(TC* ac, T2 a1);
/* STRING_8.item */
extern T2 T17f24(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.item */
extern T2 T1078f63(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T1078f44(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.platform */
extern T0* T1078s47(TC* ac);
/* KL_ANY_ROUTINES.same_types */
extern T1 T1070s1(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].same_type */
extern T1 T2245f18(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.same_type */
extern T1 T2244f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].same_type */
extern T1 T946f42(TC* ac, T0* C, T0* a1);
/* ET_INVARIANT_KEYWORD.same_type */
extern T1 T280f30(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.same_type */
extern T1 T1078f23(TC* ac, T0* C, T0* a1);
/* UC_STRING.same_type */
extern T1 T919f32(TC* ac, T0* C, T0* a1);
/* STRING_8.same_type */
extern T1 T17f18(TC* ac, T0* C, T0* a1);
/* STRING_32.same_type */
extern T1 T18f18(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.same_type */
extern T1 T152f33(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.same_type */
extern T1 T151f36(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.any_ */
extern T0* T1078s42(TC* ac);
/* KL_ANY_ROUTINES.default_create */
extern T0* T1070c2(TC* ac);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T168s10(TC* ac, T0* a1, T6 a2, T6 a3);
extern T1 T168s10ot1(TC* ac, T0* a1);
extern T1 T168s10ot2(TC* ac, T0* a1);
extern T1 T168s10ot3(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.character_32_byte_count */
extern T6 T168s15(TC* ac, T3 a1);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T1078f15(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.shifted_byte_index */
extern T6 T919f53(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern T0* T168s14(TC* ac);
/* UC_STRING.make_empty */
extern T0* T919c83(TC* ac);
/* UC_STRING.make */
extern void T919f84(TC* ac, T0* C, T6 a1);
/* UC_STRING.make */
extern T0* T919c84(TC* ac, T6 a1);
/* UC_STRING.old_set_count */
extern void T919f87(TC* ac, T0* C, T6 a1);
/* UC_STRING.reset_hash_codes */
extern void T919f96(TC* ac, T0* C);
/* UC_STRING.byte_capacity */
extern T6 T919f59(TC* ac, T0* C);
/* UC_STRING.capacity */
extern T6 T919f59p1(TC* ac, T0* C);
/* UC_STRING.make */
extern void T919f84p1(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T168s11(TC* ac);
/* UC_UTF8_STRING.cloned_string */
extern T0* T1078f33(TC* ac, T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T1078f25(TC* ac, T0* C);
/* UC_UTF8_STRING.copy */
extern void T1078f88(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T1078f88p1(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern void T1078f85(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T1078c85(TC* ac, T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T1078f89(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T1078f61(TC* ac, T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T1078f61p1(TC* ac, T0* C);
/* UC_UTF8_STRING.make */
extern void T1078f85p1(TC* ac, T0* C, T6 a1);
/* STRING_32.substring */
extern T0* T18f13(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_32.set_count */
extern void T18f28(TC* ac, T0* C, T6 a1);
/* STRING_32.reset_hash_codes */
extern void T18f32(TC* ac, T0* C);
/* SPECIAL [CHARACTER_32].copy_data */
extern void T16f10(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_32].force */
extern void T16f15(TC* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].move_data */
extern void T16f14(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.new_string */
extern T0* T18f19(TC* ac, T0* C, T6 a1);
/* UC_STRING.substring */
extern T0* T919f16(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.make_from_substring */
extern T0* T919c89(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_STRING.make_from_substring_general */
extern void T919f93(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T919f93ot1(TC* ac, T0* a1);
/* UC_STRING.put_substring_at_byte_index */
extern void T919f98(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T919f98ot1(TC* ac, T0* a1);
extern T1 T919f98ot2(TC* ac, T0* a1);
extern T1 T919f98ot3(TC* ac, T0* a1);
/* UC_STRING.put_code_at_byte_index */
extern void T919f108(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_STRING.put_character_at_byte_index */
extern void T919f101(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_STRING.put_byte */
extern void T919f109(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.old_put */
extern void T919f100(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.any_ */
extern T0* T919s46(TC* ac);
/* UC_STRING.cloned_string */
extern T0* T919f44(TC* ac, T0* C);
/* UC_STRING.twin */
extern T0* T919f55(TC* ac, T0* C);
/* UC_STRING.copy */
extern void T919f86(TC* ac, T0* C, T0* a1);
/* UC_STRING.copy */
extern void T919f86p1(TC* ac, T0* C, T0* a1);
/* STRING_8.substring */
extern T0* T17f12(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.new_string */
extern T0* T17f6(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_32_item */
extern T3 T1078f9(TC* ac, T0* C, T6 a1);
/* STRING_32.item */
extern T3 T18f10(TC* ac, T0* C, T6 a1);
/* UC_STRING.character_32_item */
extern T3 T919f27(TC* ac, T0* C, T6 a1);
/* STRING_8.character_32_item */
extern T3 T17f11(TC* ac, T0* C, T6 a1);
/* STRING_32.code */
extern T10 T18f7(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T40s12(TC* ac, T0* a1, T6 a2, T6 a3);
/* INTEGER_32.do_nothing */
extern void T6s37(TC* ac);
/* FILE_INFO.wchar_length */
extern T6 T166s6(TC* ac);
/* FILE_INFO.multi_byte_to_utf_16 */
extern T6 T166s14(TC* ac, T14 a1, T14 a2, T6 a3);
/* FILE_INFO.default_pointer */
extern T14 T166s13(TC* ac);
/* C_STRING.item */
extern T14 T31f4(TC* ac, T0* C);
/* C_STRING.make */
extern T0* T31c9(TC* ac, T0* a1);
/* C_STRING.make_empty */
extern void T31f7(TC* ac, T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T31c7(TC* ac, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T40s17(TC* ac, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* MANAGED_POINTER.put_natural_16 */
extern void T162f18(TC* ac, T0* C, T9 a1, T6 a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f24(TC* ac, T10 volatile* C);
/* NATURAL_32.is_greater */
extern T1 T10f12(TC* ac, T10 volatile* C, T10 a1);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T40s13(TC* ac, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.make */
extern T0* T162c10(TC* ac, T6 a1);
/* EXCEPTIONS.raise */
extern void T37s4(TC* ac, T0* a1);
/* DEVELOPER_EXCEPTION.raise */
extern void T148f18(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.raise */
extern void T21s19(TC* ac, T0* a1);
/* DEVELOPER_EXCEPTION.code */
extern T6 T148f10(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T21s9(TC* ac);
/* ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T21s17(TC* ac, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern void T27f2(TC* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern T0* T27c2(TC* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception_cell */
extern T0* T21s2(TC* ac);
/* DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T148f13(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T21s8(TC* ac);
/* DEVELOPER_EXCEPTION.is_ignored */
extern T1 T148f9(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T21s13(TC* ac, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].has */
extern T1 T28f34(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].same_keys */
extern T1 T28f26(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].hash_code_of */
extern T6 T28f25(TC* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f27(TC* ac, T6 volatile* C);
/* ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern T0* T21s3(TC* ac);
/* HASH_TABLE [INTEGER_32, INTEGER_32].make */
extern T0* T28c35(TC* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_filled */
extern T0* T154c9(TC* ac, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].fill_with */
extern void T154f12(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].extend */
extern void T154f13(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_filled */
extern T0* T155c5(TC* ac, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].fill_with */
extern void T155f8(TC* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].extend */
extern void T155f10(TC* ac, T0* C, T1 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern void T155f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern T0* T155c7(TC* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern void T154f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern T0* T154c8(TC* ac, T6 a1);
/* PRIMES.higher_prime */
extern T6 T153s1(TC* ac, T6 a1);
/* PRIMES.is_prime */
extern T1 T153s3(TC* ac, T6 a1);
/* PRIMES.default_create */
extern T0* T153c5(TC* ac);
/* DEVELOPER_EXCEPTION.exception_manager */
extern T0* T148s8(TC* ac);
/* DEVELOPER_EXCEPTION.set_description */
extern void T148f15(TC* ac, T0* C, T0* a1);
/* C_STRING.set_count */
extern void T31f8(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T40s16(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* DEVELOPER_EXCEPTION.default_create */
extern T0* T148c12(TC* ac);
/* EXCEPTIONS.default_create */
extern T0* T37c3(TC* ac);
/* MANAGED_POINTER.default_pointer */
extern T14 T162s4(TC* ac);
/* POINTER.memory_calloc */
extern T14 T14s5(TC* ac, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14s8(TC* ac, T6 a1, T6 a2);
/* MANAGED_POINTER.resize */
extern void T162f11(TC* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f15(TC* ac, T14 volatile* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14s18(TC* ac, T14 a1, T6 a2, T6 a3);
/* POINTER.memory_realloc */
extern T14 T14f6(TC* ac, T14 volatile* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14s9(TC* ac, T14 a1, T6 a2);
/* CONSOLE.buffered_file_info */
extern T0* T1669f16(TC* ac, T0* C);
/* FILE_INFO.make */
extern T0* T166c23(TC* ac);
/* FILE_INFO.make_filled_area */
extern void T166f25(TC* ac, T0* C, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].make_filled */
extern T0* T1075c5(TC* ac, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].fill_with */
extern void T1075f8(TC* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* FILE_INFO.stat_size */
extern T6 T166s10(TC* ac);
/* KL_STDOUT_FILE.io */
extern T0* T161s4(TC* ac);
/* STD_FILES.set_output_default */
extern void T1031f6(TC* ac, T0* C);
/* STD_FILES.default_create */
extern T0* T1031c5(TC* ac);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T230f5(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T1036f17(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T1036f21(TC* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T1036f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T1036c16(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T1036f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T1036f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T97f46(TC* ac, T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T97s48(TC* ac, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T97s41(TC* ac, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T97f45(TC* ac, T0* C);
/* DT_DATE_TIME.is_less */
extern T1 T97f44(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T97f43(TC* ac, T0* C);
/* DT_DATE_TIME.day */
extern T6 T97f10(TC* ac, T0* C);
/* DT_DATE_TIME.month */
extern T6 T97f9(TC* ac, T0* C);
/* DT_DATE_TIME.year */
extern T6 T97f8(TC* ac, T0* C);
/* DT_DATE_TIME.add_duration */
extern void T97f65(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.add_milliseconds */
extern void T97f69(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_normalized_time_storage */
extern void T97f72(TC* ac, T0* C, T7 a1);
/* DT_DATE_TIME.add_days */
extern void T97f73(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T97f71(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_year_month_day */
extern void T97f60(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern T6 T97s49(TC* ac);
/* DT_DATE_TIME.epoch_days */
extern T6 T97s11(TC* ac, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern T6 T97s27(TC* ac);
/* DT_DATE_TIME.days_at_month */
extern T6 T97s26(TC* ac, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern T6 T97s25(TC* ac);
/* KL_INTEGER_ROUTINES.div */
extern T6 T1360s4(TC* ac, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T97s24(TC* ac);
/* DT_DATE_TIME.set_day */
extern void T97f70(TC* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f21(TC* ac, T7 volatile* C);
/* INTEGER_32.to_integer_64 */
extern T7 T6f21(TC* ac, T6 volatile* C);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T1036f15(TC* ac, T0* C);
/* DT_DATE_TIME.add_years_months_days */
extern void T97f68(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_time */
extern void T97f64(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T97f63(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern T0* T1036f8(TC* ac, T0* C);
/* DT_DATE_TIME.make */
extern T0* T97c62(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T97f67(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T97f66(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.minus */
extern T0* T97f12(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T97f16(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T97f7(TC* ac, T0* C);
/* DT_DATE_TIME.second */
extern T6 T97f6(TC* ac, T0* C);
/* DT_DATE_TIME.minute */
extern T6 T97f5(TC* ac, T0* C);
/* DT_DATE_TIME.hour */
extern T6 T97f4(TC* ac, T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T97f3(TC* ac, T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T1035f10(TC* ac, T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T1035f12(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T97f61(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T1035f13(TC* ac, T0* C);
/* C_DATE.second_now */
extern T6 T1670f6(TC* ac, T0* C);
/* C_DATE.get_tm_sec */
extern T6 T1670s13(TC* ac, T14 a1);
/* C_DATE.minute_now */
extern T6 T1670f5(TC* ac, T0* C);
/* C_DATE.get_tm_min */
extern T6 T1670s12(TC* ac, T14 a1);
/* C_DATE.hour_now */
extern T6 T1670f4(TC* ac, T0* C);
/* C_DATE.get_tm_hour */
extern T6 T1670s11(TC* ac, T14 a1);
/* C_DATE.day_now */
extern T6 T1670f15(TC* ac, T0* C);
/* C_DATE.get_tm_mday */
extern T6 T1670s10(TC* ac, T14 a1);
/* C_DATE.month_now */
extern T6 T1670f8(TC* ac, T0* C);
/* C_DATE.get_tm_mon */
extern T6 T1670s9(TC* ac, T14 a1);
/* C_DATE.year_now */
extern T6 T1670f7(TC* ac, T0* C);
/* C_DATE.get_tm_year */
extern T6 T1670s14(TC* ac, T14 a1);
/* C_DATE.update */
extern void T1670f23(TC* ac, T0* C);
/* POINTER.memory_free */
extern void T14f14(TC* ac, T14 volatile* C);
/* POINTER.default_pointer */
extern T14 T14s10(TC* ac);
/* POINTER.c_free */
extern void T14s16(TC* ac, T14 a1);
/* C_DATE.get_millitm */
extern T6 T1670s21(TC* ac, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T162c13(TC* ac, T14 a1, T6 a2);
/* C_DATE.tm_structure_size */
extern T6 T1670s20(TC* ac);
/* C_DATE.localtime */
extern T14 T1670s19(TC* ac, T14 a1);
/* C_DATE.gmtime */
extern T14 T1670s18(TC* ac, T14 a1);
/* C_DATE.get_time */
extern void T1670s25(TC* ac, T14 a1, T14 a2);
/* C_DATE.ftime */
extern void T1670s24(TC* ac, T14 a1);
/* C_DATE.time_t_structure_size */
extern T6 T1670s17(TC* ac);
/* POINTER.memory_alloc */
extern T14 T14s11(TC* ac, T6 a1);
/* POINTER.c_malloc */
extern T14 T14s12(TC* ac, T6 a1);
/* C_DATE.timeb_structure_size */
extern T6 T1670s16(TC* ac);
/* C_DATE.default_create */
extern T0* T1670c22(TC* ac);
/* DT_DATE_TIME.make_from_storage */
extern T0* T97c59(TC* ac, T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern T0* T1034s1(TC* ac);
/* DT_SYSTEM_CLOCK.make */
extern T0* T1035c11(TC* ac);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T1034c2(TC* ac);
/* ET_SYSTEM_PROCESSOR.stop_requested */
extern T1 T66f41(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.record_end_time */
extern void T858f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.print_time */
extern void T858f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.stop_requested */
extern T1 T858f44(TC* ac, T0* C);
/* GEC.compile_c_code */
extern void T26f91(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.rename_file */
extern void T152s37(TC* ac, T0* a1, T0* a2);
/* KL_TEXT_INPUT_FILE.change_name */
extern void T43f75(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_change_name */
extern void T43f78(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.rename_file */
extern void T43f80(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.set_name */
extern void T43f71(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_rename */
extern void T43s82(TC* ac, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T43f17(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern T0* T43f33(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.same_physical_file */
extern T1 T43f39(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T152s17(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T152s29(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_character */
extern void T1078f80(TC* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T1078f100(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T1078f97(TC* ac, T0* C, T6 a1);
/* UC_STRING.append_character */
extern void T919f77(TC* ac, T0* C, T2 a1);
/* UC_STRING.resize_byte_storage */
extern void T919f97(TC* ac, T0* C, T6 a1);
/* UC_STRING.resize */
extern void T919f95(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.item */
extern T0* T1069f9(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable STRING_8].item */
extern T0* T1681f4(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T1069f8(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T1069f7(TC* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T108s5(TC* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.to_string_32 */
extern T0* T1078f21(TC* ac, T0* C);
/* STRING_32.append_code */
extern void T18f26(TC* ac, T0* C, T10 a1);
/* STRING_32.put_code */
extern void T18f29(TC* ac, T0* C, T10 a1, T6 a2);
/* STRING_32.resize */
extern void T18f31(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f4(TC* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f5(TC* ac, T0* C, T6 a1);
/* STRING_32.capacity */
extern T6 T18f5(TC* ac, T0* C);
/* UC_STRING.to_string_32 */
extern T0* T919f61(TC* ac, T0* C);
/* STRING_8.to_string_32 */
extern T0* T17f19(TC* ac, T0* C);
/* UC_UTF8_STRING.append_string_general */
extern void T1078f78(TC* ac, T0* C, T0* a1);
extern T1 T1078f78ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_string_general */
extern void T1078f78p1(TC* ac, T0* C, T0* a1);
extern T1 T1078f78p1ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.append */
extern void T1078f78p0(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.append_code */
extern void T1078f79(TC* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.append_item_code */
extern void T1078f99(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append */
extern void T1078f96(TC* ac, T0* C, T0* a1);
extern T1 T1078f96ot1(TC* ac, T0* a1);
extern T1 T1078f96ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern T0* T1078s65(TC* ac);
/* UC_UTF8_STRING.gobo_append_substring */
extern void T1078f81(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.append */
extern void T1078f96p1(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T1078f62(TC* ac, T0* C);
/* UC_STRING.append_string_general */
extern void T919f74(TC* ac, T0* C, T0* a1);
extern T1 T919f74ot1(TC* ac, T0* a1);
/* UC_STRING.append_string_general */
extern void T919f74p1(TC* ac, T0* C, T0* a1);
extern T1 T919f74p1ot1(TC* ac, T0* a1);
/* UC_STRING.append */
extern void T919f74p0(TC* ac, T0* C, T0* a1);
/* UC_STRING.append_code */
extern void T919f76(TC* ac, T0* C, T10 a1);
/* UC_STRING.append_item_code */
extern void T919f99(TC* ac, T0* C, T6 a1);
/* UC_STRING.append */
extern void T919f94(TC* ac, T0* C, T0* a1);
extern T1 T919f94ot1(TC* ac, T0* a1);
extern T1 T919f94ot2(TC* ac, T0* a1);
/* UC_STRING.dummy_uc_string */
extern T0* T919s63(TC* ac);
/* UC_STRING.gobo_append_substring */
extern void T919f75(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.append */
extern void T919f94p1(TC* ac, T0* C, T0* a1);
/* UC_STRING.additional_space */
extern T6 T919f60(TC* ac, T0* C);
/* STRING_8.append_string_general */
extern void T17f64(TC* ac, T0* C, T0* a1);
extern T1 T17f64ot1(TC* ac, T0* a1);
/* STRING_8.append */
extern void T17f64p1(TC* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f53(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.as_readable_string_general_no_uc_string */
extern T0* T108s6(TC* ac, T0* a1);
extern T1 T108s6ot1(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.appended_string_8 */
extern T0* T108s10(TC* ac, T0* a1, T0* a2);
extern T1 T108s10ot1(TC* ac, T0* a1);
extern T1 T108s10ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_string */
extern void T1078f77(TC* ac, T0* C, T0* a1);
/* UC_STRING.append_string */
extern void T919f80(TC* ac, T0* C, T0* a1);
/* STRING_8.append_string */
extern void T17f50(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat_string_8 */
extern T0* T108s11(TC* ac, T0* a1, T0* a2);
extern T1 T108s11ot1(TC* ac, T0* a1);
extern T1 T108s11ot2(TC* ac, T0* a1);
/* UC_STRING.make_from_string_general */
extern T0* T919c73(TC* ac, T0* a1);
extern T1 T919f73ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.to_string_8 */
extern T0* T1078f32(TC* ac, T0* C);
/* UC_UTF8_STRING.put_code */
extern void T1078f90(TC* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_item_code */
extern void T1078f106(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_right */
extern void T1078f108(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_left */
extern void T1078f107(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.to_string_8 */
extern T0* T919f9(TC* ac, T0* C);
/* UC_STRING.put_code */
extern void T919f88(TC* ac, T0* C, T10 a1, T6 a2);
/* UC_STRING.put_item_code */
extern void T919f105(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.move_bytes_right */
extern void T919f107(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.move_bytes_left */
extern void T919f106(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.to_string_8 */
extern T0* T17f20(TC* ac, T0* C);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T1078f19(TC* ac, T0* C, T0* a1);
/* UC_STRING.prefixed_string */
extern T0* T919f21(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.gobo_plus_general */
extern T0* T1078f31(TC* ac, T0* C, T0* a1);
/* UC_STRING.gobo_plus_general */
extern T0* T919f8(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern T0* T152s22(TC* ac);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T152s20(TC* ac);
/* KL_PATHNAME.set_canonical */
extern void T1069f21(TC* ac, T0* C);
/* KL_PATHNAME.append_current */
extern void T1069f23(TC* ac, T0* C);
/* KL_PATHNAME.append_name */
extern void T1069f28(TC* ac, T0* C, T0* a1);
/* ARRAY [detachable STRING_8].force */
extern void T1681f11(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].move_data */
extern void T1112f10(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].overlapping_move */
extern void T1112f12(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].force */
extern void T1112f13(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].non_overlapping_move */
extern void T1112f11(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [detachable STRING_8].capacity */
extern T6 T1681f7(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].set_area */
extern void T1681f14(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable STRING_8].aliased_resized_area */
extern T0* T1112f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable STRING_8].fill_with */
extern void T1112f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].extend */
extern void T1112f9(TC* ac, T0* C, T0* a1);
/* ARRAY [detachable STRING_8].make_empty_area */
extern void T1681f13(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable STRING_8].make_empty */
extern void T1112f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable STRING_8].make_empty */
extern T0* T1112c5(TC* ac, T6 a1);
/* ARRAY [detachable STRING_8].additional_space */
extern T6 T1681f6(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].empty_area */
extern T1 T1681f5(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].put */
extern void T1681f10(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T152s27(TC* ac, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T1069f24(TC* ac, T0* C);
/* KL_PATHNAME.set_relative */
extern void T1069f22(TC* ac, T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T1069c20(TC* ac);
/* ARRAY [detachable STRING_8].make_filled */
extern T0* T1681c9(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable STRING_8].make_filled_area */
extern void T1681f12(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].make_filled */
extern T0* T1112c8(TC* ac, T0* a1, T6 a2);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T151s17(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T151s31(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern T0* T151s23(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T151s20(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T151s29(TC* ac, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T1069f27(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T1069f26(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T1069f25(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T151s21(TC* ac, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.secondary_directory_separator */
extern T2 T151s33(TC* ac);
/* KL_STRING_ROUTINES.same_string */
extern T1 T108s1(TC* ac, T0* a1, T0* a2);
extern T1 T108s1ot1(TC* ac, T0* a1);
extern T1 T108s1ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.same_string_general */
extern T1 T1078f36(TC* ac, T0* C, T0* a1);
extern T1 T1078f36ot1(TC* ac, T0* a1);
/* UC_STRING.same_string_general */
extern T1 T919f26(TC* ac, T0* C, T0* a1);
extern T1 T919f26ot1(TC* ac, T0* a1);
/* STRING_8.same_string_general */
extern T1 T17f17(TC* ac, T0* C, T0* a1);
/* STRING_8.same_characters_general */
extern T1 T17f29(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T1078f35(TC* ac, T0* C, T0* a1);
extern T1 T1078f35ot1(TC* ac, T0* a1);
/* UC_STRING.same_unicode_string */
extern T1 T919f25(TC* ac, T0* C, T0* a1);
extern T1 T919f25ot1(TC* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.file_system */
extern T0* T43s46(TC* ac);
/* KL_TEXT_INPUT_FILE.unix_file_system */
extern T0* T43s55(TC* ac);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T152c35(TC* ac);
/* KL_OPERATING_SYSTEM.is_unix */
extern T1 T119s2(TC* ac);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T119s4(TC* ac);
/* PATH.utf_8_name */
extern T0* T1026f6(TC* ac, T0* C);
/* PATH.name */
extern T0* T1026f4(TC* ac, T0* C);
/* UTF_CONVERTER.utf_8_string_8_to_escaped_string_32 */
extern T0* T40s8(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_8_string_8_into_escaped_string_32 */
extern void T40s20(TC* ac, T0* a1, T0* a2);
/* UTF_CONVERTER.escape_code_into */
extern void T40s24(TC* ac, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f12(TC* ac, T9 volatile* C);
/* STRING_8.put */
extern void T17f77(TC* ac, T0* C, T2 a1, T6 a2);
/* NATURAL_16.to_hex_character */
extern T2 T9f15(TC* ac, T9 volatile* C);
/* CHARACTER_8.plus */
extern T2 T2f33(TC* ac, T2 volatile* C, T6 a1);
/* CHARACTER_8.minus */
extern T2 T2f32(TC* ac, T2 volatile* C, T6 a1);
/* NATURAL_16.to_integer_32 */
extern T6 T9f5(TC* ac, T9 volatile* C);
/* STRING_8.make_filled */
extern T0* T17c60(TC* ac, T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f71(TC* ac, T0* C, T2 a1);
/* STRING_32.append_string_general */
extern void T18f24(TC* ac, T0* C, T0* a1);
extern T1 T18f24ot1(TC* ac, T0* a1);
/* STRING_32.append */
extern void T18f24p1(TC* ac, T0* C, T0* a1);
/* STRING_32.append */
extern void T18f30(TC* ac, T0* C, T0* a1);
/* STRING_32.additional_space */
extern T6 T18f6(TC* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f14(TC* ac, T8 volatile* C);
/* NATURAL_8.to_hex_character */
extern T2 T8f21(TC* ac, T8 volatile* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f25(TC* ac, T8 volatile* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f10(TC* ac, T9 volatile* C, T9 a1);
/* STRING_32.append_character */
extern void T18f25(TC* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f12(TC* ac, T8 volatile* C);
/* STRING_32.extend */
extern void T18f36(TC* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f9(TC* ac, T8 volatile* C, T8 a1);
/* STRING_32.grow */
extern void T18f35(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string */
extern T0* T20c18(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_to_escaped_string_32 */
extern T0* T40s11(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_into_escaped_string_32 */
extern void T40s23(TC* ac, T0* a1, T0* a2);
/* NATURAL_32.is_greater_equal */
extern T1 T10f14(TC* ac, T10 volatile* C, T10 a1);
/* EXECUTION_ENVIRONMENT.current_working_path */
extern T0* T105s7(TC* ac);
/* PATH.make_from_pointer */
extern T0* T1026c18(TC* ac, T14 a1);
/* PATH.reset_internal_data */
extern void T1026f21(TC* ac, T0* C);
/* PATH.normalize */
extern void T1026f20(TC* ac, T0* C);
/* STRING_8.remove_tail */
extern void T17f66(TC* ac, T0* C, T6 a1);
/* PATH.directory_separator */
extern T2 T1026s13(TC* ac);
/* STRING_8.remove_head */
extern void T17f76(TC* ac, T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f80(TC* ac, T0* C, T6 a1);
/* PATH.root_end_position */
extern T6 T1026f12(TC* ac, T0* C);
/* PATH.next_directory_separator */
extern T6 T1026f16(TC* ac, T0* C, T6 a1);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f12(TC* ac, T2 volatile* C, T2 a1);
/* CHARACTER_8.as_lower */
extern T2 T2f26(TC* ac, T2 volatile* C);
/* CHARACTER_8.lower_value */
extern T0* T2f30(TC* ac, T2 volatile* C);
/* STRING_8.keep_head */
extern void T17f72(TC* ac, T0* C, T6 a1);
/* PATH.is_character */
extern T1 T1026f8(TC* ac, T0* C, T0* a1, T6 a2, T2 a3);
/* STRING_8.is_empty */
extern T1 T17f15(TC* ac, T0* C);
/* C_STRING.substring_8 */
extern T0* T31f3(TC* ac, T0* C, T6 a1, T6 a2);
/* C_STRING.read_substring_into */
extern void T31f14(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f8(TC* ac, T8 volatile* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T162f5(TC* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1566f4(TC* ac, T1566* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1566s6(TC* ac, T14 a1, T14 a2, T6 a3);
/* PATH.unit_size */
extern T6 T1026f5(TC* ac, T0* C);
/* PATH.pointer_length_in_bytes */
extern T6 T1026f7(TC* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f16(TC* ac, T11 volatile* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f8(TC* ac, T11 volatile* C, T11 a1);
/* PATH.c_pointer_length_in_bytes */
extern T11 T1026f15(TC* ac, T0* C, T14 a1);
/* PATH.make_from_string */
extern T0* T1026c17(TC* ac, T0* a1);
/* PATH.internal_append_into */
extern void T1026f19(TC* ac, T0* C, T0* a1, T0* a2, T2 a3);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T40s15(TC* ac, T0* a1, T0* a2);
/* STRING_8.extend */
extern void T17f57(TC* ac, T0* C, T2 a1);
/* IMMUTABLE_STRING_32.substring */
extern T0* T20f7(TC* ac, T0* C, T6 a1, T6 a2);
/* IMMUTABLE_STRING_32.empty_string */
extern T0* T20f8(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make */
extern void T20f19(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make */
extern T0* T20c19(TC* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T20f16(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern T0* T20c16(TC* ac, T0* a1, T6 a2, T6 a3);
/* IMMUTABLE_STRING_32.item */
extern T3 T20f6(TC* ac, T0* C, T6 a1);
/* STRING_8.grow */
extern void T17f56(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_16le_string_8 */
extern void T40s19(TC* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T1078f8(TC* ac, T0* C);
/* UC_STRING.old_is_empty */
extern T1 T919f13(TC* ac, T0* C);
/* EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T105s8(TC* ac, T14 a1, T6 a2);
/* KL_OPERATING_SYSTEM.execution_environment */
extern T0* T119s5(TC* ac);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T105c10(TC* ac);
/* STRING_8.is_equal */
extern T1 T17f39(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T119s3(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.string_to_utf8 */
extern T0* T168s1(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.substring_to_utf8 */
extern T0* T168s6(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.append_substring_to_utf8 */
extern void T168s56(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_ROUTINES.append_natural_32_code_to_utf8 */
extern void T168s57(TC* ac, T0* a1, T10 a2);
/* STRING_32.to_string_8 */
extern T0* T18f15(TC* ac, T0* C);
/* STRING_32.is_valid_as_string_8 */
extern T1 T18f14(TC* ac, T0* C);
/* EXECUTION_ENVIRONMENT.item */
extern T0* T105s2(TC* ac, T0* a1);
/* NATIVE_STRING.string */
extern T0* T909f6(TC* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T40s10(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T40s22(TC* ac, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T40s26(TC* ac, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T40s9(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T40s21(TC* ac, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T40s25(TC* ac, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_16.to_natural_32 */
extern T10 T9f13(TC* ac, T9 volatile* C);
/* MANAGED_POINTER.read_natural_16 */
extern T9 T162f6(TC* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_16].memory_copy */
extern void T1567f4(TC* ac, T1567* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_16].c_memcpy */
extern void T1567s6(TC* ac, T14 a1, T14 a2, T6 a3);
/* NATIVE_STRING.make_from_pointer */
extern T0* T909c10(TC* ac, T14 a1);
/* NATIVE_STRING.unit_size */
extern T6 T909f5(TC* ac, T0* C);
/* NATIVE_STRING.pointer_length_in_bytes */
extern T6 T909f4(TC* ac, T0* C, T14 a1);
/* NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T909f8(TC* ac, T0* C, T14 a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T105s3(TC* ac, T14 a1);
/* NATIVE_STRING.item */
extern T14 T909f3(TC* ac, T0* C);
/* NATIVE_STRING.make */
extern T0* T909c9(TC* ac, T0* a1);
/* NATIVE_STRING.set_string */
extern void T909f12(TC* ac, T0* C, T0* a1);
/* NATIVE_STRING.set_substring */
extern void T909f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.upper_cell */
extern T0* T909f7(TC* ac, T0* C);
/* NATIVE_STRING.make_empty */
extern void T909f11(TC* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.windows_file_system */
extern T0* T43s54(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T151c38(TC* ac);
/* KL_TEXT_INPUT_FILE.operating_system */
extern T0* T43s53(TC* ac);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T119c6(TC* ac);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T43f15(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T43f29(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T43s19(TC* ac, T14 a1);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T43f27(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T43s18(TC* ac, T14 a1);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T43f16(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.count */
extern T6 T43f45(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_count */
extern T6 T43f52(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_size */
extern T6 T43s57(TC* ac, T14 a1);
/* FILE_INFO.size */
extern T6 T166f19(TC* ac, T0* C);
/* FILE_INFO.file_info */
extern T6 T166s9(TC* ac, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T43f73(TC* ac, T0* C);
/* FILE_INFO.fast_update */
extern void T166f24(TC* ac, T0* C, T0* a1, T0* a2);
/* FILE_INFO.eif_file_stat */
extern T6 T166s15(TC* ac, T14 a1, T14 a2, T1 a3);
/* KL_TEXT_INPUT_FILE.old_is_open_write */
extern T1 T43f56(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.inode */
extern T6 T43f44(TC* ac, T0* C);
/* FILE_INFO.inode */
extern T6 T166f18(TC* ac, T0* C);
/* UC_UTF8_STRING.same_string */
extern T1 T1078f26(TC* ac, T0* C, T0* a1);
/* UC_STRING.same_string */
extern T1 T919f17(TC* ac, T0* C, T0* a1);
/* STRING_8.same_string */
extern T1 T17f22(TC* ac, T0* C, T0* a1);
/* STRING_8.same_characters */
extern T1 T17f31(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_TEXT_INPUT_FILE.tmp_file1 */
extern T0* T43s43(TC* ac);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T43f35(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T43f37(TC* ac, T0* C);
/* FILE_INFO.is_plain */
extern T1 T166f12(TC* ac, T0* C);
/* KL_STRING_ROUTINES.as_string_no_uc_string */
extern T0* T108s2(TC* ac, T0* a1);
extern T1 T108s2ot1(TC* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T43s22(TC* ac);
/* KL_TEXT_INPUT_FILE.string_name */
extern T0* T43f23(TC* ac, T0* C);
/* UC_UTF8_STRING.as_string_8 */
extern T0* T1078f27(TC* ac, T0* C);
/* STRING_8.valid_code */
extern T1 T17f28(TC* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.valid_code */
extern T1 T1078f52(TC* ac, T0* C, T10 a1);
/* UC_STRING.as_string_8 */
extern T0* T919f12(TC* ac, T0* C);
/* UC_STRING.valid_code */
extern T1 T919f39(TC* ac, T0* C, T10 a1);
/* STRING_8.as_string_8 */
extern T0* T17f14(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.reset */
extern void T43f74(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern T0* T152s25(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.rename_file */
extern void T151s40(TC* ac, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T151s27(TC* ac);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T152s8(TC* ac, T0* a1, T0* a2);
/* STRING_8.twin */
extern T0* T17f13(TC* ac, T0* C);
/* STRING_8.copy */
extern void T17f69(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T151s8(TC* ac, T0* a1, T0* a2);
/* GECC.execute_with_arguments */
extern T0* T118c11(TC* ac, T0* a1);
/* GECC.execute_with_arguments_and_error_handler */
extern void T118f12(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature GECC.execute_with_arguments_and_error_handler */
extern T0* T118f12ac1(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* PROCEDURE [TUPLE].set_rout_disp_final */
extern void T996f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* GECC.report_cannot_read_error */
extern void T118f16(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T160f9(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T160f11(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T39f7(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T39f8(TC* ac, T0* C);
/* UT_ERROR_HANDLER.message */
extern T0* T160f5(TC* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2275f5(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T2275f3(TC* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2275s6(TC* ac);
/* KL_ARGUMENTS.make */
extern T0* T33c6(TC* ac);
/* KL_ARGUMENTS.argument */
extern T0* T33s3(TC* ac, T6 a1);
/* IMMUTABLE_STRING_32.as_string_8 */
extern T0* T20f12(TC* ac, T0* C);
/* ARGUMENTS_32.argument */
extern T0* T156s2(TC* ac, T6 a1);
/* ARRAY [IMMUTABLE_STRING_32].item */
extern T0* T1073f5(TC* ac, T0* C, T6 a1);
/* ARGUMENTS_32.internal_argument_array */
extern T0* T156s3(TC* ac);
/* ARRAY [IMMUTABLE_STRING_32].put */
extern void T1073f8(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [IMMUTABLE_STRING_32].compare_objects */
extern void T1073f7(TC* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].make_filled */
extern T0* T1073c6(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [IMMUTABLE_STRING_32].make_filled_area */
extern void T1073f9(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].make_filled */
extern T0* T1074c6(TC* ac, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].fill_with */
extern void T1074f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [IMMUTABLE_STRING_32].extend */
extern void T1074f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern void T1074f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern T0* T1074c4(TC* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_empty */
extern T0* T20c17(TC* ac);
/* KL_ARGUMENTS.internal_arguments */
extern T0* T33s4(TC* ac);
/* ARGUMENTS_32.default_create */
extern T0* T156c5(TC* ac);
/* ARRAY [STRING_8].item */
extern T0* T34f5(TC* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].valid_index */
extern T1 T34f4(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T1078f40(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T1027f13(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T1027f17(TC* ac, T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T1027f23(TC* ac, T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T1027f15(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern T0* T1027f14(TC* ac, T0* C);
/* CHARACTER_8.is_digit */
extern T1 T2f27(TC* ac, T2 volatile* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T1027f22(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T1078f60(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T1027f21(TC* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T1027f20(TC* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T1027f19(TC* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T1027f18(TC* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T1027c16(TC* ac);
/* UC_STRING.to_integer */
extern T6 T919f30(TC* ac, T0* C);
/* UC_STRING.ctoi_convertor */
extern T0* T919f52(TC* ac, T0* C);
/* STRING_8.to_integer */
extern T6 T17f27(TC* ac, T0* C);
/* STRING_8.ctoi_convertor */
extern T0* T17f33(TC* ac, T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T1078f39(TC* ac, T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T1078f59(TC* ac, T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T1027f12(TC* ac, T0* C);
/* UC_STRING.is_integer */
extern T1 T919f29(TC* ac, T0* C);
/* UC_STRING.is_valid_integer_or_natural */
extern T1 T919f51(TC* ac, T0* C, T6 a1);
/* STRING_8.is_integer */
extern T1 T17f36(TC* ac, T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f43(TC* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T108s23(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T108s23ot1(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T108s4(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.append_substring_general */
extern void T1078f83(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.append_substring_general */
extern void T919f79(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.append_substring_general */
extern void T17f63(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_ROUTINES.appended_substring_8 */
extern T0* T108s9(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T108s9ot1(TC* ac, T0* a1);
extern T1 T108s9ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_substring */
extern void T1078f82(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.append_substring */
extern void T919f78(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.append_substring */
extern void T17f65(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T1078f24(TC* ac, T0* C, T6 a1);
/* UC_STRING.new_empty_string */
extern T0* T919f40(TC* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T108s3(TC* ac, T0* a1, T6 a2);
extern T1 T108s3ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.old_wipe_out */
extern void T1078f87(TC* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T1078f95(TC* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T1078f87p1(TC* ac, T0* C);
/* UC_STRING.old_wipe_out */
extern void T919f85(TC* ac, T0* C);
/* UC_STRING.wipe_out */
extern void T919f102(TC* ac, T0* C);
/* UC_STRING.wipe_out */
extern void T919f85p1(TC* ac, T0* C);
/* STRING_8.wipe_out */
extern void T17f62(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2275s4(TC* ac);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T2241f5(TC* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T2241f3(TC* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T2241s6(TC* ac);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T2241s4(TC* ac);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T2240f5(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T2240f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T2240s6(TC* ac);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T2240s4(TC* ac);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T2239f5(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T2239f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T2239s6(TC* ac);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T2239s4(TC* ac);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T2238f5(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T2238f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T2238s6(TC* ac);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T2238s4(TC* ac);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T2237f5(TC* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T2237f3(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T2237s6(TC* ac);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T2237s4(TC* ac);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2236f5(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T2236f3(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2236s6(TC* ac);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2236s4(TC* ac);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T2235f5(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T2235f3(TC* ac, T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T2235s6(TC* ac);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T2235s4(TC* ac);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.default_message */
extern T0* T2234f5(TC* ac, T0* C);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.message */
extern T0* T2234f3(TC* ac, T0* C, T0* a1);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.arguments */
extern T0* T2234s6(TC* ac);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.string_ */
extern T0* T2234s4(TC* ac);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T2233f5(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T2233f3(TC* ac, T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T2233s6(TC* ac);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T2233s4(TC* ac);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1679f5(TC* ac, T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1679f3(TC* ac, T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1679s6(TC* ac);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1679s4(TC* ac);
/* UT_VERSION_NUMBER.default_message */
extern T0* T103f3(TC* ac, T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T103f5(TC* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T103s7(TC* ac);
/* UT_VERSION_NUMBER.string_ */
extern T0* T103s6(TC* ac);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T83f3(TC* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T83f5(TC* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T83s7(TC* ac);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T83s6(TC* ac);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T83c8(TC* ac, T0* a1);
/* ARRAY [STRING_8].put */
extern void T34f8(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make_filled */
extern T0* T34c7(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [STRING_8].make_filled_area */
extern void T34f9(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].make_filled */
extern T0* T35c7(TC* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_8].fill_with */
extern void T35f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].extend */
extern void T35f10(TC* ac, T0* C, T0* a1);
/* SPECIAL [STRING_8].make_empty */
extern void T35f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].make_empty */
extern T0* T35c8(TC* ac, T6 a1);
/* GECC.process_lines */
extern void T118f14(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* MUTEX.unlock */
extern void T159f12(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_unlock */
extern void T159s15(TC* ac, T14 a1);
/* MUTEX.default_pointer */
extern T14 T159s7(TC* ac);
/* DS_ARRAYED_LIST [STRING_8].remove_first */
extern void T170f27(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].remove */
extern void T170f32(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].keep_head */
extern void T35f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].set_count */
extern void T35f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].move_left */
extern void T170f37(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_left */
extern void T170f36(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T1079f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].remove_last */
extern void T170f35(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_last_cursors_after */
extern void T170f38(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1079f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_after */
extern void T1079f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T170f8(TC* ac, T0* C);
/* MUTEX.lock */
extern void T159f11(TC* ac, T0* C);
/* MUTEX.current_thread_id */
extern T14 T159s5(TC* ac);
/* MUTEX.eif_thr_mutex_lock */
extern void T159s14(TC* ac, T14 a1);
/* GECC.process */
extern void T118f15(TC* ac, T0* C, T0* a1, T6 a2);
/* THREAD_CONTROL.join_all */
extern void T1025s1(TC* ac);
/* EXECUTION_ENVIRONMENT.sleep */
extern void T105s12(TC* ac, T7 a1);
/* EXECUTION_ENVIRONMENT.eif_sleep */
extern void T105s13(TC* ac, T7 a1);
/* WORKER_THREAD.launch */
extern void T1024f10(TC* ac, T0* C);
/* WORKER_THREAD.launch_with_attributes */
extern void T1024f12(TC* ac, T0* C, T0* a1);
/* WORKER_THREAD.last_created_thread */
extern T14 T1024s6(TC* ac);
/* WORKER_THREAD.thr_set_terminated */
extern void T1024f14(TC* ac, T0* C, T1 a1);
/* WORKER_THREAD.thr_set_terminated */
extern void T1024a14(T0* C, T1 a1);
/* WORKER_THREAD.thr_main */
extern void T1024f13(TC* ac, T0* C, T6 a1);
/* WORKER_THREAD.thr_main */
extern void T1024a13(T0* C, T6 a1);
/* WORKER_THREAD.execute_procedure */
extern void T1024f16(TC* ac, T0* C);
/* WORKER_THREAD.default_pointer */
extern T14 T1024s8(TC* ac);
/* WORKER_THREAD.create_thread_with_attr */
extern void T1024s15(TC* ac, T0* a1, T14 a2, T14 a3, T14 a4);
/* THREAD_ATTRIBUTES.item */
extern T14 T1459f4(TC* ac, T0* C);
/* WORKER_THREAD.is_launchable */
extern T1 T1024f5(TC* ac, T0* C);
/* MUTEX.is_set */
extern T1 T159f6(TC* ac, T0* C);
/* CELL [BOOLEAN].put */
extern void T1460f2(TC* ac, T0* C, T1 a1);
/* CELL [BOOLEAN].put */
extern T0* T1460c2(TC* ac, T1 a1);
/* WORKER_THREAD.is_last_launch_successful_cell */
extern T0* T1024f7(TC* ac, T0* C);
/* THREAD_ATTRIBUTES.make */
extern T0* T1459c7(TC* ac);
/* THREAD_ATTRIBUTES.set_priority */
extern void T1459f9(TC* ac, T0* C, T6 a1);
/* THREAD_ATTRIBUTES.c_set_priority */
extern void T1459s10(TC* ac, T14 a1, T6 a2);
/* THREAD_ATTRIBUTES.default_priority */
extern T6 T1459s5(TC* ac);
/* THREAD_ATTRIBUTES.mem_make */
extern void T1459f8(TC* ac, T0* C);
/* THREAD_ATTRIBUTES.structure_size */
extern T6 T1459s6(TC* ac);
/* WORKER_THREAD.make */
extern T0* T1024c9(TC* ac, T0* a1);
/* WORKER_THREAD.thread_make */
extern void T1024f11(TC* ac, T0* C);
/* GECC.thread_count */
extern T6 T118f8(TC* ac, T0* C);
/* AP_INTEGER_OPTION.parameter */
extern T6 T59f14(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T229f7(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].is_empty */
extern T1 T229f6(TC* ac, T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T59f13(TC* ac, T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T59f16(TC* ac, T0* C);
/* EXECUTION_ENVIRONMENT.available_cpu_count */
extern T10 T105s5(TC* ac);
/* MUTEX.make */
extern T0* T159c10(TC* ac);
/* MUTEX.eif_thr_mutex_create */
extern T14 T159s8(TC* ac);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T170f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T170f25(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [STRING_8].force */
extern void T860s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T170f31(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].aliased_resized_area */
extern T0* T860s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_8].aliased_resized_area */
extern T0* T35f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T170f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T170f16(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.ends_with */
extern T1 T1078f28(TC* ac, T0* C, T0* a1);
/* STRING_8.area_upper */
extern T6 T17f30(TC* ac, T0* C);
/* UC_UTF8_STRING.area_upper */
extern T6 T1078f53(TC* ac, T0* C);
/* UC_STRING.ends_with */
extern T1 T919f22(TC* ac, T0* C, T0* a1);
/* UC_STRING.area_upper */
extern T6 T919f45(TC* ac, T0* C);
/* STRING_8.ends_with */
extern T1 T17f25(TC* ac, T0* C, T0* a1);
/* STRING_8.starts_with */
extern T1 T17f21(TC* ac, T0* C, T0* a1);
/* STRING_8.adjust */
extern void T17f68(TC* ac, T0* C);
/* STRING_8.right_adjust */
extern void T17f74(TC* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f9(TC* ac, T2 volatile* C);
/* STRING_8.left_adjust */
extern void T17f73(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T43f64(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T43f69(TC* ac, T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER_8].put_right */
extern void T164f4(TC* ac, T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER_8].make */
extern T0* T164c3(TC* ac, T2 a1);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T43f68(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T43f72(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T43s34(TC* ac, T14 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T43f32(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T43s36(TC* ac, T14 a1);
/* KL_STRING_ROUTINES.wipe_out */
extern void T108s24(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T170f21(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T170c21(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].set_internal_cursor */
extern void T170f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T170f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T1079c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T860s1(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T860c3(TC* ac);
/* GECC.parse_arguments */
extern void T118f13(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_info_message */
extern void T160f8(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T213f12(TC* ac, T0* C, T0* a1);
/* AP_PARSER.full_usage_instruction */
extern T0* T52f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T215f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T215f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T1109f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T215f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T1109f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T215f23(TC* ac, T0* C, T0* a1);
/* AP_PARSER.alternative_usage_instruction */
extern T0* T52f21(TC* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T211f5(TC* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T211f12(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.put */
extern void T1078f112(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.put */
extern void T919f111(TC* ac, T0* C, T2 a1, T6 a2);
/* ST_WORD_WRAPPER.is_space */
extern T1 T211f8(TC* ac, T0* C, T2 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T108s13(TC* ac, T0* a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T211s4(TC* ac);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T211f10(TC* ac, T0* C, T6 a1);
/* AP_PARSER.wrapper */
extern T0* T52f12(TC* ac, T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T211f11(TC* ac, T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T211c9(TC* ac);
/* UC_UTF8_STRING.keep_head */
extern void T1078f75(TC* ac, T0* C, T6 a1);
/* UC_STRING.keep_head */
extern void T919f82(TC* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T152s14(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T152s11(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T151s14(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T151s11(TC* ac, T0* a1);
/* AP_PARSER.arguments */
extern T0* T52s27(TC* ac);
/* AP_PARSER.file_system */
extern T0* T52s26(TC* ac);
/* AP_PARSER.unix_file_system */
extern T0* T52s15(TC* ac);
/* AP_PARSER.windows_file_system */
extern T0* T52s14(TC* ac);
/* AP_PARSER.operating_system */
extern T0* T52s13(TC* ac);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T53f20(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T53f22(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T53f23(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T218f9(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T53f24(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T218f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T53f9(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T53f11(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T53f8(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T53f10(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T53f19(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T53f21(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T53f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].off */
extern T1 T218f6(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T213f14(TC* ac, T0* C);
/* CHARACTER_8.out */
extern T0* T2f4(TC* ac, T2 volatile* C);
/* AP_FLAG.example */
extern T0* T46f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T215f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T215f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T215f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T215f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T1109f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T215f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T215f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T1109f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T215f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T1109f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T1109f6(TC* ac, T0* C);
/* AP_PARSER.usage_instruction */
extern T0* T52f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T214f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T214f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T1105f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T214f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T1105f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T214f26(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.example */
extern T0* T59f15(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T58f17(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T57f13(TC* ac, T0* C);
/* AP_STRING_OPTION.example */
extern T0* T54f18(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.is_hidden */
extern T1 T213f6(TC* ac, T0* C);
/* AP_INTEGER_OPTION.is_hidden */
extern T1 T59f8(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.is_hidden */
extern T1 T58f7(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.is_hidden */
extern T1 T57f8(TC* ac, T0* C);
/* AP_FLAG.is_hidden */
extern T1 T46f6(TC* ac, T0* C);
/* AP_STRING_OPTION.is_hidden */
extern T1 T54f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T214f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T214f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T214f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T214f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].after */
extern T1 T1105f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T214f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T214f23(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_after */
extern void T1105f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T214f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T1105f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].before */
extern T1 T1105f6(TC* ac, T0* C);
/* GECC.report_version_number */
extern void T118f17(TC* ac, T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T160f10(TC* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T103c8(TC* ac, T0* a1);
/* AP_PARSER.parse_array */
extern void T52f44(TC* ac, T0* C, T0* a1);
/* AP_PARSER.parse_list */
extern void T52f45(TC* ac, T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T52f49(TC* ac, T0* C);
/* AP_PARSER.exceptions */
extern T0* T52s31(TC* ac);
/* KL_EXCEPTIONS.default_create */
extern T0* T36c1(TC* ac);
/* AP_ERROR_HANDLER.report_error_message */
extern void T216f10(TC* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T216f10p1(TC* ac, T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T52f48(TC* ac, T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T113c23(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T213f10(TC* ac, T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T59f17(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T58f13(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T57f15(TC* ac, T0* C);
/* AP_FLAG.name */
extern T0* T46f10(TC* ac, T0* C);
/* AP_STRING_OPTION.name */
extern T0* T54f14(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.occurrences */
extern T6 T213f5(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T58f14(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T57f16(TC* ac, T0* C);
/* AP_FLAG.occurrences */
extern T6 T46f1(TC* ac, T0* C);
/* AP_STRING_OPTION.occurrences */
extern T6 T54f17(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.maximum_occurrences */
extern T6 T213f8(TC* ac, T0* C);
/* AP_INTEGER_OPTION.maximum_occurrences */
extern T6 T59f10(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.maximum_occurrences */
extern T6 T58f9(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.maximum_occurrences */
extern T6 T57f10(TC* ac, T0* C);
/* AP_FLAG.maximum_occurrences */
extern T6 T46f8(TC* ac, T0* C);
/* AP_STRING_OPTION.maximum_occurrences */
extern T6 T54f10(TC* ac, T0* C);
/* AP_ERROR_HANDLER.report_error */
extern void T216f9(TC* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T216f6(TC* ac, T0* C, T0* a1);
/* AP_ERROR.default_message */
extern T0* T113f17(TC* ac, T0* C);
/* AP_ERROR.message */
extern T0* T113f18(TC* ac, T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T113s20(TC* ac);
/* AP_ERROR.string_ */
extern T0* T113s19(TC* ac);
/* AP_ERROR.make_missing_option_error */
extern T0* T113c22(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T213f13(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T58f16(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T57f18(TC* ac, T0* C);
/* AP_STRING_OPTION.was_found */
extern T1 T54f13(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.is_mandatory */
extern T1 T213f7(TC* ac, T0* C);
/* AP_INTEGER_OPTION.is_mandatory */
extern T1 T59f9(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.is_mandatory */
extern T1 T58f8(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.is_mandatory */
extern T1 T57f9(TC* ac, T0* C);
/* AP_FLAG.is_mandatory */
extern T1 T46f7(TC* ac, T0* C);
/* AP_STRING_OPTION.is_mandatory */
extern T1 T54f9(TC* ac, T0* C);
/* AP_PARSER.parse_argument */
extern void T52f47(TC* ac, T0* C, T0* a1);
/* AP_PARSER.parse_short */
extern void T52f51(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T213f26(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T213f27(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T213s18(TC* ac);
/* AP_ERROR_HANDLER.report_info_message */
extern void T216f11(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T213f17(TC* ac, T0* C, T0* a1);
/* AP_PARSER.full_help_text */
extern T0* T52f35(TC* ac, T0* C);
/* AP_PARSER.option_help_text */
extern T0* T52f40(TC* ac, T0* C, T0* a1, T6 a2);
/* AP_DISPLAY_HELP_FLAG.description */
extern T0* T213f1(TC* ac, T0* C);
/* AP_INTEGER_OPTION.description */
extern T0* T59f3(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.description */
extern T0* T58f3(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.description */
extern T0* T57f3(TC* ac, T0* C);
/* AP_FLAG.description */
extern T0* T46f2(TC* ac, T0* C);
/* AP_STRING_OPTION.description */
extern T0* T54f3(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T213f19(TC* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T59f21(TC* ac, T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T59f22(TC* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T59f21p1(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T58f24(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T58f25(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T58f24p1(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T57f23(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T57f24(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T57f23p1(TC* ac, T0* C);
/* AP_FLAG.names */
extern T0* T46f16(TC* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T54f22(TC* ac, T0* C);
/* AP_STRING_OPTION.has_long_form */
extern T1 T54f23(TC* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T54f22p1(TC* ac, T0* C);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T2187f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T2187f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T2187f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T953f14(TC* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].move_data */
extern void T154f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T154f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].force */
extern void T154f11(TC* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T154f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].capacity */
extern T6 T953f7(TC* ac, T0* C);
/* ARRAY [INTEGER_32].set_area */
extern void T953f16(TC* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T154f4(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].make_empty_area */
extern void T953f15(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T953f6(TC* ac, T0* C);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T953f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T214f28(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T214f27(TC* ac, T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T2186f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T108s20(TC* ac, T0* a1, T0* a2);
extern T1 T108s20ot1(TC* ac, T0* a1);
extern T1 T108s20ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.three_way_unicode_comparison */
extern T6 T1078f70(TC* ac, T0* C, T0* a1);
extern T1 T1078f70ot1(TC* ac, T0* a1);
/* UC_STRING.three_way_unicode_comparison */
extern T6 T919f70(TC* ac, T0* C, T0* a1);
extern T1 T919f70ot1(TC* ac, T0* a1);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T2186s2(TC* ac);
/* AP_DISPLAY_HELP_FLAG.long_form */
extern T0* T213f4(TC* ac, T0* C);
/* AP_INTEGER_OPTION.long_form */
extern T0* T59f6(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.long_form */
extern T0* T58f6(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.long_form */
extern T0* T57f7(TC* ac, T0* C);
/* AP_FLAG.long_form */
extern T0* T46f3(TC* ac, T0* C);
/* AP_STRING_OPTION.long_form */
extern T0* T54f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T214f16(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].item */
extern T6 T953f4(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T953f12(TC* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].make_filled */
extern T0* T953c10(TC* ac, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].make_filled_area */
extern void T953f13(TC* ac, T0* C, T6 a1, T6 a2);
/* AP_PARSER.all_options */
extern T0* T52f25(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T214f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T214c17(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].set_internal_cursor */
extern void T214f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T214f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T1105c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T1108s1(TC* ac, T6 a1);
/* SPECIAL [AP_OPTION].make_empty */
extern T0* T1107c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T1108c3(TC* ac);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T2187c2(TC* ac, T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T2186c3(TC* ac);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T59f29(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T113c21(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T229f10(TC* ac, T0* C, T6 a1);
/* DS_LINKABLE [INTEGER_32].put_right */
extern void T1117f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [INTEGER_32].make */
extern T0* T1117c3(TC* ac, T6 a1);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T58f32(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern T0* T58f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T170f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T170f43(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T58s23(TC* ac);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T796c3(TC* ac);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T170f18(TC* ac, T0* C, T0* a1);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T796f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T108s14(TC* ac, T0* a1, T0* a2);
extern T1 T108s14ot1(TC* ac, T0* a1);
extern T1 T108s14ot2(TC* ac, T0* a1);
/* CHARACTER_32.lower */
extern T3 T3f7(TC* ac, T3 volatile* C);
/* CHARACTER_PROPERTY.to_lower */
extern T3 T1462f1(TC* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_lower_table_16 */
extern T0* T1462f19(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_15 */
extern T0* T1462f18(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_14 */
extern T0* T1462f17(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_13 */
extern T0* T1462f16(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_12 */
extern T0* T1462f15(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_11 */
extern T0* T1462f14(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_10 */
extern T0* T1462f13(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_9 */
extern T0* T1462f12(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_8 */
extern T0* T1462f11(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_7 */
extern T0* T1462f10(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_6 */
extern T0* T1462f9(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_5 */
extern T0* T1462f8(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_4 */
extern T0* T1462f7(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_3 */
extern T0* T1462f6(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_2 */
extern T0* T1462f5(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_1 */
extern T0* T1462f4(TC* ac, T0* C);
/* CHARACTER_32.plus */
extern T3 T3f6(TC* ac, T3 volatile* C, T10 a1);
/* CHARACTER_32.is_less_equal */
extern T1 T3f13(TC* ac, T3 volatile* C, T3 a1);
/* CHARACTER_32.is_less */
extern T1 T3f15(TC* ac, T3 volatile* C, T3 a1);
/* CHARACTER_32.properties */
extern T0* T3f10(TC* ac, T3 volatile* C);
/* CHARACTER_PROPERTY.make */
extern T0* T1462c37(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T916s2(TC* ac, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern T0* T916s7(TC* ac);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern T0* T916s10(TC* ac);
/* SPECIAL [ARRAY [INTEGER_32]].make_filled */
extern T0* T1358c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ARRAY [INTEGER_32]].fill_with */
extern void T1358f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ARRAY [INTEGER_32]].extend */
extern void T1358f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [ARRAY [INTEGER_32]].make_empty */
extern void T1358f6(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern T0* T916s17(TC* ac);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T1360s1(TC* ac, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T916s28(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern T0* T916s9(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern T0* T916s27(TC* ac);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_filled */
extern T0* T1359c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].fill_with */
extern void T1359f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].extend */
extern void T1359f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_empty */
extern void T1359f6(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern T0* T916s8(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern T0* T916s26(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern T0* T916s25(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern T0* T916s24(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern T0* T916s23(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern T0* T916s22(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern T0* T916s21(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern T0* T916s20(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern T0* T916s19(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern T0* T916s18(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern T0* T916s16(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern T0* T916s15(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern T0* T916s14(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern T0* T916s13(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern T0* T916s12(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern T0* T916s11(TC* ac);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_natural_32_code */
extern T1 T916s1(TC* ac, T10 a1);
/* KL_STRING_ROUTINES.unicode */
extern T0* T108s16(TC* ac);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T916c57(TC* ac);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T796s2(TC* ac);
/* AP_BOOLEAN_OPTION.true_strings */
extern T0* T58f21(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T226f10(TC* ac, T0* C, T1 a1);
/* DS_LINKABLE [BOOLEAN].put_right */
extern void T1115f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [BOOLEAN].make */
extern T0* T1115c3(TC* ac, T1 a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T57f33(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T221f15(TC* ac, T0* C, T0* a1);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T222f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [detachable STRING_8].force_last */
extern void T219f19(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].force */
extern void T1113s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_LIST [detachable STRING_8].resize */
extern void T219f20(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].aliased_resized_area */
extern T0* T1113s2(TC* ac, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable STRING_8].new_capacity */
extern T6 T219f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].extendible */
extern T1 T219f11(TC* ac, T0* C, T6 a1);
/* AP_FLAG.record_occurrence */
extern void T46f24(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.record_occurrence */
extern void T54f31(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T113c25(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T170f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T170f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T1079f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].before */
extern T1 T1079f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T1079f5(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T213f9(TC* ac, T0* C);
/* AP_INTEGER_OPTION.needs_parameter */
extern T1 T59f5(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.needs_parameter */
extern T1 T58f5(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.needs_parameter */
extern T1 T57f6(TC* ac, T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T46f12(TC* ac, T0* C);
/* AP_STRING_OPTION.needs_parameter */
extern T1 T54f6(TC* ac, T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T113c24(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.short_form */
extern T2 T213f2(TC* ac, T0* C);
/* AP_INTEGER_OPTION.short_form */
extern T2 T59f7(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.short_form */
extern T2 T58f11(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.short_form */
extern T2 T57f12(TC* ac, T0* C);
/* AP_FLAG.short_form */
extern T2 T46f4(TC* ac, T0* C);
/* AP_STRING_OPTION.short_form */
extern T2 T54f12(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.has_short_form */
extern T1 T213f3(TC* ac, T0* C);
/* AP_INTEGER_OPTION.has_short_form */
extern T1 T59f11(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_short_form */
extern T1 T58f10(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_short_form */
extern T1 T57f11(TC* ac, T0* C);
/* AP_FLAG.has_short_form */
extern T1 T46f5(TC* ac, T0* C);
/* AP_STRING_OPTION.has_short_form */
extern T1 T54f11(TC* ac, T0* C);
/* AP_PARSER.parse_long */
extern void T52f50(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T113c26(TC* ac, T0* a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T213f11(TC* ac, T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T59f18(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T58f15(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T57f17(TC* ac, T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T46f13(TC* ac, T0* C);
/* AP_STRING_OPTION.allows_parameter */
extern T1 T54f16(TC* ac, T0* C);
/* AP_PARSER.string_ */
extern T0* T52s33(TC* ac);
/* UC_UTF8_STRING.index_of */
extern T6 T1078f30(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T1078f54(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.index_of */
extern T6 T919f24(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.index_of_item_code */
extern T6 T919f47(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f41(TC* ac, T0* C, T2 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T170f24(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T170f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T170f33(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T170f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T170f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T170f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T170f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T170f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T170f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T170f29(TC* ac, T0* C, T0* a1);
/* AP_PARSER.reset_parser */
extern void T52f46(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T213f25(TC* ac, T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T59f28(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T229c8(TC* ac);
/* DS_LINKED_LIST [INTEGER_32].set_internal_cursor */
extern void T229f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T229f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T1118c3(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T58f31(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T226c8(TC* ac);
/* DS_LINKED_LIST [BOOLEAN].set_internal_cursor */
extern void T226f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T226f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T1116c3(TC* ac, T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T57f31(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].make */
extern T0* T219c13(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].set_internal_cursor */
extern void T219f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable STRING_8].new_cursor */
extern T0* T219f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].make */
extern T0* T220c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].make */
extern T0* T1113s1(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].default_create */
extern T0* T1113c3(TC* ac);
/* AP_FLAG.reset */
extern void T46f22(TC* ac, T0* C);
/* AP_STRING_OPTION.reset */
extern void T54f30(TC* ac, T0* C);
/* AP_ERROR_HANDLER.reset */
extern void T216f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_array */
extern T0* T170c22(TC* ac, T0* a1);
/* ARRAY [STRING_8].count */
extern T6 T34f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T215f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T1111s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T1110f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T1110f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T215f19(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T1111s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T1110f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T215f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T215f10(TC* ac, T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T53c13(TC* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T53f17(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T53f18(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T53f7(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T218c7(TC* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T53f16(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T53f15(TC* ac, T0* C, T0* a1);
/* AP_FLAG.set_description */
extern void T46f18(TC* ac, T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T46c19(TC* ac, T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T46f21(TC* ac, T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T46f23(TC* ac, T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T46f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T214f18(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].force */
extern void T1108s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_OPTION].fill_with */
extern void T1107f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].extend */
extern void T1107f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T214f22(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].aliased_resized_area */
extern T0* T1108s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].aliased_resized_area */
extern T0* T1107f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T214f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T214f13(TC* ac, T0* C, T6 a1);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T59f25(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T59f24(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T59c23(TC* ac, T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T59f27(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T59f26(TC* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T59f26p1(TC* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T59f26p0(TC* ac, T0* C);
/* AP_PARSER.set_parameters_description */
extern void T52f43(TC* ac, T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T52f42(TC* ac, T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T52c41(TC* ac);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T213f21(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T213c20(TC* ac, T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T213f24(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T213f23(TC* ac, T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T213f22(TC* ac, T0* C);
/* AP_PARSER.make */
extern void T52f41p1(TC* ac, T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T216c7(TC* ac);
/* KL_STANDARD_FILES.output */
extern T0* T38s2(TC* ac);
/* KL_STDOUT_FILE.make */
extern T0* T161c5(TC* ac);
/* AP_ERROR_HANDLER.std */
extern T0* T216s5(TC* ac);
/* KL_STANDARD_FILES.default_create */
extern T0* T38c4(TC* ac);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T215c14(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T215f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T215f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T1109c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T1111s1(TC* ac, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T1110c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T1111c3(TC* ac);
/* GECC.ise_variables */
extern T0* T118s7(TC* ac);
/* UT_ISE_VARIABLES.default_create */
extern T0* T45c17(TC* ac);
/* GECC.gobo_variables */
extern T0* T118s6(TC* ac);
/* UT_GOBO_VARIABLES.default_create */
extern T0* T44c15(TC* ac);
/* GECC.arguments */
extern T0* T118s9(TC* ac);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T160c7(TC* ac);
/* UT_ERROR_HANDLER.std */
extern T0* T160s4(TC* ac);
/* INTEGER_32.out */
extern T0* T6f7(TC* ac, T6 volatile* C);
/* STRING_8.append_integer */
extern void T17f51(TC* ac, T0* C, T6 a1);
/* UT_GOBO_VARIABLES.executable_pathname */
extern T0* T44s2(TC* ac, T0* a1);
/* UT_GOBO_VARIABLES.gobo_value */
extern T0* T44s1(TC* ac);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T49s3(TC* ac, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T49s7(TC* ac);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern T0* T49s6(TC* ac);
/* UT_GOBO_VARIABLES.execution_environment */
extern T0* T44s4(TC* ac);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T49c18(TC* ac);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T152s10(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T151s10(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T152s4(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T151s4(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.extension */
extern T0* T152s9(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.extension */
extern T0* T151s9(TC* ac, T0* a1);
/* UT_GOBO_VARIABLES.file_system */
extern T0* T44s6(TC* ac);
/* UT_GOBO_VARIABLES.unix_file_system */
extern T0* T44s10(TC* ac);
/* UT_GOBO_VARIABLES.windows_file_system */
extern T0* T44s9(TC* ac);
/* UT_GOBO_VARIABLES.operating_system */
extern T0* T44s8(TC* ac);
/* KL_EXECUTION_ENVIRONMENT.current_executable_pathname */
extern T0* T49s1(TC* ac);
/* STRING_8.make_from_c */
extern T0* T17c59(TC* ac, T14 a1);
/* C_STRING.read_substring_into_character_8_area */
extern void T31f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.read_into_special_character_8 */
extern void T162f15(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f8(TC* ac, T0* C, T6 a1);
/* C_STRING.set_shared_from_pointer */
extern void T31f12(TC* ac, T0* C, T14 a1);
/* C_STRING.set_shared_from_pointer_and_count */
extern void T31f16(TC* ac, T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T162f17(TC* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.c_strlen */
extern T6 T31s5(TC* ac, T14 a1);
/* STRING_8.c_string_provider */
extern T0* T17f35(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.eif_current_executable_pathname_ptr */
extern T6 T49s4(TC* ac, T14 a1, T6 a2);
/* GEC.c_compile_using_gecc */
extern T1 T26f69(TC* ac, T0* C);
/* GEC.string_ */
extern T0* T26s56(TC* ac);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T57f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].last */
extern T0* T219f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].is_empty */
extern T1 T219f8(TC* ac, T0* C);
/* KL_SHELL_COMMAND.execute */
extern void T117f11(TC* ac, T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern T0* T117s5(TC* ac);
/* KL_SHELL_COMMAND.system */
extern void T117f12(TC* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T117s7(TC* ac, T14 a1);
/* KL_SHELL_COMMAND.default_shell */
extern T0* T117s6(TC* ac);
/* KL_SHELL_COMMAND.item */
extern T0* T117s8(TC* ac, T0* a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T117s9(TC* ac, T14 a1);
/* KL_SHELL_COMMAND.make */
extern T0* T117c10(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T152f5(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T152f24(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern T0* T152s31(TC* ac);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T152s23(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T151f5(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T108s18(TC* ac, T0* a1, T0* a2);
/* STRING_32.plus */
extern T0* T18f17(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.as_string_32 */
extern T0* T1078f22(TC* ac, T0* C);
/* STRING_32.as_string_32 */
extern T0* T18f16(TC* ac, T0* C);
/* UC_STRING.as_string_32 */
extern T0* T919f64(TC* ac, T0* C);
/* STRING_8.as_string_32 */
extern T0* T17f44(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T151f26(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T151f25(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T151s34(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T151s18(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T151s24(TC* ac, T0* a1);
/* GEC.c_compile_using_script */
extern T1 T26f68(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.cd */
extern void T152f36(TC* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.change_working_path */
extern void T105f14(TC* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_chdir */
extern T6 T105s9(TC* ac, T14 a1);
/* PATH.to_pointer */
extern T0* T1026f14(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.cd */
extern void T151f39(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.plus */
extern T0* T1078f12(TC* ac, T0* C, T0* a1);
/* UC_STRING.plus */
extern T0* T919f20(TC* ac, T0* C, T0* a1);
/* STRING_8.plus */
extern T0* T17f5(TC* ac, T0* C, T0* a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern T1 T119s1(TC* ac);
/* GEC.operating_system */
extern T0* T26s66(TC* ac);
/* ET_CLASS.lower_name */
extern T0* T70f147(TC* ac, T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T307f28(TC* ac, T0* C);
/* UC_UTF8_STRING.as_lower */
extern T0* T1078f11(TC* ac, T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T1078f91(TC* ac, T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T1078s64(TC* ac);
/* UC_STRING.as_lower */
extern T0* T919f19(TC* ac, T0* C);
/* UC_STRING.to_lower */
extern void T919f91(TC* ac, T0* C);
/* UC_STRING.unicode */
extern T0* T919s62(TC* ac);
/* STRING_8.as_lower */
extern T0* T17f38(TC* ac, T0* C);
/* STRING_8.to_lower */
extern void T17f78(TC* ac, T0* C);
/* STRING_8.to_lower_area */
extern void T17f81(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CHARACTER_8.lower */
extern T2 T2f24(TC* ac, T2 volatile* C);
/* ET_CLASS_TYPE.base_class */
extern T0* T102f11(TC* ac, T0* C);
/* ET_CLASS.actual_class */
extern T0* T70f66(TC* ac, T0* C);
/* ET_MASTER_CLASS.actual_class */
extern T0* T189f26(TC* ac, T0* C);
/* GEC.no_c_compile */
extern T1 T26f54(TC* ac, T0* C);
/* GEC.compile_degree_minus_3 */
extern void T26f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.dynamic_feature_count */
extern T6 T95f64(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.procedures */
extern T0* T1060f19(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.procedures */
extern T0* T1059f19(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.procedures */
extern T0* T904f15(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.procedures */
extern T0* T978f15(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.procedures */
extern T0* T843f14(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.queries */
extern T0* T1060f7(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.queries */
extern T0* T1059f7(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.queries */
extern T0* T904f7(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.queries */
extern T0* T978f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.queries */
extern T0* T843f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T116f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.alive_dynamic_type_count */
extern T6 T95f76(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_alive */
extern T1 T1060f4(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_alive */
extern T1 T1059f4(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_alive */
extern T1 T904f4(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_alive */
extern T1 T978f4(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_alive */
extern T1 T843f1(TC* ac, T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T161f7(TC* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.put_integer_64 */
extern void T161f11(TC* ac, T0* C, T7 a1);
/* KL_STDOUT_FILE.put_character */
extern void T161f10(TC* ac, T0* C, T2 a1);
/* CONSOLE.put_character */
extern void T1669f24(TC* ac, T0* C, T2 a1);
/* CONSOLE.console_pc */
extern void T1669s30(TC* ac, T14 a1, T2 a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T230f6(TC* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T230f10(TC* ac, T0* C, T7 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T230f8(TC* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.generate */
extern void T114f689(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].wipe_out */
extern void T831f52(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_wipe_out */
extern void T831f69(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_wipe_out */
extern void T831f68(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_wipe_out */
extern void T831f67(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_wipe_out */
extern void T831f66(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T831f58(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors_after */
extern void T831f65(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T964f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_after */
extern void T964f14(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T114f696(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T114f699(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T63f194(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T63f198(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_error */
extern void T63f200(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T63f198p1(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T63f11(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T2185f12(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T2185f7(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T2185s6(TC* ac);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T2185s9(TC* ac);
/* ET_UNIVERSE_ERROR.default_message */
extern T0* T2184f12(TC* ac, T0* C);
/* ET_UNIVERSE_ERROR.message */
extern T0* T2184f7(TC* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.arguments */
extern T0* T2184s6(TC* ac);
/* ET_UNIVERSE_ERROR.string_ */
extern T0* T2184s9(TC* ac);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T2031f12(TC* ac, T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T2031f7(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T2031s6(TC* ac);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T2031s9(TC* ac);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1680f5(TC* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1680f3(TC* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1680s6(TC* ac);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1680s4(TC* ac);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T1466f44(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T1466f15(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T1466s12(TC* ac);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T1466s43(TC* ac);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T1464f5(TC* ac, T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T1464f7(TC* ac, T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T1464s6(TC* ac);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T1464s9(TC* ac);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T1463f5(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T1463f7(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T1463s6(TC* ac);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T1463s9(TC* ac);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T1465f11(TC* ac, T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T1465f14(TC* ac, T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T1465s12(TC* ac);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T1465s16(TC* ac);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T966f5(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T966f3(TC* ac, T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T966s6(TC* ac);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T966s4(TC* ac);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.default_message */
extern T0* T965f5(TC* ac, T0* C);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.message */
extern T0* T965f3(TC* ac, T0* C, T0* a1);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.arguments */
extern T0* T965s6(TC* ac);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.string_ */
extern T0* T965s4(TC* ac);
/* UT_MESSAGE.default_message */
extern T0* T106f3(TC* ac, T0* C);
/* UT_MESSAGE.message */
extern T0* T106f5(TC* ac, T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T106s7(TC* ac);
/* UT_MESSAGE.string_ */
extern T0* T106s6(TC* ac);
/* ET_ERROR_HANDLER.report_error */
extern void T42f194(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T42f198(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_error */
extern void T42f200(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T42f198p1(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T42f11(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T114f203(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T966c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T114f697(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.change_mode */
extern void T963f41(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T963f50(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T963s57(TC* ac, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T963f23(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T963f17(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T963s31(TC* ac, T14 a1);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T963f21(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T963f16(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T963f39(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T963f45(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T963s19(TC* ac);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T963s53(TC* ac, T14 a1);
/* UC_UTF8_STRING.remove_tail */
extern void T1078f76(TC* ac, T0* C, T6 a1);
/* UC_STRING.remove_tail */
extern void T919f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].back */
extern void T964f13(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_back */
extern void T962f79(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.add_traversing_cursor */
extern void T962f81(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T964f16(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.remove_traversing_cursor */
extern void T962f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_before */
extern void T964f19(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.clashes_item */
extern T6 T962f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_back */
extern void T831f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T831f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T831f77(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T831f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T964f8(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_item */
extern T0* T962f50(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.item_storage_item */
extern T0* T962f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T831f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T831f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T964f6(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_key */
extern T0* T962f51(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.key_storage_item */
extern T0* T962f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T831f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T831f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].before */
extern T1 T964f5(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].finish */
extern void T964f12(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_finish */
extern void T962f78(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.cursor_off */
extern T1 T962f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].off */
extern T1 T964f10(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.is_empty */
extern T1 T962f52(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_finish */
extern void T831f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T831f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T831f29(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T831f22(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T964c11(TC* ac, T0* a1);
/* DS_STRING_HASH_TABLE.item */
extern T0* T962f23(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.search_position */
extern void T962f60(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.hash_position */
extern T6 T962f26(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T1078f13(TC* ac, T0* C);
/* UC_UTF8_STRING.string */
extern T0* T1078f38(TC* ac, T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T1078f13p1(TC* ac, T0* C);
/* UC_STRING.hash_code */
extern T6 T919f14(TC* ac, T0* C);
/* UC_STRING.string */
extern T0* T919f42(TC* ac, T0* C);
/* UC_STRING.hash_code */
extern T6 T919f14p1(TC* ac, T0* C);
/* STRING_8.hash_code */
extern T6 T17f37(TC* ac, T0* C);
/* KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T223f1(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T223f1e1(TC* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_equal */
extern T1 T1078f46(TC* ac, T0* C, T0* a1);
/* UC_STRING.is_equal */
extern T1 T919f23(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.slots_item */
extern T6 T962f24(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.value */
extern T0* T962f25(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.position_of_key */
extern T6 T962f21(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.expanded_string */
extern T0* T962f43(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_STRING_HASH_TABLE.string_ */
extern T0* T962s29(TC* ac);
/* UC_UTF8_STRING.starts_with */
extern T1 T1078f29(TC* ac, T0* C, T0* a1);
/* UC_STRING.starts_with */
extern T1 T919f15(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T107f186(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T107f343(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T107f347(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T107f322(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T107f336(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T107f149(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T107f236(TC* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T107f303(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T107f302(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern T6 T107f57(TC* ac, T0* C);
/* KL_PLATFORM.maximum_integer */
extern T6 T1062s1(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T107s187(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T107f301(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T10 T912f8(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T107f300(TC* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T912f5(TC* ac, T0* C, T6 a1, T10 a2);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].item */
extern T0* T1353f9(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T107f299(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T107f305(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern T0* T107s150(TC* ac);
/* RX_CHARACTER_SET.make */
extern T0* T913c16(TC* ac, T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T913f17(TC* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T913f14(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].force */
extern void T1356f60(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_put */
extern void T1356f78(TC* ac, T0* C, T10 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_32].force */
extern void T1354s6(TC* ac, T0* a1, T10 a2, T6 a3);
/* SPECIAL [NATURAL_32].fill_with */
extern void T1352f10(TC* ac, T0* C, T10 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].extend */
extern void T1352f11(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_put */
extern void T1356f77(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_put */
extern void T1356f76(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_item */
extern T6 T1356f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_item */
extern T6 T1356f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].hash_position */
extern T6 T1356f28(TC* ac, T0* C, T10 a1);
/* NATURAL_32.hash_code */
extern T6 T10f29(TC* ac, T10 volatile* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].resize */
extern void T1356f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_resize */
extern void T1356f93(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].special_integer_ */
extern T0* T1356s49(TC* ac);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T264c6(TC* ac);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_resize */
extern void T1356f92(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].aliased_resized_area */
extern T0* T1354s4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [NATURAL_32].aliased_resized_area */
extern T0* T1352f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_resize */
extern void T1356f91(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].aliased_resized_area */
extern T0* T1810s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [NATURAL_64].aliased_resized_area */
extern T0* T1355f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_item */
extern T10 T1356f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_resize */
extern void T1356f90(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_modulus */
extern T6 T1356f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_capacity */
extern T6 T1356f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_put */
extern void T1356f65(TC* ac, T0* C, T11 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_64].force */
extern void T1810s4(TC* ac, T0* a1, T11 a2, T6 a3);
/* SPECIAL [NATURAL_64].fill_with */
extern void T1355f12(TC* ac, T0* C, T11 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].search_position */
extern void T1356f61(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].unset_found_item */
extern void T1356f64(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].value */
extern T11 T1356f34(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_item */
extern T11 T1356f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].position_of_key */
extern T6 T1356f22(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].has */
extern T1 T1356f33(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_map */
extern T0* T1356c50(TC* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_with_equality_testers */
extern void T1356f62(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_sparse_container */
extern void T1356f83(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].set_internal_cursor */
extern void T1356f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_cursor */
extern T0* T1356f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].make */
extern T0* T1357c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_slots */
extern void T1356f97(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_clashes */
extern void T1356f96(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_key_storage */
extern void T1356f95(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].make */
extern T0* T1354s1(TC* ac, T6 a1);
/* SPECIAL [NATURAL_32].make_empty */
extern void T1352f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].make_empty */
extern T0* T1352c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].default_create */
extern T0* T1354c5(TC* ac);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_item_storage */
extern void T1356f94(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].make */
extern T0* T1810s2(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].default_create */
extern T0* T1810c3(TC* ac);
/* RX_CHARACTER_SET.masks */
extern T0* T913f9(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].make_filled */
extern T0* T1355c9(TC* ac, T11 a1, T6 a2);
/* RX_CHARACTER_SET.make_empty */
extern void T913f11(TC* ac, T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T913c11(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern T0* T107s165(TC* ac);
/* RX_CHARACTER_SET.has */
extern T1 T913f10(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item */
extern T11 T1356f36(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T107f334(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T107s81(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T107s80(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T107s79(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T107f345(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T107f344(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T107f298(TC* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T10 T912f6(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T107f296(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T107f277(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T10 T912f7(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area_with_default */
extern T0* T264s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].aliased_resized_area_with_default */
extern T0* T154f5(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T107s232(TC* ac);
/* RX_CASE_MAPPING.flip_case */
extern T10 T914f4(TC* ac, T0* C, T10 a1);
/* NATURAL_32.to_integer_64 */
extern T7 T10f15(TC* ac, T10 volatile* C);
/* RX_CASE_MAPPING.to_lower */
extern T10 T914f3(TC* ac, T0* C, T10 a1);
/* INTEGER_64.to_natural_32 */
extern T10 T7f6(TC* ac, T7 volatile* C);
/* INTEGER_64.is_greater_equal */
extern T1 T7f5(TC* ac, T7 volatile* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_subject */
extern void T107f340(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T107f346(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T107f348(TC* ac, T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T107f70(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T107f67(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T107f56(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T107s249(TC* ac);
/* ET_C_GENERATOR.execution_environment */
extern T0* T114s314(TC* ac);
/* ET_C_GENERATOR.string_ */
extern T0* T114s211(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T107f311(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T170f19(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.current_system */
extern T0* T114f177(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.found_item */
extern T0* T962f22(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.found */
extern T1 T962f49(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.search */
extern void T962f57(TC* ac, T0* C, T0* a1);
/* UT_ISE_VARIABLES.ise_platform_value */
extern T0* T45s7(TC* ac);
/* UT_ISE_VARIABLES.execution_environment */
extern T0* T45s3(TC* ac);
/* ET_C_GENERATOR.ise_variables */
extern T0* T114s199(TC* ac);
/* UT_GOBO_VARIABLES.boehm_gc_value */
extern T0* T44s3(TC* ac);
/* UT_GOBO_VARIABLES.zig_value */
extern T0* T44s13(TC* ac);
/* DS_STRING_HASH_TABLE.force */
extern void T962f55(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_STRING_HASH_TABLE.key_storage_put */
extern void T962f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_STRING_HASH_TABLE.slots_put */
extern void T962f66(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_STRING_HASH_TABLE.clashes_put */
extern void T962f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_STRING_HASH_TABLE.resize */
extern void T962f64(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.clashes_resize */
extern void T962f72(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.special_integer_ */
extern T0* T962s48(TC* ac);
/* DS_STRING_HASH_TABLE.key_storage_resize */
extern void T962f71(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.item_storage_resize */
extern void T962f70(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.slots_resize */
extern void T962f69(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.new_modulus */
extern T6 T962f45(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.new_capacity */
extern T6 T962f35(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.item_storage_put */
extern void T962f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_STRING_HASH_TABLE.unset_found_item */
extern void T962f62(TC* ac, T0* C);
/* ET_C_GENERATOR.gobo_variables */
extern T0* T114s179(TC* ac);
/* DS_STRING_HASH_TABLE.make */
extern T0* T962c54(TC* ac, T6 a1);
/* DS_STRING_HASH_TABLE.make_with_equality_testers */
extern void T962f61(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_STRING_HASH_TABLE.make_sparse_container */
extern void T962f68(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.set_internal_cursor */
extern void T962f77(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.new_cursor */
extern T0* T962f47(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.make_slots */
extern void T962f76(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_clashes */
extern void T962f75(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_key_storage */
extern void T962f74(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_item_storage */
extern void T962f73(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T223c2(TC* ac);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T963f35(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T963f36(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T963f37(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T963f47(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T963s55(TC* ac, T14 a1, T14 a2, T6 a3);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T963s12(TC* ac);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T963f22(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T963f20(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.recursive_open_write */
extern void T963f34(TC* ac, T0* C);
/* KL_DIRECTORY.recursive_create_directory */
extern void T167f49(TC* ac, T0* C);
/* KL_DIRECTORY.string_ */
extern T0* T167s15(TC* ac);
/* KL_DIRECTORY.file_system */
extern T0* T167s32(TC* ac);
/* KL_DIRECTORY.unix_file_system */
extern T0* T167s35(TC* ac);
/* KL_DIRECTORY.windows_file_system */
extern T0* T167s34(TC* ac);
/* KL_DIRECTORY.operating_system */
extern T0* T167s33(TC* ac);
/* KL_DIRECTORY.create_directory */
extern void T167f50(TC* ac, T0* C);
/* KL_DIRECTORY.create_dir */
extern void T167f51(TC* ac, T0* C);
/* KL_DIRECTORY.file_mkdir */
extern void T167s52(TC* ac, T14 a1);
/* KL_DIRECTORY.internal_name_pointer */
extern T0* T167f19(TC* ac, T0* C);
/* KL_DIRECTORY.old_exists */
extern T1 T167f14(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T167s22(TC* ac, T14 a1);
/* KL_DIRECTORY.exists */
extern T1 T167f30(TC* ac, T0* C);
/* KL_DIRECTORY.make */
extern void T167f37(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T167c37(TC* ac, T0* a1);
/* KL_DIRECTORY.old_make */
extern void T167f43(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make_with_name */
extern void T167f47(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.set_name */
extern void T167f48(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.file_info */
extern T0* T167f29(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_system */
extern T0* T963s14(TC* ac);
/* KL_TEXT_OUTPUT_FILE.unix_file_system */
extern T0* T963s30(TC* ac);
/* KL_TEXT_OUTPUT_FILE.windows_file_system */
extern T0* T963s29(TC* ac);
/* KL_TEXT_OUTPUT_FILE.operating_system */
extern T0* T963s28(TC* ac);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T963f40(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T963f18(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T963f49(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T963f49p1(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T963s24(TC* ac, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T963c33(TC* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T963f46(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T963f46p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.set_name */
extern void T963f54(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T963f27(TC* ac, T0* C);
/* ET_C_GENERATOR.file_system */
extern T0* T114s195(TC* ac);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T114s603(TC* ac);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T114s602(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T107f310(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T107f310p1(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T107f321(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T107f147(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T10 T107f205(TC* ac, T0* C, T10 a1, T10 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T10 T107f78(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T107f320(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T107f77(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T10 T107f75(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T10 T107s129(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T10 T107s127(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T10 T107s125(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T107f319(TC* ac, T0* C, T10 a1, T1 a2, T1 a3, T7 a4);
/* RX_BYTE_CODE.set_count */
extern void T912f15(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T107f62(TC* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T912f14(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T107f335(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern T0* T107s146(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern T6 T107f145(TC* ac, T0* C);
/* RX_BYTE_CODE.append_character */
extern void T912f16(TC* ac, T0* C, T10 a1);
/* RX_BYTE_CODE.put_character */
extern void T912f22(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T912f21(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].aliased_resized_area_with_default */
extern T0* T1354s3(TC* ac, T0* a1, T10 a2, T6 a3);
/* SPECIAL [NATURAL_32].aliased_resized_area_with_default */
extern T0* T1352f4(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.special_natural_32_ */
extern T0* T912s9(TC* ac);
/* INTEGER_64.is_less_equal */
extern T1 T7f10(TC* ac, T7 volatile* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T7 T107f139(TC* ac, T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T10 T107f223(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern T0* T107s248(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T10 T107f222(TC* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer_32 */
extern T6 T7f14(TC* ac, T7 volatile* C);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T7 T107s217(TC* ac, T10 a1);
/* INTEGER_64.is_greater */
extern T1 T7f7(TC* ac, T7 volatile* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T10 T107s132(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T107f333(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T10 T107s130(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T10 T107s128(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T10 T107s126(TC* ac, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T10 T107f107(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T107f339(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T7 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T912f20(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T912f19(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T912f18(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T107f341(TC* ac, T0* C, T10 a1, T6 a2, T6 a3, T6 a4, T10 a5, T10 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T107f338(TC* ac, T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T912f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].force_last */
extern void T1353f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].force */
extern void T1804s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_CHARACTER_SET].fill_with */
extern void T918f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_CHARACTER_SET].extend */
extern void T918f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].resize */
extern void T1353f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].aliased_resized_area */
extern T0* T1804s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [RX_CHARACTER_SET].aliased_resized_area */
extern T0* T918f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].new_capacity */
extern T6 T1353f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].extendible */
extern T1 T1353f7(TC* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.set_negated */
extern void T913f15(TC* ac, T0* C, T1 a1);
/* RX_CHARACTER_SET.add_set */
extern void T913f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].wipe_out */
extern void T1356f59(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_wipe_out */
extern void T1356f82(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_wipe_out */
extern void T1356f81(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_wipe_out */
extern void T1356f80(TC* ac, T0* C);
/* SPECIAL [NATURAL_32].keep_head */
extern void T1352f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].set_count */
extern void T1352f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_wipe_out */
extern void T1356f79(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].keep_head */
extern void T1355f14(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].set_count */
extern void T1355f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].move_all_cursors_after */
extern void T1356f67(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_next_cursor */
extern void T1357f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_after */
extern void T1357f13(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].forth */
extern void T1357f11(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_forth */
extern void T1356f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].add_traversing_cursor */
extern void T1356f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_position */
extern void T1357f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove_traversing_cursor */
extern void T1356f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].force_new */
extern void T1356f58(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].replace_found_item */
extern void T1356f57(TC* ac, T0* C, T11 a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].item */
extern T11 T1357f6(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_item */
extern T11 T1356f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].found_item */
extern T11 T1356f32(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].found */
extern T1 T1356f31(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].search */
extern void T1356f56(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].key */
extern T10 T1357f7(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_key */
extern T10 T1356f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].after */
extern T1 T1357f4(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_iterator */
extern T0* T1356f23(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].start */
extern void T1357f12(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_start */
extern void T1356f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_off */
extern T1 T1356f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].off */
extern T1 T1357f9(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].forth */
extern void T1356f53(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove */
extern void T1356f55(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove_position */
extern void T1356f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_keep_head */
extern void T1356f89(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_keep_head */
extern void T1356f88(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].move_cursors_forth */
extern void T1356f87(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].internal_set_key_equality_tester */
extern void T1356f86(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_for_iteration */
extern T10 T1356f30(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].after */
extern T1 T1356f25(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_after */
extern T1 T1356f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].start */
extern void T1356f51(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].copy */
extern void T1356f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].copy */
extern void T1356f54p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_clashes */
extern void T1356f73(TC* ac, T0* C);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T154f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T154f17(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_slots */
extern void T1356f72(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_key_storage */
extern void T1356f71(TC* ac, T0* C);
/* SPECIAL [NATURAL_32].resized_area */
extern T0* T1352f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].copy_data */
extern void T1352f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [NATURAL_32].force */
extern void T1352f16(TC* ac, T0* C, T10 a1, T6 a2);
/* SPECIAL [NATURAL_32].move_data */
extern void T1352f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].overlapping_move */
extern void T1352f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].non_overlapping_move */
extern void T1352f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_item_storage */
extern void T1356f70(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].resized_area */
extern T0* T1355f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].copy_data */
extern void T1355f15(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [NATURAL_64].force */
extern void T1355f18(TC* ac, T0* C, T11 a1, T6 a2);
/* SPECIAL [NATURAL_64].move_data */
extern void T1355f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_64].overlapping_move */
extern void T1355f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_64].non_overlapping_move */
extern void T1355f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].valid_cursor */
extern T1 T1356f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].twin */
extern T0* T1356f48(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].is_empty */
extern T1 T1356f41(TC* ac, T0* C);
/* RX_CHARACTER_SET.add_negated_set */
extern void T913f12(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].replace */
extern void T1356f52(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_for_iteration */
extern T11 T1356f27(TC* ac, T0* C);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T917f4(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern T0* T107s157(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern T0* T107s55(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern T0* T107s247(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern T0* T107s246(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern T0* T107s245(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern T0* T107s244(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern T0* T107s243(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern T0* T107s242(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern T0* T107s241(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern T0* T107s240(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern T0* T107s238(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T107f155(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern T0* T107s239(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T107f153(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T107f83(TC* ac, T0* C, T6 a1, T7 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T107f337(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T107s59(TC* ac, T10 a1);
/* RX_BYTE_CODE.append_integer */
extern void T912f13(TC* ac, T0* C, T10 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T912f12(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T107f318(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T107f317(TC* ac, T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T912f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].wipe_out */
extern void T1353f11(TC* ac, T0* C);
/* SPECIAL [RX_CHARACTER_SET].keep_head */
extern void T918f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [RX_CHARACTER_SET].set_count */
extern void T918f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].move_all_cursors_after */
extern void T1353f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].set_next_cursor */
extern void T1805f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].set_after */
extern void T1805f6(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T107f316(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T107f316p1(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T107c309(TC* ac);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make_filled */
extern T0* T264s5(TC* ac, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T107f309p1(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T107f315(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T107f332(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T107f331(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T107f330(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T107f329(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T107f328(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T107f327(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T107f326(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T107f325(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T107f324(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T107f323(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T107f314(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T107f313(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern T0* T107s235(TC* ac);
/* RX_CASE_MAPPING.make */
extern T0* T914c6(TC* ac, T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T914f8(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T914f7(TC* ac, T0* C);
/* RX_CASE_MAPPING.clear */
extern void T914f9(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [NATURAL_32].make_filled */
extern T0* T1354s2(TC* ac, T10 a1, T6 a2);
/* SPECIAL [NATURAL_32].make_filled */
extern T0* T1352c7(TC* ac, T10 a1, T6 a2);
/* RX_CASE_MAPPING.special_natural_32_ */
extern T0* T914s5(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T107f312(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T107f312p1(TC* ac, T0* C);
/* STRING_32.wipe_out */
extern void T18f27(TC* ac, T0* C);
/* STRING_32.twin */
extern T0* T18f9(TC* ac, T0* C);
/* STRING_32.copy */
extern void T18f33(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].resized_area */
extern T0* T16f6(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern T0* T107f233(TC* ac, T0* C);
/* RX_BYTE_CODE.make */
extern T0* T912c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].make */
extern T0* T1353c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].set_internal_cursor */
extern void T1353f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].new_cursor */
extern T0* T1353f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].make */
extern T0* T1805c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].make */
extern T0* T1804s1(TC* ac, T6 a1);
/* SPECIAL [RX_CHARACTER_SET].make_empty */
extern T0* T918c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].default_create */
extern T0* T1804c3(TC* ac);
/* ET_C_GENERATOR.operating_system */
extern T0* T114s196(TC* ac);
/* ET_C_GENERATOR.generate_c_code */
extern void T114f695(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern T0* T114f172(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T850c56(TC* ac, T0* a1, T0* a2, T0* a3);
extern T1 T850f56ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T718f46(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T1282f7(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T716f45(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T714f55(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T712f51(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T711f54(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T710f53(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T709f50(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T708f48(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T707f53(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T706f46(TC* ac, T0* C, T6 a1);
/* ET_INVARIANTS.has_seed */
extern T1 T543f30(TC* ac, T0* C, T6 a1);
/* ET_INVARIANTS.other_seeds */
extern T0* T543f20(TC* ac, T0* C);
/* ET_INVARIANTS.first_seed */
extern T6 T543f18(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T715f45(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T717f42(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_set_reference_field_feature */
extern void T95f115(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.use_all_attributes */
extern void T95f117(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T1060f87(TC* ac, T0* C, T0* a1);
extern T1 T1060f87ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T1060f37(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T714f43(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T714s46(TC* ac);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T81c1566(TC* ac);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T1060f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_function */
extern void T1060f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T1060f34(TC* ac, T0* C);
/* ET_CLASS.is_basic */
extern T1 T70f87(TC* ac, T0* C);
/* ET_CLASS_CODES.is_basic */
extern T1 T783s34(TC* ac, T8 a1);
/* ET_CLASS.class_codes */
extern T0* T70s82(TC* ac);
/* ET_CLASS_CODES.default_create */
extern T0* T783c38(TC* ac);
/* ET_DYNAMIC_PRECURSOR.is_builtin_any_is_equal */
extern T1 T865f38(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_any_is_equal */
extern T1 T850f31(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once_per_object */
extern T1 T865f54(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_object */
extern T1 T718f35(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_object */
extern T1 T717f35(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_object */
extern T1 T716f34(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T1864s1(TC* ac, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T1864s8(TC* ac, T0* a1, T0* a2);
/* ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T1864s11(TC* ac, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.value */
extern T0* T678f1(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.value */
extern T0* T677f1(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.value */
extern T0* T676f1(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T1864s12(TC* ac);
/* ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T569f7(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T678f30(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T677f27(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T676f25(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.item */
extern T0* T569f9(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.standard_once_keys */
extern T0* T716s51(TC* ac);
/* ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T1864c13(TC* ac);
/* ET_DO_PROCEDURE.is_once_per_object */
extern T1 T715f38(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_object */
extern T1 T714f40(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_object */
extern T1 T712f36(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_object */
extern T1 T711f39(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.standard_once_keys */
extern T0* T711s56(TC* ac);
/* ET_DO_FUNCTION.is_once_per_object */
extern T1 T710f38(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_object */
extern T1 T709f34(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_object */
extern T1 T708f32(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_object */
extern T1 T707f37(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_object */
extern T1 T706f30(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_object */
extern T1 T850f26(TC* ac, T0* C);
/* ET_INVARIANTS.is_once_per_object */
extern T1 T543f25(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T844f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].force */
extern void T1284s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].fill_with */
extern void T1283f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].extend */
extern void T1283f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern T0* T844f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T1284c3(TC* ac);
/* ET_DYNAMIC_FEATURE_LIST.resize */
extern void T844f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1284s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1283f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T844f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T844f6(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T1060f92(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T847f21(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T100f156(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T63f202(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T63f238(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T63f241(TC* ac, T0* C, T1 a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T1464c19(TC* ac);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T42f202(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T42f238(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_internal_error */
extern void T42f241(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T100f86(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T100f137(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T100f154(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_dynamic_types */
extern void T100f155(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T1839f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T936f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T1061f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T2047f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T2046f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T894f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T893f24(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1839f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T936f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1061f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1677f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T1060f90(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T1059f90(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T904f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T978f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.propagate_can_be_void */
extern void T843f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.propagate_can_be_void */
extern void T981f34(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T2047f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T2047f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T847f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T100f628(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T100f337(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_primary_type */
extern T1 T1060f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T942f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T942f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T942f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T1060f25(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T1059f24(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T904f21(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T978f21(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.hash_code */
extern T6 T843f18(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T942f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T942f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T942f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_equality_tester */
extern T0* T942f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T942f22(TC* ac, T0* C, T6 a1);
/* ET_CLASS.is_none */
extern T1 T70f84(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_none */
extern T1 T89f38(TC* ac, T0* C);
/* ET_CLUSTER.is_none */
extern T1 T67f20(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T263f9(TC* ac, T0* C);
/* ET_NONE_GROUP.is_none */
extern T1 T199s6(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_primary_type */
extern T1 T1059f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_primary_type */
extern T1 T904f42(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_primary_type */
extern T1 T978f32(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.conforms_to_primary_type */
extern T1 T843f39(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T865f63(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T850f59(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T866f3(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T847f12(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T95f77(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T847f26(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T1060f32(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS.seeded_query */
extern T0* T70f85(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T773f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T1059f32(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_function */
extern void T1059f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T1059f92(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.register_feature_seeds */
extern void T1059f91(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_IDS.item */
extern T6 T1282f6(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.other_seeds */
extern T0* T718f25(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.other_seeds */
extern T0* T716f25(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.other_seeds */
extern T0* T714f27(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.other_seeds */
extern T0* T712f24(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.other_seeds */
extern T0* T711f27(TC* ac, T0* C);
/* ET_DO_FUNCTION.other_seeds */
extern T0* T710f26(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.other_seeds */
extern T0* T709f21(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.other_seeds */
extern T0* T708f19(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.other_seeds */
extern T0* T707f24(TC* ac, T0* C);
/* ET_ATTRIBUTE.other_seeds */
extern T0* T706f17(TC* ac, T0* C);
/* ET_DO_PROCEDURE.other_seeds */
extern T0* T715f14(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.other_seeds */
extern T0* T717f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].force_last */
extern void T1281f34(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_put */
extern void T1281f42(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [INTEGER_32].force */
extern void T264s7(TC* ac, T0* a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_put */
extern void T1281f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_put */
extern void T1281f40(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_item */
extern T6 T1281f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].hash_position */
extern T6 T1281f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].resize */
extern void T1281f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_resize */
extern void T1281f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1281s31(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_resize */
extern void T1281f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area */
extern T0* T264s2(TC* ac, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_resize */
extern void T1281f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1281f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_item */
extern T6 T1281f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_resize */
extern void T1281f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_modulus */
extern T6 T1281f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_capacity */
extern T6 T1281f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_put */
extern void T1281f38(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].search_position */
extern void T1281f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].unset_found_item */
extern void T1281f36(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.first_seed */
extern T6 T718f24(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.first_seed */
extern T6 T716f24(TC* ac, T0* C);
/* ET_DO_PROCEDURE.first_seed */
extern T6 T715f9(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.first_seed */
extern T6 T717f10(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T1059f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T904f28(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_function */
extern void T904f82(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T904f81(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.register_feature_seeds */
extern void T904f80(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T904f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_reference_item */
extern void T847f23(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_reference_item */
extern void T100f158(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_basic */
extern T1 T981f16(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.base_class */
extern T0* T981f17(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T863f4(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T307f47(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.string_ */
extern T0* T307s9(TC* ac);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern T0* T81s625(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T904s31(TC* ac);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T850f30(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T714f47(TC* ac, T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T307f31(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T712f42(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T711f40(TC* ac, T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T710f41(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T709f35(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T708f35(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.name */
extern T0* T707f44(TC* ac, T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T706f33(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T904f70p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T978f29(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_function */
extern void T978f84(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T978f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.register_feature_seeds */
extern void T978f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T978f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T850f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_builtin_special_item */
extern T1 T850f27(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_has_special_once_per_object_routines */
extern void T95f116(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T978f28p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_query */
extern T0* T843f46(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.put_function */
extern void T843f82(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_attribute */
extern void T843f81(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.register_feature_seeds */
extern void T843f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.new_dynamic_query */
extern T0* T843f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T1059f34(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T904f29(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T978f30(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_basic */
extern T1 T843f49(TC* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T2046f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T2046f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T894f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T894f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T847f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T100f619(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f619ot1(TC* ac, T0* a1);
extern T1 T100f619ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T100f626(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.dynamic_type_set */
extern T0* T894f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T941f4(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.index */
extern T6 T1894f3(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.index */
extern T6 T2070f2(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.index */
extern T6 T2069f2(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.index */
extern T6 T1896f1(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.index */
extern T6 T2068f1(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.index */
extern T6 T770f5(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.index */
extern T6 T340f3(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.index */
extern T6 T992f2(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.index */
extern T6 T534f1(TC* ac, T0* C);
/* ET_IF_EXPRESSION.index */
extern T6 T513f1(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.index */
extern T6 T440f1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.index */
extern T6 T383f2(TC* ac, T0* C);
/* ET_CALL_AGENT.index */
extern T6 T380f1(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.index */
extern T6 T377f1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.index */
extern T6 T343f4(TC* ac, T0* C);
/* ET_VOID.index */
extern T6 T331f1(TC* ac, T0* C);
/* ET_RESULT.index */
extern T6 T322f4(TC* ac, T0* C);
/* ET_IDENTIFIER.index */
extern T6 T307f3(TC* ac, T0* C);
/* ET_CURRENT.index */
extern T6 T301f1(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.index */
extern T6 T683f2(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.index */
extern T6 T682f2(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.index */
extern T6 T681f2(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.index */
extern T6 T680f2(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.index */
extern T6 T679f1(TC* ac, T0* C);
/* ET_VERBATIM_STRING.index */
extern T6 T678f2(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.index */
extern T6 T677f2(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.index */
extern T6 T675f1(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.index */
extern T6 T761f1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.index */
extern T6 T617f3(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.index */
extern T6 T760f1(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.index */
extern T6 T759f2(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.index */
extern T6 T757f2(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.index */
extern T6 T745f1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.index */
extern T6 T1045f1(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.index */
extern T6 T768f1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.index */
extern T6 T767f1(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.index */
extern T6 T766f1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.index */
extern T6 T765f1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.index */
extern T6 T764f1(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.index */
extern T6 T763f1(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.index */
extern T6 T634f1(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.index */
extern T6 T572f5(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.index */
extern T6 T563f1(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.index */
extern T6 T593f1(TC* ac, T0* C);
/* ET_OBJECT_TEST.index */
extern T6 T758f1(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.index */
extern T6 T756f1(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.index */
extern T6 T755f1(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.index */
extern T6 T754f1(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.index */
extern T6 T753f1(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.index */
extern T6 T752f1(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.index */
extern T6 T749f1(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.index */
extern T6 T748f1(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.index */
extern T6 T747f1(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.index */
extern T6 T746f1(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.index */
extern T6 T744f1(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.index */
extern T6 T631f1(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.index */
extern T6 T690f1(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.index */
extern T6 T689f1(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.index */
extern T6 T688f1(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.index */
extern T6 T687f4(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.index */
extern T6 T685f2(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.index */
extern T6 T684f1(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.index */
extern T6 T676f2(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T863f3(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_SYMBOL.seed */
extern T6 T1885f1(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.seed */
extern T6 T337f4(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.seed */
extern T6 T280f4(TC* ac, T0* C);
/* ET_IDENTIFIER.seed */
extern T6 T307f2(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.name */
extern T0* T1888f2(TC* ac, T0* C);
/* ET_CALL_AGENT.name */
extern T0* T380f9(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.name */
extern T0* T730f4(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T740f5(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.feature_name */
extern T0* T280f12(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T894f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T894f21ot1(TC* ac, T0* a1);
extern T1 T894f21ot2(TC* ac, T0* a1);
extern T1 T894f21ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T1839f20(TC* ac, T0* C, T0* a1);
extern T1 T1839f20ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.force_last */
extern void T935f21(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T1019s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].fill_with */
extern void T1018f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].extend */
extern void T1018f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.fixed_array */
extern T0* T935f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].default_create */
extern T0* T1019c3(TC* ac);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.hash_position */
extern T6 T935f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.modulus */
extern T6 T935f14(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.resize */
extern void T935f18(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.special_integer_ */
extern T0* T935s7(TC* ac);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T1019s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T1018f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.new_modulus */
extern T6 T935f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.new_capacity */
extern T6 T935f15(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.capacity */
extern T6 T935f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.put_last */
extern void T935f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.append_last */
extern void T935f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T1839f13(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.make_with_capacity */
extern T0* T935c17(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1019s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].make_empty */
extern T0* T1018c5(TC* ac, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1839f8(TC* ac, T0* C, T0* a1);
extern T1 T1839f8ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1839f8p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1839f12(TC* ac, T0* C, T0* a1);
extern T1 T1839f12ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1839f12p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.index_of */
extern T6 T981f28(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T1060f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T1059f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T904f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T978f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.index_of */
extern T6 T843f66(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.index_of */
extern T6 T935f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.has_type */
extern T1 T935f13(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.has_type */
extern T1 T981f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T1060f42(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T1059f42(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T904f43(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T978f45(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.has_type */
extern T1 T843f30(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.dynamic_type */
extern T0* T935f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SECONDARY_TYPE.dynamic_type */
extern T0* T981f22(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T1060f39(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T1059f39(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T904f40(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T978f43(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_type */
extern T0* T843f69(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.count */
extern T6 T935f1(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.count */
extern T6 T981f21(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T1060f38(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T1059f38(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T904f39(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T978f42(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.count */
extern T6 T843f68(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T1060f56(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T184f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T193f11(TC* ac, T0* C);
/* ET_KEYWORD.is_detachable_mark */
extern T1 T192f11(TC* ac, T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T192f18(TC* ac, T0* C);
/* ET_KEYWORD.is_detachable */
extern T1 T192f17(TC* ac, T0* C);
/* ET_KEYWORD.tokens */
extern T0* T192s16(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T340f38(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T340f13(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T340s18(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T340f12(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T337f81(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T337f19(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T337s70(TC* ac);
/* ET_BRACKET_SYMBOL.is_detachable */
extern T1 T337f18(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_detachable_mark */
extern T1 T328f92(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_question_mark */
extern T1 T328f19(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T328s70(TC* ac);
/* ET_SYMBOL_OPERATOR.is_detachable */
extern T1 T328f18(TC* ac, T0* C);
/* ET_SYMBOL.is_detachable_mark */
extern T1 T286f4(TC* ac, T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T286f20(TC* ac, T0* C);
/* ET_SYMBOL.tokens */
extern T0* T286s71(TC* ac);
/* ET_SYMBOL.is_detachable */
extern T1 T286f19(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_detachable_mark */
extern T1 T177f5(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T193f6(TC* ac, T0* C);
/* ET_KEYWORD.is_attached_mark */
extern T1 T192f6(TC* ac, T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T192f13(TC* ac, T0* C);
/* ET_KEYWORD.is_attached */
extern T1 T192f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T340f24(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T340f11(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T340f10(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T337f71(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T337f17(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached */
extern T1 T337f16(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attached_mark */
extern T1 T328f71(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bang */
extern T1 T328f17(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attached */
extern T1 T328f16(TC* ac, T0* C);
/* ET_SYMBOL.is_attached_mark */
extern T1 T286f72(TC* ac, T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T286f18(TC* ac, T0* C);
/* ET_SYMBOL.is_attached */
extern T1 T286f17(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attached_mark */
extern T1 T177f3(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_attached */
extern T1 T184f15(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T193f5(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attachment_mark */
extern T1 T328f8(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T337f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T340f19(TC* ac, T0* C);
/* ET_SYMBOL.is_attachment_mark */
extern T1 T286f8(TC* ac, T0* C);
/* ET_KEYWORD.is_attachment_mark */
extern T1 T192f5(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T177f8(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T102f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T102f14(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_reference_mark */
extern T1 T328f13(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_reference */
extern T1 T328f75(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T337f13(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T337f75(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T340f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T340f17(TC* ac, T0* C);
/* ET_SYMBOL.is_reference_mark */
extern T1 T286f13(TC* ac, T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T286f76(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T193f7(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_reference */
extern T1 T193f13(TC* ac, T0* C);
/* ET_KEYWORD.is_reference_mark */
extern T1 T192f7(TC* ac, T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T192f14(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_reference_mark */
extern T1 T177f4(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expanded_mark */
extern T1 T328f10(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expanded */
extern T1 T328f72(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T337f10(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T337f72(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T340f5(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T340f14(TC* ac, T0* C);
/* ET_SYMBOL.is_expanded_mark */
extern T1 T286f10(TC* ac, T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T286f73(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T193f12(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expanded */
extern T1 T193f8(TC* ac, T0* C);
/* ET_KEYWORD.is_expanded_mark */
extern T1 T192f19(TC* ac, T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T192f8(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expanded_mark */
extern T1 T177f1(TC* ac, T0* C);
/* ET_CLASS.is_expanded */
extern T1 T70f80(TC* ac, T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T70f132(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_attached */
extern T1 T102f16(TC* ac, T0* C);
/* ET_CLASS.is_type_attached_with_type_mark */
extern T1 T70f81(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_attached */
extern T1 T70f126(TC* ac, T0* C);
/* ET_CLASS.current_system */
extern T0* T70f125(TC* ac, T0* C);
/* ET_ECF_LIBRARY.current_system */
extern T0* T806f11(TC* ac, T0* C);
/* ET_ECF_SYSTEM.current_system */
extern T0* T87f13(TC* ac, T0* C);
/* ET_SYSTEM.current_system */
extern T0* T50f11(TC* ac, T0* C);
/* ET_ECF_LIBRARY.implicit_attachment_type_mark */
extern T0* T806f16(TC* ac, T0* C);
/* ET_ECF_SYSTEM.implicit_attachment_type_mark */
extern T0* T87f18(TC* ac, T0* C);
/* ET_SYSTEM.implicit_attachment_type_mark */
extern T0* T50f17(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.type_mark */
extern T0* T1060f53(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T1060s62(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.type_mark */
extern T0* T1059f53(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T1059s62(TC* ac);
/* ET_DYNAMIC_SECONDARY_TYPE.type_mark */
extern T0* T981f3(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.type_mark */
extern T0* T978f58(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T978s33(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.type_mark */
extern T0* T904f55(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.type_mark */
extern T0* T843f58(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.tokens */
extern T0* T843s36(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T1059f58(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T978f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T904f45(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.conforms_to_type */
extern T1 T981f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.conforms_to_type */
extern T1 T843f37(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T572f6(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T2070f10(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T2069f12(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T2068f9(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1896f9(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.expression_item */
extern T0* T992f7(TC* ac, T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T307f46(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T683f54(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T682f54(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T681f54(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T680f54(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T679f66(TC* ac, T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T678f40(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T677f10(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T675f39(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.expression_item */
extern T0* T761f6(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.expression_item */
extern T0* T617f14(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.expression_item */
extern T0* T343f20(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T760f6(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T759f7(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression_item */
extern T0* T757f10(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T745f6(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T1045f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T768f16(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T767f39(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T766f17(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T765f18(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T764f20(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T763f35(TC* ac, T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T380f8(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T634f9(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T572f14(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T563f10(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T593f5(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T377f6(TC* ac, T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T758f6(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T756f6(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T755f5(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T754f5(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T753f5(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T752f5(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T749f23(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T748f6(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T747f6(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T746f6(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T744f8(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T631f7(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T383f10(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.expression_item */
extern T0* T534f8(TC* ac, T0* C);
/* ET_IF_EXPRESSION.expression_item */
extern T0* T513f11(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T440f16(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T690f38(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T689f38(TC* ac, T0* C);
/* ET_CURRENT.expression_item */
extern T0* T301f16(TC* ac, T0* C);
/* ET_RESULT.expression_item */
extern T0* T322f12(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T688f7(TC* ac, T0* C);
/* ET_VOID.expression_item */
extern T0* T331f11(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T687f7(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T685f33(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T684f44(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T676f49(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.item */
extern T0* T572f12(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1893f7(TC* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T362f7(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T1896f18(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.agent_actual_argument */
extern T0* T992f19(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T2070f18(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T2069f20(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T2068f17(TC* ac, T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T307f78(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T683f42(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T682f42(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T681f42(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T680f42(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T679f44(TC* ac, T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T678f36(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T677f33(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T675f32(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.agent_actual_argument */
extern T0* T761f20(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.agent_actual_argument */
extern T0* T617f34(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T343f35(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T760f22(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T759f24(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T757f27(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T745f20(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T1045f23(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T770f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T768f38(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T767f43(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T766f39(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T765f39(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T764f44(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T763f40(TC* ac, T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T380f27(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T634f27(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T572f27(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T563f27(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T593f22(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T377f24(TC* ac, T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T758f23(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T756f20(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T755f25(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T754f21(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T753f21(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T752f20(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T749f25(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T748f20(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T747f20(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T746f20(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T744f25(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T631f25(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T383f25(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.agent_actual_argument */
extern T0* T534f23(TC* ac, T0* C);
/* ET_IF_EXPRESSION.agent_actual_argument */
extern T0* T513f26(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T440f32(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T690f30(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T689f30(TC* ac, T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T301f30(TC* ac, T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T322f27(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T688f29(TC* ac, T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T331f25(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T687f29(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T340f37(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T685f30(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T684f30(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T676f31(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T362f8(TC* ac, T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T730f18(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T1892f13(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.item */
extern T0* T1892f14(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T349f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T349f5(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_agent_type */
extern T1 T1060s71(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_agent_type */
extern T1 T1059s71(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T904f68(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T978f70(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_agent_type */
extern T1 T843f67(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T865f52(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T850f53(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_procedure_call */
extern T1 T865f53(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_procedure_call */
extern T1 T850f54(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.count */
extern T6 T1893f1(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.count */
extern T6 T362f3(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T730f17(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T377f22(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T383f23(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.count */
extern T6 T1892f1(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.count */
extern T6 T349f1(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.arguments */
extern T0* T1888f3(TC* ac, T0* C);
/* ET_CALL_AGENT.arguments */
extern T0* T380f4(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T730f14(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.arguments */
extern T0* T740f3(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.dynamic_feature */
extern T0* T894f15(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T1060f36(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure */
extern void T1060f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_any_copy */
extern T1 T865f35(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_any_copy */
extern T1 T850f29(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T1060f59(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.seeded_procedure */
extern T0* T70f86(TC* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T774f5(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T1059f36(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure */
extern void T1059f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T1059f59(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T847f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T100f161(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T850f58(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T1839c15(TC* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_expanded */
extern T1 T981f5(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_expanded */
extern T1 T184s23(TC* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.is_empty */
extern T1 T941f8(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T863f8(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T1059f59p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T904f44(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure */
extern void T904f83(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T904f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put_reference */
extern void T847f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put_reference */
extern void T100f159(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern T0* T81s626(TC* ac);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T718f37(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T717f50(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T716f36(TC* ac, T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T715f33(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T904f30p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T978f44(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure */
extern void T978f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T978f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_builtin_special_extend */
extern T1 T850f41(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_special_put */
extern T1 T850f40(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T978f31p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_procedure */
extern T0* T843f48(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.put_procedure */
extern void T843f80(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.new_dynamic_procedure */
extern T0* T843f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T894f16(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_tuple_label */
extern T1 T1888f6(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T1885f19(TC* ac, T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T380f28(TC* ac, T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T307f30(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T730f15(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T337f82(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_tuple_label */
extern T1 T280f14(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T740f6(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T893f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T893f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T847f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T100f618(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f618ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T100f625(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.seed */
extern T6 T751f3(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.seed */
extern T6 T750f3(TC* ac, T0* C);
/* ET_FREE_OPERATOR.seed */
extern T6 T304f6(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.seed */
extern T6 T313f4(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.seed */
extern T6 T328f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T2070f1(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.name */
extern T0* T377f3(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.name */
extern T0* T755f2(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.name */
extern T0* T749f3(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.name */
extern T0* T1565f2(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T383f8(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T893f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T893f25p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T893f25p1ot1(TC* ac, T0* a1);
extern T1 T893f25p1ot2(TC* ac, T0* a1);
extern T1 T893f25p1ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.dynamic_type_set */
extern T0* T893f15(TC* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1896f16(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.actual_argument */
extern T0* T992f17(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T2070f16(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T2069f18(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T2068f15(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T307f50(TC* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T683f17(TC* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T682f17(TC* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T681f17(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T680f17(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T679f18(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T678f21(TC* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T677f18(TC* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T675f15(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_CURSOR.actual_argument */
extern T0* T761f9(TC* ac, T0* C, T6 a1);
/* ET_QUANTIFIER_EXPRESSION.actual_argument */
extern T0* T617f20(TC* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T343f22(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T760f10(TC* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T759f12(TC* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T757f15(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T745f9(TC* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T1045f9(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T768f19(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T767f21(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T766f20(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T765f21(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T764f23(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T763f22(TC* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T380f12(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T634f13(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T572f9(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T563f14(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T593f10(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T377f10(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.actual_argument */
extern T0* T758f10(TC* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T756f9(TC* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T755f8(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T754f10(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T753f9(TC* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T752f9(TC* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T749f9(TC* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T748f9(TC* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T747f9(TC* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T746f9(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T744f13(TC* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T631f13(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T383f14(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.actual_argument */
extern T0* T534f10(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.actual_argument */
extern T0* T513f14(TC* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T440f18(TC* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T690f13(TC* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T689f13(TC* ac, T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T301f18(TC* ac, T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T322f14(TC* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T688f14(TC* ac, T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T331f14(TC* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T687f14(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T685f15(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T684f15(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T676f16(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument_count */
extern T6 T1896s15(TC* ac);
/* ET_DYNAMIC_INLINED_EXPRESSION.actual_argument_count */
extern T6 T992s16(TC* ac);
/* ET_CONVERT_TO_EXPRESSION.actual_argument_count */
extern T6 T2070s15(TC* ac);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument_count */
extern T6 T2069s17(TC* ac);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument_count */
extern T6 T2068s14(TC* ac);
/* ET_IDENTIFIER.actual_argument_count */
extern T6 T307s49(TC* ac);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument_count */
extern T6 T683s16(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument_count */
extern T6 T682s16(TC* ac);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument_count */
extern T6 T681s16(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument_count */
extern T6 T680s16(TC* ac);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument_count */
extern T6 T679s17(TC* ac);
/* ET_VERBATIM_STRING.actual_argument_count */
extern T6 T678s20(TC* ac);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument_count */
extern T6 T677s17(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T675s14(TC* ac);
/* ET_ITERATION_CURSOR.actual_argument_count */
extern T6 T761s8(TC* ac);
/* ET_QUANTIFIER_EXPRESSION.actual_argument_count */
extern T6 T617s19(TC* ac);
/* ET_ACROSS_EXPRESSION.actual_argument_count */
extern T6 T343s21(TC* ac);
/* ET_ONCE_MANIFEST_STRING.actual_argument_count */
extern T6 T760s9(TC* ac);
/* ET_NAMED_OBJECT_TEST.actual_argument_count */
extern T6 T759s11(TC* ac);
/* ET_OLD_OBJECT_TEST.actual_argument_count */
extern T6 T757s14(TC* ac);
/* ET_FEATURE_ADDRESS.actual_argument_count */
extern T6 T745s8(TC* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument_count */
extern T6 T1045s8(TC* ac);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T768s18(TC* ac);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T767s20(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T766s19(TC* ac);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T765s20(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T764s22(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T763s21(TC* ac);
/* ET_CALL_AGENT.actual_argument_count */
extern T6 T380s11(TC* ac);
/* ET_STRIP_EXPRESSION.actual_argument_count */
extern T6 T634s12(TC* ac);
/* ET_MANIFEST_TUPLE.actual_argument_count */
extern T6 T572s7(TC* ac);
/* ET_MANIFEST_ARRAY.actual_argument_count */
extern T6 T563s13(TC* ac);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument_count */
extern T6 T593s9(TC* ac);
/* ET_BRACKET_EXPRESSION.actual_argument_count */
extern T6 T377s9(TC* ac);
/* ET_OBJECT_TEST.actual_argument_count */
extern T6 T758s9(TC* ac);
/* ET_OLD_EXPRESSION.actual_argument_count */
extern T6 T756s8(TC* ac);
/* ET_PREFIX_EXPRESSION.actual_argument_count */
extern T6 T755s7(TC* ac);
/* ET_MANIFEST_TYPE.actual_argument_count */
extern T6 T754s9(TC* ac);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument_count */
extern T6 T753s8(TC* ac);
/* ET_EQUALITY_EXPRESSION.actual_argument_count */
extern T6 T752s8(TC* ac);
/* ET_INFIX_EXPRESSION.actual_argument_count */
extern T6 T749s8(TC* ac);
/* ET_EXPRESSION_ADDRESS.actual_argument_count */
extern T6 T748s8(TC* ac);
/* ET_RESULT_ADDRESS.actual_argument_count */
extern T6 T747s8(TC* ac);
/* ET_CURRENT_ADDRESS.actual_argument_count */
extern T6 T746s8(TC* ac);
/* ET_PRECURSOR_EXPRESSION.actual_argument_count */
extern T6 T744s12(TC* ac);
/* ET_STATIC_CALL_EXPRESSION.actual_argument_count */
extern T6 T631s12(TC* ac);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument_count */
extern T6 T383s13(TC* ac);
/* ET_INSPECT_EXPRESSION.actual_argument_count */
extern T6 T534s9(TC* ac);
/* ET_IF_EXPRESSION.actual_argument_count */
extern T6 T513s13(TC* ac);
/* ET_CREATE_EXPRESSION.actual_argument_count */
extern T6 T440s17(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T690s12(TC* ac);
/* ET_C1_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T689s12(TC* ac);
/* ET_CURRENT.actual_argument_count */
extern T6 T301s17(TC* ac);
/* ET_RESULT.actual_argument_count */
extern T6 T322s13(TC* ac);
/* ET_FALSE_CONSTANT.actual_argument_count */
extern T6 T688s13(TC* ac);
/* ET_VOID.actual_argument_count */
extern T6 T331s13(TC* ac);
/* ET_TRUE_CONSTANT.actual_argument_count */
extern T6 T687s13(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument_count */
extern T6 T685s14(TC* ac);
/* ET_REGULAR_REAL_CONSTANT.actual_argument_count */
extern T6 T684s14(TC* ac);
/* ET_REGULAR_MANIFEST_STRING.actual_argument_count */
extern T6 T676s15(TC* ac);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T2070f19(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments */
extern T0* T377f4(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T755f9(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.right */
extern T0* T749f4(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments */
extern T0* T1565f3(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments */
extern T0* T383f3(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.dynamic_feature */
extern T0* T893f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T893f14(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T2070f20(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T377f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T755f10(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T304f23(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T313f23(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T328f93(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T749f10(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T751f15(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T750f15(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_tuple_label */
extern T1 T1565f6(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T383f6(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1839f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1839f17ot1(TC* ac, T0* a1);
extern T1 T1839f17ot2(TC* ac, T0* a1);
/* ET_SYSTEM_PROCESSOR.is_ise */
extern T1 T66f44(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.is_ise */
extern T1 T858f46(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1839f17p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1839f17p1ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.count */
extern T6 T1061f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_types */
extern T0* T1061f4(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.dynamic_types */
extern T0* T981f24(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T1060f68(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T1059f68(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T904f65(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T978f67(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_types */
extern T0* T843f64(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T936f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T936f15(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1061f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1061f17p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1061f17p1ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T1061f12(TC* ac, T0* C, T0* a1);
extern T1 T1061f12ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T1061f12p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T1061f14(TC* ac, T0* C, T0* a1);
extern T1 T1061f14ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T1061f14p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T1060f89(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T1059f89(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T904f90(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T978f92(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRIMARY_TYPE.put_type_from_type_set */
extern void T843f88(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SECONDARY_TYPE.put_type_from_type_set */
extern void T981f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T1061f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1677f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].force */
extern void T1984s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].fill_with */
extern void T1983f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].extend */
extern void T1983f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern T0* T1677f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1984c3(TC* ac);
/* ET_DYNAMIC_TARGET_LIST.resize */
extern void T1677f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1984s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1983f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1677f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1677f7(TC* ac, T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1677f3(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1677f5(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1677f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1677c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1984s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].make_empty */
extern T0* T1983c5(TC* ac, T6 a1);
/* ET_DYNAMIC_SECONDARY_TYPE.put_target */
extern void T981f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_never_void */
extern T1 T981f19(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T1060f88(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T1060f40(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T1059f88(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T1059f40(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T904f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T904f38(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T978f91(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T978f40(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.put_target */
extern void T843f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.is_never_void */
extern T1 T843f28(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T1060f73(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T1059f30(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T904f69(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T978f72(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_expanded */
extern T1 T843f44(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.static_type */
extern T0* T1839f1(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.static_type */
extern T0* T936f1(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.static_type */
extern T0* T1061f1(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T1060f54(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T1059f55(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T904f60(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T978f61(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.static_type */
extern T0* T843f59(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.static_type */
extern T0* T981f6(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T844f12(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T865f36(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T1059f37(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T904f47(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T978f47(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_PRIMARY_TYPE.is_builtin_attribute */
extern T1 T843f50(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T718f60(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T717f31(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T716f54(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T715f34(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T865f30(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T850f38(TC* ac, T0* C);
/* ET_INVARIANTS.is_attribute */
extern T1 T543f21(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.register_feature_seeds */
extern void T1060f91(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T1060f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T1060f57p1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].value */
extern T0* T1281f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1281f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].position_of_key */
extern T6 T1281f24(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.first_seed */
extern T6 T714f26(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.first_seed */
extern T6 T712f23(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.first_seed */
extern T6 T711f26(TC* ac, T0* C);
/* ET_DO_FUNCTION.first_seed */
extern T6 T710f25(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.first_seed */
extern T6 T709f20(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.first_seed */
extern T6 T708f18(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.first_seed */
extern T6 T707f23(TC* ac, T0* C);
/* ET_ATTRIBUTE.first_seed */
extern T6 T706f16(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_map */
extern T0* T1281c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1281f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_sparse_container */
extern void T1281f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1281f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_cursor */
extern T0* T1281f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32].make */
extern T0* T1781c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_slots */
extern void T1281f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_clashes */
extern void T1281f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_key_storage */
extern void T1281f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T264s1(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_item_storage */
extern void T1281f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T1284s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].make_empty */
extern T0* T1283c5(TC* ac, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T844c10(TC* ac, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T714f51(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T712f43(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T711f46(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T710f45(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T709f41(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T708f39(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_attribute */
extern T1 T707f45(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_attribute */
extern T1 T706f37(TC* ac, T0* C);
/* ET_QUERY_LIST.item */
extern T0* T773f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T1059f87(TC* ac, T0* C, T0* a1);
extern T1 T1059f87ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T1059f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T904f88(TC* ac, T0* C, T0* a1);
extern T1 T904f88ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T904f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T978f90(TC* ac, T0* C, T0* a1);
extern T1 T978f90ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T978f56(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.use_all_attributes */
extern void T843f87(TC* ac, T0* C, T0* a1);
extern T1 T843f87ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_query */
extern T0* T843f38(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T847f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T100f157(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T100f160(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T844f3(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.attribute_count */
extern T6 T1060f6(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attribute_count */
extern T6 T1059f6(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attribute_count */
extern T6 T904f6(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attribute_count */
extern T6 T978f6(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attribute_count */
extern T6 T843f3(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_reference_field_feature */
extern void T95f114(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_new_type_instance_of_feature */
extern void T95f113(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.attached_type */
extern T0* T1060f11(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attached_type */
extern T0* T1059f11(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attached_type */
extern T0* T904f11(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attached_type */
extern T0* T978f11(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attached_type */
extern T0* T843f11(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T95f101(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T847f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T100f153(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.meta_type */
extern T0* T1060f8(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.meta_type */
extern T0* T1059f8(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.meta_type */
extern T0* T904f8(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.meta_type */
extern T0* T978f8(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.meta_type */
extern T0* T843f8(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.meta_type */
extern T0* T981f2(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T95f111(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T95f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T1060f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T1059f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T904f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T978f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_meta_type */
extern void T843f75(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.set_meta_type */
extern void T981f30(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.dynamic_primary_type */
extern T0* T95f80(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.initialize_dynamic_types */
extern void T95f100(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_SYSTEM.propagate_alive_conforming_descendants */
extern void T95f110(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T847f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T867f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T867f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T867f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1659f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T1659f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T867f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_after */
extern void T1659f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T867f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T867f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T867f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T867f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T867f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T867f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T1659f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T867f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T867f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T867f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].off */
extern T1 T1659f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T867f20(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T100f128(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_attribute_type_sets */
extern void T95f109(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.initialize_predicate_type */
extern void T95f108(TC* ac, T0* C, T0* a1);
extern T1 T95f108ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_set_rout_disp_final_feature */
extern void T1060f86(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_set_rout_disp_final_feature */
extern void T1059f86(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attribute_position */
extern void T1060f85(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.index_of */
extern T6 T844f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attribute_position */
extern void T1059f85(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TUPLE_TYPE.set_attribute_position */
extern void T904f87(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attribute_position */
extern void T978f89(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attribute_position */
extern void T843f86(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_predicate_class */
extern T1 T70f121(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_function_type */
extern void T95f107(TC* ac, T0* C, T0* a1);
extern T1 T95f107ot1(TC* ac, T0* a1);
/* ET_CLASS.is_function_class */
extern T1 T70f120(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_procedure_type */
extern void T95f106(TC* ac, T0* C, T0* a1);
extern T1 T95f106ot1(TC* ac, T0* a1);
/* ET_CLASS.is_procedure_class */
extern T1 T70f119(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_typed_pointer_type */
extern void T95f105(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_typed_pointer_class */
extern T1 T70f118(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_array_type */
extern void T95f104(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_array_class */
extern T1 T70f117(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_special_type */
extern void T95f103(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_special_class */
extern T1 T70f116(TC* ac, T0* C);
/* ET_CLASS.canonical_to_text */
extern T0* T70f77(TC* ac, T0* C);
/* ET_TUPLE_TYPE.canonical_to_text */
extern T0* T184f13(TC* ac, T0* C);
/* ET_CLASS_TYPE.canonical_to_text */
extern T0* T102f13(TC* ac, T0* C);
/* ET_CLASS.has_interface_error */
extern T1 T70f62(TC* ac, T0* C);
/* ET_CLASS.interface_checked */
extern T1 T70f263(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T95f99(TC* ac, T0* C);
/* ET_CLASS.has_implementation_error */
extern T1 T70f64(TC* ac, T0* C);
/* ET_CLASS.implementation_checked */
extern T1 T70f63(TC* ac, T0* C);
/* ET_CLASS.process */
extern void T70f303(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_class */
extern void T2208f13(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_class */
extern void T2208f13p1(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.process */
extern void T543f55(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_invariants */
extern void T2208f84(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_invariants */
extern void T2208f84p1(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.process */
extern void T683f74(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_binary_integer_constant */
extern void T2208f69(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_binary_integer_constant */
extern void T2208f69p1(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.process */
extern void T328f164(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_symbol_operator */
extern void T2208f127(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_symbol */
extern void T2208f125(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_leaf */
extern void T2208f160(TC* ac, T0* C, T0* a1);
/* ET_SEMICOLON_SYMBOL.break */
extern T0* T334f3(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.break */
extern T0* T283f5(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.break */
extern T0* T277f4(TC* ac, T0* C);
/* ET_FREE_OPERATOR.break */
extern T0* T304f4(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.break */
extern T0* T313f5(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.break */
extern T0* T325f4(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.break */
extern T0* T280f5(TC* ac, T0* C);
/* ET_CURRENT.break */
extern T0* T301f5(TC* ac, T0* C);
/* ET_RESULT.break */
extern T0* T322f5(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.break */
extern T0* T688f5(TC* ac, T0* C);
/* ET_VOID.break */
extern T0* T331f5(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.break */
extern T0* T687f5(TC* ac, T0* C);
/* ET_KEYWORD.break */
extern T0* T192f4(TC* ac, T0* C);
/* ET_IDENTIFIER.break */
extern T0* T307f7(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.break */
extern T0* T328f1(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.break */
extern T0* T337f1(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.break */
extern T0* T340f4(TC* ac, T0* C);
/* ET_SYMBOL.break */
extern T0* T286f1(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.process_symbol_operator */
extern void T2052f187(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_symbol */
extern void T2052f184(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_break */
extern void T2052f93(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BREAK].force_last */
extern void T2209f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].force */
extern void T2280s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BREAK].fill_with */
extern void T2279f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].extend */
extern void T2279f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BREAK].resize */
extern void T2209f18(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].aliased_resized_area */
extern T0* T2280s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_BREAK].aliased_resized_area */
extern T0* T2279f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BREAK].new_capacity */
extern T6 T2209f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BREAK].extendible */
extern T1 T2209f9(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.print_string */
extern void T2052f109(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T922f8(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T922s3(TC* ac);
/* ET_AST_PRETTY_PRINTER.print_indentation */
extern void T2052f129(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T922f7(TC* ac, T0* C, T2 a1);
/* ET_SEMICOLON_SYMBOL.text */
extern T0* T334f4(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.xor_symbol_name */
extern T0* T81f769(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.there_exists_symbol_name */
extern T0* T81f568(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.or_else_symbol_name */
extern T0* T81f768(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.or_symbol_name */
extern T0* T81f767(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.open_repeat_symbol_name */
extern T0* T81f559(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.not_symbol_name */
extern T0* T81f765(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implies_symbol_name */
extern T0* T81f764(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.for_all_symbol_name */
extern T0* T81f547(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.close_repeat_symbol_name */
extern T0* T81f538(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bar_symbol_name */
extern T0* T81f537(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.and_then_symbol_name */
extern T0* T81f762(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.and_symbol_name */
extern T0* T81f761(TC* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T334s5(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.text */
extern T0* T340f47(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.text */
extern T0* T337f5(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.text */
extern T0* T328f5(TC* ac, T0* C);
/* ET_SYMBOL.text */
extern T0* T286f5(TC* ac, T0* C);
/* ET_LIKE_FEATURE.process */
extern void T726f97(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_like_feature */
extern void T2208f20(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_like_feature */
extern void T2208f20p1(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.process */
extern void T177f36(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_implicit_type_mark */
extern void T2208f123(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_implicit_type_mark */
extern void T2052f179(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.process */
extern void T193f27(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_attachment_mark_separate_keyword */
extern void T2208f124(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_attachment_mark_separate_keyword */
extern void T2208f124p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_attachment_mark_separate_keyword */
extern void T2052f181(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.print_space */
extern void T2052f71(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.print_character */
extern void T2052f108(TC* ac, T0* C, T2 a1);
/* ET_AST_PRETTY_PRINTER.process_type_mark */
extern void T2052f119(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_implicit_mark */
extern T1 T328f81(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_attachment_mark */
extern T1 T328f98(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_separateness_mark */
extern T1 T328f100(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separate */
extern T1 T328f74(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_expandedness_mark */
extern T1 T328f99(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T337f80(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_attachment_mark */
extern T1 T337f87(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_separateness_mark */
extern T1 T337f89(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T337f74(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_expandedness_mark */
extern T1 T337f88(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T340f25(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_attachment_mark */
extern T1 T340f27(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_separateness_mark */
extern T1 T340f29(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T340f16(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_expandedness_mark */
extern T1 T340f28(TC* ac, T0* C);
/* ET_SYMBOL.is_implicit_mark */
extern T1 T286f81(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_attachment_mark */
extern T1 T286f84(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_separateness_mark */
extern T1 T286f86(TC* ac, T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T286f75(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_expandedness_mark */
extern T1 T286f85(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_implicit_mark */
extern T1 T177f11(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_attachment_mark */
extern T1 T177f16(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_question_mark */
extern T1 T177f23(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_bang */
extern T1 T177f22(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_detachable */
extern T1 T177f21(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attached */
extern T1 T177f20(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_separateness_mark */
extern T1 T177f15(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separate */
extern T1 T177f19(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_expandedness_mark */
extern T1 T177f14(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_reference */
extern T1 T177f18(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expanded */
extern T1 T177f17(TC* ac, T0* C);
/* ET_KEYWORD.is_implicit_mark */
extern T1 T192f35(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_attachment_mark */
extern T1 T192f38(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_separateness_mark */
extern T1 T192f37(TC* ac, T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T192f10(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_expandedness_mark */
extern T1 T192f36(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.process */
extern void T337f141(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_bracket_symbol */
extern void T2208f126(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_bracket_symbol */
extern void T2052f188(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T340f109(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_question_mark_symbol */
extern void T2208f111(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_question_mark_symbol */
extern void T2052f189(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1142f118(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.process */
extern void T286f127(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_like_feature */
extern void T2052f84(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.set_target */
extern void T2052f125(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_feature_name */
extern void T2052f122(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.set_current_target */
extern void T2052f124(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T193f15(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_attachment_mark */
extern T1 T193f20(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_separateness_mark */
extern T1 T193f19(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_expandedness_mark */
extern T1 T193f18(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1963f7(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1962f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1961f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1960f7(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1149f14(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1139f17(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1123f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1123f21(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1123f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T63f608(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T63f240(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T63f239(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T63f197(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T63f199(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T1466c1286(TC* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T1466f931(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T729f70(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T729f92(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T729f39(TC* ac, T0* C);
/* ET_LIKE_FEATURE.append_to_string */
extern void T726f96(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T728f96(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T728f39(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T695f93(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T695f58(TC* ac, T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T307f119(TC* ac, T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T1078f41(TC* ac, T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T1078f92(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T916s29(TC* ac, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern T0* T916s30(TC* ac);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern T0* T916s33(TC* ac);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern T0* T916s40(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern T0* T916s32(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern T0* T916s51(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern T0* T916s31(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern T0* T916s50(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern T0* T916s49(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern T0* T916s48(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern T0* T916s47(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern T0* T916s46(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern T0* T916s45(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern T0* T916s44(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern T0* T916s43(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern T0* T916s42(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern T0* T916s41(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern T0* T916s39(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern T0* T916s38(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern T0* T916s37(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern T0* T916s36(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern T0* T916s35(TC* ac);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern T0* T916s34(TC* ac);
/* UC_STRING.as_upper */
extern T0* T919f58(TC* ac, T0* C);
/* UC_STRING.to_upper */
extern void T919f92(TC* ac, T0* C);
/* STRING_8.as_upper */
extern T0* T17f40(TC* ac, T0* C);
/* STRING_8.to_upper */
extern void T17f79(TC* ac, T0* C);
/* STRING_8.to_upper_area */
extern void T17f82(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CHARACTER_8.upper */
extern T2 T2f25(TC* ac, T2 volatile* C);
/* CHARACTER_8.upper_value */
extern T0* T2f31(TC* ac, T2 volatile* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T504f88(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T504f60(TC* ac, T0* C);
/* ET_CLASS.append_to_string */
extern void T70f329(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T510f34(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T510f5(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T695f33(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T695f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T504f34(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T504f5(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T510f11(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T695f56(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T504f55(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T510f18(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T695f34(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T504f35(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T510f7(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_to_string */
extern void T184f130(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T2191f27(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T2191f22(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T202f4(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T2190f18(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.count */
extern T6 T202s3(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.count */
extern T6 T2190f1(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.count */
extern T6 T510f1(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.count */
extern T6 T186f1(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T186f8(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.type */
extern T0* T726f8(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T853f7(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T729f9(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T728f12(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1469f3(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T724f3(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T184f18(TC* ac, T0* C);
/* ET_CLASS.type */
extern T0* T70f172(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T200f18(TC* ac, T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T102f21(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T186f6(TC* ac, T0* C, T6 a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1469f5(TC* ac, T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T307f59(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T853f34(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T729f36(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T728f37(TC* ac, T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T726f26(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T724f6(TC* ac, T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T200f29(TC* ac, T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T184f55(TC* ac, T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T102f54(TC* ac, T0* C);
/* ET_CLASS.label */
extern T0* T70f190(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T2191f20(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T202f17(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T2190f20(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T186f5(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T726f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T853f8(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T729f10(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T728f13(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1469f6(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T724f4(TC* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T184f49(TC* ac, T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T70f173(TC* ac, T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T200f19(TC* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T102f48(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T2191f21(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T186f34(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T2191f4(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T186f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T853f87(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T853f42(TC* ac, T0* C);
/* ET_CLASS_TYPE.append_to_string */
extern void T102f136(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T202f22(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T2190f24(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T202f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T2190f19(TC* ac, T0* C);
/* ET_LIKE_CURRENT.append_to_string */
extern void T200f90(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.append_to_string_with_space */
extern void T177f35(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.expandedness_text */
extern T0* T177f26(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T177s13(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.separateness_text */
extern T0* T177f25(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.attachment_text */
extern T0* T177f24(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.append_to_string_with_space */
extern void T193f26(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.expandedness_text */
extern T0* T193f23(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.tokens */
extern T0* T193s17(TC* ac);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.separateness_text */
extern T0* T193f22(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_separate_mark */
extern T1 T193f4(TC* ac, T0* C);
/* ET_KEYWORD.is_separate_mark */
extern T1 T192f44(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.attachment_text */
extern T0* T193f21(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string_with_space */
extern void T328f160(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.expandedness_text */
extern T0* T328f105(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.separateness_text */
extern T0* T328f104(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separate_mark */
extern T1 T328f12(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.attachment_text */
extern T0* T328f103(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_to_string_with_space */
extern void T337f137(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.expandedness_text */
extern T0* T337f93(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.separateness_text */
extern T0* T337f92(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T337f12(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.attachment_text */
extern T0* T337f91(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string_with_space */
extern void T340f104(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.expandedness_text */
extern T0* T340f35(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.separateness_text */
extern T0* T340f34(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T340f7(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.attachment_text */
extern T0* T340f33(TC* ac, T0* C);
/* ET_SYMBOL.append_to_string_with_space */
extern void T286f125(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.expandedness_text */
extern T0* T286f89(TC* ac, T0* C);
/* ET_SYMBOL.separateness_text */
extern T0* T286f88(TC* ac, T0* C);
/* ET_SYMBOL.is_separate_mark */
extern T1 T286f12(TC* ac, T0* C);
/* ET_SYMBOL.attachment_text */
extern T0* T286f87(TC* ac, T0* C);
/* ET_KEYWORD.append_to_string_with_space */
extern void T192f104(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.expandedness_text */
extern T0* T192f41(TC* ac, T0* C);
/* ET_KEYWORD.separateness_text */
extern T0* T192f40(TC* ac, T0* C);
/* ET_KEYWORD.attachment_text */
extern T0* T192f39(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T728f73(TC* ac, T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T726f71(TC* ac, T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T200f65(TC* ac, T0* C);
/* ET_CLASS.upper_name */
extern T0* T70f83(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T325f17(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.column */
extern T6 T1885f17(TC* ac, T0* C);
/* ET_VOID.column */
extern T6 T331f27(TC* ac, T0* C);
/* ET_RESULT.column */
extern T6 T322f29(TC* ac, T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T304f33(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T283f20(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T277f11(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T811f7(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.column */
extern T6 T280f19(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T313f32(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T690f22(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T689f22(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T688f23(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T687f23(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T685f24(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T684f24(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T683f26(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T682f26(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T681f26(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T680f26(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T679f28(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T675f24(TC* ac, T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T678f13(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T677f49(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T676f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T340f32(TC* ac, T0* C);
/* ET_CURRENT.column */
extern T6 T301f7(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T328f7(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T337f7(TC* ac, T0* C);
/* ET_SYMBOL.column */
extern T6 T286f7(TC* ac, T0* C);
/* ET_KEYWORD.column */
extern T6 T192f28(TC* ac, T0* C);
/* ET_IDENTIFIER.column */
extern T6 T307f43(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T325f15(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.line */
extern T6 T1885f16(TC* ac, T0* C);
/* ET_VOID.line */
extern T6 T331f26(TC* ac, T0* C);
/* ET_RESULT.line */
extern T6 T322f28(TC* ac, T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T304f32(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T283f19(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T277f10(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T811f6(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.line */
extern T6 T280f11(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T313f11(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T690f21(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T689f21(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T688f22(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T687f22(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T685f23(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T684f23(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T683f25(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T682f25(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T681f25(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T680f25(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T679f27(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T675f23(TC* ac, T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T678f12(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T677f36(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T676f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T340f31(TC* ac, T0* C);
/* ET_CURRENT.line */
extern T6 T301f6(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T328f6(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T337f6(TC* ac, T0* C);
/* ET_SYMBOL.line */
extern T6 T286f6(TC* ac, T0* C);
/* ET_KEYWORD.line */
extern T6 T192f27(TC* ac, T0* C);
/* ET_IDENTIFIER.line */
extern T6 T307f42(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.filename */
extern T0* T1466f20(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_cluster */
extern T1 T89s37(TC* ac);
/* ET_CLUSTER.is_cluster */
extern T1 T67s19(TC* ac);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T263f21(TC* ac, T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T199f20(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T1466f18(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern T0* T1466f21(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T811c12(TC* ac);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T1466f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T729f7(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T683f27(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T682f27(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T681f27(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T680f27(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T679f29(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_null_position */
extern T1 T678f27(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T677f24(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T675f25(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T690f23(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T689f23(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_null_position */
extern T1 T688f24(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_null_position */
extern T1 T687f24(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T685f25(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T684f25(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T676f22(TC* ac, T0* C);
/* ET_CURRENT.is_null_position */
extern T1 T301f19(TC* ac, T0* C);
/* ET_IDENTIFIER.is_null_position */
extern T1 T307f44(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T729f6(TC* ac, T0* C);
/* ET_LIKE_FEATURE.like_keyword */
extern T0* T726f3(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.like_keyword */
extern T0* T728f3(TC* ac, T0* C);
/* ET_LIKE_CURRENT.like_keyword */
extern T0* T200f2(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.is_null */
extern T1 T811f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T340f30(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T328f15(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_null_position */
extern T1 T337f15(TC* ac, T0* C);
/* ET_SYMBOL.is_null_position */
extern T1 T286f16(TC* ac, T0* C);
/* ET_KEYWORD.is_null_position */
extern T1 T192f26(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.position */
extern T0* T177f12(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_position */
extern T0* T81s844(TC* ac);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.position */
extern T0* T193f16(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T328f20(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T337f20(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T340f26(TC* ac, T0* C);
/* ET_SYMBOL.position */
extern T0* T286f21(TC* ac, T0* C);
/* ET_KEYWORD.position */
extern T0* T192f21(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T728f10(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T695f68(TC* ac, T0* C);
/* ET_IDENTIFIER.position */
extern T0* T307f29(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T504f70(TC* ac, T0* C);
/* ET_CLASS.position */
extern T0* T70f202(TC* ac, T0* C);
/* ET_NOTE_LIST.position */
extern T0* T575f8(TC* ac, T0* C);
/* ET_NOTE.position */
extern T0* T693f3(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.position */
extern T0* T587f6(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.tokens */
extern T0* T587s8(TC* ac);
/* ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T683f18(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T682f18(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T681f18(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T680f18(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T679f19(TC* ac, T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T678f14(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T677f9(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T675f16(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.position */
extern T0* T694f6(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T440f20(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T690f14(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T689f14(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T688f15(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T687f15(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T685f16(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T684f16(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T676f7(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.first */
extern T0* T587f7(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.is_empty */
extern T1 T587f5(TC* ac, T0* C);
/* ET_NOTE.tag */
extern T0* T693f4(TC* ac, T0* C);
/* ET_TAGGED_NOTE.position */
extern T0* T692f4(TC* ac, T0* C);
/* ET_NOTE_LIST.first */
extern T0* T575f11(TC* ac, T0* C);
/* ET_NOTE_LIST.is_empty */
extern T1 T575f10(TC* ac, T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T184f42(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T853f6(TC* ac, T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T102f42(TC* ac, T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T726f6(TC* ac, T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T200f17(TC* ac, T0* C);
/* ET_CURRENT.position */
extern T0* T301f9(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T63f189(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T42f608(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T42f240(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T42f239(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_info */
extern void T42f197(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T42f199(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T42f189(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1123f6(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1123f12(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1140f14(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1124f34(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1124f40(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1124f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc1a_error */
extern void T63f604(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vggc1a */
extern T0* T1466c1284(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vggc1_error */
extern T1 T63f187(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc1a_error */
extern void T42f604(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vggc1_error */
extern T1 T42f187(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1124f12(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1124f24(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T869f26(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T869f31(TC* ac, T0* C, T0* a1);
extern T1 T869f31ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.index */
extern T6 T726f31(TC* ac, T0* C);
/* ET_CLASS.seeded_feature */
extern T0* T70f203(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T726f30(TC* ac, T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T307f33(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T63f592(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T1466c1272(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T63f182(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T42f592(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T42f182(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T63f591(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T1466c1271(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T718f51(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T716f50(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T714f56(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T712f52(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T711f55(TC* ac, T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T710f54(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T709f52(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T708f50(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T707f54(TC* ac, T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T706f48(TC* ac, T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T715f51(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T717f49(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T42f591(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T70f232(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T510f21(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T695f55(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T504f57(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T501f6(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T726f102(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T718f74(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T716f68(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T714f81(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T712f72(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T711f75(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T710f73(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T709f74(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T708f73(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T707f73(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T706f68(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T715f66(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T717f65(TC* ac, T0* C);
/* ET_IDENTIFIER.set_argument */
extern void T307f131(TC* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.set_seed */
extern void T307f124(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T501f10(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T307f48(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T495f6(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1467f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T63f590(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T1466c1270(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.name */
extern T0* T726f1(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T63f169(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2b_error */
extern void T42f590(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T42f169(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T853f50(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T729f50(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T728f53(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T726f50(TC* ac, T0* C, T0* a1);
/* ET_CLASS.base_class */
extern T0* T70f112(TC* ac, T0* C);
/* ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T184f78(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T2191f10(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T186f19(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T102f82(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T202f11(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T2190f10(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T200f47(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T726f101(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_query */
extern T0* T70f128(TC* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T773f8(TC* ac, T0* C, T0* a1);
extern T1 T773f8ot1(TC* ac, T0* a1);
/* ET_ALIAS_NAME_LIST.has_call_name */
extern T1 T371f6(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T720f16(TC* ac, T0* C, T0* a1);
extern T1 T720f16ot1(TC* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T720s7(TC* ac);
/* ET_ALIAS_FREE_NAME.operator_name */
extern T0* T720f8(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T304f35(TC* ac, T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T304s9(TC* ac);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T720f18(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T720s9(TC* ac);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T368f14(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not_symbol */
extern T1 T1885f48(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not_symbol */
extern T1 T337f128(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not_symbol */
extern T1 T751f41(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not_symbol */
extern T1 T750f41(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not_symbol */
extern T1 T304f31(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not_symbol */
extern T1 T313f36(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not_symbol */
extern T1 T328f109(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_prefix_not_symbol */
extern T1 T280f54(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not_symbol */
extern T1 T307f113(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not_symbol */
extern T1 T720f49(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not_symbol */
extern T1 T368f76(TC* ac, T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T368s79(TC* ac);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T1885f47(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T337f127(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T751f40(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T750f40(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T304f30(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T313f35(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T313s7(TC* ac);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T328f108(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_prefix_not */
extern T1 T280f53(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T307f112(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T720f48(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T368f75(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T1885f46(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T337f126(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T751f39(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T750f39(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T304f53(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T313f54(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T328f130(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_prefix_plus */
extern T1 T280f52(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T307f111(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T720f47(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T368f21(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T1885f45(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T337f125(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T751f38(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T750f38(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T304f52(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T313f53(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T328f129(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_prefix_minus */
extern T1 T280f51(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T307f110(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T720f46(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T368f22(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T1885f44(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T337f124(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T751f37(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T750f37(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T304f51(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T313f52(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T328f128(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_dotdot */
extern T1 T280f50(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T307f109(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T720f45(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T368f74(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor_symbol */
extern T1 T1885f43(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor_symbol */
extern T1 T337f123(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor_symbol */
extern T1 T751f36(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor_symbol */
extern T1 T750f36(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor_symbol */
extern T1 T304f50(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor_symbol */
extern T1 T313f51(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor_symbol */
extern T1 T328f127(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_xor_symbol */
extern T1 T280f49(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor_symbol */
extern T1 T307f108(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor_symbol */
extern T1 T720f44(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor_symbol */
extern T1 T368f73(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T1885f42(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T337f122(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T751f35(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T750f35(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T304f49(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T313f50(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T328f126(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_xor */
extern T1 T280f48(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T307f107(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T720f43(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T368f72(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T1885f41(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T337f121(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T751f34(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T750f34(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T304f48(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T313f49(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T328f125(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_times */
extern T1 T280f47(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T307f106(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T720f42(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T368f71(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T1885f40(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T337f120(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T751f33(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T750f33(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T304f47(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T313f48(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T328f124(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_power */
extern T1 T280f46(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T307f105(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T720f41(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T368f70(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T1885f39(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T337f119(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T751f32(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T750f32(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T304f46(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T313f47(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T328f123(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_plus */
extern T1 T280f45(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T307f104(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T720f40(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T368f19(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else_symbol */
extern T1 T1885f12(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else_symbol */
extern T1 T337f101(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_else_symbol */
extern T1 T751f10(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else_symbol */
extern T1 T750f10(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else_symbol */
extern T1 T304f18(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else_symbol */
extern T1 T313f18(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else_symbol */
extern T1 T328f88(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_or_else_symbol */
extern T1 T280f27(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else_symbol */
extern T1 T307f74(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else_symbol */
extern T1 T720f39(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else_symbol */
extern T1 T368f69(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T1885f11(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T337f100(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_else */
extern T1 T751s5(TC* ac);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T750f5(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T304f13(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T313f13(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T328f83(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_or_else */
extern T1 T280f26(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T307f73(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T720f38(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T368f68(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_symbol */
extern T1 T1885f38(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_symbol */
extern T1 T337f118(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_symbol */
extern T1 T751f13(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_symbol */
extern T1 T750f13(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_symbol */
extern T1 T304f21(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_symbol */
extern T1 T313f21(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_symbol */
extern T1 T328f91(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_or_symbol */
extern T1 T280f44(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_symbol */
extern T1 T307f103(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_symbol */
extern T1 T720f37(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_symbol */
extern T1 T368f67(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T1885f37(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T337f117(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T751f8(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T750f8(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T304f16(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T313f16(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T328f86(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_or */
extern T1 T280f43(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T307f102(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T720f36(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T368f66(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T1885f36(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T337f116(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T751f31(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T750f31(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T304f45(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T313f46(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T328f122(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_mod */
extern T1 T280f42(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T307f101(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T720f35(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T368f65(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T1885f35(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T337f115(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T751f30(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T750f30(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T304f44(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T313f45(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T328f121(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_minus */
extern T1 T280f41(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T307f100(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T720f34(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T368f20(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T1885f34(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T337f114(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T751f29(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T750f29(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T304f43(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T313f44(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T328f120(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_lt */
extern T1 T280f40(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T307f99(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T720f33(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T368f64(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T1885f33(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T337f113(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T751f28(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T750f28(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T304f42(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T313f43(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T328f119(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_le */
extern T1 T280f39(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T307f98(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T720f32(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T368f63(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies_symbol */
extern T1 T1885f10(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies_symbol */
extern T1 T337f99(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies_symbol */
extern T1 T751f11(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies_symbol */
extern T1 T750f11(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies_symbol */
extern T1 T304f19(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies_symbol */
extern T1 T313f19(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies_symbol */
extern T1 T328f89(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_implies_symbol */
extern T1 T280f25(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies_symbol */
extern T1 T307f72(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies_symbol */
extern T1 T720f31(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies_symbol */
extern T1 T368f62(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T1885f9(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T337f98(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T751f6(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T750f6(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T304f14(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T313f14(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T328f84(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_implies */
extern T1 T280f24(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T307f71(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T720f30(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T368f61(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T1885f32(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T337f112(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T751f27(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T750f27(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T304f41(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T313f42(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T328f118(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_gt */
extern T1 T280f38(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T307f97(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T720f29(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T368f60(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T1885f31(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T337f111(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T751f26(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T750f26(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T304f40(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T313f41(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T328f117(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_ge */
extern T1 T280f37(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T307f96(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T720f28(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T368f59(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T1885f30(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T337f110(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T751f25(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T750f25(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T304f39(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T313f40(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T328f116(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_divide */
extern T1 T280f36(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T307f95(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T720f27(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T368f58(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T1885f29(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T337f109(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T751f24(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T750f24(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T304f38(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T313f39(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T328f115(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_div */
extern T1 T280f35(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T307f94(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T720f26(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T368f57(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then_symbol */
extern T1 T1885f8(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then_symbol */
extern T1 T337f97(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then_symbol */
extern T1 T751f9(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_then_symbol */
extern T1 T750f9(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then_symbol */
extern T1 T304f17(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then_symbol */
extern T1 T313f17(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then_symbol */
extern T1 T328f87(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_and_then_symbol */
extern T1 T280f23(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then_symbol */
extern T1 T307f70(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then_symbol */
extern T1 T720f25(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then_symbol */
extern T1 T368f56(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T1885f7(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T337f96(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T751f4(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_then */
extern T1 T750s4(TC* ac);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T304f12(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T313f12(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T328f82(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_and_then */
extern T1 T280f22(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T307f69(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T720f24(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T368f55(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_symbol */
extern T1 T1885f28(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_symbol */
extern T1 T337f108(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_symbol */
extern T1 T751f12(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_symbol */
extern T1 T750f12(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_symbol */
extern T1 T304f20(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_symbol */
extern T1 T313f20(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_symbol */
extern T1 T328f90(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_and_symbol */
extern T1 T280f34(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_symbol */
extern T1 T307f93(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_symbol */
extern T1 T720f23(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_symbol */
extern T1 T368f54(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T1885f27(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T337f107(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T751f7(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T750f7(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T304f15(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T313f15(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T328f85(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_infix_and */
extern T1 T280f33(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T307f92(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T720f22(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T368f53(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_parenthesis */
extern T1 T1885s26(TC* ac);
/* ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T337f106(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T751f23(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T750f23(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_parenthesis */
extern T1 T304f37(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T313f38(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T328f114(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_parenthesis */
extern T1 T280f32(TC* ac, T0* C);
/* ET_IDENTIFIER.is_parenthesis */
extern T1 T307f91(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T720f11(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_parenthesis */
extern T1 T368f9(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T1885f25(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bracket */
extern T1 T337s105(TC* ac);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T751f22(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T750f22(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T304f36(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T313f37(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T328f113(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_bracket */
extern T1 T280f31(TC* ac, T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T307f90(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T720f10(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T368f8(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.alias_names */
extern T0* T714f34(TC* ac, T0* C);
/* ET_IDENTIFIER.alias_names */
extern T0* T307f58(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.alias_names */
extern T0* T712f56(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.alias_names */
extern T0* T711f60(TC* ac, T0* C);
/* ET_DO_FUNCTION.alias_names */
extern T0* T710f58(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_names */
extern T0* T709f28(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_names */
extern T0* T708f26(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.alias_names */
extern T0* T707f31(TC* ac, T0* C);
/* ET_ATTRIBUTE.alias_names */
extern T0* T706f24(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.hash_code */
extern T6 T714f21(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.hash_code */
extern T6 T712f19(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.hash_code */
extern T6 T711f21(TC* ac, T0* C);
/* ET_DO_FUNCTION.hash_code */
extern T6 T710f21(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.hash_code */
extern T6 T709f15(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.hash_code */
extern T6 T708f14(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.hash_code */
extern T6 T707f19(TC* ac, T0* C);
/* ET_ATTRIBUTE.hash_code */
extern T6 T706f12(TC* ac, T0* C);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T869f16(TC* ac, T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T869f30(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1145f17(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1145f21(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1145f12(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1145f23(TC* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1137f11(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1137f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force_relation */
extern void T1726f13(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put_indexed_relation */
extern void T1726f17(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].replace */
extern void T1456f14(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].item */
extern T0* T1456f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T240f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T240f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].reset */
extern void T1726f15(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force */
extern void T1726f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put */
extern void T1726f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].put_last */
extern void T1456f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1816s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].fill_with */
extern void T1815f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].extend */
extern void T1815f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T240f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].put_new */
extern void T2015f36(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_put */
extern void T2015f52(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].force */
extern void T2017s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].fill_with */
extern void T2016f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].extend */
extern void T2016f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_put */
extern void T2015f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_put */
extern void T2015f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_put */
extern void T2015f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_item */
extern T6 T2015f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].hash_position */
extern T6 T2015f28(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T726f90(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_item */
extern T6 T2015f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].unset_found_item */
extern void T2015f40(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].put_last */
extern void T1727f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].resize */
extern void T1456f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1816s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1815f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T240f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].resize */
extern void T2015f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_resize */
extern void T2015f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].special_integer_ */
extern T0* T2015s26(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_resize */
extern void T2015f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T2017s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T2016f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_resize */
extern void T2015f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_item */
extern T0* T2015f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_resize */
extern void T2015f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_modulus */
extern T6 T2015f22(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].resize */
extern void T1727f13(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].capacity */
extern T6 T1726f9(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].count */
extern T6 T1726f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].index_of */
extern T6 T1726f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found_item */
extern T6 T2015f21(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_item */
extern T6 T2015f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found */
extern T1 T2015f23(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search */
extern void T2015f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search_position */
extern void T2015f53(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1146f8(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1136f8(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1138f18(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1135f9(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1135f13(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1135f6(TC* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1135f15(TC* ac, T0* C);
/* ET_TUPLE_TYPE.process */
extern void T184f132(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_tuple_type */
extern void T2208f15(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_tuple_type */
extern void T2208f15p1(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.process */
extern void T2191f30(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_actual_parameter_sublist */
extern void T2208f187(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_actual_parameter_sublist */
extern void T2208f187p1(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.process */
extern void T202f25(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unfolded_empty_tuple_actual_parameters */
extern void T2208f165(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unfolded_empty_tuple_actual_parameters */
extern void T2208f165p1(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.process */
extern void T2190f27(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unfolded_tuple_actual_parameters */
extern void T2208f186(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unfolded_tuple_actual_parameters */
extern void T2208f186p1(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.process */
extern void T186f39(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_actual_parameter_list */
extern void T2208f106(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_actual_parameter_list */
extern void T2208f106p1(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T695f101(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_constrained_formal_parameter */
extern void T2208f110(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_constrained_formal_parameter */
extern void T2208f110p1(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.process */
extern void T422f15(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_constraint_creator */
extern void T2208f147(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_constraint_creator */
extern void T2208f147p1(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T422f10(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_constraint_creator */
extern void T2052f193(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.reset_excluded_nodes */
extern void T2208f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_AST_NODE].wipe_out */
extern void T2277f13(TC* ac, T0* C);
/* SPECIAL [ET_AST_NODE].keep_head */
extern void T2345f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AST_NODE].set_count */
extern void T2345f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AST_NODE].move_all_cursors_after */
extern void T2277f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AST_NODE].set_next_cursor */
extern void T2347f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AST_NODE].set_after */
extern void T2347f6(TC* ac, T0* C);
/* ET_COMMENT_FINDER.find_comments */
extern void T2208f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_EXPORT.process */
extern void T487f17(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_feature_export */
extern void T2052f243(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.dedent */
extern void T2052f115(TC* ac, T0* C);
/* ET_FEATURE_EXPORT.item */
extern T0* T487f6(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.print_new_line */
extern void T2052f113(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.process_comments */
extern void T2052f86(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_BREAK].wipe_out */
extern void T2209f13(TC* ac, T0* C);
/* SPECIAL [ET_BREAK].keep_head */
extern void T2279f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BREAK].set_count */
extern void T2279f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BREAK].move_all_cursors_after */
extern void T2209f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_BREAK].set_next_cursor */
extern void T2281f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_BREAK].set_after */
extern void T2281f6(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.print_indented_comments */
extern void T2052f126(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_AST_PRETTY_PRINTER.print_indented_comments */
extern T0* T2052f126ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_BREAK]].set_rout_disp_final */
extern void T2211f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_AST_PRETTY_PRINTER.print_indented_comment */
extern void T2052f144(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.print_comment */
extern void T2052f165(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.print_comment_text */
extern void T2052f166(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BREAK].do_all */
extern void T2209f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BREAK].item */
extern T0* T2209f7(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.indent */
extern void T2052f114(TC* ac, T0* C);
/* ET_CLIENTS.process */
extern void T268f21(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_clients */
extern void T2208f192(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_clients */
extern void T2208f192p1(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.item */
extern T0* T268f11(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_clients */
extern void T2052f236(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_name_of_named_class */
extern void T2052f111(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENT.client */
extern T0* T190f4(TC* ac, T0* C);
/* ET_FEATURE_EXPORT.is_empty */
extern T1 T487f12(TC* ac, T0* C);
/* ET_COMMENT_FINDER.process_feature_export */
extern void T2208f200(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_feature_export */
extern void T2208f200p1(TC* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.process */
extern void T701f12(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_all_export */
extern void T2052f244(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_all_export */
extern void T2208f201(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_all_export */
extern void T2208f201p1(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_RANGE.process */
extern void T739f13(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_choice_range */
extern void T2208f202(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_choice_range */
extern void T2208f202p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_choice_range */
extern void T2052f245(TC* ac, T0* C, T0* a1);
/* ET_CLIENT.process */
extern void T190f8(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_client */
extern void T2208f196(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_client */
extern void T2208f196p1(TC* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.process */
extern void T195f12(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_export_list */
extern void T2208f198(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_export_list */
extern void T2208f198p1(TC* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.item */
extern T0* T195f6(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_export_list */
extern void T2052f241(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_semicolon */
extern T1 T487f10(TC* ac, T0* C);
/* ET_ALL_EXPORT.is_semicolon */
extern T1 T701f8(TC* ac, T0* C);
/* ET_EXPORT_LIST.has_non_null_export */
extern T1 T195f8(TC* ac, T0* C);
extern T1 T195f8ot1(TC* ac, T0* a1);
/* ET_RENAME.process */
extern void T700f8(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_rename */
extern void T2208f194(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_rename */
extern void T2208f194p1(TC* ac, T0* C, T0* a1);
/* ET_SEMICOLON_SYMBOL.process */
extern void T334f57(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_semicolon_symbol */
extern void T2208f185(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_semicolon_symbol */
extern void T2052f224(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T81s628(TC* ac);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T334c55(TC* ac);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T334f56(TC* ac, T0* C);
/* ET_PARENT.process */
extern void T181f13(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_parent */
extern void T2208f191(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_parent */
extern void T2208f191p1(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.process */
extern void T196f11(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_keyword_feature_name_list */
extern void T2208f199(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_keyword_feature_name_list */
extern void T2208f199p1(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T196f7(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_keyword_feature_name_list */
extern void T2052f242(TC* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.process */
extern void T194f11(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_rename_list */
extern void T2208f197(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_rename_list */
extern void T2208f197p1(TC* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.item */
extern T0* T194f7(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_rename_list */
extern void T2052f240(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_rename */
extern void T2052f246(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_new_name_of_rename */
extern void T2052f247(TC* ac, T0* C, T0* a1);
/* ET_RENAME.rename_pair */
extern T0* T700f5(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.process_parent */
extern void T2052f235(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.set_target_type */
extern void T2052f85(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_export_list_same_line */
extern void T2052f239(TC* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.is_none_all */
extern T1 T195f7(TC* ac, T0* C);
/* ET_FEATURE_EXPORT.is_none_all */
extern T1 T487f11(TC* ac, T0* C);
/* ET_ALL_EXPORT.is_none_all */
extern T1 T701f9(TC* ac, T0* C);
/* ET_CLIENTS.is_none */
extern T1 T268f12(TC* ac, T0* C);
/* ET_CLIENT.base_class */
extern T0* T190f3(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.process */
extern void T694f10(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_custom_attribute */
extern void T2208f176(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_custom_attribute */
extern void T2208f176p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_custom_attribute */
extern void T2052f229(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.process */
extern void T608f28(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_preconditions */
extern void T2208f116(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_preconditions */
extern void T2208f116p1(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.item */
extern T0* T608f11(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_preconditions */
extern void T2052f206(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_assertions */
extern void T2052f142(TC* ac, T0* C, T0* a1);
extern T1 T2052f142ot1(TC* ac, T0* a1);
extern T1 T2052f142ot2(TC* ac, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.is_left_bracket */
extern T1 T340f50(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_left_bracket */
extern T1 T328f133(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_left_bracket */
extern T1 T337f131(TC* ac, T0* C);
/* ET_SYMBOL.is_left_bracket */
extern T1 T286f94(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_left_parenthesis */
extern T1 T340f49(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_left_parenthesis */
extern T1 T328f132(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_left_parenthesis */
extern T1 T337f130(TC* ac, T0* C);
/* ET_SYMBOL.is_left_parenthesis */
extern T1 T286f93(TC* ac, T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T307f114(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.first_leaf */
extern T0* T683f68(TC* ac, T0* C);
/* ET_LIKE_FEATURE.first_leaf */
extern T0* T726f91(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.first_leaf */
extern T0* T177f27(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_leaf */
extern T0* T81s1565(TC* ac);
/* ET_AST_NULL_LEAF.make */
extern T0* T2276c6(TC* ac);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.first_leaf */
extern T0* T193f24(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.first_leaf */
extern T0* T328f135(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.first_leaf */
extern T0* T337f133(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.first_leaf */
extern T0* T340f46(TC* ac, T0* C);
/* ET_SYMBOL.first_leaf */
extern T0* T286f96(TC* ac, T0* C);
/* ET_KEYWORD.first_leaf */
extern T0* T192f47(TC* ac, T0* C);
/* ET_TUPLE_TYPE.first_leaf */
extern T0* T184f124(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.first_leaf */
extern T0* T853f83(TC* ac, T0* C);
/* ET_CLASS_TYPE.first_leaf */
extern T0* T102f130(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.first_leaf */
extern T0* T729f88(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.first_leaf */
extern T0* T728f91(TC* ac, T0* C);
/* ET_LIKE_CURRENT.first_leaf */
extern T0* T200f85(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.first_leaf */
extern T0* T682f68(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.first_leaf */
extern T0* T681f68(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.first_leaf */
extern T0* T680f68(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.first_leaf */
extern T0* T679f68(TC* ac, T0* C);
/* ET_VERBATIM_STRING.first_leaf */
extern T0* T678f55(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.first_leaf */
extern T0* T677f51(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.first_leaf */
extern T0* T675f52(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.first_leaf */
extern T0* T761f27(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.first_leaf */
extern T0* T617f42(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.first_leaf */
extern T0* T343f43(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.first_leaf */
extern T0* T760f30(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.first_leaf */
extern T0* T759f32(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.first_leaf */
extern T0* T757f35(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.first_leaf */
extern T0* T745f27(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.first_leaf */
extern T0* T1045f34(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.first_leaf */
extern T0* T280f56(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.first_leaf */
extern T0* T776f8(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T768f44(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T767f49(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T766f45(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T765f45(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T764f50(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T763f46(TC* ac, T0* C);
/* ET_CALL_AGENT.first_leaf */
extern T0* T380f37(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.first_leaf */
extern T0* T634f34(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.first_leaf */
extern T0* T572f34(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.first_leaf */
extern T0* T563f34(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.first_leaf */
extern T0* T563f34p1(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.first_leaf */
extern T0* T593f28(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.first_leaf */
extern T0* T377f31(TC* ac, T0* C);
/* ET_OBJECT_TEST.first_leaf */
extern T0* T758f30(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.first_leaf */
extern T0* T756f28(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.first_leaf */
extern T0* T755f32(TC* ac, T0* C);
/* ET_FREE_OPERATOR.first_leaf */
extern T0* T304f54(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.first_leaf */
extern T0* T313f55(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.first_leaf */
extern T0* T754f28(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.first_leaf */
extern T0* T753f29(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.first_leaf */
extern T0* T1896f19(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.first_leaf */
extern T0* T992f20(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.first_leaf */
extern T0* T2070f26(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.first_leaf */
extern T0* T2069f29(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.first_leaf */
extern T0* T2068f21(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.first_leaf */
extern T0* T752f27(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.first_leaf */
extern T0* T749f32(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.first_leaf */
extern T0* T748f27(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.first_leaf */
extern T0* T747f27(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.first_leaf */
extern T0* T746f27(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.first_leaf */
extern T0* T744f32(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.first_leaf */
extern T0* T631f36(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.first_leaf */
extern T0* T383f32(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.first_leaf */
extern T0* T534f30(TC* ac, T0* C);
/* ET_KEYWORD_EXPRESSION.first_leaf */
extern T0* T1471f4(TC* ac, T0* C);
/* ET_IF_EXPRESSION.first_leaf */
extern T0* T513f33(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.first_leaf */
extern T0* T440f38(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.first_leaf */
extern T0* T723f8(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.first_leaf */
extern T0* T690f52(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.first_leaf */
extern T0* T689f52(TC* ac, T0* C);
/* ET_CURRENT.first_leaf */
extern T0* T301f38(TC* ac, T0* C);
/* ET_RESULT.first_leaf */
extern T0* T322f37(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.first_leaf */
extern T0* T688f43(TC* ac, T0* C);
/* ET_VOID.first_leaf */
extern T0* T331f35(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.first_leaf */
extern T0* T687f43(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.first_leaf */
extern T0* T685f46(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.first_leaf */
extern T0* T684f46(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.first_leaf */
extern T0* T676f51(TC* ac, T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T307f32(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_leaf */
extern T0* T683f67(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_leaf */
extern T0* T682f67(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T681f67(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T680f67(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T679f67(TC* ac, T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T678f54(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T677f50(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T675f51(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.last_leaf */
extern T0* T761f26(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.last_leaf */
extern T0* T617f41(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.last_leaf */
extern T0* T343f42(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T760f29(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.last_leaf */
extern T0* T759f31(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.last_leaf */
extern T0* T757f34(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T745f26(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T1045f33(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.last_leaf */
extern T0* T280f16(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T1892f17(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T349f10(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.last_leaf */
extern T0* T776f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T768f46(TC* ac, T0* C);
extern T1 T768f46ot1(TC* ac, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T362f14(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T767f51(TC* ac, T0* C);
extern T1 T767f51ot1(TC* ac, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T766f47(TC* ac, T0* C);
extern T1 T766f47ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T765f47(TC* ac, T0* C);
extern T1 T765f47ot1(TC* ac, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T764f52(TC* ac, T0* C);
extern T1 T764f52ot1(TC* ac, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T763f48(TC* ac, T0* C);
extern T1 T763f48ot1(TC* ac, T0* a1);
/* ET_CALL_AGENT.last_leaf */
extern T0* T380f36(TC* ac, T0* C);
extern T1 T380f36ot1(TC* ac, T0* a1);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T634f33(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T572f33(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T563f33(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T593f27(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T377f30(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T337f129(TC* ac, T0* C);
/* ET_OBJECT_TEST.last_leaf */
extern T0* T758f29(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T756f27(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T755f31(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T754f27(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.last_leaf */
extern T0* T753f28(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1896f20(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.last_leaf */
extern T0* T992f21(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T2070f27(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_leaf */
extern T0* T2069f30(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.last_leaf */
extern T0* T2068f22(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T752f26(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T749f31(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T748f26(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T747f26(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T746f26(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T744f31(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T631f35(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T383f31(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.last_leaf */
extern T0* T534f29(TC* ac, T0* C);
/* ET_IF_EXPRESSION.last_leaf */
extern T0* T513f32(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T440f13(TC* ac, T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T726f66(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T853f5(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T729f5(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T728f8(TC* ac, T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T200f6(TC* ac, T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T184f21(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T2191f5(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T2191s23(TC* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T695f82(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.last_leaf */
extern T0* T645f10(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.last_leaf */
extern T0* T696f7(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.last_leaf */
extern T0* T425f11(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.renames */
extern T0* T695f83(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T422f11(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T504f84(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T1469f11(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T724f11(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T186f13(TC* ac, T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T102f23(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T202f6(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T2190f5(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T510f10(TC* ac, T0* C);
/* ET_CLASS.last_leaf */
extern T0* T70f78(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T736f3(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.last_leaf */
extern T0* T723f7(TC* ac, T0* C);
/* ET_KEYWORD.last_leaf */
extern T0* T192f46(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T690f51(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T689f51(TC* ac, T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T301f37(TC* ac, T0* C);
/* ET_RESULT.last_leaf */
extern T0* T322f32(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T688f42(TC* ac, T0* C);
/* ET_VOID.last_leaf */
extern T0* T331f34(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T687f42(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T685f45(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T684f45(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T676f50(TC* ac, T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T307f56(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T683f23(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T682f23(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T681f23(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T680f23(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T679f24(TC* ac, T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T678f26(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T677f23(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T675f21(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.assertion */
extern T0* T761f15(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.assertion */
extern T0* T617f29(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.assertion */
extern T0* T343f30(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T760f16(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.assertion */
extern T0* T759f19(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.assertion */
extern T0* T757f22(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T745f15(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T1045f16(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T776f3(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T768f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T767f32(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T766f30(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T765f28(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T764f33(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T763f31(TC* ac, T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T380f20(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T634f19(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T572f21(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T563f20(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T593f16(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T377f17(TC* ac, T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T758f18(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T756f15(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T755f17(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T754f16(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T753f15(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T752f15(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T749f17(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T748f15(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T747f15(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T746f15(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T744f20(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T631f20(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T383f19(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.assertion */
extern T0* T534f18(TC* ac, T0* C);
/* ET_IF_EXPRESSION.assertion */
extern T0* T513f21(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T440f25(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.assertion */
extern T0* T723f3(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T690f19(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T689f19(TC* ac, T0* C);
/* ET_CURRENT.assertion */
extern T0* T301f24(TC* ac, T0* C);
/* ET_RESULT.assertion */
extern T0* T322f21(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T688f20(TC* ac, T0* C);
/* ET_VOID.assertion */
extern T0* T331f20(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T687f20(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T685f21(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T684f21(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T676f21(TC* ac, T0* C);
/* ET_POSTCONDITIONS.item */
extern T0* T605f12(TC* ac, T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T560f8(TC* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T386f14(TC* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.count */
extern T6 T608f2(TC* ac, T0* C);
/* ET_POSTCONDITIONS.count */
extern T6 T605f2(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.count */
extern T6 T560f2(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.count */
extern T6 T386f3(TC* ac, T0* C);
/* ET_INVARIANTS.count */
extern T6 T543f4(TC* ac, T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T608f15(TC* ac, T0* C);
/* ET_PRECONDITIONS.break */
extern T0* T608f17(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.break */
extern T0* T683f9(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.break */
extern T0* T682f9(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.break */
extern T0* T681f9(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.break */
extern T0* T680f9(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.break */
extern T0* T679f9(TC* ac, T0* C);
/* ET_VERBATIM_STRING.break */
extern T0* T678f11(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.break */
extern T0* T677f8(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.break */
extern T0* T675f8(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.break */
extern T0* T2276f1(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.break */
extern T0* T690f6(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.break */
extern T0* T689f6(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.break */
extern T0* T685f7(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.break */
extern T0* T684f7(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.break */
extern T0* T676f6(TC* ac, T0* C);
/* ET_PRECONDITIONS.last_leaf */
extern T0* T608f18(TC* ac, T0* C);
/* ET_PRECONDITIONS.last */
extern T0* T608f19(TC* ac, T0* C);
/* ET_POSTCONDITIONS.process */
extern void T605f30(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_postconditions */
extern void T2208f115(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_postconditions */
extern void T2208f115p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_postconditions */
extern void T2052f205(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T605f16(TC* ac, T0* C);
/* ET_POSTCONDITIONS.break */
extern T0* T605f18(TC* ac, T0* C);
/* ET_POSTCONDITIONS.last_leaf */
extern T0* T605f19(TC* ac, T0* C);
/* ET_POSTCONDITIONS.last */
extern T0* T605f20(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.process */
extern void T560f25(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_loop_invariants */
extern void T2208f114(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_loop_invariants */
extern void T2208f114p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_loop_invariants */
extern void T2052f200(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.is_empty */
extern T1 T560f15(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.break */
extern T0* T560f17(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.last_leaf */
extern T0* T560f18(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.last */
extern T0* T560f19(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.process */
extern void T551f16(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_local_variable */
extern void T2208f173(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_local_variable */
extern void T2208f173p1(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.process */
extern void T1468f17(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_local_comma_variable */
extern void T2208f182(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_local_comma_variable */
extern void T2208f182p1(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.process */
extern void T557f18(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_local_variable_list */
extern void T2208f113(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_local_variable_list */
extern void T2208f113p1(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T557f7(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_local_variable_list */
extern void T2052f199(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE.type */
extern T0* T551f6(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1468f6(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern T0* T81s630(TC* ac);
/* ET_SYMBOL.make_colon */
extern T0* T286c108(TC* ac);
/* ET_SYMBOL.make_leaf */
extern void T286f124(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.is_last_entity */
extern T1 T551f9(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.is_last_entity */
extern T1 T1468f9(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T551f8(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1468f8(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T557f5(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.break */
extern T0* T557f11(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.last_leaf */
extern T0* T557f12(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.last_leaf */
extern T0* T551f10(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.last_leaf */
extern T0* T1468f10(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.last */
extern T0* T557f13(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.process */
extern void T495f15(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_argument */
extern void T2208f170(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_argument */
extern void T2208f170p1(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.process */
extern void T1467f16(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_comma_argument */
extern void T2208f181(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_comma_argument */
extern void T2208f181p1(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_PROCEDURE.process */
extern void T704f11(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_procedure */
extern void T2208f178(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_procedure */
extern void T2208f178p1(TC* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.process */
extern void T1097f14(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_braced_type_list */
extern void T2208f195(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_braced_type_list */
extern void T2208f195p1(TC* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.item */
extern T0* T1097f8(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_braced_type_list */
extern void T2052f238(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_convert_procedure */
extern void T2052f231(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FUNCTION.process */
extern void T703f10(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_function */
extern void T2208f177(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_function */
extern void T2208f177p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_convert_function */
extern void T2052f230(TC* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T770f18(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_agent_typed_open_argument */
extern void T2208f112(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_agent_typed_open_argument */
extern void T2208f112p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_agent_typed_open_argument */
extern void T2052f218(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1142f123(TC* ac, T0* C, T0* a1);
/* ET_NOTE.process */
extern void T693f6(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_note */
extern void T2208f108(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_note */
extern void T2208f108p1(TC* ac, T0* C, T0* a1);
/* ET_NOTE_TERM_LIST.process */
extern void T587f13(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_note_term_list */
extern void T2208f145(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_note_term_list */
extern void T2208f145p1(TC* ac, T0* C, T0* a1);
/* ET_NOTE_TERM_LIST.item */
extern T0* T587f9(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_note_term_list */
extern void T2052f203(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.note_term */
extern T0* T307f116(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.note_term */
extern T0* T683f61(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.note_term */
extern T0* T682f61(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.note_term */
extern T0* T681f61(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.note_term */
extern T0* T680f61(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.note_term */
extern T0* T679f61(TC* ac, T0* C);
/* ET_VERBATIM_STRING.note_term */
extern T0* T678f47(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.note_term */
extern T0* T677f43(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.note_term */
extern T0* T675f46(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.note_term */
extern T0* T694f7(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.note_term */
extern T0* T690f46(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.note_term */
extern T0* T689f45(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.note_term */
extern T0* T688f37(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.note_term */
extern T0* T687f37(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.note_term */
extern T0* T685f39(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.note_term */
extern T0* T684f39(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.note_term */
extern T0* T676f42(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.process_note */
extern void T2052f173(TC* ac, T0* C, T0* a1);
/* ET_TAGGED_NOTE.process */
extern void T692f6(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_tagged_note */
extern void T2208f107(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_tagged_note */
extern void T2208f107p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_tagged_note */
extern void T2052f211(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_note_tag */
extern void T2052f172(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_tag */
extern void T2052f174(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT.process */
extern void T522f14(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inline_separate_argument */
extern void T2208f171(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inline_separate_argument */
extern void T2208f171p1(TC* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.process */
extern void T719f8(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_aliased_feature_name */
extern void T2052f234(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.process */
extern void T371f14(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_alias_name_list */
extern void T2208f188(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_alias_name_list */
extern void T2208f188p1(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.process */
extern void T720f60(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_alias_free_name */
extern void T2208f190(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_alias_free_name */
extern void T2208f190p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_alias_free_name */
extern void T2052f232(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.process */
extern void T368f113(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_alias_name */
extern void T2208f189(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_alias_name */
extern void T2208f189p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_alias_name */
extern void T2052f225(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.item */
extern T0* T371f4(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_alias_name_list */
extern void T2052f192(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_aliased_feature_name */
extern void T2208f179(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_aliased_feature_name */
extern void T2208f179p1(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T1046f16(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unqualified_call_instruction */
extern void T2208f102(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unqualified_call_instruction */
extern void T2208f102p1(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unqualified_regular_feature_call */
extern void T2208f140(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_unqualified_call_instruction */
extern void T2052f162(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_unqualified_regular_feature_call */
extern void T2052f102(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T1892f11(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T349f11(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1142f42(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1142f98(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T100f462(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T100f555(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T63f420(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T1466c1108(TC* ac, T0* a1, T0* a2);
/* ET_INVARIANT_KEYWORD.lower_name */
extern T0* T280f15(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.tokens */
extern T0* T280s7(TC* ac);
/* ET_INVARIANT_KEYWORD.position */
extern T0* T280f55(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T63f103(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T42f420(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T42f103(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T63f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T1466c1253(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T63f130(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T42f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T42f130(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T100f131(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T852f58(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T852f59(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].keep_head */
extern void T1291s5(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].keep_head */
extern void T855f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].set_count */
extern void T855f10(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern T0* T852f13(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T1291c3(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T100s111(TC* ac);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T877f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].force */
extern void T1319s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T1318f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].extend */
extern void T1318f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T877f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T1319s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T1318f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T877f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T877f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T100f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f309ot1(TC* ac, T0* a1);
extern T1 T100f309ot2(TC* ac, T0* a1);
extern T1 T100f309ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T100f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f399ot1(TC* ac, T0* a1);
extern T1 T100f399ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T63f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T1466c1040(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T1885f21(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.name */
extern T0* T1885f14(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T1885s15(TC* ac);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T337f83(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T337f90(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T751f16(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T751f18(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T751s14(TC* ac);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T750f16(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T750f18(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T750s14(TC* ac);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T304f24(TC* ac, T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T304f25(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T313f24(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T313f26(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T328f94(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T328f101(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_not_symbol_name */
extern T0* T81f880(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_xor_symbol_name */
extern T0* T81f878(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_or_else_symbol_name */
extern T0* T81f874(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_or_symbol_name */
extern T0* T81f873(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_implies_symbol_name */
extern T0* T81f868(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_and_then_symbol_name */
extern T0* T81f863(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_and_symbol_name */
extern T0* T81f862(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T283f22(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T283s7(TC* ac);
/* ET_PARENTHESIS_SYMBOL.position */
extern T0* T1885f13(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T751f21(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T750f21(TC* ac, T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T304f27(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T313f56(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T283f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T63f71(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T42f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T42f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T100f398(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f398ot1(TC* ac, T0* a1);
extern T1 T100f398ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T63f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T1466c1176(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T42f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T100f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T100f574(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T100f537(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T1060f97(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.put_procedure_call */
extern void T865f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].force */
extern void T1288f43(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_put */
extern void T1288f49(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].force */
extern void T1788s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].fill_with */
extern void T1785f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].extend */
extern void T1785f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_put */
extern void T1288f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_put */
extern void T1288f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_item */
extern T6 T1288f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_item */
extern T6 T1288f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].hash_position */
extern T6 T1288f26(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.hash_code */
extern T6 T1885f4(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.hash_code */
extern T6 T751f17(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.hash_code */
extern T6 T750f17(TC* ac, T0* C);
/* ET_FREE_OPERATOR.hash_code */
extern T6 T304f2(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.hash_code */
extern T6 T313f25(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.hash_code */
extern T6 T328f95(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.hash_code */
extern T6 T337f84(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.hash_code */
extern T6 T280f17(TC* ac, T0* C);
/* ET_IDENTIFIER.hash_code */
extern T6 T307f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].resize */
extern void T1288f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_resize */
extern void T1288f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].special_integer_ */
extern T0* T1288s33(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_resize */
extern void T1288f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].aliased_resized_area */
extern T0* T1788s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_NAME].aliased_resized_area */
extern T0* T1785f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_resize */
extern void T1288f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].aliased_resized_area */
extern T0* T1793s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].aliased_resized_area */
extern T0* T1790f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_item */
extern T0* T1288f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_resize */
extern void T1288f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_modulus */
extern T6 T1288f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_capacity */
extern T6 T1288f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_put */
extern void T1288f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].force */
extern void T1793s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].fill_with */
extern void T1790f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].extend */
extern void T1790f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].search_position */
extern void T1288f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].unset_found_item */
extern void T1288f41(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.put_procedure_call */
extern void T850f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T894f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T1059f97(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T904f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T978f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_procedure_call */
extern void T843f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T894c17(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T6 a7);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T100f104(TC* ac, T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.index */
extern T6 T769f4(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.index */
extern T6 T1601f1(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.target */
extern T0* T1888f1(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T730f12(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T100f400(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T100f403(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T100f407(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f407ot1(TC* ac, T0* a1);
extern T1 T100f407ot2(TC* ac, T0* a1);
extern T1 T100f407ot3(TC* ac, T0* a1);
extern T1 T100f407ot4(TC* ac, T0* a1);
extern T1 T100f407ot5(TC* ac, T0* a1);
extern T1 T100f407ot6(TC* ac, T0* a1);
extern T1 T100f407ot7(TC* ac, T0* a1);
extern T1 T100f407ot8(TC* ac, T0* a1);
extern T1 T100f407ot9(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar3ga_error */
extern void T63f498(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar3ga */
extern T0* T1466c1186(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T695f11(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T504f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T853f52(TC* ac, T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T184f43(TC* ac, T0* C);
/* ET_CLASS.to_text */
extern T0* T70f171(TC* ac, T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T102f43(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vuar3g_error */
extern T1 T63f133(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar3ga_error */
extern void T42f498(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vuar3g_error */
extern T1 T42f133(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_separate */
extern T1 T852f43(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_separate_with_type_mark */
extern T1 T852f30(TC* ac, T0* C, T0* a1);
extern T1 T852f30ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T852f57(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].force */
extern void T1291s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE].fill_with */
extern void T855f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].extend */
extern void T855f9(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_separate_with_type_mark */
extern T1 T695f24(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f24ot1(TC* ac, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.is_separate_mark */
extern T1 T177f2(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_separate */
extern T1 T695f29(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T695f28(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_separate */
extern T1 T504f30(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T504f29(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T510f12(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.index */
extern T6 T695f7(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.index */
extern T6 T504f2(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T853f3(TC* ac, T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T184f20(TC* ac, T0* C);
/* ET_CLASS.root_context */
extern T0* T70f76(TC* ac, T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T102f20(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.root_context */
extern T0* T852f2(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T695s30(TC* ac);
/* ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T184f32(TC* ac, T0* C);
/* ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T184f33(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T852c56(TC* ac, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T852f63(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T1291s1(TC* ac, T6 a1);
/* SPECIAL [ET_TYPE].make_empty */
extern T0* T855c5(TC* ac, T6 a1);
/* ET_CLASS.as_nested_type_context */
extern T0* T70f142(TC* ac, T0* C);
/* ET_CLASS.to_nested_type_context */
extern T0* T70f143(TC* ac, T0* C);
/* ET_CLASS_TYPE.as_nested_type_context */
extern T0* T102f33(TC* ac, T0* C);
/* ET_CLASS_TYPE.to_nested_type_context */
extern T0* T102f34(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T852f17(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_root_context */
extern T1 T184f19(TC* ac, T0* C);
/* ET_CLASS.is_root_context */
extern T1 T70f75(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_root_context */
extern T1 T102f19(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T852f20(TC* ac, T0* C);
extern T1 T852f20ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T184f68(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T184f82(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T184f82ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T695f48(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T695f16(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f16ot1(TC* ac, T0* a1);
extern T1 T695f16ot2(TC* ac, T0* a1);
extern T1 T695f16ot3(TC* ac, T0* a1);
/* ET_CLASS.type_with_type_mark */
extern T0* T70f108(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.make */
extern T0* T102c132(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make_generic */
extern T0* T102c133(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.overridden_type_mark */
extern T0* T70f133(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T81s601(TC* ac, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5, T1 a6);
/* ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern T0* T81s704(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.make */
extern T0* T177c28(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern T0* T81s703(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T177f34(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern T0* T81s702(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T177f33(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_type_mark */
extern T0* T81s701(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_non_separate_mark */
extern void T177f32(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_reference_type_mark */
extern T0* T81s700(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_expanded_type_mark */
extern T0* T81s699(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern T0* T81s597(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T177f30(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern T0* T81s698(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern T0* T81s697(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern T0* T81s696(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T177f31(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern T0* T81s695(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_reference_type_mark */
extern T0* T81s694(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_expanded_type_mark */
extern T0* T81s693(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern T0* T81s692(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern T0* T81s691(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern T0* T81s690(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern T0* T81s5(TC* ac);
/* ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T177f29(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern T0* T81s689(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern T0* T81s688(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_type_mark */
extern T0* T81s687(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_reference_type_mark */
extern T0* T81s686(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_expanded_type_mark */
extern T0* T81s685(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern T0* T81s38(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern T0* T81s684(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern T0* T81s683(TC* ac);
/* ET_CLASS.tokens */
extern T0* T70s262(TC* ac);
/* ET_CLASS.is_separate */
extern T1 T70f124(TC* ac, T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T70f135(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separateness_mark */
extern T1 T328f11(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_non_separate_mark */
extern T1 T328f73(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T337f11(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_non_separate_mark */
extern T1 T337f73(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T340f6(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_non_separate_mark */
extern T1 T340f15(TC* ac, T0* C);
/* ET_SYMBOL.is_separateness_mark */
extern T1 T286f11(TC* ac, T0* C);
/* ET_SYMBOL.is_non_separate_mark */
extern T1 T286f74(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T193f3(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_non_separate_mark */
extern T1 T193f9(TC* ac, T0* C);
/* ET_KEYWORD.is_separateness_mark */
extern T1 T192f20(TC* ac, T0* C);
/* ET_KEYWORD.is_non_separate_mark */
extern T1 T192f9(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T177f9(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expandedness_mark */
extern T1 T328f9(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T337f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T340f48(TC* ac, T0* C);
/* ET_SYMBOL.is_expandedness_mark */
extern T1 T286f9(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T193f10(TC* ac, T0* C);
/* ET_KEYWORD.is_expandedness_mark */
extern T1 T192f15(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T177f7(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T184f27(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T184f127(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.make */
extern T0* T184c126(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern T0* T81s612(TC* ac);
/* ET_TUPLE_TYPE.tokens */
extern T0* T184s16(TC* ac);
/* ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T184f7(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_separate */
extern T1 T184f14(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_with_type_mark */
extern T0* T102f27(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.overridden_type_mark */
extern T0* T102f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.tokens */
extern T0* T102s17(TC* ac);
/* ET_CLASS_TYPE.is_separate */
extern T1 T102f15(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T853f38(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T853c85(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T853f35(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T177f10(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T193f14(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.overridden_type_mark */
extern T0* T328f14(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T337f14(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T340f9(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.overridden_type_mark */
extern T0* T286f15(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.overridden_type_mark */
extern T0* T192f33(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T504f38(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T504f36(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T695f36(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T853f4(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.implementation_class */
extern T0* T504f3(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.implementation_class */
extern T0* T695f5(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T853f10(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f10ot1(TC* ac, T0* a1);
extern T1 T853f10ot2(TC* ac, T0* a1);
extern T1 T853f10ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T853s37(TC* ac);
/* ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T729f19(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f19ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.keep_first */
extern void T852f66(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T729f40(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.adapted_base_class_with_seeded_feature */
extern T0* T726f40(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS.adapted_base_class_with_seeded_feature */
extern T0* T70f227(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T184f67(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T853f19(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T853f19ot1(TC* ac, T0* a1);
extern T1 T853f19ot2(TC* ac, T0* a1);
extern T1 T853f19ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.type_constraint_count */
extern T6 T184s95(TC* ac);
/* ET_CLASS.type_constraint_count */
extern T6 T70s216(TC* ac);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.count */
extern T6 T1910s3(TC* ac);
/* ET_BASE_TYPE_CONSTRAINT_LIST.count */
extern T6 T1696f4(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_constraint_count */
extern T6 T102s84(TC* ac);
/* ET_TUPLE_TYPE.type_constraint */
extern T0* T184f96(TC* ac, T0* C, T6 a1);
/* ET_CLASS.type_constraint */
extern T0* T70f217(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.type_constraint */
extern T0* T1910f4(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.type_constraint */
extern T0* T1696f7(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.item */
extern T0* T1696f13(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.type_constraint */
extern T0* T102f85(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.constraint_base_types */
extern T0* T504f28(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_separate_any_type */
extern T0* T806f21(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_separate_any_type */
extern T0* T87f24(TC* ac, T0* C);
/* ET_SYSTEM.detachable_separate_any_type */
extern T0* T50f23(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.adapted_base_class_with_seeded_feature */
extern T0* T695f46(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T695f46ot1(TC* ac, T0* a1);
extern T1 T695f46ot2(TC* ac, T0* a1);
extern T1 T695f46ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.adapted_base_class_with_seeded_feature */
extern T0* T504f48(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T504f48ot1(TC* ac, T0* a1);
extern T1 T504f48ot2(TC* ac, T0* a1);
extern T1 T504f48ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T504s37(TC* ac);
/* ET_CLASS_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T102f66(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_FEATURE.tokens */
extern T0* T726s7(TC* ac);
/* ET_QUALIFIED_LIKE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T729f17(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T729f17ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T728f41(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T728f41ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.adapted_base_class_with_named_feature */
extern T0* T695f45(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f45ot1(TC* ac, T0* a1);
extern T1 T695f45ot2(TC* ac, T0* a1);
extern T1 T695f45ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.adapted_base_class_with_named_feature */
extern T0* T504f47(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f47ot1(TC* ac, T0* a1);
extern T1 T504f47ot2(TC* ac, T0* a1);
extern T1 T504f47ot3(TC* ac, T0* a1);
/* ET_CLASS.adapted_base_class_with_named_feature */
extern T0* T70f226(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.adapted_base_class_with_named_feature */
extern T0* T184f66(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.adapted_base_class_with_named_feature */
extern T0* T853f18(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f18ot1(TC* ac, T0* a1);
extern T1 T853f18ot2(TC* ac, T0* a1);
extern T1 T853f18ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.adapted_base_class_with_named_feature */
extern T0* T102f65(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T728s9(TC* ac);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T728f38(TC* ac, T0* C);
/* ET_LIKE_CURRENT.adapted_base_class_with_seeded_feature */
extern T0* T200f37(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.adapted_base_class_with_seeded_feature */
extern T0* T852f49(TC* ac, T0* C, T6 a1);
extern T1 T852f49ot1(TC* ac, T0* a1);
/* ET_LIKE_N.adapted_base_class_with_seeded_feature */
extern T0* T1290f28(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T852f46(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T184f87(TC* ac, T0* C, T6 a1);
/* ET_CLASS.context_adapted_base_class_with_seeded_feature */
extern T0* T70f235(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T102f102(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.named_query */
extern T0* T184f113(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_query */
extern T0* T1910f12(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.index_of_old_name */
extern T6 T425f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.rename_pair */
extern T0* T425f7(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.item */
extern T0* T425f9(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.index_of_new_name */
extern T6 T425f8(TC* ac, T0* C, T0* a1);
extern T1 T425f8ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.named_query */
extern T0* T102f97(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.adapted_base_class_with_named_feature */
extern T0* T726f39(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.adapted_base_class_with_named_feature */
extern T0* T729f16(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f16ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.adapted_base_class_with_named_feature */
extern T0* T728f40(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f40ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.adapted_base_class_with_named_feature */
extern T0* T200f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.adapted_base_class_with_named_feature */
extern T0* T852f48(TC* ac, T0* C, T0* a1);
extern T1 T852f48ot1(TC* ac, T0* a1);
/* ET_LIKE_N.adapted_base_class_with_named_feature */
extern T0* T1290f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T184f86(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_adapted_base_class_with_named_feature */
extern T0* T70f234(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T102f101(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T729s38(TC* ac);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T729f37(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T728f34(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f34ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T728f42(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T726f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T726f32(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T200f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T852f4(TC* ac, T0* C, T0* a1);
extern T1 T852f4ot1(TC* ac, T0* a1);
/* ET_LIKE_N.named_type_with_type_mark */
extern T0* T1290f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.tokens */
extern T0* T1290s5(TC* ac);
/* ET_LIKE_N.overridden_type_mark */
extern T0* T1290f20(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T184f63(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_with_type_mark */
extern T0* T70f199(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T102f62(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T200f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_type_with_type_mark */
extern T0* T70f174(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T184f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T102f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T504f15(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f15ot1(TC* ac, T0* a1);
extern T1 T504f15ot2(TC* ac, T0* a1);
extern T1 T504f15ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T504f50(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T853f32(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T729f34(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T728f35(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type */
extern T0* T726f24(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T200f27(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T70f185(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T184f53(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T102f52(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T70f204(TC* ac, T0* C, T6 a1);
/* ET_CLASS.base_type_actual */
extern T0* T70f219(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T102f67(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T102f88(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T102f88ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T852f32(TC* ac, T0* C, T6 a1);
extern T1 T852f32ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T695f59(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T695f59ot1(TC* ac, T0* a1);
extern T1 T695f59ot2(TC* ac, T0* a1);
extern T1 T695f59ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.type_constraint_type */
extern T0* T184f109(TC* ac, T0* C);
/* ET_CLASS.type_constraint_type */
extern T0* T70f213(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.type */
extern T0* T1910f1(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_constraint_type */
extern T0* T102f96(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T504f61(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T504f61ot1(TC* ac, T0* a1);
extern T1 T504f61ot2(TC* ac, T0* a1);
extern T1 T504f61ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T726f67(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T729f66(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T729f66ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T728f69(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T728f69ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T200f61(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_N.base_type_actual */
extern T0* T1290f22(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T853f60(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T853f60ot1(TC* ac, T0* a1);
extern T1 T853f60ot2(TC* ac, T0* a1);
extern T1 T853f60ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T184f56(TC* ac, T0* C);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T184f46(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T184f52(TC* ac, T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T70f192(TC* ac, T0* C);
/* ET_CLASS.base_type_actual_count */
extern T6 T70f182(TC* ac, T0* C, T0* a1);
/* ET_CLASS.formal_parameter_count */
extern T6 T70f187(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T102f55(TC* ac, T0* C);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T102f46(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T102f51(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T852f26(TC* ac, T0* C);
extern T1 T852f26ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T695f20(TC* ac, T0* C, T0* a1);
extern T1 T695f20ot1(TC* ac, T0* a1);
extern T1 T695f20ot2(TC* ac, T0* a1);
extern T1 T695f20ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T504f19(TC* ac, T0* C, T0* a1);
extern T1 T504f19ot1(TC* ac, T0* a1);
extern T1 T504f19ot2(TC* ac, T0* a1);
extern T1 T504f19ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T726f15(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T729f22(TC* ac, T0* C, T0* a1);
extern T1 T729f22ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T728f19(TC* ac, T0* C, T0* a1);
extern T1 T728f19ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T200f20(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_type_actual_count */
extern T6 T1290f13(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T853f24(TC* ac, T0* C, T0* a1);
extern T1 T853f24ot1(TC* ac, T0* a1);
extern T1 T853f24ot2(TC* ac, T0* a1);
extern T1 T853f24ot3(TC* ac, T0* a1);
/* ET_CLASS.ancestor */
extern T0* T70f188(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T782f6(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_unknown */
extern T1 T70f65(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_unknown */
extern T1 T89f59(TC* ac, T0* C);
/* ET_CLUSTER.is_unknown */
extern T1 T67f18(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_unknown */
extern T1 T263s5(TC* ac);
/* ET_NONE_GROUP.is_unknown */
extern T1 T199f9(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T852f24(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T852f19(TC* ac, T0* C);
extern T1 T852f19ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T695f17(TC* ac, T0* C, T0* a1);
extern T1 T695f17ot1(TC* ac, T0* a1);
extern T1 T695f17ot2(TC* ac, T0* a1);
extern T1 T695f17ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.named_base_class */
extern T0* T504f16(TC* ac, T0* C, T0* a1);
extern T1 T504f16ot1(TC* ac, T0* a1);
extern T1 T504f16ot2(TC* ac, T0* a1);
extern T1 T504f16ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.named_base_class */
extern T0* T726f27(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T729f29(TC* ac, T0* C, T0* a1);
extern T1 T729f29ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T728f28(TC* ac, T0* C, T0* a1);
extern T1 T728f28ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.named_base_class */
extern T0* T200f12(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_base_class */
extern T0* T1290f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_base_class_in_context */
extern T0* T70f175(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T853f22(TC* ac, T0* C, T0* a1);
extern T1 T853f22ot1(TC* ac, T0* a1);
extern T1 T853f22ot2(TC* ac, T0* a1);
extern T1 T853f22ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T184f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T102f8(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class */
extern T0* T184f3(TC* ac, T0* C);
/* ET_CLASS_TYPE.named_base_class */
extern T0* T102f3(TC* ac, T0* C);
/* ET_CLASS.named_base_class */
extern T0* T70f13(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T695f35(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_separate_with_type_mark */
extern T1 T504f23(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f23ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_separate_with_type_mark */
extern T1 T726f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_separate_with_type_mark */
extern T1 T729f31(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f31ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_separate_with_type_mark */
extern T1 T728f30(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f30ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_separate_with_type_mark */
extern T1 T200f15(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_separate_with_type_mark */
extern T1 T184f40(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_separate_with_type_mark */
extern T1 T70f157(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_separate_with_type_mark */
extern T1 T102f40(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_separate_with_type_mark */
extern T1 T1290f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_separate_with_type_mark */
extern T1 T853f28(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f28ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.put */
extern void T852f62(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T852f10(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.like_0 */
extern T0* T81s624(TC* ac);
/* ET_LIKE_N.make_zero */
extern T0* T1290c42(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern T0* T81s752(TC* ac);
/* ET_KEYWORD.make_like */
extern T0* T192c58(TC* ac);
/* ET_KEYWORD.make_token */
extern void T192f52(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T192f53(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T852s8(TC* ac);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T852f7(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_type_separate_with_type_mark */
extern T1 T184f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T102f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T102f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_separate_with_type_mark */
extern T1 T70f140(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T70f138(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T852f39(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T852f29(TC* ac, T0* C, T0* a1);
extern T1 T852f29ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T695f23(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f23ot1(TC* ac, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.is_type_expanded */
extern T1 T1910f6(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_expanded_type */
extern T1 T1696f8(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T504f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f22ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T726f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T729f30(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f30ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T728f29(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f29ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T200f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T184f39(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T70f156(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T102f39(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T1290f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T853f27(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f27ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T184f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T63f497(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T1466c1185(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T63f132(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T42f497(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T42f132(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T63f496(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T1466c1184(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T42f496(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T63f495(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T1466c1183(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T63f131(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T42f495(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T42f131(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_converted_target_infix_expression_validity */
extern void T100f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T100f149(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T100f151(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T749f38(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_boolean_class */
extern T1 T70f94(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T751f44(TC* ac, T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T750f44(TC* ac, T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T304f63(TC* ac, T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T313f65(TC* ac, T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T328f161(TC* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_left */
extern void T749f40(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T852f68(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T852f70(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T852f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T852f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f23ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T695f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T695f18ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T695f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T695f42ot1(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.detachable_keyword */
extern T0* T81s15(TC* ac);
/* ET_KEYWORD.make_detachable */
extern T0* T192c48(TC* ac);
/* ET_TOKEN_CONSTANTS.attached_keyword */
extern T0* T81s909(TC* ac);
/* ET_KEYWORD.make_attached */
extern T0* T192c64(TC* ac);
/* ET_FORMAL_PARAMETER.recursive_formal_constraints */
extern T0* T504f31(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T695f25(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f25ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T729f32(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f32ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T728f31(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f31ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T726f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T200f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T852f31(TC* ac, T0* C, T0* a1);
extern T1 T852f31ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T1290f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T184f41(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T70f158(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T102f41(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T70f176(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T184f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T102f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T504f24(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f24ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T853f29(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f29ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T504f32(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f32ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached */
extern T1 T184f102(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_attached */
extern T1 T70f257(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.is_type_attached */
extern T1 T1910f7(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_attached_type */
extern T1 T1696f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_attached */
extern T1 T102f86(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T729f55(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f55ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T728f58(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f58ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T726f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T200f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T852f53(TC* ac, T0* C, T0* a1);
extern T1 T852f53ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T1290f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T184f91(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T102f106(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T70f239(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T853f41(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f41ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T695f31(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f31ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T184f30(TC* ac, T0* C);
/* ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T102f31(TC* ac, T0* C);
/* ET_CLASS.attachment_type_conformance_mode */
extern T1 T70f137(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T852f15(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T504f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T504f44ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T853f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T853f39ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T729f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T729f42ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T852f18(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T728f45(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T728f45ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T726f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T200f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T852f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f51ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1290f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T184f89(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T102f104(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T70f237(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T70f206(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.conforms_to_type_with_type_marks */
extern T1 T1910f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_BASE_TYPE_CONSTRAINT_LIST.conforms_to_type_with_type_marks */
extern T1 T1696f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T184f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T102f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T504f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T504f17ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T726f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T729f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T729f33ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T728f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T728f33ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T200f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T184f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T102f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T70f198(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T1290f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T853f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T853f23ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T852f9(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T852f12(TC* ac, T0* C);
/* ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T184f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T695f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T695f22ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T504f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T504f21ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T853f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T853f26ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T729f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T729f27ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T728f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T728f24ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T726f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T200f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T852f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f28ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T1290f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T184f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T102f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T70f196(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T184f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T2191f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T695f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T504f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T853f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T729f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T728f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T726f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T200f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T70f184(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T184f48(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T102f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T186f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.scoop_mode */
extern T1 T852f16(TC* ac, T0* C);
/* ET_TUPLE_TYPE.scoop_mode */
extern T1 T184f31(TC* ac, T0* C);
/* ET_CLASS_TYPE.scoop_mode */
extern T1 T102f32(TC* ac, T0* C);
/* ET_CLASS.scoop_mode */
extern T1 T70f139(TC* ac, T0* C);
/* ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T102f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T102f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.is_dotnet */
extern T1 T70f145(TC* ac, T0* C);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T70f146(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T89f39(TC* ac, T0* C);
/* ET_CLUSTER.is_dotnet_assembly */
extern T1 T67f21(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T263f10(TC* ac, T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T199f7(TC* ac, T0* C);
/* ET_CLASS.is_system_object_class */
extern T1 T70f144(TC* ac, T0* C);
/* ET_CLASS.conforming_ancestor */
extern T0* T70f141(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T202f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T2190f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T2191f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T186f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T510f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T202f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T184f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T184f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T695f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f13ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T504f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f12ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T729f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T729f24ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T728f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T728f21ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T726f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T853f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f17ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T200f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T852f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T852f22ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T1290f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T184f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T70f194(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T102f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T70f183(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T184f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T102f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T2190f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T695f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T695f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f15ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T695f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f14ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T504f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f13ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T729f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T729f41ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T728f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T728f44ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T726f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T853f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f36ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T200f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T852f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T852f50ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T1290f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T184f88(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T102f103(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T70f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T70f205(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T184f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T102f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T853f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f9ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T729f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T729f18ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T728f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T728f32ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T726f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T200f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T852f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T852f11ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T1290f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T184f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T102f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T70f197(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_type_with_type_marks */
extern T1 T70f93(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T695f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f12ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T504f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f11ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T729f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T729f23ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T728f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T728f20ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T726f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T853f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f16ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T200f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T852f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T852f21ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T1290f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T184f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T70f193(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T102f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T70f153(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T184f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T102f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T504f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f14ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T504f45(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T853f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T729f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T728f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T726f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T200f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T70f92(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T2191f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T186f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T510f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.is_generic */
extern T1 T102f18(TC* ac, T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T70f127(TC* ac, T0* C);
/* ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T70f154(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T70f131(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T184f35(TC* ac, T0* C);
/* ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T102f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T695f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T695f21ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T695f37(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f37ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T695f32(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T504f33(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T853f40(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f40ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T729f54(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f54ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T728f57(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f57ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T726f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T200f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T184f90(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T102f105(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T70f238(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T852f52(TC* ac, T0* C, T0* a1);
extern T1 T852f52ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T1290f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference_with_type_mark */
extern T1 T70f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T184f81(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T102f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T504f39(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f39ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T504f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T504f20ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T853f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T853f25ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T729f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T729f26ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T728f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T728f23ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T726f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T200f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T852f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f27ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T1290f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T184f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T102f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T70f195(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T184f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T70f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_index_to */
extern void T100f234(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T2070f29(TC* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T769f13(TC* ac, T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T322f45(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1896f23(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1601f11(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T377f35(TC* ac, T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T301f46(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_CURSOR.set_index */
extern void T761f32(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T760f36(TC* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T756f33(TC* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T755f36(TC* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T749f36(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_EXPRESSION.set_index */
extern void T1565f12(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T593f33(TC* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T1045f38(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T383f34(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T744f38(TC* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T631f42(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_EXPRESSION.index */
extern T6 T1565f4(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1896c22(TC* ac, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T852f35(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T852f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.identity_type */
extern T0* T81s19(TC* ac);
/* ET_LIKE_CURRENT.make */
extern T0* T200c87(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern T0* T81s602(TC* ac);
/* ET_CURRENT.make */
extern T0* T301c40(TC* ac);
/* ET_CURRENT.make_token */
extern void T301f44(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T301f45(TC* ac, T0* C);
/* ET_CURRENT.tokens */
extern T0* T301s11(TC* ac);
/* ET_LIKE_CURRENT.tokens */
extern T0* T200s56(TC* ac);
/* ET_INFIX_EXPRESSION.set_right */
extern void T749f39(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put */
extern void T1892f19(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T349f25(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T100f100(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T100f621(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T100f390(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T863f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].force */
extern void T1295s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].fill_with */
extern void T1294f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].extend */
extern void T1294f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern T0* T863f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T1295c3(TC* ac);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T863f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T1295s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T1294f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T863f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T863f6(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T863f17(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T2068c23(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T100f401(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f401ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T1060f83(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.put_query_call */
extern void T865f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].force */
extern void T1287f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_put */
extern void T1287f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_put */
extern void T1287f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_put */
extern void T1287f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_item */
extern T6 T1287f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_item */
extern T6 T1287f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].hash_position */
extern T6 T1287f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].resize */
extern void T1287f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_resize */
extern void T1287f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].special_integer_ */
extern T0* T1287s32(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_resize */
extern void T1287f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_resize */
extern void T1287f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].aliased_resized_area */
extern T0* T1787s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].aliased_resized_area */
extern T0* T1783f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_item */
extern T0* T1287f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_resize */
extern void T1287f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_modulus */
extern T6 T1287f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_capacity */
extern T6 T1287f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_put */
extern void T1287f39(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].force */
extern void T1787s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].fill_with */
extern void T1783f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].extend */
extern void T1783f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].search_position */
extern void T1287f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].unset_found_item */
extern void T1287f37(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.put_query_call */
extern void T850f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T893f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T1059f83(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T904f84(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T978f86(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_query_call */
extern void T843f83(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T893c19(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T6 a7, T6 a8);
/* ET_DYNAMIC_SYSTEM.separate_type */
extern T0* T95f83(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.detachable_separate_type */
extern T0* T95f84(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.separate_type_modifier */
extern T0* T81s599(TC* ac);
/* ET_DYNAMIC_FUNCTION_TYPE.separate_type */
extern T0* T1060f9(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.separate_type */
extern T0* T1059f9(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.separate_type */
extern T0* T904f9(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.separate_type */
extern T0* T978f9(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.separate_type */
extern T0* T843f9(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.attached_separate_type */
extern T0* T95f67(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attached_separate_type_modifier */
extern T0* T81s598(TC* ac);
/* ET_DYNAMIC_FUNCTION_TYPE.attached_separate_type */
extern T0* T1060f10(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attached_separate_type */
extern T0* T1059f10(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attached_separate_type */
extern T0* T978f10(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attached_separate_type */
extern T0* T904f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attached_separate_type */
extern T0* T843f10(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_attached */
extern T1 T1060f35(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_attached */
extern T1 T1059f35(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_attached */
extern T1 T904f41(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_attached */
extern T1 T978f41(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_attached */
extern T1 T843f34(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_attached */
extern T1 T981f11(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_separate */
extern T1 T1060s43(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_separate */
extern T1 T1059s43(TC* ac);
/* ET_DYNAMIC_SPECIAL_TYPE.is_separate */
extern T1 T978s46(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.is_separate */
extern T1 T904s46(TC* ac);
/* ET_DYNAMIC_SECONDARY_TYPE.is_separate */
extern T1 T981f23(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_separate */
extern T1 T843s41(TC* ac);
/* ET_CONVERT_TO_EXPRESSION.expression */
extern T0* T2070f3(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.target */
extern T0* T377f2(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression */
extern T0* T755f3(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.left */
extern T0* T749f2(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.target */
extern T0* T1565f1(TC* ac, T0* C);
/* ET_AST_FACTORY.new_convert_to_expression */
extern T0* T65f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T2070c28(TC* ac, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_position */
extern void T307f127(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T2070f22(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T2069f23(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T2068f18(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1896f13(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.position */
extern T0* T992f8(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.position */
extern T0* T761f10(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.position */
extern T0* T617f24(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.position */
extern T0* T343f25(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T760f11(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.position */
extern T0* T759f14(TC* ac, T0* C);
/* ET_VOID.is_null_position */
extern T1 T331f28(TC* ac, T0* C);
/* ET_RESULT.is_null_position */
extern T1 T322f30(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_null_position */
extern T1 T304f34(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T283f21(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.is_null_position */
extern T1 T277f12(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_null_position */
extern T1 T280f6(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T313f6(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.position */
extern T0* T757f17(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T745f10(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T1045f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T768f21(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T277f9(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T767f26(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T766f24(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T765f23(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T764f27(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T763f25(TC* ac, T0* C);
/* ET_CALL_AGENT.position */
extern T0* T380f15(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T769f7(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1601f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T768f43(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T767f48(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T766f44(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T765f44(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T764f49(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T763f45(TC* ac, T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T380f34(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T634f14(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.item */
extern T0* T634f22(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T634f21(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T572f16(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T572f22(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T563f15(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T563f15p1(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.item */
extern T0* T563f21(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T563f22(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T593f11(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T377f12(TC* ac, T0* C);
/* ET_OBJECT_TEST.position */
extern T0* T758f13(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T756f10(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T755f12(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T754f11(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T753f10(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T752f10(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T749f12(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T748f10(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T747f10(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T746f10(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T744f15(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T631f15(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T383f11(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.position */
extern T0* T534f12(TC* ac, T0* C);
/* ET_KEYWORD_EXPRESSION.position */
extern T0* T1471f3(TC* ac, T0* C);
/* ET_IF_EXPRESSION.position */
extern T0* T513f16(TC* ac, T0* C);
/* ET_RESULT.position */
extern T0* T322f16(TC* ac, T0* C);
/* ET_VOID.position */
extern T0* T331f15(TC* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T704f7(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_to */
extern T1 T703s6(TC* ac);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T187f5(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T100f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.separate_target */
extern T0* T440f11(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.separate_keyword */
extern T0* T81s577(TC* ac);
/* ET_KEYWORD.make_separate */
extern T0* T192c51(TC* ac);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T440s9(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T100f540(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T865f64(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T850f61(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SYSTEM.set_has_separate_creation */
extern void T95f119(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_separate_creation */
extern void T865f68(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.has_separate_argument */
extern T1 T865f41(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.set_separate_creation */
extern void T850f68(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.has_separate_argument */
extern T1 T850f37(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T1060f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T1059f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T904f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T978f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_procedure */
extern T0* T843f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_FROM_EXPRESSION.separate_target */
extern T0* T2069f16(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.tokens */
extern T0* T2069s24(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_index */
extern void T100f302(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_index */
extern void T992f29(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1894f7(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T2068f24(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T2069f32(TC* ac, T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T770f15(TC* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.set_index */
extern void T759f38(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.set_index */
extern void T758f35(TC* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.set_index */
extern void T757f40(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T753f33(TC* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T752f31(TC* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T690f55(TC* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T689f60(TC* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T688f47(TC* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T687f52(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T685f55(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T684f49(TC* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T683f77(TC* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T682f77(TC* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T681f77(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T680f77(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T679f71(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T678f63(TC* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T677f59(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T676f54(TC* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T675f60(TC* ac, T0* C, T6 a1);
/* ET_QUANTIFIER_EXPRESSION.set_index */
extern void T617f49(TC* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.set_index */
extern void T343f57(TC* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T340f106(TC* ac, T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T331f38(TC* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T380f43(TC* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T440f40(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T768f60(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T767f67(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T766f62(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T765f61(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T764f68(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T763f63(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T563f41(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.set_index */
extern void T534f35(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.set_index */
extern void T513f38(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T754f32(TC* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T748f32(TC* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T747f32(TC* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T746f32(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T745f32(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T634f40(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T572f38(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_vape_validity */
extern void T100f596(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape2a_error */
extern void T63f538(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape2a */
extern T0* T1466c1226(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape2_error */
extern T1 T63f153(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape2a_error */
extern void T42f538(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape2_error */
extern T1 T42f153(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.client */
extern T0* T183f4(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.item */
extern T0* T183f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T718f62(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T716f57(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T714f67(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T712f58(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T711f62(TC* ac, T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T710f60(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T709f60(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T708f59(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T707f60(TC* ac, T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T706f54(TC* ac, T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T715f55(TC* ac, T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T543f35(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T717f53(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_non_descendant_caller_clients_to */
extern void T100f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENT_LIST.force_first */
extern void T183f17(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].force */
extern void T1093s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].fill_with */
extern void T1092f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].extend */
extern void T1092f8(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.fixed_array */
extern T0* T183f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].default_create */
extern T0* T1093c3(TC* ac);
/* ET_CLIENT_LIST.resize */
extern void T183f18(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1093s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1092f4(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.new_capacity */
extern T6 T183f10(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.capacity */
extern T6 T183f9(TC* ac, T0* C);
/* ET_CLASS.has_ancestors_error */
extern T1 T70f163(TC* ac, T0* C);
/* ET_CLASS.is_parsed */
extern T1 T70f90(TC* ac, T0* C);
/* ET_CLIENTS.has_descendant */
extern T1 T268f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T70f233(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T782f5(TC* ac, T0* C, T0* a1);
/* ET_CLASS.ancestors_built_successfully */
extern T1 T70f164(TC* ac, T0* C);
/* ET_CLIENTS.has_class */
extern T1 T268f10(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T183f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENT_LIST.has_class */
extern T1 T183f7(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.client */
extern T0* T268f8(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.is_none_or_unknown */
extern T1 T268f7(TC* ac, T0* C);
/* ET_CLIENT_LIST.is_none_or_unknown */
extern T1 T183f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.clients */
extern T0* T718f8(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.clients */
extern T0* T716f9(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.clients */
extern T0* T714f10(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.clients */
extern T0* T712f8(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.clients */
extern T0* T711f11(TC* ac, T0* C);
/* ET_DO_FUNCTION.clients */
extern T0* T710f11(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.clients */
extern T0* T709f4(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.clients */
extern T0* T708f5(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.clients */
extern T0* T707f10(TC* ac, T0* C);
/* ET_ATTRIBUTE.clients */
extern T0* T706f4(TC* ac, T0* C);
/* ET_DO_PROCEDURE.clients */
extern T0* T715f5(TC* ac, T0* C);
/* ET_INVARIANTS.clients */
extern T0* T543f37(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern T0* T81s9(TC* ac);
/* ET_CLIENT_LIST.make */
extern T0* T183c15(TC* ac);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].make */
extern T0* T1093s1(TC* ac, T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].make_empty */
extern T0* T1092c5(TC* ac, T6 a1);
/* ET_INVARIANTS.tokens */
extern T0* T543s13(TC* ac);
/* ET_DEFERRED_PROCEDURE.clients */
extern T0* T717f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.add_creation_clients_to */
extern void T718f119(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.add_creation_clients_to */
extern void T80f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.add_creation_clients_to */
extern void T82f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T82f11(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.append_first */
extern void T183f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.any_clients */
extern T0* T806f24(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_clients */
extern T0* T87f27(TC* ac, T0* C);
/* ET_SYSTEM.any_clients */
extern T0* T50f26(TC* ac, T0* C);
/* ET_CLASS.is_deferred */
extern T1 T70f114(TC* ac, T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T70f134(TC* ac, T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T192f25(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.add_creation_clients_to */
extern void T717f109(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.add_creation_clients_to */
extern void T716f115(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.add_creation_clients_to */
extern void T715f112(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENT_LIST.wipe_out */
extern void T183f16(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].keep_head */
extern void T1093s5(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].keep_head */
extern void T1092f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].set_count */
extern void T1092f10(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_feature */
extern T1 T718s61(TC* ac);
/* ET_ONCE_PROCEDURE.is_feature */
extern T1 T716s56(TC* ac);
/* ET_EXTERNAL_FUNCTION.is_feature */
extern T1 T714s66(TC* ac);
/* ET_DEFERRED_FUNCTION.is_feature */
extern T1 T712s57(TC* ac);
/* ET_ONCE_FUNCTION.is_feature */
extern T1 T711s61(TC* ac);
/* ET_DO_FUNCTION.is_feature */
extern T1 T710s59(TC* ac);
/* ET_UNIQUE_ATTRIBUTE.is_feature */
extern T1 T709s59(TC* ac);
/* ET_CONSTANT_ATTRIBUTE.is_feature */
extern T1 T708s58(TC* ac);
/* ET_EXTENDED_ATTRIBUTE.is_feature */
extern T1 T707s59(TC* ac);
/* ET_ATTRIBUTE.is_feature */
extern T1 T706s53(TC* ac);
/* ET_DO_PROCEDURE.is_feature */
extern T1 T715s54(TC* ac);
/* ET_INVARIANTS.is_feature */
extern T1 T543f34(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_feature */
extern T1 T717s52(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T63f521(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T1466c1209(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T63f55(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T42f521(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T42f55(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T718f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_creation_exported_to */
extern T1 T70f242(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T80f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T82f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_empty */
extern T1 T82f7(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T717f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T716f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T715f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_PROCEDURE.name */
extern T0* T704f1(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.name */
extern T0* T703f1(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.name */
extern T0* T187f1(TC* ac, T0* C);
/* ET_AST_FACTORY.new_convert_from_expression */
extern T0* T65f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T2069c31(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.has_flattening_error */
extern T1 T70f165(TC* ac, T0* C);
/* ET_CLASS.features_flattened */
extern T1 T70f73(TC* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_from */
extern T1 T704s8(TC* ac);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T703f7(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T187f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2070f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2069f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2068f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1896f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_INLINED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T992f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T307f84(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T683f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.real_64_convert_feature */
extern T0* T806f75(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_64_convert_feature */
extern T0* T87f78(TC* ac, T0* C);
/* ET_SYSTEM.real_64_convert_feature */
extern T0* T50f77(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_64_type */
extern T0* T806f74(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_64_type */
extern T0* T87f77(TC* ac, T0* C);
/* ET_SYSTEM.real_64_type */
extern T0* T50f76(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_32_convert_feature */
extern T0* T806f73(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_32_convert_feature */
extern T0* T87f76(TC* ac, T0* C);
/* ET_SYSTEM.real_32_convert_feature */
extern T0* T50f75(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_32_type */
extern T0* T806f72(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_32_type */
extern T0* T87f75(TC* ac, T0* C);
/* ET_SYSTEM.real_32_type */
extern T0* T50f74(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_64_convert_feature */
extern T0* T806f65(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_64_convert_feature */
extern T0* T87f68(TC* ac, T0* C);
/* ET_SYSTEM.natural_64_convert_feature */
extern T0* T50f67(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T683f37(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T683f15(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T328f80(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_64_type */
extern T0* T806f64(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_64_type */
extern T0* T87f67(TC* ac, T0* C);
/* ET_SYSTEM.natural_64_type */
extern T0* T50f66(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_32_convert_feature */
extern T0* T806f63(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_32_convert_feature */
extern T0* T87f66(TC* ac, T0* C);
/* ET_SYSTEM.natural_32_convert_feature */
extern T0* T50f65(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T683f36(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_32_type */
extern T0* T806f62(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_32_type */
extern T0* T87f65(TC* ac, T0* C);
/* ET_SYSTEM.natural_32_type */
extern T0* T50f64(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_16_convert_feature */
extern T0* T806f61(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_16_convert_feature */
extern T0* T87f64(TC* ac, T0* C);
/* ET_SYSTEM.natural_16_convert_feature */
extern T0* T50f63(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T683f35(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_16_type */
extern T0* T806f60(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_16_type */
extern T0* T87f63(TC* ac, T0* C);
/* ET_SYSTEM.natural_16_type */
extern T0* T50f62(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_8_convert_feature */
extern T0* T806f59(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_8_convert_feature */
extern T0* T87f62(TC* ac, T0* C);
/* ET_SYSTEM.natural_8_convert_feature */
extern T0* T50f61(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T683f34(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_8_type */
extern T0* T806f58(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_8_type */
extern T0* T87f61(TC* ac, T0* C);
/* ET_SYSTEM.natural_8_type */
extern T0* T50f60(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_64_convert_feature */
extern T0* T806f54(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_64_convert_feature */
extern T0* T87f57(TC* ac, T0* C);
/* ET_SYSTEM.integer_64_convert_feature */
extern T0* T50f56(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T683f33(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T683f49(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_64_type */
extern T0* T806f53(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_64_type */
extern T0* T87f56(TC* ac, T0* C);
/* ET_SYSTEM.integer_64_type */
extern T0* T50f55(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_32_convert_feature */
extern T0* T806f52(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_32_convert_feature */
extern T0* T87f55(TC* ac, T0* C);
/* ET_SYSTEM.integer_32_convert_feature */
extern T0* T50f54(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T683f32(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T683f48(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_32_type */
extern T0* T806f51(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_32_type */
extern T0* T87f54(TC* ac, T0* C);
/* ET_SYSTEM.integer_32_type */
extern T0* T50f53(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_16_convert_feature */
extern T0* T806f50(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_16_convert_feature */
extern T0* T87f53(TC* ac, T0* C);
/* ET_SYSTEM.integer_16_convert_feature */
extern T0* T50f52(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T683f31(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T683f47(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_16_type */
extern T0* T806f49(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_16_type */
extern T0* T87f52(TC* ac, T0* C);
/* ET_SYSTEM.integer_16_type */
extern T0* T50f51(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_8_convert_feature */
extern T0* T806f48(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_8_convert_feature */
extern T0* T87f51(TC* ac, T0* C);
/* ET_SYSTEM.integer_8_convert_feature */
extern T0* T50f50(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T683f30(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T683f46(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_8_type */
extern T0* T806f47(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_8_type */
extern T0* T87f50(TC* ac, T0* C);
/* ET_SYSTEM.integer_8_type */
extern T0* T50f49(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T682f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T682f37(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T682f15(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T682f36(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T682f35(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T682f34(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T682f33(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T682f49(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T682f32(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T682f48(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T682f31(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T682f47(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T682f30(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T682f46(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T681f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T681f37(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T681f15(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T681f36(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T681f35(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T681f34(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T681f33(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T681f49(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T681f32(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T681f48(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T681f31(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T681f47(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T681f30(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T681f46(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T680f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T680f37(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T680f15(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T680f36(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T680f35(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T680f34(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T680f33(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T680f49(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T680f32(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T680f48(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T680f31(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T680f47(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T680f30(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T680f46(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T679f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T679f39(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T679f54(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T679f38(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T679f37(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T679f36(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T679f35(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T679f49(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T679f34(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T679f26(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T679f33(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T679f48(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T679f32(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T679f47(TC* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T678f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.string_32_convert_feature */
extern T0* T806f86(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_32_convert_feature */
extern T0* T87f89(TC* ac, T0* C);
/* ET_SYSTEM.string_32_convert_feature */
extern T0* T50f88(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_string_32 */
extern T1 T678f33(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.is_string_32 */
extern T1 T168s52(TC* ac, T0* a1);
/* ET_VERBATIM_STRING.has_invalid_code */
extern T1 T678f38(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_32_type */
extern T0* T806f85(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_32_type */
extern T0* T87f88(TC* ac, T0* C);
/* ET_SYSTEM.string_32_type */
extern T0* T50f87(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_8_convert_feature */
extern T0* T806f84(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_8_convert_feature */
extern T0* T87f87(TC* ac, T0* C);
/* ET_SYSTEM.string_8_convert_feature */
extern T0* T50f86(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_string_8 */
extern T1 T678f32(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.is_string_8 */
extern T1 T168s51(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.two_byte_character_code */
extern T10 T168s3(TC* ac, T2 a1, T2 a2);
/* ET_ECF_LIBRARY.string_8_type */
extern T0* T806f82(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_8_type */
extern T0* T87f85(TC* ac, T0* C);
/* ET_SYSTEM.string_8_type */
extern T0* T50f84(TC* ac, T0* C);
/* ET_VERBATIM_STRING.tokens */
extern T0* T678s48(TC* ac);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T677f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.is_string_32 */
extern T1 T677f30(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_string_8 */
extern T1 T677f29(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T677s44(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T675f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.character_32_convert_feature */
extern T0* T806f38(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_32_convert_feature */
extern T0* T87f41(TC* ac, T0* C);
/* ET_SYSTEM.character_32_convert_feature */
extern T0* T50f40(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_32 */
extern T1 T675f29(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_8_convert_feature */
extern T0* T806f36(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_8_convert_feature */
extern T0* T87f39(TC* ac, T0* C);
/* ET_SYSTEM.character_8_convert_feature */
extern T0* T50f38(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_8 */
extern T1 T675f28(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_8_type */
extern T0* T806f35(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_8_type */
extern T0* T87f38(TC* ac, T0* C);
/* ET_SYSTEM.character_8_type */
extern T0* T50f37(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.manifest_constant_convert_feature */
extern T0* T761f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUANTIFIER_EXPRESSION.manifest_constant_convert_feature */
extern T0* T617f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T343f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T760f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T759f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T757f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T745f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1045f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T768f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T767f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T766f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T765f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T764f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T763f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T380f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T634f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T572f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T563f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T593f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T377f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T758f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T756f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T755f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T754f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T753f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T752f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T749f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T748f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T747f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T746f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T744f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T631f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T383f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INSPECT_EXPRESSION.manifest_constant_convert_feature */
extern T0* T534f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.manifest_constant_convert_feature */
extern T0* T513f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T440f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T690f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.is_character_32 */
extern T1 T690f27(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_invalid_code */
extern T1 T690f33(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_character_8 */
extern T1 T690f26(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T689f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.is_character_32 */
extern T1 T689f27(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_invalid_code */
extern T1 T689f33(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_character_8 */
extern T1 T689f26(TC* ac, T0* C);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T301f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T322f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T688f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T331f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T687f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T685f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T684f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T676f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.is_string_32 */
extern T1 T676f28(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_invalid_code */
extern T1 T676f33(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_string_8 */
extern T1 T676f27(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T676s43(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T100f107(TC* ac, T0* C);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T869f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T187c6(TC* ac, T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T1097c9(TC* ac);
/* ET_BRACED_TYPE_LIST.make */
extern void T1097f9p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T1690s1(TC* ac, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].make_empty */
extern T0* T1689c4(TC* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern T0* T1097f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T1690c2(TC* ac);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern T0* T81s634(TC* ac);
/* ET_SYMBOL.make_right_brace */
extern T0* T286c112(TC* ac);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern T0* T81s633(TC* ac);
/* ET_SYMBOL.make_left_brace */
extern T0* T286c111(TC* ac);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T1097s5(TC* ac);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T102f70(TC* ac, T0* C);
/* ET_CLASS.convert_from_feature */
extern T0* T70f212(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T1097f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern T0* T81s918(TC* ac);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.make */
extern T0* T193c25(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T437f4(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T704f6(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T703f5(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T437f5(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_is_type_separate */
extern T1 T102f81(TC* ac, T0* C);
/* ET_CLASS.context_is_type_separate */
extern T1 T70f211(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_controlled */
extern T1 T102f80(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_is_type_non_separate */
extern T1 T102f79(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_is_type_non_separate_with_type_mark */
extern T1 T102f93(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_non_separate_with_type_mark */
extern T1 T102f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.convert_to_feature */
extern T0* T70f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T852f41(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T852f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_argument_validity */
extern void T100f538(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f538ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T100f148(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].force_last */
extern void T887f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].force */
extern void T1333s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].fill_with */
extern void T1332f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].extend */
extern void T1332f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].resize */
extern void T887f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T1333s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T1332f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T887f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].extendible */
extern T1 T887f8(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T879f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].keep_first */
extern void T1324f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].keep_head */
extern void T1191f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].set_count */
extern void T1191f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T1324f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1801f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_after */
extern void T1801f6(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T886f60(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T880f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_KEYWORD.is_infix_or_else_symbol */
extern T1 T283f18(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_or_else */
extern T1 T283f17(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T886f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.copy_scope */
extern void T885f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].append_last */
extern void T946f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].extend_last */
extern void T946f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].forth */
extern void T1410f14(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_forth */
extern void T946f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].add_traversing_cursor */
extern void T946f81(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_next_cursor */
extern void T1410f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_position */
extern void T1410f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_traversing_cursor */
extern void T946f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_after */
extern void T1410f10(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T946f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].put_last */
extern void T946f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T946f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T946f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T946f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].compress */
extern void T946f82(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T946f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_wipe_out */
extern void T946f66(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_wipe_out */
extern void T946f65(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_keep_head */
extern void T946f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_keep_head */
extern void T946f76(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].keep_head */
extern void T154f14(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].set_count */
extern void T154f15(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].move_all_cursors */
extern void T946f83(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_put */
extern void T946f78(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T946f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T946f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T946f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T946f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T946f24(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T946f55(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].item */
extern T6 T1410f5(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_item */
extern T6 T946f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].after */
extern T1 T1410f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].start */
extern void T1410f13(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_start */
extern void T946f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].cursor_off */
extern T1 T946f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].off */
extern T1 T1410f6(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_empty */
extern T1 T946f33(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T946f37(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T1410c9(TC* ac, T0* a1);
/* DS_HASH_SET [INTEGER_32].resize */
extern void T946f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_resize */
extern void T946f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T946s35(TC* ac);
/* DS_HASH_SET [INTEGER_32].key_storage_resize */
extern void T946f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_resize */
extern void T946f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_resize */
extern void T946f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T946f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_capacity */
extern T6 T946f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].extendible */
extern T1 T946f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].wipe_out */
extern void T946f46(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_wipe_out */
extern void T946f64(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].item_storage_wipe_out */
extern void T946f63(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors_after */
extern void T946f62(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T100f92(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].remove_last */
extern void T887f13(TC* ac, T0* C);
/* SPECIAL [ET_ATTACHMENT_SCOPE].keep_head */
extern void T1332f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].set_count */
extern void T1332f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T887f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T1334f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_after */
extern void T1334f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].last */
extern T0* T887f6(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.make */
extern T0* T885c11(TC* ac);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T946c43(TC* ac, T6 a1);
/* DS_HASH_SET [INTEGER_32].set_internal_cursor */
extern void T946f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T946f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T946f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T946f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T946f51(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T887f10(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T880f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.count */
extern T6 T879f3(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_implies_symbol */
extern T1 T283f16(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_implies */
extern T1 T283f15(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_and_then_symbol */
extern T1 T283f14(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_and_then */
extern T1 T283f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T63f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T1466c1182(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T63f108(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T42f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T42f108(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T63f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T1466c1181(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T42f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T63f492(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T1466c1180(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T42f492(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T337f95(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.precursor_keyword */
extern T0* T751f20(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.precursor_keyword */
extern T0* T750f20(TC* ac, T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T304f29(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T313f34(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T328f107(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T1885f6(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.precursor_keyword */
extern T0* T280f21(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T283f12(TC* ac, T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T307f68(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T337f94(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_precursor */
extern T1 T751f19(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_precursor */
extern T1 T750f19(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T304f28(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T313f33(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T328f106(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T1885f5(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.is_precursor */
extern T1 T280f20(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T283f11(TC* ac, T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T307f67(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.set_arguments */
extern void T1888f9(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T1046f18(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.set_arguments */
extern void T743f22(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_arguments */
extern void T741f22(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T740f20(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.set_arguments */
extern void T377f37(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_EXPRESSION.set_arguments */
extern void T1565f13(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T383f37(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T1045f41(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_arguments */
extern void T744f42(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.set_arguments */
extern void T631f45(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make */
extern T0* T1892c18(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_MANIFEST_TUPLE.make */
extern T0* T572c45(TC* ac);
/* ET_MANIFEST_TUPLE.make */
extern void T572f45p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T1184s1(TC* ac, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].make_empty */
extern T0* T1182c5(TC* ac, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T572f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T1184c3(TC* ac);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern T0* T81s635(TC* ac);
/* ET_SYMBOL.make_right_bracket */
extern T0* T286c113(TC* ac);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern T0* T81s705(TC* ac);
/* ET_BRACKET_SYMBOL.make */
extern T0* T337c134(TC* ac);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T337f136(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T572s8(TC* ac);
/* ET_MANIFEST_TUPLE.put_first */
extern void T572f37(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].force */
extern void T1184s5(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].fill_with */
extern void T1182f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].extend */
extern void T1182f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T572c35(TC* ac, T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T572f35p1(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put_first */
extern void T1892f23(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T1892f16(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1892f22(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1892f22p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern T0* T81s632(TC* ac);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T286c110(TC* ac);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern T0* T81s631(TC* ac);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T286c109(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T1892s15(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tuple_argument_position */
extern T6 T100f113(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].wipe_out */
extern void T1300f14(TC* ac, T0* C);
/* SPECIAL [ET_ADAPTED_CLASS].keep_head */
extern void T1799f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_CLASS].set_count */
extern void T1799f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_all_cursors_after */
extern void T1300f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_next_cursor */
extern void T1800f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_after */
extern void T1800f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].item */
extern T0* T1300f9(TC* ac, T0* C, T6 a1);
/* ET_CLASS.add_adapted_base_classes_to_list */
extern void T70f350(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].force_last */
extern void T1300f18(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].force */
extern void T1797s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_CLASS].fill_with */
extern void T1799f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_CLASS].extend */
extern void T1799f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].resize */
extern void T1300f23(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].aliased_resized_area */
extern T0* T1797s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_CLASS].aliased_resized_area */
extern T0* T1799f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].new_capacity */
extern T6 T1300f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].extendible */
extern T1 T1300f10(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.add_adapted_base_classes_to_list */
extern void T726f103(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.add_adapted_base_classes_to_list */
extern void T184f133(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.add_adapted_base_classes_to_list */
extern void T853f92(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f92ot1(TC* ac, T0* a1);
extern T1 T853f92ot2(TC* ac, T0* a1);
extern T1 T853f92ot3(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.add_adapted_base_classes_to_list */
extern void T695f100(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f100ot1(TC* ac, T0* a1);
extern T1 T695f100ot2(TC* ac, T0* a1);
extern T1 T695f100ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.add_adapted_base_classes_to_list */
extern void T504f96(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f96ot1(TC* ac, T0* a1);
extern T1 T504f96ot2(TC* ac, T0* a1);
extern T1 T504f96ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.add_adapted_base_classes_to_list */
extern void T102f139(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.add_adapted_base_classes_to_list */
extern void T729f98(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f98ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.add_adapted_base_classes_to_list */
extern void T728f101(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f101ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.add_adapted_base_classes_to_list */
extern void T200f95(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_add_adapted_base_classes_to_list */
extern void T70f347(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T501f7(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1896f17(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_empty_actual_argument */
extern T1 T992f18(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T2070f17(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T2069f19(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T2068f16(TC* ac, T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T307f66(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T683f38(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T682f38(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T681f38(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T680f38(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T679f40(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T678f34(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T677f31(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T675f30(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_empty_actual_argument */
extern T1 T761f18(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_empty_actual_argument */
extern T1 T617f32(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T343f33(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T760f19(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T759f22(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T757f25(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T745f18(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T1045f19(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T768f32(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T767f40(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T766f36(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T765f34(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T764f41(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T763f37(TC* ac, T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T380f23(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T634f25(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T572f25(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T563f25(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T593f19(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T377f21(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T758f21(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T756f18(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T755f21(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T754f19(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T753f19(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T752f18(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T749f21(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T748f18(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T747f18(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T746f18(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T744f23(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T631f23(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T383f22(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_empty_actual_argument */
extern T1 T534f21(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_empty_actual_argument */
extern T1 T513f24(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T440f28(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T690f28(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T689f28(TC* ac, T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T301f27(TC* ac, T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T322f24(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T688f27(TC* ac, T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T331f23(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T687f27(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T685f28(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T684f28(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T676f29(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T2069f21(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T738f12(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T735f12(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.arguments */
extern T0* T743f4(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.arguments */
extern T0* T741f2(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.arguments */
extern T0* T440f8(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.arguments */
extern T0* T744f3(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.arguments */
extern T0* T631f5(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.name */
extern T0* T2069f1(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.name */
extern T0* T738f13(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T738f19(TC* ac, T0* C);
/* ET_RESULT.last_position */
extern T0* T322f35(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T811c11(TC* ac, T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T811f13(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_INVARIANT_KEYWORD.last_position */
extern T0* T280f18(TC* ac, T0* C);
/* ET_SYMBOL.last_position */
extern T0* T286f14(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.unicode_character_count */
extern T6 T168s29(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.unicode_substring_character_count */
extern T6 T168s33(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_IDENTIFIER.last_position */
extern T0* T307f41(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T738f21(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern T0* T81s1(TC* ac);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T738s18(TC* ac);
/* ET_QUALIFIED_CALL.name */
extern T0* T736f4(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.name */
extern T0* T735f13(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T735f18(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T735f20(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T735s17(TC* ac);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T743f12(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.precursor_keyword */
extern T0* T741f3(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.name */
extern T0* T440f14(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.column */
extern T6 T2276f4(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.line */
extern T6 T2276f3(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T440f12(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.last_position */
extern T0* T2276f5(TC* ac, T0* C);
/* ET_CURRENT.last_position */
extern T0* T301f39(TC* ac, T0* C);
/* ET_KEYWORD.last_position */
extern T0* T192f24(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.precursor_keyword */
extern T0* T744f4(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T631f11(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T100f406(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape1b_error */
extern void T63f491(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape1b */
extern T0* T1466c1179(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape1_error */
extern T1 T63f116(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape1b_error */
extern void T42f491(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape1_error */
extern T1 T42f116(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T63f427(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T1466c1115(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T63f72(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T42f427(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T42f72(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T718f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T717f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T716f74(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T715f72(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T714f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T712f62(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T711f65(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T710f63(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T709f64(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T708f63(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T707f63(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T706f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuta4ga_error */
extern void T63f490(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta4ga */
extern T0* T1466c1178(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuta4g_error */
extern T1 T63f107(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta4ga_error */
extern void T42f490(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuta4g_error */
extern T1 T42f107(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_controlled */
extern T1 T852f34(TC* ac, T0* C);
extern T1 T852f34ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_controlled */
extern T1 T695f60(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_controlled */
extern T1 T504f62(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_controlled */
extern T1 T726f68(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_controlled */
extern T1 T729f67(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_controlled */
extern T1 T728f70(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_controlled */
extern T1 T200f4(TC* ac, T0* C);
/* ET_LIKE_N.is_controlled */
extern T1 T1290f23(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_controlled */
extern T1 T853f61(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_controlled */
extern T1 T184f97(TC* ac, T0* C);
/* ET_CLASS.is_controlled */
extern T1 T70f243(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_non_separate */
extern T1 T852f33(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_non_separate_with_type_mark */
extern T1 T852f54(TC* ac, T0* C, T0* a1);
extern T1 T852f54ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_non_separate_with_type_mark */
extern T1 T695f63(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f63ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.is_type_non_separate */
extern T1 T184f72(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_non_separate */
extern T1 T70f258(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.is_type_non_separate */
extern T1 T1910f9(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_non_separate_type */
extern T1 T1696f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_non_separate */
extern T1 T102f72(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.is_non_separate_mark */
extern T1 T177f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_type_non_separate_with_type_mark */
extern T1 T504f65(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f65ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_non_separate_with_type_mark */
extern T1 T726f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_non_separate_with_type_mark */
extern T1 T729f61(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f61ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_non_separate_with_type_mark */
extern T1 T728f64(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f64ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_non_separate_with_type_mark */
extern T1 T200f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_non_separate_with_type_mark */
extern T1 T184f92(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_non_separate_with_type_mark */
extern T1 T70f240(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_non_separate_with_type_mark */
extern T1 T1290f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_non_separate_with_type_mark */
extern T1 T853f59(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f59ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.is_type_non_separate_with_type_mark */
extern T1 T184f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_non_separate_with_type_mark */
extern T1 T70f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T63f489(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T1466c1177(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T63f106(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta2a_error */
extern void T42f489(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T42f106(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T852f6(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T852f36(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T100f97(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.parenthesis_call */
extern T0* T1046f3(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.parenthesis_call */
extern T0* T740f4(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.parenthesis_call */
extern T0* T1045f4(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.parenthesis_call */
extern T0* T383f5(TC* ac, T0* C);
/* ET_ADAPTED_BASE_CLASS_CHECKER.reset_context_if_multiple_constraints */
extern void T891s11(TC* ac, T1 a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.detachable_like_current */
extern T0* T81s58(TC* ac);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T852f38(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_like_current */
extern T0* T81s914(TC* ac);
/* ET_ADAPTED_BASE_CLASS_CHECKER.tokens */
extern T0* T891s7(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T100f388(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f388ot1(TC* ac, T0* a1);
/* ET_ATTACHMENT_SCOPE.has_attribute */
extern T1 T885f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T946f28(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_stable_attribute */
extern T1 T714f70(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_stable_attribute */
extern T1 T712f61(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_stable_attribute */
extern T1 T711f64(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_stable_attribute */
extern T1 T710f62(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_stable_attribute */
extern T1 T709f63(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_stable_attribute */
extern T1 T708f62(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_stable_attribute */
extern T1 T707f62(TC* ac, T0* C);
/* ET_NOTE_LIST.has_tagged_note_term_value */
extern T1 T575f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NOTE_TERM_LIST.has_note_term_value */
extern T1 T587f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.has_note_term_value */
extern T1 T307f115(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.has_note_term_value */
extern T1 T683f60(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_plus */
extern T1 T328f131(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.string_ */
extern T0* T683s62(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.has_note_term_value */
extern T1 T682f60(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.string_ */
extern T0* T682s62(TC* ac);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_note_term_value */
extern T1 T681f60(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.string_ */
extern T0* T681s62(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_note_term_value */
extern T1 T680f60(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.string_ */
extern T0* T680s62(TC* ac);
/* ET_REGULAR_INTEGER_CONSTANT.has_note_term_value */
extern T1 T679f60(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.string_ */
extern T0* T679s62(TC* ac);
/* ET_VERBATIM_STRING.has_note_term_value */
extern T1 T678f46(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.string_ */
extern T0* T678s49(TC* ac);
/* ET_SPECIAL_MANIFEST_STRING.has_note_term_value */
extern T1 T677f42(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.string_ */
extern T0* T677s45(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T675f45(TC* ac, T0* C, T0* a1);
/* CHARACTER_32.as_lower */
extern T3 T3f16(TC* ac, T3 volatile* C);
/* ET_CUSTOM_ATTRIBUTE.has_note_term_value */
extern T1 T694f5(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T690f45(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T689f44(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.has_note_term_value */
extern T1 T688f36(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.string_ */
extern T0* T688s38(TC* ac);
/* ET_TRUE_CONSTANT.has_note_term_value */
extern T1 T687f36(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.string_ */
extern T0* T687s38(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.has_note_term_value */
extern T1 T685f38(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.string_ */
extern T0* T685s40(TC* ac);
/* ET_REGULAR_REAL_CONSTANT.has_note_term_value */
extern T1 T684f38(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.string_ */
extern T0* T684s40(TC* ac);
/* ET_REGULAR_MANIFEST_STRING.has_note_term_value */
extern T1 T676f41(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.string_ */
extern T0* T676s44(TC* ac);
/* ET_NOTE_LIST.string_ */
extern T0* T575s9(TC* ac);
/* ET_NOTE.note_clause */
extern T0* T693f2(TC* ac, T0* C);
/* ET_TAGGED_NOTE.note_clause */
extern T0* T692f3(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T707s41(TC* ac);
/* ET_ATTRIBUTE.is_stable_attribute */
extern T1 T706f57(TC* ac, T0* C);
/* ET_ATTRIBUTE.tokens */
extern T0* T706s36(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T100f402(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f402ot1(TC* ac, T0* a1);
extern T1 T100f402ot2(TC* ac, T0* a1);
extern T1 T100f402ot3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.controlled_type_modifier */
extern T0* T81s915(TC* ac);
/* ET_LIKE_CURRENT.set_controlled */
extern void T200f96(TC* ac, T0* C, T1 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_separate */
extern T1 T695f40(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_separate */
extern T1 T504f42(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_separate */
extern T1 T70f180(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_separate */
extern T1 T853f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_separate */
extern T1 T729f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_separate */
extern T1 T728f17(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_separate */
extern T1 T726f13(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_separate */
extern T1 T184f44(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_separate */
extern T1 T102f44(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_separate */
extern T1 T200f10(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.convert_feature */
extern T0* T2070f4(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.convert_feature */
extern T0* T2069f5(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.convert_feature */
extern T0* T2068f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T100f531(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f531ot1(TC* ac, T0* a1);
extern T1 T100f531ot2(TC* ac, T0* a1);
extern T1 T100f531ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T100f572(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T100f571(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T100f347(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape1a_error */
extern void T63f445(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape1a */
extern T0* T1466c1133(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape1a_error */
extern void T42f445(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vucr0d_error */
extern void T63f480(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0d */
extern T0* T1466c1168(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vucr_error */
extern T1 T63f76(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vucr0d_error */
extern void T42f480(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vucr_error */
extern T1 T42f76(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T1045c35(TC* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T100f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1046f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.make */
extern T0* T1888c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T740f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T1045f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_EXPRESSION.make */
extern T0* T1565c11(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T383f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T383c33(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T383f39(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.name */
extern T0* T1046f1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.name */
extern T0* T1045f2(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T1046f9(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.target */
extern T0* T740f1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T1045f20(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.target */
extern T0* T383f1(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.set_seed */
extern void T1885f50(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.named_feature */
extern T0* T184f112(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_procedure */
extern T0* T184f115(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_feature */
extern T0* T1910f11(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_procedure */
extern T0* T1910f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_feature */
extern T0* T102f95(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_procedure */
extern T0* T102f98(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_feature */
extern T0* T70f208(TC* ac, T0* C, T0* a1);
/* ET_CLASS.interface_checked_successfully */
extern T1 T70f170(TC* ac, T0* C);
/* ET_TUPLE_TYPE.base_class */
extern T0* T184f11(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.base_class */
extern T0* T1910f10(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T852f61(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_adapted_base_classes */
extern void T100f313(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].force_last */
extern void T890f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].force */
extern void T1342s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].fill_with */
extern void T1343f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].extend */
extern void T1343f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].resize */
extern void T890f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].aliased_resized_area */
extern T0* T1342s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].aliased_resized_area */
extern T0* T1343f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].new_capacity */
extern T6 T890f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].extendible */
extern T1 T890f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].first */
extern T0* T1300f7(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_adapted_base_classes_validity */
extern void T100f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ADAPTED_BASE_CLASS_CHECKER.check_adapted_base_classes_validity */
extern void T891f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T891f12ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0a_error */
extern void T63f603(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgmc0a */
extern T0* T1466c1283(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgmc_error */
extern T1 T63f73(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgmc0a_error */
extern void T42f603(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgmc_error */
extern T1 T42f73(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0d_error */
extern void T63f602(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0d */
extern T0* T1466c1282(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0d_error */
extern void T42f602(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_TUPLE_TYPE.adapted_class_base_type_index_of_label */
extern T6 T184f114(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T184f99(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T2191f12(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T186f23(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.base_type_index_of_label */
extern T6 T1910f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.index_of_label */
extern T6 T70f245(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T510f23(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T102f112(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T202f13(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T2190f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.adapted_class_base_type_index_of_label */
extern T6 T102f116(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.adapted_class_base_type_index_of_label */
extern T6 T70f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T852f47(TC* ac, T0* C, T0* a1);
extern T1 T852f47ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T695f62(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f62ot1(TC* ac, T0* a1);
extern T1 T695f62ot2(TC* ac, T0* a1);
extern T1 T695f62ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T504f64(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f64ot1(TC* ac, T0* a1);
extern T1 T504f64ot2(TC* ac, T0* a1);
extern T1 T504f64ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T726f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T729f69(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f69ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T728f72(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f72ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T200f63(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.base_type_index_of_label */
extern T6 T1290f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T70f246(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T853f63(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f63ot1(TC* ac, T0* a1);
extern T1 T853f63ot2(TC* ac, T0* a1);
extern T1 T853f63ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T184f100(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T102f113(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgmc0c_error */
extern void T63f601(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0c */
extern T0* T1466c1281(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0c_error */
extern void T42f601(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vgmc0b_error */
extern void T63f600(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0b */
extern T0* T1466c1280(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0b_error */
extern void T42f600(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ADAPTED_BASE_CLASS_CHECKER.error_handler */
extern T0* T891f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].put_last */
extern void T1300f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].remove */
extern void T1300f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_left */
extern void T1300f22(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_cursors_left */
extern void T1300f21(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_position */
extern void T1800f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].remove_last */
extern void T1300f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_last_cursors_after */
extern void T1300f24(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].keep_first */
extern void T1300f15(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_fatal_error */
extern void T891f14(TC* ac, T0* C);
/* ET_CLASS.features_flattened_successfully */
extern T1 T70f214(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.add_adapted_base_classes_to_list */
extern void T852f67(TC* ac, T0* C, T0* a1);
extern T1 T852f67ot1(TC* ac, T0* a1);
/* ET_LIKE_N.add_adapted_base_classes_to_list */
extern void T1290f43(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_add_adapted_base_classes_to_list */
extern void T184f136(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_add_adapted_base_classes_to_list */
extern void T102f142(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_adapted_base_classes */
extern T0* T100f94(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].remove_last */
extern void T890f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].keep_head */
extern void T1343f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_count */
extern void T1343f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].move_last_cursors_after */
extern void T890f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_next_cursor */
extern void T1344f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_after */
extern void T1344f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].last */
extern T0* T890f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].make */
extern T0* T1300c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].set_internal_cursor */
extern void T1300f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].new_cursor */
extern T0* T1300f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].make */
extern T0* T1800c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].make */
extern T0* T1797s1(TC* ac, T6 a1);
/* SPECIAL [ET_ADAPTED_CLASS].make_empty */
extern T0* T1799c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].default_create */
extern T0* T1797c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].is_empty */
extern T1 T890f9(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T852f60(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.resize */
extern void T852f64(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].aliased_resized_area */
extern T0* T1291s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].aliased_resized_area */
extern T0* T855f4(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T852f14(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T100f397(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_SYMBOL.set_position */
extern void T1885f51(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_PARENTHESIS_SYMBOL.make */
extern T0* T1885c49(TC* ac);
/* ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T1885f52(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.arguments */
extern T0* T1046f2(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments */
extern T0* T1045f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T100f102(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T877f14(TC* ac, T0* C);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T1318f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].set_count */
extern void T1318f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T877f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T1320f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_after */
extern void T1320f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T877f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T877f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T100f592(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T100f610(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f610ot1(TC* ac, T0* a1);
extern T1 T100f610ot2(TC* ac, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T70f129(TC* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T774f6(TC* ac, T0* C, T0* a1);
extern T1 T774f6ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.alias_names */
extern T0* T718f47(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.alias_names */
extern T0* T717f45(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.alias_names */
extern T0* T716f46(TC* ac, T0* C);
/* ET_DO_PROCEDURE.alias_names */
extern T0* T715f47(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.hash_code */
extern T6 T718f19(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.hash_code */
extern T6 T717f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.hash_code */
extern T6 T716f19(TC* ac, T0* C);
/* ET_DO_PROCEDURE.hash_code */
extern T6 T715f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_orphan_actual_arguments_validity */
extern void T100f307(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T100f95(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_validity_error */
extern T1 T718f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_validity_error */
extern T1 T716f27(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_validity_error */
extern T1 T714f29(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_validity_error */
extern T1 T712f26(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_validity_error */
extern T1 T711f29(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_validity_error */
extern T1 T710f28(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_validity_error */
extern T1 T709f23(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_validity_error */
extern T1 T708f21(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_validity_error */
extern T1 T707f26(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_validity_error */
extern T1 T706f19(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_validity_error */
extern T1 T715f28(TC* ac, T0* C);
/* ET_INVARIANTS.has_validity_error */
extern T1 T543f3(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_validity_error */
extern T1 T717f26(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.postconditions */
extern T0* T718f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.postconditions */
extern T0* T716f7(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.postconditions */
extern T0* T714f8(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.postconditions */
extern T0* T712f7(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.postconditions */
extern T0* T711f9(TC* ac, T0* C);
/* ET_DO_FUNCTION.postconditions */
extern T0* T710f9(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T709f51(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T708f49(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.postconditions */
extern T0* T707f8(TC* ac, T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T706f47(TC* ac, T0* C);
/* ET_DO_PROCEDURE.postconditions */
extern T0* T715f17(TC* ac, T0* C);
/* ET_INVARIANTS.postconditions */
extern T0* T543f40(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.postconditions */
extern T0* T717f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.preconditions */
extern T0* T718f5(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.preconditions */
extern T0* T716f4(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.preconditions */
extern T0* T714f7(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.preconditions */
extern T0* T712f6(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.preconditions */
extern T0* T711f6(TC* ac, T0* C);
/* ET_DO_FUNCTION.preconditions */
extern T0* T710f6(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T709f42(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T708f40(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.preconditions */
extern T0* T707f5(TC* ac, T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T706f38(TC* ac, T0* C);
/* ET_DO_PROCEDURE.preconditions */
extern T0* T715f16(TC* ac, T0* C);
/* ET_INVARIANTS.preconditions */
extern T0* T543f39(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.preconditions */
extern T0* T717f14(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.implementation_feature */
extern T0* T718f20(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.implementation_feature */
extern T0* T716f20(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.implementation_feature */
extern T0* T714f22(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.implementation_feature */
extern T0* T712f20(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.implementation_feature */
extern T0* T711f22(TC* ac, T0* C);
/* ET_DO_FUNCTION.implementation_feature */
extern T0* T710f22(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.implementation_feature */
extern T0* T709f16(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.implementation_feature */
extern T0* T708f15(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.implementation_feature */
extern T0* T707f20(TC* ac, T0* C);
/* ET_ATTRIBUTE.implementation_feature */
extern T0* T706f13(TC* ac, T0* C);
/* ET_DO_PROCEDURE.implementation_feature */
extern T0* T715f7(TC* ac, T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T543f19(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.implementation_feature */
extern T0* T717f1(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T100f591(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T63f579(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T1466c1266(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T63f176(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T42f579(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T42f176(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T63f578(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T1466c1265(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T42f578(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T63f577(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T1466c1264(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T42f577(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T63f473(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T1466c1161(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T63f124(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T42f473(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T42f124(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T718f64(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_invariants */
extern T0* T716f58(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T714f69(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T712f60(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.as_invariants */
extern T0* T711f63(TC* ac, T0* C);
/* ET_DO_FUNCTION.as_invariants */
extern T0* T710f61(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T709f62(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T708f61(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T707f61(TC* ac, T0* C);
/* ET_ATTRIBUTE.as_invariants */
extern T0* T706f56(TC* ac, T0* C);
/* ET_DO_PROCEDURE.as_invariants */
extern T0* T715f56(TC* ac, T0* C);
/* ET_INVARIANTS.as_invariants */
extern T0* T543f38(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T717f55(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T63f472(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T1466c1160(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T42f472(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T63f471(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T1466c1159(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T42f471(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T100f530(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T100f570(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f570ot1(TC* ac, T0* a1);
extern T1 T100f570ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T100f297(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.object_test */
extern T0* T672f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.object_tests */
extern T0* T718f14(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.object_tests */
extern T0* T716f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.object_tests */
extern T0* T714f16(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.object_tests */
extern T0* T712f15(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.object_tests */
extern T0* T711f17(TC* ac, T0* C);
/* ET_DO_FUNCTION.object_tests */
extern T0* T710f17(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.object_tests */
extern T0* T709f10(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.object_tests */
extern T0* T708f10(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.object_tests */
extern T0* T707f15(TC* ac, T0* C);
/* ET_ATTRIBUTE.object_tests */
extern T0* T706f8(TC* ac, T0* C);
/* ET_DO_PROCEDURE.object_tests */
extern T0* T715f12(TC* ac, T0* C);
/* ET_INVARIANTS.object_tests */
extern T0* T543f7(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.object_tests */
extern T0* T717f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T768f3(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T767f4(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T766f4(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T765f3(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T764f6(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T763f6(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T100f98(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T100f341(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found_item */
extern T0* T878f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T878f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found */
extern T1 T878f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search */
extern void T878f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search_position */
extern void T878f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T878f32(TC* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T759f29(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.hash_code */
extern T6 T757f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T878f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T878f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T878f34(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T63f382(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen8b */
extern T0* T1466c1070(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T63f89(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen8b_error */
extern void T42f382(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T42f89(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T63f381(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen8a */
extern T0* T1466c1069(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen8a_error */
extern void T42f381(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T879f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].item */
extern T0* T1324f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_object_test_local */
extern T1 T307f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_inline_separate_argument_call_instruction_validity */
extern void T100f590(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuis0c_error */
extern void T63f576(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0c */
extern T0* T1466c1263(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuis_error */
extern T1 T63f175(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuis0c_error */
extern void T42f576(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuis_error */
extern T1 T42f175(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuis0a_error */
extern void T63f575(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0a */
extern T0* T1466c1262(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuis0a_error */
extern void T42f575(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuis0b_error */
extern void T63f574(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0b */
extern T0* T1466c1261(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuis0b_error */
extern void T42f574(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuas0c_error */
extern void T63f476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0c */
extern T0* T1466c1164(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuas_error */
extern T1 T63f125(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuas0c_error */
extern void T42f476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuas_error */
extern T1 T42f125(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuas0a_error */
extern void T63f475(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0a */
extern T0* T1466c1163(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuas0a_error */
extern void T42f475(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuas0b_error */
extern void T63f474(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0b */
extern T0* T1466c1162(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuas0b_error */
extern void T42f474(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_argument_parenthesis_call_validity */
extern void T100f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_argument_validity */
extern void T100f299(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.argument */
extern T0* T674f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.inline_separate_arguments */
extern T0* T718f16(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.inline_separate_arguments */
extern T0* T716f17(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.inline_separate_arguments */
extern T0* T714f18(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.inline_separate_arguments */
extern T0* T712f17(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.inline_separate_arguments */
extern T0* T711f19(TC* ac, T0* C);
/* ET_DO_FUNCTION.inline_separate_arguments */
extern T0* T710f19(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.inline_separate_arguments */
extern T0* T709f12(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.inline_separate_arguments */
extern T0* T708f12(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.inline_separate_arguments */
extern T0* T707f17(TC* ac, T0* C);
/* ET_ATTRIBUTE.inline_separate_arguments */
extern T0* T706f10(TC* ac, T0* C);
/* ET_DO_PROCEDURE.inline_separate_arguments */
extern T0* T715f22(TC* ac, T0* C);
/* ET_INVARIANTS.inline_separate_arguments */
extern T0* T543f9(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.inline_separate_arguments */
extern T0* T717f20(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T768f5(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T767f6(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T766f6(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T765f5(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T764f8(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T763f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_separate_argument */
extern void T100f346(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].found_item */
extern T0* T883f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_item */
extern T0* T883f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].found */
extern T1 T883f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].search */
extern void T883f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].search_position */
extern void T883f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].hash_position */
extern T6 T883f23(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT.hash_code */
extern T6 T522f10(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_item */
extern T0* T883f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_item */
extern T6 T883f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_item */
extern T6 T883f25(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen10b_error */
extern void T63f386(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen10b */
extern T0* T1466c1074(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen10_error */
extern T1 T63f91(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen10b_error */
extern void T42f386(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen10_error */
extern T1 T42f91(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen10a_error */
extern void T63f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen10a */
extern T0* T1466c1073(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen10a_error */
extern void T42f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.inline_separate_argument */
extern T0* T884f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].item */
extern T0* T1330f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_inline_separate_argument */
extern T1 T307f37(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_iteration_item_call_instruction_validity */
extern void T100f589(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T63f573(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T1466c1260(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T63f174(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T42f573(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T42f174(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T63f572(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T1466c1259(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T42f572(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T63f571(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T1466c1258(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T42f571(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_item_parenthesis_call_validity */
extern void T100f528(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_item_validity */
extern void T100f298(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ITERATION_COMPONENT_LIST.iteration_component */
extern T0* T673f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.iteration_components */
extern T0* T718f15(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.iteration_components */
extern T0* T716f16(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.iteration_components */
extern T0* T714f17(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.iteration_components */
extern T0* T712f16(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.iteration_components */
extern T0* T711f18(TC* ac, T0* C);
/* ET_DO_FUNCTION.iteration_components */
extern T0* T710f18(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.iteration_components */
extern T0* T709f11(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.iteration_components */
extern T0* T708f11(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.iteration_components */
extern T0* T707f16(TC* ac, T0* C);
/* ET_ATTRIBUTE.iteration_components */
extern T0* T706f9(TC* ac, T0* C);
/* ET_DO_PROCEDURE.iteration_components */
extern T0* T715f8(TC* ac, T0* C);
/* ET_INVARIANTS.iteration_components */
extern T0* T543f8(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.iteration_components */
extern T0* T717f9(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T768f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T767f5(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T766f5(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T765f4(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T764f7(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T763f7(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_item */
extern void T100f345(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.unfolded_cursor_name */
extern T0* T617f2(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unfolded_cursor_name */
extern T0* T343f3(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.unfolded_cursor_name */
extern T0* T628f2(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.unfolded_cursor_name */
extern T0* T346f3(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].found_item */
extern T0* T881f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_item */
extern T0* T881f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].found */
extern T1 T881f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].search */
extern void T881f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].search_position */
extern void T881f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].hash_position */
extern T6 T881f35(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T346f24(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.hash_code */
extern T6 T628f25(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.hash_code */
extern T6 T343f40(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.hash_code */
extern T6 T617f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_item */
extern T0* T881f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_item */
extern T6 T881f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_item */
extern T6 T881f37(TC* ac, T0* C, T6 a1);
/* ET_QUANTIFIER_EXPRESSION.item_name */
extern T0* T617f1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.item_name */
extern T0* T343f1(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.item_name */
extern T0* T628f1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.item_name */
extern T0* T346f1(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T63f384(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen9b */
extern T0* T1466c1072(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T63f90(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen9b_error */
extern void T42f384(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T42f90(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T63f383(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen9a */
extern T0* T1466c1071(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen9a_error */
extern void T42f383(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ITERATION_ITEM_SCOPE.iteration_component */
extern T0* T882f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].item */
extern T0* T1327f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_iteration_item */
extern T1 T307f36(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T100f588(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T63f570(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T1466c1257(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T63f173(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T42f570(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T42f173(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T63f569(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T1466c1256(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T42f569(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T63f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T1466c1158(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T63f123(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T42f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T42f123(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T63f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T1466c1157(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T42f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T100f527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T100f296(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T100f352(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_cap_dynamic_types */
extern void T100f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SYSTEM.attached_type */
extern T0* T95f81(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attached_type_modifier */
extern T0* T81s596(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T63f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T1466c1109(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T63f78(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0a_error */
extern void T42f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T42f78(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.has_local_variable */
extern T1 T885f8(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T557f4(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T551f7(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1468f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T718f63(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.locals */
extern T0* T716f5(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T714f68(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T712f59(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.locals */
extern T0* T711f7(TC* ac, T0* C);
/* ET_DO_FUNCTION.locals */
extern T0* T710f7(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T709f61(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T708f60(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.locals */
extern T0* T707f6(TC* ac, T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T706f55(TC* ac, T0* C);
/* ET_DO_PROCEDURE.locals */
extern T0* T715f11(TC* ac, T0* C);
/* ET_INVARIANTS.locals */
extern T0* T543f36(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T717f54(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T768f34(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.locals */
extern T0* T767f10(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.locals */
extern T0* T766f10(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T765f36(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.locals */
extern T0* T764f12(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.locals */
extern T0* T763f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T63f390(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T1466c1078(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T63f93(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T42f390(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T42f93(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T63f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T1466c1077(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T42f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.is_local */
extern T1 T307f35(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T100f587(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T63f568(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T1466c1255(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T63f172(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T42f568(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T42f172(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T63f567(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T1466c1254(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T42f567(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T63f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T1466c1156(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T63f122(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T42f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T42f122(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T63f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T1466c1155(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T42f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T100f526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T100f295(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T100f351(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_formal_argument */
extern T1 T885f7(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T768f11(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T767f2(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T766f2(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T765f11(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T764f2(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T763f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T100f533(TC* ac, T0* C, T0* a1);
extern T1 T100f533ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].is_empty */
extern T1 T1300f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T63f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T1466c1041(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T42f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1b_error */
extern void T63f509(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1b */
extern T0* T1466c1197(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1b_error */
extern void T42f509(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_tuple_label_parenthesis_call_validity */
extern void T100f311(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f311ot1(TC* ac, T0* a1);
extern T1 T100f311ot2(TC* ac, T0* a1);
extern T1 T100f311ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T100f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T100f404(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f404ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T63f426(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T1466c1114(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T42f426(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T2070f25(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T755f22(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.arguments_count */
extern T6 T749f22(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments_count */
extern T6 T1565f9(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuta4gb_error */
extern void T63f425(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta4gb */
extern T0* T1466c1113(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuta4gb_error */
extern void T42f425(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T63f424(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T1466c1112(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuta2b_error */
extern void T42f424(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.formal_parameter_type */
extern T0* T70f130(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T1474f11(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T1474f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T1474f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T1926s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T1925f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T1925f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T1474f9(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1926s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1925f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1474c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T1474f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T1474f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1927c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1926s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T1925c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1926c3(TC* ac);
/* ET_IDENTIFIER.set_tuple_label */
extern void T307f135(TC* ac, T0* C, T1 a1);
/* ET_PARENTHESIS_INSTRUCTION.parenthesis_call */
extern T0* T1888f4(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.set_seed */
extern void T280f61(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T100f573(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T100f563(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T873f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].force */
extern void T1304s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].fill_with */
extern void T1305f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].extend */
extern void T1305f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T873f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T1304s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T1305f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T873f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T873f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T259f16(TC* ac, T0* C);
/* SPECIAL [ET_PROCEDURE].keep_head */
extern void T1174f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].set_count */
extern void T1174f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T259f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1175f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_after */
extern void T1175f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T259f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T100f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_IDENTIFIER.same_call_name */
extern T1 T307f85(TC* ac, T0* C, T0* a1);
extern T1 T307f85ot1(TC* ac, T0* a1);
/* ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T719f4(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.extended_name */
extern T0* T718f18(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.extended_name */
extern T0* T717f3(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.extended_name */
extern T0* T716f18(TC* ac, T0* C);
/* ET_DO_PROCEDURE.extended_name */
extern T0* T715f1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.extended_name */
extern T0* T714f20(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.extended_name */
extern T0* T712f18(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.extended_name */
extern T0* T711f20(TC* ac, T0* C);
/* ET_DO_FUNCTION.extended_name */
extern T0* T710f20(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.extended_name */
extern T0* T709f14(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.extended_name */
extern T0* T708f13(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.extended_name */
extern T0* T707f18(TC* ac, T0* C);
/* ET_ATTRIBUTE.extended_name */
extern T0* T706f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T259f38(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T258f38(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].keep_head */
extern void T1171f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].set_count */
extern void T1171f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T258f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T1172f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_after */
extern void T1172f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T258f16(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T100f535(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].force_last */
extern void T875f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].force */
extern void T1310s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].fill_with */
extern void T1312f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].extend */
extern void T1312f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].resize */
extern void T875f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T1310s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T1312f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_capacity */
extern T6 T875f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].extendible */
extern T1 T875f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T259f36(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T259f35(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T258f36(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T258f35(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T1311f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T1311f15(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].keep_head */
extern void T1297f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].set_count */
extern void T1297f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T1311f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T1311f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T2086f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T1311f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T1311f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T2086f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_after */
extern void T2086f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T1311f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T1311f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T1311f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T1311f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].force */
extern void T1298s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE].fill_with */
extern void T1297f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].extend */
extern void T1297f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T1311f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].aliased_resized_area */
extern T0* T1298s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].aliased_resized_area */
extern T0* T1297f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T1311f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T1311f9(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T852f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T100f112(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].remove_last */
extern void T875f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].keep_head */
extern void T1312f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].set_count */
extern void T1312f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].move_last_cursors_after */
extern void T875f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_next_cursor */
extern void T1313f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_after */
extern void T1313f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].last */
extern T0* T875f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T1311c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].set_internal_cursor */
extern void T1311f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T1311f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T2086c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T1298s1(TC* ac, T6 a1);
/* SPECIAL [ET_FEATURE].make_empty */
extern T0* T1297c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T1298c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].is_empty */
extern T1 T875f9(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_any_type */
extern T0* T806f20(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_any_type */
extern T0* T87f23(TC* ac, T0* C);
/* ET_SYSTEM.detachable_any_type */
extern T0* T50f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T259f37(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T259f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T259f40(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T1175f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T259f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T259f42(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T258f37(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T258f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T258f40(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T1172f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T258f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T258f42(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T259f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T258f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.adapted_name */
extern T0* T100f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.renames */
extern T0* T184f110(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.renames */
extern T0* T1910f2(TC* ac, T0* C);
/* ET_CLASS_TYPE.renames */
extern T0* T102f108(TC* ac, T0* C);
/* ET_CLASS.renames */
extern T0* T70f221(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T259f13(TC* ac, T0* C);
/* ET_TUPLE_TYPE.add_overloaded_procedures */
extern void T184f138(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.add_overloaded_procedures */
extern void T1910f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.add_overloaded_procedures */
extern void T102f144(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_overloaded_procedures */
extern void T70f352(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T774f15(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T774f15ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_names */
extern T0* T718f88(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T718f90(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_names */
extern T0* T717f79(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T717f81(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_names */
extern T0* T716f82(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T716f84(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_names */
extern T0* T715f80(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T715f82(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T718f87(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T717f78(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T716f81(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T715f79(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T259f17(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].force */
extern void T1176s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].fill_with */
extern void T1174f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].extend */
extern void T1174f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T259f24(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].aliased_resized_area */
extern T0* T1176s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].aliased_resized_area */
extern T0* T1174f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T259f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T259f10(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T100f115(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T873f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].keep_head */
extern void T1305f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].set_count */
extern void T1305f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T873f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T1306f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_after */
extern void T1306f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T873f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T259c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].set_internal_cursor */
extern void T259f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T259f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T1175c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T1176s1(TC* ac, T6 a1);
/* SPECIAL [ET_PROCEDURE].make_empty */
extern T0* T1174c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T1176c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T873f9(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T862f496(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T862f501(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_context */
extern void T862f100(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T862s83(TC* ac);
/* ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T862f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T862f264ot1(TC* ac, T0* a1);
extern T1 T862f264ot2(TC* ac, T0* a1);
extern T1 T862f264ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T862f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T862f349ot1(TC* ac, T0* a1);
extern T1 T862f349ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T862f348(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T862f348ot1(TC* ac, T0* a1);
extern T1 T862f348ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T862f442(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T862f473(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T862f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.reset_fatal_error */
extern void T862f353(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T862f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T862f357ot1(TC* ac, T0* a1);
extern T1 T862f357ot2(TC* ac, T0* a1);
extern T1 T862f357ot3(TC* ac, T0* a1);
extern T1 T862f357ot4(TC* ac, T0* a1);
extern T1 T862f357ot5(TC* ac, T0* a1);
extern T1 T862f357ot6(TC* ac, T0* a1);
extern T1 T862f357ot7(TC* ac, T0* a1);
extern T1 T862f357ot8(TC* ac, T0* a1);
extern T1 T862f357ot9(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_converted_target_infix_expression_validity */
extern void T862f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T862f103(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T862f105(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T1152f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.add_supplier */
extern void T1152f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].force_last */
extern void T261f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_put */
extern void T261f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_put */
extern void T261f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_item */
extern T6 T261f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].hash_position */
extern T6 T261f20(TC* ac, T0* C, T0* a1);
/* ET_CLASS.hash_code */
extern T6 T70f89(TC* ac, T0* C);
/* ET_MASTER_CLASS.hash_code */
extern T6 T189f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].resize */
extern void T261f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_resize */
extern void T261f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].special_integer_ */
extern T0* T261s32(TC* ac);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_resize */
extern void T261f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_resize */
extern void T261f68(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1180s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1179f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_item */
extern T0* T261f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_item */
extern T0* T261f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_item */
extern T6 T261f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_resize */
extern void T261f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_modulus */
extern T6 T261f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_capacity */
extern T6 T261f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_put */
extern void T261f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].force */
extern void T1180s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].fill_with */
extern void T1179f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].extend */
extern void T1179f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].search_position */
extern void T261f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].key_equality_tester */
extern T0* T261f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].unset_found_item */
extern void T261f46(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_index_to */
extern void T862f189(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.convert_expression */
extern T0* T862f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T862f500(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T862f351(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T862f463(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.set_index */
extern void T862f257(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_vape_validity */
extern void T862f486(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.add_non_descendant_caller_clients_to */
extern void T862f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.current_universe */
extern T0* T862f87(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_actual_argument_validity */
extern void T862f443(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T862f443ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_attachment_scope */
extern void T862f116(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T862f75(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.tuple_argument_position */
extern T6 T862f92(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T862f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T862f78(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T862f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T862f339ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T862f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T862f352ot1(TC* ac, T0* a1);
extern T1 T862f352ot2(TC* ac, T0* a1);
extern T1 T862f352ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T862f437(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T862f298(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T862f265(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.free_adapted_base_classes */
extern void T862f268(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_adapted_base_classes_validity */
extern void T862f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.new_adapted_base_classes */
extern T0* T862f76(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T862f347(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T862f72(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T862f510(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T862f511(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_orphan_actual_arguments_validity */
extern void T862f262(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T862f89(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T862f77(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T862f101(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T862f509(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T862f436(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T862f471(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T862f471ot1(TC* ac, T0* a1);
extern T1 T862f471ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T862f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T862f79(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_object_test_local */
extern void T862f292(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_inline_separate_argument_call_instruction_validity */
extern void T862f508(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_separate_argument_parenthesis_call_validity */
extern void T862f435(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_separate_argument_validity */
extern void T862f254(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_separate_argument */
extern void T862f297(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_iteration_item_call_instruction_validity */
extern void T862f507(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_iteration_item_parenthesis_call_validity */
extern void T862f434(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_iteration_item_validity */
extern void T862f253(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_item */
extern void T862f296(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T862f506(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T862f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T862f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T862f303(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T862f505(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T862f432(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T862f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T862f302(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T862f439(TC* ac, T0* C, T0* a1);
extern T1 T862f439ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_tuple_label_parenthesis_call_validity */
extern void T862f266(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T862f266ot1(TC* ac, T0* a1);
extern T1 T862f266ot2(TC* ac, T0* a1);
extern T1 T862f266ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T862f267(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T862f354(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T862f472(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T862f464(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T862f345(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_FEATURE_CHECKER.free_overloaded_features */
extern void T862f441(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T862f91(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.adapted_name */
extern T0* T862f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T862f93(TC* ac, T0* C);
/* ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T114f1474(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T114f1499(TC* ac, T0* C, T0* a1);
extern T1 T114f1499ot1(TC* ac, T0* a1);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T572f39(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].keep_head */
extern void T1184s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].keep_head */
extern void T1182f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].set_count */
extern void T1182f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T114f947(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T114f876(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T114f355(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T114f861(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T114f902(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T114f932(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T114f790(TC* ac, T0* C);
/* ET_C_GENERATOR.print_after_call */
extern void T114f889(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T114f914(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T114f813(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T922f9(TC* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T922f11(TC* ac, T0* C, T7 a1);
/* ET_C_GENERATOR.print_expression */
extern void T114f841(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T114f940(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T114f878(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T114f812(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T963f43(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T963f52(TC* ac, T0* C, T7 a1);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T240f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T240f26(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T1153f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_after */
extern void T1153f6(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last_new */
extern void T831f56(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T831f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T831f60(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T831f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T831f61(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T831f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T831f31(TC* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].hash_code */
extern T6 T835f2(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T831f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T831f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern T0* T831s42(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T831f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T831f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T831f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T831f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T831f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].found_item */
extern T0* T831f21(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].found */
extern T1 T831f39(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].search */
extern void T831f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T831f59(TC* ac, T0* C, T0* a1);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T1645f1(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T1645s2(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T240f20(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T994f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T994f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T994f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T240f28(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T1064f1(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].detachable_less_than */
extern T1 T1064f2(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].attached_less_than */
extern T1 T1064f3(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern T0* T114f334(TC* ac, T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T994c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T1064c4(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T240f6(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.id */
extern T6 T1060f1(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.id */
extern T6 T1059f1(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.id */
extern T6 T978f1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.id */
extern T6 T904f1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.id */
extern T6 T843f5(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T936f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.count */
extern T6 T1839f2(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.count */
extern T6 T936f2(TC* ac, T0* C);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T114f356(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_procedure_target_expression */
extern void T114f951(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_check_void_expression */
extern void T114f880(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.check_for_void_target_mode */
extern T1 T114f390(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T2070f9(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_never_void */
extern T1 T2069s11(TC* ac);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T2068f8(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T1896f8(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T343f23(TC* ac, T0* C);
/* ET_CALL_AGENT.is_never_void */
extern T1 T380s13(TC* ac);
/* ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T377f11(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_never_void */
extern T1 T534f11(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_never_void */
extern T1 T513f15(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_never_void */
extern T1 T440s19(TC* ac);
/* ET_BINARY_INTEGER_CONSTANT.is_never_void */
extern T1 T683s14(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.is_never_void */
extern T1 T682s14(TC* ac);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_never_void */
extern T1 T681s14(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_never_void */
extern T1 T680s14(TC* ac);
/* ET_VERBATIM_STRING.is_never_void */
extern T1 T678s19(TC* ac);
/* ET_SPECIAL_MANIFEST_STRING.is_never_void */
extern T1 T677s16(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.is_never_void */
extern T1 T675s13(TC* ac);
/* ET_ITERATION_CURSOR.is_never_void */
extern T1 T761s7(TC* ac);
/* ET_QUANTIFIER_EXPRESSION.is_never_void */
extern T1 T617f18(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_never_void */
extern T1 T760s8(TC* ac);
/* ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T759f10(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T757f13(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_never_void */
extern T1 T745s7(TC* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T1045f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T768s17(TC* ac);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T767s19(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T766s18(TC* ac);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T765s19(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T764s21(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T763s20(TC* ac);
/* ET_STRIP_EXPRESSION.is_never_void */
extern T1 T634s11(TC* ac);
/* ET_MANIFEST_ARRAY.is_never_void */
extern T1 T563s11(TC* ac);
/* ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T593f8(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_never_void */
extern T1 T758f8(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_never_void */
extern T1 T756f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T755f6(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_never_void */
extern T1 T754s8(TC* ac);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T753f7(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T752f7(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_never_void */
extern T1 T749f7(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_never_void */
extern T1 T748s7(TC* ac);
/* ET_RESULT_ADDRESS.is_never_void */
extern T1 T747s7(TC* ac);
/* ET_CURRENT_ADDRESS.is_never_void */
extern T1 T746s7(TC* ac);
/* ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T744f9(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T631f8(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_never_void */
extern T1 T689s11(TC* ac);
/* ET_TRUE_CONSTANT.is_never_void */
extern T1 T687s12(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.is_never_void */
extern T1 T685s12(TC* ac);
/* ET_REGULAR_MANIFEST_STRING.is_never_void */
extern T1 T676s14(TC* ac);
/* ET_FALSE_CONSTANT.is_never_void */
extern T1 T688s12(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.is_never_void */
extern T1 T690s11(TC* ac);
/* ET_REGULAR_REAL_CONSTANT.is_never_void */
extern T1 T684s13(TC* ac);
/* ET_REGULAR_INTEGER_CONSTANT.is_never_void */
extern T1 T679s16(TC* ac);
/* ET_VOID.is_never_void */
extern T1 T331f12(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T383f12(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_never_void */
extern T1 T572s15(TC* ac);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_never_void */
extern T1 T992f6(TC* ac, T0* C);
/* ET_RESULT.is_never_void */
extern T1 T322f7(TC* ac, T0* C);
/* ET_CURRENT.is_never_void */
extern T1 T301s10(TC* ac);
/* ET_IDENTIFIER.is_never_void */
extern T1 T307f11(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T1839f11(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T1839f14(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T1839f7(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T1061f11(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T1061f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T1061f8(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.can_be_void */
extern T1 T981f7(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_empty */
extern T1 T981f18(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T936f7(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T936f5(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T936f8(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T1060f55(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T1060f41(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T1059f56(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T1059f41(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T978f62(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T978f39(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T904f61(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T904f37(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.can_be_void */
extern T1 T843f27(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_empty */
extern T1 T843f29(TC* ac, T0* C);
/* ET_C_GENERATOR.print_comma */
extern void T114f782(TC* ac, T0* C);
/* ET_C_GENERATOR.print_before_call */
extern void T114f887(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_indentation */
extern void T114f778(TC* ac, T0* C);
/* ET_C_GENERATOR.print_inlined_procedure_call */
extern void T114f931(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f931ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_inlining_operands */
extern void T114f978(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T114f978ot1(TC* ac, T0* a1);
extern T1 T114f978ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T114f1207(TC* ac, T0* C);
extern T1 T114f1207ot1(TC* ac, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T307f34(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_dynamic_type_set */
extern void T992f27(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T939f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].aliased_resized_area */
extern T0* T1400s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].aliased_resized_area */
extern T0* T1399f4(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_compound */
extern void T114f997(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T114f1263(TC* ac, T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T407f12(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.fill_inlining_operands */
extern void T114f977(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T939f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].force */
extern void T1400s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].fill_with */
extern void T1399f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].extend */
extern void T1399f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T939f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T939f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_CALL_CONTEXT.set_target */
extern void T993f6(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_inlined_operand */
extern T0* T114f363(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f363ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].force_last */
extern void T957f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].force */
extern void T1435s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].fill_with */
extern void T1434f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].extend */
extern void T1434f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].resize */
extern void T957f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].aliased_resized_area */
extern T0* T1435s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].aliased_resized_area */
extern T0* T1434f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].new_capacity */
extern T6 T957f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].extendible */
extern T1 T957f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_context */
extern void T992f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_expression */
extern void T992f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].remove_last */
extern void T957f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].keep_head */
extern void T1434f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].set_count */
extern void T1434f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].move_last_cursors_after */
extern void T957f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].set_next_cursor */
extern void T1436f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].set_after */
extern void T1436f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].last */
extern T0* T957f7(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.make */
extern T0* T992c23(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_INLINED_EXPRESSION.make_inlined_expression */
extern void T992f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].is_empty */
extern T1 T957f6(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T114f1206(TC* ac, T0* C);
extern T1 T114f1206ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T114f873(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_call_context */
extern T0* T114f362(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].force_last */
extern void T958f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].force */
extern void T1438s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].fill_with */
extern void T1437f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].extend */
extern void T1437f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].resize */
extern void T958f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].aliased_resized_area */
extern T0* T1438s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].aliased_resized_area */
extern T0* T1437f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].new_capacity */
extern T6 T958f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].extendible */
extern T1 T958f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_CALL_CONTEXT.set_current_feature */
extern void T993f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_CALL_CONTEXT.tokens */
extern T0* T993s4(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].remove_last */
extern void T958f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].keep_head */
extern void T1437f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].set_count */
extern void T1437f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].move_last_cursors_after */
extern void T958f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].set_next_cursor */
extern void T1439f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].set_after */
extern void T1439f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].last */
extern T0* T958f7(TC* ac, T0* C);
/* ET_DYNAMIC_CALL_CONTEXT.make */
extern T0* T993c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T939c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].set_internal_cursor */
extern void T939f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T939f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T1401c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T1400s1(TC* ac, T6 a1);
/* SPECIAL [ET_EXPRESSION].make_empty */
extern T0* T1399c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T1400c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].is_empty */
extern T1 T958f6(TC* ac, T0* C);
/* ET_C_GENERATOR.register_inlined_feature */
extern void T114f976(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].force */
extern void T960f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_put */
extern void T960f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_put */
extern void T960f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_item */
extern T6 T960f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_item */
extern T6 T960f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].hash_position */
extern T6 T960f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.hash_code */
extern T6 T865f46(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.hash_code */
extern T6 T850f44(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].resize */
extern void T960f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_resize */
extern void T960f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].special_integer_ */
extern T0* T960s34(TC* ac);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_resize */
extern void T960f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_resize */
extern void T960f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_item */
extern T0* T960f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_item */
extern T0* T960f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_resize */
extern void T960f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_modulus */
extern T6 T960f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T960f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_put */
extern void T960f57(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].search_position */
extern void T960f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_equality_tester */
extern T0* T960f31(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].unset_found_item */
extern void T960f46(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_inlined */
extern void T865f65(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_inlined */
extern void T850f62(TC* ac, T0* C, T1 a1);
/* ET_COMPOUND.is_empty */
extern T1 T407f11(TC* ac, T0* C);
/* ET_C_GENERATOR.is_inlinable_procedure */
extern T1 T114f402(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f402ot1(TC* ac, T0* a1);
/* ET_COMPOUND.has_inline_separate_instruction */
extern T1 T407f10(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1046f7(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_inline_separate_instruction */
extern T1 T531s10(TC* ac);
/* ET_REPEAT_INSTRUCTION.has_inline_separate_instruction */
extern T1 T628f19(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.from_compound */
extern T0* T628f20(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_inline_separate_instruction */
extern T1 T346f22(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_inline_separate_instruction */
extern T1 T386f12(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T743f9(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_inline_separate_instruction */
extern T1 T741f10(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_inline_separate_instruction */
extern T1 T450f9(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_inline_separate_instruction */
extern T1 T537f10(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_inline_separate_instruction */
extern T1 T666f8(TC* ac, T0* C);
/* ET_WHEN_PART.has_inline_separate_instruction */
extern T1 T663f7(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_inline_separate_instruction */
extern T1 T516f11(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_inline_separate_instruction */
extern T1 T462f8(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_inline_separate_instruction */
extern T1 T459f7(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_inline_separate_instruction */
extern T1 T738f11(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_inline_separate_instruction */
extern T1 T735f11(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_inline_separate_instruction */
extern T1 T733f13(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_inline_separate_instruction */
extern T1 T732f9(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_inline_separate_instruction */
extern T1 T731f11(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_inline_separate_instruction */
extern T1 T730f11(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_inline_separate_instruction */
extern T1 T325f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T740f12(TC* ac, T0* C);
/* ET_COMPOUND.has_typed_object_test */
extern T1 T407f9(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T1046f6(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_typed_object_test */
extern T1 T1892f8(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_typed_object_test */
extern T1 T2070f8(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_typed_object_test */
extern T1 T2069f10(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_typed_object_test */
extern T1 T2068f7(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_typed_object_test */
extern T1 T1896f7(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_typed_object_test */
extern T1 T992f12(TC* ac, T0* C);
/* ET_IDENTIFIER.has_typed_object_test */
extern T1 T307f55(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T683f22(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T682f22(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T681f22(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T680f22(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T679f23(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_typed_object_test */
extern T1 T678f25(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_typed_object_test */
extern T1 T677f22(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T675f20(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_typed_object_test */
extern T1 T761f14(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_typed_object_test */
extern T1 T617f28(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_typed_object_test */
extern T1 T617f28p1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_typed_object_test */
extern T1 T617f28p0(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.variant_part */
extern T0* T617f21(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.invariant_part */
extern T0* T617f23(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.until_conditional */
extern T0* T617f22(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_typed_object_test */
extern T1 T343f29(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_typed_object_test */
extern T1 T343f29p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_typed_object_test */
extern T1 T343f29p0(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_typed_object_test */
extern T1 T560f11(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.expression */
extern T0* T776f4(TC* ac, T0* C);
extern T1 T776f4ot1(TC* ac, T0* a1);
/* ET_CLASS_ASSERTION.expression */
extern T0* T723f4(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T560f7(TC* ac, T0* C, T6 a1);
/* ET_KEYWORD_EXPRESSION.expression */
extern T0* T1471f1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.iteration_expression */
extern T0* T343f24(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_typed_object_test */
extern T1 T760f15(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_typed_object_test */
extern T1 T759f18(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.type */
extern T0* T759f13(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_typed_object_test */
extern T1 T757f21(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.type */
extern T0* T757f16(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_typed_object_test */
extern T1 T745f14(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_typed_object_test */
extern T1 T1045f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T768f25(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_typed_object_test */
extern T1 T1893f5(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_typed_object_test */
extern T1 T362f11(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_typed_object_test */
extern T1 T770f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_typed_object_test */
extern T1 T340f44(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_typed_object_test */
extern T1 T1601f3(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T767f31(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T766f29(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T765f27(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T764f32(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T763f30(TC* ac, T0* C);
/* ET_CALL_AGENT.has_typed_object_test */
extern T1 T380f19(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_typed_object_test */
extern T1 T769f10(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_typed_object_test */
extern T1 T634f18(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_typed_object_test */
extern T1 T572f20(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_typed_object_test */
extern T1 T563f19(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T563f12(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.has_typed_object_test */
extern T1 T593f15(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_typed_object_test */
extern T1 T377f16(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_typed_object_test */
extern T1 T758f17(TC* ac, T0* C);
/* ET_OBJECT_TEST.type */
extern T0* T758f12(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_typed_object_test */
extern T1 T756f14(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_typed_object_test */
extern T1 T755f16(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_typed_object_test */
extern T1 T754f15(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_typed_object_test */
extern T1 T753f14(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_typed_object_test */
extern T1 T752f14(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_typed_object_test */
extern T1 T749f16(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_typed_object_test */
extern T1 T748f14(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_typed_object_test */
extern T1 T747f14(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_typed_object_test */
extern T1 T746f14(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_typed_object_test */
extern T1 T744f19(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_typed_object_test */
extern T1 T631f19(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_typed_object_test */
extern T1 T383f18(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_typed_object_test */
extern T1 T534f16(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_typed_object_test */
extern T1 T660f8(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_typed_object_test */
extern T1 T657f8(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.item */
extern T0* T660f3(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.expression */
extern T0* T534f17(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_typed_object_test */
extern T1 T513f20(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_typed_object_test */
extern T1 T456f8(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_typed_object_test */
extern T1 T453f9(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.conditional_expression */
extern T0* T453f5(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.item */
extern T0* T456f4(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.conditional_expression */
extern T0* T513f12(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_typed_object_test */
extern T1 T440f24(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T690f18(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T689f18(TC* ac, T0* C);
/* ET_CURRENT.has_typed_object_test */
extern T1 T301f23(TC* ac, T0* C);
/* ET_RESULT.has_typed_object_test */
extern T1 T322f20(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_typed_object_test */
extern T1 T688f19(TC* ac, T0* C);
/* ET_VOID.has_typed_object_test */
extern T1 T331f19(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_typed_object_test */
extern T1 T687f19(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_typed_object_test */
extern T1 T685f20(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_typed_object_test */
extern T1 T684f20(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_typed_object_test */
extern T1 T676f20(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_typed_object_test */
extern T1 T349f15(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_typed_object_test */
extern T1 T531f9(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_typed_object_test */
extern T1 T528f11(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_typed_object_test */
extern T1 T522f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.argument */
extern T0* T522f5(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_typed_object_test */
extern T1 T628f18(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_typed_object_test */
extern T1 T628f18p1(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_typed_object_test */
extern T1 T628f18p0(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.variant_part */
extern T0* T628f23(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.invariant_part */
extern T0* T628f22(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.until_conditional */
extern T0* T628f21(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_typed_object_test */
extern T1 T346f21(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_typed_object_test */
extern T1 T346f21p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_typed_object_test */
extern T1 T346f21p0(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_typed_object_test */
extern T1 T386f11(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_typed_object_test */
extern T1 T386f11p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T386f13(TC* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T743f8(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_typed_object_test */
extern T1 T741f9(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_typed_object_test */
extern T1 T450f8(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_typed_object_test */
extern T1 T537f9(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_typed_object_test */
extern T1 T666f7(TC* ac, T0* C);
/* ET_WHEN_PART.has_typed_object_test */
extern T1 T663f6(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_typed_object_test */
extern T1 T398f10(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_typed_object_test */
extern T1 T739f9(TC* ac, T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T307f80(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T683f44(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T682f44(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T681f44(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T680f44(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T679f45(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T675f33(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.choice */
extern T0* T1045f24(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T631f26(TC* ac, T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T739f5(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T690f31(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T689f31(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T537f11(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_typed_object_test */
extern T1 T516f10(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_typed_object_test */
extern T1 T462f7(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_typed_object_test */
extern T1 T459f6(TC* ac, T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T459f9(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T516f12(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_typed_object_test */
extern T1 T738f10(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_typed_object_test */
extern T1 T735f10(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_typed_object_test */
extern T1 T733f12(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_typed_object_test */
extern T1 T733f12p1(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_typed_object_test */
extern T1 T732f8(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_typed_object_test */
extern T1 T731f10(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_typed_object_test */
extern T1 T730f10(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_typed_object_test */
extern T1 T325f12(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T740f11(TC* ac, T0* C);
/* ET_COMPOUND.has_agent */
extern T1 T407f8(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_agent */
extern T1 T1046f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_agent */
extern T1 T1892f7(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_agent */
extern T1 T2070f7(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_agent */
extern T1 T2069f9(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_agent */
extern T1 T2068f6(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_agent */
extern T1 T1896f6(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_agent */
extern T1 T992f11(TC* ac, T0* C);
/* ET_IDENTIFIER.has_agent */
extern T1 T307f54(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_agent */
extern T1 T683f21(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_agent */
extern T1 T682f21(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_agent */
extern T1 T681f21(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_agent */
extern T1 T680f21(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_agent */
extern T1 T679f22(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_agent */
extern T1 T678f24(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_agent */
extern T1 T677f21(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_agent */
extern T1 T675f19(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_agent */
extern T1 T761f13(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_agent */
extern T1 T617f27(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_agent */
extern T1 T617f27p1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_agent */
extern T1 T617f27p0(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_agent */
extern T1 T343f28(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_agent */
extern T1 T343f28p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_agent */
extern T1 T343f28p0(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_agent */
extern T1 T560f10(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_agent */
extern T1 T760f14(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_agent */
extern T1 T759f17(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_agent */
extern T1 T757f20(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_agent */
extern T1 T745f13(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_agent */
extern T1 T1045f14(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T768s24(TC* ac);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T767s30(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T766s28(TC* ac);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T765s26(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T764s31(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T763s29(TC* ac);
/* ET_CALL_AGENT.has_agent */
extern T1 T380s18(TC* ac);
/* ET_STRIP_EXPRESSION.has_agent */
extern T1 T634f17(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_agent */
extern T1 T572f19(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_agent */
extern T1 T563f18(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_agent */
extern T1 T593f14(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_agent */
extern T1 T377f15(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_agent */
extern T1 T758f16(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_agent */
extern T1 T756f13(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_agent */
extern T1 T755f15(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_agent */
extern T1 T754f14(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_agent */
extern T1 T753f13(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_agent */
extern T1 T752f13(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_agent */
extern T1 T749f15(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_agent */
extern T1 T748f13(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_agent */
extern T1 T747f13(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_agent */
extern T1 T746f13(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_agent */
extern T1 T744f18(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_agent */
extern T1 T631f18(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_agent */
extern T1 T383f17(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_agent */
extern T1 T534f15(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_agent */
extern T1 T660f7(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_agent */
extern T1 T657f7(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_agent */
extern T1 T513f19(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_agent */
extern T1 T456f7(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_agent */
extern T1 T453f8(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_agent */
extern T1 T440f23(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_agent */
extern T1 T690f17(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_agent */
extern T1 T689f17(TC* ac, T0* C);
/* ET_CURRENT.has_agent */
extern T1 T301f22(TC* ac, T0* C);
/* ET_RESULT.has_agent */
extern T1 T322f19(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_agent */
extern T1 T688f18(TC* ac, T0* C);
/* ET_VOID.has_agent */
extern T1 T331f18(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_agent */
extern T1 T687f18(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_agent */
extern T1 T685f19(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_agent */
extern T1 T684f19(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_agent */
extern T1 T676f19(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_agent */
extern T1 T349f14(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_agent */
extern T1 T531f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_agent */
extern T1 T528f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_agent */
extern T1 T522f7(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_agent */
extern T1 T628f17(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_agent */
extern T1 T628f17p1(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_agent */
extern T1 T628f17p0(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_agent */
extern T1 T346f20(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_agent */
extern T1 T346f20p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_agent */
extern T1 T346f20p0(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_agent */
extern T1 T386f10(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_agent */
extern T1 T386f10p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_agent */
extern T1 T743f7(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_agent */
extern T1 T741f8(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_agent */
extern T1 T450f7(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_agent */
extern T1 T537f8(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_agent */
extern T1 T666f6(TC* ac, T0* C);
/* ET_WHEN_PART.has_agent */
extern T1 T663f5(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_agent */
extern T1 T398f9(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_agent */
extern T1 T739f8(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_agent */
extern T1 T516f9(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_agent */
extern T1 T462f6(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_agent */
extern T1 T459f5(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_agent */
extern T1 T738f9(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_agent */
extern T1 T735f9(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_agent */
extern T1 T733f11(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_agent */
extern T1 T733f11p1(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_agent */
extern T1 T732f7(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_agent */
extern T1 T731f9(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_agent */
extern T1 T730f9(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_agent */
extern T1 T325f11(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_agent */
extern T1 T740f10(TC* ac, T0* C);
/* ET_COMPOUND.has_address_expression */
extern T1 T407f7(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_address_expression */
extern T1 T1046f4(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_address_expression */
extern T1 T1892f6(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_address_expression */
extern T1 T2070f6(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_address_expression */
extern T1 T2069f8(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_address_expression */
extern T1 T2068f5(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_address_expression */
extern T1 T1896f5(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_address_expression */
extern T1 T992f10(TC* ac, T0* C);
/* ET_IDENTIFIER.has_address_expression */
extern T1 T307f53(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_address_expression */
extern T1 T683f20(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_address_expression */
extern T1 T682f20(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_address_expression */
extern T1 T681f20(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_address_expression */
extern T1 T680f20(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_address_expression */
extern T1 T679f21(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_address_expression */
extern T1 T678f23(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_address_expression */
extern T1 T677f20(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_address_expression */
extern T1 T675f18(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_address_expression */
extern T1 T761f12(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_address_expression */
extern T1 T617f26(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_address_expression */
extern T1 T617f26p1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_address_expression */
extern T1 T617f26p0(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_address_expression */
extern T1 T343f27(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_address_expression */
extern T1 T343f27p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_address_expression */
extern T1 T343f27p0(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_address_expression */
extern T1 T560f9(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_address_expression */
extern T1 T760f13(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_address_expression */
extern T1 T759f16(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_address_expression */
extern T1 T757f19(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_address_expression */
extern T1 T745s12(TC* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_address_expression */
extern T1 T1045f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T768f23(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_address_expression */
extern T1 T1893f4(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_address_expression */
extern T1 T362f10(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_address_expression */
extern T1 T770f11(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_address_expression */
extern T1 T340f43(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_address_expression */
extern T1 T1601f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T767f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T766f27(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T765f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T764f30(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T763f28(TC* ac, T0* C);
/* ET_CALL_AGENT.has_address_expression */
extern T1 T380f17(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_address_expression */
extern T1 T769f9(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_address_expression */
extern T1 T634f16(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_address_expression */
extern T1 T572f18(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_address_expression */
extern T1 T563f17(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_address_expression */
extern T1 T593f13(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_address_expression */
extern T1 T377f14(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_address_expression */
extern T1 T758f15(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_address_expression */
extern T1 T756f12(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_address_expression */
extern T1 T755f14(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_address_expression */
extern T1 T754f13(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_address_expression */
extern T1 T753f12(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_address_expression */
extern T1 T752f12(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_address_expression */
extern T1 T749f14(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_address_expression */
extern T1 T748s12(TC* ac);
/* ET_RESULT_ADDRESS.has_address_expression */
extern T1 T747s12(TC* ac);
/* ET_CURRENT_ADDRESS.has_address_expression */
extern T1 T746s12(TC* ac);
/* ET_PRECURSOR_EXPRESSION.has_address_expression */
extern T1 T744f17(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_address_expression */
extern T1 T631f17(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_address_expression */
extern T1 T383f16(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_address_expression */
extern T1 T534f14(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_address_expression */
extern T1 T660f6(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_address_expression */
extern T1 T657f6(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_address_expression */
extern T1 T513f18(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_address_expression */
extern T1 T456f6(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_address_expression */
extern T1 T453f7(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_address_expression */
extern T1 T440f22(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_address_expression */
extern T1 T690f16(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_address_expression */
extern T1 T689f16(TC* ac, T0* C);
/* ET_CURRENT.has_address_expression */
extern T1 T301f21(TC* ac, T0* C);
/* ET_RESULT.has_address_expression */
extern T1 T322f18(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_address_expression */
extern T1 T688f17(TC* ac, T0* C);
/* ET_VOID.has_address_expression */
extern T1 T331f17(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_address_expression */
extern T1 T687f17(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_address_expression */
extern T1 T685f18(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_address_expression */
extern T1 T684f18(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_address_expression */
extern T1 T676f18(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_address_expression */
extern T1 T349f13(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_address_expression */
extern T1 T531f7(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_address_expression */
extern T1 T528f9(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_address_expression */
extern T1 T522f6(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_address_expression */
extern T1 T628f16(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_address_expression */
extern T1 T628f16p1(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_address_expression */
extern T1 T628f16p0(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_address_expression */
extern T1 T346f19(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_address_expression */
extern T1 T346f19p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_address_expression */
extern T1 T346f19p0(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_address_expression */
extern T1 T386f9(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_address_expression */
extern T1 T386f9p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_address_expression */
extern T1 T743f6(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_address_expression */
extern T1 T741f7(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_address_expression */
extern T1 T450f6(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_address_expression */
extern T1 T537f7(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_address_expression */
extern T1 T666f5(TC* ac, T0* C);
/* ET_WHEN_PART.has_address_expression */
extern T1 T663f4(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_address_expression */
extern T1 T398f8(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_address_expression */
extern T1 T739f7(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_address_expression */
extern T1 T516f8(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_address_expression */
extern T1 T462f5(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_address_expression */
extern T1 T459f4(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_address_expression */
extern T1 T738f8(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_address_expression */
extern T1 T735f8(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_address_expression */
extern T1 T733f10(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_address_expression */
extern T1 T733f10p1(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_address_expression */
extern T1 T732f6(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_address_expression */
extern T1 T731f8(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_address_expression */
extern T1 T730f8(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_address_expression */
extern T1 T325f10(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_address_expression */
extern T1 T740f9(TC* ac, T0* C);
/* ET_COMPOUND.nested_instruction_count */
extern T6 T407f6(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T1046f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.nested_instruction_count */
extern T6 T531f6(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.nested_instruction_count */
extern T6 T628f15(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.nested_instruction_count */
extern T6 T346f18(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.nested_instruction_count */
extern T6 T386f8(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T743f10(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.nested_instruction_count */
extern T6 T741f12(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.nested_instruction_count */
extern T6 T450f5(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.nested_instruction_count */
extern T6 T537f6(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.nested_instruction_count */
extern T6 T666f4(TC* ac, T0* C);
/* ET_WHEN_PART.nested_instruction_count */
extern T6 T663f3(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.nested_instruction_count */
extern T6 T516f7(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.nested_instruction_count */
extern T6 T462f4(TC* ac, T0* C);
/* ET_ELSEIF_PART.nested_instruction_count */
extern T6 T459f3(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.nested_instruction_count */
extern T6 T738f20(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.nested_instruction_count */
extern T6 T735f19(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.nested_instruction_count */
extern T6 T733f9(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.nested_instruction_count */
extern T6 T732f5(TC* ac, T0* C);
/* ET_ASSIGNMENT.nested_instruction_count */
extern T6 T731f7(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.nested_instruction_count */
extern T6 T730f7(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.nested_instruction_count */
extern T6 T325f9(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T740f8(TC* ac, T0* C);
/* ET_C_GENERATOR.are_inlinable_call_operands */
extern T1 T114f606(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.is_inlinable_argument */
extern T1 T114f608(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32].is_empty */
extern T1 T898f9(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.invariants */
extern T0* T1060f17(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.invariants */
extern T0* T1059f17(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.invariants */
extern T0* T978f18(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.invariants */
extern T0* T904f18(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.invariants */
extern T0* T843f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32].is_empty */
extern T1 T897f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32].is_empty */
extern T1 T896f7(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T114f930(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T114f996(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T114f1262(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_attribute_access */
extern void T114f924(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T114f954(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_name */
extern void T114f814(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T114f842(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_type_cast */
extern void T114f788(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_name */
extern void T114f801(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T114f825(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_access */
extern void T114f783(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T114f995(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T114f1261(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_assign_to */
extern void T114f816(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T114f789(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T114f815(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_real_n_ref_procedure_call */
extern void T114f994(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_set_item_call */
extern void T114f1260(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T114f1209(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_pointer_access */
extern void T114f824(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_pointer_name */
extern void T114f834(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T114f993(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_fast_call_call */
extern void T114f1259(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T114f1258(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T114f1265(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f1265ot1(TC* ac, T0* a1);
extern T1 T114f1265ot2(TC* ac, T0* a1);
extern T1 T114f1265ot3(TC* ac, T0* a1);
extern T1 T114f1265ot4(TC* ac, T0* a1);
extern T1 T114f1265ot5(TC* ac, T0* a1);
extern T1 T114f1265ot6(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_standalone_type_set */
extern void T114f851(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T936f14(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.wipe_out */
extern void T935f20(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T1019s5(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T1018f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].set_count */
extern void T1018f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].force_last */
extern void T937f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T1397s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T1396f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T1396f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern void T937f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T1397s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T1396f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_capacity */
extern T6 T937f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].extendible */
extern T1 T937f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.keep_first */
extern void T863f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T1295s5(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T1294f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].set_count */
extern void T1294f10(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_tuple_label */
extern void T114f1269(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_identifier */
extern void T114f934(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T925f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].force */
extern void T1275s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].fill_with */
extern void T1276f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].extend */
extern void T1276f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T925f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].aliased_resized_area */
extern T0* T1275s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].aliased_resized_area */
extern T0* T1276f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T925f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T925f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_qualified_call_expression */
extern void T114f906(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T383f36(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].force_last */
extern void T932f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T1388s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T1387f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T1387f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T932f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1388s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1387f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].new_capacity */
extern T6 T932f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].extendible */
extern T1 T932f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T936c17(TC* ac, T0* a1);
/* ET_C_GENERATOR.new_qualified_call_expression */
extern T0* T114f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T383f38(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].remove_last */
extern void T932f13(TC* ac, T0* C);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T1387f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T1387f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].move_last_cursors_after */
extern void T932f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].set_next_cursor */
extern void T1389f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].set_after */
extern void T1389f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].last */
extern T0* T932f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].is_empty */
extern T1 T932f10(TC* ac, T0* C);
/* ET_C_GENERATOR.new_tuple_label */
extern T0* T114f597(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_identifier */
extern T0* T114f605(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_name */
extern void T307f136(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T307f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].remove_last */
extern void T925f17(TC* ac, T0* C);
/* SPECIAL [ET_IDENTIFIER].keep_head */
extern void T1276f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].set_count */
extern void T1276f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].move_last_cursors_after */
extern void T925f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T1370f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].set_after */
extern void T1370f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].last */
extern T0* T925f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].is_empty */
extern T1 T925f7(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T936f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T936c13(TC* ac, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T844f4(TC* ac, T0* C);
/* ET_C_GENERATOR.print_context_type_declaration */
extern void T114f780(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_type_declaration */
extern void T114f776(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T114f745(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T1059f54(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T865f43(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T850f36(TC* ac, T0* C);
/* ET_C_GENERATOR.conforming_type_set */
extern T0* T114f596(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_never_void */
extern T1 T1839f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_never_void */
extern T1 T1061f3(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_never_void */
extern T1 T936f4(TC* ac, T0* C);
/* ET_C_GENERATOR.new_standalone_type_set */
extern T0* T114f328(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].remove_last */
extern void T937f13(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T1396f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T1396f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].move_last_cursors_after */
extern void T937f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_next_cursor */
extern void T1398f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_after */
extern void T1398f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].last */
extern T0* T937f6(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T936f21(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].is_empty */
extern T1 T937f10(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_ref_procedure_call */
extern void T114f992(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_set_item_call */
extern void T114f1257(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T114f991(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T114f1256(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_c_call */
extern void T114f1268(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_procedure_call */
extern void T114f990(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unmark_object_call */
extern void T114f1255(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unlock_marking_call */
extern void T114f1254(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_at_call */
extern void T114f1253(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_call */
extern void T114f1252(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_at_call */
extern void T114f1251(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_call */
extern void T114f1250(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_at_call */
extern void T114f1249(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_call */
extern void T114f1248(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_at_call */
extern void T114f1247(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_call */
extern void T114f1246(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_at_call */
extern void T114f1245(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_call */
extern void T114f1244(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_at_call */
extern void T114f1243(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_call */
extern void T114f1242(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_at_call */
extern void T114f1241(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_call */
extern void T114f1240(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_at_call */
extern void T114f1239(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_call */
extern void T114f1238(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_at_call */
extern void T114f1237(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_call */
extern void T114f1236(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_at_call */
extern void T114f1235(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_call */
extern void T114f1234(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_at_call */
extern void T114f1233(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_call */
extern void T114f1232(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_at_call */
extern void T114f1231(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_call */
extern void T114f1230(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_at_call */
extern void T114f1229(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_call */
extern void T114f1228(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_at_call */
extern void T114f1227(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_call */
extern void T114f1226(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_at_call */
extern void T114f1225(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_call */
extern void T114f1224(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_mark_object_call */
extern void T114f1223(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_lock_marking_call */
extern void T114f1222(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T114f989(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T114f1221(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_procedure_call */
extern void T114f988(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_set_item_call */
extern void T114f1220(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_procedure_call */
extern void T114f987(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_free_call */
extern void T114f1219(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T114f986(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T114f1218(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_procedure_call */
extern void T114f985(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_set_item_call */
extern void T114f1217(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_procedure_call */
extern void T114f984(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_set_item_call */
extern void T114f1216(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T114f983(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T114f1215(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f1215ot1(TC* ac, T0* a1);
extern T1 T114f1215ot2(TC* ac, T0* a1);
extern T1 T114f1215ot3(TC* ac, T0* a1);
extern T1 T114f1215ot4(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_minus */
extern void T114f866(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T114f833(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_plus */
extern void T114f865(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T1060f33(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T1839f9(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T936f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T1061f9(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T1060f58(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T1059f60(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T904f57(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T978f54(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_expanded */
extern T1 T843f56(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.has_expanded */
extern T1 T981f10(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_redefined_copy_routine */
extern T1 T1060f14(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_redefined_copy_routine */
extern T1 T1059f14(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_redefined_copy_routine */
extern T1 T904f16(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_redefined_copy_routine */
extern T1 T978f17(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_redefined_copy_routine */
extern T1 T843f16(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T1059f33(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T978f51(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_item_nested_custom_standard_copy_routine */
extern T1 T978f53(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T978f51p1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T904f51(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T904f51p1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T843f43(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T1060f50(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T1059f50(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_special */
extern T1 T978s50(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T904f50(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_special */
extern T1 T843f42(TC* ac, T0* C);
/* ET_CLASS.is_type_class */
extern T1 T70f88(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T114f1214(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T114f901(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f901ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T114f805(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T939f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T939f13(TC* ac, T0* C);
/* SPECIAL [ET_EXPRESSION].keep_head */
extern void T1399f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].set_count */
extern void T1399f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T939f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T1401f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_after */
extern void T1401f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T939f6(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T114f942(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T939f10(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T572f36(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1184s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1182f4(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T572f11(TC* ac, T0* C);
/* ET_C_GENERATOR.fill_call_operands */
extern void T114f853(TC* ac, T0* C, T6 a1);
extern T1 T114f853ot1(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T938f12(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T114f784(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].replace */
extern void T926f11(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T926f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T938f5(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_attachment_operand */
extern void T114f871(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f871ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T114f822(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T114f829(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T114f820(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_and_then */
extern void T114f896(TC* ac, T0* C);
/* ET_C_GENERATOR.print_temp_name */
extern void T114f781(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T114f216(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].force_last */
extern void T927f13(TC* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].force */
extern void T1242s4(TC* ac, T0* a1, T1 a2, T6 a3);
/* DS_ARRAYED_LIST [BOOLEAN].resize */
extern void T927f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area */
extern T0* T1242s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].aliased_resized_area */
extern T0* T155f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].new_capacity */
extern T6 T927f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].extendible */
extern T1 T927f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T240f19(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T240f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T240f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T926f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T1372s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].fill_with */
extern void T1371f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].extend */
extern void T1371f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T926f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T1372s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T1371f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T926f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].extendible */
extern T1 T926f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T307f130(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T925f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T114f604(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [BOOLEAN].item */
extern T1 T927f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_writable */
extern void T114f872(TC* ac, T0* C, T0* a1);
extern T1 T114f872ot1(TC* ac, T0* a1);
/* DS_HASH_SET [INTEGER_32].remove */
extern void T946f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_position */
extern void T946f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].move_cursors_forth */
extern void T946f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].internal_set_key_equality_tester */
extern void T946f74(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_variable */
extern void T114f912(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T114f939(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [INTEGER_32].force_last */
extern void T946f44(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_inline_separate_argument */
extern void T114f911(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_separate_argument_name */
extern void T114f938(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_iteration_item */
extern void T114f910(TC* ac, T0* C, T0* a1);
extern T1 T114f910ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor_name */
extern void T114f937(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].value */
extern T6 T945f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].item_storage_item */
extern T6 T945f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].position_of_key */
extern T6 T945f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].clashes_item */
extern T6 T945f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].key_storage_item */
extern T6 T945f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].hash_position */
extern T6 T945f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].slots_item */
extern T6 T945f24(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T114f918(TC* ac, T0* C, T0* a1);
extern T1 T114f918ot1(TC* ac, T0* a1);
extern T1 T114f918ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_declaration */
extern void T114f877(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
extern T1 T114f877ot1(TC* ac, T0* a1);
extern T1 T114f877ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_object_declaration */
extern void T114f922(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T114f922ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_function_name */
extern void T114f953(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_call_object_type_name */
extern void T114f952(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_call_function_declaration */
extern void T114f921(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T114f921ot1(TC* ac, T0* a1);
extern T1 T114f921ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_object_type_declaration */
extern void T114f920(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T114f920ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_temporary_variable_declarations */
extern void T114f786(TC* ac, T0* C);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T114f843(TC* ac, T0* C);
/* DS_ARRAYED_LIST [BOOLEAN].wipe_out */
extern void T927f11(TC* ac, T0* C);
/* SPECIAL [BOOLEAN].keep_head */
extern void T155f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].set_count */
extern void T155f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].move_all_cursors_after */
extern void T927f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].set_next_cursor */
extern void T1374f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].set_after */
extern void T1374f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T926f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T1371f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].set_count */
extern void T1371f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T926f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T1373f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T1373f6(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_arguments */
extern void T948f10(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_name */
extern void T948f9(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_target */
extern void T948f8(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T950f12(TC* ac, T0* C, T6 a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_arguments */
extern void T950f11(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_name */
extern void T950f10(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_target */
extern void T950f9(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T349f22(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T349f9(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T349f21(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T349f8(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T349f20(TC* ac, T0* C);
/* ET_C_GENERATOR.dedent */
extern void T114f785(TC* ac, T0* C);
/* ET_C_GENERATOR.print_separate_call_object_name */
extern void T114f917(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_attribute_region_access */
extern void T114f845(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_region_name */
extern void T114f831(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_current_name */
extern void T114f858(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_malloc_current */
extern void T114f916(TC* ac, T0* C, T0* a1);
extern T1 T114f916ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_type */
extern T1 T70f252(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T70f248(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T1290f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T695f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f70ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T504f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f72ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T70f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T510f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T695f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T695f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f64ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1290f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T695f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f74ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T504f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f76ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T70f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T853f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f73ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T729f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T728f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T726f77(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T184f108(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T200f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T102f115(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T853f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f65ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T729f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1290f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T695f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f73ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T504f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f75ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T70f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T853f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f72ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T729f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T729f85(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T728f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T728f88(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T726f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T184f107(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T200f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T102f110(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T728f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T726f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T1290f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T695f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f72ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T504f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f74ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T70f253(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T853f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f71ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T729f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T728f77(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T726f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T726f86(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T184f106(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T200f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T102f109(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T200f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T1290f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T695f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f78ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T504f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f80ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T70f269(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T853f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f79ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T729f82(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T728f85(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T726f83(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T184f122(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T200f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T200f82(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T102f129(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T184f101(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T1290f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T695f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T695f71ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T504f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f73ot1(TC* ac, T0* a1);
/* ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T70f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T853f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f75ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T729f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T728f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T726f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T184f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T2191f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T186f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T200f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T102f126(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T102f114(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T504f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T504f66ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T504f77(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T853f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T853f74ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T729f77(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T728f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T726f78(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T184f116(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T200f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T102f122(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T202f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T2190f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T726f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T184f93(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T853f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T102f99(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T729f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T728f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T200f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.integer_type */
extern T0* T806f46(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_type */
extern T0* T87f49(TC* ac, T0* C);
/* ET_SYSTEM.integer_type */
extern T0* T50f48(TC* ac, T0* C);
/* ET_C_GENERATOR.current_universe */
extern T0* T114f408(TC* ac, T0* C);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T114f862(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T114f839(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.mark_temp_variable_volatile */
extern void T114f936(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].replace */
extern void T927f12(TC* ac, T0* C, T1 a1, T6 a2);
/* ET_C_GENERATOR.print_result_name */
extern void T114f779(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.indent */
extern void T114f777(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T948f3(TC* ac, T0* C);
/* ET_C_GENERATOR.print_argument_name */
extern void T114f787(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.formal_argument */
extern T0* T114f225(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].put_last */
extern void T925f16(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.add_separate_arguments */
extern void T2070f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_FROM_EXPRESSION.add_separate_arguments */
extern void T2069f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.add_separate_arguments */
extern void T2068f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_CAST_EXPRESSION.add_separate_arguments */
extern void T1896f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BINARY_INTEGER_CONSTANT.add_separate_arguments */
extern void T683f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OCTAL_INTEGER_CONSTANT.add_separate_arguments */
extern void T682f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.add_separate_arguments */
extern void T681f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.add_separate_arguments */
extern void T680f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.add_separate_arguments */
extern void T678f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.add_separate_arguments */
extern void T677f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C3_CHARACTER_CONSTANT.add_separate_arguments */
extern void T675f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ITERATION_CURSOR.add_separate_arguments */
extern void T761f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.add_separate_arguments */
extern void T617f47(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_EXPRESSION.add_separate_arguments */
extern void T343f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.add_separate_arguments */
extern void T760f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.add_separate_arguments */
extern void T759f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_OBJECT_TEST.add_separate_arguments */
extern void T757f39(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.add_separate_arguments */
extern void T745f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.add_separate_arguments */
extern void T1045f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T768f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T767f65(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T766f60(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T765f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T764f66(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T763f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CALL_AGENT.add_separate_arguments */
extern void T380f42(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_STRIP_EXPRESSION.add_separate_arguments */
extern void T634f39(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_TUPLE.add_separate_arguments */
extern void T572f42(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_ARRAY.add_separate_arguments */
extern void T563f40(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIZED_EXPRESSION.add_separate_arguments */
extern void T593f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACKET_EXPRESSION.add_separate_arguments */
extern void T377f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST.add_separate_arguments */
extern void T758f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.add_separate_arguments */
extern void T756f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.add_separate_arguments */
extern void T755f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_TYPE.add_separate_arguments */
extern void T754f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_EQUALITY_EXPRESSION.add_separate_arguments */
extern void T753f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EQUALITY_EXPRESSION.add_separate_arguments */
extern void T752f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.add_separate_arguments */
extern void T749f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.add_separate_arguments */
extern void T748f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.add_separate_arguments */
extern void T747f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.add_separate_arguments */
extern void T746f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_EXPRESSION.add_separate_arguments */
extern void T744f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_STATIC_CALL_EXPRESSION.add_separate_arguments */
extern void T631f40(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_EXPRESSION.add_separate_arguments */
extern void T383f40(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INSPECT_EXPRESSION.add_separate_arguments */
extern void T534f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IF_EXPRESSION.add_separate_arguments */
extern void T513f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATE_EXPRESSION.add_separate_arguments */
extern void T440f44(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.add_separate_arguments */
extern void T689f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT.add_separate_arguments */
extern void T322f44(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TRUE_CONSTANT.add_separate_arguments */
extern void T687f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.add_separate_arguments */
extern void T685f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_MANIFEST_STRING.add_separate_arguments */
extern void T676f59(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_INLINED_EXPRESSION.add_separate_arguments */
extern void T992f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FALSE_CONSTANT.add_separate_arguments */
extern void T688f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.add_separate_arguments */
extern void T690f60(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_REAL_CONSTANT.add_separate_arguments */
extern void T684f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_INTEGER_CONSTANT.add_separate_arguments */
extern void T679f77(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VOID.add_separate_arguments */
extern void T331f43(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT.add_separate_arguments */
extern void T301f43(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.add_separate_arguments */
extern void T307f139(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].wipe_out */
extern void T925f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].move_all_cursors_after */
extern void T925f19(TC* ac, T0* C);
/* ET_C_GENERATOR.print_separate_call_name */
extern void T114f913(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_call_name_in_comment */
extern void T114f802(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T108s17(TC* ac, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T108s19(TC* ac, T0* a1, T0* a2, T6 a3);
extern T1 T108s19ot1(TC* ac, T0* a1);
/* STRING_8.substring_index */
extern T6 T17f32(TC* ac, T0* C, T0* a1, T6 a2);
/* STRING_8_SEARCHER.substring_index */
extern T6 T1029f2(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T1029f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.internal_initialize_deltas */
extern void T1029f7(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern T0* T17f34(TC* ac, T0* C);
/* STRING_8_SEARCHER.make */
extern T0* T1029c6(TC* ac);
/* UC_UTF8_STRING.substring_index */
extern T6 T1078f34(TC* ac, T0* C, T0* a1, T6 a2);
/* UC_STRING.substring_index */
extern T6 T919f65(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T948f2(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.separate_target */
extern T0* T738f15(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.separate_target */
extern T0* T735f14(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T948f1(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_scoop_region_passive */
extern T1 T2069f28(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.is_scoop_region_passive */
extern T1 T738f17(TC* ac, T0* C);
/* ET_IDENTIFIER.same_class_name */
extern T1 T307f8(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern T0* T81s17(TC* ac);
/* ET_BANG_INSTRUCTION.is_scoop_region_passive */
extern T1 T735f16(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_scoop_region_passive */
extern T1 T440f10(TC* ac, T0* C);
/* ET_C_GENERATOR.current_closure */
extern T0* T114f345(TC* ac, T0* C);
extern T1 T114f345ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_call_name */
extern void T114f857(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
extern T1 T114f857ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_type_set_in_call */
extern T0* T114f335(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.is_current */
extern T1 T1894f5(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T2070f14(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_current */
extern T1 T2069f22(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1896f11(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_current */
extern T1 T2068f13(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_current */
extern T1 T770f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_current */
extern T1 T340f40(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_current */
extern T1 T992f5(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_current */
extern T1 T534f7(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_current */
extern T1 T513f10(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T440f15(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T383f9(TC* ac, T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T380f7(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T377f5(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_current */
extern T1 T343f18(TC* ac, T0* C);
/* ET_VOID.is_current */
extern T1 T331f36(TC* ac, T0* C);
/* ET_RESULT.is_current */
extern T1 T322f38(TC* ac, T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T307f21(TC* ac, T0* C);
/* ET_CURRENT.is_current */
extern T1 T301s8(TC* ac);
/* ET_BINARY_INTEGER_CONSTANT.is_current */
extern T1 T683f13(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_current */
extern T1 T682f13(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T681f13(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T680f13(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T679f10(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T678f53(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T677f11(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T675f12(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_current */
extern T1 T761f4(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_current */
extern T1 T617f15(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T760f7(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_current */
extern T1 T759f8(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_current */
extern T1 T757f11(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T745f4(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T1045f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T768f30(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T767f38(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T766f35(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T765f33(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T764f39(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T763f36(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T634f7(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T572f13(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T563f7(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T593f7(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_current */
extern T1 T758f7(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T756f4(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T755f23(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T754f7(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_current */
extern T1 T753f6(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T752f6(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T749f6(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T748f4(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T747f4(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T746f4(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T744f10(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T631f9(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T690f50(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T689f10(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T688f44(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T687f44(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T685f11(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T684f8(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T676f35(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_call_agent */
extern T1 T1888f7(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T730f16(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T740f7(TC* ac, T0* C);
/* ET_CALL_AGENT.is_call_agent */
extern T1 T380s29(TC* ac);
/* ET_C_GENERATOR.register_polymorphic_called_features */
extern void T114f946(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_generated */
extern void T894f23(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_generated */
extern void T893f22(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_force_result_boxing */
extern void T893f21(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T114f844(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T114f860(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T114f860ac1(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T114f860ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_adapted_expression_with_agent */
extern void T114f899(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_typed_default_entity_value */
extern void T114f945(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T114f933(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_separate_qualified_call_expression */
extern void T114f944(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_separate_argument_session_name */
extern void T114f999(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_separate_argument_name */
extern void T114f1264(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T950f4(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T114f943(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_free */
extern T1 T114f409(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T114f900(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T114f900ac1(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
extern T1 T114f900ot1(TC* ac, T0* a1);
extern T1 T114f900ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_query_call */
extern void T114f897(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f897ot1(TC* ac, T0* a1);
extern T1 T114f897ot2(TC* ac, T0* a1);
extern T1 T114f897ot3(TC* ac, T0* a1);
extern T1 T114f897ot4(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_inlined_query_call */
extern void T114f926(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f926ot1(TC* ac, T0* a1);
extern T1 T114f926ot2(TC* ac, T0* a1);
extern T1 T114f926ot3(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].replace */
extern void T938f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].item */
extern T0* T938f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_EXPRESSION].is_empty */
extern T1 T938f6(TC* ac, T0* C);
/* ET_COMPOUND.first */
extern T0* T407f13(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_character_n */
extern T1 T1060f65(TC* ac, T0* C);
/* ET_CLASS.is_character_n_class */
extern T1 T70f111(TC* ac, T0* C);
/* ET_CLASS_CODES.is_character_n */
extern T1 T783s37(TC* ac, T8 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_character_n */
extern T1 T1059f65(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_character_n */
extern T1 T981f14(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_character_n */
extern T1 T978f36(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_character_n */
extern T1 T904f34(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_character_n */
extern T1 T843f53(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_real_n */
extern T1 T1060f64(TC* ac, T0* C);
/* ET_CLASS.is_real_n_class */
extern T1 T70f110(TC* ac, T0* C);
/* ET_CLASS_CODES.is_real_n */
extern T1 T783s36(TC* ac, T8 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_real_n */
extern T1 T1059f64(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_real_n */
extern T1 T981f13(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_real_n */
extern T1 T978f35(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_real_n */
extern T1 T904f33(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_real_n */
extern T1 T843f52(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_integer_n */
extern T1 T1060f63(TC* ac, T0* C);
/* ET_CLASS.is_integer_n_class */
extern T1 T70f109(TC* ac, T0* C);
/* ET_CLASS_CODES.is_integer_n */
extern T1 T783s35(TC* ac, T8 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_integer_n */
extern T1 T1059f63(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_integer_n */
extern T1 T981f12(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_integer_n */
extern T1 T978f34(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_integer_n */
extern T1 T904f32(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_integer_n */
extern T1 T843f51(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T114f925(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T114f975(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T114f1205(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T114f1204(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T114f1203(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_TUPLE_TYPE.actual_parameters */
extern T0* T184f1(TC* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T102f4(TC* ac, T0* C);
/* ET_CLASS.formal_parameters */
extern T0* T70f20(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_type_is_deferred_call */
extern void T114f1202(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_attached_call */
extern void T114f1201(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T114f1200(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T695f41(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T504f43(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T853f15(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T729f15(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T728f18(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable */
extern T1 T726f14(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable */
extern T1 T200f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable */
extern T1 T70f181(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_detachable */
extern T1 T184f45(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_detachable */
extern T1 T102f45(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T114f1199(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_default_call */
extern void T114f1198(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T114f974(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T114f1197(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T114f1196(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f1196ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T114f973(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T114f1195(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T114f1194(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T114f1194ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T114f1193(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T114f804(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T114f864(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T114f1192(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T114f846(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T114f881(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T114f1191(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_query_call */
extern void T114f972(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_positive_infinity_call */
extern void T114f1190(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_negative_infinity_call */
extern void T114f1189(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_nan_call */
extern void T114f1188(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_item_call */
extern void T114f1187(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_query_call */
extern void T114f971(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_real_call */
extern void T114f1186(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_64_call */
extern void T114f1185(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_call */
extern void T114f1184(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_to_double_call */
extern void T114f1183(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_quotient_call */
extern void T114f1182(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_product_call */
extern void T114f1181(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_power_call */
extern void T114f1180(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_plus_call */
extern void T114f1179(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_opposite_call */
extern void T114f1178(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_minus_call */
extern void T114f1177(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_positive_infinity_call */
extern void T114f1176(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_negative_infinity_call */
extern void T114f1175(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_nan_call */
extern void T114f1174(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_less_call */
extern void T114f1173(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_c_call */
extern void T114f1208(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T1 a4, T0* a5, T1 a6);
/* ET_C_GENERATOR.print_declaration_type_cast_from_c */
extern void T114f1266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_declaration_type_cast */
extern void T114f888(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_boolean */
extern T1 T1060f72(TC* ac, T0* C);
/* ET_ECF_LIBRARY.boolean_type */
extern T0* T806f33(TC* ac, T0* C);
/* ET_ECF_SYSTEM.boolean_type */
extern T0* T87f36(TC* ac, T0* C);
/* ET_SYSTEM.boolean_type */
extern T0* T50f35(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_boolean */
extern T1 T1059f73(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_boolean */
extern T1 T978f38(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_boolean */
extern T1 T904f36(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_boolean */
extern T1 T843f55(TC* ac, T0* C);
/* ET_C_GENERATOR.total_order_on_reals_mode */
extern T1 T114f417(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_minimum_number_call */
extern void T114f1172(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_maximum_number_call */
extern void T114f1171(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_less_equal_call */
extern void T114f1170(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_less_call */
extern void T114f1169(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_greater_equal_call */
extern void T114f1168(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_greater_call */
extern void T114f1167(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_equal_call */
extern void T114f1166(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_identity_call */
extern void T114f1165(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_64_call */
extern void T114f1164(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_32_call */
extern void T114f1163(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_64_call */
extern void T114f1162(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_32_call */
extern void T114f1161(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_query_call */
extern void T114f970(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_item_call */
extern void T114f1160(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T114f969(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T114f1159(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T114f1158(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T114f1157(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_ECF_LIBRARY.pointer_type */
extern T0* T806f68(TC* ac, T0* C);
/* ET_ECF_SYSTEM.pointer_type */
extern T0* T87f71(TC* ac, T0* C);
/* ET_SYSTEM.pointer_type */
extern T0* T50f70(TC* ac, T0* C);
/* ET_C_GENERATOR.current_universe_impl */
extern T0* T114f331(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T114f1156(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T114f968(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T114f1155(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T114f1154(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T114f1153(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T114f1152(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T114f1151(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T114f1150(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T114f1149(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T114f1148(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.multithreaded_mode */
extern T1 T114f516(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T114f1147(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.scoop_mode */
extern T1 T114f515(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T114f1146(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T114f1145(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_64_bits_call */
extern void T114f1144(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T114f1143(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T114f1142(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T114f1141(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T114f1140(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T114f967(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T114f1139(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_query_call */
extern void T114f966(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_id_from_name_call */
extern void T114f1138(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_conforms_to_call */
extern void T114f1137(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_storable_version_of_type_call */
extern void T114f1136(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_offset_call */
extern void T114f1135(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_call */
extern void T114f1134(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_call */
extern void T114f1133(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_at_call */
extern void T114f1132(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_call */
extern void T114f1131(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_at_call */
extern void T114f1130(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_call */
extern void T114f1129(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_offset_call */
extern void T114f1128(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_call */
extern void T114f1127(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_at_call */
extern void T114f1126(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_call */
extern void T114f1125(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_persistent_field_count_of_type_call */
extern void T114f1124(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_once_objects_call */
extern void T114f1123(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_object_size_call */
extern void T114f1122(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_type_instance_of_call */
extern void T114f1121(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_tuple_instance_of_call */
extern void T114f1120(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_special_of_reference_instance_of_call */
extern void T114f1119(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_instance_of_call */
extern void T114f1118(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_at_call */
extern void T114f1117(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_call */
extern void T114f1116(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_at_call */
extern void T114f1115(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_call */
extern void T114f1114(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_at_call */
extern void T114f1113(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_call */
extern void T114f1112(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_at_call */
extern void T114f1111(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_call */
extern void T114f1110(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_type_call */
extern void T114f1109(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_call */
extern void T114f1108(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_type_call */
extern void T114f1107(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_or_basic_type_call */
extern void T114f1106(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_call */
extern void T114f1105(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_expanded_call */
extern void T114f1104(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_copy_semantics_item_call */
extern void T114f1103(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_call */
extern void T114f1102(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_object_marked_call */
extern void T114f1101(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_transient_of_type_call */
extern void T114f1100(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_expanded_of_type_call */
extern void T114f1099(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_expanded_call */
extern void T114f1098(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_copy_semantics_field_call */
extern void T114f1097(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_attached_type_call */
extern void T114f1096(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_at_call */
extern void T114f1095(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_call */
extern void T114f1094(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_at_call */
extern void T114f1093(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_call */
extern void T114f1092(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_at_call */
extern void T114f1091(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_call */
extern void T114f1090(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_at_call */
extern void T114f1089(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_call */
extern void T114f1088(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generic_parameter_count_call */
extern void T114f1087(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_8_of_type_call */
extern void T114f1086(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_of_type_call */
extern void T114f1085(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_8_of_type_call */
extern void T114f1084(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_of_type_call */
extern void T114f1083(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_type_of_type_call */
extern void T114f1082(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_static_type_of_type_call */
extern void T114f1081(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_offset_of_type_call */
extern void T114f1080(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_name_of_type_call */
extern void T114f1079(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_count_of_type_call */
extern void T114f1078(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_eif_gen_param_id_call */
extern void T114f1077(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_at_offset_call */
extern void T114f1076(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_call */
extern void T114f1075(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_detachable_type_call */
extern void T114f1074(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_compiler_version_call */
extern void T114f1073(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_check_assert_call */
extern void T114f1072(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_at_call */
extern void T114f1071(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_call */
extern void T114f1070(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_at_call */
extern void T114f1069(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_call */
extern void T114f1068(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_at_call */
extern void T114f1067(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_call */
extern void T114f1066(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_attached_type_call */
extern void T114f1065(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_query_call */
extern void T114f965(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_item_call */
extern void T114f1064(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_query_call */
extern void T114f964(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_64_call */
extern void T114f1063(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_32_call */
extern void T114f1062(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_call */
extern void T114f1061(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_double_call */
extern void T114f1060(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_32_call */
extern void T114f1059(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_8_call */
extern void T114f1058(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_quotient_call */
extern void T114f1057(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_product_call */
extern void T114f1056(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_power_call */
extern void T114f1055(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_plus_call */
extern void T114f1054(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_opposite_call */
extern void T114f1053(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_minus_call */
extern void T114f1052(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_is_less_call */
extern void T114f1051(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_remainder_call */
extern void T114f1050(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_quotient_call */
extern void T114f1049(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_identity_call */
extern void T114f1048(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_xor_call */
extern void T114f1047(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_right_call */
extern void T114f1046(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_left_call */
extern void T114f1045(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_or_call */
extern void T114f1044(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_not_call */
extern void T114f1043(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_and_call */
extern void T114f1042(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_64_call */
extern void T114f1041(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_32_call */
extern void T114f1040(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_16_call */
extern void T114f1039(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_8_call */
extern void T114f1038(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_64_call */
extern void T114f1037(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_32_call */
extern void T114f1036(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_16_call */
extern void T114f1035(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_8_call */
extern void T114f1034(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_query_call */
extern void T114f963(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_call */
extern void T114f1033(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_is_object_id_of_current_call */
extern void T114f1032(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_id_object_call */
extern void T114f1031(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_current_object_id_call */
extern void T114f1030(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T114f962(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T114f1029(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_fast_item_call */
extern void T114f1028(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T114f961(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T114f1027(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T114f1026(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T114f1025(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T114f1024(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T114f1023(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T114f1022(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_query_call */
extern void T114f960(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_item_call */
extern void T114f1021(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_query_call */
extern void T114f959(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_32_call */
extern void T114f1020(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_8_call */
extern void T114f1019(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_natural_32_code_call */
extern void T114f1018(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_code_call */
extern void T114f1017(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_query_call */
extern void T114f958(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_item_call */
extern void T114f1016(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T114f957(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T114f1015(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T114f1014(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T114f1013(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T114f1012(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T114f1011(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T114f1010(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T114f1009(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T114f956(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_string_call */
extern void T114f1008(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T114f1007(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T114f1006(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T114f955(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_twin_call */
extern void T114f1005(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_call */
extern void T114f1004(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T114f927(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call_with_reference */
extern void T114f980(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
extern T1 T114f980ot1(TC* ac, T0* a1);
extern T1 T114f980ot2(TC* ac, T0* a1);
extern T1 T114f980ot3(TC* ac, T0* a1);
extern T1 T114f980ot4(TC* ac, T0* a1);
extern T1 T114f980ot5(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_times */
extern void T114f1210(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call_with_expanded */
extern void T114f979(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_C_GENERATOR.print_equal_to */
extern void T114f893(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_redefined_is_equal_routine */
extern T1 T1060f13(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_redefined_is_equal_routine */
extern T1 T1059f13(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_redefined_is_equal_routine */
extern T1 T978f19(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_redefined_is_equal_routine */
extern T1 T904f19(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_redefined_is_equal_routine */
extern T1 T843f17(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T1060f31(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T1059f31(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T978f48(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_item_nested_custom_standard_is_equal_routine */
extern T1 T978f52(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T978f48p1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T904f48(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T904f48p1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T843f40(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T936f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T936f9p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T936f11(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T936f11p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T114f1003(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_is_equal_call */
extern void T114f898(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T114f1002(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_escaped_string */
extern void T114f811(TC* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T1001s2(TC* ac, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern T0* T114s341(TC* ac);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T1001c1(TC* ac);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T114f1001(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T114f1000(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T942f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T942f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T942f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T942f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T942f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T942s33(TC* ac);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T942f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T942f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T942f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T942f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T942f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T942f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T942f47(TC* ac, T0* C);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T114f923(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_PRECURSOR.is_attribute_with_self_initializing_code */
extern T1 T865f37(TC* ac, T0* C);
extern T1 T865f37ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_self_initializing */
extern T1 T1060s66(TC* ac);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_self_initializing */
extern T1 T1059s66(TC* ac);
/* ET_DYNAMIC_TUPLE_TYPE.is_self_initializing */
extern T1 T904s35(TC* ac);
/* ET_DYNAMIC_SPECIAL_TYPE.is_self_initializing */
extern T1 T978s37(TC* ac);
/* ET_DYNAMIC_PRIMARY_TYPE.is_self_initializing */
extern T1 T843s54(TC* ac);
/* ET_DYNAMIC_SECONDARY_TYPE.is_self_initializing */
extern T1 T981f15(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_self_initializing_code */
extern T1 T707f40(TC* ac, T0* C);
/* ET_COMPOUND.has_non_null_instruction */
extern T1 T407f15(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute_with_self_initializing_code */
extern T1 T850f39(TC* ac, T0* C);
extern T1 T850f39ot1(TC* ac, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T679f15(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T863f13(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_value_name */
extern void T114f808(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T954f43(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T954f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T954f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T954f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T954f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T954f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T954f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T954f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T954s37(TC* ac);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T954f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T954f63(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].aliased_resized_area */
extern T0* T1425s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].aliased_resized_area */
extern T0* T1423f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T954f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T954f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T954f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T954f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T954f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T954f54(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].force */
extern void T1425s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTANT].fill_with */
extern void T1423f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].extend */
extern void T1423f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T954f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T954f46(TC* ac, T0* C);
/* ET_C_GENERATOR.gobo_version_string_constant */
extern T0* T114f400(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T676c53(TC* ac, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T676f56(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.file_first_line */
extern T0* T152s19(TC* ac, T0* a1);
/* KL_UNIX_INPUT_FILE.close */
extern void T1072f36(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_close */
extern void T1072f37(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.default_pointer */
extern T14 T1072s21(TC* ac);
/* KL_UNIX_INPUT_FILE.file_close */
extern void T1072s41(TC* ac, T14 a1);
/* KL_UNIX_INPUT_FILE.read_line */
extern void T1072f35(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.read_character */
extern void T1072f40(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_read_character */
extern void T1072f43(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.file_gc */
extern T2 T1072s29(TC* ac, T14 a1);
/* KL_UNIX_INPUT_FILE.old_end_of_file */
extern T1 T1072f25(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.file_feof */
extern T1 T1072s31(TC* ac, T14 a1);
/* KL_UNIX_INPUT_FILE.string_ */
extern T0* T1072s27(TC* ac);
/* KL_UNIX_INPUT_FILE.is_open_read */
extern T1 T1072f13(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_is_open_read */
extern T1 T1072f26(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.open_read */
extern void T1072f34(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.is_closed */
extern T1 T1072f17(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_is_closed */
extern T1 T1072f22(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_open_read */
extern void T1072f39(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.open_read */
extern void T1072f39p1(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.file_open */
extern T14 T1072s24(TC* ac, T14 a1, T6 a2);
/* KL_UNIX_INPUT_FILE.internal_name_pointer */
extern T0* T1072f23(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_is_readable */
extern T1 T1072f16(TC* ac, T0* C);
/* FILE_INFO.is_readable */
extern T1 T166f11(TC* ac, T0* C);
/* FILE_INFO.file_eaccess */
extern T1 T166s8(TC* ac, T14 a1, T6 a2);
/* KL_UNIX_INPUT_FILE.buffered_file_info */
extern T0* T1072f28(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.set_buffer */
extern void T1072f44(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.old_exists */
extern T1 T1072f15(TC* ac, T0* C);
/* KL_UNIX_INPUT_FILE.file_exists */
extern T1 T1072s30(TC* ac, T14 a1);
/* KL_UNIX_INPUT_FILE.string_name */
extern T0* T1072f12(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.new_input_file */
extern T0* T152s30(TC* ac, T0* a1);
/* KL_UNIX_INPUT_FILE.make */
extern T0* T1072c33(TC* ac, T0* a1);
/* KL_UNIX_INPUT_FILE.make */
extern void T1072f33p1(TC* ac, T0* C, T0* a1);
/* KL_UNIX_INPUT_FILE.old_make */
extern void T1072f38(TC* ac, T0* C, T0* a1);
/* KL_UNIX_INPUT_FILE.set_name */
extern void T1072f42(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_first_line */
extern T0* T151s19(TC* ac, T0* a1);
/* KL_WINDOWS_INPUT_FILE.close */
extern void T1071f36(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_close */
extern void T1071f37(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.default_pointer */
extern T14 T1071s21(TC* ac);
/* KL_WINDOWS_INPUT_FILE.file_close */
extern void T1071s41(TC* ac, T14 a1);
/* KL_WINDOWS_INPUT_FILE.read_line */
extern void T1071f35(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.read_character */
extern void T1071f40(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_read_character */
extern void T1071f43(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.file_gc */
extern T2 T1071s29(TC* ac, T14 a1);
/* KL_WINDOWS_INPUT_FILE.old_end_of_file */
extern T1 T1071f25(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.file_feof */
extern T1 T1071s31(TC* ac, T14 a1);
/* KL_WINDOWS_INPUT_FILE.string_ */
extern T0* T1071s27(TC* ac);
/* KL_WINDOWS_INPUT_FILE.is_open_read */
extern T1 T1071f13(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_is_open_read */
extern T1 T1071f26(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.open_read */
extern void T1071f34(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.is_closed */
extern T1 T1071f17(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_is_closed */
extern T1 T1071f22(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_open_read */
extern void T1071f39(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.open_read */
extern void T1071f39p1(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.file_open */
extern T14 T1071s24(TC* ac, T14 a1, T6 a2);
/* KL_WINDOWS_INPUT_FILE.internal_name_pointer */
extern T0* T1071f23(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_is_readable */
extern T1 T1071f16(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.buffered_file_info */
extern T0* T1071f28(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.set_buffer */
extern void T1071f44(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.old_exists */
extern T1 T1071f15(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.file_exists */
extern T1 T1071s30(TC* ac, T14 a1);
/* KL_WINDOWS_INPUT_FILE.string_name */
extern T0* T1071f12(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.new_input_file */
extern T0* T151s32(TC* ac, T0* a1);
/* KL_WINDOWS_INPUT_FILE.make */
extern T0* T1071c33(TC* ac, T0* a1);
/* KL_WINDOWS_INPUT_FILE.make */
extern void T1071f33p1(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_INPUT_FILE.old_make */
extern void T1071f38(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_INPUT_FILE.set_name */
extern void T1071f42(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_special_item */
extern T1 T865f39(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_once_function_call */
extern void T114f929(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_once_function_call */
extern T0* T114f929ac1(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_adapted_once_function_call */
extern T0* T114f929ac2(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_once_value */
extern void T114f982(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_value */
extern void T114f1213(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.once_prefixes */
extern T0* T114f554(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once_per_thread */
extern T1 T865f28(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_thread */
extern T1 T718f34(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_thread */
extern T1 T717f34(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_thread */
extern T1 T716f33(TC* ac, T0* C);
/* ET_NOTE_LIST.has_note_term_with_tag */
extern T1 T575f7(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T716s42(TC* ac);
/* ET_STANDARD_ONCE_KEYS.has_thread_key */
extern T1 T1864s3(TC* ac, T0* a1);
/* ET_DO_PROCEDURE.is_once_per_thread */
extern T1 T715f37(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_thread */
extern T1 T714f45(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_thread */
extern T1 T712f41(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_thread */
extern T1 T711f44(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T711s42(TC* ac);
/* ET_DO_FUNCTION.is_once_per_thread */
extern T1 T710f43(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_thread */
extern T1 T709f39(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_thread */
extern T1 T708f37(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_thread */
extern T1 T707f43(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_thread */
extern T1 T706f35(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_thread */
extern T1 T850f55(TC* ac, T0* C);
/* ET_INVARIANTS.is_once_per_thread */
extern T1 T543f24(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_process_value */
extern void T114f1212(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_DYNAMIC_PRECURSOR.is_once_per_process */
extern T1 T865f55(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_process */
extern T1 T718f33(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_process */
extern T1 T717f33(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_process */
extern T1 T716f32(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_process_key */
extern T1 T1864s2(TC* ac, T0* a1);
/* ET_DO_PROCEDURE.is_once_per_process */
extern T1 T715f36(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_process */
extern T1 T714f44(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_process */
extern T1 T712f40(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_process */
extern T1 T711f43(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_process */
extern T1 T710f42(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_process */
extern T1 T709f38(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_process */
extern T1 T708f36(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_process */
extern T1 T707f42(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_process */
extern T1 T706f34(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_process */
extern T1 T850f51(TC* ac, T0* C);
/* ET_INVARIANTS.is_once_per_process */
extern T1 T543f23(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_value */
extern void T114f1211(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_value_name */
extern void T114f836(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_onces_access */
extern void T114f1267(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_onces_name */
extern void T114f832(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.once_kind */
extern T6 T114f415(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_real_64_class */
extern T1 T70f107(TC* ac, T0* C);
/* ET_CLASS.is_real_32_class */
extern T1 T70f106(TC* ac, T0* C);
/* ET_CLASS.is_pointer_class */
extern T1 T70f105(TC* ac, T0* C);
/* ET_CLASS.is_natural_64_class */
extern T1 T70f104(TC* ac, T0* C);
/* ET_CLASS.is_natural_32_class */
extern T1 T70f103(TC* ac, T0* C);
/* ET_CLASS.is_natural_16_class */
extern T1 T70f102(TC* ac, T0* C);
/* ET_CLASS.is_natural_8_class */
extern T1 T70f101(TC* ac, T0* C);
/* ET_CLASS.is_integer_64_class */
extern T1 T70f100(TC* ac, T0* C);
/* ET_CLASS.is_integer_32_class */
extern T1 T70f99(TC* ac, T0* C);
/* ET_CLASS.is_integer_16_class */
extern T1 T70f98(TC* ac, T0* C);
/* ET_CLASS.is_integer_8_class */
extern T1 T70f97(TC* ac, T0* C);
/* ET_CLASS.is_character_32_class */
extern T1 T70f96(TC* ac, T0* C);
/* ET_CLASS.is_character_8_class */
extern T1 T70f95(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].found_item */
extern T6 T952f26(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].item_storage_item */
extern T6 T952f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].found */
extern T1 T952f33(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].search */
extern void T952f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].search_position */
extern void T952f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].hash_position */
extern T6 T952f25(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.hash_code */
extern T6 T543f32(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].key_storage_item */
extern T0* T952f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].clashes_item */
extern T6 T952f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].slots_item */
extern T6 T952f27(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.register_once_feature */
extern void T114f981(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].force_last */
extern void T952f39(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].key_storage_put */
extern void T952f52(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_STANDALONE_CLOSURE].force */
extern void T1421s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_STANDALONE_CLOSURE].fill_with */
extern void T1420f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_STANDALONE_CLOSURE].extend */
extern void T1420f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].slots_put */
extern void T952f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].clashes_put */
extern void T952f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].resize */
extern void T952f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].clashes_resize */
extern void T952f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].special_integer_ */
extern T0* T952s32(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].key_storage_resize */
extern void T952f56(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STANDALONE_CLOSURE].aliased_resized_area */
extern T0* T1421s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_STANDALONE_CLOSURE].aliased_resized_area */
extern T0* T1420f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].item_storage_resize */
extern void T952f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].slots_resize */
extern void T952f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].new_modulus */
extern T6 T952f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].new_capacity */
extern T6 T952f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].item_storage_put */
extern void T952f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].unset_found_item */
extern void T952f43(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once */
extern T1 T865f48(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T718f32(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T717f32(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once */
extern T1 T716s55(TC* ac);
/* ET_DO_PROCEDURE.is_once */
extern T1 T715f35(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T714f39(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T712f35(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once */
extern T1 T711s38(TC* ac);
/* ET_DO_FUNCTION.is_once */
extern T1 T710f37(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T709f33(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T708f31(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T707f36(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T706f29(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once */
extern T1 T850f42(TC* ac, T0* C);
/* ET_INVARIANTS.is_once */
extern T1 T543f22(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern void T114f928(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern T0* T114f928ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern T0* T114f928ac2(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.is_inlinable_function */
extern T1 T114f401(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f401ot1(TC* ac, T0* a1);
extern T1 T114f401ot2(TC* ac, T0* a1);
extern T1 T114f401ot3(TC* ac, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.has_result */
extern T1 T1896f4(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_result */
extern T1 T992f9(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_result */
extern T1 T2070f5(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_result */
extern T1 T2069f7(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_result */
extern T1 T2068f20(TC* ac, T0* C);
/* ET_IDENTIFIER.has_result */
extern T1 T307f52(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_result */
extern T1 T683f19(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_result */
extern T1 T682f19(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_result */
extern T1 T681f19(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_result */
extern T1 T680f19(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_result */
extern T1 T679f20(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_result */
extern T1 T678f22(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_result */
extern T1 T677f19(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_result */
extern T1 T675f17(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_result */
extern T1 T761f11(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_result */
extern T1 T617f25(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_result */
extern T1 T617f25p1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_result */
extern T1 T617f25p0(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_result */
extern T1 T343f26(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_result */
extern T1 T343f26p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_result */
extern T1 T343f26p0(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_result */
extern T1 T560f12(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_result */
extern T1 T760f12(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_result */
extern T1 T759f15(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_result */
extern T1 T757f18(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_result */
extern T1 T745f11(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_result */
extern T1 T1045f12(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_result */
extern T1 T1892f9(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_result */
extern T1 T349f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T768f22(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_result */
extern T1 T1893f3(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_result */
extern T1 T362f9(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_result */
extern T1 T770f10(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_result */
extern T1 T340f42(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_result */
extern T1 T1601f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T767f28(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T766f26(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_result */
extern T1 T765f24(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_result */
extern T1 T764f29(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_result */
extern T1 T763f27(TC* ac, T0* C);
/* ET_CALL_AGENT.has_result */
extern T1 T380f16(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_result */
extern T1 T769f8(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_result */
extern T1 T634f15(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_result */
extern T1 T572f17(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_result */
extern T1 T563f16(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_result */
extern T1 T593f12(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_result */
extern T1 T377f13(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_result */
extern T1 T758f14(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_result */
extern T1 T756f11(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_result */
extern T1 T755f13(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_result */
extern T1 T754f12(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_result */
extern T1 T753f11(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_result */
extern T1 T752f11(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_result */
extern T1 T749f13(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_result */
extern T1 T748f11(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_result */
extern T1 T747s11(TC* ac);
/* ET_CURRENT_ADDRESS.has_result */
extern T1 T746f11(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_result */
extern T1 T744f16(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_result */
extern T1 T631f16(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_result */
extern T1 T534f13(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_result */
extern T1 T660f5(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_result */
extern T1 T657f5(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_result */
extern T1 T513f17(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_result */
extern T1 T456f5(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_result */
extern T1 T453f6(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_result */
extern T1 T440f21(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_result */
extern T1 T690f15(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_result */
extern T1 T689f15(TC* ac, T0* C);
/* ET_CURRENT.has_result */
extern T1 T301f20(TC* ac, T0* C);
/* ET_RESULT.has_result */
extern T1 T322s17(TC* ac);
/* ET_FALSE_CONSTANT.has_result */
extern T1 T688f16(TC* ac, T0* C);
/* ET_VOID.has_result */
extern T1 T331f16(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_result */
extern T1 T687f16(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_result */
extern T1 T685f17(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_result */
extern T1 T684f17(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_result */
extern T1 T676f17(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_result */
extern T1 T383f15(TC* ac, T0* C);
/* ET_C_GENERATOR.print_target_operand */
extern void T114f941(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T2070f21(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_call_agent */
extern T1 T1565f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T755f11(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T749f11(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T377f8(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T383f7(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T950f5(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T950f6(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.has_field_access */
extern T1 T893f18(TC* ac, T0* C, T0* a1);
extern T1 T893f18ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.in_call_target */
extern T1 T114f357(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.query_call */
extern T0* T865f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].value */
extern T0* T1287f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_item */
extern T0* T1287f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].position_of_key */
extern T6 T1287f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.query_call */
extern T0* T850f32(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T950f3(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T950f2(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T950f1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_item_expression */
extern T0* T617f11(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_item_expression */
extern T0* T343f15(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_item_expression */
extern T0* T628f10(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.cursor_item_expression */
extern T0* T346f14(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_cursor_name */
extern T1 T617s17(TC* ac);
/* ET_ACROSS_EXPRESSION.has_cursor_name */
extern T1 T343f11(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_cursor_name */
extern T1 T628s14(TC* ac);
/* ET_ACROSS_INSTRUCTION.has_cursor_name */
extern T1 T346f10(TC* ac, T0* C);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T114f909(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.temp_variable_type */
extern T0* T114f405(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_known */
extern T1 T114f404(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_formal_argument */
extern void T114f908(TC* ac, T0* C, T0* a1);
extern T1 T114f908ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_inlined_expression */
extern void T114f935(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inlined_expression */
extern void T114f998(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaab_error */
extern void T63f236(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INTERNAL_ERROR.make_giaab */
extern T0* T1464c21(TC* ac, T0* a1, T0* a2, T6 a3);
/* ET_ERROR_HANDLER.report_giaab_error */
extern void T42f236(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_expanded_types */
extern void T936f22(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_twin_feature_name */
extern void T114f907(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_twin_feature_name */
extern T0* T114f359(TC* ac, T0* C);
/* ET_IDENTIFIER.set_feature_name */
extern void T307f134(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_operand */
extern void T114f905(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T114f324(TC* ac, T0* C, T0* a1);
extern T1 T114f324ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T941f3(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_EXPRESSION.is_current */
extern T1 T1565f5(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_current */
extern T1 T950f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T938f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T938f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T938f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T938f8(TC* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T1046f11(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_giaac_error */
extern void T63f235(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_INTERNAL_ERROR.make_giaac */
extern T0* T1464c20(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_ERROR_HANDLER.report_giaac_error */
extern void T42f235(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_C_GENERATOR.print_position */
extern void T114f948(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.implementation_class */
extern T0* T718f3(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.implementation_class */
extern T0* T716f2(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.implementation_class */
extern T0* T714f4(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.implementation_class */
extern T0* T712f3(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.implementation_class */
extern T0* T711f3(TC* ac, T0* C);
/* ET_DO_FUNCTION.implementation_class */
extern T0* T710f3(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.implementation_class */
extern T0* T709f2(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.implementation_class */
extern T0* T708f3(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.implementation_class */
extern T0* T707f2(TC* ac, T0* C);
/* ET_ATTRIBUTE.implementation_class */
extern T0* T706f2(TC* ac, T0* C);
/* ET_INVARIANTS.implementation_class */
extern T0* T543f1(TC* ac, T0* C);
/* ET_DO_PROCEDURE.implementation_class */
extern T0* T715f6(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.implementation_class */
extern T0* T717f8(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.position */
extern T0* T1046f10(TC* ac, T0* C);
/* ET_C_GENERATOR.line_generation_mode */
extern T1 T114f410(TC* ac, T0* C);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T114f919(TC* ac, T0* C, T0* a1);
extern T1 T114f919ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRECURSOR.procedure_call */
extern T0* T865f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].value */
extern T0* T1288f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_item */
extern T0* T1288f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].position_of_key */
extern T6 T1288f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.procedure_call */
extern T0* T850f33(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_separate_qualified_call_instruction */
extern void T114f950(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_procedure_target_operand */
extern void T114f949(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T948f6(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T948f5(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.position */
extern T0* T1888f5(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T730f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T740f13(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.position */
extern T0* T948f4(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.process */
extern void T531f15(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inline_separate_instruction */
extern void T2208f101(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inline_separate_instruction */
extern void T2208f101p1(TC* ac, T0* C, T0* a1);
/* ET_COMPOUND.process */
extern void T407f22(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_compound */
extern void T2208f139(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_compound */
extern void T2208f139p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_compound */
extern void T2052f169(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_instruction_list */
extern void T2052f127(TC* ac, T0* C, T0* a1);
extern T1 T2052f127ot1(TC* ac, T0* a1);
extern T1 T2052f127ot2(TC* ac, T0* a1);
extern T1 T2052f127ot3(TC* ac, T0* a1);
extern T1 T2052f127ot4(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.last_leaf */
extern T0* T1046f14(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.last_leaf */
extern T0* T531f13(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.last_leaf */
extern T0* T628f28(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.last_leaf */
extern T0* T346f27(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.last_leaf */
extern T0* T386f19(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.last_leaf */
extern T0* T743f16(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.last_leaf */
extern T0* T741f16(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.last_leaf */
extern T0* T450f13(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.last_leaf */
extern T0* T537f15(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.last_leaf */
extern T0* T516f16(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.last_leaf */
extern T0* T733f18(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.last_leaf */
extern T0* T732f13(TC* ac, T0* C);
/* ET_ASSIGNMENT.last_leaf */
extern T0* T731f14(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.last_leaf */
extern T0* T730f22(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.last_leaf */
extern T0* T325f20(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.last_leaf */
extern T0* T740f16(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_left_brace */
extern T1 T340f51(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_left_brace */
extern T1 T328f134(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_left_brace */
extern T1 T337f132(TC* ac, T0* C);
/* ET_SYMBOL.is_left_brace */
extern T1 T286f95(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.first_leaf */
extern T0* T1046f13(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.first_leaf */
extern T0* T531f12(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.first_leaf */
extern T0* T528f14(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.first_leaf */
extern T0* T628f27(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.first_leaf */
extern T0* T346f26(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.first_leaf */
extern T0* T386f18(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.first_leaf */
extern T0* T743f15(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.first_leaf */
extern T0* T741f15(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.first_leaf */
extern T0* T450f12(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.first_leaf */
extern T0* T569f11(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.first_leaf */
extern T0* T537f14(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.first_leaf */
extern T0* T516f15(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.first_leaf */
extern T0* T738f23(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.first_leaf */
extern T0* T735f22(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.first_leaf */
extern T0* T733f17(TC* ac, T0* C);
/* ET_VARIANT.first_leaf */
extern T0* T654f6(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.first_leaf */
extern T0* T560f16(TC* ac, T0* C);
/* ET_COMPOUND.first_leaf */
extern T0* T407f16(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.first_leaf */
extern T0* T732f12(TC* ac, T0* C);
/* ET_ASSIGNMENT.first_leaf */
extern T0* T731f13(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.first_leaf */
extern T0* T730f21(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.first_leaf */
extern T0* T325f19(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.first_leaf */
extern T0* T740f15(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_semicolon */
extern T1 T1046f12(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.is_semicolon */
extern T1 T531f11(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.is_semicolon */
extern T1 T628f26(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.is_semicolon */
extern T1 T346f25(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.is_semicolon */
extern T1 T386f17(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.is_semicolon */
extern T1 T743f14(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.is_semicolon */
extern T1 T741f14(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.is_semicolon */
extern T1 T450f11(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.is_semicolon */
extern T1 T537f13(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.is_semicolon */
extern T1 T516f14(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.is_semicolon */
extern T1 T738f22(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.is_semicolon */
extern T1 T735f21(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.is_semicolon */
extern T1 T733f16(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.is_semicolon */
extern T1 T732f11(TC* ac, T0* C);
/* ET_ASSIGNMENT.is_semicolon */
extern T1 T731f12(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_semicolon */
extern T1 T730f20(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_semicolon */
extern T1 T325f18(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_semicolon */
extern T1 T740f14(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.process */
extern void T528f19(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inline_separate_arguments */
extern void T2208f172(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inline_separate_arguments */
extern void T2208f172p1(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.item */
extern T0* T528f7(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_inline_separate_instruction */
extern void T2052f161(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern T0* T81s647(TC* ac);
/* ET_KEYWORD.make_do */
extern T0* T192c69(TC* ac);
/* ET_AST_PRETTY_PRINTER.process_inline_separate_arguments */
extern void T2052f168(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_inline_separate_argument */
extern void T2052f171(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_instruction */
extern void T1142f41(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1142f24(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_arguments */
extern void T1142f103(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_argument */
extern void T1142f111(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.argument */
extern T0* T528f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inline_separate_instruction */
extern void T100f461(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_instruction_validity */
extern void T100f554(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].remove_found_item */
extern void T883f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].unset_found_item */
extern void T883f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].remove_position */
extern void T883f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_put */
extern void T883f53(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].force */
extern void T1196s5(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].fill_with */
extern void T1195f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].extend */
extern void T1195f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_put */
extern void T883f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_keep_head */
extern void T883f57(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T1195f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].set_count */
extern void T1195f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_keep_head */
extern void T883f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_put */
extern void T883f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_put */
extern void T883f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].move_cursors_forth */
extern void T883f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_position */
extern void T1329f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_next_cursor */
extern void T1329f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_after */
extern void T1329f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].internal_set_key_equality_tester */
extern void T883f54(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.remove_inline_separate_arguments */
extern void T884f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].prune_last */
extern void T1330f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].move_all_cursors_after */
extern void T1330f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].set_next_cursor */
extern void T1803f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].set_after */
extern void T1803f6(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T100f331(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.add_inline_separate_argument */
extern void T884f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].force_last */
extern void T1330f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].resize */
extern void T1330f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T1196s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T1195f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].new_capacity */
extern T6 T1330f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].extendible */
extern T1 T1330f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_arguments_validity */
extern void T100f586(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_separate_argument_declaration */
extern void T100f609(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_separate_argument_dynamic_types */
extern void T100f613(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].force_last */
extern void T883f46(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].resize */
extern void T883f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_resize */
extern void T883f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].special_integer_ */
extern T0* T883s33(TC* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_resize */
extern void T883f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_resize */
extern void T883f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_resize */
extern void T883f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_modulus */
extern T6 T883f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_capacity */
extern T6 T883f22(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2gf_error */
extern void T63f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gf */
extern T0* T1466c1224(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_v1se2g_error */
extern T1 T63f152(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se2gf_error */
extern void T42f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_v1se2g_error */
extern T1 T42f152(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2ge_error */
extern void T63f535(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2ge */
extern T0* T1466c1223(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2ge_error */
extern void T42f535(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_v1se2gd_error */
extern void T63f534(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gd */
extern T0* T1466c1222(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gd_error */
extern void T42f534(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T872f15(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_AGENT].keep_head */
extern void T1302f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].set_count */
extern void T1302f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T872f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T1303f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_after */
extern void T1303f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_v1se2gc_error */
extern void T63f533(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gc */
extern T0* T1466c1221(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gc_error */
extern void T42f533(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T557f8(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2gb_error */
extern void T63f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gb */
extern T0* T1466c1220(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gb_error */
extern void T42f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T872f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T872f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].force */
extern void T1301s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].fill_with */
extern void T1302f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].extend */
extern void T1302f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T872f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1301s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1302f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T872f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T872f10(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2ga_error */
extern void T63f531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2ga */
extern T0* T1466c1219(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2ga_error */
extern void T42f531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_v1se1ga_error */
extern void T63f530(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se1ga */
extern T0* T1466c1218(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_v1se1g_error */
extern T1 T63f151(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se1ga_error */
extern void T42f530(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_v1se1g_error */
extern T1 T42f151(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se3ga_error */
extern void T63f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1se3ga */
extern T0* T1466c1217(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_v1se3g_error */
extern T1 T63f150(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se3ga_error */
extern void T42f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_v1se3g_error */
extern T1 T42f150(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inline_separate_instruction */
extern void T862f408(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_separate_instruction_validity */
extern void T862f457(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T862f286(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_separate_arguments_validity */
extern void T862f484(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_inline_separate_argument_declaration */
extern void T862f494(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_inline_separate_instruction */
extern void T114f1449(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_separate_instruction */
extern void T114f1394(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_operand */
extern void T114f1397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.is_twin_needed_in_attachment */
extern T1 T114f639(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_INSTRUCTION.position */
extern T0* T531f5(TC* ac, T0* C);
/* ET_COMPOUND.position */
extern T0* T407f14(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.position */
extern T0* T628f24(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.position */
extern T0* T346f23(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.position */
extern T0* T386f15(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.position */
extern T0* T743f13(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T741f13(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.position */
extern T0* T450f10(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.position */
extern T0* T569f8(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.is_empty */
extern T1 T569f10(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.position */
extern T0* T537f12(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.position */
extern T0* T516f13(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T738f16(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T735f15(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.position */
extern T0* T733f14(TC* ac, T0* C);
/* ET_VARIANT.position */
extern T0* T654f5(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.position */
extern T0* T560f13(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T776f6(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.position */
extern T0* T723f6(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.position */
extern T0* T732f10(TC* ac, T0* C);
/* ET_ASSIGNMENT.position */
extern T0* T731f5(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T325f14(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T325f16(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.position */
extern T0* T528f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.position */
extern T0* T522f9(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.first */
extern T0* T528f13(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.is_empty */
extern T1 T528f12(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.process */
extern void T628f33(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_repeat_instruction */
extern void T2208f100(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_repeat_instruction */
extern void T2208f100p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_repeat_instruction */
extern void T2052f160(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_repeat_instruction */
extern void T1142f40(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_repeat_instruction */
extern void T100f460(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_repeat_instruction_validity */
extern void T100f553(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_instruction_validity */
extern void T100f585(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_found_item */
extern void T881f65(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].unset_found_item */
extern void T881f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_position */
extern void T881f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_put */
extern void T881f73(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].force */
extern void T1194s5(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT].fill_with */
extern void T1193f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT].extend */
extern void T1193f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_put */
extern void T881f69(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_keep_head */
extern void T881f77(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].keep_head */
extern void T1193f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].set_count */
extern void T1193f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_keep_head */
extern void T881f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_put */
extern void T881f71(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_put */
extern void T881f72(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].move_cursors_forth */
extern void T881f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_position */
extern void T1325f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_next_cursor */
extern void T1325f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_after */
extern void T1325f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].internal_set_key_equality_tester */
extern void T881f74(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_ITEM_SCOPE.remove_iteration_components */
extern void T882f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].prune_last */
extern void T1327f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].move_all_cursors_after */
extern void T1327f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].set_next_cursor */
extern void T1802f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].set_after */
extern void T1802f6(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_repetition_instruction_no_from_validity */
extern void T100f580(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T885f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].forth */
extern void T946f49(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].go_after */
extern void T946f84(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_go_after */
extern void T946f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].item_for_iteration */
extern T6 T946f23(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].after */
extern T1 T946f31(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_after */
extern T1 T946f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].start */
extern void T946f48(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.loop_compound */
extern T0* T346f8(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.loop_compound */
extern T0* T628f7(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.loop_compound */
extern T0* T733f3(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T63f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T1466c930(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T63f25(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T42f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T42f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T100f87(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.until_conditional */
extern T0* T346f7(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.until_conditional */
extern T0* T733f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T100f393(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T100f393p1(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T63f487(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T1466c1175(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T63f129(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T42f487(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T42f129(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.variant_part */
extern T0* T346f12(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.variant_part */
extern T0* T733f6(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T100f392(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T100f392p1(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.invariant_part */
extern T0* T346f11(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.invariant_part */
extern T0* T733f5(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.add_iteration_component */
extern void T882f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].force_last */
extern void T1327f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].resize */
extern void T1327f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].aliased_resized_area */
extern T0* T1194s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ITERATION_COMPONENT].aliased_resized_area */
extern T0* T1193f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].new_capacity */
extern T6 T1327f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].extendible */
extern T1 T1327f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_component_header_validity */
extern void T100f391(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_item_declaration */
extern void T100f534(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_INSTRUCTION.cursor_forth_instruction */
extern T0* T346f16(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_forth_instruction */
extern T0* T628f12(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_forth_instruction */
extern T0* T343f17(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_forth_instruction */
extern T0* T617f13(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.cursor_after_expression */
extern T0* T346f15(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_after_expression */
extern T0* T628f11(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_after_expression */
extern T0* T343f16(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_after_expression */
extern T0* T617f12(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].force_last */
extern void T881f66(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].resize */
extern void T881f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_resize */
extern void T881f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].special_integer_ */
extern T0* T881s41(TC* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_resize */
extern void T881f80(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_resize */
extern void T881f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_resize */
extern void T881f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_modulus */
extern T6 T881f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_capacity */
extern T6 T881f34(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_cursor_declaration */
extern void T100f532(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_INSTRUCTION.new_cursor_expression */
extern T0* T346f13(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.new_cursor_expression */
extern T0* T628f9(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.new_cursor_expression */
extern T0* T343f14(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.new_cursor_expression */
extern T0* T617f10(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.hidden_iteration_component */
extern T0* T882f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T63f486(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2e */
extern T0* T1466c1174(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T63f128(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2e_error */
extern void T42f486(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T42f128(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T879f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T63f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2d */
extern T0* T1466c1173(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2d_error */
extern void T42f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T63f484(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2c */
extern T0* T1466c1172(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2c_error */
extern void T42f484(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T63f483(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2b */
extern T0* T1466c1171(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2b_error */
extern void T42f483(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T63f482(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2a */
extern T0* T1466c1170(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2a_error */
extern void T42f482(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T63f481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_voit1a */
extern T0* T1466c1169(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T63f127(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit1a_error */
extern void T42f481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T42f127(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T852f42(TC* ac, T0* C);
extern T1 T852f42ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T695f61(TC* ac, T0* C, T0* a1);
extern T1 T695f61ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T504f63(TC* ac, T0* C, T0* a1);
extern T1 T504f63ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T726f69(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T729f68(TC* ac, T0* C, T0* a1);
extern T1 T729f68ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T728f71(TC* ac, T0* C, T0* a1);
extern T1 T728f71ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T200f62(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T70f268(TC* ac, T0* C);
/* ET_LIKE_N.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1290f24(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T853f62(TC* ac, T0* C, T0* a1);
extern T1 T853f62ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T184f98(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T2191f11(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T695f69(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T504f71(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1469f8(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T853f76(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T729f79(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T728f82(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T726f80(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T724f8(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T200f74(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T184f119(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T102f127(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T70f265(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T186f22(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T102f111(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T202f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T2190f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T510f22(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T70f244(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.iterable_detachable_separate_any_type */
extern T0* T806f56(TC* ac, T0* C);
/* ET_ECF_SYSTEM.iterable_detachable_separate_any_type */
extern T0* T87f59(TC* ac, T0* C);
/* ET_SYSTEM.iterable_detachable_separate_any_type */
extern T0* T50f58(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.iterable_expression */
extern T0* T346f5(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.iterable_expression */
extern T0* T628f5(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.iterable_expression */
extern T0* T343f6(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.iterable_expression */
extern T0* T617f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_repeat_instruction */
extern void T862f407(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_repeat_instruction_validity */
extern void T862f456(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_instruction_validity */
extern void T862f483(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_repetition_instruction_no_from_validity */
extern void T862f478(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T862f74(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T862f343(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T862f342(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_component_header_validity */
extern void T862f341(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_iteration_item_declaration */
extern void T862f440(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_cursor_declaration */
extern void T862f438(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_repeat_instruction */
extern void T114f1452(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_repeat_instruction */
extern void T114f1479(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_instruction */
extern void T114f1501(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_or_else */
extern void T114f1509(TC* ac, T0* C);
/* ET_C_GENERATOR.print_loop_assertions_and_while_header */
extern void T114f1405(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_after_assertions */
extern void T114f1414(TC* ac, T0* C);
/* ET_C_GENERATOR.print_less_than_or_equal */
extern void T114f1413(TC* ac, T0* C);
/* ET_C_GENERATOR.print_not_equal_to */
extern void T114f1412(TC* ac, T0* C);
/* ET_C_GENERATOR.variant_tag */
extern T0* T114f643(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.replace_substring_all */
extern void T1078f114(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_empty */
extern T1 T1078f72(TC* ac, T0* C);
/* UC_STRING.replace_substring_all */
extern void T919f113(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING.is_empty */
extern T1 T919f72(TC* ac, T0* C);
/* STRING_8.replace_substring_all */
extern void T17f87(TC* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [CHARACTER_8].resized_area_with_default */
extern T0* T15f11(TC* ac, T0* C, T2 a1, T6 a2);
/* ARRAYED_LIST [INTEGER_32].area */
extern T0* T2183f3(TC* ac, T0* C);
/* STRING_8_SEARCHER.substring_index_list_with_deltas */
extern T0* T1029f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAYED_LIST [INTEGER_32].extend */
extern void T2183f9(TC* ac, T0* C, T6 a1);
/* ARRAYED_LIST [INTEGER_32].additional_space */
extern T6 T2183f5(TC* ac, T0* C);
/* ARRAYED_LIST [INTEGER_32].capacity */
extern T6 T2183f6(TC* ac, T0* C);
/* ARRAYED_LIST [INTEGER_32].count */
extern T6 T2183f4(TC* ac, T0* C);
/* ARRAYED_LIST [INTEGER_32].make */
extern T0* T2183c8(TC* ac, T6 a1);
/* STRING_8_SEARCHER.initialize_deltas */
extern void T1029f8(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.has */
extern T1 T1078f68(TC* ac, T0* C, T2 a1);
/* UC_STRING.has */
extern T1 T919f68(TC* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.expression_text */
extern T0* T114f664(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.make */
extern T0* T2052c14(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_BREAK].make */
extern T0* T2209c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_BREAK].set_internal_cursor */
extern void T2209f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BREAK].new_cursor */
extern T0* T2209f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_BREAK].make */
extern T0* T2281c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].make */
extern T0* T2280s1(TC* ac, T6 a1);
/* SPECIAL [ET_BREAK].make_empty */
extern T0* T2279c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].default_create */
extern T0* T2280c3(TC* ac);
/* ET_COMMENT_FINDER.make */
extern T0* T2208c4(TC* ac);
/* DS_ARRAYED_LIST [ET_AST_NODE].make */
extern T0* T2277c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_AST_NODE].set_internal_cursor */
extern void T2277f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AST_NODE].new_cursor */
extern T0* T2277f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AST_NODE].make */
extern T0* T2347c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AST_NODE].make */
extern T0* T2346s1(TC* ac, T6 a1);
/* SPECIAL [ET_AST_NODE].make_empty */
extern T0* T2345c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AST_NODE].default_create */
extern T0* T2346c3(TC* ac);
/* ET_AST_PRETTY_PRINTER.make */
extern void T2052f14p1(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.make_empty */
extern T0* T922c14(TC* ac);
/* KL_STRING_OUTPUT_STREAM.make */
extern void T922f4(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T922c4(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_less_than */
extern void T114f1411(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assertions */
extern void T114f1410(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.assertion_tag */
extern T0* T114f650(TC* ac, T0* C, T0* a1);
extern T1 T114f650ot1(TC* ac, T0* a1);
/* ET_INVARIANTS.assertion */
extern T0* T543f16(TC* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.assertion */
extern T0* T605f10(TC* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.assertion */
extern T0* T608f9(TC* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.are_all_true */
extern T1 T386f16(TC* ac, T0* C);
/* ET_IDENTIFIER.is_true */
extern T1 T307f57(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_true */
extern T1 T683f24(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_true */
extern T1 T682f24(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_true */
extern T1 T681f24(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_true */
extern T1 T680f24(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_true */
extern T1 T679f25(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_true */
extern T1 T678f28(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_true */
extern T1 T677f25(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_true */
extern T1 T675f22(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_true */
extern T1 T761f16(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_true */
extern T1 T617f30(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_true */
extern T1 T343f31(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_true */
extern T1 T760f17(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_true */
extern T1 T759f20(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_true */
extern T1 T757f23(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_true */
extern T1 T745f16(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_true */
extern T1 T1045f17(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_true */
extern T1 T534f19(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_true */
extern T1 T513f22(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_true */
extern T1 T440f26(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_true */
extern T1 T768f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_true */
extern T1 T767f33(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_true */
extern T1 T766f31(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_true */
extern T1 T765f29(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_true */
extern T1 T764f34(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_true */
extern T1 T763f32(TC* ac, T0* C);
/* ET_CALL_AGENT.is_true */
extern T1 T380f21(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_true */
extern T1 T634f20(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_true */
extern T1 T572f23(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_true */
extern T1 T563f23(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_true */
extern T1 T593f17(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_true */
extern T1 T377f18(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_true */
extern T1 T758f19(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_true */
extern T1 T756f16(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_true */
extern T1 T755f18(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_true */
extern T1 T754f17(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_true */
extern T1 T753f16(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_true */
extern T1 T752f16(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_true */
extern T1 T749f18(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_true */
extern T1 T748f16(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_true */
extern T1 T747f16(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_true */
extern T1 T746f16(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_true */
extern T1 T744f21(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_true */
extern T1 T631f21(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_true */
extern T1 T383f20(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_true */
extern T1 T690f20(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_true */
extern T1 T689f20(TC* ac, T0* C);
/* ET_CURRENT.is_true */
extern T1 T301f25(TC* ac, T0* C);
/* ET_RESULT.is_true */
extern T1 T322f22(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_true */
extern T1 T688f21(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T688s6(TC* ac);
/* ET_VOID.is_true */
extern T1 T331f21(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_true */
extern T1 T687f21(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T687s6(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.is_true */
extern T1 T685f22(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_true */
extern T1 T684f22(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_true */
extern T1 T676f23(TC* ac, T0* C);
/* ET_INVARIANTS.are_all_true */
extern T1 T543f15(TC* ac, T0* C);
/* ET_POSTCONDITIONS.are_all_true */
extern T1 T605f11(TC* ac, T0* C);
/* ET_PRECONDITIONS.are_all_true */
extern T1 T608f10(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.are_all_true */
extern T1 T560f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_before_assertions */
extern void T114f1409(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.variant_part */
extern T0* T343f13(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.invariant_part */
extern T0* T343f12(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].force_last */
extern void T945f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].key_storage_put */
extern void T945f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].slots_put */
extern void T945f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].clashes_put */
extern void T945f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].resize */
extern void T945f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].clashes_resize */
extern void T945f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].special_integer_ */
extern T0* T945s32(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].key_storage_resize */
extern void T945f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].item_storage_resize */
extern void T945f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].slots_resize */
extern void T945f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].new_modulus */
extern T6 T945f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].new_capacity */
extern T6 T945f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].item_storage_put */
extern void T945f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].search_position */
extern void T945f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].unset_found_item */
extern void T945f40(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T116f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T116f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T116f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].extendible */
extern T1 T116f7(TC* ac, T0* C, T6 a1);
/* ET_ACROSS_INSTRUCTION.process */
extern void T346f38(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_across_instruction */
extern void T2208f99(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_across_instruction */
extern void T2208f99p1(TC* ac, T0* C, T0* a1);
/* ET_VARIANT.process */
extern void T654f10(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_variant */
extern void T2208f141(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_variant */
extern void T2208f141p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_variant */
extern void T2052f208(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_across_instruction */
extern void T2052f159(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern T0* T81s652(TC* ac);
/* ET_KEYWORD.make_loop */
extern T0* T192c74(TC* ac);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern T0* T81s661(TC* ac);
/* ET_KEYWORD.make_until */
extern T0* T192c83(TC* ac);
/* ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1142f39(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1142f99(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T100f616(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T100f623(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_instruction */
extern void T862f498(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T862f503(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_instruction */
extern void T114f1668(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_instruction */
extern void T114f1672(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T386f24(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_check_instruction */
extern void T2208f98(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_check_instruction */
extern void T2208f98p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_check_instruction */
extern void T2052f158(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1142f38(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T100f617(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T100f624(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T100f624p1(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T885f25(TC* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.is_false */
extern T1 T307f86(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T683f58(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T682f58(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T681f58(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T680f58(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T679f58(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_false */
extern T1 T678f44(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T677f40(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T675f43(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_false */
extern T1 T761f24(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_false */
extern T1 T617f38(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_false */
extern T1 T343f39(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T760f26(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_false */
extern T1 T759f28(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_false */
extern T1 T757f31(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_false */
extern T1 T745f24(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T1045f28(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_false */
extern T1 T534f27(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_false */
extern T1 T513f30(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_false */
extern T1 T440f36(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T768f42(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T767f47(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T766f43(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T765f43(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T764f48(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T763f44(TC* ac, T0* C);
/* ET_CALL_AGENT.is_false */
extern T1 T380f33(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_false */
extern T1 T634f31(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_false */
extern T1 T572f31(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_false */
extern T1 T563f31(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T593f25(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_false */
extern T1 T377f28(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_false */
extern T1 T758f27(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_false */
extern T1 T756f24(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_false */
extern T1 T755f29(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_false */
extern T1 T754f25(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T753f26(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_false */
extern T1 T752f24(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_false */
extern T1 T749f29(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_false */
extern T1 T748f24(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_false */
extern T1 T747f24(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_false */
extern T1 T746f24(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T744f29(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T631f33(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T383f29(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T690f42(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T689f42(TC* ac, T0* C);
/* ET_CURRENT.is_false */
extern T1 T301f35(TC* ac, T0* C);
/* ET_RESULT.is_false */
extern T1 T322f34(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_false */
extern T1 T688f35(TC* ac, T0* C);
/* ET_VOID.is_false */
extern T1 T331f32(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_false */
extern T1 T687f35(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T685f37(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T684f37(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T676f39(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T862f499(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T862f504(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T114f1669(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T114f1673(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T743f20(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_static_call_instruction */
extern void T2208f97(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_static_call_instruction */
extern void T2208f97p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_static_call_instruction */
extern void T2052f157(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_qualified_call */
extern void T2052f88(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL.arguments */
extern T0* T736f1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.qualified_name */
extern T0* T736f2(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.qualified_name */
extern T0* T743f3(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.qualified_name */
extern T0* T631f4(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern T0* T81s627(TC* ac);
/* ET_SYMBOL.make_dot */
extern T0* T286c106(TC* ac);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1142f37(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T100f459(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T100f552(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T100f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f316ot1(TC* ac, T0* a1);
extern T1 T100f316ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T100f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T100f409(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f409ot1(TC* ac, T0* a1);
extern T1 T100f409ot2(TC* ac, T0* a1);
extern T1 T100f409ot3(TC* ac, T0* a1);
/* ET_INVARIANT_KEYWORD.same_feature_name */
extern T1 T280f28(TC* ac, T0* C, T0* a1);
/* ET_INVARIANT_KEYWORD.any_ */
extern T0* T280s29(TC* ac);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern T0* T81s919(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.first */
extern T0* T1892f10(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.first */
extern T0* T349f16(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_ise_runtime_new_tuple_instance_of */
extern T1 T865f51(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_ise_runtime_new_tuple_instance_of */
extern T1 T850f52(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T1060f96(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T1059f96(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T904f92(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T978f94(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_static */
extern void T843f90(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern void T100f408(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f408ot1(TC* ac, T0* a1);
extern T1 T100f408ot2(TC* ac, T0* a1);
extern T1 T100f408ot3(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuno5a_error */
extern void T63f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuno5a */
extern T0* T1466c1189(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T63f135(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno5a_error */
extern void T42f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T42f135(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_implicitly_static */
extern T1 T718f52(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T718f56(TC* ac, T0* C);
/* ET_FEATURE_LIST.item */
extern T0* T907f3(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T717f77(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T716f80(TC* ac, T0* C);
/* ET_DO_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T715f78(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T714f61(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T712f79(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T711f82(TC* ac, T0* C);
/* ET_DO_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T710f80(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T709f56(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T708f54(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T707f81(TC* ac, T0* C);
/* ET_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T706f76(TC* ac, T0* C);
/* ET_POSTCONDITIONS.is_instance_free */
extern T1 T605f13(TC* ac, T0* C);
/* ET_IDENTIFIER.is_instance_free */
extern T1 T307f81(TC* ac, T0* C);
/* ET_IDENTIFIER.is_feature_name */
extern T1 T307f40(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_instance_free */
extern T1 T343f37(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.is_instance_free */
extern T1 T560f14(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T1045f25(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T1892f12(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T349f17(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_instance_free */
extern T1 T2070f13(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_instance_free */
extern T1 T2069f15(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_instance_free */
extern T1 T2068f12(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_instance_free */
extern T1 T1896f10(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_instance_free */
extern T1 T992f14(TC* ac, T0* C);
/* ET_CALL_AGENT.is_instance_free */
extern T1 T380f31(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_instance_free */
extern T1 T1893f9(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_instance_free */
extern T1 T362f13(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_instance_free */
extern T1 T770f13(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_instance_free */
extern T1 T340f45(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.is_instance_free */
extern T1 T769f11(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_instance_free */
extern T1 T1601f8(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_instance_free */
extern T1 T377f26(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T383f27(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_instance_free */
extern T1 T534f25(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.is_instance_free */
extern T1 T660f9(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.is_instance_free */
extern T1 T657f9(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_instance_free */
extern T1 T513f28(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.is_instance_free */
extern T1 T456f9(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.is_instance_free */
extern T1 T453f10(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_instance_free */
extern T1 T440f34(TC* ac, T0* C);
/* ET_CURRENT.is_instance_free */
extern T1 T301f33(TC* ac, T0* C);
/* ET_RESULT.is_instance_free */
extern T1 T322f31(TC* ac, T0* C);
/* ET_VOID.is_instance_free */
extern T1 T331f30(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T768f39(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T767f44(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T766f40(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T765f40(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T764f45(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T763f41(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_instance_free */
extern T1 T761f21(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_instance_free */
extern T1 T760f23(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_instance_free */
extern T1 T759f25(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_instance_free */
extern T1 T758f24(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_instance_free */
extern T1 T757f28(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_instance_free */
extern T1 T756f21(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_instance_free */
extern T1 T755f26(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_instance_free */
extern T1 T754f22(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T753f22(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T752f21(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_instance_free */
extern T1 T749f26(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_instance_free */
extern T1 T748f21(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_instance_free */
extern T1 T747f21(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_instance_free */
extern T1 T746f21(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_instance_free */
extern T1 T745f21(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_instance_free */
extern T1 T744f26(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_instance_free */
extern T1 T690f32(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_instance_free */
extern T1 T689f32(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_instance_free */
extern T1 T688f30(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_instance_free */
extern T1 T687f30(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_instance_free */
extern T1 T685f31(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_instance_free */
extern T1 T684f31(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_instance_free */
extern T1 T683f45(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T682f45(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T681f45(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_instance_free */
extern T1 T680f45(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_instance_free */
extern T1 T679f46(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_instance_free */
extern T1 T678f37(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_instance_free */
extern T1 T677f34(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_instance_free */
extern T1 T676f32(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_instance_free */
extern T1 T675f34(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_instance_free */
extern T1 T634f28(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_instance_free */
extern T1 T631f27(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_instance_free */
extern T1 T617f35(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_instance_free */
extern T1 T572f29(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_instance_free */
extern T1 T563f29(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_instance_free */
extern T1 T593f23(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T718f55(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T717f76(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T716f79(TC* ac, T0* C);
/* ET_DO_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T715f77(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T714f60(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T712f78(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T711f81(TC* ac, T0* C);
/* ET_DO_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T710f79(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T709f55(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T708f53(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T707f80(TC* ac, T0* C);
/* ET_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T706f75(TC* ac, T0* C);
/* ET_PRECONDITIONS.is_instance_free */
extern T1 T608f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin_static */
extern T1 T718f54(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T718s36(TC* ac);
/* ET_EXTERNAL_PROCEDURE.string_ */
extern T0* T718s58(TC* ac);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T718f59(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_implicitly_static */
extern T1 T714f57(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_builtin_static */
extern T1 T714f59(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.string_ */
extern T0* T714s63(TC* ac);
/* ET_UNIQUE_ATTRIBUTE.is_implicitly_static */
extern T1 T709f53(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_implicitly_static */
extern T1 T708f51(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuno5b_error */
extern void T63f500(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuno5b */
extern T0* T1466c1188(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuno5b_error */
extern void T42f500(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T853f49(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T729f49(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T728f52(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T726f49(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T184f77(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T102f78(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_like_current */
extern T1 T200s46(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vuno3a_error */
extern void T63f499(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuno3a */
extern T0* T1466c1187(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T63f134(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno3a_error */
extern void T42f499(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T42f134(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T100f405(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T631f10(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T743f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T631f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T631c37(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T631f41(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T100f584(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T100f608(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T100f583(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T100f314(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T869f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T743f11(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T862f406(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T862f455(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T862f271(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T862f271ot1(TC* ac, T0* a1);
extern T1 T862f271ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T862f272(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T862f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_feature_validity */
extern void T862f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T862f358ot1(TC* ac, T0* a1);
extern T1 T862f358ot2(TC* ac, T0* a1);
extern T1 T862f358ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T862f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T1152f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T862f482(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T862f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T862f481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T862f269(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T114f1473(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T114f1498(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T741f20(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_precursor_instruction */
extern void T2208f96(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_precursor_instruction */
extern void T2208f96p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.process */
extern void T283f29(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_precursor_keyword */
extern void T2208f167(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_keyword */
extern void T2208f71(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_token */
extern void T2208f142(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_precursor_instruction */
extern void T2052f156(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.class_name */
extern T0* T307f117(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.process_precursor_keyword */
extern void T2052f89(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_keyword */
extern void T2052f74(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_token */
extern void T2052f107(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.text */
extern T0* T325f3(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.text */
extern T0* T688f3(TC* ac, T0* C);
/* ET_VOID.text */
extern T0* T331f3(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.text */
extern T0* T313f3(TC* ac, T0* C);
/* ET_FREE_OPERATOR.operator_name */
extern T0* T304f5(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.name */
extern T0* T280f3(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.name */
extern T0* T277f3(TC* ac, T0* C);
/* ET_CURRENT.text */
extern T0* T301f2(TC* ac, T0* C);
/* ET_RESULT.text */
extern T0* T322f2(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.text */
extern T0* T687f2(TC* ac, T0* C);
/* ET_KEYWORD.text */
extern T0* T192f2(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.name */
extern T0* T283f3(TC* ac, T0* C);
/* ET_IDENTIFIER.name */
extern T0* T307f1(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1142f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1142f102(TC* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T182f7(TC* ac, T0* C, T6 a1);
/* ET_PARENT.parent */
extern T0* T181f10(TC* ac, T0* C);
/* ET_PARENT_LIST.item */
extern T0* T182f9(TC* ac, T0* C, T6 a1);
/* ET_PARENT_CLAUSE_LIST.item */
extern T0* T598f3(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T63f614(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T1466c1292(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern T0* T81s576(TC* ac);
/* ET_VALIDITY_ERROR.tokens */
extern T0* T1466s915(TC* ac);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T63f88(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T42f614(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T42f88(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_any_class */
extern T1 T70f162(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T63f613(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T1466c1291(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T42f613(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T718f48(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_deferred */
extern T1 T717s46(TC* ac);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T716f47(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T715f48(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T714f64(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_deferred */
extern T1 T712s48(TC* ac);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T711f51(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T710f50(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T709f58(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T708f56(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T707f57(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T706f51(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T744f40(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T741f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T283f28(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T63f612(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T1466c1290(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T42f612(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1582f16(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.version */
extern T6 T718f31(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.version */
extern T6 T717f28(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.version */
extern T6 T716f31(TC* ac, T0* C);
/* ET_DO_PROCEDURE.version */
extern T6 T715f30(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.version */
extern T6 T714f33(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.version */
extern T6 T712f30(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.version */
extern T6 T711f33(TC* ac, T0* C);
/* ET_DO_FUNCTION.version */
extern T6 T710f32(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.version */
extern T6 T709f26(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.version */
extern T6 T708f25(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.version */
extern T6 T707f30(TC* ac, T0* C);
/* ET_ATTRIBUTE.version */
extern T6 T706f23(TC* ac, T0* C);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1582f15(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1582f19(TC* ac, T0* C);
/* ET_ECF_LIBRARY.master_class */
extern T0* T806f115(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].force_last_new */
extern void T178f41(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T178f49(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].force */
extern void T1086s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].fill_with */
extern void T1087f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].extend */
extern void T1087f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T178f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].force */
extern void T1085s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].fill_with */
extern void T1082f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].extend */
extern void T1082f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_put */
extern void T178f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_put */
extern void T178f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T178f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T178f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].resize */
extern void T178f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T178f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T178s31(TC* ac);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T178f53(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].aliased_resized_area */
extern T0* T1086s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].aliased_resized_area */
extern T0* T1087f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T178f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T1085s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T1082f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T178f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T178f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_resize */
extern void T178f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T178f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T178f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T178f44(TC* ac, T0* C);
/* ET_MASTER_CLASS.make */
extern T0* T189c50(TC* ac, T0* a1, T0* a2);
/* ET_MASTER_CLASS.tokens */
extern T0* T189s22(TC* ac);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found_item */
extern T0* T178f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T178f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found */
extern T1 T178f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search */
extern void T178f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search_position */
extern void T178f43(TC* ac, T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T179f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_class */
extern T0* T87f144(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_class */
extern T0* T50f129(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T63f611(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T1466c1289(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T63f192(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T42f611(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T42f192(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1142f9(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1142f110(TC* ac, T0* C);
/* ET_ECF_LIBRARY.has_master_class */
extern T1 T806f107(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_preparsed */
extern T1 T189f37(TC* ac, T0* C);
/* ET_ECF_SYSTEM.has_master_class */
extern T1 T87f155(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.has_master_class */
extern T1 T50f120(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1142f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T100f458(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T100f551(TC* ac, T0* C, T0* a1);
extern T1 T100f551ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T100f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f339ot1(TC* ac, T0* a1);
extern T1 T100f339ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T100f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T100f500(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T865f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T850f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T866f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].force */
extern void T1900s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].fill_with */
extern void T1899f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].extend */
extern void T1899f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern T0* T866f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1900c3(TC* ac);
/* ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T866f10(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1900s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1899f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T866f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T866f5(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T866f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T866c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1900s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T1899c5(TC* ac, T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T865c56(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T865f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T865f66ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T865s50(TC* ac);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T865f49(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T863c15(TC* ac);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T1295s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T1294c5(TC* ac, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0h_error */
extern void T63f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0h */
extern T0* T1466c1132(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0h_error */
extern void T42f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T741f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T744f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T744f35(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T744c33(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern T0* T81s902(TC* ac);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T283c24(TC* ac);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T283f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T283f27(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T744s11(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T100f582(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T100f607(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T63f380(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T1466c1068(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T42f380(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.first_precursor */
extern T0* T718f28(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.first_precursor */
extern T0* T716f28(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.first_precursor */
extern T0* T714f30(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.first_precursor */
extern T0* T712f27(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.first_precursor */
extern T0* T711f30(TC* ac, T0* C);
/* ET_DO_FUNCTION.first_precursor */
extern T0* T710f29(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.first_precursor */
extern T0* T709f24(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.first_precursor */
extern T0* T708f22(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.first_precursor */
extern T0* T707f27(TC* ac, T0* C);
/* ET_ATTRIBUTE.first_precursor */
extern T0* T706f20(TC* ac, T0* C);
/* ET_DO_PROCEDURE.first_precursor */
extern T0* T715f23(TC* ac, T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T543f33(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.first_precursor */
extern T0* T717f21(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T63f379(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T1466c1067(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T42f379(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T63f517(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T1466c1205(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T63f87(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T42f517(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T42f87(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T862f405(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T862f454(TC* ac, T0* C, T0* a1);
extern T1 T862f454ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T862f290(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T862f290ot1(TC* ac, T0* a1);
extern T1 T862f290ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T862f291(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_SET [ET_QUERY].force_last */
extern void T1151f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].slots_put */
extern void T1151f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].clashes_put */
extern void T1151f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].slots_item */
extern T6 T1151f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].hash_position */
extern T6 T1151f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].resize */
extern void T1151f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_resize */
extern void T1151f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T1151s32(TC* ac);
/* DS_HASH_SET [ET_QUERY].key_storage_resize */
extern void T1151f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_resize */
extern void T1151f61(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].aliased_resized_area */
extern T0* T1173s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].aliased_resized_area */
extern T0* T1171f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_item */
extern T0* T1151f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_item */
extern T0* T1151f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_item */
extern T6 T1151f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].slots_resize */
extern void T1151f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T1151f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_capacity */
extern T6 T1151f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_put */
extern void T1151f56(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_QUERY].force */
extern void T1173s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUERY].fill_with */
extern void T1171f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].extend */
extern void T1171f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].search_position */
extern void T1151f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].key_equality_tester */
extern T0* T1151f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T1151f43(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T862f411(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T862f480(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [ET_PROCEDURE].force_last */
extern void T1150f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_put */
extern void T1150f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].clashes_put */
extern void T1150f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].slots_item */
extern T6 T1150f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].hash_position */
extern T6 T1150f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].resize */
extern void T1150f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_resize */
extern void T1150f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T1150s32(TC* ac);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_resize */
extern void T1150f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_resize */
extern void T1150f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_item */
extern T0* T1150f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_item */
extern T0* T1150f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_item */
extern T6 T1150f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_resize */
extern void T1150f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T1150f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_capacity */
extern T6 T1150f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_put */
extern void T1150f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].search_position */
extern void T1150f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].key_equality_tester */
extern T0* T1150f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T1150f43(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T862f492(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T114f1472(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T114f1497(TC* ac, T0* C, T0* a1);
/* ET_CLASS.ancestors_built */
extern T1 T70f72(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.process */
extern void T450f15(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_debug_instruction */
extern void T2208f95(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_debug_instruction */
extern void T2208f95p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_debug_instruction */
extern void T2052f155(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern T0* T81s659(TC* ac);
/* ET_KEYWORD.make_debug */
extern T0* T192c81(TC* ac);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1142f35(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T100f457(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T100f550(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T100f550p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T862f404(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T862f453(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T114f1447(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T114f1475(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T537f18(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inspect_instruction */
extern void T2208f94(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inspect_instruction */
extern void T2208f94p1(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.process */
extern void T666f14(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_when_part_list */
extern void T2208f144(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_when_part_list */
extern void T2208f144p1(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART.process */
extern void T663f11(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_when_part */
extern void T2208f175(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_when_part */
extern void T2208f175p1(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.process */
extern void T398f18(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_choice_list */
extern void T2208f193(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_choice_list */
extern void T2208f193p1(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.item */
extern T0* T398f7(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_choice_list */
extern void T2052f237(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.is_empty */
extern T1 T398f12(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.process_when_part */
extern void T2052f228(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern T0* T81s655(TC* ac);
/* ET_KEYWORD.make_then */
extern T0* T192c77(TC* ac);
/* ET_WHEN_PART_LIST.item */
extern T0* T666f9(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_when_part_list */
extern void T2052f210(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_inspect_instruction */
extern void T2052f154(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.is_empty */
extern T1 T666f10(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern T0* T81s672(TC* ac);
/* ET_KEYWORD.make_inspect */
extern T0* T192c94(TC* ac);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1142f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1142f101(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1142f109(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T100f456(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T100f549(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.merge_scope */
extern void T885f14(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.upper */
extern T0* T307f89(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.upper */
extern T0* T1045f31(TC* ac, T0* C);
/* ET_CHOICE_RANGE.upper */
extern T0* T739f2(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T690f37(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T689f37(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T683f53(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T682f53(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T681f53(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T680f53(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T679f53(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T675f38(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T631f31(TC* ac, T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T307f87(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_range */
extern T1 T1045f29(TC* ac, T0* C);
/* ET_CHOICE_RANGE.is_range */
extern T1 T739s6(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T690f35(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T689f35(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T683f51(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T682f51(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T681f51(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T680f51(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T679f51(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T675f36(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T631f29(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T63f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T1466c1106(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T63f102(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T42f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T42f102(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T678f43(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T677f39(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T688f34(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T687f34(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T685f36(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T684f36(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T676f38(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_character_constant */
extern T1 T690s41(TC* ac);
/* ET_C1_CHARACTER_CONSTANT.is_character_constant */
extern T1 T689s41(TC* ac);
/* ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T683f57(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T682f57(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T681f57(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T680f57(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T679f57(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_constant */
extern T1 T675s42(TC* ac);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T678f42(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T677f38(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T688f33(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T687f33(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T685f35(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T684f35(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T676f37(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T690f40(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T689f40(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_constant */
extern T1 T683s56(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_constant */
extern T1 T682s56(TC* ac);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_constant */
extern T1 T681s56(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_constant */
extern T1 T680s56(TC* ac);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_constant */
extern T1 T679s56(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T675f41(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T63f417(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T1466c1105(TC* ac, T0* a1, T0* a2, T0* a3);
extern T1 T1466f1105ot1(TC* ac, T0* a1);
extern T1 T1466f1105ot2(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T42f417(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T100f103(TC* ac, T0* C, T0* a1);
extern T1 T100f103ot1(TC* ac, T0* a1);
extern T1 T100f103ot2(TC* ac, T0* a1);
extern T1 T100f103ot3(TC* ac, T0* a1);
extern T1 T100f103ot4(TC* ac, T0* a1);
extern T1 T100f103ot5(TC* ac, T0* a1);
extern T1 T100f103ot6(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T100f120(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T689c54(TC* ac, T3 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T689f59(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T100f119(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T679c70(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T679f73(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T1045f26(TC* ac, T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T307f88(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.lower */
extern T0* T1045f30(TC* ac, T0* C);
/* ET_CHOICE_RANGE.lower */
extern T0* T739f1(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T690f36(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T689f36(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T683f52(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T682f52(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T681f52(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T680f52(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T679f52(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T675f37(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T631f30(TC* ac, T0* C);
/* ET_CHOICE_LIST.choice */
extern T0* T398f6(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T63f416(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T1466c1104(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T63f101(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T42f416(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T42f101(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T862f403(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T862f452(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.choice_constant */
extern T0* T862f84(TC* ac, T0* C, T0* a1);
extern T1 T862f84ot1(TC* ac, T0* a1);
extern T1 T862f84ot2(TC* ac, T0* a1);
extern T1 T862f84ot3(TC* ac, T0* a1);
extern T1 T862f84ot4(TC* ac, T0* a1);
extern T1 T862f84ot5(TC* ac, T0* a1);
extern T1 T862f84ot6(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.character_choice_constant */
extern T0* T862f97(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.integer_choice_constant */
extern T0* T862f96(TC* ac, T0* C);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T114f1450(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T114f1477(TC* ac, T0* C, T0* a1);
extern T1 T114f1477ot1(TC* ac, T0* a1);
extern T1 T114f1477ot2(TC* ac, T0* a1);
extern T1 T114f1477ot3(TC* ac, T0* a1);
extern T1 T114f1477ot4(TC* ac, T0* a1);
extern T1 T114f1477ot5(TC* ac, T0* a1);
extern T1 T114f1477ot6(TC* ac, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.value */
extern T11 T683f4(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value */
extern T11 T682f4(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value */
extern T11 T681f4(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value */
extern T11 T680f4(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value */
extern T11 T679f3(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T63f244(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_warning_message */
extern void T42f244(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character_8 */
extern void T114f1291(TC* ac, T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T230f11(TC* ac, T0* C, T10 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T230f12(TC* ac, T0* C, T11 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T922f12(TC* ac, T0* C, T10 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T922f13(TC* ac, T0* C, T11 a1);
/* ET_C3_CHARACTER_CONSTANT.value */
extern T3 T675f3(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.value */
extern T3 T690f2(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.value */
extern T3 T689f2(TC* ac, T0* C);
/* ET_C_GENERATOR.print_integer_value */
extern void T114f1295(TC* ac, T0* C, T11 a1, T1 a2, T0* a3, T1 a4);
/* INTEGER_32.abs */
extern T6 T6f34(TC* ac, T6 volatile* C);
/* INTEGER_32.abs_ref */
extern T6 T6f35(TC* ac, T6 volatile* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T683f43(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T682f43(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T681f43(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T680f43(TC* ac, T0* C);
/* ET_C_GENERATOR.choice_constant */
extern T0* T114f627(TC* ac, T0* C, T0* a1);
extern T1 T114f627ot1(TC* ac, T0* a1);
extern T1 T114f627ot2(TC* ac, T0* a1);
extern T1 T114f627ot3(TC* ac, T0* a1);
extern T1 T114f627ot4(TC* ac, T0* a1);
extern T1 T114f627ot5(TC* ac, T0* a1);
/* ET_WHEN_PART.position */
extern T0* T663f8(TC* ac, T0* C);
/* ET_CHOICE_LIST.position */
extern T0* T398f11(TC* ac, T0* C);
/* ET_CHOICE_RANGE.position */
extern T0* T739f10(TC* ac, T0* C);
/* ET_CHOICE_LIST.first */
extern T0* T398f13(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.process */
extern void T516f20(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_if_instruction */
extern void T2208f93(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_if_instruction */
extern void T2208f93p1(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.process */
extern void T462f13(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_elseif_part_list */
extern void T2208f143(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_elseif_part_list */
extern void T2208f143p1(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T459f11(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_elseif_part */
extern void T2208f162(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_elseif_part */
extern void T2208f162p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_elseif_part */
extern void T2052f220(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern T0* T81s664(TC* ac);
/* ET_KEYWORD.make_elseif */
extern T0* T192c86(TC* ac);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1142f120(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T462f9(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_elseif_part_list */
extern void T2052f196(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_if_instruction */
extern void T2052f153(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern T0* T81s648(TC* ac);
/* ET_KEYWORD.make_if */
extern T0* T192c70(TC* ac);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1142f33(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1142f100(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T100f455(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T100f548(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T862f402(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T862f451(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T114f1448(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T114f1476(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.position */
extern T0* T459f8(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.process */
extern void T738f27(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_create_instruction */
extern void T2208f92(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_create_instruction */
extern void T2208f92p1(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL.process */
extern void T736f8(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_call */
extern void T2208f128(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_call */
extern void T2208f128p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_create_instruction */
extern void T2052f152(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_writable */
extern void T2052f167(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.greater_than_symbol */
extern T0* T81s890(TC* ac);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T328c142(TC* ac);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T328f159(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.less_than_symbol */
extern T0* T81s889(TC* ac);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T328c143(TC* ac);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1142f32(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T100f454(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T100f547(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkin5ga_error */
extern void T63f516(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkin5ga */
extern T0* T1466c1204(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkin5g_error */
extern T1 T63f144(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkin5ga_error */
extern void T42f516(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkin5g_error */
extern T1 T42f144(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T100f581(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T63f528(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T1466c1216(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T42f528(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_dotnet_creation_procedure_call_instruction_validity */
extern void T100f606(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_instruction_validity */
extern void T100f605(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5, T0* a6);
extern T1 T100f605ot1(TC* ac, T0* a1);
extern T1 T100f605ot2(TC* ac, T0* a1);
extern T1 T100f605ot3(TC* ac, T0* a1);
extern T1 T100f605ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T100f612(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T100f614(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.add_name */
extern void T885f17(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_attribute */
extern void T885f21(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T885f20(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T885f19(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T768f29(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T767f37(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T766f33(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T765f31(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T764f38(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T763f34(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.add_result */
extern void T885f15(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_validity */
extern void T100f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T695f49(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T504f51(TC* ac, T0* C);
/* ET_LIKE_N.is_like_current */
extern T1 T1290f25(TC* ac, T0* C);
/* ET_CLASS.is_like_current */
extern T1 T70f222(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_creation_procedure_call_validity */
extern void T100f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_parameter_creation_vape_validity */
extern void T100f595(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape2b_error */
extern void T63f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape2b */
extern T0* T1466c1225(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape2b_error */
extern void T42f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLIENT.reset */
extern void T190f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T63f520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T1466c1208(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T63f147(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T42f520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T42f147(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T422f8(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T504f27(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_no_creation_procedure_call_validity */
extern void T100f559(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T63f519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T1466c1207(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T63f146(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T42f519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T42f146(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T63f518(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T1466c1206(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T63f145(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T42f518(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T42f145(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T100f558(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T869f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T869f25ot1(TC* ac, T0* a1);
extern T1 T869f25ot2(TC* ac, T0* a1);
extern T1 T869f25ot3(TC* ac, T0* a1);
extern T1 T869f25ot4(TC* ac, T0* a1);
extern T1 T869f25ot5(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T63f589(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T1466c1269(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T63f181(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T42f589(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T42f181(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.current_system */
extern T0* T869f19(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.older_ise_version */
extern T1 T66f45(TC* ac, T0* C, T0* a1);
/* UT_VERSION.is_less */
extern T1 T56f14(TC* ac, T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T56f9(TC* ac, T0* C);
/* UT_VERSION.has_build */
extern T1 T56f8(TC* ac, T0* C);
/* UT_VERSION.revision */
extern T6 T56f7(TC* ac, T0* C);
/* UT_VERSION.has_revision */
extern T1 T56f6(TC* ac, T0* C);
/* UT_VERSION.minor */
extern T6 T56f5(TC* ac, T0* C);
/* UT_VERSION.has_minor */
extern T1 T56f13(TC* ac, T0* C);
/* UT_VERSION.major */
extern T6 T56f12(TC* ac, T0* C);
/* UT_VERSION.has_major */
extern T1 T56f11(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.older_ise_version */
extern T1 T858f41(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern T0* T869s18(TC* ac);
/* UT_VERSION.make */
extern T0* T56c19(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T63f588(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T1466c1268(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T42f588(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T422f7(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T422f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T100f118(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_class_interface_error_only */
extern void T869f39(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T100f557(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T63f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T1466c1227(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.ast_position */
extern T0* T1466f127(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T63f154(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T42f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T42f154(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T695f26(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T695f27(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f27ot1(TC* ac, T0* a1);
extern T1 T695f27ot2(TC* ac, T0* a1);
extern T1 T695f27ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T853f51(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f51ot1(TC* ac, T0* a1);
extern T1 T853f51ot2(TC* ac, T0* a1);
extern T1 T853f51ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T729f51(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f51ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T728f54(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f54ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T726f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T200f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T70f215(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T70f220(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T184f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T184f85(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T102f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T102f94(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T504f26(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f26ot1(TC* ac, T0* a1);
extern T1 T504f26ot2(TC* ac, T0* a1);
extern T1 T504f26ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T504f25(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T726f48(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T729f48(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T728f51(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T200f45(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type */
extern T0* T1290f19(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T1290f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type */
extern T0* T70f209(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T853f48(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T184f76(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T102f77(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.first */
extern T0* T852f45(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T100f577(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f577ot1(TC* ac, T0* a1);
extern T1 T100f577ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T100f602(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0c_error */
extern void T63f527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0c */
extern T0* T1466c1215(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0c_error */
extern void T42f527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T63f526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T1466c1214(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T63f148(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T42f526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T42f148(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T63f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T1466c1213(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T63f149(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T42f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T42f149(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T63f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T1466c1212(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T42f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T63f523(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T1466c1211(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T42f523(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T63f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T1466c1210(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T42f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T100f601(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T100f600(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T100f373(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T768f14(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T767f16(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T766f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.result_index */
extern T6 T765f16(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.result_index */
extern T6 T764f18(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.result_index */
extern T6 T763f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T63f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T1466c1083(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T42f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T63f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T1466c1100(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T42f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T738f14(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T862f401(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T862f450(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T862f479(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_dotnet_creation_procedure_call_instruction_validity */
extern void T862f491(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_instruction_validity */
extern void T862f490(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5, T0* a6);
extern T1 T862f490ot1(TC* ac, T0* a1);
extern T1 T862f490ot2(TC* ac, T0* a1);
extern T1 T862f490ot3(TC* ac, T0* a1);
extern T1 T862f490ot4(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T862f495(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_validity */
extern void T862f462(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_formal_creation_procedure_call_validity */
extern void T862f461(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_formal_parameter_creation_vape_validity */
extern void T862f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_no_creation_procedure_call_validity */
extern void T862f460(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T862f459(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.is_type_valid */
extern T1 T862f95(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T862f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T1152f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T862f475(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T862f475ot1(TC* ac, T0* a1);
extern T1 T862f475ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T862f489(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T862f488(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T862f487(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T114f1470(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T114f1496(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T114f1508(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_once_value */
extern void T114f1406(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_IDENTIFIER.is_result */
extern T1 T307f51(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_creation_procedure_call */
extern void T114f1537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_creation_procedure_call */
extern T0* T114f1537ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_creation_procedure_call */
extern void T114f875(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T114f915(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_adapted_separate_creation_procedure_call */
extern void T114f1536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_separate_creation_procedure_call */
extern T0* T114f1536ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_creation_procedure_call */
extern void T114f874(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BANG_INSTRUCTION.process */
extern void T735f25(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_bang_instruction */
extern void T2208f91(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_bang_instruction */
extern void T2208f91p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_bang_instruction */
extern void T2052f151(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern T0* T81s621(TC* ac);
/* ET_KEYWORD.make_create */
extern T0* T192c67(TC* ac);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1142f31(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T100f453(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T100f546(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T862f400(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T862f449(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T114f1469(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T114f1495(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T733f23(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_loop_instruction */
extern void T2208f90(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_loop_instruction */
extern void T2208f90p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_loop_instruction */
extern void T2052f150(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern T0* T81s651(TC* ac);
/* ET_KEYWORD.make_from */
extern T0* T192c73(TC* ac);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1142f30(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T733f15(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T100f452(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T100f545(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T862f399(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T862f448(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T114f1468(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T114f1494(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T732f15(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_assignment_attempt */
extern void T2208f89(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_assignment_attempt */
extern void T2208f89p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_assignment_attempt */
extern void T2052f149(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1142f29(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T100f451(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T100f544(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T100f579(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T100f604(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T63f515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T1466c1203(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T63f143(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T42f515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T42f143(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T852f44(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.newer_or_same_ise_version */
extern T1 T66f46(TC* ac, T0* C, T0* a1);
/* UT_VERSION.is_greater_equal */
extern T1 T56f15(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.newer_or_same_ise_version */
extern T1 T858f48(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T100s116(TC* ac);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T862f398(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T862f447(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T862f477(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern T0* T862s94(TC* ac);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T114f1467(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T114f1493(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.is_empty */
extern T1 T935f9(TC* ac, T0* C);
/* ET_ASSIGNMENT.process */
extern void T731f17(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_assignment */
extern void T2208f88(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_assignment */
extern void T2208f88p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_assignment */
extern void T2052f148(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1142f28(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T100f450(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T100f543(TC* ac, T0* C, T0* a1);
extern T1 T100f543ot1(TC* ac, T0* a1);
extern T1 T100f543ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T100f578(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T100f603(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_name */
extern void T885f18(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T885f24(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T885f23(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T885f22(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0b_error */
extern void T63f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0b */
extern T0* T1466c1202(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T63f142(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0b_error */
extern void T42f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T42f142(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_result */
extern void T885f16(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_type_attached */
extern T1 T726f72(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached */
extern T1 T853f68(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached */
extern T1 T729f71(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached */
extern T1 T728f74(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_attached */
extern T1 T200f66(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T63f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T1466c1201(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T42f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ASSIGNMENT.set_source */
extern void T731f18(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T862f397(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T862f446(TC* ac, T0* C, T0* a1);
extern T1 T862f446ot1(TC* ac, T0* a1);
extern T1 T862f446ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T862f476(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T114f1466(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T114f1395(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T730f24(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_assigner_instruction */
extern void T2208f87(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_assigner_instruction */
extern void T2208f87p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_assigner_instruction */
extern void T2052f147(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1142f27(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T100f449(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T100f542(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T100f576(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar3gb_error */
extern void T63f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vuar3gb */
extern T0* T1466c1200(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vuar3gb_error */
extern void T42f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T63f511(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T1466c1199(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T63f141(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T42f511(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T42f141(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T730f26(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T63f510(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T1466c1198(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T63f140(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T42f510(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T42f140(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T730f25(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.assigner */
extern T0* T714f5(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.assigner */
extern T0* T712f4(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.assigner */
extern T0* T711f4(TC* ac, T0* C);
/* ET_DO_FUNCTION.assigner */
extern T0* T710f4(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.assigner */
extern T0* T709f3(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.assigner */
extern T0* T708f4(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.assigner */
extern T0* T707f3(TC* ac, T0* C);
/* ET_ATTRIBUTE.assigner */
extern T0* T706f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_call_info */
extern void T100f353(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].force_last */
extern void T876f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].force */
extern void T1314s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].fill_with */
extern void T1316f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].extend */
extern void T1316f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].resize */
extern void T876f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].aliased_resized_area */
extern T0* T1314s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].aliased_resized_area */
extern T0* T1316f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].new_capacity */
extern T6 T876f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].extendible */
extern T1 T876f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T100f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f233ot1(TC* ac, T0* a1);
extern T1 T100f233ot2(TC* ac, T0* a1);
extern T1 T100f233ot3(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0f_error */
extern void T63f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgmc0f */
extern T0* T1466c1043(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgmc0f_error */
extern void T42f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgmc0e_error */
extern void T63f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0e */
extern T0* T1466c1042(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0e_error */
extern void T42f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T2070f24(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T755f20(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.parenthesis_call */
extern T0* T749f20(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.parenthesis_call */
extern T0* T1565f8(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T337f138(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T100f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T100f396(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T874f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].force */
extern void T1307s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].fill_with */
extern void T1308f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].extend */
extern void T1308f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T874f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T1307s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T1308f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T874f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T874f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T258f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T258f13(TC* ac, T0* C);
/* ET_TUPLE_TYPE.add_overloaded_queries */
extern void T184f137(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.add_overloaded_queries */
extern void T1910f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.add_overloaded_queries */
extern void T102f143(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_overloaded_queries */
extern void T70f351(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T773f19(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T773f19ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_names */
extern T0* T714f90(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T714f92(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_names */
extern T0* T712f81(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T712f83(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_names */
extern T0* T711f84(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T711f86(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_alias_names */
extern T0* T710f82(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T710f84(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_names */
extern T0* T709f82(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T709f84(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_names */
extern T0* T708f81(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T708f83(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_alias_names */
extern T0* T707f83(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T707f84(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_alias_names */
extern T0* T706f78(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T706f80(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T714f89(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T712f80(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T711f83(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T710f81(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T709f81(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T708f80(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T707f82(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T706f77(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T258f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T258f24(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T258f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T258f10(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T100f105(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T874f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].keep_head */
extern void T1308f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].set_count */
extern void T1308f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T874f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T1309f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_after */
extern void T1309f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T874f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T258c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].set_internal_cursor */
extern void T258f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T258f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T1172c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T1173s1(TC* ac, T6 a1);
/* SPECIAL [ET_QUERY].make_empty */
extern T0* T1171c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T1173c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T874f9(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T755f38(TC* ac, T0* C, T1 a1);
/* ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T377f20(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_call_info */
extern T0* T100f99(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].remove_last */
extern void T876f15(TC* ac, T0* C);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].keep_head */
extern void T1316f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_count */
extern void T1316f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].move_last_cursors_after */
extern void T876f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_next_cursor */
extern void T1317f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_after */
extern void T1317f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].last */
extern T0* T876f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].is_empty */
extern T1 T876f9(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T862f396(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T862f445(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T862f474(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.free_call_info */
extern void T862f304(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T862f188(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T862f188ot1(TC* ac, T0* a1);
extern T1 T862f188ot2(TC* ac, T0* a1);
extern T1 T862f188ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T862f263(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T862f346(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T862f85(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.new_call_info */
extern T0* T862f80(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T114f1465(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T114f1492(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T325f26(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_retry_instruction */
extern void T2208f86(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_retry_instruction */
extern void T2052f146(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.retry_keyword */
extern T0* T81s1564(TC* ac);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T325c22(TC* ac);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T325f24(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T325f25(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T325s7(TC* ac);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1142f26(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T100f615(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T100f622(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T63f587(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T1466c1267(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T63f180(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T42f587(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T42f180(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T862f497(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T862f502(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T114f1667(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T114f1671(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T740f22(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_call_instruction */
extern void T2208f85(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_call_instruction */
extern void T2208f85p1(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_regular_feature_call */
extern void T2208f131(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_qualified_call_instruction */
extern void T2052f145(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_qualified_regular_feature_call */
extern void T2052f87(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1142f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T100f448(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T862f395(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_instruction */
extern void T114f1471(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.process */
extern void T569f14(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_manifest_string_list */
extern void T2208f83(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_manifest_string_list */
extern void T2208f83p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_manifest_string_list */
extern void T2052f201(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.process */
extern void T501f16(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_argument_list */
extern void T2208f82(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_argument_list */
extern void T2208f82p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_formal_argument_list */
extern void T2052f197(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.is_last_entity */
extern T1 T495f9(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.is_last_entity */
extern T1 T1467f9(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.process */
extern void T362f20(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_agent_argument_operand_list */
extern void T2208f81(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_agent_argument_operand_list */
extern void T2208f81p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_agent_argument_operand_list */
extern void T2052f191(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T2070f30(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_to_expression */
extern void T2208f78(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_to_expression */
extern void T2208f78p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_convert_to_expression */
extern void T2052f177(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1142f117(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T886f65(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T880f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T100f631(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T100f634(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T862f516(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T862f519(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T114f1677(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T114f1680(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.process */
extern void T2069f33(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_from_expression */
extern void T2208f77(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_from_expression */
extern void T2208f77p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_convert_from_expression */
extern void T2052f176(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1142f116(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T886f64(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T880f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T100f630(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T100f633(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T100f375(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T63f462(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T1466c1150(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T42f462(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_dotnet_creation_procedure_call_expression_validity */
extern void T100f515(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_expression_validity */
extern void T100f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T100f514ot1(TC* ac, T0* a1);
extern T1 T100f514ot2(TC* ac, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T2069f27(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.type_position */
extern T0* T440f30(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T440f29(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.creation_call */
extern T0* T2069f26(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T862f515(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T862f518(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T862f326(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_dotnet_creation_procedure_call_expression_validity */
extern void T862f423(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_expression_validity */
extern void T862f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T862f422ot1(TC* ac, T0* a1);
extern T1 T862f422ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_convert_from_expression */
extern void T114f1676(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_from_expression */
extern void T114f1679(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_expression */
extern void T114f818(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T2068f25(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_builtin_expression */
extern void T2208f76(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_builtin_expression */
extern void T2208f76p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_convert_builtin_expression */
extern void T2052f175(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1142f115(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T886f63(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T880f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T100f629(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T100f632(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T862f514(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T862f517(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_builtin_expression */
extern void T114f1675(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_builtin_expression */
extern void T114f1678(TC* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1896f25(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_infix_cast_expression */
extern void T2208f75(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_infix_cast_expression */
extern void T2208f75p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_infix_cast_expression */
extern void T2052f91(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1142f107(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T886f61(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T880f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T100f620(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T100f627(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T862f512(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T862f513(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T114f1670(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T114f1674(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.process */
extern void T992f26(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inlined_expression */
extern void T2208f74(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_inlined_expression */
extern void T886f62(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_inlined_expression */
extern void T880f68(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_inlined_expression */
extern void T2052f92(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inlined_expression */
extern void T1142f106(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inlined_expression */
extern void T100f304(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inlined_expression */
extern void T862f260(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.process */
extern void T1892f24(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unfolded_tuple_actual_argument_list */
extern void T2208f73(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unfolded_tuple_actual_argument_list */
extern void T2208f73p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_unfolded_tuple_actual_argument_list */
extern void T2052f90(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unfolded_tuple_actual_argument_list */
extern void T1142f114(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.process */
extern void T349f28(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_actual_argument_list */
extern void T2208f72(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_actual_argument_list */
extern void T2208f72p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_actual_argument_list */
extern void T2052f190(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_EXPRESSION.process */
extern void T1471f6(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_keyword_expression */
extern void T2208f184(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_keyword_expression */
extern void T2208f184p1(TC* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.process */
extern void T443f8(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_creation_region */
extern void T2208f169(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_creation_region */
extern void T2208f169p1(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.add_excluded_node */
extern void T2208f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AST_NODE].force_last */
extern void T2277f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AST_NODE].force */
extern void T2346s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AST_NODE].fill_with */
extern void T2345f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AST_NODE].extend */
extern void T2345f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AST_NODE].resize */
extern void T2277f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AST_NODE].aliased_resized_area */
extern T0* T2346s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_AST_NODE].aliased_resized_area */
extern T0* T2345f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AST_NODE].new_capacity */
extern T6 T2277f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AST_NODE].extendible */
extern T1 T2277f8(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern T0* T81s629(TC* ac);
/* ET_SYMBOL.make_comma */
extern T0* T286c107(TC* ac);
/* ET_AST_PRETTY_PRINTER.tokens */
extern T0* T2052s12(TC* ac);
/* ET_TYPE_CONSTRAINT_LIST.process */
extern void T645f18(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_type_constraint_list */
extern void T2208f146(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_type_constraint_list */
extern void T2208f146p1(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.item */
extern T0* T645f7(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_type_constraint_list */
extern void T2052f207(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.current_type_constraint */
extern T0* T102f107(TC* ac, T0* C);
/* ET_TUPLE_TYPE.current_type_constraint */
extern T0* T184f94(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.current_type_constraint */
extern T0* T853f56(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.current_type_constraint */
extern T0* T729f58(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.current_type_constraint */
extern T0* T728f61(TC* ac, T0* C);
/* ET_LIKE_FEATURE.current_type_constraint */
extern T0* T726f58(TC* ac, T0* C);
/* ET_LIKE_CURRENT.current_type_constraint */
extern T0* T200f58(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.current_type_constraint */
extern T0* T696f5(TC* ac, T0* C);
/* ET_CLASS.current_type_constraint */
extern T0* T70f241(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.process */
extern void T696f12(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_type_rename_constraint */
extern void T2208f117(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_type_rename_constraint */
extern void T2208f117p1(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.process */
extern void T425f15(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_constraint_rename_list */
extern void T2208f168(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_constraint_rename_list */
extern void T2208f168p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_constraint_rename_list */
extern void T2052f226(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_constraint_rename */
extern void T2052f233(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_type_rename_constraint */
extern void T2052f212(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_constrained_formal_parameter */
extern void T2052f121(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_name_of_formal_parameter */
extern void T2052f123(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.name */
extern T0* T695f8(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.name */
extern T0* T504f1(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T853f1(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.process_formal_parameter_type */
extern void T2052f83(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_mark */
extern T0* T695f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.type_mark */
extern T0* T504f4(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_mark */
extern T0* T853f2(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1963f17(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1962f20(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1961f17(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1960f17(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1149f20(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1146f20(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1145f31(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1140f23(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1139f23(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1138f33(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1137f23(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1136f20(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1135f23(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1124f46(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1123f24(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T869f45(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T504f97(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_parameter */
extern void T2208f109(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_parameter */
extern void T2208f109p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_formal_parameter */
extern void T2052f120(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1963f16(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1962f19(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1961f16(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1960f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1149f19(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1146f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1145f30(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1140f22(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1139f22(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1138f32(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1137f22(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1136f19(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1135f22(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1124f45(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1123f23(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T869f44(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.process */
extern void T1469f15(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_labeled_comma_actual_parameter */
extern void T2208f183(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_labeled_comma_actual_parameter */
extern void T2208f183p1(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.process */
extern void T724f15(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_labeled_actual_parameter */
extern void T2208f180(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_labeled_actual_parameter */
extern void T2208f180p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_actual_parameter_list */
extern void T2052f180(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_last_entity */
extern T1 T695f81(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_last_entity */
extern T1 T504f83(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_last_entity */
extern T1 T726f92(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_last_entity */
extern T1 T853f84(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_last_entity */
extern T1 T729f89(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_last_entity */
extern T1 T728f92(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.is_last_entity */
extern T1 T1469f10(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.is_last_entity */
extern T1 T724f10(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_last_entity */
extern T1 T184f125(TC* ac, T0* C);
/* ET_CLASS.is_last_entity */
extern T1 T70f271(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_last_entity */
extern T1 T200f86(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_last_entity */
extern T1 T102f131(TC* ac, T0* C);
/* ET_COMMENT.make */
extern T0* T686c2(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_tuple_type */
extern void T2052f79(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.folded_actual_parameters */
extern T0* T2191f19(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.folded_actual_parameters */
extern T0* T202f18(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.folded_actual_parameters */
extern T0* T2190f17(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.folded_actual_parameters */
extern T0* T510f27(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.folded_actual_parameters */
extern T0* T186f27(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1963f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1963f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1963f15(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_flattening_error */
extern T1 T189f47(TC* ac, T0* C);
/* ET_MASTER_CLASS.features_flattened */
extern T1 T189f46(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1962f10(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1962f16(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1961f6(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1961f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1961f15(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_ancestors_error */
extern T1 T189f45(TC* ac, T0* C);
/* ET_MASTER_CLASS.ancestors_built */
extern T1 T189f44(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1960f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1960f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS.has_syntax_error */
extern T1 T70f148(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_syntax_error */
extern T1 T189f43(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_parsed */
extern T1 T189f42(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1960f15(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1149f11(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_tuple_type_validity */
extern void T1149f18(TC* ac, T0* C, T0* a1);
extern T1 T1149f18ot1(TC* ac, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1139f14(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1139f21(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1123f13(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1123f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T63f607(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T1466c1285(TC* ac, T0* a1, T0* a2);
/* ET_COMPRESSED_POSITION.to_text */
extern T0* T811f9(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.append_to_string */
extern void T811f14(TC* ac, T0* C, T0* a1);
/* ET_COMPRESSED_POSITION.integer_ */
extern T0* T811s10(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.position_to_text */
extern T0* T340f36(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_position_to_string */
extern void T340f105(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T340s41(TC* ac);
/* ET_IDENTIFIER.position_to_text */
extern T0* T307f77(TC* ac, T0* C);
/* ET_IDENTIFIER.append_position_to_string */
extern void T307f143(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T307s79(TC* ac);
/* ET_SYMBOL_OPERATOR.position_to_text */
extern T0* T328f111(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_position_to_string */
extern void T328f162(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T328s112(TC* ac);
/* ET_BRACKET_SYMBOL.position_to_text */
extern T0* T337f103(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_position_to_string */
extern void T337f139(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T337s104(TC* ac);
/* ET_SYMBOL.position_to_text */
extern T0* T286f91(TC* ac, T0* C);
/* ET_SYMBOL.append_position_to_string */
extern void T286f126(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T286s92(TC* ac);
/* ET_KEYWORD.position_to_text */
extern T0* T192f42(TC* ac, T0* C);
/* ET_KEYWORD.append_position_to_string */
extern void T192f105(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T192s43(TC* ac);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T63f188(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T42f607(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T42f188(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1140f18(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1140f20(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1124f38(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1124f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER1.add_base_type_dependency */
extern void T1124f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER1.add_n_items_to_list */
extern void T1124f29(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].force_last */
extern void T1694f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].force */
extern void T1990s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].fill_with */
extern void T1989f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].extend */
extern void T1989f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].resize */
extern void T1694f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1990s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1989f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].new_capacity */
extern T6 T1694f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].extendible */
extern T1 T1694f8(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.make */
extern T0* T1910c15(TC* ac, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.renames */
extern T0* T200f78(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.renames */
extern T0* T853f67(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.renames */
extern T0* T729f65(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.renames */
extern T0* T728f68(TC* ac, T0* C);
/* ET_LIKE_FEATURE.renames */
extern T0* T726f65(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.renames */
extern T0* T696f2(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T184f75(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T695f52(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T504f54(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T853f47(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T729f47(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T728f50(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T726f47(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T200f44(TC* ac, T0* C);
/* ET_CLASS.is_named_type */
extern T1 T70s225(TC* ac);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T102f76(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_constraint_type */
extern T0* T200f77(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint_type */
extern T0* T853f66(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint_type */
extern T0* T729f64(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint_type */
extern T0* T728f67(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type_constraint_type */
extern T0* T726f64(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.type */
extern T0* T696f1(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T869f36(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T869f41(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.reset_fatal_error */
extern void T869f43(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1145f26(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1145f28(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1145f16(TC* ac, T0* C, T1 a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1137f18(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1137f20(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1146f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1146f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1136f15(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1136f18(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1138f25(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1138f30(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1138f29(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1135f17(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1135f19(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1135f21(TC* ac, T0* C, T1 a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1135f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T853f89(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_parameter_type */
extern void T2208f19(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_parameter_type */
extern void T2208f19p1(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1963f10(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1962f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1961f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1960f10(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1149f17(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1139f20(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1123f19(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1140f17(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1124f37(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1124f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T869f29(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1145f20(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1137f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1146f11(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1136f11(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1138f21(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1135f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T102f138(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_class_type */
extern void T2208f14(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_class_type */
extern void T2208f14p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_class_type */
extern void T2052f78(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1963f5(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1963f12(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1962f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1961f5(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1961f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1960f5(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1960f12(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1140f12(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1140f19(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T63f598(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T1466c1278(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.types_to_text */
extern T0* T102f121(TC* ac, T0* C);
/* ET_CLASS_TYPE.append_types_to_string */
extern void T102f147(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.types_to_text */
extern T0* T184f111(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_types_to_string */
extern void T184f139(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.types_to_text */
extern T0* T853f82(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_types_to_string */
extern void T853f96(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.types_to_text */
extern T0* T729f87(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_types_to_string */
extern void T729f102(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.types_to_text */
extern T0* T728f90(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_types_to_string */
extern void T728f107(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.types_to_text */
extern T0* T726f89(TC* ac, T0* C);
/* ET_LIKE_FEATURE.append_types_to_string */
extern void T726f109(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.types_to_text */
extern T0* T200f84(TC* ac, T0* C);
/* ET_LIKE_CURRENT.append_types_to_string */
extern void T200f101(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.types_to_text */
extern T0* T645f9(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.append_types_to_string */
extern void T645f19(TC* ac, T0* C, T0* a1);
/* ET_TYPE_RENAME_CONSTRAINT.types_to_text */
extern T0* T696f6(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.append_types_to_string */
extern void T696f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS.types_to_text */
extern T0* T70f256(TC* ac, T0* C);
/* ET_CLASS.append_types_to_string */
extern void T70f355(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T63f186(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T42f598(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T42f186(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1140f7(TC* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T70f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T102f146(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T2190c21(TC* ac, T0* a1, T0* a2, T6 a3);
/* ET_ECF_LIBRARY.tuple_type */
extern T0* T806f25(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tuple_type */
extern T0* T87f28(TC* ac, T0* C);
/* ET_SYSTEM.tuple_type */
extern T0* T50f27(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T2191c24(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_constraint */
extern T1 T695f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_constraint_with_type_marks */
extern T1 T695f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint */
extern T0* T853f58(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint */
extern T0* T729f60(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint */
extern T0* T728f63(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.type_constraint */
extern T0* T726f60(TC* ac, T0* C, T6 a1);
/* ET_LIKE_CURRENT.type_constraint */
extern T0* T200f60(TC* ac, T0* C, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.type_constraint */
extern T0* T645f8(TC* ac, T0* C, T6 a1);
/* ET_TYPE_RENAME_CONSTRAINT.type_constraint */
extern T0* T696f4(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint_count */
extern T6 T853s57(TC* ac);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint_count */
extern T6 T729s59(TC* ac);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint_count */
extern T6 T728s62(TC* ac);
/* ET_LIKE_FEATURE.type_constraint_count */
extern T6 T726s59(TC* ac);
/* ET_LIKE_CURRENT.type_constraint_count */
extern T6 T200s59(TC* ac);
/* ET_TYPE_CONSTRAINT_LIST.count */
extern T6 T645f3(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.count */
extern T6 T696s3(TC* ac);
/* ET_FORMAL_PARAMETER.conforms_to_constraint */
extern T1 T504f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_constraint_with_type_marks */
extern T1 T504f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_constraint */
extern T1 T853f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T853f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_constraint */
extern T1 T729f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T729f84(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_constraint */
extern T1 T728f75(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T728f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_to_constraint */
extern T1 T726f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_constraint_with_type_marks */
extern T1 T726f85(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_to_constraint */
extern T1 T200f67(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_constraint_with_type_marks */
extern T1 T200f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_to_constraint */
extern T1 T70f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_constraint_with_type_marks */
extern T1 T70f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_to_constraint */
extern T1 T184f103(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T184f118(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_to_constraint */
extern T1 T102f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T102f124(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T852f65(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T504f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1140f21(TC* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T70f353(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T102f145(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.unfolded_empty_tuple_actual_parameters */
extern T0* T806f28(TC* ac, T0* C);
/* ET_ECF_SYSTEM.unfolded_empty_tuple_actual_parameters */
extern T0* T87f31(TC* ac, T0* C);
/* ET_SYSTEM.unfolded_empty_tuple_actual_parameters */
extern T0* T50f30(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.position */
extern T0* T2191f18(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1469f12(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.position */
extern T0* T724f12(TC* ac, T0* C);
/* ET_CLASS.is_routine_class */
extern T1 T70f166(TC* ac, T0* C);
/* ET_ECF_LIBRARY.obsolete_routine_type_mode */
extern T1 T806f100(TC* ac, T0* C);
/* ET_ECF_SYSTEM.obsolete_routine_type_mode */
extern T1 T87f142(TC* ac, T0* C);
/* ET_SYSTEM.obsolete_routine_type_mode */
extern T1 T50f119(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1140f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1124f32(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1124f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T63f597(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T1466c1277(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T63f185(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T42f597(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T42f185(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T695f65(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T504f67(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T853f43(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T729f43(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T728f46(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T726f43(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T200f40(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T70f249(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T184f71(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T102f71(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T63f596(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T1466c1276(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T42f596(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T63f595(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T1466c1275(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T63f184(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T42f595(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T42f184(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T1124f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T63f594(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T1466c1274(TC* ac, T0* a1, T0* a2);
/* ET_CLASS_TYPE.upper_name */
extern T0* T102f120(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T63f183(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T42f594(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T42f183(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T63f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T1466c937(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T63f33(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T42f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T42f33(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1149f8(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1149f9(TC* ac, T0* C, T0* a1);
extern T1 T1149f9ot1(TC* ac, T0* a1);
extern T1 T1149f9ot2(TC* ac, T0* a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1149f5(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1149f10(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1139f11(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1139f12(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1139f8(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1139f7(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1139f13(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.current_universe */
extern T0* T1139f6(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1123f10(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1123f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.current_universe */
extern T0* T1123f7(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T869f35(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T869f40(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.tokens */
extern T0* T869s15(TC* ac);
/* ET_TYPE_CHECKER.current_universe */
extern T0* T869f21(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1145f25(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1137f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1146f13(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1146f16(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.current_universe */
extern T0* T1146f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1136f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1136f17(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T695f67(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T504f69(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T853f70(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T729f73(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T728f76(TC* ac, T0* C);
/* ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T726f74(TC* ac, T0* C);
/* ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T200f68(TC* ac, T0* C);
/* ET_CLASS.has_identifier_anchored_type */
extern T1 T70f251(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T510f24(TC* ac, T0* C);
/* ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T184f104(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T2191f13(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T186f24(TC* ac, T0* C);
/* ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T102f119(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T202f14(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T2190f13(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1136f5(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1138f24(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1138f28(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1138f16(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1138f27(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1138f8(TC* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1135f16(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T729f94(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_like_type */
extern void T2208f18(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_like_type */
extern void T2208f18p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_qualified_like_type */
extern void T2052f82(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1963f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1963f13(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1962f13(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1962f17(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1962f18(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1961f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1961f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1960f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1960f13(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1149f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1139f19(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T1123f18(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1140f16(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T1124f36(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_type */
extern void T869f28(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T869f32(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T63f593(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T1466c1273(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1c_error */
extern void T42f593(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T729f97(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T728f100(TC* ac, T0* C, T6 a1);
/* ET_TYPE_CHECKER.check_adapted_base_classes_validity */
extern void T869f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_class_interface_error_only */
extern void T891f13(TC* ac, T0* C, T1 a1);
/* ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T869f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T1152f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1145f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1145f22(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1145s11(TC* ac);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T1144f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T1144f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T1144f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T1144f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T1144f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T1144f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T1144f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T1144s31(TC* ac);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T1144f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T1144f53(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].aliased_resized_area */
extern T0* T780s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].aliased_resized_area */
extern T0* T779f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T1144f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T1144f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T1144f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T1144f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T1144f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T1144f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T1144f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS].force */
extern void T780s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS].fill_with */
extern void T779f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].extend */
extern void T779f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T1144f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T1144f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T1144f38(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.add_adapted_base_classes_to_list */
extern void T1145f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T1145f24ot1(TC* ac, T0* a1);
extern T1 T1145f24ot2(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.copy_to_type_context */
extern void T852f69(TC* ac, T0* C, T0* a1);
/* ET_CLASS.copy_to_type_context */
extern void T70f336(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1137f13(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1137f16(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1146f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1146f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1136f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1136f12(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1138f20(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1138f23(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1138f22(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1135f11(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1135f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T728f97(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_like_braced_type */
extern void T2208f17(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_like_braced_type */
extern void T2208f17p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_qualified_like_braced_type */
extern void T2052f81(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1963f8(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1962f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1961f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1960f8(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1149f15(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1139f18(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T1123f17(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1140f15(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T1124f35(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T869f27(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1145f18(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1137f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1146f9(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1136f9(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1138f19(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1135f10(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T200f94(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_like_current */
extern void T2208f16(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_like_current */
extern void T2208f16p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_like_current */
extern void T2052f80(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1963f6(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1962f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1961f4(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1960f6(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1149f13(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1139f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1123f15(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1140f13(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1124f33(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T869f37(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T869f42(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1145f27(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1137f19(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1146f15(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1136f16(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1138f26(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1135f18(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1142f96(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_binary_integer_constant */
extern void T2052f68(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_integer_constant */
extern void T2052f106(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_integer_constant_without_cast_type */
extern void T2052f128(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.literal */
extern T0* T683f3(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.literal */
extern T0* T682f3(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.literal */
extern T0* T681f3(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.literal */
extern T0* T680f3(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.literal */
extern T0* T679f2(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.sign */
extern T0* T683f1(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.sign */
extern T0* T682f1(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.sign */
extern T0* T681f1(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.sign */
extern T0* T680f1(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.sign */
extern T0* T679f6(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.process_cast_type */
extern void T2052f70(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.cast_type */
extern T0* T683f6(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.cast_type */
extern T0* T682f6(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.cast_type */
extern T0* T681f6(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.cast_type */
extern T0* T680f6(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.cast_type */
extern T0* T679f7(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T862f131(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T862f200(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T862f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T683f79(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T682f79(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T681f79(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T680f79(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T679f80(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.is_binary */
extern T1 T683s40(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T682f40(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T681f40(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T680f40(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T679f42(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T683f39(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T682f39(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T681s39(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T680f39(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T679f41(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T862f387(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_natural_64_index */
extern void T862f386(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T862f385(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_natural_32_index */
extern void T862f384(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T862f383(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_natural_16_index */
extern void T862f382(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T862f381(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_natural_8_index */
extern void T862f380(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T862f379(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_integer_64_index */
extern void T862f378(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T862f377(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_integer_32_index */
extern void T862f376(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T862f375(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_integer_16_index */
extern void T862f374(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T63f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T1466c1121(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T683f59(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T682f59(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T681f59(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T680f59(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T679f59(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T63f110(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T42f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T42f110(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T862f373(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_integer_8_index */
extern void T862f372(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T63f432(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T1466c1120(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.type_name */
extern T0* T1466f473(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T63f109(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T42f432(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T42f109(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T886f19(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T880f24(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T100f176(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T100f245(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T100f321(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T100f437(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T100f442(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_natural_64_index */
extern void T100f436(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T100f435(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_natural_32_index */
extern void T100f434(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T100f433(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_natural_16_index */
extern void T100f432(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T100f431(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_natural_8_index */
extern void T100f430(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T100f429(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_integer_64_index */
extern void T100f428(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T100f427(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_integer_32_index */
extern void T100f426(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T100f425(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_integer_16_index */
extern void T100f424(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T100f423(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_integer_8_index */
extern void T100f422(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_binary_integer_constant */
extern void T114f1316(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_binary_integer_constant */
extern void T114f1363(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_constant */
extern void T114f1290(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.process */
extern void T682f74(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_octal_integer_constant */
extern void T2208f68(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_octal_integer_constant */
extern void T2208f68p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1142f95(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_octal_integer_constant */
extern void T2052f67(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T862f130(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T862f199(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T886f18(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T880f23(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T100f175(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T100f244(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_octal_integer_constant */
extern void T114f1315(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_octal_integer_constant */
extern void T114f1362(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T681f74(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_hexadecimal_integer_constant */
extern void T2208f67(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_hexadecimal_integer_constant */
extern void T2208f67p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1142f94(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_hexadecimal_integer_constant */
extern void T2052f66(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T862f129(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T862f198(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T886f17(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T880f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T100f174(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T100f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T114f1314(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T114f1361(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T680f74(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_underscored_integer_constant */
extern void T2208f66(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_underscored_integer_constant */
extern void T2208f66p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1142f93(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_underscored_integer_constant */
extern void T2052f65(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T862f128(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T862f197(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T886f16(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T880f21(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T100f173(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T100f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T114f1313(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T114f1360(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T679f72(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_regular_integer_constant */
extern void T2208f65(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_regular_integer_constant */
extern void T2208f65p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1142f92(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_regular_integer_constant */
extern void T2052f64(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T862f127(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T862f196(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T886f15(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T880f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T100f172(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T100f241(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T114f1274(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T114f1283(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T675f57(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_c3_character_constant */
extern void T2208f62(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_c3_character_constant */
extern void T2208f62p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1142f89(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_c3_character_constant */
extern void T2052f61(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_c3_character_constant_without_cast_type */
extern void T2052f103(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T862f123(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T862f192(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T862f274(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T690f62(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T689f62(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T675f62(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T862f363(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_character_32_index */
extern void T862f362(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2b_error */
extern void T63f429(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2b */
extern T0* T1466c1117(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T1466f1117ot1(TC* ac, T0* a1);
extern T1 T1466f1117ot2(TC* ac, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.literal */
extern T2 T690f43(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.value_position */
extern T0* T690f44(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.value_position */
extern T0* T689f43(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.value_position */
extern T0* T675f44(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvwmc2b_error */
extern void T42f429(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T862f361(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_character_8_index */
extern void T862f360(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T63f428(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T1466c1116(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T42f428(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.cast_type */
extern T0* T690f4(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.cast_type */
extern T0* T689f3(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.cast_type */
extern T0* T675f5(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T886f11(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T880f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T100f168(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T100f237(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T100f319(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T100f413(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_character_32_index */
extern void T100f412(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T100f411(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_character_8_index */
extern void T100f410(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T114f1310(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T114f1286(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_CURSOR.process */
extern void T761f30(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_iteration_cursor */
extern void T2208f61(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_iteration_cursor */
extern void T1142f88(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_iteration_cursor */
extern void T2052f60(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_iteration_cursor */
extern void T862f165(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_cursor_validity */
extern void T862f233(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_cursor */
extern void T862f311(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_voit3a_error */
extern void T63f407(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_voit3a */
extern T0* T1466c1095(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_voit3_error */
extern T1 T63f98(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit3a_error */
extern void T42f407(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_voit3_error */
extern T1 T42f98(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_iteration_cursor */
extern void T886f41(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_iteration_cursor */
extern void T880f46(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_iteration_cursor */
extern void T100f210(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_cursor_validity */
extern void T100f278(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_cursor */
extern void T100f360(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_iteration_cursor */
extern void T114f1335(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor */
extern void T114f1379(TC* ac, T0* C, T0* a1);
/* ET_QUANTIFIER_EXPRESSION.process */
extern void T617f46(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_quantifier_expression */
extern void T2208f60(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_quantifier_expression */
extern void T2208f60p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_quantifier_expression */
extern void T1142f87(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_quantifier_expression */
extern void T2052f59(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_quantifier_expression */
extern void T862f120(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_quantifier_expression_validity */
extern void T862f187(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_iteration_expression_validity */
extern void T862f259(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_expression */
extern void T862f344(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_boolean_index */
extern void T862f278(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_quantifier_expression */
extern void T886f8(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_quantifier_expression */
extern void T880f13(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_quantifier_expression */
extern void T100f165(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_quantifier_expression_validity */
extern void T100f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_expression_validity */
extern void T100f305(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_expression */
extern void T100f394(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_boolean_index */
extern void T100f323(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_quantifier_expression */
extern void T114f1307(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_quantifier_expression */
extern void T114f1355(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_expression */
extern void T114f1393(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.process */
extern void T343f54(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_across_expression */
extern void T2208f59(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_across_expression */
extern void T2208f59p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1142f86(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_across_expression */
extern void T2052f58(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.some_keyword */
extern T0* T81s654(TC* ac);
/* ET_KEYWORD.make_some */
extern T0* T192c76(TC* ac);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern T0* T81s896(TC* ac);
/* ET_KEYWORD.make_all */
extern T0* T192c56(TC* ac);
/* ET_FEATURE_CHECKER.process_across_expression */
extern void T862f182(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T862f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T886f58(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T880f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T100f227(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T100f294(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_across_expression */
extern void T114f1298(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_expression */
extern void T114f1345(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T760f34(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_once_manifest_string */
extern void T2208f58(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_once_manifest_string */
extern void T2208f58p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1142f85(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_once_manifest_string */
extern void T2052f57(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T862f164(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T862f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T886f40(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T880f45(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T100f209(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T100f277(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T114f1334(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T114f1378(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T114f809(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].force_last */
extern void T955f60(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_put */
extern void T955f66(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].force */
extern void T1429s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].fill_with */
extern void T1427f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].extend */
extern void T1427f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_put */
extern void T955f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_put */
extern void T955f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_item */
extern T6 T955f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].hash_position */
extern T6 T955f33(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T760f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].resize */
extern void T955f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_resize */
extern void T955f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].special_integer_ */
extern T0* T955s37(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_resize */
extern void T955f69(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T1429s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T1427f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_resize */
extern void T955f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_item */
extern T0* T955f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_item */
extern T6 T955f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_resize */
extern void T955f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_modulus */
extern T6 T955f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_capacity */
extern T6 T955f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_put */
extern void T955f62(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].search_position */
extern void T955f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].unset_found_item */
extern void T955f45(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.process */
extern void T759f35(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_named_object_test */
extern void T2208f57(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_named_object_test */
extern void T2208f57p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1142f84(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_named_object_test */
extern void T2052f56(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_named_object_test */
extern void T862f163(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T862f230(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_named_object_test */
extern void T862f308(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T63f406(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T1466c1094(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T63f97(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot4b_error */
extern void T42f406(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T42f97(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T63f405(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T1466c1093(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot4a_error */
extern void T42f405(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern T0* T862s82(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T63f404(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T1466c1092(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T63f96(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot1f_error */
extern void T42f404(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T42f96(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T63f403(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T1466c1091(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1e_error */
extern void T42f403(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T63f402(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T1466c1090(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1d_error */
extern void T42f402(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T63f401(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T1466c1089(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1c_error */
extern void T42f401(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T63f400(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T1466c1088(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1b_error */
extern void T42f400(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T63f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T1466c1087(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1a_error */
extern void T42f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].force_last */
extern void T878f61(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T878f67(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].force */
extern void T1192s5(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].fill_with */
extern void T1191f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].extend */
extern void T1191f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_put */
extern void T878f66(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_put */
extern void T878f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].resize */
extern void T878f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T878f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T878s37(TC* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T878f70(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T1192s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T1191f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T878f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_resize */
extern void T878f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T878f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T878f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T878f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T878f47(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T886f39(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T886f38(TC* ac, T0* C, T0* a1);
extern T1 T886f38ot1(TC* ac, T0* a1);
extern T1 T886f38ot2(TC* ac, T0* a1);
extern T1 T886f38ot3(TC* ac, T0* a1);
extern T1 T886f38ot4(TC* ac, T0* a1);
/* ET_IDENTIFIER.unparenthesized_expression */
extern T0* T307f75(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T683f41(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T682f41(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T681f41(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T680f41(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T679f43(TC* ac, T0* C);
/* ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T678f35(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T677f32(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T675f31(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.unparenthesized_expression */
extern T0* T761f19(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.unparenthesized_expression */
extern T0* T617f33(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T343f34(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T760f20(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T759f23(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T757f26(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T745f19(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T1045f21(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T768f33(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T767f41(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T766f37(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T765f35(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T764f42(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T763f38(TC* ac, T0* C);
/* ET_CALL_AGENT.unparenthesized_expression */
extern T0* T380f25(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T634f26(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T572f26(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T563f26(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T593f20(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T377f23(TC* ac, T0* C);
/* ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T758f22(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T756f19(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T755f24(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T754f20(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T753f20(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T752f19(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T749f24(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T748f19(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T747f19(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T746f19(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T744f24(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T631f24(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T383f24(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.unparenthesized_expression */
extern T0* T534f22(TC* ac, T0* C);
/* ET_IF_EXPRESSION.unparenthesized_expression */
extern T0* T513f25(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T440f31(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T690f29(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T689f29(TC* ac, T0* C);
/* ET_CURRENT.unparenthesized_expression */
extern T0* T301f28(TC* ac, T0* C);
/* ET_RESULT.unparenthesized_expression */
extern T0* T322f25(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T688f28(TC* ac, T0* C);
/* ET_VOID.unparenthesized_expression */
extern T0* T331f24(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T687f28(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T685f29(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T684f29(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T676f30(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression */
extern T0* T757f9(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression */
extern T0* T759f4(TC* ac, T0* C);
/* ET_OBJECT_TEST.expression */
extern T0* T758f4(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T880f44(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T879f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].force_last */
extern void T1324f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].resize */
extern void T1324f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T1324f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].extendible */
extern T1 T1324f8(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1g_error */
extern void T63f599(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1g */
extern T0* T1466c1279(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1g_error */
extern void T42f599(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T880f7(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T880f66(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T100f208(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T100f275(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T100f357(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T100f504(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T100s101(TC* ac);
/* ET_C_GENERATOR.process_named_object_test */
extern void T114f1333(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test */
extern void T114f1377(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_function_name */
extern void T114f850(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32].force_last */
extern void T944f13(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].force */
extern void T1407s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].fill_with */
extern void T1406f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].extend */
extern void T1406f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32].resize */
extern void T944f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1407s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1406f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32].new_capacity */
extern T6 T944f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32].extendible */
extern T1 T944f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_object_test_local_name */
extern void T114f1287(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.name */
extern T0* T759f1(TC* ac, T0* C);
/* ET_OBJECT_TEST.name */
extern T0* T758f11(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.name */
extern T0* T757f1(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.process */
extern void T757f38(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_old_object_test */
extern void T2208f56(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_old_object_test */
extern void T2208f56p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1142f83(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_old_object_test */
extern void T2052f55(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_object_test */
extern void T862f161(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T886f37(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T880f42(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T100f206(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_old_object_test */
extern void T114f1331(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T745f30(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_feature_address */
extern void T2208f55(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_feature_address */
extern void T2208f55p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1142f82(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_feature_address */
extern void T2052f54(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T862f151(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T862f220(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.local_name */
extern T0* T307f65(TC* ac, T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T307f64(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen11a_error */
extern void T63f388(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen11a */
extern T0* T1466c1076(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen11_error */
extern T1 T63f92(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen11a_error */
extern void T42f388(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen11_error */
extern T1 T42f92(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T862f301(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_base_type */
extern T1 T70f224(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T695f51(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T504f53(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T853f46(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T729f46(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T728f49(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T726f46(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T184f74(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T102f74(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T200f43(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T862f300(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0e_error */
extern void T63f387(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0e */
extern T0* T1466c1075(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0e_error */
extern void T42f387(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T862f299(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.inline_separate_argument_name */
extern T0* T307f63(TC* ac, T0* C);
/* ET_IDENTIFIER.iteration_item_name */
extern T0* T307f62(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T862f295(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_pointer_index */
extern void T862f294(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T862f293(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.typed_pointer_identity_type */
extern T0* T806f95(TC* ac, T0* C);
/* ET_ECF_SYSTEM.typed_pointer_identity_type */
extern T0* T87f98(TC* ac, T0* C);
/* ET_SYSTEM.typed_pointer_identity_type */
extern T0* T50f97(TC* ac, T0* C);
/* ET_IDENTIFIER.object_test_local_name */
extern T0* T307f61(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T886f27(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T880f32(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T100f196(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T100f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T100f350(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_address */
extern void T865f67(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_address */
extern void T850f67(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T100f349(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T100f348(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T100f344(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_pointer_index */
extern void T100f343(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T100f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T114f1321(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T114f1367(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine_name */
extern void T114f1400(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T1839f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T1061f13(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.special_type */
extern T0* T981f26(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T1060f69(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T1059f69(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T936f12(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T978f68(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T904f66(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.special_type */
extern T0* T843f65(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T844f9(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T1045f36(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unqualified_call_expression */
extern void T2208f54(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unqualified_call_expression */
extern void T2208f54p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1142f81(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_unqualified_call_expression */
extern void T2052f53(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T862f181(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T862f248(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T862f248ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T63f419(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T1466c1107(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T42f419(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T862f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T63f479(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T1466c1167(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T63f126(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T42f479(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T42f126(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T63f478(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T1466c1166(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T42f478(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T63f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T1466c1165(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T42f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_inline_separate_argument_call_expression_validity */
extern void T862f337(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_iteration_item_call_expression_validity */
extern void T862f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T862f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T862f334(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T886f57(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T880f62(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T100f226(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T100f293(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f293ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T100f387(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_inline_separate_argument_call_expression_validity */
extern void T100f386(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_iteration_item_call_expression_validity */
extern void T100f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T100f384(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T100f383(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_unqualified_call_expression */
extern void T114f1342(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T114f1392(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_function_call_expression */
extern void T114f1399(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f1399ot1(TC* ac, T0* a1);
extern T1 T114f1399ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_any_class */
extern T1 T865f40(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_any_class */
extern T1 T850f50(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T1045f10(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_call_agent */
extern T1 T744f14(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_call_agent */
extern T1 T631f14(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.seed */
extern T6 T283f4(TC* ac, T0* C);
/* ET_C_GENERATOR.print_unqualified_constant_attribute_call_expression */
extern void T114f1398(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T939f15(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T939f11(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_unique_attribute */
extern T1 T865f34(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_unique_attribute */
extern T1 T850f49(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T865f33(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T850f48(TC* ac, T0* C);
/* ET_C_GENERATOR.print_unqualified_attribute_call_expression */
extern void T114f1404(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute_with_no_self_initializing_code */
extern T1 T865f42(TC* ac, T0* C);
extern T1 T865f42ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FEATURE.is_attribute_with_no_self_initializing_code */
extern T1 T850f47(TC* ac, T0* C);
extern T1 T850f47ot1(TC* ac, T0* a1);
/* ET_TAGGED_ASSERTION.process */
extern void T776f12(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_tagged_assertion */
extern void T2208f104(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_tagged_assertion */
extern void T2208f104p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_tagged_assertion */
extern void T2052f217(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1142f124(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T768f56(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_external_procedure_inline_agent */
extern void T2208f53(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_external_procedure_inline_agent */
extern void T2208f53p1(TC* ac, T0* C, T0* a1);
extern T1 T2208f53p1ot1(TC* ac, T0* a1);
/* ET_AGENT_KEYWORD.process */
extern void T277f18(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_agent_keyword */
extern void T2208f136(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_agent_keyword */
extern void T2052f182(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1142f80(TC* ac, T0* C, T0* a1);
extern T1 T1142f80ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1142f108(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_external_procedure_inline_agent */
extern void T2052f52(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_agent_arguments */
extern void T2052f95(TC* ac, T0* C, T0* a1);
extern T1 T2052f95ot1(TC* ac, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T362f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T768f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T767f7(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T766f7(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T765f6(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T764f9(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T763f9(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.process_external_procedure_inline_agent_declaration */
extern void T2052f101(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern T0* T81s657(TC* ac);
/* ET_KEYWORD.make_alias */
extern T0* T192c79(TC* ac);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern T0* T81s676(TC* ac);
/* ET_KEYWORD.make_external */
extern T0* T192c98(TC* ac);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T862f171(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T862f239(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T63f411(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T1466c1099(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T63f99(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir3b_error */
extern void T42f411(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T42f99(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T862f321(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T862f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.set_inline_agent_indexes */
extern void T862f419(TC* ac, T0* C, T0* a1);
extern T1 T862f419ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.target */
extern T0* T768f13(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.target */
extern T0* T767f15(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.target */
extern T0* T766f14(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.target */
extern T0* T765f15(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.target */
extern T0* T764f17(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.target */
extern T0* T763f16(TC* ac, T0* C);
/* ET_ECF_LIBRARY.procedure_identity_type */
extern T0* T806f70(TC* ac, T0* C);
/* ET_ECF_SYSTEM.procedure_identity_type */
extern T0* T87f73(TC* ac, T0* C);
/* ET_SYSTEM.procedure_identity_type */
extern T0* T50f72(TC* ac, T0* C);
/* ET_ECF_LIBRARY.tuple_identity_type */
extern T0* T806f27(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tuple_identity_type */
extern T0* T87f30(TC* ac, T0* C);
/* ET_SYSTEM.tuple_identity_type */
extern T0* T50f29(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T862f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T862f418ot1(TC* ac, T0* a1);
extern T1 T862f418ot2(TC* ac, T0* a1);
extern T1 T862f418ot3(TC* ac, T0* a1);
extern T1 T862f418ot4(TC* ac, T0* a1);
extern T1 T862f418ot5(TC* ac, T0* a1);
extern T1 T862f418ot6(TC* ac, T0* a1);
extern T1 T862f418ot7(TC* ac, T0* a1);
extern T1 T862f418ot8(TC* ac, T0* a1);
extern T1 T862f418ot9(TC* ac, T0* a1);
extern T1 T862f418ot10(TC* ac, T0* a1);
extern T1 T862f418ot11(TC* ac, T0* a1);
extern T1 T862f418ot12(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T63f507(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T1466c1195(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T63f138(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T42f507(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T42f138(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T63f506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T1466c1194(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T42f506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T63f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T1466c1193(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T63f137(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T42f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T42f137(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T63f504(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T1466c1192(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T42f504(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T362f18(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T63f503(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T1466c1191(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T63f136(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T42f503(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T42f136(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T63f502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T1466c1190(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T42f502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T380f14(TC* ac, T0* C);
extern T1 T380f14ot1(TC* ac, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T186f35(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].force */
extern void T1096s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1094f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T1094f8(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T186f11(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1096c3(TC* ac);
/* ET_ACTUAL_PARAMETER_LIST.resize */
extern void T186f36(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1096s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1094f4(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T186f21(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T186f20(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T186c28(TC* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T186f28p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1096s1(TC* ac, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1094c5(TC* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T186s9(TC* ac);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T862f417(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CALL_AGENT.set_arguments */
extern void T380f46(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T768f51(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T767f56(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T766f52(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T765f52(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T764f57(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T763f53(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1893f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T2119s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T2118f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T2118f7(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern T0* T1893f8(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T2119c2(TC* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1894c6(TC* ac, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1893c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T2119s1(TC* ac, T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T2118c4(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T872f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T872f8(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_inline_agent_iteration_components_validity */
extern void T862f318(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_iteration_item */
extern void T307f125(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T862f317(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T63f453(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T1466c1141(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T63f111(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot3b_error */
extern void T42f453(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T42f111(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern T0* T862s88(TC* ac);
/* ET_IDENTIFIER.set_object_test_local */
extern void T307f123(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T862f312(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T862f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T1152f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T862f413(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T862f313(TC* ac, T0* C, T0* a1);
extern T1 T862f313ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1i_error */
extern void T63f452(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1i */
extern T0* T1466c1140(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T63f118(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1i_error */
extern void T42f452(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T42f118(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.hidden_inline_separate_argument */
extern T0* T884f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T63f451(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T1466c1139(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1g_error */
extern void T42f451(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T63f450(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T1466c1138(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1e_error */
extern void T42f450(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T63f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T1466c1137(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T42f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T63f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T1466c1136(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T42f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T63f447(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T1466c1135(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T63f48(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T42f447(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T42f48(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T63f446(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T1466c1134(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vred_error */
extern T1 T63f117(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T42f446(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vred_error */
extern T1 T42f117(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_attached_index */
extern void T1467f14(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT.set_attached_index */
extern void T495f13(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0i_error */
extern void T63f408(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0i */
extern T0* T1466c1096(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0i_error */
extern void T42f408(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.hide_inline_separate_arguments */
extern void T884f8(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.count */
extern T6 T884f4(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.hide_iteration_components */
extern void T882f8(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_ITEM_SCOPE.count */
extern T6 T882f4(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T879f9(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T886f47(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T880f52(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T100f216(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T100f284(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T100f370(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T100f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T100f556(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f556ot1(TC* ac, T0* a1);
extern T1 T100f556ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T100f594(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f594ot1(TC* ac, T0* a1);
/* ET_CALL_AGENT.target */
extern T0* T380f5(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T186f29(TC* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T1896f21(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_open_operand */
extern T1 T992f22(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.is_open_operand */
extern T1 T1894s4(TC* ac);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T2070f23(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T2069f25(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T2068f19(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_open_operand */
extern T1 T770s8(TC* ac);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T768f40(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T767f45(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T766f41(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T765f41(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T764f46(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T763f42(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_open_operand */
extern T1 T761f22(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T760f24(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T759f26(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_open_operand */
extern T1 T758f25(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T757f29(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T756f22(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T755f27(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T754f23(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T753f24(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T752f22(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T749f27(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T748f22(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T747f22(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T746f22(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T745f22(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T744f27(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T690f34(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T689f34(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T688f31(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T687f31(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T685f32(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T684f32(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T683f50(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T682f50(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T681f50(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T680f50(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T679f50(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T678f39(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T677f35(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T676f34(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T675f35(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T634f29(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T631f28(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_open_operand */
extern T1 T617f36(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T572f28(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T563f28(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_open_operand */
extern T1 T534f24(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_open_operand */
extern T1 T513f27(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T440f33(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T383f26(TC* ac, T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T380f30(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T377f25(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T343f36(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_open_operand */
extern T1 T340s39(TC* ac);
/* ET_VOID.is_open_operand */
extern T1 T331f29(TC* ac, T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T307f76(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T1045f22(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.is_open_operand */
extern T1 T769s6(TC* ac);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T593f21(TC* ac, T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T301f29(TC* ac, T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T322f26(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1601f5(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T100f593(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T768f35(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T767f24(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T766f22(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T765f14(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T764f5(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T763f5(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_inline_agent_indexes */
extern void T100f511(TC* ac, T0* C, T0* a1);
extern T1 T100f511ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T100f510(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T100f510ot1(TC* ac, T0* a1);
extern T1 T100f510ot2(TC* ac, T0* a1);
extern T1 T100f510ot3(TC* ac, T0* a1);
extern T1 T100f510ot4(TC* ac, T0* a1);
extern T1 T100f510ot5(TC* ac, T0* a1);
extern T1 T100f510ot6(TC* ac, T0* a1);
extern T1 T100f510ot7(TC* ac, T0* a1);
extern T1 T100f510ot8(TC* ac, T0* a1);
extern T1 T100f510ot9(TC* ac, T0* a1);
extern T1 T100f510ot10(TC* ac, T0* a1);
extern T1 T100f510ot11(TC* ac, T0* a1);
extern T1 T100f510ot12(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T100f509(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_iteration_components_validity */
extern void T100f367(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T100f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T100s108(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T100f361(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T100f506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T100f505(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T100f362(TC* ac, T0* C, T0* a1);
extern T1 T100f362ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T114f1341(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T114f1391(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T114f1396(TC* ac, T0* C, T0* a1);
extern T1 T114f1396ot1(TC* ac, T0* a1);
extern T1 T114f1396ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T114f885(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32].force_last */
extern void T947f13(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_AGENT].force */
extern void T1414s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT].fill_with */
extern void T1413f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].extend */
extern void T1413f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32].resize */
extern void T947f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].aliased_resized_area */
extern T0* T1414s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].aliased_resized_area */
extern T0* T1413f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32].new_capacity */
extern T6 T947f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32].extendible */
extern T1 T947f9(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T768s20(TC* ac);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T767s23(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T766s21(TC* ac);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T765s22(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T764s25(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T763s23(TC* ac);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T114f1390(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T767f64(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_once_procedure_inline_agent */
extern void T2208f52(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_once_procedure_inline_agent */
extern void T2208f52p1(TC* ac, T0* C, T0* a1);
extern T1 T2208f52p1ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1142f79(TC* ac, T0* C, T0* a1);
extern T1 T1142f79ot1(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_once_procedure_inline_agent */
extern void T2052f51(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_once_procedure_inline_agent_declaration */
extern void T2052f100(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern T0* T81s682(TC* ac);
/* ET_KEYWORD.make_once */
extern T0* T192c54(TC* ac);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T862f170(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T862f238(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T63f410(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T1466c1098(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3a_error */
extern void T42f410(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T862f287(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T862f289(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T63f443(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T1466c1131(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T63f115(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok2a_error */
extern void T42f443(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T42f115(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T1864s6(TC* ac, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T1864s5(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1b_error */
extern void T63f442(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1b */
extern T0* T1466c1130(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.note_term_value */
extern T0* T307f121(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.note_term_value */
extern T0* T694s8(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.note_term_value */
extern T0* T690f48(TC* ac, T0* C);
/* CHARACTER_32.out */
extern T0* T3f17(TC* ac, T3 volatile* C);
/* NATURAL_32.to_hex_string */
extern T0* T10f31(TC* ac, T10 volatile* C);
/* NATURAL_32.to_hex_character */
extern T2 T10f34(TC* ac, T10 volatile* C);
/* ET_C1_CHARACTER_CONSTANT.note_term_value */
extern T0* T689f47(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.note_term_value */
extern T0* T688f40(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.note_term_value */
extern T0* T687f40(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.note_term_value */
extern T0* T685f42(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.note_term_value */
extern T0* T684f42(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.note_term_value */
extern T0* T683f64(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.note_term_value */
extern T0* T682f64(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.note_term_value */
extern T0* T681f64(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.note_term_value */
extern T0* T680f64(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.note_term_value */
extern T0* T679f64(TC* ac, T0* C);
/* ET_VERBATIM_STRING.note_term_value */
extern T0* T678f51(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.note_term_value */
extern T0* T677f47(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.note_term_value */
extern T0* T676f46(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.note_term_value */
extern T0* T675f48(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T63f114(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok1b_error */
extern void T42f442(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T42f114(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T63f441(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T1466c1129(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1a_error */
extern void T42f441(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T1864s4(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.standard_once_keys */
extern T0* T862s90(TC* ac);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].wipe_out */
extern void T889f12(TC* ac, T0* C);
/* SPECIAL [ET_NOTE_TERM].keep_head */
extern void T1340f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NOTE_TERM].set_count */
extern void T1340f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].move_all_cursors_after */
extern void T889f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].set_next_cursor */
extern void T1341f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].set_after */
extern void T1341f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vvok2b_error */
extern void T63f440(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2b */
extern T0* T1466c1128(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vvok2b_error */
extern void T42f440(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok1c_error */
extern void T63f439(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1c */
extern T0* T1466c1127(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1c_error */
extern void T42f439(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].item */
extern T0* T889f7(TC* ac, T0* C, T6 a1);
/* ET_NOTE_LIST.append_tagged_note_terms_to_list */
extern void T575f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NOTE_TERM_LIST.append_note_terms_to_list */
extern void T587f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].force_last */
extern void T889f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].force */
extern void T1339s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM].fill_with */
extern void T1340f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM].extend */
extern void T1340f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].resize */
extern void T889f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].aliased_resized_area */
extern T0* T1339s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_NOTE_TERM].aliased_resized_area */
extern T0* T1340f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].new_capacity */
extern T6 T889f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].extendible */
extern T1 T889f8(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_note */
extern T0* T767f35(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T862f319(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T862f416(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T1152f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T862f415(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T862f392(TC* ac, T0* C, T0* a1);
extern T1 T862f392ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1j_error */
extern void T63f461(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1j */
extern T0* T1466c1149(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1j_error */
extern void T42f461(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T63f460(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T1466c1148(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1h_error */
extern void T42f460(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T63f459(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T1466c1147(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1f_error */
extern void T42f459(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T63f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T1466c1146(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T42f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T63f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T1466c1145(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T42f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T63f456(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T1466c1144(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T63f120(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T42f456(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T42f120(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T63f455(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T1466c1143(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T63f119(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T42f455(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T42f119(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T63f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T1466c1142(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T42f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LOCAL_COMMA_VARIABLE.set_attached_index */
extern void T1468f15(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.set_attached_index */
extern void T551f14(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_COMMA_VARIABLE.set_index */
extern void T1468f14(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.set_index */
extern void T551f13(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_local */
extern void T307f140(TC* ac, T0* C, T1 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T886f46(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T880f51(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T100f215(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T100f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T100f332(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T100f334(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T100s110(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T100f368(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T100f508(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T100f507(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T100f445(TC* ac, T0* C, T0* a1);
extern T1 T100f445ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T114f1340(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T114f1389(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_object */
extern T1 T767f22(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.standard_once_keys */
extern T0* T767s34(TC* ac);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T114f1388(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T114f1403(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_feature_body_declaration */
extern void T114f1408(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_inline_separate_argument_declarations */
extern void T114f1429(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor_declarations */
extern void T114f1428(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T116f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T116f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T1020f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T1020f6(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].wipe_out */
extern void T945f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].slots_wipe_out */
extern void T945f54(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].clashes_wipe_out */
extern void T945f53(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].key_storage_wipe_out */
extern void T945f52(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].item_storage_wipe_out */
extern void T945f51(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].move_all_cursors_after */
extern void T945f50(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, INTEGER_32].set_next_cursor */
extern void T1409f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, INTEGER_32].set_after */
extern void T1409f7(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local_declarations */
extern void T114f1427(TC* ac, T0* C);
/* ET_C_GENERATOR.print_all_postconditions */
extern void T114f1426(TC* ac, T0* C, T0* a1);
extern T1 T114f1426ot1(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].wipe_out */
extern void T924f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].slots_wipe_out */
extern void T924f58(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].clashes_wipe_out */
extern void T924f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].key_storage_wipe_out */
extern void T924f56(TC* ac, T0* C);
/* SPECIAL [ET_OLD_EXPRESSION].keep_head */
extern void T1366f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OLD_EXPRESSION].set_count */
extern void T1366f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].item_storage_wipe_out */
extern void T924f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].unset_found_item */
extern void T924f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].move_all_cursors_after */
extern void T924f54(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, ET_OLD_EXPRESSION].set_next_cursor */
extern void T1369f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, ET_OLD_EXPRESSION].set_after */
extern void T1369f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].forth */
extern void T924f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].cursor_forth */
extern void T924f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].add_traversing_cursor */
extern void T924f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, ET_OLD_EXPRESSION].set_position */
extern void T1369f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].remove_traversing_cursor */
extern void T924f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].clashes_item */
extern T6 T924f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].item_for_iteration */
extern T0* T924f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].cursor_item */
extern T0* T924f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].item_storage_item */
extern T0* T924f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].after */
extern T1 T924f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].cursor_after */
extern T1 T924f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, ET_OLD_EXPRESSION].after */
extern T1 T1369f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].start */
extern void T924f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].cursor_start */
extern void T924f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].cursor_off */
extern T1 T924f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, ET_OLD_EXPRESSION].off */
extern T1 T1369f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].is_empty */
extern T1 T924f35(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.postconditions */
extern T0* T767f13(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.postconditions */
extern T0* T766f12(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.postconditions */
extern T0* T764f15(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.postconditions */
extern T0* T763f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32].item_1 */
extern T0* T897f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32].item_2 */
extern T6 T897f10(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.compound */
extern T0* T716f6(TC* ac, T0* C);
/* ET_DO_PROCEDURE.compound */
extern T0* T715f13(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.compound */
extern T0* T711f8(TC* ac, T0* C);
/* ET_DO_FUNCTION.compound */
extern T0* T710f8(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.compound */
extern T0* T707f7(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.compound */
extern T0* T767f12(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.compound */
extern T0* T766f11(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.compound */
extern T0* T764f14(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.compound */
extern T0* T763f13(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_mutex_unlock */
extern void T114f1425(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex */
extern void T114f1436(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_mutex */
extern void T114f1446(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_mutex */
extern void T114f1445(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_mutex_name */
extern void T114f838(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_assign_completed_to_once_status */
extern void T114f1424(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status */
extern void T114f1435(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_status */
extern void T114f1444(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_status */
extern void T114f1443(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_status */
extern void T114f1442(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_status_name */
extern void T114f835(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_assign_called_to_thread_safe_once_status */
extern void T114f1423(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_status */
extern void T114f1434(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_exception_to_thread_safe_once_exception */
extern void T114f1422(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_exception */
extern void T114f1432(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_exception */
extern void T114f1441(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_exception */
extern void T114f1440(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_exception */
extern void T114f1439(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_exception_name */
extern void T114f837(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_exception */
extern void T114f1433(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T767f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T767s18(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T766f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T764f28(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T764s40(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_note */
extern T0* T764f36(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.standard_once_keys */
extern T0* T764s35(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T763f26(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_last_exception_to_once_exception */
extern void T114f1421(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T114f1420(TC* ac, T0* C);
/* ET_C_GENERATOR.reset_volatile_data */
extern void T114f1419(TC* ac, T0* C);
/* ET_C_GENERATOR.print_all_old_expression_declarations */
extern void T114f1418(TC* ac, T0* C, T0* a1);
extern T1 T114f1418ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_old_expression_declarations */
extern void T114f1431(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_after_old_expression */
extern void T114f1438(TC* ac, T0* C);
/* ET_C_GENERATOR.print_before_old_expression */
extern void T114f1437(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].found_item */
extern T0* T924f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].found */
extern T1 T924f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].search */
extern void T924f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].search_position */
extern void T924f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].hash_position */
extern T6 T924f28(TC* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.hash_code */
extern T6 T756f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].key_storage_item */
extern T0* T924f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].slots_item */
extern T6 T924f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].force_last */
extern void T924f52(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].key_storage_put */
extern void T924f65(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_OLD_EXPRESSION].force */
extern void T1365s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OLD_EXPRESSION].fill_with */
extern void T1366f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OLD_EXPRESSION].extend */
extern void T1366f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].slots_put */
extern void T924f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].clashes_put */
extern void T924f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].resize */
extern void T924f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].clashes_resize */
extern void T924f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].special_integer_ */
extern T0* T924s37(TC* ac);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].key_storage_resize */
extern void T924f70(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OLD_EXPRESSION].aliased_resized_area */
extern T0* T1365s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_OLD_EXPRESSION].aliased_resized_area */
extern T0* T1366f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].item_storage_resize */
extern void T924f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].slots_resize */
extern void T924f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].new_modulus */
extern T6 T924f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].new_capacity */
extern T6 T924f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].item_storage_put */
extern void T924f61(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION].item */
extern T0* T923f7(TC* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.add_old_expressions */
extern void T605f28(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.add_old_expressions */
extern void T307f141(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.add_old_expressions */
extern void T343f58(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.add_old_expressions */
extern void T560f23(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.add_old_expressions */
extern void T1045f39(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.add_old_expressions */
extern void T1892f20(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.add_old_expressions */
extern void T2070f32(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.add_old_expressions */
extern void T2069f35(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.add_old_expressions */
extern void T2068f27(TC* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.add_old_expressions */
extern void T1896f26(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.add_old_expressions */
extern void T992f31(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.add_old_expressions */
extern void T349f24(TC* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.add_old_expressions */
extern void T380f44(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.add_old_expressions */
extern void T1893f12(TC* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.add_old_expressions */
extern void T362f17(TC* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.add_old_expressions */
extern void T770f16(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.add_old_expressions */
extern void T340f107(TC* ac, T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.add_old_expressions */
extern void T769f14(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.add_old_expressions */
extern void T1601f10(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.add_old_expressions */
extern void T377f36(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.add_old_expressions */
extern void T383f41(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_EXPRESSION.add_old_expressions */
extern void T534f36(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION_LIST.add_old_expressions */
extern void T660f12(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION.add_old_expressions */
extern void T657f11(TC* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.add_old_expressions */
extern void T513f39(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.add_old_expressions */
extern void T456f12(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION.add_old_expressions */
extern void T453f12(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.add_old_expressions */
extern void T440f45(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.add_old_expressions */
extern void T301f47(TC* ac, T0* C, T0* a1);
/* ET_RESULT.add_old_expressions */
extern void T322f46(TC* ac, T0* C, T0* a1);
/* ET_VOID.add_old_expressions */
extern void T331f44(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.add_old_expressions */
extern void T768f61(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.add_old_expressions */
extern void T767f68(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.add_old_expressions */
extern void T766f63(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.add_old_expressions */
extern void T765f62(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.add_old_expressions */
extern void T764f69(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.add_old_expressions */
extern void T763f64(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_CURSOR.add_old_expressions */
extern void T761f33(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.add_old_expressions */
extern void T760f37(TC* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.add_old_expressions */
extern void T759f39(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.add_old_expressions */
extern void T758f36(TC* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.add_old_expressions */
extern void T757f41(TC* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.add_old_expressions */
extern void T756f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION].force_last */
extern void T923f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION].resize */
extern void T923f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION].new_capacity */
extern T6 T923f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION].extendible */
extern T1 T923f8(TC* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.add_old_expressions */
extern void T756f34p1(TC* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.add_old_expressions */
extern void T755f37(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.add_old_expressions */
extern void T754f33(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.add_old_expressions */
extern void T753f34(TC* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.add_old_expressions */
extern void T752f32(TC* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.add_old_expressions */
extern void T749f37(TC* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.add_old_expressions */
extern void T748f33(TC* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.add_old_expressions */
extern void T747f33(TC* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.add_old_expressions */
extern void T746f33(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.add_old_expressions */
extern void T745f33(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.add_old_expressions */
extern void T744f39(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.add_old_expressions */
extern void T690f61(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.add_old_expressions */
extern void T689f61(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.add_old_expressions */
extern void T688f53(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.add_old_expressions */
extern void T687f53(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.add_old_expressions */
extern void T685f56(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.add_old_expressions */
extern void T684f56(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.add_old_expressions */
extern void T683f78(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.add_old_expressions */
extern void T682f78(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.add_old_expressions */
extern void T681f78(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.add_old_expressions */
extern void T680f78(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.add_old_expressions */
extern void T679f79(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.add_old_expressions */
extern void T678f64(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.add_old_expressions */
extern void T677f60(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.add_old_expressions */
extern void T676f60(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.add_old_expressions */
extern void T675f61(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.add_old_expressions */
extern void T634f41(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.add_old_expressions */
extern void T631f43(TC* ac, T0* C, T0* a1);
/* ET_QUANTIFIER_EXPRESSION.add_old_expressions */
extern void T617f50(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.add_old_expressions */
extern void T572f43(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.add_old_expressions */
extern void T563f42(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.add_old_expressions */
extern void T593f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION].wipe_out */
extern void T923f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION].move_all_cursors_after */
extern void T923f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OLD_EXPRESSION].set_next_cursor */
extern void T1367f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OLD_EXPRESSION].set_after */
extern void T1367f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_all_preconditions */
extern void T114f1417(TC* ac, T0* C, T0* a1);
extern T1 T114f1417ot1(TC* ac, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.preconditions */
extern T0* T767f9(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.preconditions */
extern T0* T766f9(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.preconditions */
extern T0* T764f11(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.preconditions */
extern T0* T763f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32].item_1 */
extern T0* T896f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32].item_2 */
extern T6 T896f10(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_all_invariants */
extern void T114f1416(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_invariants_name */
extern void T114f1430(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_static */
extern T1 T768f37(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_static */
extern T1 T767f42(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_static */
extern T1 T766f38(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_static */
extern T1 T765f38(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_static */
extern T1 T764f43(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_static */
extern T1 T763f39(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.rescue_clause */
extern T0* T716f8(TC* ac, T0* C);
/* ET_DO_PROCEDURE.rescue_clause */
extern T0* T715f10(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.rescue_clause */
extern T0* T711f10(TC* ac, T0* C);
/* ET_DO_FUNCTION.rescue_clause */
extern T0* T710f10(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.rescue_clause */
extern T0* T707f9(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.rescue_clause */
extern T0* T767f14(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.rescue_clause */
extern T0* T766f13(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.rescue_clause */
extern T0* T764f16(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.rescue_clause */
extern T0* T763f15(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T114f1407(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T114f1415(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.lower_name */
extern T0* T543f31(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T922f6(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_inline_agent */
extern T1 T767s25(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_inline_agent */
extern T1 T766s23(TC* ac);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_inline_agent */
extern T1 T764s26(TC* ac);
/* ET_DO_FUNCTION_INLINE_AGENT.is_inline_agent */
extern T1 T763s24(TC* ac);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T766f59(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_do_procedure_inline_agent */
extern void T2208f51(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_do_procedure_inline_agent */
extern void T2208f51p1(TC* ac, T0* C, T0* a1);
extern T1 T2208f51p1ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1142f78(TC* ac, T0* C, T0* a1);
extern T1 T1142f78ot1(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_do_procedure_inline_agent */
extern void T2052f50(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_do_procedure_inline_agent_declaration */
extern void T2052f99(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T862f169(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T862f237(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T886f45(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T880f50(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T100f214(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T100f282(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T114f1339(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T114f1387(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T114f1386(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T765f57(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_external_function_inline_agent */
extern void T2208f50(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_external_function_inline_agent */
extern void T2208f50p1(TC* ac, T0* C, T0* a1);
extern T1 T2208f50p1ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1142f77(TC* ac, T0* C, T0* a1);
extern T1 T1142f77ot1(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_external_function_inline_agent */
extern void T2052f49(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_external_function_inline_agent_declaration */
extern void T2052f98(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T862f168(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T862f236(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T862f320(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T862f420(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.function_identity_any_type */
extern T0* T806f43(TC* ac, T0* C);
/* ET_ECF_SYSTEM.function_identity_any_type */
extern T0* T87f46(TC* ac, T0* C);
/* ET_SYSTEM.function_identity_any_type */
extern T0* T50f45(TC* ac, T0* C);
/* ET_ECF_LIBRARY.predicate_identity_type */
extern T0* T806f69(TC* ac, T0* C);
/* ET_ECF_SYSTEM.predicate_identity_type */
extern T0* T87f72(TC* ac, T0* C);
/* ET_SYSTEM.predicate_identity_type */
extern T0* T50f71(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T862f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T1152f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T862f315(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_inline_agent_result_indexes */
extern void T862f314(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T765f64(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T764f71(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T763f66(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_result_index */
extern void T765f63(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_result_index */
extern void T764f70(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_result_index */
extern void T763f65(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T886f44(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T880f49(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T100f213(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T100f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T100f369(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T100f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T100f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T100f364(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T768f15(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T767f17(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T766f16(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T765f17(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T764f19(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T763f18(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.detachable_type */
extern T0* T95f82(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_inline_agent_result_indexes */
extern void T100f363(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T114f1338(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T114f1385(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T114f1384(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T764f65(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_once_function_inline_agent */
extern void T2208f49(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_once_function_inline_agent */
extern void T2208f49p1(TC* ac, T0* C, T0* a1);
extern T1 T2208f49p1ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1142f76(TC* ac, T0* C, T0* a1);
extern T1 T1142f76ot1(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_once_function_inline_agent */
extern void T2052f48(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_once_function_inline_agent_declaration */
extern void T2052f97(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T862f167(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T862f235(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T63f409(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T1466c1097(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T1885f18(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vevi0d_error */
extern void T42f409(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_result */
extern T1 T885f6(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T886f43(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T880f48(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T100f212(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T100f280(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T114f1337(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T114f1383(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_object */
extern T1 T764f24(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T114f1382(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T763f60(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_do_function_inline_agent */
extern void T2208f48(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_do_function_inline_agent */
extern void T2208f48p1(TC* ac, T0* C, T0* a1);
extern T1 T2208f48p1ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1142f75(TC* ac, T0* C, T0* a1);
extern T1 T1142f75ot1(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_do_function_inline_agent */
extern void T2052f47(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_do_function_inline_agent_declaration */
extern void T2052f96(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T862f166(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T862f234(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T886f42(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T880f47(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T100f211(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T100f279(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T114f1336(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T114f1381(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T114f1380(TC* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T380f41(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_call_agent */
extern void T2208f47(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_call_agent */
extern void T2208f47p1(TC* ac, T0* C, T0* a1);
extern T1 T2208f47p1ot1(TC* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T769f16(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_agent_open_target */
extern void T2208f138(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_agent_open_target */
extern void T2208f138p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_agent_open_target */
extern void T2052f216(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1142f122(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1601f13(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_agent_implicit_current_target */
extern void T2208f137(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_agent_implicit_current_target */
extern void T2052f94(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1142f113(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1142f74(TC* ac, T0* C, T0* a1);
extern T1 T1142f74ot1(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_call_agent */
extern void T2052f46(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern T0* T81s888(TC* ac);
/* ET_AGENT_KEYWORD.make */
extern T0* T277c14(TC* ac);
/* ET_AGENT_KEYWORD.make_token */
extern void T277f16(TC* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T277f17(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T277s7(TC* ac);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T862f180(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T862f247(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T862f247ot1(TC* ac, T0* a1);
extern T1 T862f247ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T862f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgmc0g_error */
extern void T63f466(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0g */
extern T0* T1466c1154(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0g_error */
extern void T42f466(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CALL_AGENT.is_procedure */
extern T1 T380f24(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T63f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T1466c1153(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T63f121(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T42f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T42f121(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T862f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T862f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.set_call_agent_indexes */
extern void T862f465(TC* ac, T0* C, T0* a1);
extern T1 T862f465ot1(TC* ac, T0* a1);
extern T1 T862f465ot2(TC* ac, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1893f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T862f430(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T862f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T63f508(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T1466c1196(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T63f139(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T42f508(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T42f139(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T862f429(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T862f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T380f45(TC* ac, T0* C, T1 a1);
/* ET_RESULT.make */
extern T0* T322c39(TC* ac);
/* ET_RESULT.make_token */
extern void T322f40(TC* ac, T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T322f41(TC* ac, T0* C);
/* ET_RESULT.tokens */
extern T0* T322s6(TC* ac);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T862f332(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T862f428(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T862f427(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T862f426(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T862f331(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T63f464(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T1466c1152(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T42f464(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T862f425(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T862f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T862f424(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T862f466(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vucr0j_error */
extern void T63f463(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0j */
extern T0* T1466c1151(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0j_error */
extern void T42f463(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T886f56(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T880f61(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T100f225(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T100f292(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f292ot1(TC* ac, T0* a1);
extern T1 T100f292ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T100f382(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T100f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T100f569(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f569ot1(TC* ac, T0* a1);
extern T1 T100f569ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T100f599(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_call_agent_indexes */
extern void T100f564(TC* ac, T0* C, T0* a1);
extern T1 T100f564ot1(TC* ac, T0* a1);
extern T1 T100f564ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T100f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T100f568(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T100f598(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f598ot1(TC* ac, T0* a1);
extern T1 T100f598ot2(TC* ac, T0* a1);
extern T1 T100f598ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T100f523(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T100f567(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T100f381(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T100f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T100f521(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T100f520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T100f380(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T100f519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T100f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T100f597(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T100f597ot1(TC* ac, T0* a1);
extern T1 T100f597ot2(TC* ac, T0* a1);
extern T1 T100f597ot3(TC* ac, T0* a1);
extern T1 T100f597ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T100f611(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T100f518(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T100f565(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T114f1300(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T114f1348(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T114f1347(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T740f21(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T740f19(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT.set_expression */
extern void T522f12(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.set_no_source_twin */
extern void T731f16(TC* ac, T0* C, T1 a1);
/* ET_STRIP_EXPRESSION.process */
extern void T634f38(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_strip_expression */
extern void T2208f46(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_strip_expression */
extern void T2208f46p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1142f73(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_strip_expression */
extern void T2052f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T862f122(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T862f191(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T862f273(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T63f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T1466c1046(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T63f75(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T42f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T42f75(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T63f357(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T1466c1045(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T63f74(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T42f357(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T42f74(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T63f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T1466c1044(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T42f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T634f24(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T886f10(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T880f15(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T100f167(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T100f236(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T100f318(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T114f1309(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T114f1357(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T572f41(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_manifest_tuple */
extern void T2208f45(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_manifest_tuple */
extern void T2208f45p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1142f72(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_manifest_tuple */
extern void T2052f44(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T862f118(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T862f185(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T862f185ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T862f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_named_type */
extern T0* T70f207(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T886f6(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T880f11(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T100f163(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T100f230(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f230ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T100f303(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f303ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T114f1305(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T114f1353(TC* ac, T0* C, T0* a1);
extern T1 T114f1353ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T951f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T951f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T951f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T951f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T951f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T951f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T951f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T951s32(TC* ac);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T951f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T951f61(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T1417s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T1416f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T951f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T951f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T951f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T951f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T951f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T951f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T951f56(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].force */
extern void T1417s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T1416f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T1416f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T951f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T951f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T951f43(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.process */
extern void T563f39(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_manifest_array */
extern void T2208f44(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_manifest_array */
extern void T2208f44p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1142f71(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_manifest_array */
extern void T2052f43(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T862f117(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T862f184(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_untyped_manifest_array_validity */
extern void T862f256(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T862f256ot1(TC* ac, T0* a1);
extern T1 T862f256ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_common_ancestor_types */
extern void T862f329(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].keep_first */
extern void T877f19(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_all_cursors_after */
extern void T877f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].item */
extern T0* T877f11(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.expression */
extern T0* T2069f4(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression */
extern T0* T2068f2(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.update_common_ancestor_type_list */
extern void T862f327(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_modifier */
extern T0* T81s917(TC* ac);
/* ET_TOKEN_CONSTANTS.detachable_type_modifier */
extern T0* T81s916(TC* ac);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove */
extern void T877f18(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_left */
extern void T877f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_cursors_left */
extern void T877f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T1320f8(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.put */
extern void T563f43(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T862f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T102f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.conforms_to_context_with_type_marks */
extern T1 T102f92(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_typed_manifest_array_validity */
extern void T862f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T862f255ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwma2a_error */
extern void T63f423(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vwma2a */
extern T0* T1466c1111(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T63f105(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma2a_error */
extern void T42f423(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T42f105(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwma1a_error */
extern void T63f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwma1a */
extern T0* T1466c1110(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T63f104(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma1a_error */
extern void T42f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T42f104(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T886f5(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T880f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T100f162(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T100f229(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_untyped_manifest_array_validity */
extern void T100f301(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f301ot1(TC* ac, T0* a1);
extern T1 T100f301ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_common_ancestor_types */
extern void T100f378(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.update_common_ancestor_type_list */
extern void T100f376(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T100f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f389ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_manifest_array_validity */
extern void T100f300(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T100f300ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_manifest_array */
extern void T114f1304(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T114f1352(TC* ac, T0* C, T0* a1);
extern T1 T114f1352ot1(TC* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T593f31(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_parenthesized_expression */
extern void T2208f43(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_parenthesized_expression */
extern void T2208f43p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1142f70(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_parenthesized_expression */
extern void T2052f42(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T862f119(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T862f186(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T886f7(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T880f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T100f164(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T100f231(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T114f1306(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T114f1354(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T377f33(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_bracket_expression */
extern void T2208f42(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_bracket_expression */
extern void T2208f42p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1142f69(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_bracket_expression */
extern void T2052f41(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T862f179(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T862f246(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T886f55(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T880f60(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T100f224(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T100f291(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T114f1299(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T114f1346(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.process */
extern void T758f33(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_object_test */
extern void T2208f41(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_object_test */
extern void T2208f41p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_test */
extern void T1142f68(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_object_test */
extern void T2052f40(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_test */
extern void T862f162(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_validity */
extern void T862f231(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_test */
extern void T862f310(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_object_test_type */
extern void T862f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T880f43(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T100f207(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T100f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T100f359(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T100f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_object_test */
extern void T114f1332(TC* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T756f31(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_old_expression */
extern void T2208f40(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_old_expression */
extern void T2208f40p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1142f67(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_old_expression */
extern void T2052f39(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T862f160(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T862f229(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T63f398(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T1466c1086(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T63f95(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T42f398(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T42f95(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T886f36(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T880f41(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T100f205(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T100f274(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T114f1330(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T114f1376(TC* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T755f34(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_prefix_expression */
extern void T2208f39(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_prefix_expression */
extern void T2208f39p1(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.process */
extern void T304f65(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_free_operator */
extern void T2208f133(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_free_operator */
extern void T2052f185(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.process */
extern void T313f67(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_keyword_operator */
extern void T2208f132(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_keyword_operator */
extern void T2052f186(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1142f66(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_prefix_expression */
extern void T2052f38(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_prefix_expression */
extern T1 T307f118(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_prefix_expression */
extern T1 T683f65(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_prefix_expression */
extern T1 T682f65(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_prefix_expression */
extern T1 T681f65(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_prefix_expression */
extern T1 T680f65(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_prefix_expression */
extern T1 T679f65(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_prefix_expression */
extern T1 T678f52(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_prefix_expression */
extern T1 T677f48(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_prefix_expression */
extern T1 T675f49(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_prefix_expression */
extern T1 T761f25(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_prefix_expression */
extern T1 T617f40(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_prefix_expression */
extern T1 T343f41(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_prefix_expression */
extern T1 T760f28(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_prefix_expression */
extern T1 T759f30(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_prefix_expression */
extern T1 T757f33(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_prefix_expression */
extern T1 T745f25(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_prefix_expression */
extern T1 T1045f32(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_prefix_expression */
extern T1 T768f45(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_prefix_expression */
extern T1 T767f50(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_prefix_expression */
extern T1 T766f46(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_prefix_expression */
extern T1 T765f46(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_prefix_expression */
extern T1 T764f51(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_prefix_expression */
extern T1 T763f47(TC* ac, T0* C);
/* ET_CALL_AGENT.is_prefix_expression */
extern T1 T380f35(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_prefix_expression */
extern T1 T634f32(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_prefix_expression */
extern T1 T572f32(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_prefix_expression */
extern T1 T563f32(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_prefix_expression */
extern T1 T593f26(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_prefix_expression */
extern T1 T377f29(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_prefix_expression */
extern T1 T758f28(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_prefix_expression */
extern T1 T756f26(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_prefix_expression */
extern T1 T755s30(TC* ac);
/* ET_MANIFEST_TYPE.is_prefix_expression */
extern T1 T754f26(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_prefix_expression */
extern T1 T753f27(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_prefix_expression */
extern T1 T752f25(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_prefix_expression */
extern T1 T749f30(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_prefix_expression */
extern T1 T748f25(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_prefix_expression */
extern T1 T747f25(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_prefix_expression */
extern T1 T746f25(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_prefix_expression */
extern T1 T744f30(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_prefix_expression */
extern T1 T631f34(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_prefix_expression */
extern T1 T383f30(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_prefix_expression */
extern T1 T534f28(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_prefix_expression */
extern T1 T513f31(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_prefix_expression */
extern T1 T440f37(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_prefix_expression */
extern T1 T690f49(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_prefix_expression */
extern T1 T689f48(TC* ac, T0* C);
/* ET_CURRENT.is_prefix_expression */
extern T1 T301f36(TC* ac, T0* C);
/* ET_RESULT.is_prefix_expression */
extern T1 T322f36(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_prefix_expression */
extern T1 T688f41(TC* ac, T0* C);
/* ET_VOID.is_prefix_expression */
extern T1 T331f33(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_prefix_expression */
extern T1 T687f41(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_prefix_expression */
extern T1 T685f43(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_prefix_expression */
extern T1 T684f43(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_prefix_expression */
extern T1 T676f47(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T862f159(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T862f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T886f35(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T880f40(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T100f204(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T100f273(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T114f1329(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T114f1375(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T754f30(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_manifest_type */
extern void T2208f38(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_manifest_type */
extern void T2208f38p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1142f65(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_manifest_type */
extern void T2052f37(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T862f158(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T862f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T862f307(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.type_identity_type */
extern T0* T806f94(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_identity_type */
extern T0* T87f97(TC* ac, T0* C);
/* ET_SYSTEM.type_identity_type */
extern T0* T50f96(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T886f34(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T880f39(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T100f203(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T100f272(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T100f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T114f1328(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T114f1374(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T753f31(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_object_equality_expression */
extern void T2208f37(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_object_equality_expression */
extern void T2208f37p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1142f64(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_object_equality_expression */
extern void T2052f36(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T862f157(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T862f226(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T862f306(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T63f397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T1466c1085(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T63f94(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0b_error */
extern void T42f397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T42f94(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T753f36(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T753f35(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.name */
extern T0* T753f18(TC* ac, T0* C);
/* ET_IDENTIFIER.twin */
extern T0* T307f83(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern T0* T81s755(TC* ac);
/* ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T753s23(TC* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T886f33(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T880f38(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T100f202(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T100f271(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T100f355(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T100f503(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T1060f101(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T2047f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T1059f101(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T904f97(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T978f99(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_object_equality_expression */
extern void T843f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T2047c6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_object_equality_expression */
extern void T114f1327(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_equality_expression */
extern void T114f1373(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_object_equality_types */
extern void T114f797(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.set_right */
extern void T977f6(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.set_left */
extern void T977f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].force_last */
extern void T930f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].force */
extern void T1381s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].fill_with */
extern void T1382f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].extend */
extern void T1382f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].resize */
extern void T930f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].aliased_resized_area */
extern T0* T1381s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].aliased_resized_area */
extern T0* T1382f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].new_capacity */
extern T6 T930f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].extendible */
extern T1 T930f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].last */
extern T0* T929f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].is_empty */
extern T1 T929f10(TC* ac, T0* C);
/* ET_C_GENERATOR.print_equality_call */
extern void T114f1402(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.print_equality_function_name */
extern void T114f852(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].force_last */
extern void T929f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].force */
extern void T1379s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].fill_with */
extern void T1378f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].extend */
extern void T1378f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].resize */
extern void T929f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].aliased_resized_area */
extern T0* T1379s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].aliased_resized_area */
extern T0* T1378f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].new_capacity */
extern T6 T929f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].extendible */
extern T1 T929f7(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_equality_call_with_one_object_equality */
extern void T114f891(TC* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_equality_call_with_zero_object_equality */
extern void T114f890(TC* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.add_common_types_to_list */
extern void T977f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.add_common_types_to_list */
extern void T1839f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.add_common_types_to_list */
extern void T1061f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.add_common_types_to_list */
extern void T981f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.add_common_types_to_list */
extern void T1060f99(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.add_common_types_to_list */
extern void T1059f99(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.add_common_types_to_list */
extern void T936f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.add_common_types_to_list */
extern void T978f97(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.add_common_types_to_list */
extern void T904f95(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.add_common_types_to_list */
extern void T843f93(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_EQUALITY_TYPES.add_common_types_to_list */
extern void T975f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T1839f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T1061f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SECONDARY_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T981f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T1060f98(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T1059f98(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T936f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T978f96(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T904f94(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRIMARY_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T843f92(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYMBOL_OPERATOR.is_not_tilde */
extern T1 T328f97(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T337f86(TC* ac, T0* C);
/* ET_SYMBOL.is_not_tilde */
extern T1 T286f83(TC* ac, T0* C);
/* ET_C_GENERATOR.new_object_equality_types */
extern T0* T114f632(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].remove_last */
extern void T930f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].keep_head */
extern void T1382f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_count */
extern void T1382f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].move_last_cursors_after */
extern void T930f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_next_cursor */
extern void T1383f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_after */
extern void T1383f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].last */
extern T0* T930f10(TC* ac, T0* C);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.make */
extern T0* T977c3(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].is_empty */
extern T1 T930f9(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.process */
extern void T752f29(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_equality_expression */
extern void T2208f36(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_equality_expression */
extern void T2208f36p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1142f63(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_equality_expression */
extern void T2052f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T862f156(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T862f225(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T862f305(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T63f396(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T1466c1084(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T42f396(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EQUALITY_EXPRESSION.set_left */
extern void T752f34(TC* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_right */
extern void T752f33(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T886f32(TC* ac, T0* C, T0* a1);
extern T1 T886f32ot1(TC* ac, T0* a1);
extern T1 T886f32ot2(TC* ac, T0* a1);
extern T1 T886f32ot3(TC* ac, T0* a1);
extern T1 T886f32ot4(TC* ac, T0* a1);
extern T1 T886f32ot5(TC* ac, T0* a1);
extern T1 T886f32ot6(TC* ac, T0* a1);
extern T1 T886f32ot7(TC* ac, T0* a1);
extern T1 T886f32ot8(TC* ac, T0* a1);
extern T1 T886f32ot9(TC* ac, T0* a1);
extern T1 T886f32ot10(TC* ac, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T1896f14(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.unparenthesized_expression */
extern T0* T992f15(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T2070f12(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T2069f14(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T2068f11(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_equal_symbol */
extern T1 T328f110(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T337f102(TC* ac, T0* C);
/* ET_SYMBOL.is_equal_symbol */
extern T1 T286f90(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T880f37(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T100f201(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T100f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T100f354(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T100f502(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T1060f100(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T2046f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T1059f100(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T904f96(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T978f98(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_equality_expression */
extern void T843f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T2046c6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_equality_expression */
extern void T114f1326(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T114f1372(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_equality_types */
extern void T114f798(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_TYPES.set_right */
extern void T975f6(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_TYPES.set_left */
extern void T975f5(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_not_equal */
extern T1 T328f96(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T337f85(TC* ac, T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T286f82(TC* ac, T0* C);
/* ET_C_GENERATOR.new_equality_types */
extern T0* T114f631(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].remove_last */
extern void T929f18(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].keep_head */
extern void T1378f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].set_count */
extern void T1378f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].move_last_cursors_after */
extern void T929f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].set_next_cursor */
extern void T1380f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].set_after */
extern void T1380f6(TC* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_TYPES.make */
extern T0* T975c3(TC* ac, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.process */
extern void T749f34(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_infix_expression */
extern void T2208f35(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_infix_expression */
extern void T2208f35p1(TC* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.process */
extern void T751f46(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_infix_or_else_operator */
extern void T2208f135(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_infix_or_else_operator */
extern void T2208f135p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_infix_or_else_operator */
extern void T2052f215(TC* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.process */
extern void T750f46(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_infix_and_then_operator */
extern void T2208f134(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_infix_and_then_operator */
extern void T2208f134p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_infix_and_then_operator */
extern void T2052f214(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1142f62(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_infix_expression */
extern void T2052f34(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T862f155(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T862f224(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T886f31(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T880f36(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T100f200(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T100f269(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T114f1325(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T114f1371(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_semistrict_infix_expression */
extern void T114f1401(TC* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T748f30(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_expression_address */
extern void T2208f34(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_expression_address */
extern void T2208f34p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1142f61(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_expression_address */
extern void T2052f33(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T862f154(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T862f223(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T886f30(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T880f35(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T100f199(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T100f268(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T114f1324(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T114f1370(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T745c28(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern T0* T81s903(TC* ac);
/* ET_SYMBOL.make_dollar */
extern T0* T286c100(TC* ac);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T745s5(TC* ac);
/* ET_RESULT_ADDRESS.process */
extern void T747f30(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_result_address */
extern void T2208f33(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_result_address */
extern void T2208f33p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1142f60(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_result_address */
extern void T2052f32(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern T0* T81s604(TC* ac);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T862f153(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T862f222(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T63f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T1466c1082(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T42f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T63f393(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T1466c1081(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T42f393(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T63f392(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T1466c1080(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T42f392(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T886f29(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T880f34(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T100f198(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T100f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T114f1323(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T114f1369(TC* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T746f30(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_current_address */
extern void T2208f32(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_current_address */
extern void T2208f32p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1142f59(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_current_address */
extern void T2052f31(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T862f152(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T862f221(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0g_error */
extern void T63f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0g */
extern T0* T1466c1079(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0g_error */
extern void T42f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T886f28(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T880f33(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T100f197(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T100f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T114f1322(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T114f1368(TC* ac, T0* C, T0* a1);
extern T1 T114f1368ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T744f36(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_precursor_expression */
extern void T2208f31(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_precursor_expression */
extern void T2208f31p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1142f58(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_precursor_expression */
extern void T2052f30(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T862f150(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T862f219(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T862f219ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T63f378(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T1466c1066(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T42f378(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T886f26(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T880f31(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T100f195(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T100f264(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f264ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T114f1320(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T114f1366(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T631f39(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_static_call_expression */
extern void T2208f30(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_static_call_expression */
extern void T2208f30p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1142f57(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_static_call_expression */
extern void T2052f29(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T862f121(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T862f190(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T862f270(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T886f9(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T880f14(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T100f166(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T100f235(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T100f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T114f1308(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T114f1356(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T383f35(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_call_expression */
extern void T2208f29(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_qualified_call_expression */
extern void T2208f29p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1142f56(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_qualified_call_expression */
extern void T2052f28(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T862f178(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T886f54(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T880f59(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T100f223(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_expression */
extern void T114f1272(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_EXPRESSION.process */
extern void T534f33(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inspect_expression */
extern void T2208f28(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_inspect_expression */
extern void T2208f28p1(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION_LIST.process */
extern void T660f14(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_when_expression_list */
extern void T2208f130(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_when_expression_list */
extern void T2208f130p1(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION.process */
extern void T657f13(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_when_expression */
extern void T2208f174(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_when_expression */
extern void T2208f174p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_when_expression */
extern void T2052f227(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_when_expression_list */
extern void T2052f209(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_expression */
extern void T1142f55(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_expression_list */
extern void T1142f105(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_expression */
extern void T1142f112(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_inspect_expression */
extern void T2052f27(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern T0* T81s650(TC* ac);
/* ET_KEYWORD.make_else */
extern T0* T192c72(TC* ac);
/* ET_FEATURE_CHECKER.process_inspect_expression */
extern void T862f177(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_expression_validity */
extern void T862f245(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inspect_expression */
extern void T862f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_inspect_expression */
extern void T886f53(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_inspect_expression */
extern void T880f58(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_expression */
extern void T100f222(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_expression_validity */
extern void T100f290(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inspect_expression */
extern void T100f379(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inspect_expression_dynamic_types */
extern void T100f517(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_inspect_expression */
extern void T114f1303(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_expression */
extern void T114f1351(TC* ac, T0* C, T0* a1);
extern T1 T114f1351ot1(TC* ac, T0* a1);
extern T1 T114f1351ot2(TC* ac, T0* a1);
extern T1 T114f1351ot3(TC* ac, T0* a1);
extern T1 T114f1351ot4(TC* ac, T0* a1);
extern T1 T114f1351ot5(TC* ac, T0* a1);
extern T1 T114f1351ot6(TC* ac, T0* a1);
/* ET_IF_EXPRESSION.process */
extern void T513f36(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_if_expression */
extern void T2208f27(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_if_expression */
extern void T2208f27p1(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.process */
extern void T456f14(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_elseif_expression_list */
extern void T2208f129(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_elseif_expression_list */
extern void T2208f129p1(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION.process */
extern void T453f13(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_elseif_expression */
extern void T2208f161(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_elseif_expression */
extern void T2208f161p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_elseif_expression */
extern void T2052f219(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression */
extern void T1142f119(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_elseif_expression_list */
extern void T2052f195(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_expression */
extern void T1142f54(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression_list */
extern void T1142f104(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_if_expression */
extern void T2052f26(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_expression */
extern void T862f176(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_expression_validity */
extern void T862f244(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_if_expression */
extern void T862f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_if_expression */
extern void T886f52(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_if_expression */
extern void T880f57(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_expression */
extern void T100f221(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_expression_validity */
extern void T100f289(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_if_expression */
extern void T100f377(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_if_expression_dynamic_types */
extern void T100f516(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_if_expression */
extern void T114f1302(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_expression */
extern void T114f1350(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T440f43(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_create_expression */
extern void T2208f26(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_create_expression */
extern void T2208f26p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1142f53(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_create_expression */
extern void T2052f25(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T862f175(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T862f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vkex4ga_error */
extern void T63f415(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkex4ga */
extern T0* T1466c1103(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkex4g_error */
extern T1 T63f100(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkex4ga_error */
extern void T42f415(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkex4g_error */
extern T1 T42f100(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T886f51(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T880f56(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T100f220(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T100f288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_create_expression */
extern void T114f1301(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T114f1349(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.process */
extern void T723f12(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_class_assertion */
extern void T2208f103(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_class_assertion */
extern void T2208f103p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_class_assertion */
extern void T2052f213(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern T0* T81s574(TC* ac);
/* ET_KEYWORD.make_class */
extern T0* T192c49(TC* ac);
/* ET_PRECURSOR_CHECKER.process_class_assertion */
extern void T1142f121(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T690f56(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_c2_character_constant */
extern void T2208f25(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_c2_character_constant */
extern void T2208f25p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1142f52(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_c2_character_constant */
extern void T2052f24(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_c2_character_constant_without_cast_type */
extern void T2052f76(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T862f137(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T862f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T886f25(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T880f30(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T100f182(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T100f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T114f1277(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T689f57(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_c1_character_constant */
extern void T2208f24(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_c1_character_constant */
extern void T2208f24p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1142f51(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_c1_character_constant */
extern void T2052f23(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_c1_character_constant_without_cast_type */
extern void T2052f75(TC* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.natural_32_code_to_utf8 */
extern T10 T168s55(TC* ac, T10 a1);
/* ET_C1_CHARACTER_CONSTANT.literal */
extern T3 T689f49(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T862f136(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T862f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T886f24(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T880f29(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T100f181(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T100f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T114f1319(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T301f42(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_current */
extern void T2208f12(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1142f50(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_current */
extern void T2052f22(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T862f174(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T862f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T862f325(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0f_error */
extern void T63f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0f */
extern T0* T1466c1102(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0f_error */
extern void T42f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T886f50(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T880f55(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T100f219(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T100f287(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T100f374(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T114f1296(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T114f1343(TC* ac, T0* C, T0* a1);
extern T1 T114f1343ot1(TC* ac, T0* a1);
/* ET_RESULT.process */
extern void T322f43(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_result */
extern void T2208f11(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1142f49(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_result */
extern void T2052f21(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T862f173(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T862f241(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T862f324(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T63f413(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T1466c1101(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0b_error */
extern void T42f413(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T886f49(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T880f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T100f218(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T100f286(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result */
extern void T114f1297(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T114f1344(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T688f48(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_false_constant */
extern void T2208f10(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1142f48(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_false_constant */
extern void T2052f20(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.false_keyword */
extern T0* T81s1563(TC* ac);
/* ET_FALSE_CONSTANT.make */
extern T0* T688c46(TC* ac);
/* ET_FALSE_CONSTANT.make_token */
extern void T688f49(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T688f50(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T862f135(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T862f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T862f279(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T886f23(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T880f28(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T100f180(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T100f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T100f324(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T114f1276(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T114f1285(TC* ac, T0* C, T0* a1);
/* ET_VOID.process */
extern void T331f39(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_void */
extern void T2208f9(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1142f47(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_void */
extern void T2052f19(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.void_keyword */
extern T0* T81s1562(TC* ac);
/* ET_VOID.make */
extern T0* T331c37(TC* ac);
/* ET_VOID.make_token */
extern void T331f40(TC* ac, T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T331f41(TC* ac, T0* C);
/* ET_VOID.tokens */
extern T0* T331s6(TC* ac);
/* ET_FEATURE_CHECKER.process_void */
extern void T862f172(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T862f240(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T862f323(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_void_index */
extern void T862f322(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T886f48(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T880f53(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T100f217(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T100f285(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T100f372(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_void_index */
extern void T100f371(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T114f1271(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T114f1281(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T687f50(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_true_constant */
extern void T2208f8(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1142f46(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_true_constant */
extern void T2052f18(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.true_keyword */
extern T0* T81s65(TC* ac);
/* ET_TRUE_CONSTANT.make */
extern T0* T687c46(TC* ac);
/* ET_TRUE_CONSTANT.make_token */
extern void T687f47(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T687f48(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T862f134(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T862f203(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T886f22(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T880f27(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T100f179(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T100f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_true_constant */
extern void T114f1318(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T114f1365(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T685f52(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_underscored_real_constant */
extern void T2208f23(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_underscored_real_constant */
extern void T2208f23p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1142f45(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_underscored_real_constant */
extern void T2052f17(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_real_constant */
extern void T2052f73(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_real_constant_without_cast_type */
extern void T2052f110(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T862f133(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T862f202(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T862f277(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T685f57(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T684f57(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T862f391(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_real_64_index */
extern void T862f390(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T862f389(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_real_32_index */
extern void T862f388(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T63f434(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T1466c1122(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T42f434(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T886f21(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T880f26(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T100f178(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T100f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T100f322(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T100f441(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_real_64_index */
extern void T100f440(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T100f439(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_real_32_index */
extern void T100f438(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T114f1317(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T114f1364(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T685f13(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T684f50(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_regular_real_constant */
extern void T2208f22(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_regular_real_constant */
extern void T2208f22p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1142f44(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_regular_real_constant */
extern void T2052f16(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T862f132(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T862f201(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T886f20(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T880f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T100f177(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T100f246(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T114f1275(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T114f1284(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T684f33(TC* ac, T0* C);
/* ET_INVARIANTS.item */
extern T0* T543f10(TC* ac, T0* C, T6 a1);
/* ET_INVARIANT_KEYWORD.process */
extern void T280f63(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_invariant_keyword */
extern void T2208f80(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_invariant_keyword */
extern void T2052f183(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_invariants */
extern void T2052f117(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.is_empty */
extern T1 T543f41(TC* ac, T0* C);
/* ET_INVARIANTS.break */
extern T0* T543f42(TC* ac, T0* C);
/* ET_INVARIANTS.last_leaf */
extern T0* T543f43(TC* ac, T0* C);
/* ET_INVARIANTS.last */
extern T0* T543f44(TC* ac, T0* C);
/* ET_C_GENERATOR.process_invariants */
extern void T114f1451(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_invariants_wrapper */
extern void T114f1478(TC* ac, T0* C);
/* DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32].item_1 */
extern T0* T898f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32].item_2 */
extern T6 T898f10(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T114f1500(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_COMMENT_FINDER.process_features */
extern void T2208f122(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_features */
extern void T2208f122p1(TC* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T774f7(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.synonym */
extern T0* T718f23(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.synonym */
extern T0* T717f24(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.synonym */
extern T0* T716f23(TC* ac, T0* C);
/* ET_DO_PROCEDURE.synonym */
extern T0* T715f26(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T718f109(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_external_procedure */
extern void T2208f159(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_external_procedure */
extern void T2208f159p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_external_procedure */
extern void T2052f141(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern T0* T81s678(TC* ac);
/* ET_KEYWORD.make_obsolete */
extern T0* T192c100(TC* ac);
/* ET_AST_PRETTY_PRINTER.process_note_clause */
extern void T2052f164(TC* ac, T0* C, T0* a1, T1 a2);
extern T1 T2052f164ot1(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_tagged_note_indented */
extern void T2052f170(TC* ac, T0* C, T0* a1);
extern T1 T2052f170ot1(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.string_ */
extern T0* T2052s13(TC* ac);
/* ET_NOTE_LIST.item */
extern T0* T575f12(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern T0* T81s649(TC* ac);
/* ET_KEYWORD.make_is */
extern T0* T192c71(TC* ac);
/* ET_AST_PRETTY_PRINTER.process_extended_feature_name_of_feature */
extern void T2052f163(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.is_empty */
extern T1 T371f7(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1142f23(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1141f25(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_feature_validity */
extern void T1141f26(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1141f27(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T63f609(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T1466c1287(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T63f190(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T42f609(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T42f190(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1141f9(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1141f53(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1141f8(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T718f107(TC* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T714f110(TC* ac, T0* C, T8 a1, T8 a2);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern T0* T81s49(TC* ac);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern T0* T81s975(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_feature_validity */
extern void T1141f52(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_expected_builtin_feature_validity */
extern void T1141f55(TC* ac, T0* C, T0* a1, T8 a2, T0* a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_signature_validity */
extern void T1141f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T63f610(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T1466c1288(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.to_text */
extern T0* T1290f34(TC* ac, T0* C);
/* ET_LIKE_N.append_to_string */
extern void T1290f44(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T63f191(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T42f610(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T42f191(TC* ac, T0* C, T0* a1);
/* ARRAY [ET_TYPE].item */
extern T0* T854f4(TC* ac, T0* C, T6 a1);
/* ARRAY [ET_TYPE].count */
extern T6 T854f5(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found_item */
extern T0* T2022f28(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_item */
extern T0* T2022f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found */
extern T1 T2022f29(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search */
extern void T2022f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search_position */
extern void T2022f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].hash_position */
extern T6 T2022f23(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1126f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_item */
extern T0* T2022f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_item */
extern T6 T2022f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_item */
extern T6 T2022f26(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern T0* T81s1558(TC* ac);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern T0* T81s1556(TC* ac);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern T0* T81s1554(TC* ac);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern T0* T81s1501(TC* ac);
/* ET_TOKEN_CONSTANTS.quotient_feature_name */
extern T0* T81s1497(TC* ac);
/* ET_TOKEN_CONSTANTS.product_feature_name */
extern T0* T81s1495(TC* ac);
/* ET_TOKEN_CONSTANTS.power_feature_name */
extern T0* T81s1493(TC* ac);
/* ET_TOKEN_CONSTANTS.plus_feature_name */
extern T0* T81s1073(TC* ac);
/* ET_ECF_LIBRARY.string_type */
extern T0* T806f80(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_type */
extern T0* T87f83(TC* ac, T0* C);
/* ET_SYSTEM.string_type */
extern T0* T50f82(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern T0* T81s1071(TC* ac);
/* ET_TOKEN_CONSTANTS.opposite_feature_name */
extern T0* T81s1490(TC* ac);
/* ET_TOKEN_CONSTANTS.minus_feature_name */
extern T0* T81s1488(TC* ac);
/* ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern T0* T81s1544(TC* ac);
/* ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern T0* T81s1542(TC* ac);
/* ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern T0* T81s1540(TC* ac);
/* ET_TOKEN_CONSTANTS.is_less_feature_name */
extern T0* T81s1486(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_minimum_number_feature_name */
extern T0* T81s1537(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_maximum_number_feature_name */
extern T0* T81s1535(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_is_less_equal_feature_name */
extern T0* T81s1533(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_is_less_feature_name */
extern T0* T81s1531(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_is_greater_equal_feature_name */
extern T0* T81s1529(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_is_greater_feature_name */
extern T0* T81s1527(TC* ac);
/* ET_TOKEN_CONSTANTS.ieee_is_equal_feature_name */
extern T0* T81s1525(TC* ac);
/* ET_TOKEN_CONSTANTS.identity_feature_name */
extern T0* T81s1480(TC* ac);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern T0* T81s1522(TC* ac);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern T0* T81s1520(TC* ac);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern T0* T81s1518(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.register_builtin_feature */
extern void T1141f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T8 a4, T0* a5);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].force_last */
extern void T2022f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_put */
extern void T2022f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].force */
extern void T1703s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].fill_with */
extern void T1701f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].extend */
extern void T1701f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_put */
extern void T2022f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_put */
extern void T2022f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].resize */
extern void T2022f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_resize */
extern void T2022f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].special_integer_ */
extern T0* T2022s31(TC* ac);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_resize */
extern void T2022f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1703s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1701f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_resize */
extern void T2022f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T2180s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T2177f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_resize */
extern void T2022f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_modulus */
extern T6 T2022f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_capacity */
extern T6 T2022f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_put */
extern void T2022f41(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].force */
extern void T2180s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].fill_with */
extern void T2177f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].extend */
extern void T2177f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].unset_found_item */
extern void T2022f39(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern T0* T81s1516(TC* ac);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].force_last */
extern void T1730f43(TC* ac, T0* C, T0* a1, T8 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_put */
extern void T1730f49(TC* ac, T0* C, T8 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_8].force */
extern void T1749s4(TC* ac, T0* a1, T8 a2, T6 a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_put */
extern void T1730f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_put */
extern void T1730f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_item */
extern T6 T1730f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].hash_position */
extern T6 T1730f23(TC* ac, T0* C, T8 a1);
/* NATURAL_8.hash_code */
extern T6 T8f29(TC* ac, T8 volatile* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].resize */
extern void T1730f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_resize */
extern void T1730f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].special_integer_ */
extern T0* T1730s31(TC* ac);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_resize */
extern void T1730f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].aliased_resized_area */
extern T0* T1749s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [NATURAL_8].aliased_resized_area */
extern T0* T1075f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_resize */
extern void T1730f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T2021s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T2023f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_item */
extern T8 T1730f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_item */
extern T6 T1730f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_resize */
extern void T1730f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_modulus */
extern T6 T1730f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_capacity */
extern T6 T1730f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_put */
extern void T1730f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].force */
extern void T2021s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].fill_with */
extern void T2023f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].extend */
extern void T2023f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search_position */
extern void T1730f44(TC* ac, T0* C, T8 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].unset_found_item */
extern void T1730f40(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_key_equality_tester */
extern void T2022f35(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.feature_name_tester */
extern T0* T1141s10(TC* ac);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1126c2(TC* ac);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_map */
extern T0* T2022c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_with_equality_testers */
extern void T2022f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_sparse_container */
extern void T2022f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_internal_cursor */
extern void T2022f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_cursor */
extern T0* T2022f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make */
extern T0* T2181c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_slots */
extern void T2022f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_clashes */
extern void T2022f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_key_storage */
extern void T2022f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T1703s1(TC* ac, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make_empty */
extern T0* T1701c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T1703c3(TC* ac);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_item_storage */
extern void T2022f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make */
extern T0* T2180s2(TC* ac, T6 a1);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make_empty */
extern T0* T2177c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].default_create */
extern T0* T2180c3(TC* ac);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found_item */
extern T0* T1730f20(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_item */
extern T0* T1730f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found */
extern T1 T1730f32(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search */
extern void T1730f42(TC* ac, T0* C, T8 a1);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern T0* T81s48(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_ref_feature_validity */
extern void T1141f51(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern T0* T81s1039(TC* ac);
/* ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern T0* T81s1513(TC* ac);
/* ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern T0* T81s1511(TC* ac);
/* ET_TOKEN_CONSTANTS.nan_feature_name */
extern T0* T81s1509(TC* ac);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern T0* T81s580(TC* ac);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern T0* T81s972(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern T0* T81s43(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern T0* T81s969(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern T0* T81s42(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern T0* T81s966(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern T0* T81s41(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern T0* T81s963(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern T0* T81s40(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern T0* T81s960(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern T0* T81s35(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern T0* T81s957(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern T0* T81s34(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern T0* T81s954(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern T0* T81s33(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern T0* T81s951(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_feature_validity */
extern void T1141f50(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern T0* T81s1507(TC* ac);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern T0* T81s1505(TC* ac);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern T0* T81s1503(TC* ac);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern T0* T81s1047(TC* ac);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern T0* T81s1045(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern T0* T81s1484(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern T0* T81s1482(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern T0* T81s1478(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern T0* T81s1476(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern T0* T81s1474(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern T0* T81s1472(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern T0* T81s1470(TC* ac);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern T0* T81s1468(TC* ac);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern T0* T81s1466(TC* ac);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern T0* T81s1464(TC* ac);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern T0* T81s1462(TC* ac);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern T0* T81s1460(TC* ac);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern T0* T81s1458(TC* ac);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern T0* T81s1456(TC* ac);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern T0* T81s1454(TC* ac);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern T0* T81s1452(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern T0* T81s32(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_ref_feature_validity */
extern void T1141f49(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern T0* T81s948(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_feature_validity */
extern void T1141f48(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern T0* T81s1449(TC* ac);
/* ET_ECF_LIBRARY.double_type */
extern T0* T806f39(TC* ac, T0* C);
/* ET_ECF_SYSTEM.double_type */
extern T0* T87f42(TC* ac, T0* C);
/* ET_SYSTEM.double_type */
extern T0* T50f41(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern T0* T81s1446(TC* ac);
/* ET_ECF_LIBRARY.real_type */
extern T0* T806f71(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_type */
extern T0* T87f74(TC* ac, T0* C);
/* ET_SYSTEM.real_type */
extern T0* T50f73(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern T0* T81s1444(TC* ac);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern T0* T81s1442(TC* ac);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern T0* T81s1440(TC* ac);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern T0* T81s1438(TC* ac);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern T0* T81s1436(TC* ac);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern T0* T81s1434(TC* ac);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern T0* T81s1432(TC* ac);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern T0* T81s1430(TC* ac);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern T0* T81s1428(TC* ac);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern T0* T81s1426(TC* ac);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern T0* T81s1424(TC* ac);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern T0* T81s1422(TC* ac);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern T0* T81s1420(TC* ac);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern T0* T81s1417(TC* ac);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern T0* T81s1415(TC* ac);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern T0* T81s584(TC* ac);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern T0* T81s1413(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern T0* T81s1411(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern T0* T81s1409(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern T0* T81s1407(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern T0* T81s1405(TC* ac);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern T0* T81s1403(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern T0* T81s1401(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern T0* T81s1399(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern T0* T81s1397(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern T0* T81s1395(TC* ac);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern T0* T81s578(TC* ac);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern T0* T81s1392(TC* ac);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern T0* T81s1390(TC* ac);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern T0* T81s1388(TC* ac);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern T0* T81s18(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_feature_validity */
extern void T1141f47(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.detachable_separate_formal_parameter_type */
extern T0* T1141f11(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_mark */
extern T0* T81s16(TC* ac);
/* ET_TOKEN_CONSTANTS.fast_item_feature_name */
extern T0* T81s1386(TC* ac);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern T0* T81s28(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_feature_validity */
extern void T1141f46(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_call_feature_name */
extern T0* T81s1384(TC* ac);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern T0* T81s756(TC* ac);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern T0* T81s46(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_feature_validity */
extern void T1141f45(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern T0* T81s1382(TC* ac);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern T0* T81s1380(TC* ac);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern T0* T81s1378(TC* ac);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern T0* T81s1376(TC* ac);
/* ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern T0* T81s1374(TC* ac);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern T0* T81s1372(TC* ac);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern T0* T81s1370(TC* ac);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern T0* T81s1368(TC* ac);
/* ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern T0* T81s1366(TC* ac);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern T0* T81s1364(TC* ac);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern T0* T81s1362(TC* ac);
/* ET_TOKEN_CONSTANTS.is_64_bits_feature_name */
extern T0* T81s1360(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern T0* T81s1358(TC* ac);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern T0* T81s1356(TC* ac);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern T0* T81s1354(TC* ac);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern T0* T81s1352(TC* ac);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern T0* T81s947(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_runtime_feature_validity */
extern void T1141f44(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unmark_object_feature_name */
extern T0* T81s1349(TC* ac);
/* ET_TOKEN_CONSTANTS.unlock_marking_feature_name */
extern T0* T81s1347(TC* ac);
/* ET_TOKEN_CONSTANTS.set_reference_field_at_feature_name */
extern T0* T81s1346(TC* ac);
/* ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern T0* T81s1345(TC* ac);
/* ET_TOKEN_CONSTANTS.set_real_64_field_at_feature_name */
extern T0* T81s1343(TC* ac);
/* ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern T0* T81s1341(TC* ac);
/* ET_TOKEN_CONSTANTS.set_real_32_field_at_feature_name */
extern T0* T81s1339(TC* ac);
/* ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern T0* T81s1337(TC* ac);
/* ET_TOKEN_CONSTANTS.set_pre_ecma_mapping_feature_name */
extern T0* T81s1335(TC* ac);
/* ET_TOKEN_CONSTANTS.set_pointer_field_at_feature_name */
extern T0* T81s1333(TC* ac);
/* ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern T0* T81s1331(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_at_feature_name */
extern T0* T81s1329(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern T0* T81s1327(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_at_feature_name */
extern T0* T81s1325(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern T0* T81s1323(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_at_feature_name */
extern T0* T81s1321(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern T0* T81s1319(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_at_feature_name */
extern T0* T81s1317(TC* ac);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern T0* T81s1315(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_at_feature_name */
extern T0* T81s1313(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern T0* T81s1311(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_at_feature_name */
extern T0* T81s1309(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern T0* T81s1307(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_at_feature_name */
extern T0* T81s1305(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern T0* T81s1303(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_at_feature_name */
extern T0* T81s1301(TC* ac);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern T0* T81s1299(TC* ac);
/* ET_TOKEN_CONSTANTS.set_character_32_field_at_feature_name */
extern T0* T81s1297(TC* ac);
/* ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern T0* T81s1295(TC* ac);
/* ET_TOKEN_CONSTANTS.set_character_8_field_at_feature_name */
extern T0* T81s1293(TC* ac);
/* ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern T0* T81s1291(TC* ac);
/* ET_TOKEN_CONSTANTS.set_boolean_field_at_feature_name */
extern T0* T81s1289(TC* ac);
/* ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern T0* T81s1287(TC* ac);
/* ET_TOKEN_CONSTANTS.mark_object_feature_name */
extern T0* T81s1285(TC* ac);
/* ET_TOKEN_CONSTANTS.lock_marking_feature_name */
extern T0* T81s1283(TC* ac);
/* ET_TOKEN_CONSTANTS.type_id_from_name_feature_name */
extern T0* T81s1281(TC* ac);
/* ET_TOKEN_CONSTANTS.type_conforms_to_feature_name */
extern T0* T81s1279(TC* ac);
/* ET_ECF_LIBRARY.detachable_string_8_type */
extern T0* T806f83(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_string_8_type */
extern T0* T87f86(TC* ac, T0* C);
/* ET_SYSTEM.detachable_string_8_type */
extern T0* T50f85(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.storable_version_of_type_feature_name */
extern T0* T81s1277(TC* ac);
/* ET_TOKEN_CONSTANTS.reference_field_at_offset_feature_name */
extern T0* T81s1276(TC* ac);
/* ET_TOKEN_CONSTANTS.reference_field_at_feature_name */
extern T0* T81s1275(TC* ac);
/* ET_TOKEN_CONSTANTS.reference_field_feature_name */
extern T0* T81s1274(TC* ac);
/* ET_TOKEN_CONSTANTS.real_64_field_at_feature_name */
extern T0* T81s1272(TC* ac);
/* ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern T0* T81s1270(TC* ac);
/* ET_TOKEN_CONSTANTS.real_32_field_at_feature_name */
extern T0* T81s1268(TC* ac);
/* ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern T0* T81s1266(TC* ac);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_offset_feature_name */
extern T0* T81s1264(TC* ac);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_feature_name */
extern T0* T81s1262(TC* ac);
/* ET_TOKEN_CONSTANTS.pre_ecma_mapping_status_feature_name */
extern T0* T81s1260(TC* ac);
/* ET_TOKEN_CONSTANTS.pointer_field_at_feature_name */
extern T0* T81s1258(TC* ac);
/* ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern T0* T81s1256(TC* ac);
/* ET_TOKEN_CONSTANTS.persistent_field_count_of_type_feature_name */
extern T0* T81s1254(TC* ac);
/* ET_ECF_LIBRARY.special_any_type */
extern T0* T806f77(TC* ac, T0* C);
/* ET_ECF_SYSTEM.special_any_type */
extern T0* T87f80(TC* ac, T0* C);
/* ET_SYSTEM.special_any_type */
extern T0* T50f79(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_objects_feature_name */
extern T0* T81s1252(TC* ac);
/* ET_TOKEN_CONSTANTS.object_size_feature_name */
extern T0* T81s1250(TC* ac);
/* ET_ECF_LIBRARY.type_detachable_any_type */
extern T0* T806f90(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_any_type */
extern T0* T87f93(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_any_type */
extern T0* T50f92(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_type_instance_of_feature_name */
extern T0* T81s1249(TC* ac);
/* ET_TOKEN_CONSTANTS.new_tuple_instance_of_feature_name */
extern T0* T81s1248(TC* ac);
/* ET_ECF_LIBRARY.special_detachable_any_type */
extern T0* T806f78(TC* ac, T0* C);
/* ET_ECF_SYSTEM.special_detachable_any_type */
extern T0* T87f81(TC* ac, T0* C);
/* ET_SYSTEM.special_detachable_any_type */
extern T0* T50f80(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_special_of_reference_instance_of_feature_name */
extern T0* T81s1247(TC* ac);
/* ET_TOKEN_CONSTANTS.new_instance_of_feature_name */
extern T0* T81s1246(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_64_field_at_feature_name */
extern T0* T81s1244(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern T0* T81s1242(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_32_field_at_feature_name */
extern T0* T81s1240(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern T0* T81s1238(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_16_field_at_feature_name */
extern T0* T81s1236(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern T0* T81s1234(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_8_field_at_feature_name */
extern T0* T81s1232(TC* ac);
/* ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern T0* T81s1230(TC* ac);
/* ET_TOKEN_CONSTANTS.is_tuple_type_feature_name */
extern T0* T81s1228(TC* ac);
/* ET_TOKEN_CONSTANTS.is_tuple_feature_name */
extern T0* T81s1226(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_type_feature_name */
extern T0* T81s1224(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_or_basic_type_feature_name */
extern T0* T81s1222(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_feature_name */
extern T0* T81s1220(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_of_expanded_feature_name */
extern T0* T81s1218(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_copy_semantics_item_feature_name */
extern T0* T81s1216(TC* ac);
/* ET_TOKEN_CONSTANTS.is_special_feature_name */
extern T0* T81s1214(TC* ac);
/* ET_TOKEN_CONSTANTS.is_object_marked_feature_name */
extern T0* T81s1212(TC* ac);
/* ET_TOKEN_CONSTANTS.is_field_transient_of_type_feature_name */
extern T0* T81s1210(TC* ac);
/* ET_TOKEN_CONSTANTS.is_field_expanded_of_type_feature_name */
extern T0* T81s1208(TC* ac);
/* ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern T0* T81s1016(TC* ac);
/* ET_TOKEN_CONSTANTS.is_copy_semantics_field_feature_name */
extern T0* T81s1205(TC* ac);
/* ET_TOKEN_CONSTANTS.is_attached_type_feature_name */
extern T0* T81s1203(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_64_field_at_feature_name */
extern T0* T81s1201(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern T0* T81s1199(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_32_field_at_feature_name */
extern T0* T81s1197(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern T0* T81s1195(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_16_field_at_feature_name */
extern T0* T81s1193(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern T0* T81s1191(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_8_field_at_feature_name */
extern T0* T81s1189(TC* ac);
/* ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern T0* T81s1187(TC* ac);
/* ET_TOKEN_CONSTANTS.in_assertion_feature_name */
extern T0* T81s1185(TC* ac);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern T0* T81s1008(TC* ac);
/* ET_TOKEN_CONSTANTS.generator_8_of_type_feature_name */
extern T0* T81s1182(TC* ac);
/* ET_TOKEN_CONSTANTS.generator_of_type_feature_name */
extern T0* T81s1180(TC* ac);
/* ET_TOKEN_CONSTANTS.generating_type_8_of_type_feature_name */
extern T0* T81s1178(TC* ac);
/* ET_TOKEN_CONSTANTS.generating_type_of_type_feature_name */
extern T0* T81s1176(TC* ac);
/* ET_TOKEN_CONSTANTS.field_type_of_type_feature_name */
extern T0* T81s1174(TC* ac);
/* ET_TOKEN_CONSTANTS.field_static_type_of_type_feature_name */
extern T0* T81s1172(TC* ac);
/* ET_TOKEN_CONSTANTS.field_offset_of_type_feature_name */
extern T0* T81s1170(TC* ac);
/* ET_TOKEN_CONSTANTS.field_name_of_type_feature_name */
extern T0* T81s1168(TC* ac);
/* ET_TOKEN_CONSTANTS.field_count_of_type_feature_name */
extern T0* T81s1166(TC* ac);
/* ET_TOKEN_CONSTANTS.eif_gen_param_id_feature_name */
extern T0* T81s1164(TC* ac);
/* ET_TOKEN_CONSTANTS.dynamic_type_at_offset_feature_name */
extern T0* T81s1162(TC* ac);
/* ET_ECF_LIBRARY.any_type */
extern T0* T806f19(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_type */
extern T0* T87f22(TC* ac, T0* C);
/* ET_SYSTEM.any_type */
extern T0* T50f21(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_feature_name */
extern T0* T81s1160(TC* ac);
/* ET_TOKEN_CONSTANTS.detachable_type_feature_name */
extern T0* T81s1158(TC* ac);
/* ET_TOKEN_CONSTANTS.compiler_version_feature_name */
extern T0* T81s1156(TC* ac);
/* ET_TOKEN_CONSTANTS.check_assert_feature_name */
extern T0* T81s1154(TC* ac);
/* ET_TOKEN_CONSTANTS.character_32_field_at_feature_name */
extern T0* T81s1152(TC* ac);
/* ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern T0* T81s1150(TC* ac);
/* ET_TOKEN_CONSTANTS.character_8_field_at_feature_name */
extern T0* T81s1148(TC* ac);
/* ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern T0* T81s1146(TC* ac);
/* ET_TOKEN_CONSTANTS.boolean_field_at_feature_name */
extern T0* T81s1144(TC* ac);
/* ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern T0* T81s1142(TC* ac);
/* ET_TOKEN_CONSTANTS.attached_type_feature_name */
extern T0* T81s1140(TC* ac);
/* ET_TOKEN_CONSTANTS.ise_runtime_class_name */
extern T0* T81s946(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_feature_validity */
extern void T1141f43(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern T0* T81s1138(TC* ac);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern T0* T81s1137(TC* ac);
/* ET_TOKEN_CONSTANTS.eif_is_object_id_of_current_feature_name */
extern T0* T81s1135(TC* ac);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern T0* T81s1134(TC* ac);
/* ET_TOKEN_CONSTANTS.eif_current_object_id_feature_name */
extern T0* T81s1132(TC* ac);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern T0* T81s945(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_feature_validity */
extern void T1141f42(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern T0* T81s1130(TC* ac);
/* ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern T0* T81s36(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_feature_validity */
extern void T1141f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.exception_manager_type */
extern T0* T806f42(TC* ac, T0* C);
/* ET_ECF_SYSTEM.exception_manager_type */
extern T0* T87f45(TC* ac, T0* C);
/* ET_SYSTEM.exception_manager_type */
extern T0* T50f44(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern T0* T81s1127(TC* ac);
/* ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern T0* T81s944(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_feature_validity */
extern void T1141f40(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern T0* T81s1124(TC* ac);
/* ET_ECF_LIBRARY.exception_type */
extern T0* T806f40(TC* ac, T0* C);
/* ET_ECF_SYSTEM.exception_type */
extern T0* T87f43(TC* ac, T0* C);
/* ET_SYSTEM.exception_type */
extern T0* T50f42(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raise_feature_name */
extern T0* T81s1122(TC* ac);
/* ET_TOKEN_CONSTANTS.ignore_feature_name */
extern T0* T81s1120(TC* ac);
/* ET_TOKEN_CONSTANTS.catch_feature_name */
extern T0* T81s1118(TC* ac);
/* ET_ECF_LIBRARY.detachable_type_exception_type */
extern T0* T806f91(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_type_exception_type */
extern T0* T87f94(TC* ac, T0* C);
/* ET_SYSTEM.detachable_type_exception_type */
extern T0* T50f93(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern T0* T81s1116(TC* ac);
/* ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern T0* T81s592(TC* ac);
/* ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern T0* T81s1113(TC* ac);
/* ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern T0* T81s1111(TC* ac);
/* ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern T0* T81s1109(TC* ac);
/* ET_ECF_LIBRARY.type_detachable_exception_type */
extern T0* T806f92(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_exception_type */
extern T0* T87f95(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_exception_type */
extern T0* T50f94(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern T0* T81s1107(TC* ac);
/* ET_ECF_LIBRARY.detachable_exception_type */
extern T0* T806f41(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_exception_type */
extern T0* T87f44(TC* ac, T0* C);
/* ET_SYSTEM.detachable_exception_type */
extern T0* T50f43(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern T0* T81s1105(TC* ac);
/* ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern T0* T81s27(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_feature_validity */
extern void T1141f39(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.free_feature_name */
extern T0* T81s1102(TC* ac);
/* ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern T0* T81s1100(TC* ac);
/* ET_TOKEN_CONSTANTS.memory_class_name */
extern T0* T81s943(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_feature_validity */
extern void T1141f38(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern T0* T81s1097(TC* ac);
/* ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern T0* T81s1095(TC* ac);
/* ET_TOKEN_CONSTANTS.character_size_feature_name */
extern T0* T81s1093(TC* ac);
/* ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern T0* T81s1091(TC* ac);
/* ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern T0* T81s1089(TC* ac);
/* ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern T0* T81s1087(TC* ac);
/* ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern T0* T81s1085(TC* ac);
/* ET_TOKEN_CONSTANTS.com_failure_class_name */
extern T0* T81s942(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_feature_validity */
extern void T1141f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.immutable_string_32_type */
extern T0* T806f45(TC* ac, T0* C);
/* ET_ECF_SYSTEM.immutable_string_32_type */
extern T0* T87f48(TC* ac, T0* C);
/* ET_SYSTEM.immutable_string_32_type */
extern T0* T50f47(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.i_th_argument_string_feature_name */
extern T0* T81s1082(TC* ac);
/* ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern T0* T81s1080(TC* ac);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern T0* T81s1078(TC* ac);
/* ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern T0* T81s941(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_feature_validity */
extern void T1141f36(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern T0* T81s1075(TC* ac);
/* ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern T0* T81s1069(TC* ac);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern T0* T81s1067(TC* ac);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern T0* T81s44(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_feature_validity */
extern void T1141f35(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern T0* T81s940(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_feature_validity */
extern void T1141f34(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.negated_feature_name */
extern T0* T81s1063(TC* ac);
/* ET_TOKEN_CONSTANTS.implication_feature_name */
extern T0* T81s1061(TC* ac);
/* ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern T0* T81s1059(TC* ac);
/* ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern T0* T81s1057(TC* ac);
/* ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern T0* T81s1055(TC* ac);
/* ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern T0* T81s1053(TC* ac);
/* ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern T0* T81s1051(TC* ac);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern T0* T81s21(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_feature_validity */
extern void T1141f33(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern T0* T81s939(TC* ac);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern T0* T81s24(TC* ac);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern T0* T81s936(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_feature_validity */
extern void T1141f32(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern T0* T81s1043(TC* ac);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern T0* T81s1041(TC* ac);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern T0* T81s23(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_ref_feature_validity */
extern void T1141f31(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1141f7(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern T0* T81s933(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_feature_validity */
extern void T1141f30(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_count_feature_name */
extern T0* T81s1037(TC* ac);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern T0* T81s1035(TC* ac);
/* ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern T0* T81s1033(TC* ac);
/* ET_TOKEN_CONSTANTS.extend_feature_name */
extern T0* T81s1031(TC* ac);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern T0* T81s1028(TC* ac);
/* ET_TOKEN_CONSTANTS.capacity_feature_name */
extern T0* T81s579(TC* ac);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern T0* T81s1024(TC* ac);
/* ET_TOKEN_CONSTANTS.like_current */
extern T0* T81s982(TC* ac);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern T0* T81s1022(TC* ac);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern T0* T81s51(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_feature_validity */
extern void T1141f29(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern T0* T81s1018(TC* ac);
/* ET_TOKEN_CONSTANTS.is_deferred_feature_name */
extern T0* T81s1014(TC* ac);
/* ET_TOKEN_CONSTANTS.is_attached_feature_name */
extern T0* T81s1012(TC* ac);
/* ET_TOKEN_CONSTANTS.has_default_feature_name */
extern T0* T81s1010(TC* ac);
/* ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern T0* T81s1006(TC* ac);
/* ET_TOKEN_CONSTANTS.default_feature_name */
extern T0* T81s1004(TC* ac);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern T0* T81s57(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_feature_validity */
extern void T1141f28(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern T0* T81s1001(TC* ac);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern T0* T81s753(TC* ac);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern T0* T81s754(TC* ac);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern T0* T81s997(TC* ac);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern T0* T81s995(TC* ac);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern T0* T81s993(TC* ac);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern T0* T81s991(TC* ac);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern T0* T81s988(TC* ac);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern T0* T81s986(TC* ac);
/* ET_ECF_LIBRARY.type_detachable_like_current_type */
extern T0* T806f93(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_like_current_type */
extern T0* T87f96(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_like_current_type */
extern T0* T50f95(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern T0* T81s984(TC* ac);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern T0* T81s981(TC* ac);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern T0* T81s979(TC* ac);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern T0* T81s14(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1141s5(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1141s6(TC* ac);
/* ET_C_GENERATOR.process_external_procedure */
extern void T114f1464(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T114f1491(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine */
extern void T114f1506(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T114f667(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T114f1505(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T114f1535(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T963f42(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T963f51(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T963f51p1(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T831f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T114f1534(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T920f9(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T221f25(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T221f26(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T920f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T221f27(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T920f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T920f6(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T920f10(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T221f24(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T221f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].off */
extern T1 T920f7(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T221f9(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T920c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T114f1533(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T221f16(TC* ac, T0* C, T6 a1);
/* ST_SPLITTER.split */
extern T0* T109f6(TC* ac, T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T109f7(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T221f19(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].put_right */
extern void T1114f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].make */
extern T0* T1114c3(TC* ac, T0* a1);
/* DS_HASH_SET [NATURAL_32].has */
extern T1 T921f25(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].search_position */
extern void T921f31(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].hash_position */
extern T6 T921f19(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].key_storage_item */
extern T10 T921f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].item_storage_item */
extern T10 T921f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].clashes_item */
extern T6 T921f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].key_equality_tester */
extern T0* T921f28(TC* ac, T0* C);
/* DS_HASH_SET [NATURAL_32].slots_item */
extern T6 T921f24(TC* ac, T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T109s5(TC* ac);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T221c18(TC* ac);
/* DS_LINKED_LIST [STRING_8].set_internal_cursor */
extern void T221f23(TC* ac, T0* C, T0* a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T109c9(TC* ac, T0* a1);
/* ST_SPLITTER.set_separators */
extern void T109f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [NATURAL_32].put */
extern void T921f30(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].slots_put */
extern void T921f40(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].clashes_put */
extern void T921f39(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].item_storage_put */
extern void T921f38(TC* ac, T0* C, T10 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].unset_found_item */
extern void T921f36(TC* ac, T0* C);
/* DS_HASH_SET [NATURAL_32].make */
extern T0* T921c29(TC* ac, T6 a1);
/* DS_HASH_SET [NATURAL_32].set_internal_cursor */
extern void T921f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [NATURAL_32].new_cursor */
extern T0* T921f20(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [NATURAL_32].make */
extern T0* T1363c4(TC* ac, T0* a1);
/* DS_HASH_SET [NATURAL_32].make_slots */
extern void T921f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].new_modulus */
extern T6 T921f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_clashes */
extern void T921f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_key_storage */
extern void T921f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_item_storage */
extern void T921f32(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T114f1532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* UC_UTF8_STRING.remove_head */
extern void T1078f111(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T1078f113(TC* ac, T0* C, T6 a1);
/* UC_STRING.remove_head */
extern void T919f110(TC* ac, T0* C, T6 a1);
/* UC_STRING.keep_tail */
extern void T919f112(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_external_c_body */
extern void T114f1531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T114f1530(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T114f1529(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T114f1542(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T114f1580(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T114f855(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T114f1643(TC* ac, T0* C, T0* a1);
extern T1 T114f1643ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T114f1642(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T114f1658(TC* ac, T0* C, T0* a1);
extern T1 T114f1658ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T114f1641(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T114f1640(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T114f1639(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T114f1638(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T114f1637(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T114f1636(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T114f1635(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T114f1634(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T114f1633(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T114f1632(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T114f1631(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T114f1630(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T114f1629(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T114f1579(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T114f1628(TC* ac, T0* C, T0* a1);
extern T1 T114f1628ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T114f315(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T114f1627(TC* ac, T0* C, T0* a1);
extern T1 T114f1627ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_procedure_body */
extern void T114f1578(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T114f1577(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_procedure_call_body */
extern void T114f1626(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_procedure_body */
extern void T114f1576(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T114f1575(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_procedure_body */
extern void T114f1574(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pre_ecma_mapping_body */
extern void T114f1625(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T114f1573(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_procedure_body */
extern void T114f1572(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_procedure_body */
extern void T114f1571(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T114f1570(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T114f1624(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T114f1623(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T114f1622(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T114f1621(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T114f1569(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_procedure_body */
extern void T114f1568(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_procedure_body */
extern void T114f1567(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T114f1566(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body */
extern void T114f1620(TC* ac, T0* C, T0* a1);
extern T1 T114f1620ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body_with_no_special */
extern void T114f1657(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f1657ot1(TC* ac, T0* a1);
extern T1 T114f1657ot2(TC* ac, T0* a1);
extern T1 T114f1657ot3(TC* ac, T0* a1);
extern T1 T114f1657ot4(TC* ac, T0* a1);
extern T1 T114f1657ot5(TC* ac, T0* a1);
extern T1 T114f1657ot6(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_tuple_items */
extern void T114f1665(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_attributes */
extern void T114f1663(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.invariant_keyword */
extern T0* T543f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body_with_special */
extern void T114f1654(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_special_items */
extern void T114f1664(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.free_actual_argument_list */
extern void T114f1661(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].force_last */
extern void T933f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].force */
extern void T1390s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T1391f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T1391f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].resize */
extern void T933f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1390s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1391f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].new_capacity */
extern T6 T933f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].extendible */
extern T1 T933f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.force_first */
extern void T349f27(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.new_capacity */
extern T6 T349f18(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_actual_argument_list */
extern T0* T114f678(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].remove_last */
extern void T933f15(TC* ac, T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T1391f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T1391f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].move_last_cursors_after */
extern void T933f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].set_next_cursor */
extern void T1392f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].set_after */
extern void T1392f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].last */
extern T0* T933f10(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T349f19(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T349c19(TC* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T349f19p1(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T349s7(TC* ac);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].is_empty */
extern T1 T933f9(TC* ac, T0* C);
/* ET_C_GENERATOR.print_greater_than_or_equal */
extern void T114f1660(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_end_newline */
extern void T114f895(TC* ac, T0* C);
/* ET_C_GENERATOR.print_then_newline */
extern void T114f894(TC* ac, T0* C);
/* ET_C_GENERATOR.print_greater_than */
extern void T114f1662(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_if */
extern void T114f892(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_special_count_attribute_to_temp_variable */
extern void T114f1653(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_builtin_any_copy_body */
extern void T114f1619(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T114f1541(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T114f1565(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T114f1618(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T695f50(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T695f53(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f53ot1(TC* ac, T0* a1);
extern T1 T695f53ot2(TC* ac, T0* a1);
extern T1 T695f53ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T853f55(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f55ot1(TC* ac, T0* a1);
extern T1 T853f55ot2(TC* ac, T0* a1);
extern T1 T853f55ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T729f57(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f57ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T728f60(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f60ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T726f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T200f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T504f59(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f59ot1(TC* ac, T0* a1);
extern T1 T504f59ot2(TC* ac, T0* a1);
extern T1 T504f59ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T504f52(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T853f53(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T729f53(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T728f56(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T726f53(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T200f50(TC* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T70f223(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T184f80(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T102f87(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T114f821(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T114f1564(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T114f1617(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T114f1617ac1(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T114f1617ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T114f1616(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T114f1656(TC* ac, T0* C, T0* a1);
extern T1 T114f1656ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T114f1615(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T114f1614(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T114f1613(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T114f1612(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T114f1611(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T114f1610(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T114f1609(TC* ac, T0* C, T0* a1);
extern T1 T114f1609ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T114f1608(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T114f1607(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T114f1606(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T114f1605(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T114f1604(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T114f1603(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T114f1602(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T114f1563(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T114f1601(TC* ac, T0* C, T0* a1);
extern T1 T114f1601ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_result_expression */
extern void T114f1655(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].force_last */
extern void T934f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].force */
extern void T1393s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RESULT].fill_with */
extern void T1394f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].extend */
extern void T1394f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].resize */
extern void T934f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].aliased_resized_area */
extern T0* T1393s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].aliased_resized_area */
extern T0* T1394f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].new_capacity */
extern T6 T934f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].extendible */
extern T1 T934f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_result_expression */
extern T0* T114f676(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].remove_last */
extern void T934f15(TC* ac, T0* C);
/* SPECIAL [ET_RESULT].keep_head */
extern void T1394f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RESULT].set_count */
extern void T1394f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].move_last_cursors_after */
extern void T934f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].set_next_cursor */
extern void T1395f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].set_after */
extern void T1395f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].last */
extern T0* T934f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].is_empty */
extern T1 T934f9(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_else_newline */
extern void T114f1292(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_special_capacity_attribute_to_temp_variable */
extern void T114f1652(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_function_body */
extern void T114f1562(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_function_body */
extern void T114f1561(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_real_n_out_body */
extern void T114f1600(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_function_body */
extern void T114f1560(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T114f1559(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T114f1599(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T114f1558(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T114f1557(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_function_body */
extern void T114f1556(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pre_ecma_mapping_status_body */
extern void T114f1598(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_in_assertion_body */
extern void T114f1597(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_function_body */
extern void T114f1555(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_function_body */
extern void T114f1554(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_function_body */
extern void T114f1553(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T114f1552(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_function_item_body */
extern void T114f1596(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T114f1551(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T114f1595(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T114f1550(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T114f1594(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T114f1593(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T114f1592(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T114f1591(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T114f1590(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T114f1589(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T114f1588(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T114f1549(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_function_body */
extern void T114f1548(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_function_body */
extern void T114f1547(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_function_body */
extern void T114f1546(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T114f1545(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T114f1544(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T114f1543(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T114f1587(TC* ac, T0* C, T0* a1);
extern T1 T114f1587ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_reference */
extern void T114f1651(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_expanded */
extern void T114f1650(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_special */
extern void T114f1649(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T114f1586(TC* ac, T0* C, T0* a1);
extern T1 T114f1586ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T114f1585(TC* ac, T0* C, T0* a1);
extern T1 T114f1585ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body_with_no_special */
extern void T114f1648(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body_with_special */
extern void T114f1647(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_body */
extern void T114f1584(TC* ac, T0* C, T0* a1);
extern T1 T114f1584ot1(TC* ac, T0* a1);
extern T1 T114f1584ot2(TC* ac, T0* a1);
extern T1 T114f1584ot3(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_tuple_items */
extern void T114f1646(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_field */
extern void T114f1659(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.free_equality_expression */
extern void T114f1666(TC* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_operator */
extern void T752f36(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].force_last */
extern void T928f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].force */
extern void T1375s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].fill_with */
extern void T1376f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].extend */
extern void T1376f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].resize */
extern void T928f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1375s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1376f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T928f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].extendible */
extern T1 T928f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_equality_expression */
extern T0* T114f679(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].remove_last */
extern void T928f15(TC* ac, T0* C);
/* SPECIAL [ET_EQUALITY_EXPRESSION].keep_head */
extern void T1376f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].set_count */
extern void T1376f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].move_last_cursors_after */
extern void T928f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T1377f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_after */
extern void T1377f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].last */
extern T0* T928f10(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T752c28(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].is_empty */
extern T1 T928f9(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.equal_symbol */
extern T0* T81s920(TC* ac);
/* ET_SYMBOL.make_equal */
extern T0* T286c97(TC* ac);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_special_items */
extern void T114f1645(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_attributes */
extern void T114f1644(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_is_equal_body */
extern void T114f1583(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T114f1582(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T114f1581(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T718f81(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T114f1528(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T2054f1(TC* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T114s672(TC* ac);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T2054c2(TC* ac);
/* UC_UTF8_STRING.has_substring */
extern T1 T1078f71(TC* ac, T0* C, T0* a1);
/* UC_STRING.has_substring */
extern T1 T919f71(TC* ac, T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f23(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T114f1527(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T114f1540(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].force_last */
extern void T99f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T99f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T99f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T99f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T99f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].resize */
extern void T99f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T99f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T99s33(TC* ac);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T99f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T99f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T99f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T99f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T99f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T99f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T99f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T99f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T99f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].search_position */
extern void T99f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T99f24(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T99f47(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].remove */
extern void T99f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_position */
extern void T99f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T99f74(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_keep_head */
extern void T99f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_keep_head */
extern void T99f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].move_cursors_forth */
extern void T99f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T859f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T859f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_after */
extern void T859f10(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].internal_set_key_equality_tester */
extern void T99f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T99f30(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.right_adjust */
extern void T108s26(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T108s25(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_external_cpp_includes */
extern void T114f1526(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_cpp_header_filename */
extern void T114f1539(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T107f231(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T107f307(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T114f1524(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T107f76(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_routine_name */
extern void T114f1525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T114f1525ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T862f149(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T862f218(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_components_validity */
extern void T862f284(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T862f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T63f435(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T1466c1123(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuot3a_error */
extern void T42f435(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T862f288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T862f410(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T1152f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T862f409(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T100f194(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T100f263(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T100f338(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T100f499(TC* ac, T0* C, T0* a1);
extern T1 T100f499ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T100f498(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T100f497(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T100f114(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T100f496(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T100f495(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T100f494(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T718f80(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T100f263p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_components_validity */
extern void T100f329(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T100f328(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T100f333(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T100f464(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T100f463(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T717f98(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_deferred_procedure */
extern void T2208f158(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_deferred_procedure */
extern void T2208f158p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_deferred_procedure */
extern void T2052f140(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1142f12(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1141f24(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T114f1463(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T114f1490(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T862f148(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T862f217(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T100f193(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T100f262(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T716f105(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_once_procedure */
extern void T2208f157(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_once_procedure */
extern void T2208f157p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_once_procedure */
extern void T2052f139(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1142f22(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1141f23(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T114f1462(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T114f1489(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T114f1507(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_feature */
extern void T114f1503(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_assign_called_to_once_status */
extern void T114f1523(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status_is_completed */
extern void T114f1522(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_statement */
extern void T114f1521(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_thread_safe_once_value */
extern void T114f1520(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_value */
extern void T114f1538(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_value_to_result */
extern void T114f1519(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_lock */
extern void T114f1518(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_try_lock */
extern void T114f1517(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_thread_safe_once_value */
extern void T114f1516(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_thread_safe_once_exception_if_any */
extern void T114f1515(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_once_value */
extern void T114f1514(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_once_exception_if_any */
extern void T114f1513(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_global_mutex_unlock */
extern void T114f1512(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_global_mutex_lock */
extern void T114f1511(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].value */
extern T6 T952f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].position_of_key */
extern T6 T952f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T862f147(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T862f216(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0b_error */
extern void T63f376(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0b */
extern T0* T1466c1064(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0b_error */
extern void T42f376(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T862f285(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T862f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T1152f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T862f393(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T63f438(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T1466c1126(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T63f113(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T42f438(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T42f113(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T63f437(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T1466c1125(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T63f112(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T42f437(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T42f112(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T63f436(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T1466c1124(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T63f47(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T42f436(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T42f47(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T100f192(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T100f261(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T100f330(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T100f447(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T100f446(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T715f101(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_do_procedure */
extern void T2208f156(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_do_procedure */
extern void T2208f156p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_do_procedure */
extern void T2052f138(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1142f21(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1141f22(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T114f1461(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T114f1488(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T862f146(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T862f215(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T100f191(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T100f260(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T100f336(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T100f260p1(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.synonym */
extern T0* T714f25(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.synonym */
extern T0* T712f22(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.synonym */
extern T0* T711f25(TC* ac, T0* C);
/* ET_DO_FUNCTION.synonym */
extern T0* T710f24(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.synonym */
extern T0* T709f18(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.synonym */
extern T0* T708f17(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.synonym */
extern T0* T707f22(TC* ac, T0* C);
/* ET_ATTRIBUTE.synonym */
extern T0* T706f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.process */
extern void T714f112(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_external_function */
extern void T2208f155(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_external_function */
extern void T2208f155p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_external_function */
extern void T2052f137(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1142f20(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1141f21(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T114f1460(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T114f1487(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T862f145(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T862f214(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T862f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T1152f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T862f281(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_query_type_validity */
extern void T862f280(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T100f190(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T100f259(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.immutable_string_8_type */
extern T0* T806f44(TC* ac, T0* C);
/* ET_ECF_SYSTEM.immutable_string_8_type */
extern T0* T87f47(TC* ac, T0* C);
/* ET_SYSTEM.immutable_string_8_type */
extern T0* T50f46(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T100f96(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T100f335(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T100f493(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T100f492(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T100f491(TC* ac, T0* C, T0* a1);
extern T1 T100f491ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T100f490(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_type_conforms_to */
extern void T100f489(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_type_conforms_to_feature */
extern void T95f118(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_storable_version_of_type */
extern void T100f488(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at_offset */
extern void T100f487(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at */
extern void T100f486(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field */
extern void T100f485(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_type_instance_of */
extern void T100f484(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_tuple_instance_of */
extern void T100f483(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_special_of_reference_instance_of */
extern void T100f482(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_instance_of */
extern void T100f481(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_object_id */
extern void T100f480(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_is_object_id_of_current */
extern void T100f479(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_id_object */
extern void T100f478(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_current_object_id */
extern void T100f477(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T100f476(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T100f475(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T100f474(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T100f473(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T100f472(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T100f471(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T100f470(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T100f469(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T100f468(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T100f467(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T100f466(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type */
extern void T100f465(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T714f83(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T100f259p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T100f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T100f326(TC* ac, T0* C, T0* a1);
extern T1 T100f326ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_extended_attribute_result_dynamic_types */
extern void T100f443(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T100f325(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.process */
extern void T712f102(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_deferred_function */
extern void T2208f154(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_deferred_function */
extern void T2208f154p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_deferred_function */
extern void T2052f136(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1142f19(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1141f20(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T114f1459(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T114f1486(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T862f144(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T862f213(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T100f189(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T100f258(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T711f108(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_once_function */
extern void T2208f153(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_once_function */
extern void T2208f153p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_once_function */
extern void T2052f135(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1142f18(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1141f19(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_function */
extern void T114f1458(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T114f1485(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T114f1504(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T862f143(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T862f212(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd11ga_error */
extern void T63f377(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vffd11ga */
extern T0* T1466c1065(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vffd11g_error */
extern T1 T63f86(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd11ga_error */
extern void T42f377(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vffd11g_error */
extern T1 T42f86(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T63f375(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T1466c1063(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0c_error */
extern void T42f375(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T100f188(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T100f257(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T710f105(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_do_function */
extern void T2208f152(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_do_function */
extern void T2208f152p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_do_function */
extern void T2052f134(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1142f17(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1141f18(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T114f1457(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T114f1484(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T862f142(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T862f211(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T100f187(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T100f256(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T709f100(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unique_attribute */
extern void T2208f151(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_unique_attribute */
extern void T2208f151p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_unique_attribute */
extern void T2052f133(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern T0* T81s897(TC* ac);
/* ET_KEYWORD.make_unique */
extern T0* T192c62(TC* ac);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1142f16(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1141f17(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T114f1456(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T114f1483(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T114f1502(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_unqualified_call_expression */
extern void T114f1510(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].force_last */
extern void T931f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].force */
extern void T1384s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].fill_with */
extern void T1385f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].extend */
extern void T1385f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].resize */
extern void T931f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1384s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1385f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].new_capacity */
extern T6 T931f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].extendible */
extern T1 T931f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_unqualified_call_expression */
extern T0* T114f666(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T1045f44(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].remove_last */
extern void T931f15(TC* ac, T0* C);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].keep_head */
extern void T1385f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].set_count */
extern void T1385f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].move_last_cursors_after */
extern void T931f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].set_next_cursor */
extern void T1386f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].set_after */
extern void T1386f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].last */
extern T0* T931f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].is_empty */
extern T1 T931f9(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T862f141(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T862f210(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T63f374(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T1466c1062(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T63f85(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T42f374(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T42f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T100f186(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T100f255(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T708f97(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_constant_attribute */
extern void T2208f150(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_constant_attribute */
extern void T2208f150p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_constant_attribute */
extern void T2052f132(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1142f15(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1141f16(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T114f1455(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T114f1482(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T862f140(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T862f209(TC* ac, T0* C, T0* a1);
extern T1 T862f209ot1(TC* ac, T0* a1);
extern T1 T862f209ot2(TC* ac, T0* a1);
extern T1 T862f209ot3(TC* ac, T0* a1);
extern T1 T862f209ot4(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T63f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T1466c1061(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T63f84(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T42f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T42f84(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.system_string_type */
extern T0* T806f89(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_string_type */
extern T0* T87f92(TC* ac, T0* C);
/* ET_SYSTEM.system_string_type */
extern T0* T50f91(TC* ac, T0* C);
/* ET_VERBATIM_STRING.set_type */
extern void T678f65(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T677f61(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T676f61(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5b_error */
extern void T63f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc5b */
extern T0* T1466c1060(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc5b_error */
extern void T42f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T862f275(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_immutable_string_32_constant */
extern void T862f371(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_immutable_string_32_index */
extern void T862f370(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T862f369(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_string_32_index */
extern void T862f368(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_immutable_string_8_constant */
extern void T862f367(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_immutable_string_8_index */
extern void T862f366(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2c_error */
extern void T63f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2c */
extern T0* T1466c1119(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VERBATIM_STRING.value_position */
extern T0* T678f45(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.value_position */
extern T0* T677f41(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.value_position */
extern T0* T676f40(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvwmc2c_error */
extern void T42f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T862f365(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_string_8_index */
extern void T862f364(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T63f430(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T1466c1118(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T42f430(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.cast_type */
extern T0* T678f3(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.cast_type */
extern T0* T677f3(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.cast_type */
extern T0* T676f4(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T63f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T1466c1059(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T63f83(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T42f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T42f83(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T63f370(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T1466c1058(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T63f82(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T42f370(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T42f82(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T63f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T1466c1057(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T42f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T63f368(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T1466c1056(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T63f81(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T42f368(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T42f81(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2b_error */
extern void T63f367(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc2b */
extern T0* T1466c1055(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T1466f1055ot1(TC* ac, T0* a1);
extern T1 T1466f1055ot2(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2b_error */
extern void T42f367(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T63f366(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T1466c1054(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T63f80(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T42f366(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T42f80(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T683f29(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T682f29(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T681f29(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T680f29(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T679f31(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T678f31(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T677f28(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T675f27(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T690f25(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T689f25(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_boolean_constant */
extern T1 T688s26(TC* ac);
/* ET_TRUE_CONSTANT.is_boolean_constant */
extern T1 T687s26(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T685f27(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T684f27(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T676f26(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T100f185(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T100f254(TC* ac, T0* C, T0* a1);
extern T1 T100f254ot1(TC* ac, T0* a1);
extern T1 T100f254ot2(TC* ac, T0* a1);
extern T1 T100f254ot3(TC* ac, T0* a1);
extern T1 T100f254ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T100f320(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_immutable_string_32_constant */
extern void T100f421(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T100f541(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T100f575(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_immutable_string_32_index */
extern void T100f420(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T100f419(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_string_32_index */
extern void T100f418(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_immutable_string_8_constant */
extern void T100f417(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_immutable_string_8_index */
extern void T100f416(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T100f415(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_string_8_index */
extern void T100f414(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.process */
extern void T707f104(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_extended_attribute */
extern void T2208f149(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_extended_attribute */
extern void T2208f149p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_extended_attribute */
extern void T2052f131(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1142f14(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1141f15(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_extended_attribute */
extern void T114f1454(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_extended_attribute */
extern void T114f1481(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T114f1480(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_extended_attribute */
extern void T862f139(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T862f208(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1ea1gd_error */
extern void T63f363(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1ea1gd */
extern T0* T1466c1051(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_v1ea1g_error */
extern T1 T63f77(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1ea1gd_error */
extern void T42f363(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_v1ea1g_error */
extern T1 T42f77(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1ea1gb_error */
extern void T63f362(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1ea1gb */
extern T0* T1466c1050(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_v1ea1gb_error */
extern void T42f362(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_v1ea1gc_error */
extern void T63f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1ea1gc */
extern T0* T1466c1049(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_v1ea1gc_error */
extern void T42f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_v1ea1ga_error */
extern void T63f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1ea1ga */
extern T0* T1466c1048(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_v1ea1ga_error */
extern void T42f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.is_type_non_separate */
extern T1 T853f44(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_non_separate */
extern T1 T729f44(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_non_separate */
extern T1 T728f47(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_non_separate */
extern T1 T726f44(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_non_separate */
extern T1 T200f41(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0a_error */
extern void T63f359(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0a */
extern T0* T1466c1047(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0a_error */
extern void T42f359(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwab0a_error */
extern void T63f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwab0a */
extern T0* T1466c1053(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.position */
extern T0* T707f75(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T719f5(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vwab_error */
extern T1 T63f79(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwab0a_error */
extern void T42f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwab_error */
extern T1 T42f79(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_self_initializing */
extern T1 T853f45(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T853f64(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_self_initializing */
extern T1 T729f45(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T729f62(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_self_initializing */
extern T1 T728f48(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T728f65(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_self_initializing */
extern T1 T726f45(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_self_initializing_with_type_mark */
extern T1 T726f62(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_self_initializing */
extern T1 T184f73(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T184f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_self_initializing */
extern T1 T102f73(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T102f91(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_self_initializing */
extern T1 T200f42(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_self_initializing_with_type_mark */
extern T1 T200f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T63f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T1466c1052(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0e_error */
extern void T42f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T100f184(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T100f253(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T706f93(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_attribute */
extern void T2208f148(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_attribute */
extern void T2208f148p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_attribute */
extern void T2052f130(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1142f13(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1141f14(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T114f1453(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T862f138(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T862f207(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T100f183(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T100f252(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_less */
extern T1 T307f120(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.feature_clause */
extern T0* T718f12(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.feature_clause */
extern T0* T717f18(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.feature_clause */
extern T0* T716f13(TC* ac, T0* C);
/* ET_DO_PROCEDURE.feature_clause */
extern T0* T715f20(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.feature_clause */
extern T0* T714f14(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.feature_clause */
extern T0* T712f13(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.feature_clause */
extern T0* T711f15(TC* ac, T0* C);
/* ET_DO_FUNCTION.feature_clause */
extern T0* T710f15(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.feature_clause */
extern T0* T709f8(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.feature_clause */
extern T0* T708f8(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.feature_clause */
extern T0* T707f13(TC* ac, T0* C);
/* ET_ATTRIBUTE.feature_clause */
extern T0* T706f6(TC* ac, T0* C);
/* ET_FEATURE_CLAUSE.process */
extern void T269f6(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_feature_clause */
extern void T2208f166(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_feature_clause */
extern void T2208f166p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE.clients_clause */
extern T0* T269f4(TC* ac, T0* C);
extern T1 T269f4ot1(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_feature_clause */
extern void T2052f223(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_comments_on_same_line */
extern void T2052f118(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.print_comments_on_same_line */
extern void T2052f143(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BREAK].first */
extern T0* T2209f6(TC* ac, T0* C);
/* ET_FEATURE_CLAUSE_LIST.item */
extern T0* T484f4(TC* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.first */
extern T0* T774f8(TC* ac, T0* C);
/* ET_QUERY_LIST.first */
extern T0* T773f10(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.process */
extern void T437f11(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_feature_list */
extern void T2208f121(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_convert_feature_list */
extern void T2208f121p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_convert_feature_list */
extern void T2052f194(TC* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.process */
extern void T80f13(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_creator_list */
extern void T2208f120(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_creator_list */
extern void T2208f120p1(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.process */
extern void T82f21(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_creator */
extern void T2208f163(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_creator */
extern void T2208f163p1(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.item */
extern T0* T82f10(TC* ac, T0* C, T6 a1);
/* ET_CREATOR.clients_clause */
extern T0* T82f14(TC* ac, T0* C);
extern T1 T82f14ot1(TC* ac, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_creator */
extern void T2052f221(TC* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.item */
extern T0* T80f6(TC* ac, T0* C, T6 a1);
/* ET_AST_PRETTY_PRINTER.process_creator_list */
extern void T2052f178(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.process */
extern void T598f9(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_parent_clause_list */
extern void T2208f119(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_parent_clause_list */
extern void T2208f119p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.process */
extern void T182f15(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_parent_list */
extern void T2208f164(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_parent_list */
extern void T2208f164p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_parent_list */
extern void T2052f222(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_parent_clause_list */
extern void T2052f204(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T678f60(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_verbatim_string */
extern void T2208f64(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_verbatim_string */
extern void T2208f64p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1142f91(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_verbatim_string */
extern void T2052f63(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_verbatim_string_without_cast_type */
extern void T2052f105(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T862f126(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T862f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T886f14(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T880f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T100f171(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T100f240(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T114f1312(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T114f1359(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T114f1289(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_utf8_as_escaped_string_8 */
extern void T114f1294(TC* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_natural_32 */
extern void T1001s3(TC* ac, T0* a1, T10 a2);
/* ET_C_GENERATOR.print_utf8_as_escaped_string_32 */
extern void T114f1293(TC* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.four_byte_character_code */
extern T10 T168s5(TC* ac, T2 a1, T2 a2, T2 a3, T2 a4);
/* UC_UTF8_ROUTINES.three_byte_character_code */
extern T10 T168s4(TC* ac, T2 a1, T2 a2, T2 a3);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T677f56(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_special_manifest_string */
extern void T2208f63(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_special_manifest_string */
extern void T2208f63p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1142f90(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_special_manifest_string */
extern void T2052f62(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_special_manifest_string_without_cast_type */
extern void T2052f104(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T862f125(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T862f194(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T886f13(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T880f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T100f170(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T100f239(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T114f1311(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T114f1358(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T676f55(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_regular_manifest_string */
extern void T2208f21(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_regular_manifest_string */
extern void T2208f21p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1142f43(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_regular_manifest_string */
extern void T2052f15(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_regular_manifest_string_without_cast_type */
extern void T2052f72(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.literal */
extern T0* T676f48(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T862f124(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T862f193(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T886f12(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T880f17(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T100f169(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T100f238(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T114f1273(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T114f1282(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.process */
extern void T510f38(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_parameter_list */
extern void T2208f79(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_formal_parameter_list */
extern void T2208f79p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_formal_parameter_list */
extern void T2052f198(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T307f128(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_identifier */
extern void T2208f70(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1142f97(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_identifier */
extern void T2052f69(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T862f183(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T886f59(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T880f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T100f228(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_identifier */
extern void T114f1270(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T114f1280(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T114f886(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T307f39(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T114f1279(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T114f883(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_open_target_operand */
extern void T114f1288(TC* ac, T0* C, T0* a1);
extern T1 T114f1288ot1(TC* ac, T0* a1);
extern T1 T114f1288ot2(TC* ac, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T307f38(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local */
extern void T114f1278(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.process */
extern void T192f106(TC* ac, T0* C, T0* a1);
/* ET_NOTE_LIST.process */
extern void T575f17(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_note_list */
extern void T2208f105(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_note_list */
extern void T2208f105p1(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_note_list */
extern void T2052f202(TC* ac, T0* C, T0* a1);
/* ET_COMMENT_FINDER.process_break */
extern void T2208f118(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AST_NODE].has */
extern T1 T2277f10(TC* ac, T0* C, T0* a1);
/* ET_AST_PRETTY_PRINTER.process_class */
extern void T2052f77(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.is_less */
extern T1 T192f45(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.position */
extern T0* T714f91(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.position */
extern T0* T712f82(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.position */
extern T0* T711f85(TC* ac, T0* C);
/* ET_DO_FUNCTION.position */
extern T0* T710f83(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.position */
extern T0* T709f83(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.position */
extern T0* T708f82(TC* ac, T0* C);
/* ET_ATTRIBUTE.position */
extern T0* T706f79(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.position */
extern T0* T718f89(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.position */
extern T0* T717f80(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.position */
extern T0* T716f83(TC* ac, T0* C);
/* ET_DO_PROCEDURE.position */
extern T0* T715f81(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.process_features */
extern void T2052f116(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BREAK].is_empty */
extern T1 T2209f11(TC* ac, T0* C);
/* ET_AST_PRETTY_PRINTER.print_bom */
extern void T2052f112(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1963f4(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1962f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1961f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1960f4(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1149f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1146f18(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1145f29(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T1139f15(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1138f31(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1137f21(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1135f20(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1123f14(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T869f38(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1136f13(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1140f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1124f31(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_class */
extern void T68f2311(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.internal_process_class */
extern void T68f2313(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_class_processed */
extern void T858f74(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_class_processed */
extern void T66f108(TC* ac, T0* C, T0* a1);
/* ET_CLASS.reset_preparsed */
extern void T70f302(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_group */
extern T0* T81s4(TC* ac);
/* ET_UNKNOWN_GROUP.make */
extern T0* T263c31(TC* ac);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1819c9(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T242f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T63f586(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T63f606(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T2185c14(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T828f98(TC* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T828f102(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T208f96(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].item */
extern T0* T1654f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T828s104(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T1654f10(TC* ac, T0* C);
/* ET_ECF_SYSTEM.shortest_path */
extern T0* T87f143(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T87f143ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T87f143ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T87f143ac3(TC* ac, T0* a1, T0* a2);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].negated */
extern T1 T1831s1(TC* ac, T0* a1, T0* a2);
/* PREDICATE [TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T1832f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PROCEDURE [TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T172f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM.insert_in_hash_table */
extern void T87f252(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].force_first */
extern void T1654f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put */
extern void T1654f15(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T1654f18(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].set_position */
extern void T1976f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_right */
extern void T1654f17(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].force */
extern void T1975s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].fill_with */
extern void T1974f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].extend */
extern void T1974f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put_last */
extern void T1654f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].resize */
extern void T1654f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1975s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1974f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T1654f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].extendible */
extern T1 T1654f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T828f93(TC* ac, T0* C, T0* a1);
extern T1 T828f93ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].has */
extern T1 T1780f10(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T208f93(TC* ac, T0* C, T0* a1);
extern T1 T208f93ot1(TC* ac, T0* a1);
/* ET_LIBRARY.adapted_universe */
extern T0* T204f94(TC* ac, T0* C, T0* a1);
extern T1 T204f94ot1(TC* ac, T0* a1);
extern T1 T204f94ot2(TC* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T175f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1081f7(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T174f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].item */
extern T0* T1080f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.adapted_universe */
extern T0* T806f111(TC* ac, T0* C, T0* a1);
extern T1 T806f111ot1(TC* ac, T0* a1);
extern T1 T806f111ot2(TC* ac, T0* a1);
/* ET_SYSTEM.adapted_universe */
extern T0* T50f122(TC* ac, T0* C, T0* a1);
extern T1 T50f122ot1(TC* ac, T0* a1);
extern T1 T50f122ot2(TC* ac, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].before */
extern T1 T1829f4(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].back */
extern void T1829f16(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_back */
extern void T1828f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].add_traversing_cursor */
extern void T1828f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_next_cursor */
extern void T1829f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_position */
extern void T1829f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].remove_traversing_cursor */
extern void T1828f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_before */
extern void T1829f19(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_item */
extern T6 T1828f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].finish */
extern void T1829f15(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_finish */
extern void T1828f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_off */
extern T1 T1828f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].off */
extern T1 T1829f10(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].is_empty */
extern T1 T1828f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].forth */
extern void T1829f14(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_forth */
extern void T1828f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_after */
extern void T1829f17(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].go_after */
extern void T1829f13(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_go_after */
extern void T1828f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].has */
extern T1 T1828f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].search_position */
extern void T1828f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].hash_position */
extern T6 T1828f24(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T828f92(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T208f92(TC* ac, T0* C);
/* ET_LIBRARY.hash_code */
extern T6 T204f93(TC* ac, T0* C);
/* ET_ECF_LIBRARY.hash_code */
extern T6 T806f116(TC* ac, T0* C);
/* ET_SYSTEM.hash_code */
extern T6 T50f130(TC* ac, T0* C);
/* ET_ECF_SYSTEM.hash_code */
extern T6 T87f164(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_item */
extern T0* T1828f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_item */
extern T6 T1828f32(TC* ac, T0* C, T6 a1);
/* ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T828f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T1271f8(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].item */
extern T0* T1780f9(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T208f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.universes_do_if */
extern void T204f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T175f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T174f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.universes_do_if */
extern void T806f192(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_if */
extern void T87f290(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.universes_do_if */
extern void T50f211(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universe_actions */
extern T0* T87f147(TC* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1831c2(TC* ac);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].item */
extern T6 T1829f9(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_item */
extern T6 T1828f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_item */
extern T6 T1828f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].key */
extern T0* T1829f7(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_key */
extern T0* T1828f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].after */
extern T1 T1829f5(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].start */
extern void T1829f12(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_start */
extern void T1828f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_cursor */
extern T0* T1828f21(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].make */
extern T0* T1829c11(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].force_last */
extern void T1828f37(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_put */
extern void T1828f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].force */
extern void T1100s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].fill_with */
extern void T1101f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].extend */
extern void T1101f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_put */
extern void T1828f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_put */
extern void T1828f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].resize */
extern void T1828f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_resize */
extern void T1828f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].special_integer_ */
extern T0* T1828s28(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_resize */
extern void T1828f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].aliased_resized_area */
extern T0* T1100s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_UNIVERSE].aliased_resized_area */
extern T0* T1101f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_resize */
extern void T1828f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_resize */
extern void T1828f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_modulus */
extern T6 T1828f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_capacity */
extern T6 T1828f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_put */
extern void T1828f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].unset_found_item */
extern void T1828f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_map */
extern T0* T1828c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_with_equality_testers */
extern void T1828f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_sparse_container */
extern void T1828f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].set_internal_cursor */
extern void T1828f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_slots */
extern void T1828f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_clashes */
extern void T1828f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_key_storage */
extern void T1828f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].make */
extern T0* T1100s1(TC* ac, T6 a1);
/* SPECIAL [ET_UNIVERSE].make_empty */
extern T0* T1101c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1100c3(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_item_storage */
extern void T1828f51(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].make */
extern T0* T1654c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T1654f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T1654f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].make */
extern T0* T1976c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].make */
extern T0* T1975s1(TC* ac, T6 a1);
/* SPECIAL [ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T1974c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].default_create */
extern T0* T1975c3(TC* ac);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T830f23(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T825f21(TC* ac, T0* C);
/* ET_ECF_SYSTEM.adapted_universe */
extern T0* T87f157(TC* ac, T0* C, T0* a1);
extern T1 T87f157ot1(TC* ac, T0* a1);
extern T1 T87f157ot2(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T828f94(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T208f101(TC* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T208f103(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.string_ */
extern T0* T208s99(TC* ac);
/* ET_SYSTEM.shortest_path */
extern T0* T50f123(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.shortest_path */
extern T0* T50f123ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_SYSTEM.shortest_path */
extern T0* T50f123ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.shortest_path */
extern T0* T50f123ac3(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.insert_in_hash_table */
extern void T50f210(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_SYSTEM.universe_actions */
extern T0* T50f125(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T63f179(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T42f586(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T42f606(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T42f179(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T89f42(TC* ac, T0* C);
/* ET_CLUSTER.dotnet_assembly */
extern T0* T67f23(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T263f12(TC* ac, T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T199f11(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T242f2(TC* ac, T0* C);
/* ET_CLASS.set_syntax_error */
extern void T70f276(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T63f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T63f565(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T2031c23(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CLUSTER.full_lower_name */
extern T0* T89f43(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T89f58(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T89f58p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_lower_name */
extern T0* T806f108(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.string_ */
extern T0* T806s106(TC* ac);
/* ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T208f102(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T208f102ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T208f102ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T208f102ac3(TC* ac, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T208f168(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T208f104(TC* ac, T0* C);
/* ET_LIBRARY.shortest_path */
extern T0* T204f102(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.shortest_path */
extern T0* T204f102ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LIBRARY.shortest_path */
extern T0* T204f102ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.shortest_path */
extern T0* T204f102ac3(TC* ac, T0* a1, T0* a2);
/* ET_LIBRARY.insert_in_hash_table */
extern void T204f170(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LIBRARY.universe_actions */
extern T0* T204f104(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T828f99(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T828f99ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T828f99ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T828f99ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T828f166(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T828f103(TC* ac, T0* C);
/* ET_ECF_LIBRARY.shortest_path */
extern T0* T806f112(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T806f112ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T806f112ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T806f112ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.insert_in_hash_table */
extern void T806f185(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_LIBRARY.universe_actions */
extern T0* T806f114(TC* ac, T0* C);
/* ET_ECF_LIBRARY.lower_name */
extern T0* T806f110(TC* ac, T0* C);
/* ET_ECF_SYSTEM.relative_lower_name */
extern T0* T87f160(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.string_ */
extern T0* T87s158(TC* ac);
/* ET_ECF_SYSTEM.lower_name */
extern T0* T87f162(TC* ac, T0* C);
/* ET_ECF_CLUSTER.string_ */
extern T0* T89s52(TC* ac);
/* ET_ECF_CLUSTER.lower_name */
extern T0* T89f62(TC* ac, T0* C);
/* ET_ECF_CLUSTER.current_system */
extern T0* T89f41(TC* ac, T0* C);
/* ET_CLUSTER.full_lower_name */
extern T0* T67f24(TC* ac, T0* C, T2 a1);
/* ET_CLUSTER.relative_lower_name */
extern T0* T67f25(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_CLUSTER.relative_lower_name */
extern T0* T67f25p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_lower_name */
extern T0* T50f132(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.string_ */
extern T0* T50s124(TC* ac);
/* ET_SYSTEM.lower_name */
extern T0* T50f134(TC* ac, T0* C);
/* ET_CLUSTER.string_ */
extern T0* T67s27(TC* ac);
/* ET_CLUSTER.lower_name */
extern T0* T67f26(TC* ac, T0* C);
/* ET_CLUSTER.current_system */
extern T0* T67f31(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T63f27(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T42f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T42f565(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T42f27(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T63f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T1466c932(TC* ac, T0* a1, T0* a2);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T263f13(TC* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T263f14(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.string_ */
extern T0* T263s16(TC* ac);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T263f15(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T263f7(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_system */
extern T0* T81s620(TC* ac);
/* ET_SYSTEM.make */
extern T0* T50c139(TC* ac, T0* a1);
/* ET_SYSTEM.set_kernel_types */
extern void T50f145(TC* ac, T0* C);
/* ET_SYSTEM.set_wide_character_type */
extern void T50f188(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_marked */
extern void T189f51(TC* ac, T0* C, T1 a1);
/* ET_CLASS.set_marked */
extern void T70f295(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern T0* T81s60(TC* ac);
/* ET_SYSTEM.tokens */
extern T0* T50s126(TC* ac);
/* ET_SYSTEM.set_typed_pointer_type */
extern void T50f187(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern T0* T81s59(TC* ac);
/* ET_SYSTEM.set_type_type */
extern void T50f186(TC* ac, T0* C);
/* ET_SYSTEM.set_system_string_type */
extern void T50f185(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern T0* T81s56(TC* ac);
/* ET_SYSTEM.set_system_object_type */
extern void T50f184(TC* ac, T0* C);
/* ET_PARENT_LIST.put_first */
extern void T182f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].force */
extern void T1091s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].fill_with */
extern void T1090f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].extend */
extern void T1090f7(TC* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.fixed_array */
extern T0* T182f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T1091c2(TC* ac);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T182c11(TC* ac, T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T182f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T1091s1(TC* ac, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].make_empty */
extern T0* T1090c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern T0* T81s671(TC* ac);
/* ET_KEYWORD.make_inherit */
extern T0* T192c93(TC* ac);
/* ET_PARENT_LIST.tokens */
extern T0* T182s6(TC* ac);
/* ET_PARENT.make */
extern T0* T181c11(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern T0* T81s575(TC* ac);
/* ET_KEYWORD.make_end */
extern T0* T192c50(TC* ac);
/* ET_PARENT.tokens */
extern T0* T181s9(TC* ac);
/* ET_PARENT.has_feature_adaptation */
extern T1 T181f8(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern T0* T81s55(TC* ac);
/* ET_SYSTEM.set_string_type */
extern void T50f183(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern T0* T81s54(TC* ac);
/* ET_SYSTEM.set_string_32_type */
extern void T50f182(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern T0* T81s53(TC* ac);
/* ET_SYSTEM.set_string_8_type */
extern void T50f181(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern T0* T81s52(TC* ac);
/* ET_SYSTEM.set_special_type */
extern void T50f180(TC* ac, T0* C);
/* ET_SYSTEM.set_routine_type */
extern void T50f179(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern T0* T81s50(TC* ac);
/* ET_SYSTEM.set_real_64_type */
extern void T50f178(TC* ac, T0* C);
/* ET_SYSTEM.set_real_32_type */
extern void T50f177(TC* ac, T0* C);
/* ET_SYSTEM.set_real_type */
extern void T50f176(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern T0* T81s47(TC* ac);
/* ET_SYSTEM.set_procedure_type */
extern void T50f175(TC* ac, T0* C);
/* ET_SYSTEM.set_predicate_type */
extern void T50f174(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern T0* T81s45(TC* ac);
/* ET_SYSTEM.set_pointer_type */
extern void T50f173(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_64_type */
extern void T50f172(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_32_type */
extern void T50f171(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_16_type */
extern void T50f170(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_8_type */
extern void T50f169(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_type */
extern void T50f168(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern T0* T81s39(TC* ac);
/* ET_SYSTEM.set_iterable_type */
extern void T50f167(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iterable_class_name */
extern T0* T81s37(TC* ac);
/* ET_SYSTEM.set_ise_exception_manager_type */
extern void T50f166(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_64_type */
extern void T50f165(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_32_type */
extern void T50f164(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_16_type */
extern void T50f163(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_8_type */
extern void T50f162(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_type */
extern void T50f161(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern T0* T81s31(TC* ac);
/* ET_SYSTEM.set_immutable_string_32_type */
extern void T50f160(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_32_class_name */
extern T0* T81s30(TC* ac);
/* ET_SYSTEM.set_immutable_string_8_type */
extern void T50f159(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_8_class_name */
extern T0* T81s29(TC* ac);
/* ET_SYSTEM.set_function_type */
extern void T50f158(TC* ac, T0* C);
/* ET_SYSTEM.set_exception_manager_type */
extern void T50f157(TC* ac, T0* C);
/* ET_SYSTEM.set_exception_type */
extern void T50f156(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_class_name */
extern T0* T81s26(TC* ac);
/* ET_SYSTEM.set_double_type */
extern void T50f155(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern T0* T81s25(TC* ac);
/* ET_SYSTEM.set_character_32_type */
extern void T50f154(TC* ac, T0* C);
/* ET_SYSTEM.set_character_8_type */
extern void T50f153(TC* ac, T0* C);
/* ET_SYSTEM.set_character_type */
extern void T50f152(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern T0* T81s22(TC* ac);
/* ET_SYSTEM.set_boolean_type */
extern void T50f151(TC* ac, T0* C);
/* ET_SYSTEM.set_array_type */
extern void T50f150(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern T0* T81s20(TC* ac);
/* ET_SYSTEM.set_tuple_type */
extern void T50f149(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T202c19(TC* ac, T0* a1);
/* ET_SYSTEM.set_none_type */
extern void T50f148(TC* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_class */
extern void T189f52(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T189f57(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.update_intrinsic_class */
extern void T189f61(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_intrinsic_class */
extern void T189f62(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T189f62ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T189f62ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T189f62ac3(TC* ac, T0* a1);
extern T1 T189f62ot1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T1104f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_MASTER_CLASS.is_marked */
extern T1 T189f28(TC* ac, T0* C);
/* ET_MASTER_CLASS.mark_overridden */
extern void T189f64(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_overriding_class */
extern void T189f67(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_last */
extern void T1102f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].resize */
extern void T1102f22(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_capacity */
extern T6 T1102f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].extendible */
extern T1 T1102f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].make */
extern T0* T1102c14(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].set_internal_cursor */
extern void T1102f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_cursor */
extern T0* T1102f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].make */
extern T0* T1908c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].make */
extern T0* T1085s2(TC* ac, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].make_empty */
extern T0* T1082c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].default_create */
extern T0* T1085c3(TC* ac);
/* ET_MASTER_CLASS.is_override */
extern T1 T189f32(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_override */
extern T1 T70f70(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].do_all */
extern void T1102f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].item */
extern T0* T1102f7(TC* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.unmark_overridden */
extern void T189f63(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_overriding_class */
extern void T189f66(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_first */
extern void T1102f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove */
extern void T1102f20(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].keep_head */
extern void T1082f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].set_count */
extern void T1082f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_left */
extern void T1102f27(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_left */
extern void T1102f26(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_position */
extern void T1908f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_last */
extern void T1102f25(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_last_cursors_after */
extern void T1102f31(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_next_cursor */
extern void T1908f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_after */
extern void T1908f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].first */
extern T0* T1102f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].is_empty */
extern T1 T1102f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].delete */
extern void T1102f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_all_cursors_after */
extern void T1102f24(TC* ac, T0* C);
/* ET_CLASS.is_unknown_class */
extern T1 T70f69(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_first */
extern void T69f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put */
extern void T69f23(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_right */
extern void T69f26(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T781f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_right */
extern void T69f25(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T69f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T69f18(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T69f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T69f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T69c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].set_internal_cursor */
extern void T69f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T69f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T781c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T780s1(TC* ac, T6 a1);
/* SPECIAL [ET_CLASS].make_empty */
extern T0* T779c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T780c3(TC* ac);
/* ET_MASTER_CLASS.add_first_local_override_class */
extern void T189f56(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_in_override_group */
extern T1 T70f68(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_override */
extern T1 T89f27(TC* ac, T0* C);
/* ET_CLUSTER.is_override */
extern T1 T67f9(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_override */
extern T1 T263s8(TC* ac);
/* ET_NONE_GROUP.is_override */
extern T1 T199s5(TC* ac);
/* ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T189f55(TC* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T199c30(TC* ac, T0* a1);
/* ET_SYSTEM.register_class */
extern void T50f190(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T70f274(TC* ac, T0* C, T6 a1);
/* ET_CLASS.make */
extern void T70f272(TC* ac, T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T70c272(TC* ac, T0* a1);
/* ET_CLASS_CODES.class_code */
extern T8 T783s1(TC* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found_item */
extern T8 T1199f28(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_item */
extern T8 T1199f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found */
extern T1 T1199f29(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search */
extern void T1199f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search_position */
extern void T1199f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].hash_position */
extern T6 T1199f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_item */
extern T0* T1199f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_item */
extern T6 T1199f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_item */
extern T6 T1199f26(TC* ac, T0* C, T6 a1);
/* ET_CLASS_CODES.codes_by_name */
extern T0* T783s2(TC* ac);
/* ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern T0* T81s623(TC* ac);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern T0* T81s622(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].force_last */
extern void T1199f37(TC* ac, T0* C, T8 a1, T0* a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_put */
extern void T1199f45(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_put */
extern void T1199f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_put */
extern void T1199f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].resize */
extern void T1199f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_resize */
extern void T1199f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].special_integer_ */
extern T0* T1199s31(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_resize */
extern void T1199f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_resize */
extern void T1199f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_resize */
extern void T1199f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_modulus */
extern T6 T1199f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_capacity */
extern T6 T1199f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_put */
extern void T1199f41(TC* ac, T0* C, T8 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].unset_found_item */
extern void T1199f40(TC* ac, T0* C);
/* ET_CLASS_CODES.tokens */
extern T0* T783s6(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_key_equality_tester */
extern void T1199f36(TC* ac, T0* C, T0* a1);
/* ET_CLASS_CODES.class_name_tester */
extern T0* T783s4(TC* ac);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T179c2(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_map */
extern T0* T1199c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_with_equality_testers */
extern void T1199f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_sparse_container */
extern void T1199f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_internal_cursor */
extern void T1199f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_cursor */
extern T0* T1199f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME].make */
extern T0* T1750c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_slots */
extern void T1199f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_clashes */
extern void T1199f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_key_storage */
extern void T1199f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T1086s2(TC* ac, T6 a1);
/* SPECIAL [ET_CLASS_NAME].make_empty */
extern T0* T1087c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T1086c3(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_item_storage */
extern void T1199f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].make */
extern T0* T1749s2(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].default_create */
extern T0* T1749c3(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern T0* T81s573(TC* ac);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T774c9(TC* ac, T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern T0* T774f4(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern T0* T81s572(TC* ac);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T773c11(TC* ac, T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern T0* T773f6(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern T0* T81s571(TC* ac);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T782c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T1198s1(TC* ac, T6 a1);
/* SPECIAL [ET_BASE_TYPE].make_empty */
extern T0* T1197c5(TC* ac, T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern T0* T782f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T1198c3(TC* ac);
/* ET_SYSTEM.set_any_type */
extern void T50f147(TC* ac, T0* C);
/* ET_CLIENT_LIST.put_first */
extern void T183f14(TC* ac, T0* C, T0* a1);
/* ET_CLIENT.make */
extern T0* T190c6(TC* ac, T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T183c13(TC* ac, T6 a1);
/* ET_SYSTEM.make_adapted */
extern void T50f144(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.default_read_only_value */
extern T1 T50f127(TC* ac, T0* C);
/* ET_SYSTEM.set_unknown_kernel_types */
extern void T50f143(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern T0* T81s13(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern T0* T81s12(TC* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T186c30(TC* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern void T186f30p1(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern T0* T81s11(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern T0* T81s10(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_parents */
extern T0* T81s8(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_parent */
extern T0* T81s7(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_class_type */
extern T0* T81s6(TC* ac);
/* ET_SYSTEM.set_system_name */
extern void T50f142(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.initialize */
extern void T50f141(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T175c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1081c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1081f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1081f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1688c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1687s1(TC* ac, T6 a1);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1686c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1687c3(TC* ac);
/* ET_CLUSTERS.make_empty */
extern T0* T94c3(TC* ac);
/* DS_ARRAYED_LIST [ET_CLUSTER].make */
extern T0* T842c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].set_internal_cursor */
extern void T842f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_cursor */
extern T0* T842f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER].make */
extern T0* T1280c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].make */
extern T0* T1278s1(TC* ac, T6 a1);
/* SPECIAL [ET_CLUSTER].make_empty */
extern T0* T1279c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].default_create */
extern T0* T1278c3(TC* ac);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T174c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].make */
extern T0* T1080c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1080f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T1080f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY].make */
extern T0* T1685c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].make */
extern T0* T1684s1(TC* ac, T6 a1);
/* SPECIAL [ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1683c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].default_create */
extern T0* T1684c3(TC* ac);
/* ET_SYSTEM.initialize */
extern void T50f141p1(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T178f39(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern T0* T50s136(TC* ac);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_map */
extern T0* T178c38(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T178f42(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T178f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_internal_cursor */
extern void T178f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T178f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].make */
extern T0* T1088c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_slots */
extern void T178f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_clashes */
extern void T178f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T178f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T178f55(TC* ac, T0* C, T6 a1);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T263s6(TC* ac);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T263f4(TC* ac, T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T199f12(TC* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_lower_name */
extern T0* T199f13(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.string_ */
extern T0* T199s15(TC* ac);
/* ET_NONE_GROUP.lower_name */
extern T0* T199f14(TC* ac, T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T199f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T63f13(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T42f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T42f13(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T68f760(TC* ac, T0* C);
/* ET_CLASS.set_group */
extern void T70f273(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.fill_options */
extern void T89f96(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_loop_assertions_enabled */
extern void T70f346(TC* ac, T0* C, T1 a1);
/* ET_CLASS.set_check_assertions_enabled */
extern void T70f345(TC* ac, T0* C, T1 a1);
/* ET_CLASS.set_invariants_enabled */
extern void T70f344(TC* ac, T0* C, T1 a1);
/* ET_CLASS.set_postconditions_enabled */
extern void T70f343(TC* ac, T0* C, T1 a1);
/* ET_CLASS.set_supplier_preconditions_enabled */
extern void T70f342(TC* ac, T0* C, T1 a1);
/* ET_CLASS.set_preconditions_enabled */
extern void T70f341(TC* ac, T0* C, T1 a1);
/* UC_UTF8_STRING.to_boolean */
extern T1 T1078f69(TC* ac, T0* C);
/* UC_STRING.to_boolean */
extern T1 T919f69(TC* ac, T0* C);
/* STRING_8.to_boolean */
extern T1 T17f47(TC* ac, T0* C);
/* UC_UTF8_STRING.is_boolean */
extern T1 T1078f66(TC* ac, T0* C);
/* UC_STRING.is_boolean */
extern T1 T919f67(TC* ac, T0* C);
/* STRING_8.is_boolean */
extern T1 T17f46(TC* ac, T0* C);
/* ET_ECF_OPTIONS.assertion_value */
extern T0* T833f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.options_for_class */
extern T0* T89f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].found_item */
extern T0* T1505f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_item */
extern T0* T1505f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].found */
extern T1 T1505f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].search */
extern void T1505f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].search_position */
extern void T1505f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].hash_position */
extern T6 T1505f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_item */
extern T0* T1505f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_item */
extern T6 T1505f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_item */
extern T6 T1505f30(TC* ac, T0* C, T6 a1);
/* ET_CLUSTER.fill_options */
extern void T67f42(TC* ac, T0* C, T0* a1);
/* ET_UNKNOWN_GROUP.fill_options */
extern void T263f32(TC* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.fill_options */
extern void T199f31(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_filename */
extern void T70f291(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T68f1069(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.set_has_utf8_bom */
extern void T70f284(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yyparse */
extern void T68f1073(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T68f1087(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T68f1086(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T272s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ANY].fill_with */
extern void T273f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ANY].extend */
extern void T273f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T272s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T273f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T68f1085(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T68f1115(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_956 */
extern void T68f2088(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T68f2097(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T246f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T246f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T246f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T246f6(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_955 */
extern void T68f2087(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].force */
extern void T306s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IDENTIFIER].fill_with */
extern void T308f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IDENTIFIER].extend */
extern void T308f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_954 */
extern void T68f2086(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_953 */
extern void T68f2085(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_952 */
extern void T68f2084(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T318s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T320f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T320f10(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T685f50(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T684f53(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T65f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T68f767(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_951 */
extern void T68f2083(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T685f49(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T684f52(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_950 */
extern void T68f2082(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_949 */
extern void T68f2081(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_948 */
extern void T68f2080(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_947 */
extern void T68f2079(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_946 */
extern void T68f2078(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_945 */
extern void T68f2077(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T309s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T311f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T311f10(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T683f72(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T682f72(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T681f72(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T680f72(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T679f75(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_944 */
extern void T68f2076(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T683f71(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T682f71(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T681f71(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T680f71(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T679f74(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_943 */
extern void T68f2075(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_942 */
extern void T68f2074(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_941 */
extern void T68f2073(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_940 */
extern void T68f2072(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_939 */
extern void T68f2071(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_938 */
extern void T68f2070(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T291s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T293f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T293f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_937 */
extern void T68f2069(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_936 */
extern void T68f2068(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T297s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T299f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T299f10(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T675f55(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T690f58(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T689f55(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_935 */
extern void T68f2067(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T297s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T299f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_934 */
extern void T68f2066(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_933 */
extern void T68f2065(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_932 */
extern void T68f2064(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_931 */
extern void T68f2063(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T315s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T317f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T317f10(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_cast_type */
extern void T678f58(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T677f54(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T676f57(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_930 */
extern void T68f2062(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T315s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T317f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_929 */
extern void T68f2061(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_928 */
extern void T68f2060(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_927 */
extern void T68f2059(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_926 */
extern void T68f2058(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_925 */
extern void T68f2057(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_924 */
extern void T68f2056(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_923 */
extern void T68f2055(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_922 */
extern void T68f2054(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_921 */
extern void T68f2053(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_920 */
extern void T68f2052(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_919 */
extern void T68f2051(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_918 */
extern void T68f2050(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_917 */
extern void T68f2049(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_916 */
extern void T68f2048(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_915 */
extern void T68f2047(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_914 */
extern void T68f2046(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_913 */
extern void T68f2045(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_912 */
extern void T68f2044(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_911 */
extern void T68f2043(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_910 */
extern void T68f2042(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T68f2041(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T68f2040(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T68f2039(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T68f2038(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T68f2037(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T68f2036(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T68f2035(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T68f2034(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T68f2033(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T68f2032(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T68f2031(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T68f2030(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T68f2029(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T355s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T357f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T357f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T355s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T357f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T65f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T770c14(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern T0* T81s911(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T340c101(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T340f103(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T770s7(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T68f2028(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T68f2027(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T68f2026(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T358s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T360f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T360f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T358s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T360f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T68f2098(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T246f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T246f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T65f332(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T68f2025(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T361s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T363f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T363f10(TC* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T362f16(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T1598s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T1597f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T1597f7(TC* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern T0* T362f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T1598c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T68f2024(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T361s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T363f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T65f331(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T362c15(TC* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T362f15p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1598s1(TC* ac, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T1597c4(TC* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T362s5(TC* ac);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T68f967(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T68f969(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T250f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T68f2023(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T68f2022(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T68f2101(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T250f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T285s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T287f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].extend */
extern void T287f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T250f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T285s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T287f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T250f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T250f6(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T68f2021(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T68f2095(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T246f10(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T68f2100(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T250f10(TC* ac, T0* C);
/* SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T287f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].set_count */
extern void T287f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T68f2020(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T68f2019(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T68f2018(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T364s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T366f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T366f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T364s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T366f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T65f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T769c12(TC* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T769s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T68f2017(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T68f2016(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T68f2015(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T68f2014(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T68f1021(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T65f355(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T672f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_inline_separate_argument */
extern void T307f126(TC* ac, T0* C, T1 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.index_of_name */
extern T6 T674f4(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.index_of_name */
extern T6 T673f4(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1468f13(TC* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T551f12(TC* ac, T0* C, T1 a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1467f13(TC* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T495f12(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T68f2013(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T68f2109(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T255f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1165s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].fill_with */
extern void T1164f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].extend */
extern void T1164f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].resize */
extern void T255f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1165s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1164f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].new_capacity */
extern T6 T255f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].extendible */
extern T1 T255f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].force */
extern void T253f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].force */
extern void T1161s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].fill_with */
extern void T1160f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].extend */
extern void T1160f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].resize */
extern void T253f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1161s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1160f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].new_capacity */
extern T6 T253f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].extendible */
extern T1 T253f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T251f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1157s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1156f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1156f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T251f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1157s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1156f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T251f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T251f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T248f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T556s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T558f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T558f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T248f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T556s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T558f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T248f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T248f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T247f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T500s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T502f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T502f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T247f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T500s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T502f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T247f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T247f7(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T68f2012(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T68f2011(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].force */
extern void T518s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_AGENT].fill_with */
extern void T520f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_AGENT].extend */
extern void T520f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T518s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T520f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_inline_agent */
extern void T68f2120(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T68f2124(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].remove */
extern void T255f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].keep_head */
extern void T1164f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].set_count */
extern void T1164f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].item */
extern T0* T255f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].is_empty */
extern T1 T255f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T256f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1167s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].fill_with */
extern void T1166f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].extend */
extern void T1166f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].resize */
extern void T256f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1167s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1166f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].new_capacity */
extern T6 T256f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].extendible */
extern T1 T256f7(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.wipe_out */
extern void T674f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T1196s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.fixed_array */
extern T0* T674f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].default_create */
extern T0* T1196c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].remove */
extern void T253f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].keep_head */
extern void T1160f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].set_count */
extern void T1160f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].item */
extern T0* T253f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].is_empty */
extern T1 T253f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].force */
extern void T254f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].force */
extern void T1163s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].fill_with */
extern void T1162f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].extend */
extern void T1162f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].resize */
extern void T254f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1163s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1162f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].new_capacity */
extern T6 T254f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].extendible */
extern T1 T254f7(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.wipe_out */
extern void T673f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].keep_head */
extern void T1194s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_ITERATION_COMPONENT_LIST.fixed_array */
extern T0* T673f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].default_create */
extern T0* T1194c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T251f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1156f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1156f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T251f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T251f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].force */
extern void T252f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].force */
extern void T1159s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST_LIST].fill_with */
extern void T1158f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST_LIST].extend */
extern void T1158f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].resize */
extern void T252f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1159s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1158f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T252f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].extendible */
extern T1 T252f7(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T672f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].keep_head */
extern void T1192s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern T0* T672f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].default_create */
extern T0* T1192c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T248f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T558f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T558f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T248f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T248f5(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T247f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T502f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T502f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T247f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T247f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T768f50(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T767f55(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T766f51(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T765f51(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T764f56(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T763f52(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.cloned_inline_separate_argument_list */
extern T0* T674f3(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.put_last */
extern void T674f12(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.make_with_capacity */
extern T0* T674c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1196s1(TC* ac, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].make_empty */
extern T0* T1195c5(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T768f49(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T767f54(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T766f50(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T765f50(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T764f55(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T763f51(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.cloned_iteration_component_list */
extern T0* T673f3(TC* ac, T0* C);
/* ET_ITERATION_COMPONENT_LIST.put_last */
extern void T673f12(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.make_with_capacity */
extern T0* T673c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].make */
extern T0* T1194s1(TC* ac, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].make_empty */
extern T0* T1193c5(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T768f48(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T767f53(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T766f49(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T765f49(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T764f54(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T763f50(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T672f3(TC* ac, T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T672f12(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T672c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].make */
extern T0* T1192s1(TC* ac, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T1191c5(TC* ac, T6 a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T65f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T768f55(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T768f54(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T768f53(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T768f52(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T768c47(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T768f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T768f59(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1601c9(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T768s31(TC* ac);
/* ET_AST_FACTORY.new_external_language */
extern T0* T65f190(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T68f2010(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T68f2009(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T65f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T767f63(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T767f62(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T767f61(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T767f60(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T767f59(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T767f58(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T767f57(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T767c52(TC* ac, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T767f66(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T65f187(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.set_keyword */
extern void T407f20(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.tokens */
extern T0* T65s371(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T68f2008(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T68f2007(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T65f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T766f58(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T766f57(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T766f56(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T766f55(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T766f54(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T766f53(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T766c48(TC* ac, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T766f61(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T766s34(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T68f2006(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T68f2005(TC* ac, T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T65f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T765f56(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T765f55(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T765f54(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T765f53(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T765c48(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T765f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T765f60(TC* ac, T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T322f42(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T765s32(TC* ac);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T65f181(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T68f2004(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T68f2003(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T65f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T764f64(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T764f63(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T764f62(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T764f61(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T764f60(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T764f59(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T764f58(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T764c53(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T764f67(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T68f2002(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T68f2001(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T65f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T763f59(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T763f58(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T763f57(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T763f56(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T763f55(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T763f54(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T763c49(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T763f62(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T763s19(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T68f2000(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T68f1999(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T68f2119(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T68f1998(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T379s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T381f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T381f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T379s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T381f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T65f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T380f40(TC* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T380c39(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T380s10(TC* ac);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T380c38(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T65f323(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T68f1997(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T68f1996(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].force */
extern void T469s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION].fill_with */
extern void T471f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION].extend */
extern void T471f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T469s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T471f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_iteration_cursor */
extern T0* T68f1020(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_iteration_cursor */
extern T0* T65f370(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ITERATION_CURSOR.set_at_symbol */
extern void T761f29(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_CURSOR.make */
extern T0* T761c28(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.at_symbol */
extern T0* T81s910(TC* ac);
/* ET_SYMBOL.make_at */
extern T0* T286c102(TC* ac);
/* ET_ITERATION_CURSOR.tokens */
extern T0* T761s5(TC* ac);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T65f311(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T755c33(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator_from_symbol */
extern T0* T65f321(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_break */
extern void T304f59(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T304f56(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T304c55(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T108s15(TC* ac, T0* a1);
/* CHARACTER_32.upper */
extern T3 T3f8(TC* ac, T3 volatile* C);
/* CHARACTER_PROPERTY.to_upper */
extern T3 T1462f2(TC* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_upper_table_17 */
extern T0* T1462f36(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_16 */
extern T0* T1462f35(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_15 */
extern T0* T1462f34(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_14 */
extern T0* T1462f33(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_13 */
extern T0* T1462f32(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_12 */
extern T0* T1462f31(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_11 */
extern T0* T1462f30(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_10 */
extern T0* T1462f29(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_9 */
extern T0* T1462f28(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_8 */
extern T0* T1462f27(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_7 */
extern T0* T1462f26(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_6 */
extern T0* T1462f25(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_5 */
extern T0* T1462f24(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_4 */
extern T0* T1462f23(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_3 */
extern T0* T1462f22(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_2 */
extern T0* T1462f21(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_1 */
extern T0* T1462f20(TC* ac, T0* C);
/* CHARACTER_32.minus */
extern T3 T3f14(TC* ac, T3 volatile* C, T10 a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T304s10(TC* ac);
/* ET_FREE_OPERATOR.make_token */
extern void T304f61(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T304f62(TC* ac, T0* C);
/* ET_ECF_LIBRARY.use_obsolete_syntax_mode */
extern T1 T806f98(TC* ac, T0* C);
/* ET_ECF_SYSTEM.use_obsolete_syntax_mode */
extern T1 T87f133(TC* ac, T0* C);
/* ET_SYSTEM.use_obsolete_syntax_mode */
extern T1 T50f101(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.current_universe */
extern T0* T68f765(TC* ac, T0* C);
/* ET_ECF_CLUSTER.universe */
extern T0* T89f4(TC* ac, T0* C);
/* ET_NONE_GROUP.universe */
extern T0* T199f2(TC* ac, T0* C);
/* ET_CLUSTER.universe */
extern T0* T67f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T68f1995(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].force */
extern void T616s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].fill_with */
extern void T618f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].extend */
extern void T618f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].aliased_resized_area */
extern T0* T616s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].aliased_resized_area */
extern T0* T618f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_there_exists_quantifier_expression_header */
extern T0* T68f1019(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ITERATION_COMPONENT_LIST.force_last */
extern void T673f11(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.resize */
extern void T673f13(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.new_capacity */
extern T6 T673f7(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.capacity */
extern T6 T673f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_iteration_component_list */
extern T0* T68f1038(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].remove */
extern void T254f11(TC* ac, T0* C);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].keep_head */
extern void T1162f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].set_count */
extern void T1162f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].item */
extern T0* T254f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].is_empty */
extern T1 T254f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_there_exists_quantifier_expression */
extern T0* T65f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUANTIFIER_EXPRESSION.make_there_exists */
extern T0* T617c45(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUANTIFIER_EXPRESSION.create_unfolded_form */
extern void T617f48(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T740c17(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T740f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bar_symbol */
extern T0* T81s638(TC* ac);
/* ET_SYMBOL.make_bar */
extern T0* T286c116(TC* ac);
/* ET_TOKEN_CONSTANTS.there_exists_symbol */
extern T0* T81s637(TC* ac);
/* ET_SYMBOL.make_there_exists */
extern T0* T286c115(TC* ac);
/* ET_QUANTIFIER_EXPRESSION.tokens */
extern T0* T617s16(TC* ac);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T68s708(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T68f1994(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_for_all_quantifier_expression_header */
extern T0* T68f1018(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_AST_FACTORY.new_for_all_quantifier_expression */
extern T0* T65f368(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUANTIFIER_EXPRESSION.make_for_all */
extern T0* T617c43(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T68f1993(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_quantifier_expression */
extern T0* T68f1017(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.set_iteration_expression */
extern void T617f44(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T68f1992(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T342s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T344f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T344f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T342s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T344f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T68f1016(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.set_has_cursor_name */
extern void T343f52(TC* ac, T0* C, T1 a1);
/* ET_KEYWORD.is_as */
extern T1 T192f34(TC* ac, T0* C);
/* ET_ECF_LIBRARY.obsolete_iteration_mode */
extern T1 T806f99(TC* ac, T0* C);
/* ET_ECF_SYSTEM.obsolete_iteration_mode */
extern T1 T87f134(TC* ac, T0* C);
/* ET_SYSTEM.obsolete_iteration_mode */
extern T1 T50f102(TC* ac, T0* C);
/* ET_AST_FACTORY.new_across_all_expression */
extern T0* T65f367(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ACROSS_EXPRESSION.set_as_keyword */
extern void T343f53(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_variant_part */
extern void T343f49(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T343f48(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.make_all */
extern T0* T343c44(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T343f56(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern T0* T81s646(TC* ac);
/* ET_KEYWORD.make_as */
extern T0* T192c68(TC* ac);
/* ET_TOKEN_CONSTANTS.across_keyword */
extern T0* T81s662(TC* ac);
/* ET_KEYWORD.make_across */
extern T0* T192c84(TC* ac);
/* ET_ACROSS_EXPRESSION.tokens */
extern T0* T343s19(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T68f1991(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T68f1990(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T68f1015(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T343f50(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_all */
extern void T343f51(TC* ac, T0* C, T1 a1);
/* ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T343f46(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T343f45(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_conditional */
extern T0* T65f258(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1471c5(TC* ac, T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T192f23(TC* ac, T0* C);
/* ET_KEYWORD.is_if */
extern T1 T192f22(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T68f1989(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T68f1014(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_some */
extern void T343f47(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T68f1988(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].force */
extern void T412s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTANT].fill_with */
extern void T414f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTANT].extend */
extern void T414f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T412s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T414f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T68f1987(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T68f1986(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T68f1985(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T68f1984(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T68f1983(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T633s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T635f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T635f10(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.put_first */
extern void T634f36(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].force */
extern void T1477s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].fill_with */
extern void T1478f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].extend */
extern void T1478f7(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern T0* T634f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1477c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T68f1982(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T633s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T635f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T65f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T634f37(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T634c35(TC* ac, T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T634f35p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T1477s1(TC* ac, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1478c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern T0* T81s895(TC* ac);
/* ET_KEYWORD.make_strip */
extern T0* T192c59(TC* ac);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T634s8(TC* ac);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T68f966(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T249f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T68f1981(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T68f1980(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T68f2096(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T249f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T274s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T275f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].extend */
extern void T275f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T249f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T274s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T275f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T249f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T249f6(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T68f1979(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T68f2094(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T249f10(TC* ac, T0* C);
/* SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T275f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].set_count */
extern void T275f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T68f1978(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T68f1977(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T571s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T573f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T573f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T68f1976(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T571s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T573f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T65f319(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T572f40(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T68f1975(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T68f1974(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T68f1973(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T68f1972(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T68f1971(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T562s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T564f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T564f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.put_first */
extern void T563f37(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T563f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T68f1970(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T562s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T564f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T65f318(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T563f38(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T563c35(TC* ac, T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T563f35p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern T0* T81s641(TC* ac);
/* ET_SYMBOL.make_right_array */
extern T0* T286c119(TC* ac);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern T0* T81s892(TC* ac);
/* ET_SYMBOL.make_left_array */
extern T0* T286c105(TC* ac);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T563s8(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T68f1969(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T68f1968(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.set_cast_type */
extern void T563f36(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T68f1967(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T68f1966(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T68f1965(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T68f1964(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T592s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T594f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T594f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T592s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T594f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T65f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T593f30(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T593c29(TC* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T593s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T68f1963(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T348s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T350f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T350f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T68f1962(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T348s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T350f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T65f316(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_ARGUMENT_LIST.make_bracketed_with_capacity */
extern T0* T349c23(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T68f1961(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T68f1960(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T376s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T378f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T378f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T376s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T378f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T68f1959(TC* ac, T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T65f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T377c32(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T68f1958(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T68f1957(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T68f1956(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T68f1955(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T68f1954(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T68f1953(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T68f1952(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T68f1951(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T68f1950(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T68f1949(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T68f2091(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_17_11_0 */
extern T0* T68s1013(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T68f1948(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T68f1947(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T68f1946(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T68f1945(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T68f1944(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T68f1943(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T68f1012(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.register_inline_constant */
extern void T70f296(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T760f32(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T65f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T760f33(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T760c31(TC* ac, T0* a1);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T760s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T68f1942(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T68f1941(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T68f1940(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T68f1939(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T68f1938(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T68f1937(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T68f1936(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T68f1935(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T68f1934(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T68f1933(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T68f1114(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T68f1932(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T68f1931(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T68f1930(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T68f1929(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T68f1011(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T672f11(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.resize */
extern void T672f13(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T672f7(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T672f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T68f1040(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].remove */
extern void T252f11(TC* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST_LIST].keep_head */
extern void T1158f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST_LIST].set_count */
extern void T1158f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].item */
extern T0* T252f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].is_empty */
extern T1 T252f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_named_object_test */
extern T0* T65f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T759f34(TC* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.make */
extern T0* T759c33(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.make_object_test */
extern void T759f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.tokens */
extern T0* T759s9(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T68f1928(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T68f1927(TC* ac, T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T65f314(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.set_attached_keyword */
extern void T758f32(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T758c31(TC* ac, T0* a1, T0* a2);
/* ET_OBJECT_TEST.tokens */
extern T0* T758s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T68f1926(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T68f1925(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T68f1010(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_AST_FACTORY.new_old_object_test */
extern T0* T65f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OLD_OBJECT_TEST.set_left_brace */
extern void T757f37(TC* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.make */
extern T0* T757c36(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.tokens */
extern T0* T757s12(TC* ac);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern T0* T68s994(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T68f1924(TC* ac, T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T65f313(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T756f30(TC* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T756c29(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern T0* T81s908(TC* ac);
/* ET_KEYWORD.make_old */
extern T0* T192c57(TC* ac);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T756s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T68f1923(TC* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T65f312(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T304f60(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T68f1922(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T68f1921(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T68f1920(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T68f1009(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T68f1009ot1(TC* ac, T0* a1);
extern T1 T68f1009ot2(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T65f363(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T328f158(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T68f1919(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T68f1008(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T68f1008ot1(TC* ac, T0* a1);
extern T1 T68f1008ot2(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T65f362(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T328f157(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T68f1918(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T68f1917(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T68f1916(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T68f1915(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T68f1914(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T68f1913(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T68f1912(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T68f1911(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T68f1910(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T68f1909(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T68f1908(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T68f1907(TC* ac, T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T65f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T754c29(TC* ac, T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T754s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T68f1906(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T68f1905(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T68f1904(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T68f1903(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T68f1902(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T68f1901(TC* ac, T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T65f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T753c30(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T68f1900(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T68f1899(TC* ac, T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T65f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T68f1898(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T68f1897(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T65f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T749c33(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T68f1896(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T68f1895(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T68f1894(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T65f307(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T751f43(TC* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T751c42(TC* ac);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern T0* T81s906(TC* ac);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T313c57(TC* ac);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T313f63(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T313f64(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T68f1893(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T68f1892(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T65f306(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T750f43(TC* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T750c42(TC* ac);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern T0* T81s904(TC* ac);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T313c59(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T68f1891(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T68f1890(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T68f1889(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T68f1888(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T68f1887(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T68f1886(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T68f1885(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T68f1884(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T68f1883(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T68f1882(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T68f1881(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T68f1880(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T68f1879(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T68f1878(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T68f1877(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T68f1876(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T65f305(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T328f156(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T68f1875(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T65f304(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T328f155(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T68f1874(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator_from_symbol */
extern T0* T65f303(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_infix */
extern T0* T304c58(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T68f1873(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T65f301(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T304f57(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T68f1872(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T68f1871(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T68f1870(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T668s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T670f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].extend */
extern void T670f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T668s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T670f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T68f1869(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T68f1007(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T68f1868(TC* ac, T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T65f300(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T748f29(TC* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T748c28(TC* ac, T0* a1);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T748s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T68f1867(TC* ac, T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T65f299(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T747f29(TC* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T747c28(TC* ac);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T747s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T68f1866(TC* ac, T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T65f298(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T746f29(TC* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T746c28(TC* ac);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T746s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T68f1865(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T68f1006(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T65f361(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T745f29(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T68f1864(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].force */
extern void T472s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].fill_with */
extern void T474f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].extend */
extern void T474f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T472s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T474f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T65f297(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T68f1863(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T68f1862(TC* ac, T0* C);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T65f296(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T68f1861(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T68f1860(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T68f1859(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T68f1858(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T68f1857(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T68f1856(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T65f293(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_dot_feature_name */
extern T0* T68f993(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T68f1855(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern T0* T68s978(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T68f1854(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T68f1853(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T68f1852(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T68f1851(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T68f1850(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T68f1849(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T68f1848(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T68f1847(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T68f1846(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T68f1005(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T68f1845(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T65f295(TC* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T744f34(TC* ac, T0* C, T1 a1);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T65f291(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T68f1844(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T68f1843(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T630s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T632f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T632f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T630s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T632f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T65f294(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T631f38(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T68f1842(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T68f1841(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T382s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T384f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T384f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T382s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T384f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T68f1840(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T68f1839(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T68f1838(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T68f1837(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T68f1836(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T539s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T541f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T541f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T539s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T541f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T65f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T743f18(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T743c17(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T743f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T68f1835(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T68f1834(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T65f290(TC* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T741f19(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T741f18(TC* ac, T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T741c17(TC* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T741s11(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T68f1833(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T68f1832(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T65f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T68f1831(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T68f1830(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T68f1004(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T65f360(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T1046c15(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T68f1829(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].force */
extern void T524s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].fill_with */
extern void T526f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].extend */
extern void T526f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T524s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T526f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inline_separate_argument_comma */
extern T0* T65f288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T68f1828(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].force */
extern void T521s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].fill_with */
extern void T523f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].extend */
extern void T523f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T521s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T523f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_inline_separate_argument */
extern T0* T68f1003(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.force_last */
extern void T674f11(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.resize */
extern void T674f13(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.new_capacity */
extern T6 T674f7(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.capacity */
extern T6 T674f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_inline_separate_argument_list */
extern T0* T68f1039(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].remove */
extern void T256f11(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].keep_head */
extern void T1166f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].set_count */
extern void T1166f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].item */
extern T0* T256f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].is_empty */
extern T1 T256f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_inline_separate_argument */
extern T0* T65f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT.make */
extern T0* T522c11(TC* ac, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_ARGUMENT.tokens */
extern T0* T522s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T68f1827(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].force */
extern void T527s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].fill_with */
extern void T529f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].extend */
extern void T529f10(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.put_first */
extern void T528f16(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].force */
extern void T1190s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].fill_with */
extern void T1189f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].extend */
extern void T1189f7(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.fixed_array */
extern T0* T528f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].default_create */
extern T0* T1190c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T68f1826(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].aliased_resized_area */
extern T0* T527s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].aliased_resized_area */
extern T0* T529f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inline_separate_arguments */
extern T0* T65f287(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_INLINE_SEPARATE_ARGUMENTS.set_separate_keyword */
extern void T528f17(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.make_with_capacity */
extern T0* T528c15(TC* ac, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.make_with_capacity */
extern void T528f15p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].make */
extern T0* T1190s1(TC* ac, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].make_empty */
extern T0* T1189c4(TC* ac, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.tokens */
extern T0* T528s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T68f1825(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T68f1824(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T68f1823(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].force */
extern void T530s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].fill_with */
extern void T532f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].extend */
extern void T532f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].aliased_resized_area */
extern T0* T530s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].aliased_resized_area */
extern T0* T532f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_inline_separate_instruction */
extern T0* T68f1002(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_inline_separate_instruction */
extern T0* T65f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_INSTRUCTION.make */
extern T0* T531c14(TC* ac, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_INSTRUCTION.tokens */
extern T0* T531s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T68f1822(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T565s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T567f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T567f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T565s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T567f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T65f286(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T68f1821(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T568s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T570f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T570f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T569f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].force */
extern void T1627s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1626f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].extend */
extern void T1626f7(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern T0* T569f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1627c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T68f1820(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T568s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T570f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T65f285(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T569c12(TC* ac, T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T569s5(TC* ac);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T569f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T1627s1(TC* ac, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1626c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T68f1819(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T68f1818(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T68f1817(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T68f1816(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T68f1815(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T449s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T451f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T451f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T449s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T451f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T65f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T450c14(TC* ac, T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T450s4(TC* ac);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T65f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.make */
extern T0* T407c19(TC* ac);
/* ET_COMPOUND.make */
extern void T407f19p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T1187s1(TC* ac, T6 a1);
/* SPECIAL [ET_INSTRUCTION].make_empty */
extern T0* T1186c4(TC* ac, T6 a1);
/* ET_COMPOUND.fixed_array */
extern T0* T407f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T1187c2(TC* ac);
/* ET_COMPOUND.tokens */
extern T0* T407s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T68f1814(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T409s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T411f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T411f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T409s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T411f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T68f1813(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T68f1812(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].force */
extern void T627s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].fill_with */
extern void T629f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].extend */
extern void T629f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].aliased_resized_area */
extern T0* T627s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].aliased_resized_area */
extern T0* T629f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_repeat_instruction_header */
extern T0* T68f1001(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_AST_FACTORY.new_repeat_instruction */
extern T0* T65f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_REPEAT_INSTRUCTION.make */
extern T0* T628c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_REPEAT_INSTRUCTION.create_unfolded_form */
extern void T628f32(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.close_repeat_symbol */
extern T0* T81s640(TC* ac);
/* ET_SYMBOL.make_close_repeat */
extern T0* T286c118(TC* ac);
/* ET_TOKEN_CONSTANTS.open_repeat_symbol */
extern T0* T81s639(TC* ac);
/* ET_SYMBOL.make_open_repeat */
extern T0* T286c117(TC* ac);
/* ET_REPEAT_INSTRUCTION.tokens */
extern T0* T628s13(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T68f1811(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T345s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T347f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T347f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T345s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T347f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T68f1000(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_INSTRUCTION.set_has_cursor_name */
extern void T346f35(TC* ac, T0* C, T1 a1);
/* ET_AST_FACTORY.new_across_instruction */
extern T0* T65f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ACROSS_INSTRUCTION.set_as_keyword */
extern void T346f36(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T346f33(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T346f32(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.make */
extern T0* T346c28(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T346f37(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.tokens */
extern T0* T346s17(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T68f1810(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T68f1809(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].force */
extern void T656s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].fill_with */
extern void T658f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].extend */
extern void T658f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].aliased_resized_area */
extern T0* T656s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].aliased_resized_area */
extern T0* T658f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_expression */
extern T0* T65f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_WHEN_EXPRESSION.make */
extern T0* T657c10(TC* ac, T0* a1, T0* a2);
/* ET_WHEN_EXPRESSION.tokens */
extern T0* T657s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T68f1808(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].force */
extern void T659s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].fill_with */
extern void T661f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].extend */
extern void T661f10(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION_LIST.put_first */
extern void T660f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].force */
extern void T1639s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_WHEN_EXPRESSION].fill_with */
extern void T1638f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_EXPRESSION].extend */
extern void T1638f7(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION_LIST.fixed_array */
extern T0* T660f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].default_create */
extern T0* T1639c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T68f1807(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].aliased_resized_area */
extern T0* T659s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].aliased_resized_area */
extern T0* T661f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_expression_list */
extern T0* T65f281(TC* ac, T0* C, T6 a1);
/* ET_WHEN_EXPRESSION_LIST.make_with_capacity */
extern T0* T660c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].make */
extern T0* T1639s1(TC* ac, T6 a1);
/* SPECIAL [ET_WHEN_EXPRESSION].make_empty */
extern T0* T1638c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T68f1806(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T68f1805(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T68f1804(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].force */
extern void T533s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].fill_with */
extern void T535f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].extend */
extern void T535f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].aliased_resized_area */
extern T0* T533s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].aliased_resized_area */
extern T0* T535f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_expression */
extern T0* T65f280(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_EXPRESSION.set_else_part */
extern void T534f32(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_EXPRESSION.make */
extern T0* T534c31(TC* ac, T0* a1, T0* a2);
/* ET_INSPECT_EXPRESSION.tokens */
extern T0* T534s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T68f1803(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T68f1802(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T391s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T393f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T393f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T391s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T393f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T68f1801(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T68f999(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T68f1800(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T68f1799(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T68f1798(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T388s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].fill_with */
extern void T390f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].extend */
extern void T390f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T388s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T390f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T65f279(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T739c11(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern T0* T81s643(TC* ac);
/* ET_SYMBOL.make_dotdot */
extern T0* T286c121(TC* ac);
/* ET_CHOICE_RANGE.tokens */
extern T0* T739s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T68f1797(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T68f1796(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T394s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T396f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T396f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T394s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T396f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T65f278(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T68f1795(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T397s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T399f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T399f10(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.put_first */
extern void T398f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].force */
extern void T1604s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].fill_with */
extern void T1603f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].extend */
extern void T1603f7(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.fixed_array */
extern T0* T398f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T1604c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T68f1794(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T397s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T399f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T65f277(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T398f16(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T398c14(TC* ac, T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T398f14p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T1604s1(TC* ac, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].make_empty */
extern T0* T1603c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern T0* T81s656(TC* ac);
/* ET_KEYWORD.make_when */
extern T0* T192c78(TC* ac);
/* ET_CHOICE_LIST.tokens */
extern T0* T398s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T68f1793(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T68f1792(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T68f1791(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T68f1790(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T68f1789(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T662s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T664f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].extend */
extern void T664f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T662s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T664f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part */
extern T0* T65f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T663c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T68f1788(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T665s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T667f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T667f10(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.put_first */
extern void T666f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].force */
extern void T1641s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].fill_with */
extern void T1640f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].extend */
extern void T1640f7(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern T0* T666f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T1641c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T68f1787(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T665s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T667f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T65f275(TC* ac, T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T666c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T1641s1(TC* ac, T6 a1);
/* SPECIAL [ET_WHEN_PART].make_empty */
extern T0* T1640c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T68f1786(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T68f1785(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T68f1784(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T536s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T538f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T538f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T536s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T538f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T65f274(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T537f17(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T537c16(TC* ac, T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T537s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T68f1783(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T68f1782(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].force */
extern void T452s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].fill_with */
extern void T454f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].extend */
extern void T454f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T452s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T454f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression */
extern T0* T65f273(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ELSEIF_EXPRESSION.make */
extern T0* T453c11(TC* ac, T0* a1, T0* a2);
/* ET_ELSEIF_EXPRESSION.tokens */
extern T0* T453s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T68f1781(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].force */
extern void T455s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].fill_with */
extern void T457f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].extend */
extern void T457f10(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.put_first */
extern void T456f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].force */
extern void T1612s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ELSEIF_EXPRESSION].fill_with */
extern void T1611f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_EXPRESSION].extend */
extern void T1611f7(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.fixed_array */
extern T0* T456f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].default_create */
extern T0* T1612c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T68f1780(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T455s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T457f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression_list */
extern T0* T65f272(TC* ac, T0* C, T6 a1);
/* ET_ELSEIF_EXPRESSION_LIST.make_with_capacity */
extern T0* T456c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].make */
extern T0* T1612s1(TC* ac, T6 a1);
/* SPECIAL [ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T1611c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T68f1779(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T68f1778(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].force */
extern void T512s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_EXPRESSION].fill_with */
extern void T514f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_EXPRESSION].extend */
extern void T514f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T512s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T514f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_expression */
extern T0* T65f271(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_IF_EXPRESSION.set_elseif_parts */
extern void T513f35(TC* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.make */
extern T0* T513c34(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.tokens */
extern T0* T513s9(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T68f1777(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T68f1776(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T458s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T460f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T460f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T458s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T460f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T65f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T459c10(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T68f1775(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T461s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T463f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T463f10(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T462f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].force */
extern void T1614s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].fill_with */
extern void T1613f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].extend */
extern void T1613f7(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern T0* T462f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T1614c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T68f1774(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T461s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T463f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T65f269(TC* ac, T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T462c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T1614s1(TC* ac, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].make_empty */
extern T0* T1613c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T68f1773(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T68f1772(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T515s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T517f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T517f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T515s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T517f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T65f268(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T516f19(TC* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T516f18(TC* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T516c17(TC* ac, T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T516s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T68f1771(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T68f1770(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T68f1769(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T68f1768(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].force */
extern void T442s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATION_REGION].fill_with */
extern void T444f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATION_REGION].extend */
extern void T444f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T442s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T444f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creation_region */
extern T0* T65f267(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATION_REGION.set_right_symbol */
extern void T443f7(TC* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.set_left_symbol */
extern void T443f6(TC* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.make */
extern T0* T443c5(TC* ac, T0* a1);
/* ET_CREATION_REGION.tokens */
extern T0* T443s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T68f1767(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T68f1766(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T439s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T441f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T441f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T439s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T441f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T65f266(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_EXPRESSION.set_creation_region */
extern void T440f42(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T440f41(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T440c39(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T65f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T736c5(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T68f1765(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T68f1764(TC* ac, T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T65f265(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CREATE_INSTRUCTION.set_creation_region */
extern void T738f26(TC* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T738f25(TC* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T738c24(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T68f1763(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T68f1762(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T68f1761(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T68f1760(TC* ac, T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T65f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T735f24(TC* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T735c23(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern T0* T81s901(TC* ac);
/* ET_SYMBOL.make_bang */
extern T0* T286c99(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T68f1759(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T68f1758(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T68f1757(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T68f1756(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T385s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T387f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T387f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T385s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T387f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T68f998(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T257f15(TC* ac, T0* C);
/* SPECIAL [ET_ASSERTION_ITEM].keep_head */
extern void T1168f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].set_count */
extern void T1168f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T257f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1170f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_after */
extern void T1170f6(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T386f21(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].force */
extern void T1169s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].fill_with */
extern void T1168f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].extend */
extern void T1168f10(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern T0* T386f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1169c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T257f10(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T65f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T386f23(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.set_then_compound */
extern void T386f22(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T386c20(TC* ac, T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T386f20p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1169s1(TC* ac, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make_empty */
extern T0* T1168c5(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern T0* T81s658(TC* ac);
/* ET_KEYWORD.make_check */
extern T0* T192c80(TC* ac);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T386s7(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].remove_last */
extern void T240f24(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_last_cursors_after */
extern void T240f27(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].last */
extern T6 T240f12(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T68f1755(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T68f1754(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T68f1753(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T68f1752(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_check_instruction */
extern void T68f2118(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_assertions */
extern void T68f2123(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T68f1751(TC* ac, T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T65f261(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T68f1750(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T68f1749(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T68f1748(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T68f1747(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T68f1746(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_repeat_instruction */
extern T0* T68f997(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REPEAT_INSTRUCTION.set_close_repeat_symbol */
extern void T628f31(TC* ac, T0* C, T0* a1);
/* ET_REPEAT_INSTRUCTION.set_loop_compound */
extern void T628f30(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T68f1745(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T68f996(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T346f34(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T346f31(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T346f30(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T346f29(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T68f1744(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T65f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T733f22(TC* ac, T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T733f21(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T733f20(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T733c19(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T733s8(TC* ac);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern T0* T68s995(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T68f1743(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T65f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T68f1742(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T68f1741(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T68f1740(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T68f1739(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T65f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T732c14(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern T0* T81s645(TC* ac);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T286c123(TC* ac);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T732s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T68f1738(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T65f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T731c15(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern T0* T81s644(TC* ac);
/* ET_SYMBOL.make_assign */
extern T0* T286c122(TC* ac);
/* ET_ASSIGNMENT.tokens */
extern T0* T731s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T68f1737(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T65f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T730c23(TC* ac, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern T0* T730f6(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T730s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T68f1736(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T68f1735(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T68f1734(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T68f1733(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T68f1113(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T68f1732(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T406s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T408f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].extend */
extern void T408f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T406s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T408f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T68f1731(TC* ac, T0* C);
/* ET_COMPOUND.put_first */
extern void T407f18(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].force */
extern void T1187s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].fill_with */
extern void T1186f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].extend */
extern void T1186f7(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T68f1730(TC* ac, T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T65f254(TC* ac, T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T407c17(TC* ac, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T407f17p1(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T68f1729(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T68f1728(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T68f1727(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T68f1726(TC* ac, T0* C);
/* ET_AST_FACTORY.new_empty_compound */
extern T0* T65f253(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T68f1725(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T68f1724(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T65f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T68f1723(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T68f1722(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T68f1721(TC* ac, T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T65f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T68f1720(TC* ac, T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T65f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern T0* T81s667(TC* ac);
/* ET_KEYWORD.make_rescue */
extern T0* T192c89(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T68f1719(TC* ac, T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T65f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T68f1718(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T68f1717(TC* ac, T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T65f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T68f1716(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T68f1715(TC* ac, T0* C);
/* ET_AST_FACTORY.new_attribute_compound */
extern T0* T65f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern T0* T81s681(TC* ac);
/* ET_KEYWORD.make_attribute */
extern T0* T192c103(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T68f1714(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T65f246(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T68f1713(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T613s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T615f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T615f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T613s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T615f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T65f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T729c90(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_attachment_mark_separate_keyword */
extern T0* T65f149(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T68f1712(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T68f1711(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T68f1710(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T68f1709(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T68f1708(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T68f1707(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T68f1706(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T68f1705(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T68f1704(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T65f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T728f94(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T728c93(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T68f1703(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T68f1702(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T68f1701(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T68f1700(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T68f1699(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T68f1698(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T68f1697(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T68f1696(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T68f1695(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T68f1694(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T68f1693(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T68f1692(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T547s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T549f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T549f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T547s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T549f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T68f1691(TC* ac, T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T65f243(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T200f88(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T68f1690(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T68f1689(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T68f1688(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T68f1687(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T68f1686(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T68f1685(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T68f1684(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T68f1683(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T68f1682(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T68f1681(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_like_feature */
extern T0* T68f992(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T65f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T726f94(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T726c93(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T68f1680(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T68f1679(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T68f1678(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T68f1677(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T68f1676(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T68f1675(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T68f1674(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T68f1673(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T68f1672(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T68f1671(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T68f1670(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T68f1669(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T68f1668(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].force */
extern void T351s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T352f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T352f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T351s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T352f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T65f240(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T65f239(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T724c13(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T68f1667(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T68f1666(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T353s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T354f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T354f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T68f2117(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T65f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1469c13(TC* ac, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T186f12(TC* ac, T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T65f241(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T68f1665(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T68f1664(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T68f1663(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T68f1662(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T68f1661(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T353s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T354f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T65f237(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T186f32(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T68f1660(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T68f1659(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T68f1658(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T68f1657(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T68f1656(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T68f1655(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T68f1654(TC* ac, T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T65f238(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T68f1653(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T68f1652(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T68f991(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T68f991ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T65f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T68f1022(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T68f1651(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T68f990(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T68f990ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_class_type */
extern T0* T65f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T65f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T65f351(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.formal_parameter */
extern T0* T70f136(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T510f14(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T68f1650(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T68f1649(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T68f1648(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T68f1647(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T68f1646(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T68f1645(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T68f1644(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T68f1643(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T68f1642(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T68f1641(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T68f1640(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].force */
extern void T636s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE].fill_with */
extern void T637f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE].extend */
extern void T637f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].aliased_resized_area */
extern T0* T636s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE].aliased_resized_area */
extern T0* T637f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T68f1639(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T68f1638(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T68f1637(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T68f1636(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T68f1635(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T68f1634(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T68f1633(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T68f1632(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T68f1631(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T68f1630(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T68f1629(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T68f1628(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T68f1627(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T68f1626(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T68f1625(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T68f1624(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T68f1623(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T68f1622(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T68f1621(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T68f1620(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T68f1619(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T68f1618(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T68f1617(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T68f1616(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T68f1615(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T68f1614(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T68f1613(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T68f1612(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T68f1611(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T68f1610(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T68f1609(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T68f1608(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T68f1607(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T68f1606(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T68f1605(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T68f1604(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T68f1603(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T68f1602(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T68f1601(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T68f1600(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T68f1599(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T68f1598(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T68f1597(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T68f1596(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T68f1595(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T68f1594(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T68f1593(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T68f1592(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T68f1591(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T68f1590(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T68f1589(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T68f1588(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T68f1587(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T68f1586(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T68f1585(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T68f1584(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T68f1583(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T68f1582(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T68f1581(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T68f1580(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T68f1579(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T68f1578(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T68f1577(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T68f1576(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T68f1575(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T68f1574(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T68f1573(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T68f1572(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T68f1571(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T68f1570(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T68f1569(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T653s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].fill_with */
extern void T655f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].extend */
extern void T655f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T68f1568(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T653s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T655f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T68f1567(TC* ac, T0* C);
/* ET_AST_FACTORY.new_variant */
extern T0* T65f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T654f8(TC* ac, T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T654c7(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern T0* T81s673(TC* ac);
/* ET_KEYWORD.make_variant */
extern T0* T192c95(TC* ac);
/* ET_VARIANT.tokens */
extern T0* T654s4(TC* ac);
/* ET_AST_FACTORY.new_tag */
extern T0* T65f133(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T68f1566(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T68f1565(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T559s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T561f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T561f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T559s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T561f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T68f989(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T560f21(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T560f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T65f350(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T560f22(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T560c20(TC* ac, T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T560f20p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern T0* T81s891(TC* ac);
/* ET_INVARIANT_KEYWORD.make */
extern T0* T280c57(TC* ac);
/* ET_INVARIANT_KEYWORD.make_token */
extern void T280f59(TC* ac, T0* C, T0* a1);
/* ET_INVARIANT_KEYWORD.make_leaf */
extern void T280f60(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T560s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T68f1564(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T68f1563(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T68f1562(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T68f1561(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_loop_invariant */
extern void T68f2116(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T68f1560(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T68f1559(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T542s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T544f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].extend */
extern void T544f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T542s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T544f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T68f988(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_inline_separate_arguments_stack */
extern void T68f1093(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].wipe_out */
extern void T255f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].i_th */
extern T0* T255f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_iteration_components_stack */
extern void T68f1092(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].wipe_out */
extern void T253f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].i_th */
extern T0* T253f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T68f1091(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T251f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T251f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T68f1090(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T248f10(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T68f1089(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T247f10(TC* ac, T0* C);
/* ET_INVARIANTS.set_inline_separate_arguments */
extern void T543f49(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_iteration_components */
extern void T543f48(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_object_tests */
extern void T543f47(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T543f46(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T543f14(TC* ac, T0* C);
/* ET_AST_FACTORY.new_invariants */
extern T0* T65f349(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T543f50(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T543c45(TC* ac, T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T543f54(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T68f1558(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T68f1557(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T68f1556(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T68f1555(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_invariant */
extern void T68f2115(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T68f1554(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T604s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T606f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T606f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T604s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T606f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T68f987(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T605f22(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T605f8(TC* ac, T0* C);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T65f348(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T605f24(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T605f23(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T605c21(TC* ac, T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T605f21p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern T0* T81s893(TC* ac);
/* ET_KEYWORD.make_ensure */
extern T0* T192c60(TC* ac);
/* ET_POSTCONDITIONS.tokens */
extern T0* T605s9(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T68f1553(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T68f1552(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T68f1551(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T68f1550(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T68f1549(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_postcondition */
extern void T68f2114(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T68f1548(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].force */
extern void T607s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].fill_with */
extern void T609f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].extend */
extern void T609f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T607s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T609f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T68f986(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T608f21(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T608f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T65f347(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T608f23(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T608f22(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T608c20(TC* ac, T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T608f20p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern T0* T81s894(TC* ac);
/* ET_KEYWORD.make_require */
extern T0* T192c63(TC* ac);
/* ET_PRECONDITIONS.tokens */
extern T0* T608s8(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T68f1547(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T68f1546(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T68f1545(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T68f1544(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T68f1543(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_precondition */
extern void T68f2113(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T68f1542(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_class_assertion */
extern void T68f2112(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.add_untagged_assertion */
extern void T68f2122(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T68f2122ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T257f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T257f18(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1169s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1168f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T257f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T257f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T257f14(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T65f335(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.set_untagged_assertion */
extern void T776f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T257f6(TC* ac, T0* C);
/* ET_AST_FACTORY.new_class_assertion */
extern T0* T65f235(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.set_class_keyword */
extern void T723f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.make */
extern T0* T723c9(TC* ac);
/* ET_CLASS_ASSERTION.tokens */
extern T0* T723s2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T68f1541(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T68f1540(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T68f2111(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T68f2111ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T65f334(TC* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T776c9(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T68f1118(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T63f217(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T1465c18(TC* ac, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T1465f19(TC* ac, T0* C, T1 a1);
/* ET_BINARY_INTEGER_CONSTANT.position_to_text */
extern T0* T683f63(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.append_position_to_string */
extern void T683f81(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.integer_ */
extern T0* T683s69(TC* ac);
/* ET_OCTAL_INTEGER_CONSTANT.position_to_text */
extern T0* T682f63(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.append_position_to_string */
extern void T682f81(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.integer_ */
extern T0* T682s69(TC* ac);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position_to_text */
extern T0* T681f63(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_position_to_string */
extern void T681f81(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T681s69(TC* ac);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position_to_text */
extern T0* T680f63(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_position_to_string */
extern void T680f81(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T680s69(TC* ac);
/* ET_REGULAR_INTEGER_CONSTANT.position_to_text */
extern T0* T679f63(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_position_to_string */
extern void T679f82(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T679s69(TC* ac);
/* ET_VERBATIM_STRING.position_to_text */
extern T0* T678f50(TC* ac, T0* C);
/* ET_VERBATIM_STRING.append_position_to_string */
extern void T678f67(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.integer_ */
extern T0* T678s56(TC* ac);
/* ET_SPECIAL_MANIFEST_STRING.position_to_text */
extern T0* T677f46(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.append_position_to_string */
extern void T677f63(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.integer_ */
extern T0* T677s52(TC* ac);
/* ET_C3_CHARACTER_CONSTANT.position_to_text */
extern T0* T675f47(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.append_position_to_string */
extern void T675f64(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.integer_ */
extern T0* T675s53(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.position_to_text */
extern T0* T690f47(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.append_position_to_string */
extern void T690f64(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.integer_ */
extern T0* T690s53(TC* ac);
/* ET_C1_CHARACTER_CONSTANT.position_to_text */
extern T0* T689f46(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.append_position_to_string */
extern void T689f64(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.integer_ */
extern T0* T689s53(TC* ac);
/* ET_FALSE_CONSTANT.position_to_text */
extern T0* T688f39(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.append_position_to_string */
extern void T688f55(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.integer_ */
extern T0* T688s45(TC* ac);
/* ET_TRUE_CONSTANT.position_to_text */
extern T0* T687f39(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.append_position_to_string */
extern void T687f55(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.integer_ */
extern T0* T687s45(TC* ac);
/* ET_UNDERSCORED_REAL_CONSTANT.position_to_text */
extern T0* T685f41(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.append_position_to_string */
extern void T685f59(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.integer_ */
extern T0* T685s47(TC* ac);
/* ET_REGULAR_REAL_CONSTANT.position_to_text */
extern T0* T684f41(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.append_position_to_string */
extern void T684f59(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.integer_ */
extern T0* T684s47(TC* ac);
/* ET_REGULAR_MANIFEST_STRING.position_to_text */
extern T0* T676f45(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.append_position_to_string */
extern void T676f63(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.integer_ */
extern T0* T676s52(TC* ac);
/* ET_CURRENT.position_to_text */
extern T0* T301f31(TC* ac, T0* C);
/* ET_CURRENT.append_position_to_string */
extern void T301f48(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T301s32(TC* ac);
/* ET_FILE_POSITION.to_text */
extern T0* T778f10(TC* ac, T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T778f15(TC* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T778f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T778f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T778f19(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T43f38(TC* ac, T0* C);
/* ET_FILE_POSITION.skip_lines */
extern void T778f18(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T778s11(TC* ac);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T42f217(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T68f1122(TC* ac, T0* C);
/* ET_FILE_POSITION.make */
extern T0* T778c12(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T778f13(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T778f14(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T778f3(TC* ac, T0* C);
/* ET_FILE_POSITION.line */
extern T6 T778f6(TC* ac, T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T778f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T68f755(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T68f1539(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T68f1538(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T68f2110(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T68f1537(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T68f1536(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T68f1535(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T68f1534(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T68f1533(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T68f1112(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T68f1532(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T68f1531(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T68f1530(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T553s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T555f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T555f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T553s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T555f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T65f234(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T65f233(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T551c11(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T68f1529(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T68f1528(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T550s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T552f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T552f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T550s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T552f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T65f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1468c11(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern T0* T68f983(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T68f1527(TC* ac, T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T65f231(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T68f1526(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T557f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].force */
extern void T1624s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1622f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1622f7(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern T0* T557f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1624c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T68f1525(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T68f1524(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1468f12(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T557f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T68f1523(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T68f1522(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T68f984(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T65f346(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T557f16(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T557c14(TC* ac, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T557f14p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1624s1(TC* ac, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1622c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern T0* T81s660(TC* ac);
/* ET_KEYWORD.make_local */
extern T0* T192c82(TC* ac);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T557s9(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T68f1521(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T68f1520(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T68f1519(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T68f1518(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T68f1517(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T68f1516(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T497s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T499f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T499f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T497s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T499f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T65f230(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T65f229(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T495c10(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T68f1515(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T68f1514(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T494s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T496f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T496f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T494s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T496f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T65f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1467c10(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T68f1513(TC* ac, T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T65f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T68f1512(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T501f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].force */
extern void T1619s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T1617f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T1617f7(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern T0* T501f11(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T1619c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T68f1511(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T68f1510(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1467f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T501f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T68f1509(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T68f1508(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T68f982(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T65f345(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T501c12(TC* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T501f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T1619s1(TC* ac, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T1617c4(TC* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T501s9(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T68f1507(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T68f1506(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T68f1505(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T68f1504(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T68f1503(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T68f1502(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T68f1501(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T68f1500(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T367s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T369f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T369f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T367s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T369f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T68f981(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T68f1037(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T65f224(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_FREE_NAME.set_convert_keyword */
extern void T720f56(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T720f55(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T720c54(TC* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern T0* T720f53(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T68f1499(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T65f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.set_convert_keyword */
extern void T368f82(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T368f81(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.make_parenthesis */
extern T0* T368c109(TC* ac, T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T368f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T68f1498(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T65f225(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T368c108(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T68f1497(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T68f1496(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T65f223(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T368c107(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T68f1495(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_symbol_name */
extern T0* T65f222(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_xor_symbol */
extern T0* T368c106(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T68f1494(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T65f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_xor */
extern T0* T368c105(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T68f1493(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_symbol_name */
extern T0* T65f220(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_implies_symbol */
extern T0* T368c104(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T68f1492(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T65f219(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_implies */
extern T0* T368c103(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T68f1491(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_symbol_name */
extern T0* T65f218(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_else_symbol */
extern T0* T368c102(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T68f1490(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T65f217(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T368c101(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T68f1489(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_symbol_name */
extern T0* T65f216(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_symbol */
extern T0* T368c100(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T68f1488(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T65f215(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or */
extern T0* T368c99(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T68f1487(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_symbol_name */
extern T0* T65f214(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_then_symbol */
extern T0* T368c98(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T68f1486(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T65f213(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T368c97(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T68f1485(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_symbol_name */
extern T0* T65f212(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_symbol */
extern T0* T368c96(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T68f1484(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T65f211(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and */
extern T0* T368c95(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T68f1483(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T65f210(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_ge */
extern T0* T368c94(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T68f1482(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T65f209(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_gt */
extern T0* T368c93(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T68f1481(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T65f208(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_le */
extern T0* T368c92(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T68f1480(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T65f207(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_lt */
extern T0* T368c91(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T68f1479(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T65f206(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_power */
extern T0* T368c90(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T68f1478(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T65f205(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_mod */
extern T0* T368c89(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T68f1477(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T65f204(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_div */
extern T0* T368c88(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T68f1476(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T65f203(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_divide */
extern T0* T368c87(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T68f1475(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T65f202(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_times */
extern T0* T368c86(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T68f1474(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T65f201(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_minus */
extern T0* T368c85(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T68f1473(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T65f200(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_plus */
extern T0* T368c84(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T68f1472(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_symbol_name */
extern T0* T65f199(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_not_symbol */
extern T0* T368c83(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T68f1471(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T65f198(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_not */
extern T0* T368c80(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T68f1470(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].force */
extern void T370s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].fill_with */
extern void T372f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].extend */
extern void T372f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].aliased_resized_area */
extern T0* T370s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].aliased_resized_area */
extern T0* T372f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T68f1469(TC* ac, T0* C);
/* ET_ALIAS_NAME_LIST.put_first */
extern void T371f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].force */
extern void T1600s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].fill_with */
extern void T1599f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].extend */
extern void T1599f10(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.fixed_array */
extern T0* T371f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T1600c3(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T68f1468(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_name_list */
extern T0* T65f197(TC* ac, T0* C, T6 a1);
/* ET_ALIAS_NAME_LIST.make_with_capacity */
extern T0* T371c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T1600s2(TC* ac, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make_empty */
extern T0* T1599c5(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T68f1467(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T475s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T477f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T477f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T475s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T477f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T65f196(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T719c6(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T68f1466(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T68f1465(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T489s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T490f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T490f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T489s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T490f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T68f1464(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T373s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T375f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].extend */
extern void T375f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T373s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T375f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assigner */
extern T0* T65f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T68f1463(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T68f1462(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T478s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T480f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T480f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T478s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T480f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T65f194(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T68f1461(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T68f1460(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T333s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T335f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T335f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T68f1459(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T333s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T335f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T68f1458(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T68f1457(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T68f1456(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].force */
extern void T610s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PROCEDURE].fill_with */
extern void T612f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PROCEDURE].extend */
extern void T612f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T610s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T612f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T68f980(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T65f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_note */
extern void T718f102(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T718f101(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T718f100(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T718f99(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T718f98(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T718f97(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T718f96(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T718c91(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T68f1455(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T68f1454(TC* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T65f193(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_note */
extern void T717f92(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T717f91(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T717f90(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T717f89(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T717f88(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T717f87(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T717c82(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.make */
extern void T717f82p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern T0* T81s675(TC* ac);
/* ET_KEYWORD.make_deferred */
extern T0* T192c97(TC* ac);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T717s30(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T68f1453(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T68f1452(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T65f192(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_ONCE_PROCEDURE.set_first_note */
extern void T716f99(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T716f98(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T716f97(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T716f96(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T716f95(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_keys */
extern void T716f94(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T716f93(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T716f92(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T716f91(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T716f90(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T716c85(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T68f1451(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T68f1450(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T65f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_note */
extern void T715f96(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T715f95(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T715f94(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T715f93(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T715f92(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T715f91(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T715f90(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T715f89(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T715f88(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T68f1449(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T68f1448(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].force */
extern void T619s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUERY].fill_with */
extern void T621f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUERY].extend */
extern void T621f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].aliased_resized_area */
extern T0* T619s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUERY].aliased_resized_area */
extern T0* T621f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T68f979(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_AST_FACTORY.new_external_function */
extern T0* T65f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_note */
extern void T714f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T714f104(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T714f103(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T714f102(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T714f101(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T714f100(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T714f99(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T714f98(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T714c93(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T68f1447(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T68f1446(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T68f1445(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T68f1444(TC* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T65f189(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_note */
extern void T712f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T712f94(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T712f93(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T712f92(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T712f91(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T712f90(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T712f89(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T712c84(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.make */
extern void T712f84p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T712s39(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T68f1443(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T68f1442(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T68f1441(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T68f1440(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T65f188(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* ET_ONCE_FUNCTION.set_first_note */
extern void T711f102(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T711f101(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T711f100(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T711f99(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T711f98(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_keys */
extern void T711f97(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T711f96(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T711f95(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T711f94(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T711f93(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T711f92(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T711c87(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T68f1439(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T68f1438(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T68f1437(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T68f1436(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T65f186(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_note */
extern void T710f99(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T710f98(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T710f97(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T710f96(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T710f95(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T710f94(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T710f93(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T710f92(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T710f91(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T710f90(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T710c85(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T710s44(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T68f1435(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T68f1434(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T68f1433(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T68f1432(TC* ac, T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T65f185(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T709f91(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T709f90(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T709c85(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T709s37(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T68f1431(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T68f1430(TC* ac, T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T65f184(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T708f90(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T708f89(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T708c84(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T708s38(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T68f1429(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T68f1428(TC* ac, T0* C);
/* ET_AST_FACTORY.new_extended_attribute */
extern T0* T65f183(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EXTENDED_ATTRIBUTE.set_first_note */
extern void T707f98(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T707f97(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T707f96(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T707f95(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T707f94(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T707f93(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T707f92(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T707f91(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T707f90(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.make */
extern T0* T707c85(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.make */
extern void T707f85p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T68f1427(TC* ac, T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T65f182(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_clients */
extern void T706f87(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_assigner */
extern void T706f86(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T706c81(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T68f1426(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T68f1425(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T68f2108(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T259f21(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T259f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T259f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T259f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T259f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T259f27(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T259f31(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T259f34(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T259f33(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T259f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T1175f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T259f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T259f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T259f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T259f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T259f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].before */
extern T1 T1175f8(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T718f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T717f86(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T716f89(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T715f87(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T68f977(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T718f42(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T718f106(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_inline_separate_arguments */
extern void T718f94(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_iteration_components */
extern void T718f93(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T718f92(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T718f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T718f104(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T718f103(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T717f43(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T717f97(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_inline_separate_arguments */
extern void T717f85(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_iteration_components */
extern void T717f84(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T717f83(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T717f96(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T717f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T717f94(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T717f93(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T716f35(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T716f103(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_inline_separate_arguments */
extern void T716f88(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_iteration_components */
extern void T716f87(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T716f86(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T716f102(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T716f101(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T716f100(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T715f52(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T715f100(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_inline_separate_arguments */
extern void T715f86(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_iteration_components */
extern void T715f85(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T715f84(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T715f99(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T715f98(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T715f97(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T68f1424(TC* ac, T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T65f180(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T68f1423(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T68f1422(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T68f1421(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T68f2107(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T259f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T259f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T1175f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].after */
extern T1 T1175f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T68f1420(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T68f1419(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T68f2106(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T258f21(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T258f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T258f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T258f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T258f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T258f27(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T258f31(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T258f34(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T258f33(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T258f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T1172f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T258f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T258f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T258f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T258f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T258f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].before */
extern T1 T1172f8(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T714f97(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T712f88(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T711f91(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T710f89(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T709f89(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T708f88(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T707f89(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T706f85(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T68f976(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T714f41(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T714f109(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_inline_separate_arguments */
extern void T714f96(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_iteration_components */
extern void T714f95(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T714f94(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T714f108(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T714f107(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T714f106(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T712f37(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T712f100(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_inline_separate_arguments */
extern void T712f87(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_iteration_components */
extern void T712f86(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T712f85(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T712f99(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T712f98(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T712f97(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T712f96(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T711f45(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T711f106(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_inline_separate_arguments */
extern void T711f90(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_iteration_components */
extern void T711f89(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T711f88(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T711f105(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T711f104(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T711f103(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T710f39(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T710f103(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_inline_separate_arguments */
extern void T710f88(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_iteration_components */
extern void T710f87(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T710f86(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T710f102(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T710f101(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T710f100(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T709f40(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T709f98(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_constant */
extern void T709f97(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_inline_separate_arguments */
extern void T709f88(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_iteration_components */
extern void T709f87(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T709f86(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_note */
extern void T709f96(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T709f95(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T709f94(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T709f93(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T709f92(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T708f33(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T708f95(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_inline_separate_arguments */
extern void T708f87(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_iteration_components */
extern void T708f86(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T708f85(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_note */
extern void T708f94(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T708f93(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T708f92(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T708f91(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T707f38(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T707f102(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_inline_separate_arguments */
extern void T707f88(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_iteration_components */
extern void T707f87(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T707f86(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T707f101(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T707f100(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T707f99(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T706f31(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T706f91(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_inline_separate_arguments */
extern void T706f84(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_iteration_components */
extern void T706f83(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T706f82(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_note */
extern void T706f90(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T706f89(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T706f88(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T68f1418(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T68f1417(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T68f1416(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T68f1415(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T68f2105(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T258f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T258f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T1172f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].after */
extern T1 T1172f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T68f1414(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T68f1413(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T68f1412(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T68f1411(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T68f1410(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T68f1409(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T481s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T482f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T482f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T481s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T482f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T65f179(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T269c5(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern T0* T81s670(TC* ac);
/* ET_KEYWORD.make_feature */
extern T0* T192c92(TC* ac);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T269s3(TC* ac);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T68f975(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T68f973(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T65f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T68f1036(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T68f1408(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T68f1407(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T68f1406(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T68f1405(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T483s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T485f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T485f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T484f6(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].force */
extern void T1616s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].fill_with */
extern void T1615f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].extend */
extern void T1615f7(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern T0* T484f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T1616c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T68f1404(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T483s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T485f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T65f178(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T484c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T1616s1(TC* ac, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].make_empty */
extern T0* T1615c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T68f1403(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T68f2104(TC* ac, T0* C);
extern T1 T68f2104ot1(TC* ac, T0* a1);
/* ET_CLASS.set_procedures */
extern void T70f289(TC* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T774f11(TC* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T774f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_queries */
extern void T70f288(TC* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_attribute_count */
extern void T773f15(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.set_attribute_count */
extern void T773f14(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T773f13(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_value */
extern void T679f78(TC* ac, T0* C, T11 a1);
/* NATURAL_64.out */
extern T0* T11f19(TC* ac, T11 volatile* C);
/* STRING_8.append_natural_64 */
extern void T17f86(TC* ac, T0* C, T11 a1);
/* ET_CLASS.register_feature */
extern void T70f287(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T718f108(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T718f115(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T718f114(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T717f102(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T717f105(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T717f104(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T716f104(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T716f111(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T716f110(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T715f105(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T715f108(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T715f107(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T714f111(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T714f118(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T714f117(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T712f101(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T712f108(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T712f107(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T711f107(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T711f114(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T711f113(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T710f104(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T710f111(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T710f110(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T709f99(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T709f106(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T709f105(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T708f96(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T708f103(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T708f102(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_id */
extern void T707f103(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_version */
extern void T707f110(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T707f109(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T706f92(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T706f99(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T706f98(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T773f12(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T68f1402(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T68f1401(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T68f1400(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T647s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T649f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T649f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T647s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T649f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T65f177(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T68f1399(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T650s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T652f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T652f10(TC* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T1097f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].force */
extern void T1690s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].fill_with */
extern void T1689f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].extend */
extern void T1689f7(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T68f1398(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T650s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T652f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T65f176(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1097f12(TC* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1097c10(TC* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1097f10p1(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T68f1397(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T68f1396(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T68f1395(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T68f1394(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T430s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T432f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T432f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T430s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T432f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T65f175(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T704c9(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T704s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T68f1393(TC* ac, T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T65f174(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T703c8(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T703s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T68f1392(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T433s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T435f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T435f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T433s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T435f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T65f173(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T68f1391(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T436s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T438f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T438f10(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T437f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].force */
extern void T1610s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1608f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].extend */
extern void T1608f7(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern T0* T437f7(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1610c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T68f1390(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T436s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T438f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T65f172(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T437c8(TC* ac, T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T437f8p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1610s1(TC* ac, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1608c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern T0* T81s669(TC* ac);
/* ET_KEYWORD.make_convert */
extern T0* T192c91(TC* ac);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T437s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T68f1389(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T68f1388(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T68f1387(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T68f1386(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T68f1385(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T68f1384(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T491s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T493f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T493f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T491s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T493f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T65f169(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T68f1383(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T445s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].fill_with */
extern void T446f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].extend */
extern void T446f10(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.put_first */
extern void T82f17(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.fixed_array */
extern T0* T82f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T68f1382(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T445s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T446f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creator */
extern T0* T65f171(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T82c16(TC* ac, T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T82f18(TC* ac, T0* C, T6 a1);
/* ET_CREATOR.tokens */
extern T0* T82s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T68f1381(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T68f1380(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T68f1379(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T68f1378(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T68f1377(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T68f1376(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T68f1375(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T68f1374(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T68f1373(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T68f1372(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T68f1371(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T68f1370(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T68f1369(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T68f1368(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T447s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T448f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T448f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T447s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T448f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T68f1367(TC* ac, T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T80f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].force */
extern void T1476s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CREATOR].fill_with */
extern void T1475f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].extend */
extern void T1475f7(TC* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.fixed_array */
extern T0* T80f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T1476c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T68f1366(TC* ac, T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T65f170(TC* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T80c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T1476s1(TC* ac, T6 a1);
/* SPECIAL [ET_CREATOR].make_empty */
extern T0* T1475c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T68f1365(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T68f1364(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T68f1363(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T68f1362(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T545s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T546f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T546f10(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T196f9(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T196f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T68f1361(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T545s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T546f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T65f168(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T196c8(TC* ac, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T196f8p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern T0* T81s679(TC* ac);
/* ET_KEYWORD.make_redefine */
extern T0* T192c101(TC* ac);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T196s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T68f1360(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T68f1359(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T68f1358(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T68f1357(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T68f1356(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T68f1355(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T68f1354(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T68f1353(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T68f1352(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T68f1351(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T68f1350(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T68f1349(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T68f1348(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T68f1347(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T68f1346(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T68f1345(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T68f1344(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T404s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T405f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].extend */
extern void T405f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T404s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T405f4(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T268f18(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.fixed_array */
extern T0* T268f6(TC* ac, T0* C);
/* ET_AST_FACTORY.new_clients */
extern T0* T65f167(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T268f19(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T268c20(TC* ac, T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T268f20p1(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.tokens */
extern T0* T268s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T68f1343(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T68f1342(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T68f1341(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T402s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T403f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T403f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T402s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T403f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T68f974(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T65f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T68f1340(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T68f1339(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T68f1338(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T68f1337(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T68f1336(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T68f1335(TC* ac, T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T65f166(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T268c17(TC* ac);
/* ET_CLIENTS.make */
extern void T268f17p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T68f1334(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T68f1333(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T68f1111(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T68f1332(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T486s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T488f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T488f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.put_first */
extern void T487f14(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T487f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T68f1331(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T486s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T488f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T65f164(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T487c13(TC* ac, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T487f15(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T68f1330(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T68f1329(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T464s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].fill_with */
extern void T466f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].extend */
extern void T466f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T464s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T466f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_null_export */
extern T0* T65f165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T68f1328(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T68f1327(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T68f1326(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T68f1325(TC* ac, T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T65f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T701c10(TC* ac, T0* a1);
/* ET_ALL_EXPORT.tokens */
extern T0* T701s3(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T68f1324(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T467s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T468f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T468f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T467s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T468f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T68f1323(TC* ac, T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T195f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].force */
extern void T1577s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPORT].fill_with */
extern void T1576f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].extend */
extern void T1576f7(TC* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.fixed_array */
extern T0* T195f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T1577c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T68f1322(TC* ac, T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T65f162(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T195c9(TC* ac, T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T195f9p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T1577s1(TC* ac, T6 a1);
/* SPECIAL [ET_EXPORT].make_empty */
extern T0* T1576c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern T0* T81s665(TC* ac);
/* ET_KEYWORD.make_export */
extern T0* T192c87(TC* ac);
/* ET_EXPORT_LIST.tokens */
extern T0* T195s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T68f1321(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T68f1320(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T68f1319(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T68f1318(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T68f1317(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T68f1316(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T622s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T624f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T624f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T622s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T624f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T65f161(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_RENAME.make */
extern T0* T700c6(TC* ac, T0* a1, T0* a2);
/* ET_RENAME.tokens */
extern T0* T700s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T68f1315(TC* ac, T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T65f160(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T68f1314(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T625s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T626f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T626f10(TC* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.put_first */
extern void T194f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].force */
extern void T1574s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].fill_with */
extern void T1573f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].extend */
extern void T1573f7(TC* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.fixed_array */
extern T0* T194f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T1574c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T68f1313(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T625s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T626f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_renames */
extern T0* T65f159(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T194c8(TC* ac, T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T194f8p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T1574s1(TC* ac, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].make_empty */
extern T0* T1573c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern T0* T81s666(TC* ac);
/* ET_KEYWORD.make_rename */
extern T0* T192c88(TC* ac);
/* ET_RENAME_LIST.tokens */
extern T0* T194s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T68f1312(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T68f1311(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T68f1310(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T68f1309(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T68f1308(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T600s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T601f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T601f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T600s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T601f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T65f158(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T68f1307(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T602s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T603f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T603f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T68f1306(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T68f1305(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T602s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T603f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parents */
extern T0* T65f157(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T68f1304(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T68f1303(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T595s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].fill_with */
extern void T596f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].extend */
extern void T596f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T595s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T596f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T68f972(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T65f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T70f91(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T510f13(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T68f1302(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T68f1301(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T68f1300(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T68f1299(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T68f1298(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T68f1297(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T68f1296(TC* ac, T0* C);
/* ET_PARENT_LIST.set_clients_clause */
extern void T182f13(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T68f1295(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T68f1294(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].force */
extern void T597s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].fill_with */
extern void T599f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].extend */
extern void T599f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T597s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T599f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T68f1293(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.put_first */
extern void T598f7(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].force */
extern void T1634s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].fill_with */
extern void T1633f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].extend */
extern void T1633f7(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.fixed_array */
extern T0* T598f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T1634c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T68f1292(TC* ac, T0* C);
/* ET_AST_FACTORY.new_parent_clauses */
extern T0* T65f156(TC* ac, T0* C, T6 a1);
/* ET_PARENT_CLAUSE_LIST.make_with_capacity */
extern T0* T598c6(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T1634s1(TC* ac, T6 a1);
/* SPECIAL [ET_PARENT_LIST].make_empty */
extern T0* T1633c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T68f1291(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T68f1290(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T68f1289(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T589s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T591f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].extend */
extern void T591f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T589s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T591f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T65f155(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T68f1288(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T68f1287(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T415s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T417f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T417f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T415s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T417f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T65f153(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T65f152(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T698c6(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T68f1286(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T68f1285(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T418s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T420f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T420f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T68f2103(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T419f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1607s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1605f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1605f7(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T419f8(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1607c2(TC* ac);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T65f154(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T699c6(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T697f4(TC* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1044f5(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T699f3(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.type */
extern T0* T698f3(TC* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T419f7(TC* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T419f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T68f1284(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T68f1283(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T68f1282(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T418s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T420f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T65f150(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T419f14(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T419c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T419f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1607s1(TC* ac, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1605c4(TC* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T419s6(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T68f1281(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T68f1280(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T68f1279(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T68f1278(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T68f1277(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T68f1276(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T68f1275(TC* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T65f151(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T68f1274(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T68f971(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T65f337(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T697c7(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T65f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1044c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T68f1273(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T68f1272(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T68f1271(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T68f1270(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T68f1269(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T68f1268(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T68f1267(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T427s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T429f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T429f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T427s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T429f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T68f1266(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T68f1265(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T68f1264(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T68f1263(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T68f1262(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T68f1261(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T68f1260(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T68f1259(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T68f1258(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T68f1257(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T68f1256(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T68f1255(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T68f1254(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T68f1253(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T68f1252(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T68f1251(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T68f1250(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T68f1249(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T68f1248(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T68f1247(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T68f1246(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T68f1245(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T68f1244(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T68f1243(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T68f1242(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T68f1241(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T68f1240(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T68f1239(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T68f1238(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T68f1237(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T68f1236(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T68f1235(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T68f1234(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T68f1233(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T68f1232(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T68f1231(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T68f1230(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T68f1229(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T68f1228(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T68f1227(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T68f1226(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T68f1225(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T68f1224(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T68f1223(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T421s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T423f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T423f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T422f13(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T422f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T68f1222(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T421s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T423f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T65f148(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T422c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T422f12p1(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T422s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T68f1221(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T68f1220(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T68f1219(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T68f1218(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T68f1217(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T68f1216(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T68f1215(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].force */
extern void T424s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].fill_with */
extern void T426f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].extend */
extern void T426f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.put_first */
extern void T425f13(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.fixed_array */
extern T0* T425f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T68f1214(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].aliased_resized_area */
extern T0* T424s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].aliased_resized_area */
extern T0* T426f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_renames */
extern T0* T65f147(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern T0* T425c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern void T425f12p1(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern void T425f12p0(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.tokens */
extern T0* T425s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T68f1213(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T68f1212(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T68f1211(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T68f1210(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T68f1209(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].force */
extern void T641s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].fill_with */
extern void T643f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].extend */
extern void T643f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].aliased_resized_area */
extern T0* T641s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].aliased_resized_area */
extern T0* T643f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_constraint_comma */
extern T0* T65f146(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T68f1208(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].force */
extern void T644s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].fill_with */
extern void T646f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].extend */
extern void T646f10(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.put_first */
extern void T645f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].force */
extern void T1637s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].fill_with */
extern void T1636f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].extend */
extern void T1636f7(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.fixed_array */
extern T0* T645f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].default_create */
extern T0* T1637c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T68f1207(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].aliased_resized_area */
extern T0* T644s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].aliased_resized_area */
extern T0* T646f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_constraint_list */
extern T0* T65f145(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TYPE_CONSTRAINT_LIST.set_left_brace */
extern void T645f13(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern T0* T645c11(TC* ac, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern void T645f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].make */
extern T0* T1637s1(TC* ac, T6 a1);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].make_empty */
extern T0* T1636c4(TC* ac, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.tokens */
extern T0* T645s5(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T68f1206(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T68f1205(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T68f1204(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].force */
extern void T638s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].fill_with */
extern void T640f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].extend */
extern void T640f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T638s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T640f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T68f2102(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T260f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T260f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T260f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T260f7(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_rename_constraint */
extern T0* T65f144(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_RENAME_CONSTRAINT.make */
extern T0* T696c8(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T68f970(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T68f1203(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T68f1202(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T503s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T505f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T505f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T503s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T505f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T65f143(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T695f85(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T695c84(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T695f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern T0* T81s642(TC* ac);
/* ET_SYMBOL.make_arrow */
extern T0* T286c120(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T68f1201(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T68f1200(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T68f1199(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T68f1198(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T68f1197(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T68f1196(TC* ac, T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T65f142(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T504f86(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T504c85(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T68f1195(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T68f1194(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T68f1193(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T506s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T508f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T508f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T506s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T508f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T65f141(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T68f1192(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T509s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T511f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T511f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T510f30(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T504f87(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T695f86(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T510f17(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T510f30p1(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].force */
extern void T1621s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1620f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1620f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern T0* T510f16(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1621c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T68f1191(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T509s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T511f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T65f140(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T510f31(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T510c28(TC* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T510f28p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1621s1(TC* ac, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1620c4(TC* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T510s15(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T68f1190(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T68f1189(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T68f2099(TC* ac, T0* C, T0* a1);
extern T1 T68f2099ot1(TC* ac, T0* a1);
extern T1 T68f2099ot2(TC* ac, T0* a1);
extern T1 T68f2099ot3(TC* ac, T0* a1);
extern T1 T68f2099ot4(TC* ac, T0* a1);
extern T1 T68f2099ot5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T260f11(TC* ac, T0* C);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T429f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T429f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T260f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1177f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1177f6(TC* ac, T0* C);
/* ET_CLASS.set_formal_parameters */
extern void T70f286(TC* ac, T0* C, T0* a1);
extern T1 T70f286ot1(TC* ac, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.put */
extern void T645f15(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_TYPE_CONSTRAINT_LIST.remove */
extern void T645f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1637s4(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1636f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].set_count */
extern void T1636f9(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T695f88(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T510f29(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1621s3(TC* ac, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1620f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1620f8(TC* ac, T0* C, T6 a1);
/* ET_TYPE_RENAME_CONSTRAINT.set_type */
extern void T696f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T726f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T697f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T68f1060(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T68f1060ot1(TC* ac, T0* a1);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1044f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T68f1061(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T68f1061ot1(TC* ac, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T419f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T68f1063(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T726f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T697f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1044f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T729f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T728f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T200f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T699f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T68f1067(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T698f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T68f1066(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T419f11(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T419f9(TC* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T697f5(TC* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1044f6(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T699f4(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T698f4(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T729f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T728f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T200f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T260f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T68f1188(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T68f1187(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T68f1186(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T68f1185(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T68f1184(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T68f1183(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T68f1182(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T400s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].fill_with */
extern void T401f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].extend */
extern void T401f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T400s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T401f4(TC* ac, T0* C, T6 a1);
/* ET_CLASS.set_external_keyword */
extern void T70f283(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T70f282(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T70f290(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T70f281(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T68f968(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T63f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T42f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.set_time_stamp */
extern void T70f294(TC* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.add_last_local_class */
extern void T189f54(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T189f60(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T69f16(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_override_class */
extern void T189f59(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T189f58(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.register_class */
extern void T87f216(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_name */
extern void T70f293(TC* ac, T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T70f292(TC* ac, T0* C);
/* ET_CLASS.reset_parsed */
extern void T70f301(TC* ac, T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T70f300(TC* ac, T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T70f299(TC* ac, T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T70f298(TC* ac, T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T70f297(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_modified */
extern void T189f53(TC* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T152s15(TC* ac, T0* a1, T0* a2);
/* KL_PATHNAME.same_pathname */
extern T1 T1069f10(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_subpathname */
extern T1 T1069f15(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.string_ */
extern T0* T1069s17(TC* ac);
/* KL_PATHNAME.string_equality_tester */
extern T0* T1069s18(TC* ac);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T1645c3(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T151s15(TC* ac, T0* a1, T0* a2);
/* KL_PATHNAME.same_case_insensitive */
extern T1 T1069f14(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T1069f11(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T1069s16(TC* ac);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T68s1035(TC* ac);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T68s1044(TC* ac);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T68s1043(TC* ac);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T68s1042(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T63f220(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T1466c923(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T42f220(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.first_local_class */
extern T0* T189f25(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_local_class */
extern T1 T189f24(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T189f23(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T189f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].has */
extern T1 T69f12(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T189f30(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_override_class */
extern T1 T189f27(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T68f1181(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T68f1180(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T68f1179(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T68f1178(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].force */
extern void T583s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].fill_with */
extern void T585f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].extend */
extern void T585f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].aliased_resized_area */
extern T0* T583s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].aliased_resized_area */
extern T0* T585f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_note_term_comma */
extern T0* T65f139(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T68f1177(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].force */
extern void T580s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM].fill_with */
extern void T582f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM].extend */
extern void T582f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].aliased_resized_area */
extern T0* T580s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM].aliased_resized_area */
extern T0* T582f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T65f138(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T694c9(TC* ac, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T694s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T68f1176(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T68f1175(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T68f1174(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T68f1173(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T68f1172(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T68f1171(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T68f1170(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T68f1169(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].force */
extern void T586s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].fill_with */
extern void T588f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].extend */
extern void T588f10(TC* ac, T0* C, T0* a1);
/* ET_NOTE_TERM_LIST.put_first */
extern void T587f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].force */
extern void T1632s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM_ITEM].fill_with */
extern void T1631f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM_ITEM].extend */
extern void T1631f7(TC* ac, T0* C, T0* a1);
/* ET_NOTE_TERM_LIST.fixed_array */
extern T0* T587f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].default_create */
extern T0* T1632c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T68f1168(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].aliased_resized_area */
extern T0* T586s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].aliased_resized_area */
extern T0* T588f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_note_terms */
extern T0* T65f137(TC* ac, T0* C, T6 a1);
/* ET_NOTE_TERM_LIST.make_with_capacity */
extern T0* T587c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].make */
extern T0* T1632s1(TC* ac, T6 a1);
/* SPECIAL [ET_NOTE_TERM_ITEM].make_empty */
extern T0* T1631c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T68f1167(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].force */
extern void T577s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_ITEM].fill_with */
extern void T579f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_ITEM].extend */
extern void T579f10(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_note_semicolon */
extern T0* T65f135(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T68f1166(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T68f1165(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].aliased_resized_area */
extern T0* T577s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_ITEM].aliased_resized_area */
extern T0* T579f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_tagged_note */
extern T0* T65f134(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_NOTE.make */
extern T0* T692c5(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T68f1164(TC* ac, T0* C);
/* ET_AST_FACTORY.new_note */
extern T0* T65f136(TC* ac, T0* C, T0* a1);
/* ET_NOTE.make */
extern T0* T693c5(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T68f1163(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T68f1162(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].force */
extern void T574s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_LIST].fill_with */
extern void T576f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_LIST].extend */
extern void T576f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].aliased_resized_area */
extern T0* T574s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_LIST].aliased_resized_area */
extern T0* T576f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T68f1161(TC* ac, T0* C);
/* ET_NOTE_LIST.put_first */
extern void T575f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].force */
extern void T1630s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_ITEM].fill_with */
extern void T1629f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_ITEM].extend */
extern void T1629f7(TC* ac, T0* C, T0* a1);
/* ET_NOTE_LIST.fixed_array */
extern T0* T575f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].default_create */
extern T0* T1630c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T68f1160(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T68f1159(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T68f1158(TC* ac, T0* C);
/* ET_AST_FACTORY.new_notes */
extern T0* T65f132(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NOTE_LIST.set_note_keyword */
extern void T575f15(TC* ac, T0* C, T0* a1);
/* ET_NOTE_LIST.make_with_capacity */
extern T0* T575c13(TC* ac, T6 a1);
/* ET_NOTE_LIST.make_with_capacity */
extern void T575f13p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].make */
extern T0* T1630s1(TC* ac, T6 a1);
/* SPECIAL [ET_NOTE_ITEM].make_empty */
extern T0* T1629c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.note_keyword */
extern T0* T81s653(TC* ac);
/* ET_KEYWORD.make_note */
extern T0* T192c75(TC* ac);
/* ET_NOTE_LIST.tokens */
extern T0* T575s4(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T68f1157(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T68f1156(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T68f1155(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T68f1154(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T68f1153(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T68f1152(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T68f1151(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T68f1150(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T68f1149(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T68f1148(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T68f1147(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T68f1146(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T68f1145(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T68f1144(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T68f1143(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T68f1142(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T68f1141(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T68f1140(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T68f2093(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].wipe_out */
extern void T261f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_wipe_out */
extern void T261f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_wipe_out */
extern void T261f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_wipe_out */
extern void T261f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_wipe_out */
extern void T261f49(TC* ac, T0* C);
/* SPECIAL [ET_NAMED_CLASS].keep_head */
extern void T1179f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].set_count */
extern void T1179f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors_after */
extern void T261f48(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_next_cursor */
extern void T1178f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_after */
extern void T1178f10(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].forth */
extern void T261f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_forth */
extern void T261f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].add_traversing_cursor */
extern void T261f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_position */
extern void T1178f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].remove_traversing_cursor */
extern void T261f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].put_last */
extern void T261f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].compress */
extern void T261f56(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_keep_head */
extern void T261f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_keep_head */
extern void T261f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors */
extern void T261f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_put */
extern void T261f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].item_for_iteration */
extern T0* T261f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_item */
extern T0* T261f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].after */
extern T1 T261f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_after */
extern T1 T261f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].after */
extern T1 T1178f8(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].start */
extern void T261f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_start */
extern void T261f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_off */
extern T1 T261f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].off */
extern T1 T1178f6(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].is_empty */
extern T1 T261f25(TC* ac, T0* C);
/* ET_CLASS.set_providers */
extern void T70f285(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make */
extern T0* T261c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].set_internal_cursor */
extern void T261f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_cursor */
extern T0* T261f34(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].make */
extern T0* T1178c9(TC* ac, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_slots */
extern void T261f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_clashes */
extern void T261f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_key_storage */
extern void T261f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_item_storage */
extern void T261f42(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].make */
extern T0* T1180s1(TC* ac, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].make_empty */
extern T0* T1179c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].default_create */
extern T0* T1180c3(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T68f1139(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T68f2092(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CLASS.set_parsed */
extern void T70f314(TC* ac, T0* C);
/* ET_CLASS.set_end_keyword */
extern void T70f313(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_second_note_clause */
extern void T70f312(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T70f311(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T70f310(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T70f309(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T70f308(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_parent_clauses */
extern void T70f307(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T70f306(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T68f1138(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T68f1137(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T68f1136(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T68f1135(TC* ac, T0* C);
/* ET_CLASS.set_first_note_clause */
extern void T70f305(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T68f1134(TC* ac, T0* C);
/* ET_CLASS.set_leading_break */
extern void T70f304(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T68f1133(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T68f1084(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T339s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T341f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T341f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T339s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T341f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T336s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T338f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T338f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T336s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T338f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T330s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VOID].fill_with */
extern void T332f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VOID].extend */
extern void T332f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T330s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T332f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T327s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T329f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T329f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T327s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T329f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T324s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T326f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T326f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T324s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T326f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T321s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].fill_with */
extern void T323f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].extend */
extern void T323f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T321s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T323f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T318s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T320f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T312s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T314f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T314f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T312s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T314f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T309s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T311f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T306s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T308f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T303s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T305f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T305f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T303s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T305f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T300s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].fill_with */
extern void T302f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].extend */
extern void T302f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T300s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T302f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T294s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].fill_with */
extern void T296f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].extend */
extern void T296f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T294s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T296f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T291s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T293f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T288s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].fill_with */
extern void T290f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].extend */
extern void T290f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T288s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T290f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T282s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T284f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T284f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T282s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T284f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANT_KEYWORD].force */
extern void T279s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANT_KEYWORD].fill_with */
extern void T281f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANT_KEYWORD].extend */
extern void T281f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANT_KEYWORD].aliased_resized_area */
extern T0* T279s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INVARIANT_KEYWORD].aliased_resized_area */
extern T0* T281f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T276s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T278f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T278f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T276s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T278f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.accept */
extern void T68f1083(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T68f1081(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T68f1110(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1800_1999 */
extern void T68f1109(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T68f1132(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T68f1108(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T68f1107(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T68f1106(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T68f1105(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T68f1104(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T68f1103(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T68f1102(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T68f1101(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T68f1100(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T68f1080(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T68f1099(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T68f1131(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T68f1120(TC* ac, T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T65f15(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T65f14(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T65f13(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T685f51(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T685c48(TC* ac, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T685f54(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T68f1055(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T68f1059(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T1041f38(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T1041f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T1041f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T1041f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T1041f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T1041f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T1041f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T1041f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T1041f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T1041f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T1041s33(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T1041f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T1041f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T1041f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T1041f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T1041f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T1041f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T1041f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T1041f28(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T1041f21(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T1041f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T1041f42(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.strings */
extern T0* T68f1032(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T1041f39(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T68s1041(TC* ac);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T222c2(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T1041c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T1041f41(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T1041f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_internal_cursor */
extern void T1041f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T1041f32(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T1672c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T1041f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T1041f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T1041f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T1041f54(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T68f2310(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T1595f15(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_UNICODE_CHARACTER_BUFFER.append_substring_to_string */
extern void T266f17(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_UNICODE_CHARACTER_BUFFER.item */
extern T2 T266f10(TC* ac, T0* C, T6 a1);
/* KL_UNICODE_CHARACTER_BUFFER.unicode_item */
extern T3 T266f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T68s1031(TC* ac);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T68f1030(TC* ac, T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T65f12(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T684f54(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T684c48(TC* ac, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T684f51(TC* ac, T0* C);
/* ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T65f11(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T683f73(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_binary_integer_constant */
extern T0* T68f1054(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T683c70(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T683f76(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.compute_natural_64_value */
extern void T68f2309(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T65f10(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T682f73(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_octal_integer_constant */
extern T0* T68f1053(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T682c70(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T682f76(TC* ac, T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T65f9(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T681f73(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_hexadecimal_integer_constant */
extern T0* T68f1052(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T681c70(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T681f76(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T63f216(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T42f216(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T63f215(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T42f215(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T65f8(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T680f73(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_underscored_integer_constant */
extern T0* T68f1051(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T680c70(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T680f76(TC* ac, T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T65f7(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T679f76(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_regular_integer_constant */
extern T0* T68f1050(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T63f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T42f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T63f214(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T42f214(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T63f213(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T42f213(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T63f212(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T42f212(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T63f211(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T42f211(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T63f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T42f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T63f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T42f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T65f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T678f59(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T68f1049(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T678c57(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T678f62(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_utf8_literal */
extern T0* T68f1046(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T68f786(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.utf8_text */
extern T0* T68f784(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.append_utf8_text_to_string */
extern void T68f2255(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.append_utf8_substring_to_string */
extern void T1595f14(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_UNICODE_CHARACTER_BUFFER.append_utf8_substring_to_string */
extern void T266f16(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.utf8_text_substring */
extern T0* T68f781(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.append_utf8_text_substring_to_string */
extern void T68f2254(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T65f5(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T677f55(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T68f1048(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T677c53(TC* ac, T0* a1, T0* a2, T1 a3);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T677f58(TC* ac, T0* C);
/* NATURAL_64.to_natural_32 */
extern T10 T11f9(TC* ac, T11 volatile* C);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T65f4(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T676f58(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T68f1130(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T63f208(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T42f208(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T63f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T42f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T63f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T42f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T63f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T42f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T65f3(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T675f56(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T68f1047(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T675c54(TC* ac, T0* a1, T3 a2, T1 a3);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T675f59(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T68f1129(TC* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T65f131(TC* ac, T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T690f59(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T690c54(TC* ac, T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T690f57(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T63f219(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T42f219(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T63f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T42f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T68f773(TC* ac, T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T1595f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T68f1128(TC* ac, T0* C, T3 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T65f130(TC* ac, T0* C, T3 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T689f56(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T68f1121(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T68f1127(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T68f1126(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_detachable_keyword */
extern T0* T65f129(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T192f55(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T68f935(TC* ac, T0* C);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T65f128(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_reference */
extern T0* T192c66(TC* ac);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T68f933(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T65f127(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T283f25(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T65f126(TC* ac, T0* C, T0* a1);
/* ET_INVARIANT_KEYWORD.set_position */
extern void T280f58(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T65f125(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T68f929(TC* ac, T0* C);
/* ET_ECF_CLUSTER.use_obsolete_syntax */
extern T1 T89f10(TC* ac, T0* C);
/* ET_NONE_GROUP.use_obsolete_syntax */
extern T1 T199f3(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.use_obsolete_syntax */
extern T1 T263f1(TC* ac, T0* C);
/* ET_CLUSTER.use_obsolete_syntax */
extern T1 T67f8(TC* ac, T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T65f124(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern T0* T81s680(TC* ac);
/* ET_KEYWORD.make_undefine */
extern T0* T192c102(TC* ac);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T65f123(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T65f122(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T65f121(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T65f120(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern T0* T81s677(TC* ac);
/* ET_KEYWORD.make_indexing */
extern T0* T192c99(TC* ac);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T65f119(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T65f118(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T192c65(TC* ac);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T65f117(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T65f116(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern T0* T81s674(TC* ac);
/* ET_KEYWORD.make_creation */
extern T0* T192c96(TC* ac);
/* ET_AST_FACTORY.new_attached_keyword */
extern T0* T65f115(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T68f918(TC* ac, T0* C);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T65f114(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T65f113(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T65f112(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T65f111(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T65f110(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T313f58(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T313c62(TC* ac);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T65f109(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T65f108(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T65f107(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T301f41(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T65f106(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T65f105(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern T0* T81s668(TC* ac);
/* ET_KEYWORD.make_select */
extern T0* T192c90(TC* ac);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T65f104(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T65f103(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T65f102(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T65f101(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T192c61(TC* ac);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T65f100(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T65f99(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T65f98(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T65f97(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T65f96(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern T0* T81s663(TC* ac);
/* ET_KEYWORD.make_assign */
extern T0* T192c85(TC* ac);
/* ET_AST_FACTORY.new_across_keyword */
extern T0* T65f95(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T65f94(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T65f93(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T65f92(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T325f23(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T65f91(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T65f90(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T688f51(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T65f89(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T65f88(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T65f87(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T65f86(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T65f85(TC* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T277f15(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T65f84(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T65f83(TC* ac, T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T331f42(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T65f82(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T687f49(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T65f81(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_some_keyword */
extern T0* T65f80(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_note_keyword */
extern T0* T65f79(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T68f879(TC* ac, T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T65f78(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T232f131(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T1041f40(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T307f137(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T307c137(TC* ac, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T307f138(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T1041f35(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T1041f25(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T232f134(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T232s93(TC* ac);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T232s135(TC* ac);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T232f206(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T232s133(TC* ac);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T232f132(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T68f1056(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T65f77(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T65f76(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T65f75(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T65f74(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T65f73(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T313c61(TC* ac);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T65f72(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T65f71(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T313c60(TC* ac);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T65f70(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T65f69(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T65f68(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T65f67(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T65f66(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T65f65(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T65f64(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T65f63(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T65f2(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T68f1125(TC* ac, T0* C, T3 a1, T3 a2);
/* ET_AST_FACTORY.new_or_else_symbol */
extern T0* T65f62(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T328f137(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_or_else_symbol */
extern T0* T328c154(TC* ac);
/* ET_AST_FACTORY.new_and_then_symbol */
extern T0* T65f61(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_and_then_symbol */
extern T0* T328c153(TC* ac);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T65f60(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T65f59(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T65f58(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T65f57(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T65f56(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T286f98(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T65f55(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T328c152(TC* ac);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T65f54(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T65f53(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T328c151(TC* ac);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T65f52(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T328c150(TC* ac);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T65f51(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T286c104(TC* ac);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T65f50(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T286c103(TC* ac);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T65f49(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T328c149(TC* ac);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T65f1(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T68f764(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T68f1124(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.unicode_item */
extern T3 T1595f3(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T68f1123(TC* ac, T0* C, T3 a1);
/* ET_AST_FACTORY.new_xor_symbol */
extern T0* T65f48(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_xor_symbol */
extern T0* T328c148(TC* ac);
/* ET_AST_FACTORY.new_or_symbol */
extern T0* T65f47(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_or_symbol */
extern T0* T328c147(TC* ac);
/* ET_AST_FACTORY.new_not_symbol */
extern T0* T65f46(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_not_symbol */
extern T0* T328c146(TC* ac);
/* ET_AST_FACTORY.new_implies_symbol */
extern T0* T65f45(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_implies_symbol */
extern T0* T328c145(TC* ac);
/* ET_AST_FACTORY.new_and_symbol */
extern T0* T65f44(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_and_symbol */
extern T0* T328c144(TC* ac);
/* ET_AST_FACTORY.new_close_repeat_symbol */
extern T0* T65f43(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_open_repeat_symbol */
extern T0* T65f42(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_bar_symbol */
extern T0* T65f41(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_there_exists_symbol */
extern T0* T65f40(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_for_all_symbol */
extern T0* T65f39(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.for_all_symbol */
extern T0* T81s636(TC* ac);
/* ET_SYMBOL.make_for_all */
extern T0* T286c114(TC* ac);
/* ET_AST_FACTORY.new_at_symbol */
extern T0* T65f38(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T65f37(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T286c101(TC* ac);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T65f36(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T65f35(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T65f34(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T337f135(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T65f33(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T65f32(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T65f31(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T65f30(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T65f29(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T340f102(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T65f28(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T65f27(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T65f26(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T65f25(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T65f24(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T65f23(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T65f22(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T65f21(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T65f20(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T328c141(TC* ac);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T65f19(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T328c140(TC* ac);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T65f18(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T328c139(TC* ac);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T65f17(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T328c138(TC* ac);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T65f16(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T328c136(TC* ac);
/* ET_EIFFEL_PARSER.unicode_text_item */
extern T3 T68f763(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T68f1098(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T63f203(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T42f203(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.terminate */
extern void T68f1119(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T68f724(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T68f1097(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T68f1078(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T1595f5(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.count */
extern T6 T266f6(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.as_unicode_special */
extern T0* T1595f6(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.as_special */
extern T0* T266f11(TC* ac, T0* C);
/* YY_BUFFER.fill */
extern void T262f14(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.fill */
extern void T244f26(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.put */
extern void T266f18(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T168s22(TC* ac, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T168s30(TC* ac, T2 a1, T2 a2);
/* CHARACTER_8.to_character_8 */
extern T2 T2f11(TC* ac, T2 volatile* C);
/* KL_STRING_INPUT_STREAM.end_of_input */
extern T1 T1819f1(TC* ac, T0* C);
/* KL_STDIN_FILE.end_of_file */
extern T1 T245f1(TC* ac, T0* C);
/* UC_UNICODE_CONSTANTS.bom_character */
extern T3 T671s5(TC* ac);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_iso_8859_1_stream */
extern T6 T266f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_iso_8859_1_substring */
extern void T266f21(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* STRING_32.put */
extern void T18f38(TC* ac, T0* C, T3 a1, T6 a2);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1819f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1819f10(TC* ac, T0* C);
/* KL_STDIN_FILE.read_to_string */
extern T6 T245f11(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f83(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* CONSOLE.read_stream */
extern void T1669f26(TC* ac, T0* C, T6 a1);
/* CONSOLE.read_stream_thread_aware */
extern void T1669f32(TC* ac, T0* C, T6 a1);
/* C_STRING.read_string_into */
extern void T31f18(TC* ac, T0* C, T0* a1);
/* CONSOLE.console_readstream */
extern T6 T1669s13(TC* ac, T14 a1, T14 a2, T6 a3);
/* CONSOLE.read_data_buffer */
extern T0* T1669f12(TC* ac, T0* C);
/* KL_STDIN_FILE.any_ */
extern T0* T245s6(TC* ac);
/* CONSOLE.end_of_file */
extern T1 T1669f15(TC* ac, T0* C);
/* CONSOLE.console_eof */
extern T1 T1669s17(TC* ac, T14 a1);
/* KL_STDIN_FILE.console */
extern T0* T245s5(TC* ac);
/* STD_FILES.input */
extern T0* T1031s4(TC* ac);
/* CONSOLE.make_open_stdin */
extern T0* T1669c25(TC* ac, T0* a1);
/* CONSOLE.set_read_mode */
extern void T1669f31(TC* ac, T0* C);
/* KL_STDIN_FILE.io */
extern T0* T245s8(TC* ac);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T43f41(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern T0* T43s50(TC* ac);
/* KL_CHARACTER_BUFFER.make */
extern T0* T1595c11(TC* ac, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T43f40(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T43s47(TC* ac, T14 a1, T14 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T43s48(TC* ac);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_utf8_stream */
extern T6 T266f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T168s38(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T168s37(TC* ac, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T168s36(TC* ac, T2 a1);
/* YY_UNICODE_FILE_BUFFER.compact_left */
extern void T244f28(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.move_left */
extern void T266f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.subcopy */
extern void T18f39(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_UNICODE_CHARACTER_BUFFER.resize */
extern void T266f19(TC* ac, T0* C, T6 a1);
/* YY_UNICODE_FILE_BUFFER.default_capacity */
extern T6 T244f20(TC* ac, T0* C);
/* YY_BUFFER.set_index */
extern void T262f13(TC* ac, T0* C, T6 a1);
/* YY_UNICODE_FILE_BUFFER.set_index */
extern void T244f25(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T68f723(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T68f722(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T68f1096(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_invalid_unicode_character_error */
extern void T68f1095(TC* ac, T0* C, T10 a1);
/* KL_CHARACTER_BUFFER.item_code */
extern T10 T1595f9(TC* ac, T0* C, T6 a1);
/* KL_UNICODE_CHARACTER_BUFFER.item_code */
extern T10 T266f12(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_at_beginning_of_line */
extern T6 T68f704(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T68s769(TC* ac);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T68f1079(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T68f1088(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T68f1116(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T68f2089(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T68f2121(TC* ac, T0* C);
/* SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T670f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].set_count */
extern void T670f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T667f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T667f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T664f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T664f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].keep_head */
extern void T661f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].set_count */
extern void T661f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].keep_head */
extern void T658f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].set_count */
extern void T658f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].keep_head */
extern void T655f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].set_count */
extern void T655f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T652f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T652f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T649f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T649f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].keep_head */
extern void T646f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].set_count */
extern void T646f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T643f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].set_count */
extern void T643f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].keep_head */
extern void T640f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].set_count */
extern void T640f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE].keep_head */
extern void T637f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE].set_count */
extern void T637f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T635f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T635f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T632f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T632f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].keep_head */
extern void T629f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].set_count */
extern void T629f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T626f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T626f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T624f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T624f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].keep_head */
extern void T621f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].set_count */
extern void T621f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].keep_head */
extern void T618f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].set_count */
extern void T618f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T615f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T615f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].keep_head */
extern void T612f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].set_count */
extern void T612f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].keep_head */
extern void T609f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].set_count */
extern void T609f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T606f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T606f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T603f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T603f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T601f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T601f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].keep_head */
extern void T599f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].set_count */
extern void T599f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].keep_head */
extern void T596f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].set_count */
extern void T596f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T594f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T594f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T591f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T591f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].keep_head */
extern void T588f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].set_count */
extern void T588f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].keep_head */
extern void T585f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].set_count */
extern void T585f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].keep_head */
extern void T582f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].set_count */
extern void T582f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].keep_head */
extern void T579f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].set_count */
extern void T579f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].keep_head */
extern void T576f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].set_count */
extern void T576f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T573f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T573f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T570f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T570f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T567f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T567f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T564f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T564f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T561f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T561f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T555f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T555f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T552f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T552f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T549f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T549f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T546f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T546f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T544f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T544f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T541f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T541f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T538f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T538f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].keep_head */
extern void T535f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].set_count */
extern void T535f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].keep_head */
extern void T532f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].set_count */
extern void T532f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].keep_head */
extern void T529f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].set_count */
extern void T529f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].keep_head */
extern void T526f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].set_count */
extern void T526f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T523f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].set_count */
extern void T523f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].keep_head */
extern void T520f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].set_count */
extern void T520f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T517f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T517f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].keep_head */
extern void T514f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].set_count */
extern void T514f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T511f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T511f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T508f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T508f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T505f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T505f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T499f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T499f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T496f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T496f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T493f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T493f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T490f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T490f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T488f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T488f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T485f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T485f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T482f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T482f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T480f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T480f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T477f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T477f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].keep_head */
extern void T474f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].set_count */
extern void T474f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].keep_head */
extern void T471f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].set_count */
extern void T471f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T468f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T468f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].keep_head */
extern void T466f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].set_count */
extern void T466f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T463f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T463f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T460f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T460f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].keep_head */
extern void T457f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].set_count */
extern void T457f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].keep_head */
extern void T454f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].set_count */
extern void T454f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T451f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T451f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T448f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T448f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].keep_head */
extern void T446f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].set_count */
extern void T446f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].keep_head */
extern void T444f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].set_count */
extern void T444f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T441f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T441f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T438f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T438f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T435f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T435f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T432f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T432f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].keep_head */
extern void T426f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].set_count */
extern void T426f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T423f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T423f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T420f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T420f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T417f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T417f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].keep_head */
extern void T414f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].set_count */
extern void T414f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T411f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T411f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T408f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].set_count */
extern void T408f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T405f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].set_count */
extern void T405f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T403f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T403f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].keep_head */
extern void T401f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].set_count */
extern void T401f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T399f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T399f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T396f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T396f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T393f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T393f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].keep_head */
extern void T390f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].set_count */
extern void T390f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T387f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T387f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T384f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T384f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T381f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T381f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T378f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T378f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T375f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T375f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].keep_head */
extern void T372f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].set_count */
extern void T372f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T369f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T369f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T366f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T366f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T363f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T363f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T360f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T360f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T357f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T357f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T354f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T354f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T352f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T352f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T350f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T350f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T347f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T347f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T344f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T344f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T341f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T341f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T338f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T338f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T335f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T335f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].keep_head */
extern void T332f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].set_count */
extern void T332f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T329f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T329f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T326f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T326f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].keep_head */
extern void T323f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].set_count */
extern void T323f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T320f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T320f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T317f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T317f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T314f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T314f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T311f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T311f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].keep_head */
extern void T308f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].set_count */
extern void T308f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T305f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T305f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].keep_head */
extern void T302f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].set_count */
extern void T302f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T299f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T299f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].keep_head */
extern void T296f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].set_count */
extern void T296f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T293f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T293f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].keep_head */
extern void T290f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].set_count */
extern void T290f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T284f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T284f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANT_KEYWORD].keep_head */
extern void T281f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANT_KEYWORD].set_count */
extern void T281f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T278f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T278f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].keep_head */
extern void T273f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].set_count */
extern void T273f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T68f1082(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T68f1072(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.set_file */
extern void T244f23(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_FILE_BUFFER.set_file_with_size */
extern void T244f27(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_UNICODE_FILE_BUFFER.flush */
extern void T244f29(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.flush */
extern void T244f29p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T68f1074(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T257f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T257f17(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T250f9(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T249f9(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T246f9(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.set_end_of_file */
extern void T244f24(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T68f1074p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T68f1074p0(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T68f1074p2(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T68f1062(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T43f25(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T68f1064(TC* ac, T0* C);
/* ET_CLASS.reset_after_preparsed */
extern void T70f328(TC* ac, T0* C);
/* ET_ECF_CLUSTER.cluster */
extern T0* T89f40(TC* ac, T0* C);
/* ET_CLUSTER.cluster */
extern T0* T67f22(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T263f11(TC* ac, T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T199f8(TC* ac, T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T70f67(TC* ac, T0* C);
/* MUTEX.try_lock */
extern T1 T159f4(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_trylock */
extern T1 T159s3(TC* ac, T14 a1);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T68f759(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T68f2090(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_none_class */
extern void T68f2312(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T238f22(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T238f25(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.post_action */
extern void T238f32(TC* ac, T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T70f326(TC* ac, T0* C);
/* ET_CLASS.set_suppliers */
extern void T70f325(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].extend */
extern void T261f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].forth */
extern void T1178f14(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].put */
extern void T261f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].item */
extern T0* T1178f5(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].start */
extern void T1178f13(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T238f31(TC* ac, T0* C, T1 a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T782f4(TC* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.flat_mode */
extern T1 T238f17(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T862f107(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.wipe_out */
extern void T885f12(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.wipe_out */
extern void T884f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].wipe_out */
extern void T1330f11(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.wipe_out */
extern void T882f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].wipe_out */
extern void T1327f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_for_iteration */
extern T0* T881f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_key */
extern T0* T881f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].wipe_out */
extern void T881f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_wipe_out */
extern void T881f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_wipe_out */
extern void T881f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_wipe_out */
extern void T881f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_wipe_out */
extern void T881f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].move_all_cursors_after */
extern void T881f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].forth */
extern void T881f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_forth */
extern void T881f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].add_traversing_cursor */
extern void T881f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_traversing_cursor */
extern void T881f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_for_iteration */
extern T0* T881f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_item */
extern T0* T881f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].after */
extern T1 T881f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_after */
extern T1 T881f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].after */
extern T1 T1325f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].start */
extern void T881f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_start */
extern void T881f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_off */
extern T1 T881f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].off */
extern T1 T1325f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].is_empty */
extern T1 T881f40(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T879f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].wipe_out */
extern void T1324f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].wipe_out */
extern void T878f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T878f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T878f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T878f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T878f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T878f46(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1321f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_after */
extern void T1321f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].forth */
extern void T878f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T878f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T878f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_position */
extern void T1321f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T878f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T878f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T878f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T878f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T878f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T1321f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].start */
extern void T878f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_start */
extern void T878f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T878f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].off */
extern T1 T1321f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T878f27(TC* ac, T0* C);
/* ET_INVARIANTS.set_validity_error */
extern void T543f52(TC* ac, T0* C);
/* ET_INVARIANTS.set_validity_checked */
extern void T543f51(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.reset_indexes */
extern void T862f104(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.initialize_indexes */
extern void T862f102(TC* ac, T0* C, T0* a1);
/* ET_CLASS.same_as_base_class */
extern T1 T70f113(TC* ac, T0* C);
/* ET_INVARIANTS.reset_validity_checked */
extern void T543f53(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T862f106(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_supplier_handler */
extern void T869f23(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T238f30(TC* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T238f36(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_PROCEDURE].wipe_out */
extern void T1150f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].slots_wipe_out */
extern void T1150f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].clashes_wipe_out */
extern void T1150f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_wipe_out */
extern void T1150f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_wipe_out */
extern void T1150f48(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].move_all_cursors_after */
extern void T1150f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1745f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_after */
extern void T1745f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].forth */
extern void T1150f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_forth */
extern void T1150f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].add_traversing_cursor */
extern void T1150f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_position */
extern void T1745f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].remove_traversing_cursor */
extern void T1150f52(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T238f40(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T862f112(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_PROCEDURE].item_for_iteration */
extern T0* T1150f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_item */
extern T0* T1150f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].after */
extern T1 T1150f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_after */
extern T1 T1150f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].after */
extern T1 T1745f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].start */
extern void T1150f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_start */
extern void T1150f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].cursor_off */
extern T1 T1150f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].off */
extern T1 T1745f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].is_empty */
extern T1 T1150f21(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T862f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T718f111(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T717f100(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_error */
extern void T716f107(TC* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_error */
extern void T715f103(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T714f114(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_error */
extern void T712f104(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_error */
extern void T711f110(TC* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_error */
extern void T710f107(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T709f102(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T708f99(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T707f106(TC* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_error */
extern void T706f95(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T718f110(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T717f99(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_checked */
extern void T716f106(TC* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_checked */
extern void T715f102(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T714f113(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T712f103(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_checked */
extern void T711f109(TC* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_checked */
extern void T710f106(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T709f101(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T708f98(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T707f105(TC* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_checked */
extern void T706f94(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T862f113(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].wipe_out */
extern void T888f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_wipe_out */
extern void T888f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_wipe_out */
extern void T888f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_wipe_out */
extern void T888f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_wipe_out */
extern void T888f54(TC* ac, T0* C);
/* SPECIAL [ET_ASSERTIONS].keep_head */
extern void T1336f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTIONS].set_count */
extern void T1336f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].unset_found_item */
extern void T888f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].move_all_cursors_after */
extern void T888f53(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_next_cursor */
extern void T1335f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_after */
extern void T1335f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].forth */
extern void T888f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_forth */
extern void T888f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].add_traversing_cursor */
extern void T888f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_position */
extern void T1335f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].remove_traversing_cursor */
extern void T888f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_item */
extern T6 T888f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_last */
extern T1 T888f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_is_last */
extern T1 T888f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_empty */
extern T1 T888f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_for_iteration */
extern T0* T888f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_item */
extern T0* T888f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_item */
extern T0* T888f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].start */
extern void T888f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_start */
extern void T888f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_off */
extern T1 T888f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].off */
extern T1 T1335f5(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T862f115(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].first */
extern T0* T888f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].force_last */
extern void T888f39(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_put */
extern void T888f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_put */
extern void T888f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_put */
extern void T888f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_item */
extern T6 T888f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].hash_position */
extern T6 T888f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].resize */
extern void T888f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_resize */
extern void T888f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].special_integer_ */
extern T0* T888s36(TC* ac);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_resize */
extern void T888f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_resize */
extern void T888f60(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].aliased_resized_area */
extern T0* T1338s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTIONS].aliased_resized_area */
extern T0* T1336f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_item */
extern T0* T888f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_resize */
extern void T888f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_modulus */
extern T6 T888f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_capacity */
extern T6 T888f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_put */
extern void T888f46(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].force */
extern void T1338s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].fill_with */
extern void T1336f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].extend */
extern void T1336f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].search_position */
extern void T888f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T862f114(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.other_precursors */
extern T0* T718f29(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.other_precursors */
extern T0* T717f22(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.other_precursors */
extern T0* T716f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE.other_precursors */
extern T0* T715f24(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.other_precursors */
extern T0* T714f31(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.other_precursors */
extern T0* T712f28(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.other_precursors */
extern T0* T711f31(TC* ac, T0* C);
/* ET_DO_FUNCTION.other_precursors */
extern T0* T710f30(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.other_precursors */
extern T0* T709f25(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.other_precursors */
extern T0* T708f23(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.other_precursors */
extern T0* T707f28(TC* ac, T0* C);
/* ET_ATTRIBUTE.other_precursors */
extern T0* T706f21(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T862f99(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.set_validity_error */
extern void T608f25(TC* ac, T0* C);
/* ET_PRECONDITIONS.set_validity_checked */
extern void T608f24(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.feature_checker */
extern T0* T862f71(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.validity_checked */
extern T1 T718f26(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.validity_checked */
extern T1 T717f25(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.validity_checked */
extern T1 T716f26(TC* ac, T0* C);
/* ET_DO_PROCEDURE.validity_checked */
extern T1 T715f27(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.validity_checked */
extern T1 T714f28(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.validity_checked */
extern T1 T712f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.validity_checked */
extern T1 T711f28(TC* ac, T0* C);
/* ET_DO_FUNCTION.validity_checked */
extern T1 T710f27(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.validity_checked */
extern T1 T709f22(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.validity_checked */
extern T1 T708f20(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.validity_checked */
extern T1 T707f25(TC* ac, T0* C);
/* ET_ATTRIBUTE.validity_checked */
extern T1 T706f18(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T238f38(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_IMPLEMENTATION_CHECKER.flat_dbc_mode */
extern T1 T238f18(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T862f111(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.set_validity_error */
extern void T605f27(TC* ac, T0* C);
/* ET_POSTCONDITIONS.set_validity_checked */
extern void T605f26(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T862f110(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T718f113(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T717f103(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T716f109(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_validity_checked */
extern void T715f106(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T238f35(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].wipe_out */
extern void T1151f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].slots_wipe_out */
extern void T1151f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].clashes_wipe_out */
extern void T1151f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_wipe_out */
extern void T1151f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].item_storage_wipe_out */
extern void T1151f48(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].move_all_cursors_after */
extern void T1151f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_next_cursor */
extern void T1746f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_after */
extern void T1746f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].forth */
extern void T1151f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_forth */
extern void T1151f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].add_traversing_cursor */
extern void T1151f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_position */
extern void T1746f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].remove_traversing_cursor */
extern void T1151f52(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T238f39(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].item_for_iteration */
extern T0* T1151f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_item */
extern T0* T1151f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].after */
extern T1 T1151f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_after */
extern T1 T1151f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].after */
extern T1 T1746f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].start */
extern void T1151f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_start */
extern void T1151f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].cursor_off */
extern T1 T1151f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].off */
extern T1 T1746f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].is_empty */
extern T1 T1151f21(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T862f108(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.reset_validity_checked */
extern void T605f25(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset_validity_checked */
extern void T608f26(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T714f116(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T712f106(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_validity_checked */
extern void T711f112(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_validity_checked */
extern void T710f109(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T709f104(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T708f101(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T707f108(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_validity_checked */
extern void T706f97(TC* ac, T0* C);
/* ET_SUPPLIER_BUILDER.set */
extern void T1152f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.suppliers_enabled */
extern T1 T238f16(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_signatures_validity */
extern void T238f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T1125f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T1125f65(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1125f64(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1125f63(TC* ac, T0* C);
/* SPECIAL [ET_FEATURE_NAME].keep_head */
extern void T1701f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].set_count */
extern void T1701f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1125f62(TC* ac, T0* C);
/* SPECIAL [ET_FLATTENED_FEATURE].keep_head */
extern void T1698f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].set_count */
extern void T1698f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T1125f61(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1125f60(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1697f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_after */
extern void T1697f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T1125f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T1125f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1125f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1697f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1125f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T1125f26(TC* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_signature_validity */
extern void T238f34(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1138f12(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1728f10(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1729f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1729f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1728f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1729f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1728f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1138f15(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1138f15ot1(TC* ac, T0* a1);
extern T1 T1138f15ot2(TC* ac, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1138f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1138s6(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T63f564(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T1466c1252(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T63f170(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T42f564(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T42f170(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T63f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T1466c1251(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.name */
extern T0* T1582f13(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T42f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1728f6(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1728f9(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1729f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1729f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1728f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1729f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1728c8(TC* ac, T0* a1);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1585f12(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1587f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T718f68(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T717f59(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T716f62(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T715f60(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T714f75(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T712f66(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T711f69(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T710f67(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T709f68(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T708f67(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T707f67(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T706f62(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_adapted */
extern T1 T1585f17(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_adapted */
extern T1 T1587f16(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T718f73(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T717f64(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T716f67(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T715f65(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T714f80(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T712f71(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T711f74(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T710f72(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T709f73(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T708f72(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T707f72(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T706f67(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1138f14(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T63f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T1466c1250(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T63f171(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T42f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T42f171(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T63f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T1466c1249(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T42f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T63f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T1466c1248(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T42f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1585f16(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1587f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T718f72(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T717f63(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T716f66(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T715f64(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T714f79(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T712f70(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T711f73(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T710f71(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T709f72(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T708f71(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T707f71(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T706f66(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_inherited */
extern T1 T1585s15(TC* ac);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1587f14(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T718f71(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T717f62(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T716f65(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T715f63(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T714f78(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T712f69(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T711f72(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T710f70(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T709f71(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T708f70(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T707f70(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T706f65(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1138f13(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1138f13ot1(TC* ac, T0* a1);
extern T1 T1138f13ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T63f559(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T1466c1247(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T63f65(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T42f559(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T42f65(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T63f558(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T1466c1246(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T42f558(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T63f557(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T1466c1245(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T42f557(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1585f14(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1587f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T718f70(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T717f61(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T716f64(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T715f62(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T714f77(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T712f68(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T711f71(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T710f69(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T709f70(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T708f69(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T707f69(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T706f64(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1585f13(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_redeclared */
extern T1 T1587s12(TC* ac);
/* ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T718f69(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T717f60(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T716f63(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T715f61(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T714f76(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T712f67(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T711f70(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T710f68(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T709f69(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T708f68(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T707f68(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T706f63(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1125f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T1125f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T1125f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1125f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T1125f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1697f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T1125f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T1125f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T1125f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].off */
extern T1 T1697f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T1125f31(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.resolve_feature_adaptations */
extern void T238f33(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.resolve_inherited_features */
extern void T238f37(TC* ac, T0* C, T0* a1);
extern T1 T238f37ot1(TC* ac, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1585f33(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1585f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T1125f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T1125f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T1125f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T1125f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T1125f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T1125f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T1125f23(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1133f23(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1133f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1715f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1715f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1715f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1715f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1715f54(TC* ac, T0* C);
/* SPECIAL [ET_REPLICABLE_FEATURE].keep_head */
extern void T1997f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].set_count */
extern void T1997f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1715f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1715f52(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1996f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_after */
extern void T1996f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1715f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1715f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1715f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1996f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1715f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1715f23(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1587f25(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1587f18(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1587f17(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1582f22(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1585f27(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1585f19(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1585f18(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.selected_count */
extern T6 T1717f2(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1133f34(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T63f555(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T1466c1243(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T2004f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T2004f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1719f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T2004f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1719f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T2004f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1719f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T2004f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1719f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T2004f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1719f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_after */
extern void T2004f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1719f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T2004f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].before */
extern T1 T2004f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1719f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T2004c9(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1719f7(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T63f168(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T42f555(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T42f168(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1587f33(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1729f8(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T2268f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T2268c3(TC* ac, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1729c7(TC* ac);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1729f9(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1585f37(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1582f23(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1587f35(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1585f39(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1587f34(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1282f13(TC* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize_with_default */
extern void T1047s4(TC* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].conservative_resize_with_default */
extern void T953f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1282s5(TC* ac);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T1047c2(TC* ac);
/* ET_FEATURE_IDS.make */
extern T0* T1282c9(TC* ac, T6 a1);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1585f38(TC* ac, T0* C, T6 a1);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1717f5(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1718f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T63f554(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T1466c1242(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T42f554(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1133f18(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1133f27(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1718f16(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1718f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1718f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T2000f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1718f20(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T2000f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1719f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].force */
extern void T2002s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].fill_with */
extern void T2003f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].extend */
extern void T2003f7(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1587f26(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1585f28(TC* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1718f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1718f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1718f6(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1718f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1718f15(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1718f17(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1718f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].off */
extern T1 T2000f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1719c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1719f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T2002s1(TC* ac, T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make_empty */
extern T0* T2003c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T2002c2(TC* ac);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1587f23(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1585f25(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1717f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1715f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1715f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1715f32(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1587f22(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1585f24(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.has_replication */
extern T1 T1717s3(TC* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1715f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1715f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1715f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1715f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1715f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1996f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1715f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1715f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1715f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].off */
extern T1 T1996f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1715f28(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1133f33(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1715f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1715f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1715f59(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].force */
extern void T1999s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].fill_with */
extern void T1997f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].extend */
extern void T1997f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1715f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1715f61(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1715f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1715f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1715f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1715f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1715s40(TC* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1715f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1715f68(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1999s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1997f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1715f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1715f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1715f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1715f47(TC* ac, T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1717c6(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1718c12(TC* ac);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1718f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1718f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T2000c7(TC* ac, T0* a1);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1587f24(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1585f26(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1717f7(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1718f13(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T2001f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T2001c3(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1715f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1715f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1715f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1715f58(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1133f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T63f547(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T1466c1235(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T63f161(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T42f547(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T42f161(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T63f546(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T1466c1234(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T63f160(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T42f546(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T42f160(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1714f49(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1714f62(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1714f61(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1714f60(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1714f59(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1714f58(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1714f57(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1994f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_after */
extern void T1994f9(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1714f48(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1714f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1714f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1994f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1714f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1714f26(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T63f545(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T1466c1233(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T63f159(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T42f545(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T42f159(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1714f40(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1714f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1714f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1714f38(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1714f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1714f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1714f37(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1714f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1994f4(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1714f47(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1714f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1714f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].off */
extern T1 T1994f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1714f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1713f43(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1713f60(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1713f59(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1713f58(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1713f57(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1713f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1713f56(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1993f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_after */
extern void T1993f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1713f42(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1713f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1713f74(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1993f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1713f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1713f22(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T63f544(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T1466c1232(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T63f158(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T42f544(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T42f158(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1713f31(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1713f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1713f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1713f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1713f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].after */
extern T1 T1993f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1713f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1713f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1713f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].off */
extern T1 T1993f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1147f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1147f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1147f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1147f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1147f54(TC* ac, T0* C);
/* SPECIAL [ET_RENAME].keep_head */
extern void T1737f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].set_count */
extern void T1737f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1147f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1147f52(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1736f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_after */
extern void T1736f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1147f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1147f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1147f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1736f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1147f74(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1147f23(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T63f543(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T1466c1231(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T63f157(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T42f543(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T42f157(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1147f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1147f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1147f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1147f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1147f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1736f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1147f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1147f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1147f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].off */
extern T1 T1736f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last_new */
extern void T1125f75(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T1125f86(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T1125f85(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].force */
extern void T1702s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].fill_with */
extern void T1698f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].extend */
extern void T1698f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T1125f79(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T1125f80(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T1125f84(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1125f89(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1125f88(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T1125f87(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1133f21(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1585f31(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1585c29(TC* ac, T0* a1);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1582f12(TC* ac, T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1582f11(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.reset */
extern void T1585f30(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1587f30(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1282f4(TC* ac, T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1282f3(TC* ac, T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1282f12(TC* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T1047s1(TC* ac, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T953f9(TC* ac, T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T953f19(TC* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T154f7(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1587f21(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1587f20(TC* ac, T0* C);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1582f33(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_has_other_effective */
extern void T1582f32(TC* ac, T0* C, T1 a1);
/* ET_PARENT_FEATURE.set_has_other_deferred */
extern void T1582f31(TC* ac, T0* C, T1 a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1585f34(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1585f23(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1585f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T1125f76(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1133f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1587f29(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1587c27(TC* ac, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.reset */
extern void T1587f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1585f11(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1587f10(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T718f67(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T717f58(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T716f61(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T715f59(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T714f74(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T712f65(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T711f68(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T710f66(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T709f67(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T708f66(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T707f66(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T706f61(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_immediate */
extern T1 T1585f10(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_immediate */
extern T1 T1587f9(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_immediate */
extern T1 T718f66(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_immediate */
extern T1 T717f57(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_immediate */
extern T1 T716f60(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_immediate */
extern T1 T715f58(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_immediate */
extern T1 T714f73(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_immediate */
extern T1 T712f64(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_immediate */
extern T1 T711f67(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_immediate */
extern T1 T710f65(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_immediate */
extern T1 T709f66(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_immediate */
extern T1 T708f65(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_immediate */
extern T1 T707f65(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_immediate */
extern T1 T706f60(TC* ac, T0* C);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1582f28(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1582f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1714f46(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1714f54(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1714f25(TC* ac, T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1582f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1714f21(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1714f42(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1714f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1714f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1714f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1714f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1713f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1713f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1713f72(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1713f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_keep_head */
extern void T1713f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_keep_head */
extern void T1713f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1713f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1713f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1713f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1713f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1713f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1713f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1713f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1713f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1713f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1713f21(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1713f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1713f39(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T720f57(TC* ac, T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T368f110(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T720f14(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T368f12(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T368f10(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T714f37(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T712f33(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T711f36(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T710f35(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_prefixable */
extern T1 T709f31(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_prefixable */
extern T1 T708f29(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_prefixable */
extern T1 T707f34(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_prefixable */
extern T1 T706f27(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T720f58(TC* ac, T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T368f111(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T720f15(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T368f13(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T368f11(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T714f38(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T712f34(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T711f37(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T710f36(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T709f32(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T708f30(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T707f35(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T706f28(TC* ac, T0* C);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1582f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1147f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1147f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1147f65(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1147f64(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_RENAME].force */
extern void T1740s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME].fill_with */
extern void T1737f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].extend */
extern void T1737f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1147f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1147f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1147f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1147f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1147f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1147f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1147f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1147f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1147f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1147f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1147f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1147f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1147f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1133f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1582f30(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.make */
extern T0* T1582c24(TC* ac, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.reset */
extern void T1582f29(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T1125f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T1125f83(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T1125s43(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T1125f82(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T1125f81(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1702s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1698f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T1125f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T1125f37(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1133f32(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T63f553(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T1466c1241(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T63f167(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T42f553(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T42f167(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1714f51(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1714f69(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1714f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1714f65(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T196f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1714f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1714f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1714s39(TC* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1714f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1714f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1714f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1714f24(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1133f31(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T63f552(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T1466c1240(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T63f166(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T42f552(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T42f166(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1133f30(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T63f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T1466c1239(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T63f165(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T42f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T42f165(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1713f32(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1133f29(TC* ac, T0* C, T0* a1);
extern T1 T1133f29ot1(TC* ac, T0* a1);
extern T1 T1133f29ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T63f550(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T1466c1238(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T63f164(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T42f550(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T42f164(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1713f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T487f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1713f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1713f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1713s35(TC* ac);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1713f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1713f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1713f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1713f36(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T63f549(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T1466c1237(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ALL_EXPORT.position */
extern T0* T701f4(TC* ac, T0* C);
/* ET_CLIENTS.position */
extern T0* T268f13(TC* ac, T0* C);
/* ET_CLIENT.position */
extern T0* T190f5(TC* ac, T0* C);
/* ET_CLIENTS.first */
extern T0* T268f15(TC* ac, T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T268f14(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T63f163(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T42f549(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T42f163(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1147f30(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1133f28(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T63f548(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T1466c1236(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T63f162(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T42f548(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T42f162(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T307f82(TC* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T719f3(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.same_alias_names */
extern T1 T371f8(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.has_alias_name */
extern T1 T371f10(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.head_has_alias_name */
extern T1 T371f5(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T720f17(TC* ac, T0* C, T0* a1);
extern T1 T720f17ot1(TC* ac, T0* a1);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T368f15(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.first */
extern T0* T371f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put_new */
extern void T1147f46(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T194f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1147f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1147f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1147s35(TC* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1147f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1147f61(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].aliased_resized_area */
extern T0* T1740s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].aliased_resized_area */
extern T0* T1737f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1147f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1147f21(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1133f24(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T63f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T1466c1230(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T63f58(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T42f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T42f58(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.flattened_feature */
extern T0* T1585f3(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.flattened_feature */
extern T0* T1587f2(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T718f65(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T717f56(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T716f59(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T715f57(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T714f72(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T712f63(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T711f66(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T710f64(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T709f65(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T708f64(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T707f64(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T706f59(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1134f20(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1723f36(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1723f45(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1723f44(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1723f43(TC* ac, T0* C);
/* SPECIAL [ET_DOTNET_FEATURE].keep_head */
extern void T2005f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].set_count */
extern void T2005f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1723f42(TC* ac, T0* C);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].keep_head */
extern void T2008f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].set_count */
extern void T2008f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1723f41(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1723f40(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T2011f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_after */
extern void T2011f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1721f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1721f47(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1721f46(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1721f45(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1721f44(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1721f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1721f43(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T2006f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_after */
extern void T2006f7(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1134f23(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1134f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T1125f36(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1134f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1134f15(TC* ac, T0* C);
/* ET_ECF_LIBRARY.system_object_parents */
extern T0* T806f88(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_object_parents */
extern T0* T87f91(TC* ac, T0* C);
/* ET_SYSTEM.system_object_parents */
extern T0* T50f90(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1134f13(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features_from_parents */
extern void T1134f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1134f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1134f14(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1134f25(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1725f15(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1725f17(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1725f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T2013f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1725f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T2013f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1725f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1725f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1725f6(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1725f8(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1725f14(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1725f16(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1725f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].off */
extern T1 T2013f6(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1723f24(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1723f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1723f29(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1723f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1723f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1723f22(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1720f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1723f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1723f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1723f23(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1134f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1134f18(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1721f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1721f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1721f26(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1721f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1721f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1721f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1721f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1721f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1721f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1721f20(TC* ac, T0* C, T6 a1);
/* ET_PARENT_LIST.has_conforming_parent */
extern T1 T182f10(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1134f21(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1134f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1721f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1721f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1721f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1721f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1721f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].force */
extern void T2007s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].fill_with */
extern void T2005f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].extend */
extern void T2005f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last_new */
extern void T1723f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1723f51(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1723f50(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].force */
extern void T2012s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].fill_with */
extern void T2008f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].extend */
extern void T2008f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1723f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1723f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1723f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1723f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1723s32(TC* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1723f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T2007s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T2005f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1723f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T2012s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T2008f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1723f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1723f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1723f21(TC* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1725c11(TC* ac);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1725f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1725f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T2013c7(TC* ac, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1725f12(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T2014f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T2014c3(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last_new */
extern void T1125f77(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T1125f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1721f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1721f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1721s27(TC* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1721f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1721f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1721f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1721f28(TC* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_parents_validity */
extern void T238f28(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1149f7(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.pre_action */
extern void T238f27(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.report_class_postponed */
extern void T66f110(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_class_postponed */
extern void T858f112(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_parent_class */
extern void T238f26(TC* ac, T0* C, T0* a1);
/* ET_CLASS.parents */
extern T0* T70f161(TC* ac, T0* C, T6 a1);
/* ET_CLASS.implicit_parent_clause */
extern T0* T70f179(TC* ac, T0* C);
/* ET_ECF_LIBRARY.any_parents */
extern T0* T806f23(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_parents */
extern T0* T87f26(TC* ac, T0* C);
/* ET_SYSTEM.any_parents */
extern T0* T50f25(TC* ac, T0* C);
/* ET_CLASS.parents_count */
extern T6 T70f160(TC* ac, T0* C);
/* ET_CLASS.has_explicit_conforming_parent */
extern T1 T70f178(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.has_conforming_parent */
extern T1 T598f5(TC* ac, T0* C);
/* ET_CLASS.set_checking_implementation */
extern void T70f327(TC* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T238f24(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_implementation_error */
extern void T70f280(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T238c19(TC* ac, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T238f20(TC* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T1152c5(TC* ac);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern T0* T1152f4(TC* ac, T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T1152s3(TC* ac);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T1151c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_QUERY].set_internal_cursor */
extern void T1151f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T1151f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T1746c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T1151f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T1151f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T1151f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T1151f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T1150c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].set_internal_cursor */
extern void T1150f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T1150f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T1745c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T1150f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T1150f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T1150f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T1150f39(TC* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1149c6(TC* ac, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T1149f6p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1149s4(TC* ac);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1138c10(TC* ac, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern void T1138f10p1(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1134c19(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1723f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1723c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1723f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1723f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1723f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1723f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T2011c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1723f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1723f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1723f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T2007s1(TC* ac, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make_empty */
extern T0* T2005c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T2007c3(TC* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1723f57(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T2012s2(TC* ac, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_empty */
extern T0* T2008c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T2012c3(TC* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1721f32(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1720c2(TC* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1721c31(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1721f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1721f25(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T2006c6(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1721f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1721f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1721f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1721f37(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1134f19p1(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1134s12(TC* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1133c22(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1715c42(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1715f49(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1715f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1715f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1715f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1996c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1715f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1715f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1715f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1715f71(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1999s2(TC* ac, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make_empty */
extern T0* T1997c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1999c3(TC* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1714f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1714c43(TC* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1714f52(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1714f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_internal_cursor */
extern void T1714f77(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1714f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1994c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1714f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1714f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1714f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1714f73(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T1242s1(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T1242c3(TC* ac);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1713f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1713c37(TC* ac, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_internal_cursor */
extern void T1713f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1713f20(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1993c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1713f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1713f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1713f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1713f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1147f42(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern T0* T1133s17(TC* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1147c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1147f51(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1147f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_internal_cursor */
extern void T1147f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1147f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1736c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1147f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1147f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1147f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1147f76(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1740s2(TC* ac, T6 a1);
/* SPECIAL [ET_RENAME].make_empty */
extern T0* T1737c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1740c3(TC* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1133f22p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1133s16(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1125f45(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.feature_name_tester */
extern T0* T238s13(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T1125c44(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1125f54(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T1125f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_internal_cursor */
extern void T1125f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1125f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1697c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T1125f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T1125f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T1125f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T1125f69(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1702s1(TC* ac, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make_empty */
extern T0* T1698c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1702c3(TC* ac);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T238f21(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T238s14(TC* ac);
/* ET_FEATURE_CHECKER.make */
extern T0* T862c98(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.make */
extern T0* T891c9(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.make */
extern void T891f9p1(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T890c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_internal_cursor */
extern void T890f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].new_cursor */
extern T0* T890f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T1344c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T1342s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make_empty */
extern T0* T1343c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].default_create */
extern T0* T1342c3(TC* ac);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].make */
extern T0* T889c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].set_internal_cursor */
extern void T889f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].new_cursor */
extern T0* T889f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].make */
extern T0* T1341c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].make */
extern T0* T1339s1(TC* ac, T6 a1);
/* SPECIAL [ET_NOTE_TERM].make_empty */
extern T0* T1340c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].default_create */
extern T0* T1339c3(TC* ac);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_map */
extern T0* T888c38(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_with_equality_testers */
extern void T888f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_sparse_container */
extern void T888f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].set_internal_cursor */
extern void T888f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_cursor */
extern T0* T888f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].make */
extern T0* T1335c7(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_slots */
extern void T888f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_clashes */
extern void T888f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_key_storage */
extern void T888f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_item_storage */
extern void T888f65(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].make */
extern T0* T1338s2(TC* ac, T6 a1);
/* SPECIAL [ET_ASSERTIONS].make_empty */
extern T0* T1336c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].default_create */
extern T0* T1338c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].make */
extern T0* T887c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T887f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T887f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].make */
extern T0* T1334c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].make */
extern T0* T1333s1(TC* ac, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T1332c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].default_create */
extern T0* T1333c3(TC* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T886c3(TC* ac);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.make */
extern T0* T884c6(TC* ac);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1330c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].set_internal_cursor */
extern void T1330f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].new_cursor */
extern T0* T1330f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1803c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_map */
extern T0* T883c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_with_equality_testers */
extern void T883f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_sparse_container */
extern void T883f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_internal_cursor */
extern void T883f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_cursor */
extern T0* T883f24(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1329c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_slots */
extern void T883f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_clashes */
extern void T883f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_key_storage */
extern void T883f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_item_storage */
extern void T883f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T1319s1(TC* ac, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T1318c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T1319c3(TC* ac);
/* ET_ITERATION_ITEM_SCOPE.make */
extern T0* T882c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].make */
extern T0* T1327c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].set_internal_cursor */
extern void T1327f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].new_cursor */
extern T0* T1327f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].make */
extern T0* T1802c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_map */
extern T0* T881c43(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_with_equality_testers */
extern void T881f47(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_sparse_container */
extern void T881f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_internal_cursor */
extern void T881f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_cursor */
extern T0* T881f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make */
extern T0* T1325c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_slots */
extern void T881f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_clashes */
extern void T881f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_key_storage */
extern void T881f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_item_storage */
extern void T881f59(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T880c8(TC* ac, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T880s6(TC* ac);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T879c6(TC* ac);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].make */
extern T0* T1324c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T1324f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T1324f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].make */
extern T0* T1801c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_map */
extern T0* T878c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T878f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T878f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T878f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T878f26(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make */
extern T0* T1321c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_slots */
extern void T878f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_clashes */
extern void T878f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T878f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T878f55(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T877c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T877f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T877f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T1320c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T876c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_internal_cursor */
extern void T876f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].new_cursor */
extern T0* T876f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T1317c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T1314s1(TC* ac, T6 a1);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make_empty */
extern T0* T1316c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].default_create */
extern T0* T1314c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T875c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].set_internal_cursor */
extern void T875f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_cursor */
extern T0* T875f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T1313c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T1310s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].make_empty */
extern T0* T1312c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].default_create */
extern T0* T1310c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T874c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].set_internal_cursor */
extern void T874f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T874f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T1309c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T1307s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_empty */
extern T0* T1308c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T1307c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T873c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].set_internal_cursor */
extern void T873f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T873f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T1306c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T1304s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_empty */
extern T0* T1305c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T1304c3(TC* ac);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T872c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].set_internal_cursor */
extern void T872f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T872f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T1303c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T1301s1(TC* ac, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make_empty */
extern T0* T1302c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T1301c3(TC* ac);
/* ET_FEATURE_CHECKER.dummy_feature */
extern T0* T862f73(TC* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern T0* T869c22(TC* ac, T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern T0* T869f17(TC* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern void T869f22p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.make */
extern void T862f98p1(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T238f15(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_none_class */
extern void T238f23(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_class */
extern void T236f33(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T236f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T236f38(TC* ac, T0* C);
extern T1 T236f38ot1(TC* ac, T0* a1);
extern T1 T236f38ot2(TC* ac, T0* a1);
/* ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T236f49(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_item_seed */
extern void T87f268(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_special_item_seed */
extern void T50f209(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T87f267(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T50f208(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.forth_feature_name */
extern T0* T81s760(TC* ac);
/* ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T87f266(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T50f207(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.after_feature_name */
extern T0* T81s759(TC* ac);
/* ET_ECF_SYSTEM.set_iteration_cursor_item_seed */
extern void T87f265(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_item_seed */
extern void T50f206(TC* ac, T0* C, T6 a1);
/* ET_CLASS.is_iteration_cursor_class */
extern T1 T70f169(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T87f264(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T50f205(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern T0* T81s758(TC* ac);
/* ET_CLASS.is_iterable_class */
extern T1 T70f168(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_dispose_seed */
extern void T87f263(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_dispose_seed */
extern void T50f204(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern T0* T81s757(TC* ac);
/* ET_CLASS.is_disposable_class */
extern T1 T70f167(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_item_seed */
extern void T87f262(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_function_item_seed */
extern void T50f203(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_routine_call_seed */
extern void T87f261(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_routine_call_seed */
extern void T50f202(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_is_equal_seed */
extern void T87f260(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_is_equal_seed */
extern void T50f201(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T63f230(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T1466c927(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T63f22(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T42f230(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T42f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_twin_seed */
extern void T87f259(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_twin_seed */
extern void T50f200(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T718f75(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T716f69(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T715f67(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T714f82(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T712f73(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T711f76(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T710f74(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T709f75(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T708f74(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T707f74(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T706f69(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T717f66(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_copy_seed */
extern void T87f258(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_copy_seed */
extern void T50f199(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T63f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T1466c925(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T63f20(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T42f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T42f20(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T63f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T1466c929(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T63f24(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T42f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T42f24(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_default_create_seed */
extern void T87f257(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T50f198(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T236f27(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T236s21(TC* ac);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T236f48(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T236f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T63f296(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T1466c983(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T63f56(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T42f296(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T42f56(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T63f295(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T1466c982(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T42f295(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T63f294(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T1466c981(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T42f294(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T63f293(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T1466c980(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T63f54(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T42f293(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T42f54(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T63f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T1466c979(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T42f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T82f8(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T63f291(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T1466c978(TC* ac, T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T82f12(TC* ac, T0* C);
/* ET_CREATOR.first */
extern T0* T82f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T63f53(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T42f291(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T42f53(TC* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T80f4(TC* ac, T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T80f3(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T236f46(TC* ac, T0* C);
extern T1 T236f46ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T63f290(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T1466c977(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T63f52(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T42f290(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T42f52(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T63f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T1466c976(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T63f51(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T42f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T42f51(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T63f288(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T1466c975(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T63f50(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T42f288(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T42f50(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T63f287(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T1466c974(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T63f49(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T42f287(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T42f49(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T63f286(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T1466c973(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T42f286(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T63f282(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T1466f969(TC* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T1466c968(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T63f45(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T42f282(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T42f45(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T63f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T1466c967(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T63f44(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T42f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T42f44(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T63f280(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T1466c966(TC* ac, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1585f22(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T42f280(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T1125f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T1125f59(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T70f323(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T1128f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T1128f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1128f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1128f50(TC* ac, T0* C);
/* SPECIAL [ET_ALIAS_NAME].keep_head */
extern void T1599f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].set_count */
extern void T1599f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1128f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T1128f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1128f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1705f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_after */
extern void T1705f7(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T236f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last_new */
extern void T1128f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T1128f47(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T1128f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T1128f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T1128f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T1128f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T1128f28(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.hash_code */
extern T6 T368f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T1128f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T1128f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T1128s33(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T1128f56(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1600s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1599f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T1128f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T1128f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T1128f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T1128f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T1128f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T1128f27(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T63f279(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T1466c965(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T720f20(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_name */
extern T0* T720f50(TC* ac, T0* C);
/* ET_ALIAS_NAME.alias_lower_name */
extern T0* T368f17(TC* ac, T0* C);
/* ET_ALIAS_NAME.alias_name */
extern T0* T368f77(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T720f19(TC* ac, T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T368f16(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T63f41(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T42f279(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T42f41(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T63f278(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T1466c964(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T42f278(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3b_error */
extern void T63f277(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3b */
extern T0* T1466c963(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfav3_error */
extern T1 T63f40(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav3b_error */
extern void T42f277(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav3_error */
extern T1 T42f40(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T63f276(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T1466c962(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T63f39(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T42f276(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T42f39(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T63f275(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T1466c961(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T42f275(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T63f274(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T1466c960(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T42f274(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3c_error */
extern void T63f273(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3c */
extern T0* T1466c959(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3c_error */
extern void T42f273(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T63f272(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T1466c958(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T42f272(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T63f271(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T1466c957(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T42f271(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T63f270(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T1466c956(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T42f270(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3d_error */
extern void T63f269(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3d */
extern T0* T1466c955(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3d_error */
extern void T42f269(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T63f268(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T1466c954(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T42f268(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_key */
extern T0* T1128f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T1128f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T1128f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T1128f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T1128f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T1128f41(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1129f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_redeclared_signatures_checked */
extern void T70f322(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T236f44(TC* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1137f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].wipe_out */
extern void T1726f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T1456f15(TC* ac, T0* C);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].keep_head */
extern void T1815f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].set_count */
extern void T1815f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T1456f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1817f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_after */
extern void T1817f6(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].wipe_out */
extern void T2015f34(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_wipe_out */
extern void T2015f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_wipe_out */
extern void T2015f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T2015f42(TC* ac, T0* C);
/* SPECIAL [ET_LIKE_FEATURE].keep_head */
extern void T2016f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].set_count */
extern void T2016f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T2015f41(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].move_all_cursors_after */
extern void T2015f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_next_cursor */
extern void T2176f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_after */
extern void T2176f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].wipe_out */
extern void T1727f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1727f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_next_cursor */
extern void T2018f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_after */
extern void T2018f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T63f556(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T1466c1244(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].forth */
extern void T2018f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_forth */
extern void T1727f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_position */
extern void T2018f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1727f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1727f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].go_after */
extern void T2018f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_go_after */
extern void T1727f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].off */
extern T1 T2018f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].before */
extern T1 T2018f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].item */
extern T0* T2018f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_item */
extern T0* T1727f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].after */
extern T1 T2018f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].start */
extern void T2018f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_start */
extern void T1727f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].new_cursor */
extern T0* T1727f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].make */
extern T0* T2018c9(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T42f556(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1137f6(TC* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1137f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].is_empty */
extern T1 T1727f6(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].sort */
extern void T1726f11(TC* ac, T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T1457f4(TC* ac, T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T1457f6(TC* ac, T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make_filled */
extern T0* T1457c5(TC* ac, T1 a1, T6 a2, T6 a3);
/* ARRAY [BOOLEAN].make_filled_area */
extern void T1457f7(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].item */
extern T0* T1727f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].make */
extern T0* T1727c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].set_internal_cursor */
extern void T1727f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].make */
extern T0* T2017s1(TC* ac, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].make_empty */
extern T0* T2016c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].default_create */
extern T0* T2017c3(TC* ac);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T1456f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].twin */
extern T0* T1456f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].copy */
extern void T1456f16(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1815f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1815f10(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1815f14(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].move_data */
extern void T1815f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1815f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1815f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].make_empty */
extern T0* T1815c6(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T1456f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1817c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].set_internal_cursor */
extern void T1456f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T1456f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T240f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T240f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T240f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T240f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T1153c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].set_internal_cursor */
extern void T240f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T240f15(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T718f50(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T717f48(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T716f49(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T715f50(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T718f49(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T717f47(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T716f48(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T715f49(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T63f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T1466c953(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T63f43(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T42f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T42f43(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T853f21(TC* ac, T0* C, T0* a1);
extern T1 T853f21ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T695f47(TC* ac, T0* C, T0* a1);
extern T1 T695f47ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T504f49(TC* ac, T0* C, T0* a1);
extern T1 T504f49ot1(TC* ac, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T70f230(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T510f20(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T729f21(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T728f27(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T726f23(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T184f65(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T2191f9(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T186f18(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T102f64(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T202f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T2190f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T200f35(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T63f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T1466c952(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T42f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_unqualified_anchored_type */
extern T1 T853f20(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_unqualified_anchored_type */
extern T1 T729f20(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_unqualified_anchored_type */
extern T1 T728f26(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_unqualified_anchored_type */
extern T1 T695f54(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_unqualified_anchored_type */
extern T1 T504f56(TC* ac, T0* C);
/* ET_CLASS.has_unqualified_anchored_type */
extern T1 T70f231(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_unqualified_anchored_type */
extern T1 T510f19(TC* ac, T0* C);
/* ET_LIKE_FEATURE.has_unqualified_anchored_type */
extern T1 T726f22(TC* ac, T0* C);
/* ET_TUPLE_TYPE.has_unqualified_anchored_type */
extern T1 T184f64(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_unqualified_anchored_type */
extern T1 T2191f8(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_unqualified_anchored_type */
extern T1 T186f17(TC* ac, T0* C);
/* ET_CLASS_TYPE.has_unqualified_anchored_type */
extern T1 T102f63(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T202f9(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T2190f8(TC* ac, T0* C);
/* ET_LIKE_CURRENT.has_unqualified_anchored_type */
extern T1 T200f34(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav5a_error */
extern void T63f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav5a */
extern T0* T1466c951(TC* ac, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.lower_name */
extern T0* T720f21(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T720f51(TC* ac, T0* C);
/* ET_ALIAS_NAME.lower_name */
extern T0* T368f18(TC* ac, T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T368f78(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vfav5_error */
extern T1 T63f42(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav5a_error */
extern void T42f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vfav5_error */
extern T1 T42f42(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T720f12(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T720f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1k_error */
extern void T63f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1k */
extern T0* T1466c950(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1k_error */
extern void T42f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T63f263(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T1466c949(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T42f263(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4d_error */
extern void T63f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4d */
extern T0* T1466c948(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T63f38(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav4d_error */
extern void T42f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T42f38(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T63f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T1466c947(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T42f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4c_error */
extern void T63f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4c */
extern T0* T1466c946(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4c_error */
extern void T42f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav3a_error */
extern void T63f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav3a */
extern T0* T1466c945(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav3a_error */
extern void T42f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T714f36(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T712f32(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T711f35(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_parenthesisable */
extern T1 T710f34(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T709f30(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T708f28(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T707f33(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_parenthesisable */
extern T1 T706f26(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4b_error */
extern void T63f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4b */
extern T0* T1466c944(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4b_error */
extern void T42f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T63f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T1466c943(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T42f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T714f35(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T712f31(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T711f34(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T710f33(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T709f29(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T708f27(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T707f32(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T706f25(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T63f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T1466c942(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4a_error */
extern void T42f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T63f255(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T1466c941(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T63f37(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T42f255(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T42f37(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T714f65(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T712f55(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T711f59(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T710f57(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T709f27(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T708f57(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T707f58(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T706f52(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T236f43(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1136f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T236f42(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1138f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T236f41(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T63f285(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T1466c972(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T42f285(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T1125f39(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T63f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T1466c971(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T42f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1584f3(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1584f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1856f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern T0* T236f26(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1584c2(TC* ac, T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1856c2(TC* ac);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1583f3(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1583f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1853f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern T0* T236f25(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1583c2(TC* ac, T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1853c2(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T1125f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T1125f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_before */
extern void T1697f10(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T236f40(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T236f52(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T63f303(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T1466c990(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.alias_lower_names */
extern T0* T1466f185(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T63f60(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T42f303(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T42f60(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T63f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T1466c989(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T63f59(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T42f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T42f59(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T63f301(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T1466c988(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T42f301(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T63f300(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T1466c987(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T42f300(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T718f126(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T717f116(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T716f122(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T715f119(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T714f128(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T712f118(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T711f124(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T710f121(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T709f116(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T708f113(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T707f120(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T706f109(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T236f54(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1587f32(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1585f36(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1587f31(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1585f35(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1282f10(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1282f8(TC* ac, T0* C);
/* ET_FEATURE_IDS.remove */
extern void T1282f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.id */
extern T6 T718f30(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.id */
extern T6 T717f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.id */
extern T6 T716f30(TC* ac, T0* C);
/* ET_DO_PROCEDURE.id */
extern T6 T715f29(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.id */
extern T6 T714f32(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.id */
extern T6 T712f29(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.id */
extern T6 T711f32(TC* ac, T0* C);
/* ET_DO_FUNCTION.id */
extern T6 T710f31(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.id */
extern T6 T709f19(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.id */
extern T6 T708f24(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.id */
extern T6 T707f29(TC* ac, T0* C);
/* ET_ATTRIBUTE.id */
extern T6 T706f22(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T718f84(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T717f73(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T716f76(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T715f74(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T714f86(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T712f75(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T711f78(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T710f76(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T709f77(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T708f76(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T707f77(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T706f71(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1582f21(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T718f125(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T717f115(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T716f121(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T715f118(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T714f127(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T712f117(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T711f123(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T710f120(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T709f115(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T708f112(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T707f119(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T706f108(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T718f124(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T717f114(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T716f120(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T715f117(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T714f126(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T712f116(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T711f122(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T710f119(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T709f114(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T708f111(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T707f118(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T706f107(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T718f123(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T717f113(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T716f119(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T715f116(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T714f125(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T712f115(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T711f121(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T710f118(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T709f113(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T708f110(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T707f117(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T706f106(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T718f122(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T717f112(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T716f118(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T715f115(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T714f124(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T712f114(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T711f120(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T710f117(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T709f112(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T708f109(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T707f116(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T706f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T718f121(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T717f111(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T716f117(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T715f114(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T714f123(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T712f113(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T711f119(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T710f116(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T709f111(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T708f108(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T707f115(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T706f104(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T718f120(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T717f110(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T716f116(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T715f113(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T714f122(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T712f112(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T711f118(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T710f115(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T709f110(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T708f107(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T707f114(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T706f103(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T718f83(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T717f72(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T716f75(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T715f73(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T714f85(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T712f74(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T711f77(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T710f75(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T709f76(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T709f80(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T708f75(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T708f79(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T707f76(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T706f70(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T706f74(TC* ac, T0* C);
/* ET_PARENT_FEATURE.alias_names */
extern T0* T1582f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].wipe_out */
extern void T1143f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1143f60(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1143f59(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1143f58(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1143f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].unset_found_item */
extern void T1143f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1143f56(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_next_cursor */
extern void T1731f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_after */
extern void T1731f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].forth */
extern void T1143f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_forth */
extern void T1143f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1143f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_position */
extern void T1731f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1143f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_item */
extern T6 T1143f23(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_LIST.put_first */
extern void T907f6(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.fixed_array */
extern T0* T907f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1143f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_item */
extern T0* T1143f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1143f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].after */
extern T1 T1143f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_after */
extern T1 T1143f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].after */
extern T1 T1731f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].start */
extern void T1143f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_start */
extern void T1143f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_off */
extern T1 T1143f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].off */
extern T1 T1731f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].is_empty */
extern T1 T1143f33(TC* ac, T0* C);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T907c5(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove */
extern void T1143f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_position */
extern void T1143f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_put */
extern void T1143f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_put */
extern void T1143f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_keep_head */
extern void T1143f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_keep_head */
extern void T1143f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_put */
extern void T1143f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_put */
extern void T1143f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_cursors_forth */
extern void T1143f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].internal_set_key_equality_tester */
extern void T1143f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_item */
extern T6 T1143f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].hash_position */
extern T6 T1143f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1143f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].search_position */
extern void T1143f47(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T268f16(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T183f12(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1582f18(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1582f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T63f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T1466c986(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T42f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].force_last */
extern void T1143f40(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].resize */
extern void T1143f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_resize */
extern void T1143f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1143s36(TC* ac);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_resize */
extern void T1143f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_resize */
extern void T1143f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_resize */
extern void T1143f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_modulus */
extern T6 T1143f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_capacity */
extern T6 T1143f22(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T236f57(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T63f314(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T1466c1002(TC* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T1466f137(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T63f63(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T42f314(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T42f63(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1582f14(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T236f60(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T63f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T1466c1016(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T63f68(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T42f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T42f68(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T63f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T1466c1015(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T42f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T236f59(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T63f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T1466c1014(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T63f67(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T42f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T42f67(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T63f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T1466c1013(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T42f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T63f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T1466c1012(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T63f66(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T42f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T42f66(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T236f58(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1p_error */
extern void T63f323(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1p */
extern T0* T1466c1011(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.upper_name */
extern T0* T184f105(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vfav1p_error */
extern void T42f323(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1n_error */
extern void T63f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1n */
extern T0* T1466c1010(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1n_error */
extern void T42f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4h_error */
extern void T63f321(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4h */
extern T0* T1466c1009(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4h_error */
extern void T42f321(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T718f78(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T717f69(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T716f72(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T715f70(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1m_error */
extern void T63f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1m */
extern T0* T1466c1008(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1m_error */
extern void T42f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4g_error */
extern void T63f319(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4g */
extern T0* T1466c1007(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4g_error */
extern void T42f319(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T718f77(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T717f68(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T716f71(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T715f69(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav3e_error */
extern void T63f318(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3e */
extern T0* T1466c1006(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3e_error */
extern void T42f318(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4f_error */
extern void T63f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4f */
extern T0* T1466c1005(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4f_error */
extern void T42f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfav2e_error */
extern void T63f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2e */
extern T0* T1466c1004(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2e_error */
extern void T42f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T718f76(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T717f67(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T716f70(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T715f68(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4e_error */
extern void T63f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4e */
extern T0* T1466c1003(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4e_error */
extern void T42f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1585f20(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T236f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].wipe_out */
extern void T1131f14(TC* ac, T0* C);
/* SPECIAL [ET_CLIENT_LIST].keep_head */
extern void T1707f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].set_count */
extern void T1707f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_all_cursors_after */
extern void T1131f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_next_cursor */
extern void T1708f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_after */
extern void T1708f6(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.aggregated_clients */
extern T0* T236f31(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_FEATURE_FLATTENER.aggregated_clients */
extern T0* T236f31ac1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T78f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].wipe_out */
extern void T1132f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_wipe_out */
extern void T1132f66(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_wipe_out */
extern void T1132f65(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_wipe_out */
extern void T1132f64(TC* ac, T0* C);
/* SPECIAL [ET_CLASS].keep_head */
extern void T779f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS].set_count */
extern void T779f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_wipe_out */
extern void T1132f63(TC* ac, T0* C);
/* SPECIAL [ET_CLIENT].keep_head */
extern void T1712f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].set_count */
extern void T1712f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].unset_found_item */
extern void T1132f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].move_all_cursors_after */
extern void T1132f62(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_next_cursor */
extern void T1710f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_after */
extern void T1710f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].back */
extern void T1132f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_back */
extern void T1132f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].add_traversing_cursor */
extern void T1132f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_position */
extern void T1710f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].remove_traversing_cursor */
extern void T1132f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_before */
extern void T1710f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_item */
extern T6 T1132f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_for_iteration */
extern T0* T1132f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1132f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_item */
extern T0* T1132f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].before */
extern T1 T1132f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_before */
extern T1 T1132f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].before */
extern T1 T1710f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].finish */
extern void T1132f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_finish */
extern void T1132f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_off */
extern T1 T1132f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].off */
extern T1 T1710f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].is_empty */
extern T1 T1132f36(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].for_all */
extern T1 T1913f6(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T2120f8(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1913f12(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1710f17(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1132f75(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T2120f7(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1913f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1710f16(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1132f74(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].item */
extern T0* T2120f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1913f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].key */
extern T0* T1710f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_key */
extern T0* T1132f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_item */
extern T0* T1132f35(TC* ac, T0* C, T6 a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T2120f3(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1710f8(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T2120f6(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1913f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1710f15(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1132f73(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1913f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T2120c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1132f33(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1710c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].keys */
extern T0* T1132f39(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].make */
extern T0* T1913c8(TC* ac, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1913f9(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor_with_table_cursor */
extern T0* T1913f5(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make_with_table_cursor */
extern T0* T2120c9(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].force */
extern void T1132f50(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_put */
extern void T1132f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_put */
extern void T1132f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_put */
extern void T1132f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_item */
extern T6 T1132f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].hash_position */
extern T6 T1132f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].resize */
extern void T1132f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_resize */
extern void T1132f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].special_integer_ */
extern T0* T1132s38(TC* ac);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_resize */
extern void T1132f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_resize */
extern void T1132f68(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].aliased_resized_area */
extern T0* T1711s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT].aliased_resized_area */
extern T0* T1712f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_resize */
extern void T1132f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_modulus */
extern T6 T1132f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_capacity */
extern T6 T1132f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_put */
extern void T1132f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].force */
extern void T1711s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT].fill_with */
extern void T1712f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT].extend */
extern void T1712f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].search_position */
extern void T1132f54(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.is_none */
extern T1 T183f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].item */
extern T0* T1131f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].first */
extern T0* T1131f7(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.add_inherited_clients_to_list */
extern void T236f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_EXPORT.clients */
extern T0* T487f9(TC* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T701f7(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T487f8(TC* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T701f6(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T487f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].force_last */
extern void T1131f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].force */
extern void T1706s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].fill_with */
extern void T1707f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].extend */
extern void T1707f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].resize */
extern void T1131f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1706s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1707f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_capacity */
extern T6 T1131f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].extendible */
extern T1 T1131f9(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T236f51(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T236f56(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1142f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T63f298(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T1466c985(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T605f15(TC* ac, T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T605f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T63f57(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T42f298(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T42f57(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T605f14(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T63f297(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T1466c984(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T608f14(TC* ac, T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T608f16(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T42f297(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T608f13(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.redeclared_clients */
extern T0* T236f28(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T236f55(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T63f313(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T1466c1001(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T42f313(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T63f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T1466c1000(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T63f64(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T42f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T42f64(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T63f311(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T1466c999(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T42f311(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T63f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T1466f998(TC* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T1466c997(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T42f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T63f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T1466c996(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T42f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T63f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T1466c995(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T42f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.ise_19_01_0 */
extern T0* T236s30(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T63f307(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T1466c994(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T63f62(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T42f307(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T42f62(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T63f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T1466c993(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.first_alias_name */
extern T0* T1466f196(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T63f61(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T42f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T42f61(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T63f305(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T1466c992(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T42f305(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T63f304(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T1466c991(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T42f304(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T718f86(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T717f75(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T716f78(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T715f76(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T714f88(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T712f77(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T711f80(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T710f78(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T709f79(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T708f78(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T707f79(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T706f73(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1587f19(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T718f85(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T716f77(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T715f75(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T714f87(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T712f76(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T711f79(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T710f77(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T709f78(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T708f77(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T707f78(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T706f72(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T717f74(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T236f53(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_feature_validity */
extern void T1141f13(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T63f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T1466c970(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T63f46(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T42f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T42f46(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T236f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1125f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T1125f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1697f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T1125f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T1125f55(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T236f39(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T236f37(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1139f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T236f36(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1140f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1140f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T236f34(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_flattening_error */
extern void T70f278(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T236c32(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_map */
extern T0* T1143c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1143f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_sparse_container */
extern void T1143f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1143f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_cursor */
extern T0* T1143f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].make */
extern T0* T1731c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_slots */
extern void T1143f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_clashes */
extern void T1143f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_key_storage */
extern void T1143f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_item_storage */
extern void T1143f72(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1142c10(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern T0* T1142f6(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1142f7(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1142f10p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1142s5(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1141c12(TC* ac, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern void T1141f12p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_map */
extern T0* T1730c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_with_equality_testers */
extern void T1730f34(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_sparse_container */
extern void T1730f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].set_internal_cursor */
extern void T1730f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_cursor */
extern T0* T1730f24(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make */
extern T0* T2020c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_slots */
extern void T1730f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_clashes */
extern void T1730f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_key_storage */
extern void T1730f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_item_storage */
extern void T1730f36(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make */
extern T0* T2021s1(TC* ac, T6 a1);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make_empty */
extern T0* T2023c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].default_create */
extern T0* T2021c3(TC* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1140c8(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1140f8p1(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1140s5(TC* ac);
/* ET_PARENT_CHECKER2.make */
extern T0* T1139c9(TC* ac, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T1139f9p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1139s5(TC* ac);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1137c8(TC* ac, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make_default */
extern T0* T1726c10(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make */
extern void T1726f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1456c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1816s1(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1816c3(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern void T240f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T240c17(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_map */
extern T0* T2015c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_with_equality_testers */
extern void T2015f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_sparse_container */
extern void T2015f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].set_internal_cursor */
extern void T2015f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_cursor */
extern T0* T2015f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T2176c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_slots */
extern void T2015f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_clashes */
extern void T2015f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_key_storage */
extern void T2015f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_item_storage */
extern void T2015f55(TC* ac, T0* C, T6 a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1137f8p1(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1137s7(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1136c6(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1136f6p1(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1136s4(TC* ac);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1135c7(TC* ac, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1135s5(TC* ac);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_map */
extern T0* T1132c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_with_equality_testers */
extern void T1132f42(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_sparse_container */
extern void T1132f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1132f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_slots */
extern void T1132f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_clashes */
extern void T1132f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_key_storage */
extern void T1132f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_item_storage */
extern void T1132f44(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].make */
extern T0* T1711s1(TC* ac, T6 a1);
/* SPECIAL [ET_CLIENT].make_empty */
extern T0* T1712c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].default_create */
extern T0* T1711c3(TC* ac);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].make */
extern T0* T1131c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].set_internal_cursor */
extern void T1131f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_cursor */
extern T0* T1131f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].make */
extern T0* T1708c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].make */
extern T0* T1706s1(TC* ac, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].make_empty */
extern T0* T1707c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].default_create */
extern T0* T1706c3(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1128f36(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T236s24(TC* ac);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1129c2(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T1128c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1128f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T1128f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_internal_cursor */
extern void T1128f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1128f32(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1705c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T1128f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T1128f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T1128f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T1128f58(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T236s22(TC* ac);
/* ET_FEATURE_FLATTENER.make */
extern void T236f32p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T236f23(TC* ac, T0* C);
/* ET_CLASS.set_features_flattened */
extern void T70f321(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T235f14(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T235f16(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T63f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T1466c933(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T781f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T781f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T69f38(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T69f39(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T781f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T69f40(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T781f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T69f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T781f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T69f37(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_after */
extern void T781f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T781f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].before */
extern T1 T781f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T63f30(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T42f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T42f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T69f13(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T235f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T1121f13(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1691f35(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1691f46(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1691f45(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1691f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1691f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1691f42(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1691f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1988f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_after */
extern void T1988f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T69f27(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T69f21(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T1121f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T69f10(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T235f20(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1123f9(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T235f19(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1124f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].wipe_out */
extern void T1694f12(TC* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].keep_head */
extern void T1989f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].set_count */
extern void T1989f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].move_all_cursors_after */
extern void T1694f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].set_next_cursor */
extern void T1991f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].set_after */
extern void T1991f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_constraint_base_types */
extern void T1124f28(TC* ac, T0* C, T0* a1);
extern T1 T1124f28ot1(TC* ac, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.put_first */
extern void T1696f15(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.fixed_array */
extern T0* T1696f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].default_create */
extern T0* T1990c3(TC* ac);
/* ET_BASE_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern T0* T1696c14(TC* ac, T0* a1, T6 a2);
/* ET_BASE_TYPE_CONSTRAINT_LIST.make_empty_with_capacity */
extern void T1696f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1990s1(TC* ac, T6 a1);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].make_empty */
extern T0* T1989c5(TC* ac, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.tokens */
extern T0* T1696s5(TC* ac);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].item */
extern T0* T1694f6(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_types */
extern void T695f90(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].first */
extern T0* T1694f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.base_type_constraint */
extern T0* T1124f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1124s14(TC* ac);
/* ET_FORMAL_PARAMETER_CHECKER1.set_recursive_formal_constraints */
extern void T1124f27(TC* ac, T0* C, T0* a1);
extern T1 T1124f27ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_recursive_formal_constraints */
extern void T695f89(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].item */
extern T10 T1695f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].replace */
extern void T1695f12(TC* ac, T0* C, T10 a1, T6 a2);
/* ET_FORMAL_PARAMETER_CHECKER1.add_n_flags_to_list */
extern void T1124f30(TC* ac, T0* C, T10 a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [NATURAL_32].force_last */
extern void T1695f13(TC* ac, T0* C, T10 a1);
/* DS_ARRAYED_LIST [NATURAL_32].resize */
extern void T1695f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].new_capacity */
extern T6 T1695f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].extendible */
extern T1 T1695f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].wipe_out */
extern void T1695f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [NATURAL_32].move_all_cursors_after */
extern void T1695f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].set_next_cursor */
extern void T1992f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].set_after */
extern void T1992f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.propagate_recursive_formal_dependencies */
extern void T1124f26(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1124f25(TC* ac, T0* C, T0* a1);
extern T1 T1124f25ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T63f541(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T1466c1229(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T63f156(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T42f541(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T42f156(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T63f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T1466c1228(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T63f155(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T42f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T42f155(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.initalize_base_type_dependencies */
extern void T1124f23(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.initalize_formal_dependencies */
extern void T1124f22(TC* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T235f18(TC* ac, T0* C);
/* ET_CLASS.set_conforming_ancestors */
extern void T70f320(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T70f319(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].wipe_out */
extern void T1122f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_wipe_out */
extern void T1122f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_wipe_out */
extern void T1122f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_wipe_out */
extern void T1122f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_wipe_out */
extern void T1122f50(TC* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE].keep_head */
extern void T1197f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].set_count */
extern void T1197f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].unset_found_item */
extern void T1122f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].move_all_cursors_after */
extern void T1122f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_next_cursor */
extern void T1692f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_after */
extern void T1692f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].forth */
extern void T1122f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_forth */
extern void T1122f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].add_traversing_cursor */
extern void T1122f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_position */
extern void T1692f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].remove_traversing_cursor */
extern void T1122f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_item */
extern T6 T1122f24(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T782f8(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].force */
extern void T1198s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].fill_with */
extern void T1197f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].extend */
extern void T1197f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_for_iteration */
extern T0* T1122f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_item */
extern T0* T1122f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_item */
extern T0* T1122f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1122f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_after */
extern T1 T1122f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1692f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].start */
extern void T1122f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_start */
extern void T1122f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_off */
extern T1 T1122f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].off */
extern T1 T1692f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].is_empty */
extern T1 T1122f22(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T235f23(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T102f100(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T102f123(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T202f16(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T184f121(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T184f120(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T184f123(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T2190f15(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T695f77(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T504f79(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1469f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T853f78(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T729f81(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T728f84(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T726f82(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T724f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T200f76(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T102f128(TC* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T70f267(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T695f76(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T695f80(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f80ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T729f83(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T728f86(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T728f106(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T728f105(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T726f84(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.set_type_mark */
extern void T726f107(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.twin */
extern T0* T726f88(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T200f83(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.set_current_keyword */
extern void T200f99(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T504f78(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T504f82(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f82ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T853f77(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T853f81(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f81ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T729f80(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T729f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T728f83(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T728f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T726f81(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T726f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T200f75(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T200f81(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T70f266(TC* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T70f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T2191f15(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T510f26(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T186f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].force_last_new */
extern void T1122f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_put */
extern void T1122f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_put */
extern void T1122f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_put */
extern void T1122f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_put */
extern void T1122f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_item */
extern T6 T1122f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].hash_position */
extern T6 T1122f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].resize */
extern void T1122f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_resize */
extern void T1122f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].special_integer_ */
extern T0* T1122s37(TC* ac);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_resize */
extern void T1122f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_resize */
extern void T1122f64(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].aliased_resized_area */
extern T0* T1198s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].aliased_resized_area */
extern T0* T1197f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_item */
extern T0* T1122f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_resize */
extern void T1122f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_modulus */
extern T6 T1122f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_capacity */
extern T6 T1122f34(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T63f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T1466c940(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T63f36(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T42f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T42f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found_item */
extern T0* T1122f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found */
extern T1 T1122f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search */
extern void T1122f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search_position */
extern void T1122f54(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr2a_error */
extern void T63f253(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr2a */
extern T0* T1466c939(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr2_error */
extern T1 T63f35(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr2a_error */
extern void T42f253(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr2_error */
extern T1 T42f35(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_frozen */
extern T1 T70f229(TC* ac, T0* C);
/* ET_CLASS.has_frozen_mark */
extern T1 T70f259(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T63f252(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T1466c938(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T63f34(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T42f252(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T42f34(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T63f250(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T1466c936(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T63f32(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T42f250(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T42f32(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T63f249(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T1466c935(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T63f31(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T42f249(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T42f31(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T63f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T1466c934(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T42f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.is_conforming */
extern T1 T182f8(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T235f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T69f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T1121f12(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T235f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.system_object_type */
extern T0* T806f87(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_object_type */
extern T0* T87f90(TC* ac, T0* C);
/* ET_SYSTEM.system_object_type */
extern T0* T50f89(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_universe */
extern T0* T235f11(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T235f22(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T1121f15(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T1121f19(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T1121f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T1121f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1691f33(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1691f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1691f23(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1691f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1691f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1691f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1691f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1691f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1691f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T1121f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T1121f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put_new */
extern void T1691f37(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1691f54(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1691f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1691f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1691f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1691f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1691f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1691s29(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1691f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1691f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1691f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1691f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T1121f9(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T1121f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1691f21(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T235f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors_error */
extern void T70f277(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T235c13(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1124c20(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].make */
extern T0* T1695c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].set_internal_cursor */
extern void T1695f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].new_cursor */
extern T0* T1695f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].make */
extern T0* T1992c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1694c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].set_internal_cursor */
extern void T1694f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].new_cursor */
extern T0* T1694f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1991c5(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1124f20p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.make */
extern T0* T1123c8(TC* ac, T0* a1);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T1123s5(TC* ac);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_map */
extern T0* T1122c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_with_equality_testers */
extern void T1122f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_sparse_container */
extern void T1122f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].set_internal_cursor */
extern void T1122f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T1122f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1692c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_slots */
extern void T1122f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_clashes */
extern void T1122f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_key_storage */
extern void T1122f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_item_storage */
extern void T1122f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T1121c11(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T1121f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1691c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1691f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1691f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].set_internal_cursor */
extern void T1691f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1691f32(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1988c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1691f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1691f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1691f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1691f56(TC* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T235f13p1(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T235s9(TC* ac);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T235f10(TC* ac, T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T70f318(TC* ac, T0* C);
/* ET_PROVIDER_CHECKER.process_class */
extern void T234f7(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.internal_process_class */
extern void T234f9(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T234f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T63f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcdep */
extern T0* T2031c25(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].forth */
extern void T2173f12(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_forth */
extern void T1968f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].add_traversing_cursor */
extern void T1968f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_next_cursor */
extern void T2173f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_position */
extern void T2173f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].remove_traversing_cursor */
extern void T1968f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_after */
extern void T2173f13(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_item */
extern T6 T1968f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].key */
extern T0* T2173f4(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_key */
extern T0* T1968f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_item */
extern T0* T1968f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].after */
extern T1 T2173f6(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].start */
extern void T2173f11(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_start */
extern void T1968f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_off */
extern T1 T1968f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].off */
extern T1 T2173f8(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_cursor */
extern T0* T1968f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].make */
extern T0* T2173c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].is_empty */
extern T1 T1968f23(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T63f29(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcdep_error */
extern void T42f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T42f29(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T63f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcpro */
extern T0* T2031c24(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T63f28(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcpro_error */
extern void T42f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T42f28(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T1580f10(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1580f10ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1580f10ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1580f10ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1580f10ac4(TC* ac, T0* a1, T0* a2);
extern T1 T1580f10ot1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [STRING_8]].set_rout_disp_final */
extern void T2113f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PREDICATE [TUPLE [LX_WILDCARD]].set_rout_disp_final */
extern void T2110f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T1580f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* LX_DFA_WILDCARD.recognizes */
extern T1 T1967f15(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.longest_end_position */
extern T6 T1967f16(TC* ac, T0* C, T0* a1, T6 a2);
/* LX_DFA_WILDCARD.set_subject */
extern void T1967f22(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.is_compiled */
extern T1 T1967f18(TC* ac, T0* C);
/* ET_ECF_LIBRARY.full_name */
extern T0* T806f104(TC* ac, T0* C, T2 a1);
/* ET_ECF_LIBRARY.relative_name */
extern T0* T806f105(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.name */
extern T0* T828f5(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.name */
extern T0* T208f5(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.name */
extern T0* T830f17(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.name */
extern T0* T825f15(TC* ac, T0* C);
/* ET_ECF_CLUSTER.parent */
extern T0* T89f31(TC* ac, T0* C);
/* ET_CLUSTER.parent */
extern T0* T67f13(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.parent */
extern T0* T263f18(TC* ac, T0* C);
/* ET_NONE_GROUP.parent */
extern T0* T199f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].there_exists */
extern T1 T170f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.full_name */
extern T0* T89f65(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T89f68(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T89f68p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.relative_name */
extern T0* T87f156(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_CLUSTER.full_name */
extern T0* T67f28(TC* ac, T0* C, T2 a1);
/* ET_CLUSTER.relative_name */
extern T0* T67f30(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_CLUSTER.relative_name */
extern T0* T67f30p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_name */
extern T0* T50f121(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.full_name */
extern T0* T263f17(TC* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_name */
extern T0* T263f20(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.full_name */
extern T0* T199f16(TC* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_name */
extern T0* T199f19(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T1580s15(TC* ac);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].there_exists */
extern T1 T1968f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_item */
extern T0* T1968f30(TC* ac, T0* C, T6 a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T1580f13(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T1580f18(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.absolute_pathname */
extern T0* T89f44(TC* ac, T0* C);
/* ET_ECF_CLUSTER.file_system */
extern T0* T89s45(TC* ac);
/* ET_ECF_CLUSTER.unix_file_system */
extern T0* T89s49(TC* ac);
/* ET_ECF_CLUSTER.windows_file_system */
extern T0* T89s46(TC* ac);
/* ET_ECF_CLUSTER.operating_system */
extern T0* T89s61(TC* ac);
/* ET_ECF_CLUSTER.full_pathname */
extern T0* T89f47(TC* ac, T0* C);
/* ET_ECF_LIBRARY.filename */
extern T0* T806f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T805f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM.filename */
extern T0* T87f2(TC* ac, T0* C);
/* ET_ECF_SETTINGS.value */
extern T0* T90f6(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T152s18(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T152f16(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T152s28(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T151f16(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T151s30(TC* ac);
/* ET_ECF_VARIABLES.interpreted_string */
extern T0* T92f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_VARIABLES.expanded_string */
extern T0* T92f9(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_VARIABLES.value */
extern T0* T92f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_VARIABLES.string_ */
extern T0* T92s5(TC* ac);
/* ET_ECF_CLUSTER.execution_environment */
extern T0* T89s60(TC* ac);
/* ET_CLUSTER.absolute_pathname */
extern T0* T67f29(TC* ac, T0* C);
/* ET_CLUSTER.file_system */
extern T0* T67s34(TC* ac);
/* ET_CLUSTER.unix_file_system */
extern T0* T67s37(TC* ac);
/* ET_CLUSTER.windows_file_system */
extern T0* T67s36(TC* ac);
/* ET_CLUSTER.operating_system */
extern T0* T67s35(TC* ac);
/* ET_CLUSTER.full_pathname */
extern T0* T67f33(TC* ac, T0* C);
/* ET_CLUSTER.execution_environment */
extern T0* T67s32(TC* ac);
/* ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T263f19(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.file_system */
extern T0* T263s24(TC* ac);
/* ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T263s28(TC* ac);
/* ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T263s27(TC* ac);
/* ET_UNKNOWN_GROUP.operating_system */
extern T0* T263s26(TC* ac);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T263f23(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T263f25(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.execution_environment */
extern T0* T263s22(TC* ac);
/* ET_NONE_GROUP.absolute_pathname */
extern T0* T199f18(TC* ac, T0* C);
/* ET_NONE_GROUP.file_system */
extern T0* T199s23(TC* ac);
/* ET_NONE_GROUP.unix_file_system */
extern T0* T199s27(TC* ac);
/* ET_NONE_GROUP.windows_file_system */
extern T0* T199s26(TC* ac);
/* ET_NONE_GROUP.operating_system */
extern T0* T199s25(TC* ac);
/* ET_NONE_GROUP.full_pathname */
extern T0* T199f22(TC* ac, T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T199f24(TC* ac, T0* C);
/* ET_NONE_GROUP.execution_environment */
extern T0* T199s21(TC* ac);
/* ET_CLASS.first_non_override_overridden_class */
extern T0* T70f159(TC* ac, T0* C);
/* ET_CLASS.master_class_in_universe */
extern T0* T70f177(TC* ac, T0* C);
/* ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T234f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T89f56(TC* ac, T0* C);
/* ET_CLUSTER.scm_write_mapping_recursive */
extern T0* T67f17(TC* ac, T0* C);
/* ET_PROVIDER_CHECKER.set_fatal_error */
extern void T234f8(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern T0* T234c6(TC* ac, T0* a1);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T234s3(TC* ac);
/* ET_PROVIDER_CHECKER.error_handler */
extern T0* T234f4(TC* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T239f2(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.process_class */
extern void T237f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T1144f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T1144f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T1144f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_keep_head */
extern void T1144f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_keep_head */
extern void T1144f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T1144f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1734f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1734f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_after */
extern void T1734f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T1144f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].last */
extern T0* T1144f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T1144f28(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T237f16(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T237f20(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T237f23(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vggc3b_error */
extern void T63f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vggc3b */
extern T0* T1466c1023(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.types_to_text */
extern T0* T1910f5(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.append_types_to_string */
extern void T1910f18(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.types_to_text */
extern T0* T1696f12(TC* ac, T0* C);
/* ET_BASE_TYPE_CONSTRAINT_LIST.append_types_to_string */
extern void T1696f17(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vggc3_error */
extern T1 T63f70(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc3b_error */
extern void T42f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vggc3_error */
extern T1 T42f70(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vggc3a_error */
extern void T63f334(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vggc3a */
extern T0* T1466c1022(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vggc3a_error */
extern void T42f334(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc3c_error */
extern void T63f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc3c */
extern T0* T1466c1021(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc3c_error */
extern void T42f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc3d_error */
extern void T63f332(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vggc3d */
extern T0* T1466c1020(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vggc3d_error */
extern void T42f332(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T63f331(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T1466c1019(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T42f331(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INTERFACE_CHECKER.check_constraint_renamings_validity */
extern void T237f19(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_renaming_validity */
extern void T237f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T237f22ot1(TC* ac, T0* a1);
extern T1 T237f22ot2(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].wipe_out */
extern void T1148f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_wipe_out */
extern void T1148f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1148f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1148f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1148f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].unset_found_item */
extern void T1148f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1148f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].set_next_cursor */
extern void T1744f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].set_after */
extern void T1744f7(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_not_renamed_names_validity */
extern void T237f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1t_error */
extern void T63f351(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1t */
extern T0* T1466c1039(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1t_error */
extern void T42f351(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav1s_error */
extern void T63f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1s */
extern T0* T1466c1038(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1s_error */
extern void T42f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav3g_error */
extern void T63f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav3g */
extern T0* T1466c1037(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav3g_error */
extern void T42f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav2g_error */
extern void T63f348(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav2g */
extern T0* T1466c1036(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav2g_error */
extern void T42f348(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found_key */
extern T0* T1148f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_item */
extern T0* T1148f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found_item */
extern T0* T1148f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_item */
extern T0* T1148f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found */
extern T1 T1148f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].search */
extern void T1148f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].search_position */
extern void T1148f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].hash_position */
extern T6 T1148f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_item */
extern T6 T1148f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_item */
extern T6 T1148f24(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vggc2f_error */
extern void T63f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2f */
extern T0* T1466c1035(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vggc2_error */
extern T1 T63f69(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc2f_error */
extern void T42f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vggc2_error */
extern T1 T42f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].has */
extern T1 T1147f29(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_renamed_names_validity */
extern void T237f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc2e_error */
extern void T63f346(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vggc2e */
extern T0* T1466c1034(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vggc2e_error */
extern void T42f346(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1r_error */
extern void T63f345(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1r */
extern T0* T1466c1033(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1r_error */
extern void T42f345(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4l_error */
extern void T63f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4l */
extern T0* T1466c1032(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4l_error */
extern void T42f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1q_error */
extern void T63f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1q */
extern T0* T1466c1031(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1q_error */
extern void T42f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4k_error */
extern void T63f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4k */
extern T0* T1466c1030(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4k_error */
extern void T42f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3f_error */
extern void T63f341(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav3f */
extern T0* T1466c1029(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav3f_error */
extern void T42f341(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4j_error */
extern void T63f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4j */
extern T0* T1466c1028(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4j_error */
extern void T42f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].put_new */
extern void T1148f41(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_put */
extern void T1148f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_put */
extern void T1148f57(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_put */
extern void T1148f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_put */
extern void T1148f53(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2f_error */
extern void T63f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav2f */
extern T0* T1466c1027(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav2f_error */
extern void T42f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item */
extern T0* T1148f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].has */
extern T1 T1148f29(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav4i_error */
extern void T63f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4i */
extern T0* T1466c1026(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4i_error */
extern void T42f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vggc2a_error */
extern void T63f337(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2a */
extern T0* T1466c1025(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc2a_error */
extern void T42f337(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc2d_error */
extern void T63f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vggc2d */
extern T0* T1466c1024(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vggc2d_error */
extern void T42f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].resize */
extern void T1148f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_resize */
extern void T1148f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].special_integer_ */
extern T0* T1148s32(TC* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_resize */
extern void T1148f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_resize */
extern void T1148f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_resize */
extern void T1148f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].new_modulus */
extern T6 T1148f34(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vggc2c_error */
extern void T63f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2c */
extern T0* T1466c1018(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.tuple_keyword */
extern T0* T184f4(TC* ac, T0* C);
/* ET_CLASS_TYPE.name */
extern T0* T102f2(TC* ac, T0* C);
/* ET_CLASS.name */
extern T0* T70f1(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vggc2c_error */
extern void T42f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc2b_error */
extern void T63f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2b */
extern T0* T1466c1017(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc2b_error */
extern void T42f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T237f18(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T237f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1146f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T237f17(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1145f15(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T237f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_interface_error */
extern void T70f279(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T237c13(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1148f38(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.alias_name_tester */
extern T0* T237s11(TC* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_map */
extern T0* T1148c37(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1148f44(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_sparse_container */
extern void T1148f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].set_internal_cursor */
extern void T1148f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].new_cursor */
extern T0* T1148f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].make */
extern T0* T1744c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_slots */
extern void T1148f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_clashes */
extern void T1148f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_key_storage */
extern void T1148f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_item_storage */
extern void T1148f60(TC* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern T0* T237s9(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1146c6(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1146f6p1(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1146s4(TC* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_classes_to_be_processed */
extern void T1145f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1145c13(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_feature_flattening_error_only */
extern void T891f10(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1145f13p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T1144c32(TC* ac, T6 a1);
/* DS_HASH_SET [ET_CLASS].set_internal_cursor */
extern void T1144f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T1144f29(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1734c6(TC* ac, T0* a1);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T1144f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T1144f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T1144f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T1144f34(TC* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.make */
extern void T237f13p1(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T237s10(TC* ac);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T237f12(TC* ac, T0* C);
/* ET_CLASS.set_interface_checked */
extern void T70f324(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].force_last */
extern void T845f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_put */
extern void T845f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_put */
extern void T845f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_put */
extern void T845f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_item */
extern T6 T845f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].hash_position */
extern T6 T845f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].resize */
extern void T845f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_resize */
extern void T845f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].special_integer_ */
extern T0* T845s30(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_resize */
extern void T845f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_resize */
extern void T845f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_item */
extern T0* T845f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_item */
extern T6 T845f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_resize */
extern void T845f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_modulus */
extern T6 T845f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_capacity */
extern T6 T845f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_put */
extern void T845f39(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].search_position */
extern void T845f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].unset_found_item */
extern void T845f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].found_item */
extern T0* T845f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_item */
extern T0* T845f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].found */
extern T1 T845f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].search */
extern void T845f34(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_canonical_to_string */
extern void T70f316(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_canonical_to_string */
extern void T510f32(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_canonical_actual_parameter_to_string */
extern void T695f96(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_canonical_to_string */
extern void T695f97(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T695f99(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.reference_keyword */
extern T0* T81s843(TC* ac);
/* ET_TOKEN_CONSTANTS.expanded_keyword */
extern T0* T81s842(TC* ac);
/* ET_FORMAL_PARAMETER.append_canonical_actual_parameter_to_string */
extern void T504f90(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_canonical_to_string */
extern void T504f91(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T504f92(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_canonical_to_string */
extern void T184f128(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_canonical_to_string */
extern void T2191f25(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T1469f14(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T1469f14p1(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_canonical_to_string */
extern void T853f90(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T853f91(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_canonical_to_string */
extern void T729f95(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T729f96(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_canonical_to_string */
extern void T728f99(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_canonical_to_string */
extern void T726f99(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T726f100(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_canonical_to_string */
extern void T200f92(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T200f93(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.tokens */
extern T0* T1469s7(TC* ac);
/* ET_QUALIFIED_LIKE_TYPE.type_mark */
extern T0* T729f2(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_mark */
extern T0* T728f2(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type_mark */
extern T0* T726f2(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_mark */
extern T0* T200f1(TC* ac, T0* C);
/* ET_CLASS.class_mark */
extern T0* T70f36(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_mark */
extern T0* T184f2(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_mark */
extern T0* T102f1(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_canonical_actual_parameter_to_string */
extern void T853f88(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_canonical_actual_parameter_to_string */
extern void T729f93(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_canonical_actual_parameter_to_string */
extern void T728f98(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_canonical_actual_parameter_to_string */
extern void T726f98(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T724f14(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T724f14p1(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.tokens */
extern T0* T724s7(TC* ac);
/* ET_LIKE_CURRENT.append_canonical_actual_parameter_to_string */
extern void T200f91(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_canonical_actual_parameter_to_string */
extern void T184f131(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_canonical_actual_parameter_to_string */
extern void T102f137(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_canonical_actual_parameter_to_string */
extern void T70f330(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_canonical_to_string */
extern void T186f31(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_canonical_to_string */
extern void T102f134(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T202f20(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T2190f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.type_name_buffer */
extern T0* T95f66(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_dynamic_primary_type */
extern T0* T95f65(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.register_dynamic_type */
extern void T95f102(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_conforming_ancestors */
extern void T95f112(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.null_system_processor */
extern T0* T81s600(TC* ac);
/* ET_SYSTEM_PROCESSOR.make_null */
extern void T66f51(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern T0* T66c51(TC* ac);
/* ET_SYSTEM_PROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T66f58(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_unknown_builtin_reported_only */
extern void T66f57(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_preparse_shallow_mode_only */
extern void T66f56(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_default_keyword_usage_only */
extern void T66f55(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_use_detachable_keyword_only */
extern void T66f63(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attached_keyword_only */
extern void T66f62(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_reference_keyword_only */
extern void T66f61(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_note_keyword_only */
extern void T66f60(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attribute_keyword_only */
extern void T66f59(TC* ac, T0* C, T1 a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T242c3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_error_handler */
extern T0* T81s64(TC* ac);
/* ET_NULL_ERROR_HANDLER.make_null */
extern T0* T63c193(TC* ac);
/* ET_NULL_ERROR_HANDLER.make_null */
extern void T63f193p1(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T63s26(TC* ac);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T230c3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_ast_processor */
extern T0* T81s63(TC* ac);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T239c1(TC* ac);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern T0* T81s62(TC* ac);
/* ET_AST_FACTORY.make */
extern T0* T65c374(TC* ac);
/* ET_SYSTEM_PROCESSOR.tokens */
extern T0* T66s42(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make_default */
extern T0* T240c16(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].default_capacity */
extern T6 T240f7(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.conforming_ancestors */
extern T0* T1060f12(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforming_ancestors */
extern T0* T1059f12(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.conforming_ancestors */
extern T0* T904f12(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.conforming_ancestors */
extern T0* T978f12(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.conforming_ancestors */
extern T0* T843f12(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T1060f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T1059f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T904f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T978f80(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_next_type */
extern void T843f77(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_index */
extern void T70f315(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T1060f80(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T1059f80(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T904f77(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T978f79(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_hash_code */
extern void T843f76(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.make */
extern T0* T843c70(TC* ac, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T942c37(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T942f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T942f18(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T988c9(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T942f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T942f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T942f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T942f43(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.empty_features */
extern T0* T843f45(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T844c14(TC* ac);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T95f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T1060c74(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T1060f95(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T1060f67(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern T0* T95f74(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T95f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T95f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T1059c74(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T1059f95(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T1059f67(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T95f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T95f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T904c71(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T904f85(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T904f56(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T95f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T978c73(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T978f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T978f59(TC* ac, T0* C);
/* ET_TUPLE_TYPE.same_as_base_class */
extern T1 T184f12(TC* ac, T0* C);
/* ET_CLASS_TYPE.same_as_base_class */
extern T1 T102f12(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T695f19(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T695f19ot1(TC* ac, T0* a1);
extern T1 T695f19ot2(TC* ac, T0* a1);
extern T1 T695f19ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T504f18(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T504f18ot1(TC* ac, T0* a1);
extern T1 T504f18ot2(TC* ac, T0* a1);
extern T1 T504f18ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T726f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T853f13(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T853f13ot1(TC* ac, T0* a1);
extern T1 T853f13ot2(TC* ac, T0* a1);
extern T1 T853f13ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T729f13(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T729f13ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T728f16(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T728f16ot1(TC* ac, T0* a1);
/* ET_CLASS.base_type_with_type_mark */
extern T0* T70f151(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T510f6(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T200f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T852f25(TC* ac, T0* C, T0* a1);
extern T1 T852f25ot1(TC* ac, T0* a1);
/* ET_LIKE_N.base_type_with_type_mark */
extern T0* T1290f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T184f38(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_with_type_mark */
extern T0* T70f155(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T102f38(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T184f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T2191f16(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T695f57(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T504f58(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1469f4(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T853f33(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T729f35(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T728f36(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T726f25(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T724f5(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T200f28(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T184f54(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T102f53(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T70f186(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T186f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T102f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T202f2(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T2190f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.next_type */
extern T0* T1060f18(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.next_type */
extern T0* T1059f18(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.next_type */
extern T0* T904f22(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.next_type */
extern T0* T978f22(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.next_type */
extern T0* T843f19(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T695f39(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T504f41(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T726f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T853f12(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T729f12(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T728f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T70f150(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T200f8(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T184f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T102f125(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_tuple_class */
extern T1 T70f123(TC* ac, T0* C);
/* ET_CLASS.is_generic */
extern T1 T70f122(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T695f38(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T504f40(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T726f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T853f11(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T729f11(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T728f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T70f149(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T200f7(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T184f6(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T102f118(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_type_mark */
extern T0* T81s595(TC* ac);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T95s75(TC* ac);
/* ET_DYNAMIC_SECONDARY_TYPE.base_type */
extern T0* T981f9(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_index */
extern void T1467f12(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT.set_index */
extern void T495f11(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T307f129(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1467f8(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T495f8(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T863f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1467f7(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T495f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T865f29(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T850f28(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T501f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T863c9(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE.arguments */
extern T0* T718f1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments */
extern T0* T716f1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments */
extern T0* T714f1(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.arguments */
extern T0* T712f1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments */
extern T0* T711f1(TC* ac, T0* C);
/* ET_DO_FUNCTION.arguments */
extern T0* T710f1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T709f47(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T708f45(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T707f50(TC* ac, T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T706f43(TC* ac, T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T543f17(TC* ac, T0* C);
/* ET_DO_PROCEDURE.arguments */
extern T0* T715f3(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments */
extern T0* T717f5(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T1839f16(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T936f16(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T1061f16(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T1060f82(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T1059f82(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T904f79(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T978f81(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.set_never_void */
extern void T981f31(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.set_never_void */
extern void T843f78(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T847f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T100f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T1061c15(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T1061f20(TC* ac, T0* C, T0* a1);
extern T1 T1061f20ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T847f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].force_last_new */
extern void T867f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_put */
extern void T867f54(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].force */
extern void T1662s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].fill_with */
extern void T1663f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].extend */
extern void T1663f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_put */
extern void T867f53(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_put */
extern void T867f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_put */
extern void T867f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T867f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T867f35(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.hash_code */
extern T6 T981f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].resize */
extern void T867f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_resize */
extern void T867f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T867s36(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T867f60(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T1662s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T1663f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T867f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T867f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_resize */
extern void T867f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T867f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T867f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T867f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T867f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T867f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T867f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T867f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map_default */
extern T0* T867c40(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern void T867f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T867f55(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T867f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T867f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T867f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T1659c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T867f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T867f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T867f64(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T1662s2(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].make_empty */
extern T0* T1663c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T1662c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T867f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].default_capacity */
extern T6 T867f30(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T100f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T847f10(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T847f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T847f9(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T1060f75(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T1059f75(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T904f72(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T978f74(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.set_alive */
extern void T843f71(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T100f124(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.primary_type */
extern T0* T1060f45(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.primary_type */
extern T0* T1059f45(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.primary_type */
extern T0* T904f49(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.primary_type */
extern T0* T978f49(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.primary_type */
extern T0* T843f32(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.primary_type */
extern T0* T981f1(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T95f62(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attached_type */
extern void T1060f79(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attached_type */
extern void T1059f79(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_attached_type */
extern void T904f75(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attached_type */
extern void T978f77(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attached_type */
extern void T843f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attached_separate_type */
extern void T1060f77(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attached_separate_type */
extern void T1059f77(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_attached_separate_type */
extern void T904f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attached_separate_type */
extern void T978f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attached_separate_type */
extern void T843f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_separate_type */
extern void T1060f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_separate_type */
extern void T1059f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_separate_type */
extern void T904f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_separate_type */
extern void T978f75(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_separate_type */
extern void T843f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.make */
extern T0* T981c29(TC* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.base_type */
extern T0* T1060f3(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.base_type */
extern T0* T1059f3(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.base_type */
extern T0* T978f3(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.base_type */
extern T0* T904f3(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.base_type */
extern T0* T843f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T718f39(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T716f38(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T714f49(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T712f45(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T711f48(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T710f47(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_unique_attribute */
extern T1 T709f44(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T708f42(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T707f47(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T706f40(TC* ac, T0* C);
/* ET_INVARIANTS.is_unique_attribute */
extern T1 T543f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T715f44(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T717f41(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T718f38(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T716f37(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T714f48(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T712f44(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T711f47(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T710f46(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T709f43(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_constant_attribute */
extern T1 T708f41(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T707f46(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T706f39(TC* ac, T0* C);
/* ET_INVARIANTS.is_constant_attribute */
extern T1 T543f28(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T715f43(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T717f40(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T850s35(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_map */
extern T0* T1288c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_with_equality_testers */
extern void T1288f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_sparse_container */
extern void T1288f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].set_internal_cursor */
extern void T1288f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_cursor */
extern T0* T1288f22(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make */
extern T0* T1792c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_slots */
extern void T1288f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_clashes */
extern void T1288f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_key_storage */
extern void T1288f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].make */
extern T0* T1788s2(TC* ac, T6 a1);
/* SPECIAL [ET_CALL_NAME].make_empty */
extern T0* T1785c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].default_create */
extern T0* T1788c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_item_storage */
extern void T1288f37(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].make */
extern T0* T1793s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].make_empty */
extern T0* T1790c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].default_create */
extern T0* T1793c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_map */
extern T0* T1287c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_with_equality_testers */
extern void T1287f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_sparse_container */
extern void T1287f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].set_internal_cursor */
extern void T1287f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_cursor */
extern T0* T1287f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make */
extern T0* T1789c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_slots */
extern void T1287f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_clashes */
extern void T1287f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_key_storage */
extern void T1287f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_item_storage */
extern void T1287f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].make */
extern T0* T1787s2(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].make_empty */
extern T0* T1783c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].default_create */
extern T0* T1787c3(TC* ac);
/* DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32].make */
extern T0* T898c12(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].make */
extern T0* T1349s1(TC* ac, T6 a1);
/* SPECIAL [ET_INVARIANTS].make_empty */
extern T0* T1350c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].default_create */
extern T0* T1349c3(TC* ac);
/* ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T718f45(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_invariants */
extern T1 T716f44(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T714f54(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T712f50(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_invariants */
extern T1 T711f53(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_invariants */
extern T1 T710f52(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T709f49(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T708f47(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T707f52(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_invariants */
extern T1 T706f45(TC* ac, T0* C);
/* ET_INVARIANTS.is_invariants */
extern T1 T543s27(TC* ac);
/* ET_DO_PROCEDURE.is_invariants */
extern T1 T715f42(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T717f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32].make */
extern T0* T897c12(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].make */
extern T0* T1347s1(TC* ac, T6 a1);
/* SPECIAL [ET_POSTCONDITIONS].make_empty */
extern T0* T1348c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].default_create */
extern T0* T1347c3(TC* ac);
/* DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32].make */
extern T0* T896c12(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T1345s1(TC* ac, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].make_empty */
extern T0* T1346c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T1345c3(TC* ac);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T718f41(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T716f40(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T714f52(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T712f47(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T711f50(TC* ac, T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T710f49(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T709f46(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T708f44(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.type */
extern T0* T707f49(TC* ac, T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T706f42(TC* ac, T0* C);
/* ET_INVARIANTS.type */
extern T0* T543f12(TC* ac, T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T715f41(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T717f38(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T718f43(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T716f41(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T714f42(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T712f38(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T711f41(TC* ac, T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T710f40(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T709f36(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T708f34(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T707f39(TC* ac, T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T706f32(TC* ac, T0* C);
/* ET_INVARIANTS.arguments_count */
extern T6 T543f11(TC* ac, T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T715f31(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T717f29(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern T0* T850f34(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T718f40(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T718f40p1(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_static_mark */
extern T1 T718f53(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_class_postcondition_recursive */
extern T1 T718f57(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_class_postcondition_recursive */
extern T1 T717f37(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_class_postcondition_recursive */
extern T1 T716f53(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_class_postcondition_recursive */
extern T1 T715f39(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_class_postcondition_recursive */
extern T1 T714f62(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_class_postcondition_recursive */
extern T1 T712f54(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_class_postcondition_recursive */
extern T1 T711f58(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_class_postcondition_recursive */
extern T1 T710f56(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T709f57(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T708f55(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T707f56(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T706f50(TC* ac, T0* C);
/* ET_POSTCONDITIONS.has_class_assertion */
extern T1 T605f7(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_class_assertion */
extern T1 T534f20(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_class_assertion */
extern T1 T513f23(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_class_assertion */
extern T1 T440f27(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T383f21(TC* ac, T0* C);
/* ET_CALL_AGENT.is_class_assertion */
extern T1 T380f22(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_class_assertion */
extern T1 T377f19(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_class_assertion */
extern T1 T343f32(TC* ac, T0* C);
/* ET_VOID.is_class_assertion */
extern T1 T331f22(TC* ac, T0* C);
/* ET_RESULT.is_class_assertion */
extern T1 T322f23(TC* ac, T0* C);
/* ET_IDENTIFIER.is_class_assertion */
extern T1 T307f60(TC* ac, T0* C);
/* ET_CURRENT.is_class_assertion */
extern T1 T301f26(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T1045f18(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.is_class_assertion */
extern T1 T776f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T768f28(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T767f36(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T766f32(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T765f30(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T764f37(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T763f33(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_class_assertion */
extern T1 T761f17(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_class_assertion */
extern T1 T760f18(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_class_assertion */
extern T1 T759f21(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_class_assertion */
extern T1 T758f20(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_class_assertion */
extern T1 T757f24(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_class_assertion */
extern T1 T756f17(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_class_assertion */
extern T1 T755f19(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_class_assertion */
extern T1 T754f18(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T753f17(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T752f17(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_class_assertion */
extern T1 T749f19(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_class_assertion */
extern T1 T748f17(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_class_assertion */
extern T1 T747f17(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_class_assertion */
extern T1 T746f17(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_class_assertion */
extern T1 T745f17(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_class_assertion */
extern T1 T744f22(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.is_class_assertion */
extern T1 T723s5(TC* ac);
/* ET_C2_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T690f24(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T689f24(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_class_assertion */
extern T1 T688f25(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_class_assertion */
extern T1 T687f25(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_class_assertion */
extern T1 T685f26(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_class_assertion */
extern T1 T684f26(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_class_assertion */
extern T1 T683f28(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T682f28(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T681f28(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_class_assertion */
extern T1 T680f28(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_class_assertion */
extern T1 T679f30(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_class_assertion */
extern T1 T678f29(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_class_assertion */
extern T1 T677f26(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_class_assertion */
extern T1 T676f24(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T675f26(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_class_assertion */
extern T1 T634f23(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_class_assertion */
extern T1 T631f22(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_class_assertion */
extern T1 T617f31(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_class_assertion */
extern T1 T572f24(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_class_assertion */
extern T1 T563f24(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_class_assertion */
extern T1 T593f18(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_static */
extern T1 T716f39(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_static_mark */
extern T1 T716f52(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T714f50(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T714f50p1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_static_mark */
extern T1 T714f58(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_static */
extern T1 T712f46(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_static_mark */
extern T1 T712f53(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_static */
extern T1 T711f49(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_static_mark */
extern T1 T711f57(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_static */
extern T1 T710f48(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_static_mark */
extern T1 T710f55(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T709f45(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T709f45p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_static_mark */
extern T1 T709f54(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T708f43(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T708f43p1(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_static_mark */
extern T1 T708f52(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_static */
extern T1 T707f48(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_static_mark */
extern T1 T707f55(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_static */
extern T1 T706f41(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_static_mark */
extern T1 T706f49(TC* ac, T0* C);
/* ET_INVARIANTS.is_static */
extern T1 T543f26(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_static */
extern T1 T715f40(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_static_mark */
extern T1 T715f53(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_static */
extern T1 T717f36(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_static_mark */
extern T1 T717f51(TC* ac, T0* C);
/* ET_DO_PROCEDURE.make */
extern T0* T715c83(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.tokens */
extern T0* T715s32(TC* ac);
/* ET_DYNAMIC_FUNCTION_TYPE.base_class */
extern T0* T1060f2(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.base_class */
extern T0* T1059f2(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.base_class */
extern T0* T978f2(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.base_class */
extern T0* T904f2(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.base_class */
extern T0* T843f7(TC* ac, T0* C);
/* ET_IDENTIFIER.make */
extern T0* T307c122(TC* ac, T0* a1);
/* ET_C_GENERATOR.close_cpp_file */
extern void T114f741(TC* ac, T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T114f740(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.delete_file */
extern void T152s38(TC* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.delete */
extern void T43f76(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_delete */
extern void T43f79(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_unlink */
extern void T43s81(TC* ac, T14 a1);
/* KL_WINDOWS_FILE_SYSTEM.delete_file */
extern void T151s41(TC* ac, T0* a1);
/* ET_C_GENERATOR.include_file */
extern void T114f739(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T114f742(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T230f9(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T230f9p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T43f77(TC* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T922f10(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T922f10p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T963f44(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T963f44p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_once_per_object_routines */
extern T1 T1060f5(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_once_per_object_routines */
extern T1 T1059f5(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_once_per_object_routines */
extern T1 T904f5(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_once_per_object_routines */
extern T1 T978f5(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_once_per_object_routines */
extern T1 T843f2(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T956f34(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T956f43(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T956f42(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T956f41(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T956f40(TC* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T1430f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T1430f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T956f39(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T956f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T1432f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T1432f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].wipe_out */
extern void T955f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_wipe_out */
extern void T955f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T955f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T955f47(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_CONSTANT].keep_head */
extern void T1427f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].set_count */
extern void T1427f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T955f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T955f44(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_next_cursor */
extern void T1426f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_after */
extern void T1426f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T954f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T954f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T954f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T954f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T954f47(TC* ac, T0* C);
/* SPECIAL [ET_CONSTANT].keep_head */
extern void T1423f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].set_count */
extern void T1423f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T954f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T1422f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_after */
extern void T1422f9(TC* ac, T0* C);
/* ARRAY [INTEGER_32].fill_with */
extern void T953f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].wipe_out */
extern void T952f37(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].slots_wipe_out */
extern void T952f47(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].clashes_wipe_out */
extern void T952f46(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].key_storage_wipe_out */
extern void T952f45(TC* ac, T0* C);
/* SPECIAL [ET_STANDALONE_CLOSURE].keep_head */
extern void T1420f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_STANDALONE_CLOSURE].set_count */
extern void T1420f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].item_storage_wipe_out */
extern void T952f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].move_all_cursors_after */
extern void T952f42(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_STANDALONE_CLOSURE].set_next_cursor */
extern void T1419f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_STANDALONE_CLOSURE].set_after */
extern void T1419f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T961f46(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T961f58(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T961f57(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T961f56(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T961f55(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T961f54(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T961f53(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T1444f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_after */
extern void T1444f9(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T99f45(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T99f63(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T99f62(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T99f61(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T99f60(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T99f59(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T99f31(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T961f45(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T961f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T961f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T1444f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T961f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T961f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T961f30(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T961f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T961f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T961f21(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T961f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T961f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T961f35(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T961f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].after */
extern T1 T1444f4(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T961f44(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T961f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T961f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].off */
extern T1 T1444f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T961f31(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T99f75(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T99f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T99f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T99f68(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_file */
extern void T114f738(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T99f20(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T99f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T99f34(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T99f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T859f4(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].start */
extern void T99f42(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T99f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T99f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].off */
extern T1 T859f8(TC* ac, T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T114f737(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T114f736(TC* ac, T0* C);
/* ET_C_GENERATOR.print_show_console_call */
extern void T114f817(TC* ac, T0* C);
/* ET_C_GENERATOR.temp_variable */
extern T0* T114f230(TC* ac, T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T114f735(TC* ac, T0* C);
extern T1 T114f735ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T95f63(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.runtime_name_to_text */
extern T0* T184f28(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_runtime_name_to_string */
extern void T184f129(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_runtime_name_to_string */
extern void T2191f26(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_runtime_name_to_string */
extern void T695f94(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_runtime_name_to_string */
extern void T504f89(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_runtime_name_to_string */
extern void T853f86(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_runtime_name_to_string */
extern void T729f91(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_runtime_name_to_string */
extern void T728f95(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_runtime_name_to_string */
extern void T726f95(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_runtime_name_to_string */
extern void T200f89(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_runtime_name_to_string */
extern void T70f317(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_runtime_name_to_string */
extern void T510f33(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_runtime_name_to_string */
extern void T102f135(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T202f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T2190f23(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_runtime_name_to_string */
extern void T186f33(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.runtime_name_to_text */
extern T0* T102f28(TC* ac, T0* C);
/* ET_CLASS.runtime_name_to_text */
extern T0* T70f115(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_tuple */
extern T1 T1060f52(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_tuple */
extern T1 T1059f52(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_tuple */
extern T1 T904s63(TC* ac);
/* ET_DYNAMIC_SPECIAL_TYPE.is_tuple */
extern T1 T978f64(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_tuple */
extern T1 T843f61(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.type_id */
extern T6 T1060f47(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.type_id */
extern T6 T1059f47(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.type_id */
extern T6 T904f52(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.type_id */
extern T6 T978f55(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.type_id */
extern T6 T843f47(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.type_id */
extern T6 T981f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T116f14(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T980f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort_with_comparator */
extern void T980f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].subsort_with_comparator */
extern void T980f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].swap */
extern void T116f22(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].replace */
extern void T116f21(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID.less_than */
extern T1 T982f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T116f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].append_last */
extern void T116f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].extend_last */
extern void T116f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T988f14(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_forth */
extern void T942f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].add_traversing_cursor */
extern void T942f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T988f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_position */
extern void T988f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].remove_traversing_cursor */
extern void T942f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T988f10(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T988f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_item */
extern T0* T942f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T988f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T988f13(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_start */
extern void T942f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_off */
extern T1 T942f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].off */
extern T1 T988f6(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T942f21(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T980c2(TC* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_primary_type_comparator */
extern T0* T114s240(TC* ac);
/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID.make */
extern T0* T982c2(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T116c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T116f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T116f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1020c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T0* T956f28(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T956f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T956f29(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T956f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T956f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T956f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T956f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T956f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T956f21(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T114f734(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].forth */
extern void T831f54(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T831f71(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.occurrences */
extern T6 T1078f37(TC* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T1078f57(TC* ac, T0* C, T6 a1);
/* UC_STRING.occurrences */
extern T6 T919f28(TC* ac, T0* C, T2 a1);
/* UC_STRING.code_occurrences */
extern T6 T919f50(TC* ac, T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f42(TC* ac, T0* C, T2 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_for_iteration */
extern T0* T831f38(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_for_iteration */
extern T0* T831f37(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].after */
extern T1 T831f36(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T831f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T964f4(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].start */
extern void T831f53(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T831f70(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_init_const_function */
extern void T114f733(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].forth */
extern void T955f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_forth */
extern void T955f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T955f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_position */
extern void T1426f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T955f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T955f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_item */
extern T0* T955f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_item */
extern T0* T955f36(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T760f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T955f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_key */
extern T0* T955f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T955f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_after */
extern T1 T955f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T1426f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].start */
extern void T955f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_start */
extern void T955f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_off */
extern T1 T955f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].off */
extern T1 T1426f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].is_empty */
extern T1 T955f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T954f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T954f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T954f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T1422f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T954f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T954f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T954f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T954f20(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_status_name */
extern void T114f810(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].has */
extern T1 T952f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T954f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T954f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T954f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T954f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].after */
extern T1 T1422f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T954f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T954f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T954f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].off */
extern T1 T1422f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T954f28(TC* ac, T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T114f732(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T114f731(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T943f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T943f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T943f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T943f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T943f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T943f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T943f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T1404f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T1404f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T943f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_forth */
extern void T943f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].add_traversing_cursor */
extern void T943f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_position */
extern void T1404f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].remove_traversing_cursor */
extern void T943f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T943f24(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T114f807(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].wipe_out */
extern void T940f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_wipe_out */
extern void T940f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_wipe_out */
extern void T940f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T940f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T940f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].unset_found_item */
extern void T940f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].move_all_cursors_after */
extern void T940f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_next_cursor */
extern void T1403f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_after */
extern void T1403f7(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T114f870(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T114f869(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T114f869ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T114f904(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item */
extern T0* T940f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_item */
extern T0* T940f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].search_position */
extern void T940f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].hash_position */
extern T6 T940f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_item */
extern T6 T940f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_item */
extern T6 T940f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_item */
extern T6 T940f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].force_last */
extern void T940f36(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_put */
extern void T940f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_put */
extern void T940f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_put */
extern void T940f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].resize */
extern void T940f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_resize */
extern void T940f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].special_integer_ */
extern T0* T940s31(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_resize */
extern void T940f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_resize */
extern void T940f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_resize */
extern void T940f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_modulus */
extern T6 T940f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_capacity */
extern T6 T940f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_put */
extern void T940f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_for_iteration */
extern T0* T943f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_item */
extern T0* T943f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T943f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T943f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_after */
extern T1 T943f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T1404f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T943f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_start */
extern void T943f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_off */
extern T1 T943f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].off */
extern T1 T1404f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T943f22(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T114f806(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac2(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac3(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac4(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac5(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac7(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac8(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac9(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac10(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac11(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T114f806ac12(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T114f806ot1(TC* ac, T0* a1);
extern T1 T114f806ot2(TC* ac, T0* a1);
extern T1 T114f806ot3(TC* ac, T0* a1);
extern T1 T114f806ot4(TC* ac, T0* a1);
extern T1 T114f806ot5(TC* ac, T0* a1);
extern T1 T114f806ot6(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T114f867(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T114f868(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T114f903(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].force_last_new */
extern void T943f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T943f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T943f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T943f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T943f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T943f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T943f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T943f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T943f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T943s37(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T943f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T943f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T943f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T943f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T943f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T943f34(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T941f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern T0* T941f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T1397c3(TC* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T941f10(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T941f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T941f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T0* T943f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T943f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T943f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T943f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T1060f44(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T1059f44(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T904f58(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T978f65(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_attributes */
extern T1 T843f62(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T951f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T951f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T951f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T951f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T951f48(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T1416f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T1416f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T951f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T1415f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T1415f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T951f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T951f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T951f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T1415f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T951f52(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T114f730(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T951f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T951f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T951f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T951f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T1415f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T951f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T951f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T951f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T1415f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T951f21(TC* ac, T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T114f729(TC* ac, T0* C, T0* a1);
extern T1 T114f729ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T942f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T942f55(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T942f54(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T942f53(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T942f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T942f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T942f39(TC* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T114f728(TC* ac, T0* C, T0* a1);
extern T1 T114f728ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_for_iteration */
extern T0* T942f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T942f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_after */
extern T1 T942f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T942f38(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T114f727(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T114f803(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T114f803ot1(TC* ac, T0* a1);
extern T1 T114f803ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T114f863(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T114f859(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T114f859ot1(TC* ac, T0* a1);
extern T1 T114f859ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T936f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T941f11(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T894f12(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T893f16(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.force_result_boxing */
extern T1 T894f14(TC* ac, T0* C);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T114f856(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T114f856ot1(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].force_last_new */
extern void T940f34(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].has */
extern T1 T940f25(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T894f13(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T893f17(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T730f19(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T865f58(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_target_type */
extern void T865f57(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_target_type */
extern void T850f57(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T114f228(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f228ot1(TC* ac, T0* a1);
extern T1 T114f228ot2(TC* ac, T0* a1);
extern T1 T114f228ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.procedure_calls */
extern T0* T1060f21(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.procedure_calls */
extern T0* T1059f21(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.procedure_calls */
extern T0* T904f24(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.procedure_calls */
extern T0* T978f24(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.procedure_calls */
extern T0* T843f23(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T114f726(TC* ac, T0* C);
extern T1 T114f726ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T114f725(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.query_calls */
extern T0* T1060f20(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.query_calls */
extern T0* T1059f20(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.query_calls */
extern T0* T904f23(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.query_calls */
extern T0* T978f23(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.query_calls */
extern T0* T843f21(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].wipe_out */
extern void T960f39(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_wipe_out */
extern void T960f54(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_wipe_out */
extern void T960f53(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_wipe_out */
extern void T960f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_wipe_out */
extern void T960f51(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_FEATURE].keep_head */
extern void T1283f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].set_count */
extern void T1283f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].move_all_cursors_after */
extern void T960f50(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T1441f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T1441f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].forth */
extern void T960f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_forth */
extern void T960f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].add_traversing_cursor */
extern void T960f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T1441f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove_traversing_cursor */
extern void T960f61(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_name_in_comment */
extern void T114f724(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_routine_name */
extern void T114f723(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T114f723ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_for_iteration */
extern T0* T960f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_item */
extern T0* T960f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].after */
extern T1 T960f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_after */
extern T1 T960f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].after */
extern T1 T1441f4(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].start */
extern void T960f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_start */
extern void T960f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_off */
extern T1 T960f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].off */
extern T1 T1441f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T960f27(TC* ac, T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T114f722(TC* ac, T0* C, T0* a1);
extern T1 T114f722ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_call_contexts */
extern void T114f800(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].wipe_out */
extern void T958f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].move_all_cursors_after */
extern void T958f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].item */
extern T0* T958f11(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_inlined_operands */
extern void T114f799(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].wipe_out */
extern void T957f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].move_all_cursors_after */
extern void T957f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].item */
extern T0* T957f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].wipe_out */
extern void T929f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].move_all_cursors_after */
extern void T929f16(TC* ac, T0* C);
/* ET_C_GENERATOR.print_equality_function */
extern void T114f796(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_equality_function_body */
extern void T114f854(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].item */
extern T0* T929f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32].wipe_out */
extern void T944f12(TC* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST].keep_head */
extern void T1406f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].set_count */
extern void T1406f7(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_object_test_function */
extern void T114f795(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32].item_1 */
extern T0* T944f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32].item_2 */
extern T6 T944f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32].wipe_out */
extern void T947f12(TC* ac, T0* C);
/* SPECIAL [ET_AGENT].keep_head */
extern void T1413f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].set_count */
extern void T1413f7(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T114f794(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T114f794ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_agent_object_declaration */
extern void T114f849(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T6 a4, T6 a5);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T114f882(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_function_declaration */
extern void T114f848(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T6 a4, T6 a5);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T114f884(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_inline_agent */
extern T1 T768s36(TC* ac);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_inline_agent */
extern T1 T765s37(TC* ac);
/* ET_CALL_AGENT.is_inline_agent */
extern T1 T380f26(TC* ac, T0* C);
/* ET_CALL_AGENT.implicit_result */
extern T0* T380f6(TC* ac, T0* C);
/* ET_C_GENERATOR.agent_closed_operand */
extern T0* T114f326(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T307f133(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.agent_open_operand */
extern T0* T114f325(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T307f132(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32].item_1 */
extern T0* T947f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32].item_2 */
extern T6 T947f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T865f47(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T850f45(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T959f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T959f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T1440f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T1440f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T959f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T959f10(TC* ac, T0* C);
/* ET_C_GENERATOR.register_called_feature */
extern void T114f721(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T959f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T959f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T959f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T959f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove */
extern void T960f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove_position */
extern void T960f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_put */
extern void T960f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_keep_head */
extern void T960f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_keep_head */
extern void T960f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].move_cursors_forth */
extern void T960f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].internal_set_key_equality_tester */
extern void T960f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T865f60(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T850f60(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_once_per_object_data_dispose_functions */
extern void T114f720(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_dispose_function */
extern void T114f793(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_data_type_name */
extern void T114f828(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_per_object_data_allocation_functions */
extern void T114f719(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_allocation_function */
extern void T114f792(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T114f718(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T114f791(TC* ac, T0* C, T0* a1);
extern T1 T114f791ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T114f847(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f847ot1(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].force_last_new */
extern void T956f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T956f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T956f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T1433s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T1430f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T1430f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T956f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T956f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T956f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T956f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T956s31(TC* ac);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T956f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T956f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1433s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1430f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T956f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T956f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T956f32(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_fields */
extern T1 T1060f51(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_reference_fields */
extern T1 T1060f61(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_fields */
extern T1 T1059f51(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_reference_fields */
extern T1 T1059f61(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_fields */
extern T1 T904f62(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_reference_fields */
extern T1 T904f64(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_fields */
extern T1 T978f63(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_reference_fields */
extern T1 T978f66(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_fields */
extern T1 T843f60(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_reference_fields */
extern T1 T843f63(TC* ac, T0* C);
/* ET_C_GENERATOR.print_special_character_32_base_address_function */
extern void T114f717(TC* ac, T0* C);
/* ET_C_GENERATOR.print_special_character_8_base_address_function */
extern void T114f716(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_immutable_string_32_function */
extern void T114f715(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_immutable_string_8_function */
extern void T114f714(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_32_function */
extern void T114f713(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_8_function */
extern void T114f712(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T922f5(TC* ac, T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T114f711(TC* ac, T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T114f775(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T114f840(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f840ot1(TC* ac, T0* a1);
extern T1 T114f840ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T114f879(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T114f710(TC* ac, T0* C);
/* ET_C_GENERATOR.print_types */
extern void T114f709(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_data_struct */
extern void T114f774(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_per_object_data_struct_name */
extern void T114f827(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T114f773(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_flags_name */
extern void T114f830(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T114f826(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T114f772(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T114f772ot1(TC* ac, T0* a1);
extern T1 T114f772ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_struct_name */
extern void T114f819(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].has_cycle */
extern T1 T974f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T974f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].put_last */
extern void T116f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].reset */
extern void T974f20(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_type_definition */
extern void T114f771(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T114f770(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T114f769(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_pointer_function */
extern void T114f768(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_region_access */
extern void T114f823(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_function */
extern void T114f767(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].force_relation */
extern void T974f14(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put_indexed_relation */
extern void T974f19(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].count */
extern T6 T974f10(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].index_of */
extern T6 T974f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T6 T1455f20(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T6 T1455f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T1455f30(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T1455f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T1455f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T1455f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T1455f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T1455f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T1455f29(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T114f766(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T114f765(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T114f764(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T114f763(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T114f762(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T114f761(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T114f760(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T114f759(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T114f758(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T114f757(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T114f756(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T114f755(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T114f754(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T114f753(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T114f752(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T974f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put */
extern void T974f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].put_new */
extern void T1455f36(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T1455f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T1455f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T1455f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T1455f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T1455f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T1455f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T1455f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T1455s26(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T1455f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T1455f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T1455f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T1455f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].capacity */
extern T6 T974f7(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T974f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T1455f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make_default */
extern T0* T974c12(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern void T974f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T974c16(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T1455c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T1455f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T1455f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T1455f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T1455f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1814c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T1455f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T1455f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T1455f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T1455f50(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T114f751(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T114f750(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T114f749(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T114f748(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T114f747(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T114f746(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T114f708(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T114f707(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T114f744(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force_last */
extern void T961f48(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T961f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T961f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T961f61(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T961f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T961f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T961f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T961f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T961s40(TC* ac);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T961f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T961f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T961f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T961f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T961f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T961f59(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T961f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T961f47(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T961f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T961f33(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T102f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern T0* T81s603(TC* ac);
/* ET_C_GENERATOR.tokens */
extern T0* T114s175(TC* ac);
/* ET_ECF_LIBRARY.character_32_type */
extern T0* T806f37(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_32_type */
extern T0* T87f40(TC* ac, T0* C);
/* ET_SYSTEM.character_32_type */
extern T0* T50f39(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_type */
extern T0* T806f34(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_type */
extern T0* T87f37(TC* ac, T0* C);
/* ET_SYSTEM.character_type */
extern T0* T50f36(TC* ac, T0* C);
/* ET_CLASS.universe */
extern T0* T70f71(TC* ac, T0* C);
/* ET_C_GENERATOR.use_scoop */
extern T1 T114f393(TC* ac, T0* C);
/* ET_C_GENERATOR.use_threads */
extern T1 T114f366(TC* ac, T0* C);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T114f361(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T963f38(TC* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T963f48(TC* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T963s56(TC* ac, T14 a1, T2 a2);
/* ET_C_GENERATOR.trace_mode */
extern T1 T114f343(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T114f706(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T865f62(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T850f66(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_static */
extern T1 T1060f22(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_static */
extern T1 T1059f22(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_static */
extern T1 T904f25(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_static */
extern T1 T978f25(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_static */
extern T1 T843f24(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T1060f84(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T1059f84(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T904f86(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T978f88(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_id */
extern void T843f85(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.sort_types */
extern void T114f743(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put_relation */
extern void T974f17(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_iterator */
extern T0* T942f34(TC* ac, T0* C);
/* ET_C_GENERATOR.open_cpp_file */
extern void T114f705(TC* ac, T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T114f704(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_external_configuration */
extern void T114f694(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.add_to_library_paths */
extern void T114f703(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.add_windows_libs_to_library_paths */
extern void T114f702(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.c_compiler_used */
extern T0* T114f332(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_external_c_files */
extern void T114f701(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].item */
extern T0* T970f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].item_storage_item */
extern T0* T970f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].search_position */
extern void T970f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].hash_position */
extern T6 T970f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].key_storage_item */
extern T0* T970f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].clashes_item */
extern T6 T970f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].slots_item */
extern T6 T970f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].has */
extern T1 T970f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].force_last */
extern void T970f34(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].key_storage_put */
extern void T970f42(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].slots_put */
extern void T970f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].clashes_put */
extern void T970f40(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].resize */
extern void T970f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].clashes_resize */
extern void T970f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].special_integer_ */
extern T0* T970s30(TC* ac);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].key_storage_resize */
extern void T970f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].item_storage_resize */
extern void T970f45(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]].aliased_resized_area */
extern T0* T1453s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [TUPLE [STRING_8, detachable STRING_8]].aliased_resized_area */
extern T0* T1451f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].slots_resize */
extern void T970f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].new_modulus */
extern T6 T970f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].new_capacity */
extern T6 T970f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].item_storage_put */
extern void T970f38(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]].force */
extern void T1453s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [STRING_8, detachable STRING_8]].fill_with */
extern void T1451f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [STRING_8, detachable STRING_8]].extend */
extern void T1451f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].unset_found_item */
extern void T970f37(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make */
extern T0* T970c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_with_equality_testers */
extern void T970f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_sparse_container */
extern void T970f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].set_internal_cursor */
extern void T970f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].new_cursor */
extern T0* T970f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [TUPLE [STRING_8, detachable STRING_8], STRING_8].make */
extern T0* T1454c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_slots */
extern void T970f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_clashes */
extern void T970f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_key_storage */
extern void T970f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [STRING_8, detachable STRING_8], STRING_8].make_item_storage */
extern void T970f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]].make */
extern T0* T1453s2(TC* ac, T6 a1);
/* SPECIAL [TUPLE [STRING_8, detachable STRING_8]].make_empty */
extern T0* T1451c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [STRING_8, detachable STRING_8]].default_create */
extern T0* T1453c3(TC* ac);
/* DS_HASH_SET [STRING_8].make_equal */
extern T0* T99c38(TC* ac, T6 a1);
/* DS_HASH_SET [STRING_8].make */
extern void T99f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T99c40(TC* ac, T6 a1);
/* DS_HASH_SET [STRING_8].set_internal_cursor */
extern void T99f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T99f22(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T859c9(TC* ac, T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T99f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T99f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T99f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T99f52(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].sort */
extern void T170f39(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [STRING_8].sort */
extern void T968f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [STRING_8].sort_with_comparator */
extern void T968f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [STRING_8].subsort_with_comparator */
extern void T968f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [STRING_8].swap */
extern void T170f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].replace */
extern void T170f41(TC* ac, T0* C, T0* a1, T6 a2);
/* UC_STRING_COMPARATOR.less_than */
extern T1 T969f1(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_COMPARATOR.string_ */
extern T0* T969s2(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].item */
extern T0* T967f9(TC* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [STRING_8].make */
extern T0* T968c2(TC* ac, T0* a1);
/* UC_STRING_COMPARATOR.default_create */
extern T0* T969c3(TC* ac);
/* KL_DIRECTORY.close */
extern void T167f40(TC* ac, T0* C);
/* KL_DIRECTORY.old_close */
extern void T167f42(TC* ac, T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T167s23(TC* ac);
/* KL_DIRECTORY.dir_close */
extern void T167s46(TC* ac, T14 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].force_last */
extern void T967f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].force */
extern void T1449s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].fill_with */
extern void T1448f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].extend */
extern void T1448f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].resize */
extern void T967f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].aliased_resized_area */
extern T0* T1449s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].aliased_resized_area */
extern T0* T1448f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].new_capacity */
extern T6 T967f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].extendible */
extern T1 T967f7(TC* ac, T0* C, T6 a1);
/* KL_DIRECTORY.read_entry */
extern void T167f39(TC* ac, T0* C);
/* KL_DIRECTORY.last_entry_8 */
extern T0* T167f21(TC* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_8 */
extern T0* T166f16(TC* ac, T0* C, T14 a1);
/* C_STRING.string_8 */
extern T0* T31f6(TC* ac, T0* C);
/* C_STRING.make_shared_from_pointer */
extern T0* T31c17(TC* ac, T14 a1);
/* FILE_INFO.utf_16_to_multi_byte */
extern T6 T166s20(TC* ac, T14 a1, T14 a2, T6 a3);
/* KL_DIRECTORY.last_entry_32 */
extern T0* T167f20(TC* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_32 */
extern T0* T166f17(TC* ac, T0* C, T14 a1);
/* FILE_INFO.pointer_length_in_bytes */
extern T6 T166f21(TC* ac, T0* C, T14 a1);
/* FILE_INFO.c_pointer_length_in_bytes */
extern T11 T166f22(TC* ac, T0* C, T14 a1);
/* KL_DIRECTORY.readentry */
extern void T167f45(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_next */
extern T14 T167s27(TC* ac, T14 a1);
/* KL_DIRECTORY.is_open_read */
extern T1 T167f26(TC* ac, T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T167f17(TC* ac, T0* C);
/* KL_DIRECTORY.open_read */
extern void T167f38(TC* ac, T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T167f44(TC* ac, T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T167s24(TC* ac, T14 a1);
/* KL_DIRECTORY.old_is_readable */
extern T1 T167f18(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T167s31(TC* ac, T14 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].make */
extern T0* T967c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].set_internal_cursor */
extern void T967f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].new_cursor */
extern T0* T967f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]].make */
extern T0* T1450c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].make */
extern T0* T1449s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].make_empty */
extern T0* T1448c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].default_create */
extern T0* T1449c3(TC* ac);
/* ET_C_GENERATOR.add_to_include_paths */
extern void T114f700(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T107f342(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.generate_boehm_gc_c_files */
extern void T114f693(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.report_undefined_environment_variable_error */
extern void T114f698(TC* ac, T0* C, T0* a1);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.make */
extern T0* T965c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.c_config */
extern T0* T114f171(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T964f17(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_forth */
extern void T962f82(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T964f18(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_start */
extern void T962f83(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse_file */
extern void T1063f185(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T1063f189(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T1063f202(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T1063f201(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T1063f200(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T1063f140(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T831f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T831f86(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.process_include */
extern void T1063f214(TC* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1680c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].put */
extern void T1678f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].force */
extern void T1986s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [YY_BUFFER].fill_with */
extern void T1985f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [YY_BUFFER].extend */
extern void T1985f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].put */
extern void T246f14(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T1063s166(TC* ac);
/* DS_ARRAYED_STACK [YY_BUFFER].is_full */
extern T1 T1678f5(TC* ac, T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T1063f213(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove */
extern void T831f87(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_position */
extern void T831f88(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_keep_head */
extern void T831f92(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_keep_head */
extern void T831f91(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_forth */
extern void T831f90(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].internal_set_key_equality_tester */
extern void T831f89(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T1063f137(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T1063f199(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.accept */
extern void T1063f198(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T1063f196(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T1063f212(TC* ac, T0* C, T0* a1);
extern T1 T1063f212ot1(TC* ac, T0* a1);
/* UT_SYNTAX_ERROR.make */
extern T0* T1679c8(TC* ac, T0* a1, T6 a2);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T1650f5(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern T0* T1819f6(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.name */
extern T0* T43f1(TC* ac, T0* C);
/* KL_STDIN_FILE.name */
extern T0* T245s9(TC* ac);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T1063f211(TC* ac, T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T1063f195(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T1063f210(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T1063f219(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T1120f26(TC* ac, T0* C, T1 a1);
/* YY_BUFFER.set_beginning_of_line */
extern void T262f17(TC* ac, T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T1063f165(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T1063f159(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T1595f7(TC* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T1063f158(TC* ac, T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T1063s154(TC* ac);
/* UT_CONFIG_PARSER.text */
extern T0* T1063f153(TC* ac, T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T1063f217(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T1063f209(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T1063f218(TC* ac, T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T1063f132(TC* ac, T0* C);
extern T1 T1063f132ot1(TC* ac, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T1650f32(TC* ac, T0* C);
/* KL_STDIN_FILE.close */
extern void T245f13(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T1650f6(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T43f42(TC* ac, T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T245f10(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].remove */
extern void T1678f10(TC* ac, T0* C);
/* SPECIAL [YY_BUFFER].keep_head */
extern void T1985f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].set_count */
extern void T1985f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].item */
extern T0* T1678f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_empty */
extern T1 T1678f6(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T1063f208(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T1063f205(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.fill */
extern void T1120f23(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T1595f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T1650f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T1650f8p1(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_CHARACTER_BUFFER.put */
extern void T1595f13(TC* ac, T0* C, T2 a1, T6 a2);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T1650f7(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1971f4(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.last_character */
extern T2 T43f8(TC* ac, T0* C);
/* KL_STDIN_FILE.last_character */
extern T2 T245f4(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T1650f22(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T1650f33(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1971f6(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1971f8(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T1650f35(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T1650f37(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T1650f38(TC* ac, T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1971f7(TC* ac, T0* C, T2 a1);
/* DS_LINKABLE [CHARACTER_8].put_right */
extern void T2174f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [CHARACTER_8].make */
extern T0* T2174c3(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T168s59(TC* ac, T0* a1, T6 a2);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T1650s25(TC* ac);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T1650s9(TC* ac);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern T0* T1650f28(TC* ac, T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1972s7(TC* ac, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1972s6(TC* ac, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1972s5(TC* ac, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1972s4(TC* ac, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1972s3(TC* ac, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern T0* T1650s23(TC* ac);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1972c16(TC* ac);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T1650f27(TC* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T1650f26(TC* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T1650f36(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T1650f34(TC* ac, T0* C);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1972s2(TC* ac, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1972s1(TC* ac, T6 a1, T6 a2);
/* KL_STDIN_FILE.read_character */
extern void T245f14(TC* ac, T0* C);
/* CONSOLE.read_character */
extern void T1669f34(TC* ac, T0* C);
/* CONSOLE.console_readchar */
extern T2 T1669s19(TC* ac, T14 a1);
/* YY_FILE_BUFFER.compact_left */
extern void T1120f27(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T1595f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.resize */
extern void T1120f28(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T1595f16(TC* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern T6 T1120f15(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T1120f22(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T1063f131(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T1063f130(TC* ac, T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T1063f207(TC* ac, T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T106c8(TC* ac, T0* a1);
/* UT_CONFIG_PARSER.report_invalid_unicode_character_error */
extern void T1063f206(TC* ac, T0* C, T10 a1);
/* UT_CONFIG_PARSER.yy_at_beginning_of_line */
extern T6 T1063f99(TC* ac, T0* C);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T1063s105(TC* ac);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T1063f194(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T1063f203(TC* ac, T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T1063f215(TC* ac, T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T1063f220(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T1063f221(TC* ac, T0* C);
/* UT_CONFIG_PARSER.abort */
extern void T1063f197(TC* ac, T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T1063f188(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T1063f193(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T1120f25(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_BUFFER.set_position */
extern void T262f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T1063f104(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T1120c24(TC* ac, T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T1120f17(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T1120c17(TC* ac, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T1120f18(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.set_file_with_size */
extern void T1120f19(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.flush */
extern void T1120f20(TC* ac, T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T1120f13(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T114f601(TC* ac, T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T1063f184(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T1063c183(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T246c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].make */
extern T0* T1678c8(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].make */
extern T0* T1986s1(TC* ac, T6 a1);
/* SPECIAL [YY_BUFFER].make_empty */
extern T0* T1985c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].default_create */
extern T0* T1986c2(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T831f48(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.string_equality_tester */
extern T0* T1063s97(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T831f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T831c47(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T831f57(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T831f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_internal_cursor */
extern void T831f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T831f82(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T831f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T831f80(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T831f79(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T1063f187(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T1063f192(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern T0* T1063f82(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T1063f178(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T264s3(TC* ac, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern T0* T1063f139(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern T0* T1063f138(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern T0* T1063f136(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern T0* T1063f133(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern T0* T1063f127(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern T0* T1063f126(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern T0* T1063f123(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern T0* T1063f119(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern T0* T1063f116(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T1063f223(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yyarray_subcopy */
extern void T1063f225(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T1047s3(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T953f17(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UT_CONFIG_PARSER.integer_array_ */
extern T0* T1063s182(TC* ac);
/* UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T1063f222(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T1063f191(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T272s1(TC* ac, T6 a1);
/* SPECIAL [detachable ANY].make_empty */
extern T0* T273c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T272c3(TC* ac);
/* UT_CONFIG_PARSER.make_scanner */
extern void T1063f186(TC* ac, T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T1063f190(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T1063f204(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T1063f204p1(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T1063f216(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern T0* T1063f173(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T1063f181(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern T0* T1063f172(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern T0* T1063f171(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T1063f224(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_array_subcopy */
extern void T1063f226(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* UT_CONFIG_PARSER.yy_def_template */
extern T0* T1063f170(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern T0* T1063f169(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern T0* T1063f168(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern T0* T1063f167(TC* ac, T0* C);
/* UT_CONFIG_PARSER.empty_buffer */
extern T0* T1063f83(TC* ac, T0* C);
/* YY_BUFFER.make */
extern T0* T262c12(TC* ac, T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T262f15(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T1595f12(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_CHARACTER_BUFFER.fill_from_substring */
extern void T1595f18(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_BUFFER.new_default_buffer */
extern T0* T262f11(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.put_new */
extern void T962f59(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_STRING_HASH_TABLE.set_key_equality_tester */
extern void T962f58(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern T0* T114s173(TC* ac);
/* DS_STRING_HASH_TABLE.make_map */
extern T0* T962c56(TC* ac, T6 a1);
/* ET_C_GENERATOR.set_split_threshold */
extern void T114f688(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T114f687(TC* ac, T0* C, T1 a1);
/* GEC.no_split */
extern T1 T26f65(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T58f12(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T226f7(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].is_empty */
extern T1 T226f6(TC* ac, T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T114f686(TC* ac, T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T26f59(TC* ac, T0* C);
/* ET_C_GENERATOR.set_scoop_exceptions_stop_when_dirty */
extern void T114f685(TC* ac, T0* C, T1 a1);
/* GEC.scoop_exceptions_stop_when_dirty */
extern T1 T26f64(TC* ac, T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T114f684(TC* ac, T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T26f63(TC* ac, T0* C);
/* ET_C_GENERATOR.make */
extern T0* T114c683(TC* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.make_external_regexps */
extern void T114f692(TC* ac, T0* C);
/* ET_C_GENERATOR.make_volatile_data */
extern void T114f691(TC* ac, T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T114f690(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T961f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T961c42(TC* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T961f50(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T961f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_internal_cursor */
extern void T961f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T961f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T1444c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T961f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T961f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T961f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T961f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T99f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make */
extern T0* T960c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T960f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T960f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T1441c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_slots */
extern void T960f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_clashes */
extern void T960f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_key_storage */
extern void T960f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_item_storage */
extern void T960f42(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T959c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T959f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T959f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T1440c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T958c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].set_internal_cursor */
extern void T958f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].new_cursor */
extern T0* T958f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T1439c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T1438s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].make_empty */
extern T0* T1437c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].default_create */
extern T0* T1438c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T957c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].set_internal_cursor */
extern void T957f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].new_cursor */
extern T0* T957f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T1436c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T1435s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].make_empty */
extern T0* T1434c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].default_create */
extern T0* T1435c3(TC* ac);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T956c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T956f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T956f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T956f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T956f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1432c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T956f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T956f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T956f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T956f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T1433s2(TC* ac, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T1430c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T1433c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_map */
extern T0* T955c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T955f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_sparse_container */
extern void T955f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_internal_cursor */
extern void T955f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_cursor */
extern T0* T955f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make */
extern T0* T1426c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_slots */
extern void T955f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_clashes */
extern void T955f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_key_storage */
extern void T955f56(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T1429s1(TC* ac, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make_empty */
extern T0* T1427c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T1429c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_item_storage */
extern void T955f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T954c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T954f44(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T954f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].set_internal_cursor */
extern void T954f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T954f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T1422c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T954f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T954f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T954f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T954f66(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T1425s2(TC* ac, T6 a1);
/* SPECIAL [ET_CONSTANT].make_empty */
extern T0* T1423c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T1425c3(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].make_map */
extern T0* T952c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].make_with_equality_testers */
extern void T952f41(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].make_sparse_container */
extern void T952f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].set_internal_cursor */
extern void T952f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].new_cursor */
extern T0* T952f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_STANDALONE_CLOSURE].make */
extern T0* T1419c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].make_slots */
extern void T952f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].make_clashes */
extern void T952f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].make_key_storage */
extern void T952f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STANDALONE_CLOSURE].make */
extern T0* T1421s2(TC* ac, T6 a1);
/* SPECIAL [ET_STANDALONE_CLOSURE].make_empty */
extern T0* T1420c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STANDALONE_CLOSURE].default_create */
extern T0* T1421c3(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_STANDALONE_CLOSURE].make_item_storage */
extern void T952f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T951c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T951f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T951f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T1415c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T951f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T951f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T951f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T951f39(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T1417s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T1416c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T1417c3(TC* ac);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.make */
extern T0* T950c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.make */
extern T0* T948c7(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST_2 [ET_AGENT, INTEGER_32].make */
extern T0* T947c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T1414s1(TC* ac, T6 a1);
/* SPECIAL [ET_AGENT].make_empty */
extern T0* T1413c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T1414c3(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].make_map */
extern T0* T945c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].make_with_equality_testers */
extern void T945f34(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].make_sparse_container */
extern void T945f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].set_internal_cursor */
extern void T945f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].new_cursor */
extern T0* T945f22(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, INTEGER_32].make */
extern T0* T1409c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].make_slots */
extern void T945f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].make_clashes */
extern void T945f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].make_key_storage */
extern void T945f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, INTEGER_32].make_item_storage */
extern void T945f36(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_OBJECT_TEST, INTEGER_32].make */
extern T0* T944c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].make */
extern T0* T1407s1(TC* ac, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].make_empty */
extern T0* T1406c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].default_create */
extern T0* T1407c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T943c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T943f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T943f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T943f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T943f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1404c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T943f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T943f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T943f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T943f67(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T1397s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T1396c5(TC* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T941c9(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_map */
extern T0* T940c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_with_equality_testers */
extern void T940f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_sparse_container */
extern void T940f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_internal_cursor */
extern void T940f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_cursor */
extern T0* T940f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make */
extern T0* T1403c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_slots */
extern void T940f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_clashes */
extern void T940f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_key_storage */
extern void T940f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_item_storage */
extern void T940f55(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T938c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T937c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].set_internal_cursor */
extern void T937f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_cursor */
extern T0* T937f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T1398c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].make */
extern T0* T934c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].set_internal_cursor */
extern void T934f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].new_cursor */
extern T0* T934f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].make */
extern T0* T1395c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T1393s1(TC* ac, T6 a1);
/* SPECIAL [ET_RESULT].make_empty */
extern T0* T1394c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T1393c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T933c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].set_internal_cursor */
extern void T933f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].new_cursor */
extern T0* T933f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T1392c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T1390s1(TC* ac, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T1391c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T1390c3(TC* ac);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T932c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T932f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T932f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T1389c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T1388s1(TC* ac, T6 a1);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T1387c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T1388c3(TC* ac);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T931c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T931f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T931f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T1386c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T1384s1(TC* ac, T6 a1);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T1385c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T1384c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T930c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_internal_cursor */
extern void T930f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].new_cursor */
extern T0* T930f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T1383c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T1381s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make_empty */
extern T0* T1382c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].default_create */
extern T0* T1381c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T929c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].set_internal_cursor */
extern void T929f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].new_cursor */
extern T0* T929f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T1380c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T1379s1(TC* ac, T6 a1);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].make_empty */
extern T0* T1378c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].default_create */
extern T0* T1379c3(TC* ac);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].make */
extern T0* T928c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T928f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T928f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].make */
extern T0* T1377c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].make */
extern T0* T1375s1(TC* ac, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T1376c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].default_create */
extern T0* T1375c3(TC* ac);
/* DS_ARRAYED_LIST [BOOLEAN].make */
extern T0* T927c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].set_internal_cursor */
extern void T927f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].new_cursor */
extern T0* T927f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].make */
extern T0* T1374c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T926c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T926f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T926f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1373c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1372s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].make_empty */
extern T0* T1371c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].default_create */
extern T0* T1372c3(TC* ac);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T925c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].set_internal_cursor */
extern void T925f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T925f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T1370c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T1275s2(TC* ac, T6 a1);
/* SPECIAL [ET_IDENTIFIER].make_empty */
extern T0* T1276c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T1275c3(TC* ac);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].make_map */
extern T0* T924c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].make_with_equality_testers */
extern void T924f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].make_sparse_container */
extern void T924f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].set_internal_cursor */
extern void T924f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].new_cursor */
extern T0* T924f26(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, ET_OLD_EXPRESSION].make */
extern T0* T1369c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].make_slots */
extern void T924f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].make_clashes */
extern void T924f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].make_key_storage */
extern void T924f43(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OLD_EXPRESSION].make */
extern T0* T1365s1(TC* ac, T6 a1);
/* SPECIAL [ET_OLD_EXPRESSION].make_empty */
extern T0* T1366c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OLD_EXPRESSION].default_create */
extern T0* T1365c3(TC* ac);
/* DS_HASH_TABLE [ET_IDENTIFIER, ET_OLD_EXPRESSION].make_item_storage */
extern void T924f42(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION].make */
extern T0* T923c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION].set_internal_cursor */
extern void T923f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OLD_EXPRESSION].new_cursor */
extern T0* T923f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OLD_EXPRESSION].make */
extern T0* T1367c5(TC* ac, T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern T0* T114s178(TC* ac);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T102f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern T0* T81s2(TC* ac);
/* ET_CLASS.make_unknown */
extern T0* T70c275(TC* ac);
/* GEC.tokens */
extern T0* T26s37(TC* ac);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T95f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T95f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T95f98(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T847f18(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T100f126(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T100f130(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T100f138(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T100f145(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f145ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T100f150(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T63f234(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T42f234(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T100f152(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T894f11(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T893f12(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.position */
extern T0* T1565f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T100s91(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern T0* T100f90(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T100f129(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T100f129ot1(TC* ac, T0* a1);
extern T1 T100f129ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T863f12(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T865f61(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T850f65(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_all_invariants_validity */
extern void T100f136(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_invariants_validity */
extern void T100f144(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_indexes */
extern void T100f141(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.initialize_indexes */
extern void T100f140(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32].force_last */
extern void T898f13(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].force */
extern void T1349s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].fill_with */
extern void T1350f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].extend */
extern void T1350f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32].resize */
extern void T898f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].aliased_resized_area */
extern T0* T1349s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INVARIANTS].aliased_resized_area */
extern T0* T1350f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32].new_capacity */
extern T6 T898f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_INVARIANTS, INTEGER_32].extendible */
extern T1 T898f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_invariants */
extern T0* T1060f46(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_invariants */
extern T0* T1059f46(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_invariants */
extern T0* T904f59(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_invariants */
extern T0* T978f60(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_invariants */
extern T0* T843f57(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_routine */
extern T1 T718s44(TC* ac);
/* ET_ONCE_PROCEDURE.is_routine */
extern T1 T716s43(TC* ac);
/* ET_EXTERNAL_FUNCTION.is_routine */
extern T1 T714s53(TC* ac);
/* ET_DEFERRED_FUNCTION.is_routine */
extern T1 T712s49(TC* ac);
/* ET_ONCE_FUNCTION.is_routine */
extern T1 T711s52(TC* ac);
/* ET_DO_FUNCTION.is_routine */
extern T1 T710s51(TC* ac);
/* ET_UNIQUE_ATTRIBUTE.is_routine */
extern T1 T709f48(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_routine */
extern T1 T708f46(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_routine */
extern T1 T707f51(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_routine */
extern T1 T706f44(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_routine */
extern T1 T715s46(TC* ac);
/* ET_DEFERRED_PROCEDURE.is_routine */
extern T1 T717s44(TC* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_all_postconditions_validity */
extern void T100f135(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].forth */
extern void T864f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].cursor_forth */
extern void T864f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].add_traversing_cursor */
extern void T864f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T1296f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_position */
extern void T1296f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].remove_traversing_cursor */
extern void T864f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_after */
extern void T1296f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T864f27(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_postconditions_validity */
extern void T100f143(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T100f139(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T100f147(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T100f146(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32].force_last */
extern void T897f13(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].force */
extern void T1347s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].fill_with */
extern void T1348f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].extend */
extern void T1348f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32].resize */
extern void T897f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1347s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1348f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32].new_capacity */
extern T6 T897f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_POSTCONDITIONS, INTEGER_32].extendible */
extern T1 T897f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_for_iteration */
extern T0* T864f25(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].cursor_item */
extern T0* T864f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T864f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].after */
extern T1 T864f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].cursor_after */
extern T1 T864f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].after */
extern T1 T1296f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].start */
extern void T864f39(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].cursor_start */
extern void T864f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].cursor_off */
extern T1 T864f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].off */
extern T1 T1296f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].is_empty */
extern T1 T864f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T864f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T864f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T864f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T864f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T864f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T864f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T864f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T864s32(TC* ac);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T864f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T864f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T864f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T864f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T864f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T864f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T864f54(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T864f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T864f26(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T864f46(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.add_precursors */
extern void T718f112(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T864f35(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.add_precursors */
extern void T716f108(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.add_precursors */
extern void T714f115(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.add_precursors */
extern void T712f105(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.add_precursors */
extern void T711f111(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.add_precursors */
extern void T710f108(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.add_precursors */
extern void T709f103(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.add_precursors */
extern void T708f100(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.add_precursors */
extern void T707f107(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.add_precursors */
extern void T706f96(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.add_precursors */
extern void T715f104(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.add_precursors */
extern void T717f101(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T864f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T864f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T864f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T864f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T864f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T864f48(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_all_preconditions_validity */
extern void T100f134(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_preconditions_validity */
extern void T100f142(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32].force_last */
extern void T896f13(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].force */
extern void T1345s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].fill_with */
extern void T1346f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].extend */
extern void T1346f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32].resize */
extern void T896f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1345s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1346f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32].new_capacity */
extern T6 T896f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_2 [ET_PRECONDITIONS, INTEGER_32].extendible */
extern T1 T896f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].go_after */
extern void T864f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].cursor_go_after */
extern void T864f59(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T100f133(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T100f132(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T850f43(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T847f15(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T100f123(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T847f14(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T100f122(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T847f17(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T100f125(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T70f152(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T80f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T82f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T63f225(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T63f237(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T1463c32(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T63f17(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T42f225(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T42f237(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T42f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T63f224(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T1463c31(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T63f16(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T42f224(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T42f16(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T63f201(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T1463c28(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T63f12(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T42f201(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T42f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T63f223(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T1463c30(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T63f15(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T42f223(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T42f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T63f222(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T1463c29(TC* ac);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T63f14(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T42f222(TC* ac, T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T42f14(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T95f96(TC* ac, T0* C, T0* a1);
extern T1 T95f96ot1(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern T0* T81s594(TC* ac);
/* ET_TOKEN_CONSTANTS.once_raise_feature_name */
extern T0* T81s593(TC* ac);
/* ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern T0* T81s591(TC* ac);
/* ET_TOKEN_CONSTANTS.set_rout_disp_final_feature_name */
extern T0* T81s590(TC* ac);
/* ET_TOKEN_CONSTANTS.rout_disp_feature_name */
extern T0* T81s589(TC* ac);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern T0* T81s588(TC* ac);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern T0* T81s585(TC* ac);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern T0* T95s79(TC* ac);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern T0* T81s583(TC* ac);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern T0* T81s582(TC* ac);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern T0* T81s581(TC* ac);
/* ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T63f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T1466c928(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T63f23(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T42f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T42f23(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T63f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T1466c926(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T63f21(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T42f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T42f21(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T63f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T1466c924(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T63f19(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T42f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T42f19(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T63f226(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T1463c33(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T63f18(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T42f226(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T42f18(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_6 */
extern void T66f73(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_6_metrics */
extern void T66f82(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.class_count_recursive */
extern T6 T87f145(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T87f145ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T87f145ac2(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T75f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_AGENT_ROUTINES [ET_CLASS].call */
extern void T1527s2(TC* ac, T0* a1, T0* a2);
/* UT_COUNTER.increment */
extern void T1526f3(TC* ac, T0* C);
/* ET_ECF_SYSTEM.classes_do_recursive */
extern void T87f228(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T87f228ac1(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T828f159(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T828f159p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].forth */
extern void T1088f12(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T178f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T178f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T1088f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_position */
extern void T1088f15(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T178f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_after */
extern void T1088f14(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_mapped */
extern T1 T189f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].item */
extern T0* T1088f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T178f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].after */
extern T1 T1088f4(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].start */
extern void T1088f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_start */
extern void T178f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T178f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].off */
extern T1 T1088f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T178f35(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T208f159(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T208f159p1(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_all */
extern void T204f160(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_do_all */
extern void T806f187(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_all */
extern void T87f249(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.classes_do_all */
extern void T50f192(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive */
extern void T87f231(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].do_all */
extern void T188f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_item */
extern T0* T188f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_item */
extern T6 T188f22(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.add_universe_recursive */
extern void T87f239(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T87f239ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T87f239ac2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T210f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T828f153(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T828f153ac1(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLIES.do_all */
extern void T1271f7(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T208f153(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T208f153ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_LIBRARY]].set_rout_disp_final */
extern void T206f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.add_universe_recursive */
extern void T806f193(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T806f193ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T806f193ac2(TC* ac, T0* a1);
/* ET_LIBRARY.add_universe_recursive */
extern void T204f154(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T204f154ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T204f154ac2(TC* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T175f7(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T174f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].force_last */
extern void T188f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_put */
extern void T188f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].clashes_put */
extern void T188f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].slots_item */
extern T6 T188f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].hash_position */
extern T6 T188f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].resize */
extern void T188f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_resize */
extern void T188f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].special_integer_ */
extern T0* T188s27(TC* ac);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_resize */
extern void T188f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_resize */
extern void T188f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_item */
extern T0* T188f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_resize */
extern void T188f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_modulus */
extern T6 T188f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_capacity */
extern T6 T188f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_put */
extern void T188f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].search_position */
extern void T188f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].key_equality_tester */
extern T0* T188f19(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].unset_found_item */
extern void T188f44(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].has */
extern T1 T188f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make */
extern T0* T188c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].set_internal_cursor */
extern void T188f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].new_cursor */
extern T0* T188f21(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].make */
extern T0* T1098c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make_slots */
extern void T188f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_clashes */
extern void T188f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_key_storage */
extern void T188f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_item_storage */
extern void T188f40(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T87f152(TC* ac, T0* C);
/* ET_ECF_SYSTEM.class_actions */
extern T0* T87s159(TC* ac);
/* KL_AGENT_ROUTINES [ET_CLASS].default_create */
extern T0* T1527c1(TC* ac);
/* UT_COUNTER.make */
extern T0* T1526c2(TC* ac, T6 a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T87f230(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T87f234(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T87f234ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_CLUSTER]].set_rout_disp_final */
extern void T1542f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T87f242(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T89f90(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T87f241(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T87f241ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]].set_rout_disp_final */
extern void T1537f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.clusters_do_explicit */
extern void T806f199(TC* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_explicit */
extern void T94f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_recursive */
extern void T834f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].item */
extern T0* T1657f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T842f7(TC* ac, T0* C, T6 a1);
/* ET_LIBRARY.clusters_do_explicit */
extern void T204f168(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit */
extern void T87f289(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T87f235(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].do_all */
extern void T1544f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T1544f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T1544f22(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T87f243(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T87f243ac1(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T806f196(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T806f196ac1(TC* ac, T0* a1);
/* ET_LIBRARY.add_internal_universe_recursive */
extern void T204f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_internal_universe_recursive */
extern T0* T204f157ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].force_last */
extern void T1544f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_put */
extern void T1544f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_put */
extern void T1544f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T1544f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T1544f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].resize */
extern void T1544f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T1544f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T1544s27(TC* ac);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T1544f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T1544f45(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1958s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1959f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T1544f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_resize */
extern void T1544f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T1544f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T1544f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T1544f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].force */
extern void T1958s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].fill_with */
extern void T1959f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].extend */
extern void T1959f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].search_position */
extern void T1544f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T1544f19(TC* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T1544f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].has */
extern T1 T1544f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make */
extern T0* T1544c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T1544f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T1544f21(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE].make */
extern T0* T1956c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_slots */
extern void T1544f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_clashes */
extern void T1544f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T1544f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T1544f34(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].make */
extern T0* T1958s1(TC* ac, T6 a1);
/* SPECIAL [ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1959c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1958c3(TC* ac);
/* ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T87f233(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T87f233ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T87f240(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T89f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern void T858f111(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern T0* T858f111ac1(TC* ac, T0* a1);
/* ET_MASTER_CLASS.process */
extern void T189f72(TC* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_master_class */
extern void T239f4(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T233f8(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T233f9(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T233f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T63f583(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T63f605(TC* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T2184c21(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS.upper_name */
extern T0* T189f49(TC* ac, T0* C);
/* ET_LIBRARY.full_lower_name */
extern T0* T204f99(TC* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_lower_name */
extern T0* T204f103(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.string_ */
extern T0* T204s97(TC* ac);
/* ET_LIBRARY.lower_name */
extern T0* T204f105(TC* ac, T0* C);
/* ET_ECF_LIBRARY.full_lower_name */
extern T0* T806f118(TC* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_lower_name */
extern T0* T87f166(TC* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_lower_name */
extern T0* T50f138(TC* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.kind_name */
extern T0* T208f100(TC* ac, T0* C);
/* ET_LIBRARY.kind_name */
extern T0* T204f101(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T828f97(TC* ac, T0* C);
/* ET_ECF_LIBRARY.kind_name */
extern T0* T806f117(TC* ac, T0* C);
/* ET_ECF_SYSTEM.kind_name */
extern T0* T87f165(TC* ac, T0* C);
/* ET_SYSTEM.kind_name */
extern T0* T50f137(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T63f178(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0d_error */
extern void T42f583(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_universe_error */
extern void T42f605(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T42f178(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T233f6(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T233f5(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T233f13(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T233f11(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T233f14(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T63f585(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T2184c23(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_CLUSTER.kind_name */
extern T0* T89f69(TC* ac, T0* C);
/* ET_CLUSTER.kind_name */
extern T0* T67f39(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.kind_name */
extern T0* T263f30(TC* ac, T0* C);
/* ET_NONE_GROUP.kind_name */
extern T0* T199f29(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T42f585(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T63f584(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T2184c22(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T42f584(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T189f34(TC* ac, T0* C);
/* ET_CLASS.actual_intrinsic_class */
extern T0* T70f201(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T63f582(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T2184c20(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T42f582(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T233f10(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T87f247(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T87f247ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T87f247ac2(TC* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T828f163(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].go_after */
extern void T1088f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_go_after */
extern void T178f64(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T208f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_until */
extern void T204f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_until */
extern void T806f189(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_until */
extern void T87f253(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_until */
extern void T50f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T828f161(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_all */
extern void T178f60(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T208f161(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_classes_do_all */
extern void T204f162(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_classes_do_all */
extern void T806f184(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_all */
extern void T87f244(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_classes_do_all */
extern void T50f194(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T87f232(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_UNIVERSE].forth */
extern void T188f56(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_forth */
extern void T188f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].add_traversing_cursor */
extern void T188f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_next_cursor */
extern void T1098f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_position */
extern void T1098f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].remove_traversing_cursor */
extern void T188f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_after */
extern void T1098f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].item_for_iteration */
extern T0* T188f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_item */
extern T0* T188f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].go_after */
extern void T188f55(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_go_after */
extern void T188f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].cursor_off */
extern T1 T188f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].off */
extern T1 T1098f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].after */
extern T1 T188f28(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_after */
extern T1 T188f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].after */
extern T1 T1098f4(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].start */
extern void T188f54(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_start */
extern void T188f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].is_empty */
extern T1 T188f34(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern void T66f109(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern T0* T66f109ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T87f230p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac2(TC* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac4(TC* ac, T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac5(TC* ac, T0* a1);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac6(TC* ac, T0* a1);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac7(TC* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T87f230p1ac8(TC* ac);
/* ET_ECF_LIBRARY.import_classes */
extern void T806f195(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T806f195ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T806f195ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T806f195ac3(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T1547f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T830f38(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_imported_class */
extern void T189f88(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_imported_class */
extern T1 T189f48(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].has */
extern T1 T1102f13(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_class */
extern T0* T204f92(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T831f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].key */
extern T0* T1088f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_key */
extern T0* T178f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_hidden */
extern T1 T89f14(TC* ac, T0* C);
/* ET_CLUSTER.is_hidden */
extern T1 T67f38(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_hidden */
extern T1 T263f29(TC* ac, T0* C);
/* ET_NONE_GROUP.is_hidden */
extern T1 T199f28(TC* ac, T0* C);
/* PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T809f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T825f35(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T189f70(TC* ac, T0* C);
/* ET_MASTER_CLASS.remove_imported_class */
extern void T189f81(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_declared_locally */
extern T1 T189f33(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T175f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T1081f11(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T174f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].do_all */
extern void T1080f11(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.import_classes */
extern void T204f156(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.import_classes */
extern T0* T204f156ac1(TC* ac);
/* Creation of agent #2 in feature ET_LIBRARY.import_classes */
extern T0* T204f156ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.import_classes */
extern T0* T204f156ac3(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T828f156(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T828f168(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T828f91(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T828s101(TC* ac);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T828f167(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern T0* T81s1561(TC* ac);
/* ET_DOTNET_ASSEMBLY.import_classes */
extern void T208f156(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T208f167(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_class */
extern T0* T208f91(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.tokens */
extern T0* T208s98(TC* ac);
/* ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T208f166(TC* ac, T0* C);
/* ET_ECF_LIBRARY.preparse */
extern void T806f194(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.preparse */
extern void T806f194p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.preparse */
extern T0* T806f194p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.preparse */
extern T0* T806f194p1ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.preparse */
extern T0* T806f194p1ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.preparse */
extern T0* T806f194p1ac4(TC* ac, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T189f69(TC* ac, T0* C);
/* ET_MASTER_CLASS.remove_local_ignored_class */
extern void T189f80(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_first */
extern void T69f32(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].delete */
extern void T69f31(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_non_override_class */
extern void T189f79(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_override_class */
extern void T189f78(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove */
extern void T69f28(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_left */
extern void T69f35(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_left */
extern void T69f34(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T69f33(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T69f36(TC* ac, T0* C);
/* ET_MASTER_CLASS.reset_local_modified_classes */
extern void T189f68(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T189f68ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T189f68ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T189f68ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T189f68ac4(TC* ac, T0* a1, T0* a2);
/* Creation of agent #5 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T189f68ac5(TC* ac);
/* ET_MASTER_CLASS.reset_local_modified_class */
extern void T189f73(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T152s34(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T151s37(TC* ac, T0* a1);
/* ET_MASTER_CLASS.file_system */
extern T0* T189s31(TC* ac);
/* ET_MASTER_CLASS.unix_file_system */
extern T0* T189s41(TC* ac);
/* ET_MASTER_CLASS.windows_file_system */
extern T0* T189s40(TC* ac);
/* ET_MASTER_CLASS.operating_system */
extern T0* T189s39(TC* ac);
/* ET_CLASS.reset_after_parsed_and_errors */
extern void T70f331(TC* ac, T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T70f332(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T437f10(TC* ac, T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T704f10(TC* ac, T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T1097f13(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T726f104(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T184f134(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T2191f28(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T695f95(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T695f92(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T422f14(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_base_types */
extern void T695f98(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.reset */
extern void T645f17(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.reset */
extern void T696f11(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.reset */
extern void T425f14(TC* ac, T0* C);
/* ET_RENAME.reset */
extern void T700f7(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T719f7(TC* ac, T0* C);
/* ET_ALIAS_NAME_LIST.reset */
extern void T371f13(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T720f59(TC* ac, T0* C);
/* ET_ALIAS_NAME.reset */
extern void T368f112(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T504f93(TC* ac, T0* C);
/* ET_CLASS.reset_type */
extern void T70f349(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T186f37(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T853f93(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset */
extern void T102f140(TC* ac, T0* C);
extern T1 T102f140ot1(TC* ac, T0* a1);
extern T1 T102f140ot2(TC* ac, T0* a1);
extern T1 T102f140ot3(TC* ac, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T202f23(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T2190f25(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T729f99(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T728f102(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T200f97(TC* ac, T0* C);
/* ET_IDENTIFIER.reset */
extern void T307f142(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T703f9(TC* ac, T0* C);
/* ET_CREATOR_LIST.reset */
extern void T80f11(TC* ac, T0* C);
/* ET_CREATOR.reset */
extern void T82f19(TC* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T543f56(TC* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T543f56p1(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T683f80(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T683f80p1(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T682f80(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T682f80p1(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T681f80(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T681f80p1(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T680f80(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T680f80p1(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T679f81(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T679f81p1(TC* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T678f66(TC* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T678f66p1(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T677f62(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T677f62p1(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T675f63(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T675f63p1(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.reset */
extern void T761f34(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.reset */
extern void T761f34p1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset */
extern void T617f51(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset */
extern void T617f51p0(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset_unfolded_form */
extern void T617f52(TC* ac, T0* C);
/* ET_INVARIANT_KEYWORD.reset */
extern void T280f62(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset */
extern void T617f51p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T343f59(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T343f59p0(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T343f60(TC* ac, T0* C);
/* ET_VARIANT.reset */
extern void T654f9(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T560f24(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T343f59p1(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T760f38(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T760f38p1(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T759f40(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T759f40p1(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T759f40p0(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T757f42(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T757f42p1(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T757f42p0(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T745f34(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T745f34p1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T1045f42(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T1045f42p0(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T1045f43(TC* ac, T0* C);
extern T1 T1045f43ot1(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.reset */
extern void T1892f21(TC* ac, T0* C);
extern T1 T1892f21ot1(TC* ac, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T2070f33(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.reset */
extern void T2069f36(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T2068f28(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1896f27(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.reset */
extern void T992f32(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.reset */
extern void T992f32p1(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T349f26(TC* ac, T0* C);
extern T1 T349f26ot1(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T1045f42p1(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.reset */
extern void T776f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T768f62(TC* ac, T0* C);
extern T1 T768f62ot1(TC* ac, T0* a1);
/* ET_POSTCONDITIONS.reset */
extern void T605f29(TC* ac, T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T605f29p1(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T608f27(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T608f27p1(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T501f14(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T495f14(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1467f15(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T362f19(TC* ac, T0* C);
extern T1 T362f19ot1(TC* ac, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T770f17(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T770f17p0(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T770f17p1(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T340f108(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1601f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T768f62p1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T767f69(TC* ac, T0* C);
/* ET_COMPOUND.reset */
extern void T407f21(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1046f19(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1046f19p1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T1046f20(TC* ac, T0* C);
extern T1 T1046f20ot1(TC* ac, T0* a1);
/* ET_INLINE_SEPARATE_INSTRUCTION.reset */
extern void T531f16(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.reset */
extern void T528f18(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.reset */
extern void T522f13(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset */
extern void T628f34(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset */
extern void T628f34p1(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset_unfolded_form */
extern void T628f35(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T346f39(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T346f39p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T346f40(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T386f25(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T386f25p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T743f23(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T743f23p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset_arguments */
extern void T743f24(TC* ac, T0* C);
extern T1 T743f24ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T741f23(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset_arguments */
extern void T741f24(TC* ac, T0* C);
extern T1 T741f24ot1(TC* ac, T0* a1);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T450f16(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T537f19(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T666f13(TC* ac, T0* C);
/* ET_WHEN_PART.reset */
extern void T663f10(TC* ac, T0* C);
/* ET_CHOICE_LIST.reset */
extern void T398f17(TC* ac, T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T739f12(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T516f21(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T462f12(TC* ac, T0* C);
/* ET_ELSEIF_PART.reset */
extern void T459f12(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T738f28(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T736f6(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.reset_arguments */
extern void T736f7(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T735f26(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T733f24(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T732f16(TC* ac, T0* C);
/* ET_ASSIGNMENT.reset */
extern void T731f19(TC* ac, T0* C);
extern T1 T731f19ot1(TC* ac, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T730f27(TC* ac, T0* C);
extern T1 T730f27ot1(TC* ac, T0* a1);
/* ET_RETRY_INSTRUCTION.reset */
extern void T325f27(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T740f24(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T740f24p1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T740f24p0(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T740f25(TC* ac, T0* C);
extern T1 T740f25ot1(TC* ac, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T557f17(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T551f15(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1468f16(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T767f69p1(TC* ac, T0* C);
extern T1 T767f69p1ot1(TC* ac, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T767f69p0(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T766f64(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T766f64p1(TC* ac, T0* C);
extern T1 T766f64p1ot1(TC* ac, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T766f64p0(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T765f65(TC* ac, T0* C);
extern T1 T765f65ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T765f65p1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T764f72(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T764f72p1(TC* ac, T0* C);
extern T1 T764f72p1ot1(TC* ac, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T764f72p0(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T763f67(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T763f67p1(TC* ac, T0* C);
extern T1 T763f67p1ot1(TC* ac, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T763f67p0(TC* ac, T0* C);
/* ET_CALL_AGENT.reset */
extern void T380f47(TC* ac, T0* C);
extern T1 T380f47ot1(TC* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T769f15(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T769f15p0(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T769f15p1(TC* ac, T0* C);
/* ET_CALL_AGENT.reset */
extern void T380f47p1(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T634f42(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T634f42p0(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T634f42p1(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T572f44(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T572f44p0(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T572f44p1(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T563f44(TC* ac, T0* C);
extern T1 T563f44ot1(TC* ac, T0* a1);
/* ET_MANIFEST_ARRAY.reset */
extern void T563f44p1(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T593f35(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T593f35p1(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T377f38(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset_arguments */
extern void T377f39(TC* ac, T0* C);
extern T1 T377f39ot1(TC* ac, T0* a1);
/* ET_BRACKET_SYMBOL.reset */
extern void T337f140(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T377f38p1(TC* ac, T0* C);
/* ET_OBJECT_TEST.reset */
extern void T758f37(TC* ac, T0* C);
/* ET_OBJECT_TEST.reset */
extern void T758f37p1(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T756f35(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T756f35p1(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T755f39(TC* ac, T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T304f64(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T313f66(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T328f163(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T755f39p1(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T754f34(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T754f34p0(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T754f34p1(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T753f37(TC* ac, T0* C);
extern T1 T753f37ot1(TC* ac, T0* a1);
extern T1 T753f37ot2(TC* ac, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T753f37p1(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T752f35(TC* ac, T0* C);
extern T1 T752f35ot1(TC* ac, T0* a1);
extern T1 T752f35ot2(TC* ac, T0* a1);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T752f35p1(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T749f41(TC* ac, T0* C);
extern T1 T749f41ot1(TC* ac, T0* a1);
extern T1 T749f41ot2(TC* ac, T0* a1);
extern T1 T749f41ot3(TC* ac, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T751f45(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T750f45(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T749f41p1(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T748f34(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T748f34p1(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T747f34(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T747f34p1(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T746f34(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T746f34p1(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T744f43(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T744f43p0(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset_arguments */
extern void T744f44(TC* ac, T0* C);
extern T1 T744f44ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T744f43p1(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T631f46(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T631f46p0(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T631f46p2(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset_arguments */
extern void T631f47(TC* ac, T0* C);
extern T1 T631f47ot1(TC* ac, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T631f46p1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T383f43(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T383f43p0(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T383f43p2(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T383f44(TC* ac, T0* C);
extern T1 T383f44ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T383f43p1(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.reset */
extern void T534f37(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.reset */
extern void T660f13(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.reset */
extern void T657f12(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.reset */
extern void T534f37p1(TC* ac, T0* C);
/* ET_IF_EXPRESSION.reset */
extern void T513f40(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.reset */
extern void T456f13(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.reset */
extern void T453f14(TC* ac, T0* C);
/* ET_IF_EXPRESSION.reset */
extern void T513f40p1(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T440f46(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T440f46p1(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.reset */
extern void T723f11(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T690f63(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T690f63p1(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T689f63(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T689f63p1(TC* ac, T0* C);
/* ET_CURRENT.reset */
extern void T301f49(TC* ac, T0* C);
/* ET_RESULT.reset */
extern void T322f47(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T688f54(TC* ac, T0* C);
/* ET_VOID.reset */
extern void T331f45(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T687f54(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T685f58(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T685f58p1(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T684f58(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T684f58p1(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T676f62(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T676f62p1(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.reset */
extern void T598f8(TC* ac, T0* C);
/* ET_PARENT_LIST.reset */
extern void T182f14(TC* ac, T0* C);
/* ET_PARENT.reset */
extern void T181f12(TC* ac, T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T196f10(TC* ac, T0* C);
/* ET_EXPORT_LIST.reset */
extern void T195f11(TC* ac, T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T487f16(TC* ac, T0* C);
/* ET_ALL_EXPORT.reset */
extern void T701f11(TC* ac, T0* C);
/* ET_RENAME_LIST.reset */
extern void T194f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T510f35(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T774f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T718f116(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T718f117(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T718f127(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T501f15(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T726f106(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T184f140(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T2191f29(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T695f102(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T504f98(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T186f38(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T853f95(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T102f148(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T202f24(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T2190f26(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T510f39(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T729f101(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T728f104(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T200f100(TC* ac, T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T70f356(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T718f118(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T717f106(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T717f107(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T717f117(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T717f108(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T716f112(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T716f113(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T716f123(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T716f114(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T716f114p1(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T715f109(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T715f110(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T715f120(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T715f111(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T715f111p1(TC* ac, T0* C);
/* ET_QUERY_LIST.reset */
extern void T773f16(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T714f119(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T714f119p1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T714f120(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T714f129(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T714f121(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T712f109(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T712f109p1(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T712f110(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T712f119(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T712f111(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T711f115(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T711f115p1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T711f116(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T711f125(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T711f117(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T711f117p1(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T710f112(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T710f112p1(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T710f113(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T710f122(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T710f114(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T710f114p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T709f107(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T709f107p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T709f108(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T709f117(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T709f109(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T708f104(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T708f104p1(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T708f105(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T708f114(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T708f106(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T707f111(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T707f111p1(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T707f112(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T707f121(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T707f113(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T707f113p1(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T706f100(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T706f100p1(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T706f101(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T706f110(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_interface_checked */
extern void T706f102(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T189f77(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].do_if */
extern void T69f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T189f76(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].do_all */
extern void T69f29(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T189f75(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_all */
extern void T189f74(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.process */
extern void T89f91(TC* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T239f3(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T232f184(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T232f185(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T232f185ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T232f185ac2(TC* ac, T0* a1);
/* ET_CLASS.is_in_group */
extern T1 T70f200(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T232f189(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove */
extern void T1657f15(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].keep_head */
extern void T1980f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].set_count */
extern void T1980f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_left */
extern void T1657f18(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_cursors_left */
extern void T1657f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_position */
extern void T1982f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove_last */
extern void T1657f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_last_cursors_after */
extern void T1657f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_next_cursor */
extern void T1982f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_after */
extern void T1982f7(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T232f188(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_dependant_constraint */
extern void T89f95(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T834f12(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T1580c17(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_key_equality_tester */
extern void T1968f35(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T1580s7(TC* ac);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_map */
extern T0* T1968c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_with_equality_testers */
extern void T1968f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_sparse_container */
extern void T1968f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_internal_cursor */
extern void T1968f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].unset_found_item */
extern void T1968f38(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_slots */
extern void T1968f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_modulus */
extern T6 T1968f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_clashes */
extern void T1968f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_key_storage */
extern void T1968f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_item_storage */
extern void T1968f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].make */
extern T0* T2172s1(TC* ac, T6 a1);
/* SPECIAL [LX_WILDCARD].make_empty */
extern T0* T2169c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].default_create */
extern T0* T2172c2(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T1580c16(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].put_last */
extern void T1968f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_put */
extern void T1968f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_put */
extern void T1968f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_put */
extern void T1968f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_item */
extern T6 T1968f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].compress */
extern void T1968f41(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].hash_position */
extern T6 T1968f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_wipe_out */
extern void T1968f50(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_wipe_out */
extern void T1968f49(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_keep_head */
extern void T1968f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_keep_head */
extern void T1968f47(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].keep_head */
extern void T2169f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].set_count */
extern void T2169f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].move_all_cursors */
extern void T1968f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_put */
extern void T1968f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].force */
extern void T2172s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_WILDCARD].fill_with */
extern void T2169f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_WILDCARD].extend */
extern void T2169f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].search_position */
extern void T1968f39(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile */
extern void T1967f19(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_DFA_WILDCARD.compile */
extern T0* T1967c19(TC* ac, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T2167c38(TC* ac, T0* a1);
/* LX_FULL_DFA.build */
extern void T2167f41(TC* ac, T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T2167f47(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].first */
extern T0* T2213f6(TC* ac, T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T2167f46(TC* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].target */
extern T0* T2252f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].value */
extern T0* T2321f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_item */
extern T0* T2321f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].position_of_key */
extern T6 T2321f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_item */
extern T6 T2321f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_item */
extern T6 T2321f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].hash_position */
extern T6 T2321f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_item */
extern T6 T2321f23(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T2244f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].is_empty */
extern T1 T2213f11(TC* ac, T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T2167f45(TC* ac, T0* C, T0* a1);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].set_target */
extern void T2252f9(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].force_new */
extern void T2321f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_put */
extern void T2321f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_put */
extern void T2321f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].force */
extern void T2318s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].fill_with */
extern void T2317f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].extend */
extern void T2317f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_put */
extern void T2321f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_put */
extern void T2321f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].resize */
extern void T2321f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_resize */
extern void T2321f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].special_integer_ */
extern T0* T2321s34(TC* ac);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_resize */
extern void T2321f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_resize */
extern void T2321f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].aliased_resized_area */
extern T0* T2318s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].aliased_resized_area */
extern T0* T2317f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_resize */
extern void T2321f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_modulus */
extern T6 T2321f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_capacity */
extern T6 T2321f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].unset_found_item */
extern void T2321f42(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].replace_found_item */
extern void T2321f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].found */
extern T1 T2321f20(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].search */
extern void T2321f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].search_position */
extern void T2321f47(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T2247f4(TC* ac, T0* C, T6 a1);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].item */
extern T0* T2305f4(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T2167f37(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T2244f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].put_last */
extern void T2246f9(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T2244f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_equal */
extern T1 T2245f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].any_ */
extern T0* T2245s17(TC* ac);
/* LX_DFA_STATE.any_ */
extern T0* T2244s14(TC* ac);
/* LX_DFA_STATE.new_state */
extern T0* T2244f9(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T2244c16(TC* ac, T0* a1, T6 a2, T6 a3);
extern T1 T2244f16ot1(TC* ac, T0* a1);
/* LX_RULE.set_useful */
extern void T2230f22(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [LX_RULE].sort */
extern void T2213f17(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort */
extern void T2310f3(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort_with_comparator */
extern void T2310f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_RULE].subsort_with_comparator */
extern void T2310f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_RULE].replace */
extern void T2213f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].less_than */
extern T1 T2334f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].detachable_less_than */
extern T1 T2334f2(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].attached_less_than */
extern T1 T2334f3(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_RULE.is_less */
extern T1 T2230f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].item */
extern T0* T2213f10(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern T0* T2244f7(TC* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_RULE].make */
extern T0* T2310c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].make */
extern T0* T2334c4(TC* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].sort */
extern void T2245f25(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort */
extern void T2308f3(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort_with_comparator */
extern void T2308f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].subsort_with_comparator */
extern void T2308f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_NFA_STATE].replace */
extern void T2245f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].less_than */
extern T1 T2337f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].detachable_less_than */
extern T1 T2337f2(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].attached_less_than */
extern T1 T2337f3(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.is_less */
extern T1 T2255f9(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern T0* T2244f8(TC* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].make */
extern T0* T2308c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].make */
extern T0* T2337c4(TC* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].last */
extern T0* T2245f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_empty */
extern T1 T2245f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_last */
extern void T2213f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].force */
extern void T2282s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_RULE].fill_with */
extern void T2243f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_RULE].extend */
extern void T2243f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].resize */
extern void T2213f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].aliased_resized_area */
extern T0* T2282s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].aliased_resized_area */
extern T0* T2243f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].new_capacity */
extern T6 T2213f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].extendible */
extern T1 T2213f8(TC* ac, T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T2255f6(TC* ac, T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T2255f8(TC* ac, T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T2255f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].has */
extern T1 T2245f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].force_last */
extern void T2245f23(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].force */
extern void T2314s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].fill_with */
extern void T2312f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].extend */
extern void T2312f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].resize */
extern void T2245f28(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].aliased_resized_area */
extern T0* T2314s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [LX_NFA_STATE].aliased_resized_area */
extern T0* T2312f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_capacity */
extern T6 T2245f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extendible */
extern T1 T2245f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].make */
extern T0* T2213c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].set_internal_cursor */
extern void T2213f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].new_cursor */
extern T0* T2213f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].make */
extern T0* T2283c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].make */
extern T0* T2282s1(TC* ac, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern void T2243f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern T0* T2243c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].default_create */
extern T0* T2282c3(TC* ac);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].make */
extern T0* T2252c8(TC* ac, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_map */
extern T0* T2321c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_with_equality_testers */
extern void T2321f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_sparse_container */
extern void T2321f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].set_internal_cursor */
extern void T2321f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_cursor */
extern T0* T2321f27(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32].make */
extern T0* T2350c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_slots */
extern void T2321f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_clashes */
extern void T2321f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_key_storage */
extern void T2321f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_item_storage */
extern void T2321f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].make */
extern T0* T2318s1(TC* ac, T6 a1);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern T0* T2317c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].default_create */
extern T0* T2318c3(TC* ac);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T2244f13(TC* ac, T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T2244f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_last */
extern void T2245f20(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].target */
extern T0* T2302f2(TC* ac, T0* C);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].target */
extern T0* T2301f2(TC* ac, T0* C);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].target */
extern T0* T2298f1(TC* ac, T0* C);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2302f3(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2301f3(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.has */
extern T1 T2217f13(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.added */
extern T1 T2217f17(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.index_in_chunk */
extern T6 T2217f12(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.chunk */
extern T0* T2217f11(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.chunk_index */
extern T6 T2217f14(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.masks */
extern T0* T2217f10(TC* ac, T0* C);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2298f2(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].item */
extern T0* T2245f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].make */
extern T0* T2245c19(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].set_internal_cursor */
extern void T2245f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_cursor */
extern T0* T2245f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].make */
extern T0* T2315c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].make */
extern T0* T2314s1(TC* ac, T6 a1);
/* SPECIAL [LX_NFA_STATE].make_empty */
extern T0* T2312c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].default_create */
extern T0* T2314c3(TC* ac);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T2247f8(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T2244f18(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].record */
extern void T2302f5(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T2247f13(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T2247f13p1(TC* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].forget_left */
extern void T2306f7(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].forget_right */
extern void T2306f6(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_right */
extern void T2306f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_left */
extern void T2306f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].force */
extern void T946f86(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].record */
extern void T2301f5(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T2247f12(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T2247f12p1(TC* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].record */
extern void T2298f4(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T2247f11(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T2247f11p1(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.new_lower */
extern T6 T2247f9(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_left */
extern void T2306f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_right */
extern void T2306f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].put */
extern void T2306f8(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T2247f7(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T2247f6(TC* ac, T0* C);
/* LX_FULL_DFA.resize */
extern void T2167f50(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].resize */
extern void T2246f10(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T2247f5(TC* ac, T0* C);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].count */
extern T6 T2305f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_DFA_STATE].item */
extern T0* T2246f7(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T2247c10(TC* ac, T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T2247f10p1(TC* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].put */
extern void T2305f7(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T2305c6(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled_area */
extern void T2305f8(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T2307c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].fill_with */
extern void T2307f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].extend */
extern void T2307f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_empty */
extern void T2307f6(TC* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].make */
extern T0* T2306c4(TC* ac, T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T2167f40(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_first */
extern void T2213f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].put */
extern void T2213f18(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].move_cursors_right */
extern void T2213f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].set_position */
extern void T2283f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].move_right */
extern void T2213f20(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].put_last */
extern void T2213f19(TC* ac, T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T2230c14(TC* ac, T6 a1);
/* LX_RULE.dummy_action */
extern T0* T2230f11(TC* ac, T0* C);
/* LX_ACTION.make */
extern T0* T2304c2(TC* ac, T0* a1);
/* LX_RULE.dummy_pattern */
extern T0* T2230f12(TC* ac, T0* C);
/* LX_NFA.make_epsilon */
extern T0* T2228c6(TC* ac, T1 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_first */
extern void T2245f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put */
extern void T2245f27(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_cursors_right */
extern void T2245f31(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_position */
extern void T2315f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_right */
extern void T2245f30(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T2255f11(TC* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].make */
extern T0* T2298c3(TC* ac, T0* a1);
/* LX_NFA_STATE.make */
extern T0* T2255c10(TC* ac, T1 a1);
/* LX_FULL_DFA.initialize */
extern void T2167f39(TC* ac, T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T2167f44(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T2167f49(TC* ac, T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T2228f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].first */
extern T0* T2245f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA].item */
extern T0* T2253f7(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T2214f9(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T2167f48(TC* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T2255f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].force */
extern void T2254f35(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_put */
extern void T2254f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_put */
extern void T2254f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_put */
extern void T2254f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_item */
extern T6 T2254f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_item */
extern T6 T2254f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].hash_position */
extern T6 T2254f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].resize */
extern void T2254f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_resize */
extern void T2254f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].special_integer_ */
extern T0* T2254s31(TC* ac);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_resize */
extern void T2254f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_resize */
extern void T2254f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].aliased_resized_area */
extern T0* T2227s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [LX_NFA].aliased_resized_area */
extern T0* T2229f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_item */
extern T6 T2254f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_resize */
extern void T2254f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_modulus */
extern T6 T2254f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_capacity */
extern T6 T2254f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_put */
extern void T2254f39(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_NFA].force */
extern void T2227s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA].fill_with */
extern void T2229f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA].extend */
extern void T2229f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].search_position */
extern void T2254f36(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [INTEGER_32].test */
extern T1 T1402f1(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].unset_found_item */
extern void T2254f38(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item */
extern T0* T2254f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_item */
extern T0* T2254f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].has */
extern T1 T2254f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make */
extern T0* T2254c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_with_equality_testers */
extern void T2254f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_sparse_container */
extern void T2254f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].set_internal_cursor */
extern void T2254f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_cursor */
extern T0* T2254f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32].make */
extern T0* T2324c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_slots */
extern void T2254f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_clashes */
extern void T2254f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_key_storage */
extern void T2254f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_item_storage */
extern void T2254f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].make */
extern T0* T2227s1(TC* ac, T6 a1);
/* SPECIAL [LX_NFA].make_empty */
extern T0* T2229c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].default_create */
extern T0* T2227c3(TC* ac);
/* KL_EQUALITY_TESTER [INTEGER_32].default_create */
extern T0* T1402c2(TC* ac);
/* DS_ARRAYED_LIST [LX_DFA_STATE].make */
extern T0* T2246c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].set_internal_cursor */
extern void T2246f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].new_cursor */
extern T0* T2246f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE].make */
extern T0* T2319c3(TC* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T2232f6(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T2232f5(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T2232f4(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T2232f3(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.new_lower */
extern T6 T2232f7(TC* ac, T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T2167f43(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_RULE].put */
extern void T2249f5(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_RULE].make_filled */
extern T0* T2249c4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_RULE].make_filled_area */
extern void T2249f6(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable LX_RULE].make_filled */
extern T0* T2250c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable LX_RULE].fill_with */
extern void T2250f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable LX_RULE].extend */
extern void T2250f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable LX_RULE].make_empty */
extern void T2250f6(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.build_rules */
extern void T2167f42(TC* ac, T0* C, T0* a1);
/* ARRAY [LX_RULE].put */
extern void T2242f5(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [LX_RULE].make_filled */
extern T0* T2242c4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].make_filled_area */
extern void T2242f6(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].make_filled */
extern T0* T2243c5(TC* ac, T0* a1, T6 a2);
/* KL_ARRAY_ROUTINES [LX_RULE].make_empty_with_lower */
extern T0* T2248s1(TC* ac, T6 a1);
/* ARRAY [LX_RULE].make_from_array */
extern T0* T2242c8(TC* ac, T0* a1);
/* ARRAY [LX_RULE].set_area */
extern void T2242f10(TC* ac, T0* C, T0* a1);
/* KL_ARRAY [LX_RULE].new_rebase */
extern void T2320f5(TC* ac, T0* C, T6 a1);
/* KL_ARRAY [LX_RULE].make_empty */
extern T0* T2320c4(TC* ac);
/* KL_ARRAY [LX_RULE].make_empty_area */
extern void T2320f6(TC* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_empty */
extern T0* T2242c7(TC* ac);
/* ARRAY [LX_RULE].make_empty_area */
extern void T2242f9(TC* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [LX_RULE].default_create */
extern T0* T2248c2(TC* ac);
/* LX_START_CONDITIONS.names */
extern T0* T2214f7(TC* ac, T0* C);
/* LX_START_CONDITIONS.first */
extern T0* T2214f6(TC* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].make_empty_with_lower */
extern T0* T2284s1(TC* ac, T6 a1);
/* ARRAY [STRING_8].make_from_array */
extern T0* T34c11(TC* ac, T0* a1);
/* ARRAY [STRING_8].set_area */
extern void T34f13(TC* ac, T0* C, T0* a1);
/* KL_ARRAY [STRING_8].new_rebase */
extern void T2348f5(TC* ac, T0* C, T6 a1);
/* KL_ARRAY [STRING_8].make_empty */
extern T0* T2348c4(TC* ac);
/* KL_ARRAY [STRING_8].make_empty_area */
extern void T2348f6(TC* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_empty */
extern T0* T34c10(TC* ac);
/* ARRAY [STRING_8].make_empty_area */
extern void T34f12(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.string_array_routines */
extern T0* T2214s11(TC* ac);
/* KL_ARRAY_ROUTINES [STRING_8].default_create */
extern T0* T2284c2(TC* ac);
/* LX_WILDCARD_PARSER.parse_string */
extern void T2165f247(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.parse */
extern void T2165f251(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T2165f264(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_error_value */
extern void T2165f263(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_action */
extern void T2165f262(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.twin */
extern T0* T2217f21(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.copy */
extern void T2217f30(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].twin */
extern T0* T1355f7(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.chunk_of_ones */
extern T0* T2217f20(TC* ac, T0* C);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].make_filled */
extern T0* T2293c5(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].fill_with */
extern void T2293f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].extend */
extern void T2293f9(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].make_empty */
extern void T2293f8(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.remove_symbol_class */
extern void T2217f29(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.add_symbol_class */
extern void T2217f28(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].filled_with */
extern T1 T1355f6(TC* ac, T0* C, T11 a1, T6 a2, T6 a3);
/* LX_SYMBOL_CLASS.attached_other_sets */
extern T0* T2217f19(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T2165f188(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* LX_SYMBOL_CLASS.add_symbol */
extern void T2217f26(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.attached_chunk */
extern T0* T2217f18(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T2165f304(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T2275c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.filename */
extern T0* T2165f209(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2225s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2226f4(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T2165f187(TC* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_character_class */
extern T0* T2165f186(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.make */
extern T0* T2217c25(TC* ac, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.set_negated */
extern void T2217f27(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].force */
extern void T2220f37(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_put */
extern void T2220f47(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [STRING_32].force */
extern void T2223s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [STRING_32].fill_with */
extern void T2224f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_32].extend */
extern void T2224f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_put */
extern void T2220f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_put */
extern void T2220f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_item */
extern T6 T2220f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_item */
extern T6 T2220f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].hash_position */
extern T6 T2220f22(TC* ac, T0* C, T0* a1);
/* STRING_32.hash_code */
extern T6 T18f21(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].resize */
extern void T2220f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_resize */
extern void T2220f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].special_integer_ */
extern T0* T2220s32(TC* ac);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_resize */
extern void T2220f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_32].aliased_resized_area */
extern T0* T2223s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_32].aliased_resized_area */
extern T0* T2224f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_resize */
extern void T2220f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_item */
extern T0* T2220f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_resize */
extern void T2220f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_modulus */
extern T6 T2220f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_capacity */
extern T6 T2220f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_put */
extern void T2220f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].search_position */
extern void T2220f42(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING_32].test */
extern T1 T2221f1(TC* ac, T0* C, T0* a1, T0* a2);
/* STRING_32.is_equal */
extern T1 T18f20(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].same_items */
extern T1 T16f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].unset_found_item */
extern void T2220f41(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].force_new */
extern void T2219f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_put */
extern void T2219f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_put */
extern void T2219f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_put */
extern void T2219f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_item */
extern T6 T2219f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].hash_position */
extern T6 T2219f19(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.hash_code */
extern T6 T2217f22(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_item */
extern T6 T2219f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].resize */
extern void T2219f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_resize */
extern void T2219f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].special_integer_ */
extern T0* T2219s30(TC* ac);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_storage_resize */
extern void T2219f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_resize */
extern void T2219f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_storage_item */
extern T0* T2219f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_item */
extern T0* T2219f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_resize */
extern void T2219f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_modulus */
extern T6 T2219f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_capacity */
extern T6 T2219f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].unset_found_item */
extern void T2219f44(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].found_item */
extern T0* T2219f24(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].found */
extern T1 T2219f26(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].search */
extern void T2219f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].search_position */
extern void T2219f46(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS].test */
extern T1 T2289f1(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_SYMBOL_CLASS.is_equal */
extern T1 T2217f24(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.same_symbol_class */
extern T1 T2217f23(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].same_items */
extern T1 T1355f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_equality_tester */
extern T0* T2219f27(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].force */
extern void T2225s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].fill_with */
extern void T2226f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].extend */
extern void T2226f10(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T2165f184(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T2165f238(TC* ac, T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T2228c12(TC* ac, T0* a1, T1 a2);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].make */
extern T0* T2301c4(TC* ac, T0* a1, T0* a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].force */
extern void T2219f39(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_utf8_character_class */
extern T0* T2165f240(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_unions_of_concatenations_of_symbol_classes */
extern T0* T2165f244(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].item */
extern T0* T2274f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].first */
extern T0* T2274f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].item */
extern T0* T2273f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].force_new */
extern void T2216f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_put */
extern void T2216f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_put */
extern void T2216f43(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].force */
extern void T2291s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].fill_with */
extern void T2288f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].extend */
extern void T2288f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_put */
extern void T2216f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_put */
extern void T2216f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_item */
extern T6 T2216f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].hash_position */
extern T6 T2216f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_item */
extern T6 T2216f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].resize */
extern void T2216f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_resize */
extern void T2216f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].special_integer_ */
extern T0* T2216s31(TC* ac);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_resize */
extern void T2216f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_resize */
extern void T2216f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].aliased_resized_area */
extern T0* T2291s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].aliased_resized_area */
extern T0* T2288f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_item */
extern T0* T2216f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_resize */
extern void T2216f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_modulus */
extern T6 T2216f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_capacity */
extern T6 T2216f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].unset_found_item */
extern void T2216f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].is_empty */
extern T1 T2273f6(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.append_concatenations_of_symbol_classes_from_utf8_n_byte_character_class */
extern void T2165f313(TC* ac, T0* C, T0* a1, T6 a2, T0* a3, T0* a4);
/* DS_HASH_SET [INTEGER_32].new_iterator */
extern T0* T946f39(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_equal */
extern T1 T946f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].same_equality_tester */
extern T1 T946f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].any_ */
extern T0* T946s40(TC* ac);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].put */
extern void T2271f6(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].item */
extern T0* T2271f4(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].make_filled */
extern T0* T2271c5(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].make_filled_area */
extern void T2271f7(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].make_filled */
extern T0* T2272c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].fill_with */
extern void T2272f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].extend */
extern void T2272f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].make_empty */
extern void T2272f6(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_concatenations_of_symbol_classes_from_utf8_2_byte_character_class */
extern void T2165f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [detachable LX_SYMBOL_CLASS].put */
extern void T2269f6(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_SYMBOL_CLASS].item */
extern T0* T2269f4(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable LX_SYMBOL_CLASS].make_filled */
extern T0* T2269c5(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_SYMBOL_CLASS].make_filled_area */
extern void T2269f7(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable LX_SYMBOL_CLASS].make_filled */
extern T0* T2270c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable LX_SYMBOL_CLASS].fill_with */
extern void T2270f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable LX_SYMBOL_CLASS].extend */
extern void T2270f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable LX_SYMBOL_CLASS].make_empty */
extern void T2270f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].force_last */
extern void T2273f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].force */
extern void T2341s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].fill_with */
extern void T2340f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].extend */
extern void T2340f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].resize */
extern void T2273f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].aliased_resized_area */
extern T0* T2341s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].aliased_resized_area */
extern T0* T2340f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].new_capacity */
extern T6 T2273f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].extendible */
extern T1 T2273f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].put_last */
extern void T2274f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].make */
extern T0* T2274c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2274f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].new_cursor */
extern T0* T2274f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS].make */
extern T0* T2343c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].make */
extern T0* T2225s1(TC* ac, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].make_empty */
extern T0* T2226c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].default_create */
extern T0* T2225c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2273c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].set_internal_cursor */
extern void T2273f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].new_cursor */
extern T0* T2273f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2342c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2341s1(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make_empty */
extern T0* T2340c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].default_create */
extern T0* T2341c3(TC* ac);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].found_item */
extern T0* T2216f33(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_item */
extern T0* T2216f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].found */
extern T1 T2216f21(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].search */
extern void T2216f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].search_position */
extern void T2216f38(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.question_character_class */
extern T0* T2165f183(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].force_new */
extern void T2220f39(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].found_item */
extern T0* T2220f28(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_item */
extern T0* T2220f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].found */
extern T1 T2220f34(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].search */
extern void T2220f38(TC* ac, T0* C, T0* a1);
/* LX_NFA.build_optional */
extern void T2228f11(TC* ac, T0* C);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T2255f12(TC* ac, T0* C, T0* a1);
/* LX_NFA.final_state */
extern T0* T2228f5(TC* ac, T0* C);
/* LX_NFA.build_positive_closure */
extern void T2228f10(TC* ac, T0* C);
/* LX_NFA.build_closure */
extern void T2228f9(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T2165f182(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T2165f239(TC* ac, T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T2228c13(TC* ac, T6 a1, T1 a2);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].make */
extern T0* T2302c4(TC* ac, T6 a1, T0* a2);
/* STRING_32.append_integer */
extern void T18f41(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T2165f181(TC* ac, T0* C, T6 a1, T0* a2);
/* STRING_8.item_code */
extern T6 T17f48(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T2165f179(TC* ac, T0* C);
/* DS_ARRAYED_STACK [BOOLEAN].item */
extern T1 T2222f5(TC* ac, T0* C);
/* LX_NFA.build_concatenation */
extern void T2228f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].append_last */
extern void T2245f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extend_last */
extern void T2245f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].forth */
extern void T2315f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_forth */
extern void T2245f33(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].add_traversing_cursor */
extern void T2245f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_next_cursor */
extern void T2315f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].remove_traversing_cursor */
extern void T2245f35(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].item */
extern T0* T2315f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_item */
extern T0* T2245f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].after */
extern T1 T2315f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].start */
extern void T2315f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_start */
extern void T2245f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_after */
extern void T2315f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].off */
extern T1 T2315f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].before */
extern T1 T2315f8(TC* ac, T0* C);
/* LX_NFA.build_union */
extern void T2228f7(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T2165f279(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T2233c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_rule */
extern void T2165f278(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T2214f13(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITION.add_nfa */
extern void T2251f7(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITION.put_nfa */
extern void T2251f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].force_last */
extern void T2253f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].resize */
extern void T2253f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].new_capacity */
extern T6 T2253f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].extendible */
extern T1 T2253f8(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITION.put_bol_nfa */
extern void T2251f8(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T2214f15(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITIONS.is_empty */
extern T1 T2214f8(TC* ac, T0* C);
/* LX_DESCRIPTION.set_bol_needed */
extern void T2166f40(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T2166f39(TC* ac, T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T2230f21(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T2230f20(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T2230f19(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T2230f18(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T2230f17(TC* ac, T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T2230f16(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T2230f15(TC* ac, T0* C, T0* a1);
/* LX_NFA.set_accepted_rule */
extern void T2228f14(TC* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T2255f13(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.check_options */
extern void T2165f277(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T2165f296(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T2240c8(TC* ac);
/* LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T2165f295(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T2239c8(TC* ac);
/* LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T2165f294(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T2238c8(TC* ac);
/* LX_WILDCARD_PARSER.build_equiv_classes */
extern void T2165f276(TC* ac, T0* C);
/* LX_DESCRIPTION.set_equiv_classes */
extern void T2166f38(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T2217f33(TC* ac, T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T2232f9(TC* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T2232f8(TC* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T2232f12(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].forth */
extern void T2231f11(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_forth */
extern void T2219f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].add_traversing_cursor */
extern void T2219f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_next_cursor */
extern void T2231f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_position */
extern void T2231f13(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].remove_traversing_cursor */
extern void T2219f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_after */
extern void T2231f12(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T2232f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].item */
extern T0* T2231f5(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_item */
extern T0* T2219f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].after */
extern T1 T2231f7(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].start */
extern void T2231f10(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_start */
extern void T2219f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_off */
extern T1 T2219f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].off */
extern T1 T2231f8(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].is_empty */
extern T1 T2219f33(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_cursor */
extern T0* T2219f25(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].make */
extern T0* T2231c9(TC* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T2232c10(TC* ac, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T2232f13(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.set_maximum_symbol_equivalence_class */
extern void T2165f275(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.set_maximum_symbol_equivalence_class */
extern void T2217f32(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].upper */
extern T6 T2293f4(TC* ac, T0* C);
/* LX_DESCRIPTION.set_maximum_symbol */
extern void T2166f37(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_last_value */
extern void T2165f261(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.accept */
extern void T2165f260(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_error_action */
extern void T2165f258(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_error */
extern void T2165f274(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T2165f273(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.read_token */
extern void T2165f257(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_execute_action */
extern void T2165f272(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.character_text */
extern T0* T2165f208(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.unicode_text_item */
extern T3 T2165f221(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.text */
extern T0* T2165f241(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.substring */
extern T0* T266f14(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_WILDCARD_PARSER.text_count */
extern T6 T2165f227(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_bad_character_error */
extern void T2165f293(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T2237c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T2165f292(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T2236c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_unicode_character */
extern void T2165f291(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_character */
extern void T2165f299(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_invalid_character_error */
extern void T2165f282(TC* ac, T0* C, T0* a1);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.make */
extern T0* T2234c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T2165f301(TC* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T2241c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.process_hexadecimal_character */
extern void T2165f290(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_octal_character */
extern void T2165f289(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_escaped_character */
extern void T2165f288(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T2165f287(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T2235c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_single_character */
extern void T2165f286(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.text_item */
extern T2 T2165f201(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.less */
extern void T2165f285(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_set_line_column */
extern void T2165f298(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.character_class_with_name */
extern T0* T2165f195(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.unicode_text */
extern T0* T2165f194(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.unicode_substring */
extern T0* T266f13(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.unicode_substring */
extern T0* T1595f10(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.append_unicode_substring_to_string */
extern void T1595f19(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* STRING_32.append_substring_general */
extern void T18f42(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_WILDCARD_PARSER.set_start_condition */
extern void T2165f284(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T2165f271(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.terminate */
extern void T2165f283(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.wrap */
extern T1 T2165f165(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T2165f270(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_set_content */
extern void T2165f267(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_BUFFER.fill */
extern void T1155f15(TC* ac, T0* C);
/* YY_UNICODE_BUFFER.set_index */
extern void T1155f13(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T2165f164(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T2165f163(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.fatal_error */
extern void T2165f269(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T39f9(TC* ac, T0* C, T2 a1);
/* KL_STDERR_FILE.console */
extern T0* T39s1(TC* ac);
/* STD_FILES.error */
extern T0* T1031s2(TC* ac);
/* CONSOLE.make_open_stderr */
extern T0* T1669c21(TC* ac, T0* a1);
/* KL_STDERR_FILE.io */
extern T0* T39s3(TC* ac);
/* LX_WILDCARD_PARSER.std */
extern T0* T2165s189(TC* ac);
/* LX_WILDCARD_PARSER.report_invalid_unicode_character_error */
extern void T2165f268(TC* ac, T0* C, T10 a1);
/* LX_WILDCARD_PARSER.yy_at_beginning_of_line */
extern T6 T2165f132(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.special_integer_ */
extern T0* T2165s129(TC* ac);
/* LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T2165f256(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_all */
extern void T2165f265(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_all */
extern void T2165f280(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_stacks */
extern void T2165f297(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T2165f300(TC* ac, T0* C);
/* SPECIAL [LX_NFA].keep_head */
extern void T2229f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].set_count */
extern void T2229f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].keep_head */
extern void T2226f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].set_count */
extern void T2226f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_32].keep_head */
extern void T2224f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_32].set_count */
extern void T2224f9(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.abort */
extern void T2165f259(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.set_input_buffer */
extern void T2165f250(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T2165f255(TC* ac, T0* C);
/* YY_UNICODE_BUFFER.set_position */
extern void T1155f14(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* LX_WILDCARD_PARSER.new_unicode_string_buffer */
extern T0* T2165f147(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_BUFFER.make */
extern T0* T1155c12(TC* ac, T0* a1);
/* YY_UNICODE_BUFFER.make_from_buffer */
extern void T1155f16(TC* ac, T0* C, T0* a1);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_string */
extern void T266f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_substring */
extern void T266f23(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_UNICODE_BUFFER.new_default_buffer */
extern T0* T1155f11(TC* ac, T0* C, T6 a1);
/* KL_UNICODE_CHARACTER_BUFFER.make */
extern T0* T266c15(TC* ac, T6 a1);
/* STRING_32.make_filled */
extern T0* T18c37(TC* ac, T3 a1, T6 a2);
/* STRING_32.fill_character */
extern void T18f40(TC* ac, T0* C, T3 a1);
/* LX_WILDCARD_PARSER.make_from_description */
extern T0* T2165c246(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make */
extern T0* T2216c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_with_equality_testers */
extern void T2216f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_sparse_container */
extern void T2216f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2216f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_cursor */
extern T0* T2216f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make */
extern T0* T2292c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_slots */
extern void T2216f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_clashes */
extern void T2216f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_key_storage */
extern void T2216f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_item_storage */
extern void T2216f50(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].make */
extern T0* T2291s2(TC* ac, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].make_empty */
extern T0* T2288c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].default_create */
extern T0* T2291c3(TC* ac);
/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS].default_create */
extern T0* T2289c2(TC* ac);
/* LX_ACTION_FACTORY.make */
extern T0* T2215c1(TC* ac);
/* LX_START_CONDITIONS.make */
extern void T2214f12(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T2214c12(TC* ac, T6 a1);
/* LX_START_CONDITIONS.set_internal_cursor */
extern void T2214f16(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T2214f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].make */
extern T0* T2287c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].make */
extern T0* T2286s1(TC* ac, T6 a1);
/* SPECIAL [LX_START_CONDITION].make_empty */
extern T0* T2285c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].default_create */
extern T0* T2286c2(TC* ac);
/* LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T2165f249(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T2165f254(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yycheck_template */
extern T0* T2165f178(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T2165f232(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yytable_template */
extern T0* T2165f177(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yypgoto_template */
extern T0* T2165f176(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yypact_template */
extern T0* T2165f174(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefgoto_template */
extern T0* T2165f173(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefact_template */
extern T0* T2165f172(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes2_template */
extern T0* T2165f171(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes1_template */
extern T0* T2165f169(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yyr1_template */
extern T0* T2165f160(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template */
extern T0* T2165f159(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T2165f303(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T2165f314(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.integer_array_ */
extern T0* T2165s245(TC* ac);
/* LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T2165f302(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T2165f253(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [STRING_32].make */
extern T0* T2223s1(TC* ac, T6 a1);
/* SPECIAL [STRING_32].make_empty */
extern T0* T2224c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_32].default_create */
extern T0* T2223c3(TC* ac);
/* LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T2165f248(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [BOOLEAN].force */
extern void T2222f9(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_STACK [BOOLEAN].resize */
extern void T2222f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].new_capacity */
extern T6 T2222f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].extendible */
extern T1 T2222f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].make */
extern T0* T2222c8(TC* ac, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make */
extern void T2219f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make */
extern T0* T2219c36(TC* ac, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2219f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_slots */
extern void T2219f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_clashes */
extern void T2219f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_key_storage */
extern void T2219f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_item_storage */
extern void T2219f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].set_key_equality_tester */
extern void T2220f36(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.string_32_equality_tester */
extern T0* T2165s143(TC* ac);
/* KL_EQUALITY_TESTER [STRING_32].default_create */
extern T0* T2221c2(TC* ac);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_map */
extern T0* T2220c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_with_equality_testers */
extern void T2220f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_sparse_container */
extern void T2220f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].set_internal_cursor */
extern void T2220f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_cursor */
extern T0* T2220f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32].make */
extern T0* T2297c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_slots */
extern void T2220f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_clashes */
extern void T2220f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_key_storage */
extern void T2220f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_item_storage */
extern void T2220f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_equal */
extern T0* T2219c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].set_key_equality_tester */
extern void T2218f21(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T2165s126(TC* ac);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_map */
extern T0* T2218c20(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_with_equality_testers */
extern void T2218f22(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_sparse_container */
extern void T2218f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].set_internal_cursor */
extern void T2218f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].new_cursor */
extern T0* T2218f17(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_32, STRING_8].make */
extern T0* T2295c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].unset_found_item */
extern void T2218f28(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_slots */
extern void T2218f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].new_modulus */
extern T6 T2218f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_clashes */
extern void T2218f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_key_storage */
extern void T2218f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_item_storage */
extern void T2218f24(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.make_with_buffer */
extern void T2165f252(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T2165f266(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T2165f266p1(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_tables */
extern void T2165f281(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_accept_template */
extern T0* T2165f218(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T2165f242(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_meta_template */
extern T0* T2165f217(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template */
extern T0* T2165f216(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T2165f311(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T2165f315(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.yy_def_template */
extern T0* T2165f215(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_base_template */
extern T0* T2165f214(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template */
extern T0* T2165f213(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template_3 */
extern void T2165f310(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_chk_template_2 */
extern void T2165f309(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_chk_template_1 */
extern void T2165f308(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template */
extern T0* T2165f212(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_nxt_template_3 */
extern void T2165f307(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template_2 */
extern void T2165f306(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template_1 */
extern void T2165f305(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.empty_buffer */
extern T0* T2165f139(TC* ac, T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T2166f36(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T2166f35(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T2166f34(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T2166f33(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T2166c32(TC* ac);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T2214c14(TC* ac, T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T2214f17(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T2214f18(TC* ac, T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T2214f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].set_position */
extern void T2287f5(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T2214f20(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].force */
extern void T2286s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].fill_with */
extern void T2285f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].extend */
extern void T2285f7(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put_last */
extern void T2214f19(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T2251c6(TC* ac, T0* a1, T6 a2, T1 a3);
/* DS_ARRAYED_LIST [LX_NFA].make */
extern T0* T2253c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].set_internal_cursor */
extern void T2253f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].new_cursor */
extern T0* T2253f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA].make */
extern T0* T2322c3(TC* ac, T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T160c12(TC* ac);
/* UT_ERROR_HANDLER.null_output_stream */
extern T0* T160s6(TC* ac);
/* LX_DFA_WILDCARD.wipe_out */
extern void T1967f20(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T1580s9(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T1580s12(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T1580s11(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T1580s8(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T1580s6(TC* ac);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T232f62(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T170c40(TC* ac, T0* a1);
/* ST_SPLITTER.make */
extern T0* T109c11(TC* ac);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T232f187(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T232f187ac1(TC* ac, T0* a1, T0* a2);
extern T1 T232f187ot1(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_provider_constraint */
extern void T89f94(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_provider_constraint */
extern void T834f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.universes_do_all */
extern void T806f179(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T175f10(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T174f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_all */
extern void T87f256(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T232f193(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T828f95(TC* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T828f100(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.full_name */
extern T0* T208f94(TC* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T208f97(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.full_name */
extern T0* T204f95(TC* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_name */
extern T0* T204f96(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.full_name */
extern T0* T50f131(TC* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_name */
extern T0* T87f148(TC* ac, T0* C, T2 a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T63f581(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T2031c26(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T63f177(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T42f581(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T42f177(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_recursive_cluster */
extern void T89f93(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_subcluster */
extern void T89f97(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_parent */
extern void T89f99(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.put_last */
extern void T834f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].force_last */
extern void T1657f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].force */
extern void T1981s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].fill_with */
extern void T1980f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].extend */
extern void T1980f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].resize */
extern void T1657f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1981s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1980f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_capacity */
extern T6 T1657f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].extendible */
extern T1 T1657f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.set_subclusters */
extern void T89f98(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_parent */
extern void T834f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make_empty */
extern T0* T834c9(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].make */
extern T0* T1657c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].set_internal_cursor */
extern void T1657f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_cursor */
extern T0* T1657f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].make */
extern T0* T1982c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].make */
extern T0* T1981s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].make_empty */
extern T0* T1980c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].default_create */
extern T0* T1981c3(TC* ac);
/* ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T89f63(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_overridden_group */
extern void T89f88(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_provider_groups */
extern void T89f84(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_visible_classes */
extern void T89f83(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_mappings */
extern void T89f82(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_renamings */
extern void T89f81(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_classname_prefix */
extern void T89f75(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T89f72(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_hidden */
extern void T89f74(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_read_only */
extern void T89f76(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_override */
extern void T89f87(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_implicit */
extern void T89f104(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_recursive */
extern void T89f77(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_file_rules */
extern void T89f103(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.make_relative */
extern T0* T89c102(TC* ac, T0* a1, T0* a2);
/* UT_VERSION.is_less_equal */
extern T1 T56f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.ecf_1_4_0 */
extern T0* T89s57(TC* ac);
/* ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T89f71(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T834f10(TC* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T152s13(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern T0* T152s26(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T151s13(TC* ac, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T151s28(TC* ac);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T89f55(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.is_included */
extern T1 T1482f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.is_included */
extern T0* T1482f3ac1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2195f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_FILE_RULE.is_included */
extern T1 T1503f9(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T1503f9ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T1503f9ac2(TC* ac, T0* a1);
/* PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]].set_rout_disp_final */
extern void T2263f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T107f306(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T1942f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T1942f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].for_all */
extern T1 T1930f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].item */
extern T0* T1930f10(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T89f50(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T89f55p1(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T232f186(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.reset */
extern void T232f192(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T1120f21(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T232f192p1(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T232f192p0(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T232f192p2(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T232f61(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T232f191(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T232f198(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.more */
extern void T232f204(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T232f116(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T232f199(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T232f202(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.unicode_text_item */
extern T3 T232f113(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.utf8_text_substring */
extern T0* T232f111(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.append_utf8_text_substring_to_string */
extern void T232f205(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T232f201(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T232f109(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T232f108(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T232f107(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T232f106(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T232f105(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T232f104(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T232f100(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T232f203(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T232f197(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T232f200(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T232f92(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T232f196(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T232f142(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T232f91(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T232f90(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T232f195(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.report_invalid_unicode_character_error */
extern void T232f194(TC* ac, T0* C, T10 a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T232s60(TC* ac);
/* ET_EIFFEL_PREPARSER.yy_at_beginning_of_line */
extern T6 T232f72(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T232f140(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T232f58(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T232f129(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T232f190(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ECF_LIBRARY.classes_in_group */
extern T0* T806f109(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T806f109ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T806f109ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T806f109ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern T6 T806f113(TC* ac, T0* C);
/* ET_ECF_SYSTEM.classes_in_group */
extern T0* T87f161(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T87f161ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T87f161ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T87f161ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T87f163(TC* ac, T0* C);
/* ET_SYSTEM.classes_in_group */
extern T0* T50f133(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.classes_in_group */
extern T0* T50f133ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.classes_in_group */
extern T0* T50f133ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.classes_in_group */
extern T0* T50f133ac3(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T50f135(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_if */
extern void T189f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T189f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_override_classes_do_if */
extern void T189f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_universe */
extern T0* T232f57(TC* ac, T0* C);
/* DS_CELL [detachable ET_CLASS].put */
extern void T1848f3(TC* ac, T0* C, T0* a1);
/* DS_CELL [detachable ET_CLASS].make */
extern T0* T1848c2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T89f48(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T89f48p1(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T89f51(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.reset */
extern void T167f41(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T232f56(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern T0* T232f127(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T232s55(TC* ac);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T232s126(TC* ac);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T232s125(TC* ac);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T232s124(TC* ac);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T232s112(TC* ac);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T232f103(TC* ac, T0* C);
/* ET_ECF_CLUSTER.set_preparsed */
extern void T89f92(TC* ac, T0* C, T1 a1);
/* ET_CLUSTERS.do_all */
extern void T94f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T63f580(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.kind_lower_name */
extern T0* T806f119(TC* ac, T0* C);
/* ET_LIBRARY.kind_lower_name */
extern T0* T204f98(TC* ac, T0* C);
/* ET_ECF_CLUSTER.kind_lower_name */
extern T0* T89f67(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T42f580(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T204f155(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T204f155p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.preparse */
extern T0* T204f155p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.preparse */
extern T0* T204f155p1ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.preparse */
extern T0* T204f155p1ac3(TC* ac);
/* Creation of agent #4 in feature ET_LIBRARY.preparse */
extern T0* T204f155p1ac4(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T828f155(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.preparse */
extern void T208f155(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T1271f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].force_last */
extern void T1780f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].force */
extern void T1953s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].fill_with */
extern void T1954f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].extend */
extern void T1954f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].resize */
extern void T1780f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1953s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1954f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1780f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1780f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T806f198(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T175f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.dotnet_assemblies_do_if */
extern void T204f167(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T87f288(TC* ac, T0* C, T0* a1, T0* a2);
/* PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T1534f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T828f96(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T208f95(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].force_last */
extern void T1533f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_put */
extern void T1533f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_put */
extern void T1533f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T1533f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T1533f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].resize */
extern void T1533f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T1533f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T1533s26(TC* ac);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T1533f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T1533f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T1533f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T1533f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T1533f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_resize */
extern void T1533f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T1533f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1533f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T1533f40(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].search_position */
extern void T1533f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T1533f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T1533f37(TC* ac, T0* C);
/* ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T87f238(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac4(TC* ac);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac5(TC* ac);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac6(TC* ac);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac7(TC* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac8(TC* ac);
/* Creation of agent #9 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac9(TC* ac);
/* Creation of agent #10 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac10(TC* ac);
/* Creation of agent #11 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac11(TC* ac);
/* Creation of agent #12 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac12(TC* ac);
/* Creation of agent #13 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac13(TC* ac);
/* Creation of agent #14 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac14(TC* ac);
/* Creation of agent #15 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac15(TC* ac);
/* Creation of agent #16 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac16(TC* ac);
/* Creation of agent #17 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac17(TC* ac);
/* Creation of agent #18 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac18(TC* ac);
/* Creation of agent #19 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac19(TC* ac);
/* Creation of agent #20 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac20(TC* ac);
/* Creation of agent #21 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac21(TC* ac);
/* Creation of agent #22 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac22(TC* ac);
/* Creation of agent #23 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac23(TC* ac, T0* a1);
/* Creation of agent #24 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac24(TC* ac);
/* Creation of agent #25 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac25(TC* ac, T0* a1);
/* Creation of agent #26 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac26(TC* ac);
/* Creation of agent #27 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac27(TC* ac, T0* a1);
/* Creation of agent #28 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac28(TC* ac);
/* Creation of agent #29 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac29(TC* ac, T0* a1);
/* Creation of agent #30 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac30(TC* ac);
/* Creation of agent #31 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T87f238ac31(TC* ac, T1 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T1551f6(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T1551f8(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T1551f10(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].go_after */
extern void T1178f15(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_go_after */
extern void T261f73(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_interface_error */
extern T1 T189f36(TC* ac, T0* C);
/* ET_MASTER_CLASS.interface_checked */
extern T1 T189f35(TC* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T1551f9(TC* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T1551f7(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T1551f4(TC* ac, T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T70f340(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T1550f8(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T1550f10(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T1550f13(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1963f3(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T1550f12(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T1550f11(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1962f6(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1962f7(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T1550f9(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T1550f6(TC* ac, T0* C);
/* ET_CLASS.unset_interface_error */
extern void T70f339(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T1549f7(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T1549f9(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T1549f12(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1549f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1961f3(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T1549f11(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T1549f10(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T1549f8(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T1549f5(TC* ac, T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T70f338(TC* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T1548f7(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T1548f9(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T1548f11(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1960f3(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T1548f10(TC* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T1548f8(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T1548f5(TC* ac, T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T70f337(TC* ac, T0* C);
/* ET_CLASS.not_implementation_checked */
extern T1 T70f191(TC* ac, T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T70f335(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T774f14(TC* ac, T0* C);
/* ET_QUERY_LIST.reset_after_interface_checked */
extern void T773f18(TC* ac, T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T70f334(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_creation_procedures */
extern void T510f37(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T504f95(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_renames */
extern void T510f36(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_renames */
extern void T695f91(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset_renames */
extern void T102f141(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset_renames */
extern void T184f135(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset_renames */
extern void T853f94(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_renames */
extern void T729f100(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_renames */
extern void T728f103(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset_renames */
extern void T726f105(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset_renames */
extern void T200f98(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.reset_renames */
extern void T645f16(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.reset_renames */
extern void T696f10(TC* ac, T0* C);
/* ET_CLASS.reset_renames */
extern void T70f348(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_renames */
extern void T504f94(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T774f13(TC* ac, T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T773f17(TC* ac, T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T70f333(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T189f71(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T189f83(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T189f82(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T1551c5(TC* ac, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T1551s3(TC* ac);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T1550c7(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1963c2(TC* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1962c5(TC* ac, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1962s4(TC* ac);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T1550f7p1(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T1550s5(TC* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T1549c6(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1961c2(TC* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T1549f6p1(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T1549s4(TC* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T1548c6(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1960c2(TC* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T1548f6p1(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T1548s4(TC* ac);
/* ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T87f246(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T87f246ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T828f158(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T828f158p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T208f158(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T208f158p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_if */
extern void T204f159(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_if */
extern void T806f186(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_if */
extern void T87f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_if */
extern void T50f191(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T87f245(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T87f245ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T87f151(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T87f151ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T87f151ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T87f151ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T87f151ac4(TC* ac, T0* a1);
/* PREDICATE [TUPLE].set_rout_disp_final */
extern void T1826f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PREDICATE [TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T1825f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_AGENT_ROUTINES [ANY].call */
extern void T1822s2(TC* ac, T0* a1, T0* a2);
/* UT_TRISTATE.set_true */
extern void T1821f4(TC* ac, T0* C);
/* UT_TRISTATE.is_true */
extern T1 T1821f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T87f251(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T87f251ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T87f251ac2(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T828f165(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T208f165(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIBRARY.master_classes_do_if_until */
extern void T204f166(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T806f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T87f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if_until */
extern void T50f197(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T828f164(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_if */
extern void T178f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T208f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if */
extern void T204f165(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_if */
extern void T806f190(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_if */
extern void T87f254(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_if */
extern void T50f196(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.any_actions */
extern T0* T87s146(TC* ac);
/* KL_AGENT_ROUTINES [ANY].default_create */
extern T0* T1822c1(TC* ac);
/* UT_TRISTATE.make_false */
extern T0* T1821c3(TC* ac);
/* UT_TRISTATE.set_false */
extern void T1821f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM.import_classes */
extern void T87f237(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T87f237ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T87f237ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T87f237ac3(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse */
extern void T87f236(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse */
extern T0* T87f236ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse */
extern T0* T87f236ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse */
extern T0* T87f236ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse */
extern T0* T87f236ac4(TC* ac, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T174f9(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T174f9ac1(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.add_library_recursive */
extern void T806f197(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_library_recursive */
extern T0* T806f197ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].force_last */
extern void T1568f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].slots_put */
extern void T1568f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].clashes_put */
extern void T1568f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].slots_item */
extern T6 T1568f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].hash_position */
extern T6 T1568f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].resize */
extern void T1568f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_resize */
extern void T1568f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].special_integer_ */
extern T0* T1568s27(TC* ac);
/* DS_HASH_SET [ET_LIBRARY].key_storage_resize */
extern void T1568f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_resize */
extern void T1568f45(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].aliased_resized_area */
extern T0* T1965s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_LIBRARY].aliased_resized_area */
extern T0* T1966f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].key_storage_item */
extern T0* T1568f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_item */
extern T0* T1568f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_item */
extern T6 T1568f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].slots_resize */
extern void T1568f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_modulus */
extern T6 T1568f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_capacity */
extern T6 T1568f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_put */
extern void T1568f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].force */
extern void T1965s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIBRARY].fill_with */
extern void T1966f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIBRARY].extend */
extern void T1966f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].search_position */
extern void T1568f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].key_equality_tester */
extern T0* T1568f25(TC* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].unset_found_item */
extern void T1568f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].has */
extern T1 T1568f18(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.add_library_recursive */
extern void T204f158(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_library_recursive */
extern T0* T204f158ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].do_all */
extern void T1568f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make */
extern T0* T1568c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].set_internal_cursor */
extern void T1568f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].new_cursor */
extern T0* T1568f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_LIBRARY].make */
extern T0* T1964c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make_slots */
extern void T1568f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_clashes */
extern void T1568f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_key_storage */
extern void T1568f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_item_storage */
extern void T1568f32(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].make */
extern T0* T1965s1(TC* ac, T6 a1);
/* SPECIAL [ET_LIBRARY].make_empty */
extern T0* T1966c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].default_create */
extern T0* T1965c3(TC* ac);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T175f8(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T175f8ac1(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T828f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T828f157ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].has */
extern T1 T1533f29(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T208f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T208f157ac1(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T242f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T828f154(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T242f6(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.consume */
extern void T208f154(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T1271f2(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T1271f3(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].do_all */
extern void T1533f32(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T1271c5(TC* ac);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].make */
extern T0* T1780c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1780f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1780f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T2030c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].make */
extern T0* T1953s1(TC* ac, T6 a1);
/* SPECIAL [ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1954c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1953c3(TC* ac);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make */
extern T0* T1533c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1533f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1533f17(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1952c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_slots */
extern void T1533f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_clashes */
extern void T1533f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T1533f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T1533f33(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T175f3(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_6 */
extern void T858f60(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_6_metrics */
extern void T858f72(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile */
extern void T66f72(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile */
extern T0* T66f72ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM_PROCESSOR.compile */
extern T0* T66f72ac2(TC* ac, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_marked_classes */
extern void T66f81(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_3 */
extern void T66f85(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_3_metrics */
extern void T66f97(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_metrics */
extern void T66f105(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.report_processor_metrics */
extern void T66f106(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.report_processed_class_count_stack */
extern void T66f107(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.total_processed_class_count */
extern T6 T66f40(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_implementation_internal_error */
extern void T66f96(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_implementation_validity */
extern void T66f95(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.reset_processed_class_count */
extern void T66f104(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.reset_total_processed_class_count */
extern void T66f103(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_4 */
extern void T66f84(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_4_metrics */
extern void T66f94(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_interface_internal_error */
extern void T66f93(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_interface_validity */
extern void T66f92(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_flattening_internal_error */
extern void T66f91(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.flatten_features */
extern void T66f90(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ancestors_internal_error */
extern void T66f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.build_ancestors */
extern void T66f88(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5 */
extern void T66f83(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.check_provider_validity */
extern void T66f87(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5_2 */
extern void T66f86(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.report_degree_5_2_metrics */
extern void T66f102(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_syntax_internal_error */
extern void T66f101(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.parse_classes */
extern void T66f100(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.remove_unmarked_classes */
extern void T66f99(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].keep_first */
extern void T69f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].replace */
extern void T69f19(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_marked */
extern T1 T70f74(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.parse_marked_classes */
extern void T66f98(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.nested_benchmark_start_time */
extern T0* T66f43(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_classes */
extern void T66f79(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile */
extern void T858f59(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T858f59ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T858f59ac2(TC* ac, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_marked_classes */
extern void T858f71(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_3 */
extern void T858f84(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_3_metrics */
extern void T858f99(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_metrics */
extern void T858f107(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics_recursive */
extern void T858f108(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics */
extern void T858f109(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_processed_class_count_stack */
extern void T858f110(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count */
extern T6 T858f43(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].item */
extern T0* T1292f7(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count_recursive */
extern T6 T858f42(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_implementation_internal_error */
extern void T858f98(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T858f97(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern T0* T858f97ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T858f97p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.reset_processed_class_count */
extern void T858f106(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.reset_total_processed_class_count */
extern void T858f105(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_4 */
extern void T858f83(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_4_metrics */
extern void T858f96(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_interface_internal_error */
extern void T858f95(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_interface_validity */
extern void T858f94(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flattening_internal_error */
extern void T858f93(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.flatten_features */
extern void T858f92(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ancestors_internal_error */
extern void T858f91(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.build_ancestors */
extern void T858f90(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_5 */
extern void T858f82(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_MULTIPROCESSOR.check_provider_validity */
extern void T858f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_5_2 */
extern void T858f88(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_5_2_metrics */
extern void T858f104(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_syntax_internal_error */
extern void T858f103(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T858f102(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern T0* T858f102ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T858f102p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.remove_unmarked_classes */
extern void T858f101(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T858f100(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern T0* T858f100ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T858f100p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.nested_benchmark_start_time */
extern T0* T858f47(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_classes */
extern void T858f69(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.tokens */
extern T0* T858s40(TC* ac);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T95f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T95f93(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T95f93ac1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.mark_all_features */
extern void T95f97(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T87f229(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T87f229ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T87f229ac2(TC* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T828f160(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T208f160(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_until */
extern void T204f161(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_until */
extern void T806f188(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_until */
extern void T87f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_until */
extern void T50f193(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.compile_all */
extern void T66f70(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile_all */
extern T0* T66f70ac1(TC* ac, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern void T858f57(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern T0* T858f57ac1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T95f90(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T100c121(TC* ac, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T864c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_FEATURE].set_internal_cursor */
extern void T864f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T864f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T1296c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T864f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T864f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T864f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T864f42(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern T0* T100f89(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T100f109(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern T0* T100f117(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T100f127(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern void T100f127p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T95f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T95f88(TC* ac, T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T26f52(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T95f87(TC* ac, T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T26f51(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T95f86(TC* ac, T0* C, T1 a1);
/* INTEGER_32.is_greater */
extern T1 T6f4(TC* ac, T6 volatile* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T95c85(TC* ac, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T95f85ac1(TC* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T847c13(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make */
extern T0* T845c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_with_equality_testers */
extern void T845f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_sparse_container */
extern void T845f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].set_internal_cursor */
extern void T845f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_cursor */
extern T0* T845f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make */
extern T0* T1286c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_slots */
extern void T845f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_clashes */
extern void T845f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_key_storage */
extern void T845f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_item_storage */
extern void T845f49(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T95f92(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode */
extern void T66f69(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode_only */
extern void T66f78(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode */
extern void T858f56(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode_only */
extern void T858f68(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode */
extern void T66f68(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode_only */
extern void T66f77(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_mode */
extern void T858f55(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_mode_only */
extern void T858f67(TC* ac, T0* C, T1 a1);
/* GEC.is_gelint */
extern T1 T26f50(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.benchmark_start_time */
extern T0* T66f39(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.benchmark_start_time */
extern T0* T858f45(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_metrics_shown */
extern void T66f67(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_metrics_shown_only */
extern void T66f76(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown */
extern void T858f54(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown_only */
extern void T858f66(TC* ac, T0* C, T1 a1);
/* GEC.is_metrics */
extern T1 T26f49(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown */
extern void T66f66(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown_only */
extern void T66f75(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown */
extern void T858f53(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown_only */
extern void T858f65(TC* ac, T0* C, T1 a1);
/* GEC.is_nested_benchmark */
extern T1 T26f48(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_benchmark_shown */
extern void T66f65(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_benchmark_shown_only */
extern void T66f74(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown */
extern void T858f52(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown_only */
extern void T858f64(TC* ac, T0* C, T1 a1);
/* GEC.is_silent */
extern T1 T26f38(TC* ac, T0* C);
/* GEC.is_no_benchmark */
extern T1 T26f47(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ise_version */
extern void T66f48(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ise_version_only */
extern void T66f52(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ecma_version_only */
extern void T66f64(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ise_version */
extern void T858f51(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ise_version_only */
extern void T858f63(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_default_keyword_usage_only */
extern void T858f81(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_ecma_version_only */
extern void T858f80(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_detachable_keyword_only */
extern void T858f79(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_attached_keyword_only */
extern void T858f78(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_reference_keyword_only */
extern void T858f77(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_note_keyword_only */
extern void T858f76(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_attribute_keyword_only */
extern void T858f75(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler */
extern void T66f50(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler_only */
extern void T66f54(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_error_handler */
extern void T858f50(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_error_handler_only */
extern void T858f62(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR_FACTORY.new_system_processor */
extern T0* T98s1(TC* ac, T6 a1);
/* ET_SYSTEM_PROCESSOR.make */
extern T0* T66c47(TC* ac);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern T0* T81s61(TC* ac);
/* ET_EIFFEL_PARSER.make */
extern T0* T68c1068(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T68f1071(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T68f1077(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern T0* T68f735(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T68f1027(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_44 */
extern void T68f2253(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T68f2307(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.integer_array_ */
extern T0* T68s1045(TC* ac);
/* ET_EIFFEL_PARSER.yycheck_template_43 */
extern void T68f2252(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_42 */
extern void T68f2251(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_41 */
extern void T68f2250(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_40 */
extern void T68f2249(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_39 */
extern void T68f2248(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_38 */
extern void T68f2247(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_37 */
extern void T68f2246(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_36 */
extern void T68f2245(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T68f2244(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T68f2243(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T68f2242(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T68f2241(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T68f2240(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T68f2239(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T68f2238(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T68f2237(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T68f2236(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T68f2235(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T68f2234(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T68f2233(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T68f2232(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T68f2231(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T68f2230(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T68f2229(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T68f2228(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T68f2227(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T68f2226(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T68f2225(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T68f2224(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T68f2223(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T68f2222(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T68f2221(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T68f2220(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T68f2219(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T68f2218(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T68f2217(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T68f2216(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T68f2215(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T68f2214(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T68f2213(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T68f2212(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T68f2211(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T68f2210(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern T0* T68f734(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytable_template_44 */
extern void T68f2209(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_43 */
extern void T68f2208(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_42 */
extern void T68f2207(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_41 */
extern void T68f2206(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_40 */
extern void T68f2205(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_39 */
extern void T68f2204(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_38 */
extern void T68f2203(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_37 */
extern void T68f2202(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_36 */
extern void T68f2201(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_35 */
extern void T68f2200(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_34 */
extern void T68f2199(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_33 */
extern void T68f2198(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_32 */
extern void T68f2197(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_31 */
extern void T68f2196(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_30 */
extern void T68f2195(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_29 */
extern void T68f2194(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_28 */
extern void T68f2193(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_27 */
extern void T68f2192(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_26 */
extern void T68f2191(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_25 */
extern void T68f2190(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_24 */
extern void T68f2189(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_23 */
extern void T68f2188(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_22 */
extern void T68f2187(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_21 */
extern void T68f2186(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_20 */
extern void T68f2185(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_19 */
extern void T68f2184(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_18 */
extern void T68f2183(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_17 */
extern void T68f2182(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_16 */
extern void T68f2181(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_15 */
extern void T68f2180(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_14 */
extern void T68f2179(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_13 */
extern void T68f2178(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_12 */
extern void T68f2177(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_11 */
extern void T68f2176(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_10 */
extern void T68f2175(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_9 */
extern void T68f2174(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_8 */
extern void T68f2173(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_7 */
extern void T68f2172(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T68f2171(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T68f2170(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T68f2169(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T68f2168(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T68f2167(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T68f2166(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern T0* T68f733(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T68f2165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T68f2164(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template */
extern T0* T68f732(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yypact_template_10 */
extern void T68f2163(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_9 */
extern void T68f2162(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_8 */
extern void T68f2161(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_7 */
extern void T68f2160(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_6 */
extern void T68f2159(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_5 */
extern void T68f2158(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_4 */
extern void T68f2157(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_3 */
extern void T68f2156(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T68f2155(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T68f2154(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern T0* T68f731(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T68f2153(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T68f2152(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template */
extern T0* T68f730(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_10 */
extern void T68f2151(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T68f2150(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T68f2149(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T68f2148(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T68f2147(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T68f2146(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T68f2145(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T68f2144(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T68f2143(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T68f2142(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern T0* T68f729(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern T0* T68f727(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_10 */
extern void T68f2141(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T68f2140(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T68f2139(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T68f2138(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T68f2137(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T68f2136(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T68f2135(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T68f2134(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T68f2133(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T68f2132(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern T0* T68f716(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T68f2131(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T68f2130(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T68f2129(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T68f2128(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T68f2127(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern T0* T68f713(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T68f2126(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T68f2125(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T68f1076(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T668s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T670c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T668c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T665s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T667c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T665c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T662s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T664c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T662c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].make */
extern T0* T659s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].make_empty */
extern T0* T661c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].default_create */
extern T0* T659c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].make */
extern T0* T656s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].make_empty */
extern T0* T658c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].default_create */
extern T0* T656c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T653s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T655c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T653c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T650s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T652c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T650c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T647s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T649c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T647c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].make */
extern T0* T644s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].make_empty */
extern T0* T646c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].default_create */
extern T0* T644c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].make */
extern T0* T641s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].make_empty */
extern T0* T643c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].default_create */
extern T0* T641c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].make */
extern T0* T638s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].make_empty */
extern T0* T640c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].default_create */
extern T0* T638c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].make */
extern T0* T636s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_TYPE].make_empty */
extern T0* T637c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].default_create */
extern T0* T636c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T633s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T635c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T633c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T630s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T632c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T630c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].make */
extern T0* T627s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].make_empty */
extern T0* T629c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].default_create */
extern T0* T627c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T625s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T626c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T625c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T622s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T624c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T622c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].make */
extern T0* T619s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_QUERY].make_empty */
extern T0* T621c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].default_create */
extern T0* T619c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].make */
extern T0* T616s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].make_empty */
extern T0* T618c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].default_create */
extern T0* T616c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T613s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T615c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T613c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].make */
extern T0* T610s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].make_empty */
extern T0* T612c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].default_create */
extern T0* T610c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].make */
extern T0* T607s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].make_empty */
extern T0* T609c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].default_create */
extern T0* T607c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T604s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T606c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T604c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T602s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T603c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T602c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T600s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T601c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T600c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].make */
extern T0* T597s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].make_empty */
extern T0* T599c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].default_create */
extern T0* T597c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T595s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T596c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T595c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T592s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T594c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T592c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T589s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T591c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T589c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].make */
extern T0* T586s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].make_empty */
extern T0* T588c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].default_create */
extern T0* T586c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].make */
extern T0* T583s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].make_empty */
extern T0* T585c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].default_create */
extern T0* T583c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].make */
extern T0* T580s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].make_empty */
extern T0* T582c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].default_create */
extern T0* T580c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].make */
extern T0* T577s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].make_empty */
extern T0* T579c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].default_create */
extern T0* T577c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].make */
extern T0* T574s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].make_empty */
extern T0* T576c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].default_create */
extern T0* T574c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T571s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T573c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T571c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T568s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T570c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T568c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T565s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T567c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T565c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T562s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T564c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T562c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T559s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T561c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T559c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T556s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T558c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T556c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T553s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T555c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T553c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T550s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T552c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T550c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T547s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T549c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T547c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T545s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T546c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T545c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T542s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T544c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T542c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T539s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T541c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T539c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T536s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T538c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T536c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].make */
extern T0* T533s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].make_empty */
extern T0* T535c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].default_create */
extern T0* T533c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].make */
extern T0* T530s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].make_empty */
extern T0* T532c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].default_create */
extern T0* T530c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].make */
extern T0* T527s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].make_empty */
extern T0* T529c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].default_create */
extern T0* T527c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].make */
extern T0* T524s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].make_empty */
extern T0* T526c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].default_create */
extern T0* T524c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T521s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].make_empty */
extern T0* T523c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].default_create */
extern T0* T521c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].make */
extern T0* T518s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].make_empty */
extern T0* T520c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].default_create */
extern T0* T518c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T515s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T517c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T515c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].make */
extern T0* T512s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].make_empty */
extern T0* T514c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].default_create */
extern T0* T512c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T509s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T511c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T509c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T506s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T508c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T506c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T503s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T505c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T503c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T500s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T502c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T500c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T497s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T499c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T497c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T494s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T496c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T494c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T491s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T493c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T491c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T489s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T490c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T489c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T486s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T488c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T486c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T483s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T485c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T483c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T481s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T482c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T481c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T478s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T480c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T478c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T475s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T477c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T475c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].make */
extern T0* T472s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].make_empty */
extern T0* T474c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].default_create */
extern T0* T472c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].make */
extern T0* T469s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].make_empty */
extern T0* T471c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].default_create */
extern T0* T469c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T467s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T468c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T467c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T464s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T466c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T464c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T461s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T463c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T461c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T458s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T460c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T458c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].make */
extern T0* T455s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].make_empty */
extern T0* T457c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].default_create */
extern T0* T455c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].make */
extern T0* T452s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T454c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].default_create */
extern T0* T452c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T449s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T451c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T449c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T447s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T448c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T447c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T445s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T446c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T445c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].make */
extern T0* T442s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].make_empty */
extern T0* T444c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].default_create */
extern T0* T442c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T439s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T441c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T439c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T436s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T438c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T436c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T433s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T435c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T433c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T430s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T432c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T430c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T427s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T429c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T427c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].make */
extern T0* T424s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].make_empty */
extern T0* T426c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].default_create */
extern T0* T424c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T421s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T423c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T421c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T418s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T420c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T418c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T415s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T417c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T415c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].make */
extern T0* T412s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].make_empty */
extern T0* T414c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].default_create */
extern T0* T412c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T409s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T411c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T409c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T406s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T408c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T406c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T404s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T405c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T404c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T402s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T403c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T402c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T400s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T401c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T400c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T397s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T399c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T397c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T394s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T396c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T394c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T391s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T393c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T391c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T388s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T390c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T388c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T385s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T387c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T385c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T382s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T384c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T382c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T379s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T381c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T379c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T376s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T378c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T376c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T373s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T375c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T373c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].make */
extern T0* T370s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].make_empty */
extern T0* T372c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].default_create */
extern T0* T370c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T367s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T369c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T367c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T364s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T366c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T364c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T361s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T363c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T361c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T358s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T360c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T358c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T355s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T357c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T355c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T353s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T354c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T353c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T351s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T352c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T351c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T348s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T350c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T348c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T345s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T347c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T345c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T342s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T344c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T342c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T339s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T341c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T339c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T336s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T338c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T336c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T333s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T335c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T333c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T330s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_VOID].make_empty */
extern T0* T332c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T330c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T327s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T329c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T327c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T324s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T326c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T324c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T321s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T323c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T321c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T318s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T320c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T318c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T315s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T317c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T315c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T312s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T314c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T312c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T309s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T311c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T309c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].make */
extern T0* T306s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].make_empty */
extern T0* T308c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].default_create */
extern T0* T306c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T303s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T305c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T303c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T300s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T302c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T300c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T297s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T299c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T297c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T294s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T296c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T294c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T291s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T293c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T291c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T288s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T290c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T288c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T285s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T287c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T285c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T282s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T284c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T282c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANT_KEYWORD].make */
extern T0* T279s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INVARIANT_KEYWORD].make_empty */
extern T0* T281c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANT_KEYWORD].default_create */
extern T0* T279c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T276s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T278c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T276c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T274s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T275c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T274c3(TC* ac);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T68f1070(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T68f1075(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T68f1094(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T68f1094p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T68f1117(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern T0* T68f812(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T68f1033(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_5 */
extern void T68f2306(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T68f2308(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_acclist_template_4 */
extern void T68f2305(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T68f2304(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T68f2303(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T68f2302(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern T0* T68f811(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T68f2301(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T68f2300(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T68f2299(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern T0* T68f810(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern T0* T68f809(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template_6 */
extern void T68f2298(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_5 */
extern void T68f2297(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_4 */
extern void T68f2296(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_3 */
extern void T68f2295(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T68f2294(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T68f2293(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template */
extern T0* T68f808(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T68f2292(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T68f2291(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T68f2290(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template */
extern T0* T68f807(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T68f2289(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T68f2288(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T68f2287(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern T0* T68f806(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_17 */
extern void T68f2286(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_16 */
extern void T68f2285(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T68f2284(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T68f2283(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T68f2282(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T68f2281(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T68f2280(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T68f2279(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T68f2278(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T68f2277(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T68f2276(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T68f2275(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T68f2274(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T68f2273(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T68f2272(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T68f2271(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T68f2270(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern T0* T68f805(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T68f2269(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T68f2268(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T68f2267(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T68f2266(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T68f2265(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T68f2264(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T68f2263(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T68f2262(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T68f2261(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T68f2260(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T68f2259(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T68f2258(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T68f2257(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T68f2256(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T68f740(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T260c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T260f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T260f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1177c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T257c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].set_internal_cursor */
extern void T257f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T257f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1170c5(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T256c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1167s1(TC* ac, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].make_empty */
extern T0* T1166c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].default_create */
extern T0* T1167c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T255c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1165s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make_empty */
extern T0* T1164c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].default_create */
extern T0* T1165c3(TC* ac);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].make */
extern T0* T254c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1163s1(TC* ac, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].make_empty */
extern T0* T1162c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].default_create */
extern T0* T1163c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].make */
extern T0* T253c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1161s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].make_empty */
extern T0* T1160c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].default_create */
extern T0* T1161c3(TC* ac);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].make */
extern T0* T252c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].make */
extern T0* T1159s1(TC* ac, T6 a1);
/* SPECIAL [ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1158c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].default_create */
extern T0* T1159c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T251c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1157s1(TC* ac, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1156c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1157c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T250c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T249c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T248c9(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T247c9(TC* ac, T6 a1);
/* YY_UNICODE_FILE_BUFFER.make_with_size */
extern T0* T244c22(TC* ac, T0* a1, T6 a2);
/* YY_UNICODE_FILE_BUFFER.new_default_buffer */
extern T0* T244f16(TC* ac, T0* C, T6 a1);
/* KL_STANDARD_FILES.input */
extern T0* T38s3(TC* ac);
/* KL_STDIN_FILE.make */
extern T0* T245c12(TC* ac);
/* ET_EIFFEL_PARSER.std */
extern T0* T68s707(TC* ac);
/* ET_EIFFEL_PARSER.make */
extern void T68f1068p1(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.make */
extern T0* T233c7(TC* ac, T0* a1);
/* ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T233s4(TC* ac);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T232c136(TC* ac, T0* a1);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T232f137(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T232f138(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T232f139(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T232f139p1(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T232f141(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern T0* T232f87(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T232f96(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T232f173(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T232f183(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T232s102(TC* ac);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T232f172(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T232f171(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T232f170(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern T0* T232f85(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T232f169(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T232f168(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T232f167(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern T0* T232f80(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern T0* T232f74(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template_6 */
extern void T232f166(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_5 */
extern void T232f165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_4 */
extern void T232f164(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_3 */
extern void T232f163(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T232f162(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T232f161(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern T0* T232f71(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template_6 */
extern void T232f160(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_5 */
extern void T232f159(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_4 */
extern void T232f158(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T232f157(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T232f156(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T232f155(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern T0* T232f63(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T232f154(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T232f153(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T232f152(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern T0* T232f59(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T232f151(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T232f150(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T232f149(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T232f148(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T232f147(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T232f146(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T232f145(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T232f144(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T232f143(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern T0* T232f94(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T232f182(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T232f181(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T232f180(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T232f179(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T232f178(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T232f177(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T232f176(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T232f175(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T232f174(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T232f83(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T232s95(TC* ac);
/* ET_SYSTEM_MULTIPROCESSOR.make */
extern T0* T858c49(TC* ac, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.make_single */
extern void T858f61(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.make_null_single */
extern void T858f73(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T858f87(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_unknown_builtin_reported_only */
extern void T858f86(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_preparse_shallow_mode_only */
extern void T858f85(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].put_last */
extern void T1292f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].force */
extern void T1795s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_SYSTEM_PROCESSOR].fill_with */
extern void T1794f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYSTEM_PROCESSOR].extend */
extern void T1794f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].make */
extern T0* T1292c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].set_internal_cursor */
extern void T1292f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].new_cursor */
extern T0* T1292f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR].make */
extern T0* T1796c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].make */
extern T0* T1795s1(TC* ac, T6 a1);
/* SPECIAL [ET_SYSTEM_PROCESSOR].make_empty */
extern T0* T1794c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].default_create */
extern T0* T1795c2(TC* ac);
/* GEC.thread_count */
extern T6 T26f46(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_verbose */
extern void T63f196(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.set_verbose */
extern void T42f196(TC* ac, T0* C, T1 a1);
/* GEC.is_verbose */
extern T1 T26f45(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T63f195(TC* ac, T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T42f195(TC* ac, T0* C);
/* GEC.parse_ecf_file */
extern void T26f80(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_creation */
extern void T87f227(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_system_name */
extern void T87f170(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_type */
extern void T87f226(TC* ac, T0* C, T0* a1);
/* ET_CLUSTERS.put_last */
extern void T94f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].force_last */
extern void T842f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].force */
extern void T1278s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLUSTER].fill_with */
extern void T1279f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLUSTER].extend */
extern void T1279f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].resize */
extern void T842f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].aliased_resized_area */
extern T0* T1278s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_CLUSTER].aliased_resized_area */
extern T0* T1279f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_capacity */
extern T6 T842f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].extendible */
extern T1 T842f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.make */
extern T0* T89c70(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_secondary_options */
extern void T833f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_OPTIONS.make */
extern T0* T833c15(TC* ac);
/* Creation of agent #1 in feature ET_ECF_OPTIONS.make */
extern T0* T833f15ac1(TC* ac, T0* a1);
/* FUNCTION [TUPLE [STRING_8], INTEGER_32].set_rout_disp_final */
extern void T837f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_hash_function */
extern void T831f50(TC* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].make */
extern T0* T835c3(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.string_ */
extern T0* T833s7(TC* ac);
/* ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T833s12(TC* ac);
/* ET_ECF_ERROR_HANDLER.has_error */
extern T1 T86f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T85f220(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T85f220ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T85f220ac2(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]].set_rout_disp_final */
extern void T792f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.build_system */
extern void T85f223(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.build_system */
extern T0* T85f223ac1(TC* ac);
/* ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T825f34(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_read_only */
extern void T806f127(TC* ac, T0* C, T1 a1);
/* ET_LIBRARY.set_read_only */
extern void T204f169(TC* ac, T0* C, T1 a1);
/* DS_CELL [detachable ET_ECF_SYSTEM].put */
extern void T785f3(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].wipe_out */
extern void T797f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_wipe_out */
extern void T797f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_wipe_out */
extern void T797f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_wipe_out */
extern void T797f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_wipe_out */
extern void T797f42(TC* ac, T0* C);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T1205f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T1205f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].unset_found_item */
extern void T797f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].move_all_cursors_after */
extern void T797f40(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_next_cursor */
extern void T1208f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_after */
extern void T1208f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].wipe_out */
extern void T795f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_wipe_out */
extern void T795f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_wipe_out */
extern void T795f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_wipe_out */
extern void T795f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_wipe_out */
extern void T795f52(TC* ac, T0* C);
/* SPECIAL [ET_ECF_LIBRARY].keep_head */
extern void T1201f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].set_count */
extern void T1201f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].unset_found_item */
extern void T795f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].move_all_cursors_after */
extern void T795f50(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_next_cursor */
extern void T1200f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_after */
extern void T1200f9(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T85f227(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].force_last_new */
extern void T797f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_put */
extern void T797f51(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_put */
extern void T797f50(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].force */
extern void T1209s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T1205f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T1205f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_put */
extern void T797f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_put */
extern void T797f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_item */
extern T6 T797f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].hash_position */
extern T6 T797f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].resize */
extern void T797f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_resize */
extern void T797f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].special_integer_ */
extern T0* T797s32(TC* ac);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_resize */
extern void T797f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_resize */
extern void T797f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1209s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1205f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_item */
extern T0* T797f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_item */
extern T6 T797f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_resize */
extern void T797f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_modulus */
extern T6 T797f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_capacity */
extern T6 T797f21(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T784f2(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T828c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T828f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T828f110(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T828f152(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T828f151(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T828f150(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T828f149(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T828f148(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T828f147(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T828f146(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T828f145(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T828f144(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T828f143(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T828f142(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T828f141(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T828f140(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T828f139(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T828f138(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T828f137(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T828f136(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T828f135(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T828f134(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T828f133(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T828f132(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T828f131(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T828f130(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T828f129(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T828f128(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T828f127(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T828f126(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T828f125(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T828f124(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_8_type */
extern void T828f123(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T828f122(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T828f121(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T828f120(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T828f119(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T828f118(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T828f117(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T828f116(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T828f115(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T828f114(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T828f113(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T828f112(TC* ac, T0* C);
/* ET_MASTER_CLASS.add_first_imported_class */
extern void T189f65(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_first */
extern void T1102f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put */
extern void T1102f23(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_right */
extern void T1102f30(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_right */
extern void T1102f29(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put_last */
extern void T1102f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T828f111(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T828f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T828f90(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T828f108(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T828f107(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T828s89(TC* ac);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T830f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found_item */
extern T0* T797f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_item */
extern T0* T797f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found */
extern T1 T797f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search */
extern void T797f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search_position */
extern void T797f46(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T85s26(TC* ac);
/* ET_ECF_SYSTEM_PARSER.full_filename */
extern T0* T85f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T85s19(TC* ac);
/* ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T85s18(TC* ac);
/* ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T85s34(TC* ac);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.pathname */
extern T0* T830f22(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T175f4(TC* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_class_mappings */
extern void T88f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_class_mapping */
extern void T87f274(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.set_mapped_class */
extern void T189f85(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_class_mapping */
extern void T806f183(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_iterator */
extern T0* T831f43(TC* ac, T0* C);
/* ET_ECF_TARGET.fill_options */
extern void T88f57(TC* ac, T0* C, T0* a1);
extern T1 T88f57ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.set_trace_mode */
extern void T87f273(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T87f272(TC* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T806f182(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_iteration_mode */
extern void T87f271(TC* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_iteration_mode */
extern void T806f181(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T87f270(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T806f180(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.tokens */
extern T0* T88s30(TC* ac);
/* ET_ECF_OPTIONS.value */
extern T0* T833f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_capabilities */
extern void T88f64(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T87f286(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T87f285(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_scoop_mode */
extern void T87f284(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T87f283(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.string_ */
extern T0* T88s31(TC* ac);
/* ET_ECF_CAPABILITIES.support_value */
extern T0* T91f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.use_value */
extern T0* T91f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].found_item */
extern T0* T840f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_item */
extern T0* T840f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].found */
extern T1 T840f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].search */
extern void T840f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].search_position */
extern void T840f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].hash_position */
extern T6 T840f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_item */
extern T0* T840f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_item */
extern T6 T840f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_item */
extern T6 T840f23(TC* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_settings */
extern void T88f63(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_inlining_size */
extern void T87f282(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_inlining_mode */
extern void T87f281(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_line_generation_mode */
extern void T87f280(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_total_order_on_reals_mode */
extern void T87f279(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_executable_name */
extern void T87f278(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T87f277(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_check_for_void_target_mode */
extern void T87f276(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_console_application_mode */
extern void T87f275(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.fill_root */
extern void T88f62(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.fill_root */
extern void T1509f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T1510f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.unset_root_type */
extern void T87f287(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].forth */
extern void T795f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_forth */
extern void T795f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].add_traversing_cursor */
extern void T795f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_position */
extern void T1200f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].remove_traversing_cursor */
extern void T795f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_item */
extern T6 T795f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_for_iteration */
extern T0* T795f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_item */
extern T0* T795f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_item */
extern T0* T795f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T795f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_after */
extern T1 T795f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T1200f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].start */
extern void T795f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_start */
extern void T795f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_off */
extern T1 T795f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].off */
extern T1 T1200f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].is_empty */
extern T1 T795f23(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T85f226(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_libraries */
extern T0* T85f226ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_library */
extern void T85f230(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_CELL [detachable ET_ECF_LIBRARY].put */
extern void T824f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_library */
extern T0* T85f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].force_last_new */
extern void T795f46(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_put */
extern void T795f61(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_put */
extern void T795f60(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].force */
extern void T1204s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].fill_with */
extern void T1201f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].extend */
extern void T1201f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_put */
extern void T795f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_put */
extern void T795f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_item */
extern T6 T795f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].hash_position */
extern T6 T795f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].resize */
extern void T795f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_resize */
extern void T795f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].special_integer_ */
extern T0* T795s38(TC* ac);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_resize */
extern void T795f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_resize */
extern void T795f66(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T1204s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T1201f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_item */
extern T0* T795f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_resize */
extern void T795f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_modulus */
extern T6 T795f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_capacity */
extern T6 T795f36(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T85f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f231ot1(TC* ac, T0* a1);
extern T1 T85f231ot2(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.set_library_target */
extern void T806f129(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T805f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_library_target */
extern void T87f225(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eltm_error */
extern void T86f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_error */
extern void T86f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T86f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T86f32p1(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.message */
extern T0* T86f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.default_message */
extern T0* T832f9(TC* ac, T0* C);
/* ET_ECF_ERROR.message */
extern T0* T832f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.arguments */
extern T0* T832s6(TC* ac);
/* ET_ECF_ERROR.string_ */
extern T0* T832s8(TC* ac);
/* ET_ECF_ERROR.make_eltm */
extern T0* T832c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.filename */
extern T0* T832f14(TC* ac, T0* C);
/* ET_ECF_ERROR.default_message_template */
extern T0* T832f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.add_dependent_universes */
extern void T832f116(TC* ac, T0* C, T0* a1);
extern T1 T832f116ot1(TC* ac, T0* a1);
/* ET_ECF_TARGET.parent_path */
extern T0* T88f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].put_last */
extern void T1656f16(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].force */
extern void T1978s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET_PARENT].fill_with */
extern void T1977f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET_PARENT].extend */
extern void T1977f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make */
extern void T1656f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make */
extern T0* T1656c13(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].set_internal_cursor */
extern void T1656f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].new_cursor */
extern T0* T1656f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT].make */
extern T0* T1979c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].make */
extern T0* T1978s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_TARGET_PARENT].make_empty */
extern T0* T1977c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].default_create */
extern T0* T1978c3(TC* ac);
/* ET_ECF_ERROR.add_parent_path */
extern void T832f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].item */
extern T0* T1656f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].force_last */
extern void T1656f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].resize */
extern void T1656f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1978s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1977f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].new_capacity */
extern T6 T1656f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].extendible */
extern T1 T1656f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make_default */
extern T0* T1656c11(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].default_capacity */
extern T6 T1656f8(TC* ac, T0* C);
/* ET_ECF_LIBRARY.library */
extern T0* T806f12(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T805f3(TC* ac, T0* C);
/* ET_ECF_SYSTEM.universe */
extern T0* T87f14(TC* ac, T0* C);
/* ET_ECF_TARGETS.target_by_name */
extern T0* T820f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.string_ */
extern T0* T820s6(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].item */
extern T0* T1652f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_etam_error */
extern void T86f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_etam */
extern T0* T832c104(TC* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.is_empty */
extern T1 T820f5(TC* ac, T0* C);
/* ET_ECF_TARGETS.count */
extern T6 T820f3(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].forth */
extern void T1056f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_forth */
extern void T1643f15(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].add_traversing_cursor */
extern void T1643f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_next_cursor */
extern void T1056f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T1643f20(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set */
extern void T1056f15(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_ECF_LIBRARY.set_uuid */
extern void T806f128(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T805f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_uuid */
extern void T87f224(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatb_error */
extern void T86f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatb */
extern T0* T832c103(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T85f53(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_POSITION_TABLE.item */
extern T0* T790f2(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T1647f11(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T1648f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T1648f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T1647f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T1648f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T1647f12(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T1647f10(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T1648f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T1647f13(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T1648f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].off */
extern T1 T1647f7(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T1647f6(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T1647f9(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T1648f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T1648f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1647c8(TC* ac, T0* a1);
/* XM_POSITION_TABLE.has */
extern T1 T790f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T85f52(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T805f18(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_read_only */
extern void T87f223(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T85f51(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_targets */
extern void T806f126(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T805f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_targets */
extern void T87f222(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_targets */
extern T0* T85f48(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_ECF_TARGETS.put_last */
extern void T820f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].force_last */
extern void T1652f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].force */
extern void T1266s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].fill_with */
extern void T1264f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].extend */
extern void T1264f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].resize */
extern void T1652f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1266s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1264f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_capacity */
extern T6 T1652f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].extendible */
extern T1 T1652f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_targets */
extern T0* T784f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.make */
extern T0* T820c8(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].put_last */
extern void T1652f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].make */
extern T0* T1652c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].set_internal_cursor */
extern void T1652f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_cursor */
extern T0* T1652f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET].make */
extern T0* T1973c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].make */
extern T0* T1266s2(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_TARGET].make_empty */
extern T0* T1264c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].default_create */
extern T0* T1266c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T85f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
extern T1 T85f80ot1(TC* ac, T0* a1);
extern T1 T85f80ot2(TC* ac, T0* a1);
/* ET_ECF_TARGET.set_notes */
extern void T88f55(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_post_compile_actions */
extern void T88f54(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_pre_compile_actions */
extern void T88f53(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_resources */
extern void T88f52(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_objects */
extern void T88f51(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_makes */
extern void T88f50(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_linker_flags */
extern void T88f49(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_libraries */
extern void T88f48(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_includes */
extern void T88f47(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_cflags */
extern void T88f46(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_namespaces */
extern void T88f45(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_class_mappings */
extern void T88f44(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_file_rules */
extern void T88f43(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_dotnet_assemblies */
extern void T88f42(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_libraries */
extern void T88f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_clusters */
extern void T88f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_target_options */
extern void T85f252(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_options */
extern void T85f254(TC* ac, T0* C, T0* a1);
/* ET_ECF_OPTIONS.set_primary_value */
extern void T833f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_value */
extern T0* T833f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.primary_value */
extern T0* T90f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_capabilities */
extern void T85f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_5_0 */
extern T0* T85s76(TC* ac);
/* ET_ECF_CAPABILITIES.set_primary_use_value */
extern void T91f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.set_primary_use_value_id */
extern void T91f17(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].force_last */
extern void T840f42(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_put */
extern void T840f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_put */
extern void T840f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_put */
extern void T840f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].resize */
extern void T840f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_resize */
extern void T840f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].special_integer_ */
extern T0* T840s29(TC* ac);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_resize */
extern void T840f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_resize */
extern void T840f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_resize */
extern void T840f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_modulus */
extern T6 T840f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_capacity */
extern T6 T840f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_put */
extern void T840f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].unset_found_item */
extern void T840f44(TC* ac, T0* C);
/* ET_ECF_CAPABILITIES.set_primary_support_value */
extern void T91f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_11_0 */
extern T0* T85s62(TC* ac);
/* ET_ECF_CAPABILITIES.primary_use_value */
extern T0* T91f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_use_value_id */
extern T0* T91f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_support_value */
extern T0* T91f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_abstract */
extern void T88f39(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.set_version */
extern void T88f38(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_version */
extern T0* T85f126(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VERSION.set_copyright */
extern void T1494f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_company */
extern void T1494f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_product */
extern void T1494f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.make_major */
extern T0* T1494c11(TC* ac, T6 a1);
/* ET_ECF_VERSION.make_major_minor */
extern T0* T1494c10(TC* ac, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eats_error */
extern void T86f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eats */
extern T0* T832c107(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VERSION.make_major_minor_release */
extern T0* T1494c9(TC* ac, T6 a1, T6 a2, T6 a3);
/* ET_ECF_VERSION.make */
extern T0* T1494c8(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_ECF_ERROR_HANDLER.report_eati_error */
extern void T86f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eati */
extern T0* T832c106(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_variable */
extern void T85f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VARIABLES.set_primary_value */
extern void T92f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_VARIABLES.primary_value */
extern T0* T92f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_setting */
extern void T85f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SETTINGS.set_primary_value */
extern void T90f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.set_root */
extern void T88f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T85f122(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ROOT_CLASS.set_cluster_name */
extern void T1509f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T1509f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_class */
extern T0* T784f26(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.make */
extern T0* T1509c4(TC* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T784f25(TC* ac, T0* C);
/* ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T1510c1(TC* ac);
/* ET_ECF_TARGET.set_precompiled_library */
extern void T88f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T85f120(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T85f120ac1(TC* ac, T0* a1);
extern T1 T85f120ot1(TC* ac, T0* a1);
extern T1 T85f120ot2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_ECF_OPTIONS]].set_rout_disp_final */
extern void T1508f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_conditions */
extern void T1492f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_visible_classes */
extern void T1492f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_renamings */
extern void T1492f26(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_options */
extern void T1492f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].forth */
extern void T1653f10(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].cursor_forth */
extern void T1505f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].add_traversing_cursor */
extern void T1505f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].set_next_cursor */
extern void T1653f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].set_position */
extern void T1653f13(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].remove_traversing_cursor */
extern void T1505f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].set_after */
extern void T1653f12(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].item */
extern T0* T1653f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].cursor_item */
extern T0* T1505f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].after */
extern T1 T1653f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_iterator */
extern T0* T1505f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].start */
extern void T1653f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].cursor_start */
extern void T1505f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].cursor_off */
extern T1 T1505f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].off */
extern T1 T1653f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].is_empty */
extern T1 T1505f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_cursor */
extern T0* T1505f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].make */
extern T0* T1653c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].do_all */
extern void T1505f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_use_application_options */
extern void T1492f24(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_read_only */
extern void T1492f23(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_classname_prefix */
extern void T1492f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_eifgens_location */
extern void T1492f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_visible_classes */
extern T0* T85f149(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].force_last */
extern void T1506f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].force */
extern void T1947s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].fill_with */
extern void T1948f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].extend */
extern void T1948f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].resize */
extern void T1506f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1947s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1948f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].new_capacity */
extern T6 T1506f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].extendible */
extern T1 T1506f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_visible_classes */
extern T0* T784f44(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].make */
extern T0* T1506c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].set_internal_cursor */
extern void T1506f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].new_cursor */
extern T0* T1506f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS].make */
extern T0* T1949c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].make */
extern T0* T1947s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].make_empty */
extern T0* T1948c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].default_create */
extern T0* T1947c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_visible_class */
extern T0* T85f181(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VISIBLE_CLASS.set_new_feature_name */
extern void T1513f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_new_class_name */
extern void T1513f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_feature_name */
extern void T1513f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_visible_class */
extern T0* T784f47(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.make */
extern T0* T1513c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_renamings */
extern T0* T85f147(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_renaming */
extern void T85f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_eatd_error */
extern void T86f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatd */
extern T0* T832c115(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_renamings */
extern T0* T784f43(TC* ac, T0* C);
/* ET_ECF_AST_FACTORY.case_insensitive_string_equality_tester */
extern T0* T784s55(TC* ac);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_description */
extern void T1492f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_class_options */
extern T0* T85f145(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].force_last */
extern void T1505f41(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_put */
extern void T1505f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_put */
extern void T1505f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_put */
extern void T1505f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].resize */
extern void T1505f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_resize */
extern void T1505f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].special_integer_ */
extern T0* T1505s32(TC* ac);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_resize */
extern void T1505f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_resize */
extern void T1505f53(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1946s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1943f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_resize */
extern void T1505f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_modulus */
extern T6 T1505f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_capacity */
extern T6 T1505f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_put */
extern void T1505f46(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].force */
extern void T1946s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_OPTIONS].fill_with */
extern void T1943f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_OPTIONS].extend */
extern void T1943f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].unset_found_item */
extern void T1505f45(TC* ac, T0* C);
/* ET_ECF_AST_FACTORY.new_options */
extern T0* T784f42(TC* ac, T0* C);
/* ET_ECF_AST_FACTORY.new_class_options */
extern T0* T784f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].set_key_equality_tester */
extern void T1505f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_map */
extern T0* T1505c38(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_with_equality_testers */
extern void T1505f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_sparse_container */
extern void T1505f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].set_internal_cursor */
extern void T1505f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_slots */
extern void T1505f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_clashes */
extern void T1505f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_key_storage */
extern void T1505f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_item_storage */
extern void T1505f56(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].make */
extern T0* T1946s2(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_OPTIONS].make_empty */
extern T0* T1943c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].default_create */
extern T0* T1946c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_conditions */
extern T0* T85f143(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T85f143ot1(TC* ac, T0* a1);
extern T1 T85f143ot2(TC* ac, T0* a1);
/* ET_ECF_ORED_CONDITIONS.put_last */
extern void T1511f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].force_last */
extern void T1950f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].force */
extern void T2158s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].fill_with */
extern void T2159f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].extend */
extern void T2159f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].resize */
extern void T1950f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T2158s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T2159f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].new_capacity */
extern T6 T1950f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].extendible */
extern T1 T1950f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_ored_conditions */
extern T0* T784f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.make */
extern T0* T1511c6(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].put_last */
extern void T1950f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1950c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].set_internal_cursor */
extern void T1950f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].new_cursor */
extern T0* T1950f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T2160c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T2158s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].make_empty */
extern T0* T2159c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].default_create */
extern T0* T2158c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T85f180(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f180ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T85f198(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T86f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabj */
extern T0* T832c114(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.make */
extern T0* T1524c7(TC* ac, T0* a1, T0* a2);
/* ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T1523c7(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T86f45(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabi */
extern T0* T832c113(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T86f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_eabh */
extern T0* T832c112(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T86f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabg */
extern T0* T832c111(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T86f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabf */
extern T0* T832c110(TC* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.make_major_minor_revision */
extern T0* T56c21(TC* ac, T6 a1, T6 a2, T6 a3);
/* UT_VERSION.make_major_minor */
extern T0* T56c18(TC* ac, T6 a1, T6 a2);
/* UT_VERSION.make_major */
extern T0* T56c17(TC* ac, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T85f197(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eatn_error */
extern void T86f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatn */
extern T0* T832c109(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T784f54(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_PLATFORM_CONDITION.make */
extern T0* T1521c9(TC* ac, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T1521c8(TC* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatx_error */
extern void T86f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatx */
extern T0* T832c108(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T85f195(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T784f49(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T1516c18(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T1516c17(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T85f193(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T784f53(TC* ac, T0* C, T1 a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T1520c5(TC* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T85f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T784f52(TC* ac, T0* C, T1 a1);
/* ET_ECF_DOTNET_CONDITION.make */
extern T0* T1519c5(TC* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T85f189(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T784f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_ECF_CUSTOM_CONDITION.make */
extern T0* T1518c13(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T1518c12(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_void_safety_condition */
extern T0* T85f187(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_void_safety_condition */
extern T0* T784f50(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_VOID_SAFETY_CONDITION.make */
extern T0* T1517c18(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.make_excluded */
extern T0* T1517c17(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T85f185(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.put_last */
extern void T1512f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].force_last */
extern void T1951f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].force */
extern void T2161s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION_ITEM].fill_with */
extern void T2162f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION_ITEM].extend */
extern void T2162f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].resize */
extern void T1951f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T2161s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T2162f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].new_capacity */
extern T6 T1951f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].extendible */
extern T1 T1951f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T85f183(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T784f48(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_BUILD_CONDITION.make */
extern T0* T1515c8(TC* ac, T0* a1);
/* ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T1515c7(TC* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_anded_conditions */
extern T0* T784f46(TC* ac, T0* C);
/* ET_ECF_ANDED_CONDITIONS.make_empty */
extern T0* T1512c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].make */
extern T0* T1951c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].set_internal_cursor */
extern void T1951f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].new_cursor */
extern T0* T1951f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM].make */
extern T0* T2163c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].make */
extern T0* T2161s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_CONDITION_ITEM].make_empty */
extern T0* T2162c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].default_create */
extern T0* T2161c3(TC* ac);
/* ET_ECF_AST_FACTORY.new_adapted_precompiled_library */
extern T0* T784f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make */
extern T0* T1492c19(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make_adapted_library */
extern void T1492f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.default_read_only_value */
extern T1 T1492f18(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_library */
extern T0* T81s912(TC* ac);
/* ET_LIBRARY.make */
extern T0* T204c106(TC* ac, T0* a1, T0* a2);
/* ET_LIBRARY.make_from_system */
extern void T204f107(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_kernel_types */
extern void T204f111(TC* ac, T0* C);
/* ET_LIBRARY.set_wide_character_type */
extern void T204f153(TC* ac, T0* C);
/* ET_LIBRARY.tokens */
extern T0* T204s100(TC* ac);
/* ET_LIBRARY.set_typed_pointer_type */
extern void T204f152(TC* ac, T0* C);
/* ET_LIBRARY.set_type_type */
extern void T204f151(TC* ac, T0* C);
/* ET_LIBRARY.set_system_string_type */
extern void T204f150(TC* ac, T0* C);
/* ET_LIBRARY.set_system_object_type */
extern void T204f149(TC* ac, T0* C);
/* ET_LIBRARY.set_string_type */
extern void T204f148(TC* ac, T0* C);
/* ET_LIBRARY.set_string_32_type */
extern void T204f147(TC* ac, T0* C);
/* ET_LIBRARY.set_string_8_type */
extern void T204f146(TC* ac, T0* C);
/* ET_LIBRARY.set_special_type */
extern void T204f145(TC* ac, T0* C);
/* ET_LIBRARY.set_routine_type */
extern void T204f144(TC* ac, T0* C);
/* ET_LIBRARY.set_real_64_type */
extern void T204f143(TC* ac, T0* C);
/* ET_LIBRARY.set_real_32_type */
extern void T204f142(TC* ac, T0* C);
/* ET_LIBRARY.set_real_type */
extern void T204f141(TC* ac, T0* C);
/* ET_LIBRARY.set_procedure_type */
extern void T204f140(TC* ac, T0* C);
/* ET_LIBRARY.set_predicate_type */
extern void T204f139(TC* ac, T0* C);
/* ET_LIBRARY.set_pointer_type */
extern void T204f138(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_64_type */
extern void T204f137(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_32_type */
extern void T204f136(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_16_type */
extern void T204f135(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_8_type */
extern void T204f134(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_type */
extern void T204f133(TC* ac, T0* C);
/* ET_LIBRARY.set_iterable_type */
extern void T204f132(TC* ac, T0* C);
/* ET_LIBRARY.set_ise_exception_manager_type */
extern void T204f131(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_64_type */
extern void T204f130(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_32_type */
extern void T204f129(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_16_type */
extern void T204f128(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_8_type */
extern void T204f127(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_type */
extern void T204f126(TC* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_32_type */
extern void T204f125(TC* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_8_type */
extern void T204f124(TC* ac, T0* C);
/* ET_LIBRARY.set_function_type */
extern void T204f123(TC* ac, T0* C);
/* ET_LIBRARY.set_exception_manager_type */
extern void T204f122(TC* ac, T0* C);
/* ET_LIBRARY.set_exception_type */
extern void T204f121(TC* ac, T0* C);
/* ET_LIBRARY.set_double_type */
extern void T204f120(TC* ac, T0* C);
/* ET_LIBRARY.set_character_32_type */
extern void T204f119(TC* ac, T0* C);
/* ET_LIBRARY.set_character_8_type */
extern void T204f118(TC* ac, T0* C);
/* ET_LIBRARY.set_character_type */
extern void T204f117(TC* ac, T0* C);
/* ET_LIBRARY.set_boolean_type */
extern void T204f116(TC* ac, T0* C);
/* ET_LIBRARY.set_array_type */
extern void T204f115(TC* ac, T0* C);
/* ET_LIBRARY.set_tuple_type */
extern void T204f114(TC* ac, T0* C);
/* ET_LIBRARY.set_none_type */
extern void T204f113(TC* ac, T0* C);
/* ET_LIBRARY.set_any_type */
extern void T204f112(TC* ac, T0* C);
/* ET_LIBRARY.make_adapted */
extern void T204f110(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.default_read_only_value */
extern T1 T204f91(TC* ac, T0* C);
/* ET_LIBRARY.set_unknown_kernel_types */
extern void T204f109(TC* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T204f108(TC* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T204f108p1(TC* ac, T0* C);
/* ET_LIBRARY.class_name_tester */
extern T0* T204s90(TC* ac);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.tokens */
extern T0* T1492s17(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_actions */
extern T0* T85f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].force_last */
extern void T1491f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].force */
extern void T1939s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ACTION].fill_with */
extern void T1940f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ACTION].extend */
extern void T1940f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].resize */
extern void T1491f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].aliased_resized_area */
extern T0* T1939s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ACTION].aliased_resized_area */
extern T0* T1940f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].new_capacity */
extern T6 T1491f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].extendible */
extern T1 T1491f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_actions */
extern T0* T784f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].make */
extern T0* T1491c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].set_internal_cursor */
extern void T1491f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].new_cursor */
extern T0* T1491f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION].make */
extern T0* T1941c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].make */
extern T0* T1939s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_ACTION].make_empty */
extern T0* T1940c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].default_create */
extern T0* T1939c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_action */
extern T0* T85f141(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f141ot1(TC* ac, T0* a1);
extern T1 T85f141ot2(TC* ac, T0* a1);
/* ET_ECF_ACTION.set_conditions */
extern void T1504f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_working_directory */
extern void T1504f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_must_succeed */
extern void T1504f8(TC* ac, T0* C, T1 a1);
/* ET_ECF_ACTION.set_description */
extern void T1504f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_action */
extern T0* T784f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.make */
extern T0* T1504c6(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_options */
extern void T85f248(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T85f248ot1(TC* ac, T0* a1);
extern T1 T85f248ot2(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.set_description */
extern void T833f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_warning */
extern void T85f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_warning_value */
extern void T833f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_warning_value */
extern T0* T833f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_1_21_0 */
extern T0* T85s67(TC* ac);
/* ET_ECF_LIBRARY.ecf_version */
extern T0* T806f4(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.ecf_version */
extern T0* T805f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM.ecf_version */
extern T0* T87f105(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.add_debug */
extern void T85f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_debug_value */
extern void T833f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_debug_value */
extern T0* T833f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_assertions */
extern void T85f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T85f260ot1(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.set_primary_assertion_value */
extern void T833f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_assertion_value */
extern T0* T833f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_mappings */
extern T0* T85f114(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_mapping */
extern void T85f253(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_mappings */
extern T0* T784f22(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_adapted_libraries */
extern T0* T85f112(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T1480f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T1928f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].force */
extern void T2123s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T2122f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].extend */
extern void T2122f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].resize */
extern void T1928f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T2123s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T2122f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T1928f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T1928f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T784f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T1480c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T1928f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1928c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1928f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T1928f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T2124c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T2123s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T2122c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T2123c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T85f140(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T85f140ac1(TC* ac, T0* a1);
extern T1 T85f140ot1(TC* ac, T0* a1);
extern T1 T85f140ot2(TC* ac, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_notes */
extern void T825f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_conditions */
extern void T825f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_visible_classes */
extern void T825f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T825f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_options */
extern void T825f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_use_application_options */
extern void T825f26(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T825f25(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T825f24(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_description */
extern void T825f23(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T784f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T825c22(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T825f32(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T825f18(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T825s17(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_override_clusters */
extern T0* T85f110(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_AST_FACTORY.new_clusters */
extern T0* T784f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make */
extern T0* T834c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].put_last */
extern void T1657f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T85f139(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T85f139ac1(TC* ac, T0* a1);
extern T1 T85f139ot1(TC* ac, T0* a1);
extern T1 T85f139ot2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_conditions */
extern void T89f85(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_options */
extern void T89f80(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_file_rules */
extern void T89f79(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_subclusters */
extern void T89f78(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_provider_groups */
extern T0* T85f169(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_provider_group */
extern void T85f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_provider_groups */
extern T0* T784f45(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_overridden_group */
extern T0* T85f176(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_description */
extern void T89f73(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_cluster */
extern T0* T784f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_file_rules */
extern T0* T85f108(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_FILE_RULES.put_last */
extern void T1482f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].force_last */
extern void T1930f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].force */
extern void T2128s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].fill_with */
extern void T2129f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].extend */
extern void T2129f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].resize */
extern void T1930f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T2128s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T2129f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_capacity */
extern T6 T1930f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].extendible */
extern T1 T1930f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T784f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.make */
extern T0* T1482c4(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].put_last */
extern void T1930f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].make */
extern T0* T1930c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].set_internal_cursor */
extern void T1930f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_cursor */
extern T0* T1930f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE].make */
extern T0* T2130c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].make */
extern T0* T2128s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_FILE_RULE].make_empty */
extern T0* T2129c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].default_create */
extern T0* T2128c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T85f138(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f138ot1(TC* ac, T0* a1);
/* ET_ECF_FILE_RULE.set_description */
extern void T1503f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULE.set_conditions */
extern void T1503f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T784f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.make */
extern T0* T1503c11(TC* ac, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T1503f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T859f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T1942f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].force */
extern void T2155s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T2156f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T2156f7(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T107f308(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T859f6(TC* ac, T0* C);
/* ET_ECF_FILE_RULE.operating_system */
extern T0* T1503s8(TC* ac);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T859f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1942c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T1942f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T1942f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T2157c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T2155s1(TC* ac, T6 a1);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T2156c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T2155c2(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resources */
extern T0* T85f106(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_RESOURCES.put_last */
extern void T1490f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].force_last */
extern void T1938f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].force */
extern void T2152s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].fill_with */
extern void T2153f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].extend */
extern void T2153f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].resize */
extern void T1938f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T2152s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T2153f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].new_capacity */
extern T6 T1938f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].extendible */
extern T1 T1938f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_resources */
extern T0* T784f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCES.make */
extern T0* T1490c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].put_last */
extern void T1938f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1938c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].set_internal_cursor */
extern void T1938f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].new_cursor */
extern T0* T1938f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T2154c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T2152s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].make_empty */
extern T0* T2153c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].default_create */
extern T0* T2152c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resource */
extern T0* T85f137(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f137ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.set_conditions */
extern void T1502f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.set_description */
extern void T1502f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_resource */
extern T0* T784f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.make */
extern T0* T1502c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_objects */
extern T0* T85f104(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T1489f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T1937f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].force */
extern void T2149s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T2150f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].extend */
extern void T2150f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].resize */
extern void T1937f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T2149s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T2150f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T1937f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T1937f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T784f18(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T1489c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T1937f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1937c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T1937f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T1937f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T2151c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T2149s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T2150c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T2149c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T85f136(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f136ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.set_conditions */
extern void T1501f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.set_description */
extern void T1501f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_object */
extern T0* T784f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T1501c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_makes */
extern T0* T85f102(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_MAKES.put_last */
extern void T1488f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].force_last */
extern void T1936f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].force */
extern void T2146s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].fill_with */
extern void T2147f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].extend */
extern void T2147f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].resize */
extern void T1936f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T2146s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T2147f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].new_capacity */
extern T6 T1936f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].extendible */
extern T1 T1936f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_makes */
extern T0* T784f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKES.make */
extern T0* T1488c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].put_last */
extern void T1936f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1936c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].set_internal_cursor */
extern void T1936f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].new_cursor */
extern T0* T1936f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T2148c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T2146s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].make_empty */
extern T0* T2147c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].default_create */
extern T0* T2146c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_make */
extern T0* T85f135(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f135ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.set_conditions */
extern void T1500f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.set_description */
extern void T1500f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_make */
extern T0* T784f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.make */
extern T0* T1500c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flags */
extern T0* T85f100(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.put_last */
extern void T1487f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].force_last */
extern void T1935f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].force */
extern void T2143s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].fill_with */
extern void T2144f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].extend */
extern void T2144f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].resize */
extern void T1935f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T2143s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T2144f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].new_capacity */
extern T6 T1935f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].extendible */
extern T1 T1935f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flags */
extern T0* T784f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.make */
extern T0* T1487c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].put_last */
extern void T1935f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1935c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].set_internal_cursor */
extern void T1935f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].new_cursor */
extern T0* T1935f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T2145c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T2143s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].make_empty */
extern T0* T2144c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].default_create */
extern T0* T2143c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flag */
extern T0* T85f134(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f134ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_conditions */
extern void T1499f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_description */
extern void T1499f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flag */
extern T0* T784f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.make */
extern T0* T1499c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_libraries */
extern T0* T85f98(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T1486f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T1934f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].force */
extern void T2140s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T2141f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T2141f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T1934f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T2140s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T2141f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T1934f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T1934f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T784f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T1486c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T1934f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1934c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T1934f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T1934f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T2142c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T2140s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T2141c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T2140c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T85f133(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f133ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.set_conditions */
extern void T1498f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.set_description */
extern void T1498f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_library */
extern T0* T784f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T1498c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_includes */
extern T0* T85f96(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T1485f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T1933f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].force */
extern void T2137s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T2138f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T2138f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T1933f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T2137s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T2138f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T1933f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T1933f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T784f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T1485c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T1933f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1933c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T1933f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T1933f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T2139c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T2137s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T2138c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T2137c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T85f132(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f132ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.set_conditions */
extern void T1497f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.set_description */
extern void T1497f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_include */
extern T0* T784f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T1497c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_cflags */
extern T0* T85f94(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_CFLAGS.put_last */
extern void T1484f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].force_last */
extern void T1932f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].force */
extern void T2134s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].fill_with */
extern void T2135f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].extend */
extern void T2135f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].resize */
extern void T1932f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T2134s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T2135f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].new_capacity */
extern T6 T1932f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].extendible */
extern T1 T1932f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_cflags */
extern T0* T784f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAGS.make */
extern T0* T1484c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].put_last */
extern void T1932f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1932c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].set_internal_cursor */
extern void T1932f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].new_cursor */
extern T0* T1932f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T2136c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T2134s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].make_empty */
extern T0* T2135c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].default_create */
extern T0* T2134c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_cflag */
extern T0* T85f131(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f131ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.set_conditions */
extern void T1496f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.set_description */
extern void T1496f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_cflag */
extern T0* T784f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.make */
extern T0* T1496c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_namespaces */
extern T0* T85f92(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_NAMESPACES.put_last */
extern void T1483f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].force_last */
extern void T1931f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].force */
extern void T2131s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_NAMESPACE].fill_with */
extern void T2132f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_NAMESPACE].extend */
extern void T2132f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].resize */
extern void T1931f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].aliased_resized_area */
extern T0* T2131s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_NAMESPACE].aliased_resized_area */
extern T0* T2132f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].new_capacity */
extern T6 T1931f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].extendible */
extern T1 T1931f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_namespaces */
extern T0* T784f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACES.make */
extern T0* T1483c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].put_last */
extern void T1931f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].make */
extern T0* T1931c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].set_internal_cursor */
extern void T1931f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].new_cursor */
extern T0* T1931f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE].make */
extern T0* T2133c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].make */
extern T0* T2131s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_NAMESPACE].make_empty */
extern T0* T2132c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].default_create */
extern T0* T2131c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_namespace */
extern T0* T85f130(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f130ot1(TC* ac, T0* a1);
extern T1 T85f130ot2(TC* ac, T0* a1);
/* ET_ECF_NAMESPACE.set_notes */
extern void T1495f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.set_class_renamings */
extern void T1495f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.set_classname_prefix */
extern void T1495f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.set_description */
extern void T1495f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_namespace */
extern T0* T784f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.make */
extern T0* T1495c6(TC* ac, T0* a1);
/* ET_ECF_TARGET.set_description */
extern void T88f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_clusters */
extern T0* T85f90(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T85f129(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T85f129ac1(TC* ac, T0* a1);
extern T1 T85f129ot1(TC* ac, T0* a1);
extern T1 T85f129ot2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_notes */
extern void T89f86(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_capabilities */
extern void T85f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T85f247ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assemblies */
extern T0* T85f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T1481f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1929f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T2126s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T2125f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T2125f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1929f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T2126s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T2125f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1929f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1929f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T784f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T1481c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T1929f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1929c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1929f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1929f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T2127c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T2126s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T2125c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T2126c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T85f128(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T85f128ac1(TC* ac, T0* a1);
extern T1 T85f128ot1(TC* ac, T0* a1);
extern T1 T85f128ot2(TC* ac, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_notes */
extern void T830f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_conditions */
extern void T830f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T830f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_options */
extern void T830f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T830f31(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T830f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_version */
extern void T830f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_name */
extern void T830f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_key */
extern void T830f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_culture */
extern void T830f26(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_description */
extern void T830f25(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T784f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T830c24(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T830f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T830f20(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern T0* T81s913(TC* ac);
/* ET_DOTNET_ASSEMBLY.make */
extern T0* T208c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.make_from_system */
extern void T208f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T208f110(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T208f152(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T208f151(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_type_type */
extern void T208f150(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T208f149(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T208f148(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_type */
extern void T208f147(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T208f146(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T208f145(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_special_type */
extern void T208f144(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T208f143(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T208f142(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T208f141(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_type */
extern void T208f140(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T208f139(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T208f138(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T208f137(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T208f136(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T208f135(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T208f134(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T208f133(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T208f132(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T208f131(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T208f130(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T208f129(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T208f128(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T208f127(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T208f126(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T208f125(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T208f124(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_8_type */
extern void T208f123(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_function_type */
extern void T208f122(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T208f121(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T208f120(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_double_type */
extern void T208f119(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T208f118(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T208f117(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_type */
extern void T208f116(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T208f115(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_array_type */
extern void T208f114(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T208f113(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_none_type */
extern void T208f112(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_any_type */
extern void T208f111(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make_adapted */
extern void T208f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T208f90(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T208f108(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.initialize */
extern void T208f107(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T208s89(TC* ac);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T830s19(TC* ac);
/* ET_ECF_TARGET.set_parent */
extern void T88f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.execution_environment */
extern T0* T88s29(TC* ac);
/* ET_ECF_VARIABLES.set_secondary_variables */
extern void T92f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET_PARENT.make */
extern T0* T817c4(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.set_secondary_capabilities */
extern void T91f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.set_secondary_settings */
extern void T90f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_target */
extern T0* T784f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.make */
extern T0* T88c33(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.make */
extern T0* T91c13(TC* ac);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.make */
extern T0* T91f13ac1(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_hash_function */
extern void T840f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.string_ */
extern T0* T91s8(TC* ac);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_key_equality_tester */
extern void T840f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.case_insensitive_string_equality_tester */
extern T0* T91s4(TC* ac);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_map */
extern T0* T840c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_with_equality_testers */
extern void T840f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_sparse_container */
extern void T840f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_internal_cursor */
extern void T840f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_cursor */
extern T0* T840f28(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].make */
extern T0* T1277c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_slots */
extern void T840f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_clashes */
extern void T840f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_key_storage */
extern void T840f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_item_storage */
extern void T840f56(TC* ac, T0* C, T6 a1);
/* ET_ECF_SETTINGS.make */
extern T0* T90c7(TC* ac);
/* Creation of agent #1 in feature ET_ECF_SETTINGS.make */
extern T0* T90f7ac1(TC* ac, T0* a1);
/* ET_ECF_SETTINGS.string_ */
extern T0* T90s3(TC* ac);
/* ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T90s5(TC* ac);
/* ET_ECF_VARIABLES.make */
extern T0* T92c20(TC* ac);
/* Creation of agent #1 in feature ET_ECF_VARIABLES.make */
extern T0* T92f20ac1(TC* ac, T0* a1);
/* ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T92s4(TC* ac);
/* ET_ECF_VARIABLES.execution_environment */
extern T0* T92s3(TC* ac);
/* ET_ECF_LIBRARY.set_notes */
extern void T806f125(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T805f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_notes */
extern void T87f221(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_notes */
extern T0* T85f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].force_last */
extern void T1054f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].force */
extern void T1673s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].fill_with */
extern void T1674f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].extend */
extern void T1674f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].resize */
extern void T1054f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T1673s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T1674f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].new_capacity */
extern T6 T1054f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].extendible */
extern T1 T1054f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_notes */
extern T0* T784f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make */
extern void T1054f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make */
extern T0* T1054c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].set_internal_cursor */
extern void T1054f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].new_cursor */
extern T0* T1054f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT].make */
extern T0* T1675c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].make */
extern T0* T1673s1(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].make_empty */
extern T0* T1674c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].default_create */
extern T0* T1673c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_note_element */
extern T0* T85f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T85f79ot1(TC* ac, T0* a1);
extern T1 T85f79ot2(TC* ac, T0* a1);
/* ET_ECF_NOTE_ELEMENT.set_content */
extern void T1479f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_element */
extern void T1479f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_attribute */
extern void T1479f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_note */
extern T0* T784f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.make */
extern T0* T1479c7(TC* ac, T0* a1);
/* Creation of agent #1 in feature ET_ECF_NOTE_ELEMENT.make */
extern T0* T1479f7ac1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make_default */
extern T0* T1054c14(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].default_capacity */
extern T6 T1054f9(TC* ac, T0* C);
/* ET_ECF_NOTE_ELEMENT.string_ */
extern T0* T1479s6(TC* ac);
/* ET_ECF_NOTE_ELEMENT.case_insensitive_string_equality_tester */
extern T0* T1479s5(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T831c93(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T831f45(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_description */
extern void T806f124(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_description */
extern void T805f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_description */
extern void T87f220(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.text */
extern T0* T789f14(TC* ac, T0* C);
extern T1 T789f14ot1(TC* ac, T0* a1);
/* XM_ELEMENT.string_ */
extern T0* T789s15(TC* ac);
/* ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T85s20(TC* ac);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].item */
extern T0* T1056f8(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].start */
extern void T1056f11(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_start */
extern void T1643f14(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_off */
extern T1 T1643f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].off */
extern T1 T1056f9(TC* ac, T0* C);
/* XM_ELEMENT.new_cursor */
extern T0* T789f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].new_cursor */
extern T0* T1643f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].make */
extern T0* T1056c10(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options */
extern T0* T85s43(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_0_0 */
extern T0* T85s78(TC* ac);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_0_0 */
extern void T85s246(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_5_0 */
extern void T85s245(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_9_0 */
extern void T85s244(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_11_0 */
extern void T85s243(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_15_0 */
extern void T85s242(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_18_0 */
extern void T85s241(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_21_0 */
extern void T85s240(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_22_0 */
extern void T85s239(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_latest */
extern void T85s259(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_5_0 */
extern T0* T85s77(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_9_0 */
extern T0* T85s75(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_9_0 */
extern T0* T85s74(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_11_0 */
extern T0* T85s73(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_15_0 */
extern T0* T85s72(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_15_0 */
extern T0* T85s71(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_18_0 */
extern T0* T85s70(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_18_0 */
extern T0* T85s69(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_21_0 */
extern T0* T85s68(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_options_1_22_0 */
extern T0* T85s66(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_22_0 */
extern T0* T85s65(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_capabilities */
extern T0* T85s42(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_0_0 */
extern T0* T85s64(TC* ac);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_0_0 */
extern void T85s238(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_11_0 */
extern void T85s237(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_13_0 */
extern void T85s236(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_16_0 */
extern void T85s235(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_latest */
extern void T85s258(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_11_0 */
extern T0* T85s63(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_13_0 */
extern T0* T85s61(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_13_0 */
extern T0* T85s60(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_16_0 */
extern T0* T85s59(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_16_0 */
extern T0* T85s58(TC* ac);
/* ET_ECF_SYSTEM_PARSER.default_settings */
extern T0* T85s41(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_settings_1_0_0 */
extern T0* T85s57(TC* ac);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_1_0_0 */
extern void T85s234(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_1_20_0 */
extern void T85s233(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_latest */
extern void T85s257(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_settings_1_20_0 */
extern T0* T85s56(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_1_20_0 */
extern T0* T85s55(TC* ac);
/* ET_ECF_SYSTEM_PARSER.ecf_latest */
extern T0* T85s40(TC* ac);
/* UT_VERSION.make_latest */
extern T0* T56c20(TC* ac);
/* ET_ECF_LIBRARY.set_ecf_version */
extern void T806f123(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T805f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_version */
extern void T87f219(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T85f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_namespace */
extern void T806f122(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T805f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_namespace */
extern void T87f218(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eate_error */
extern void T86f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eate */
extern T0* T832c102(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T85f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found_item */
extern T0* T795f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found */
extern T1 T795f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search */
extern void T795f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search_position */
extern void T795f56(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatm_error */
extern void T86f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eatm */
extern T0* T832c101(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_library */
extern T0* T784f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make */
extern T0* T806c121(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make_library */
extern void T806f130(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.make_from_system */
extern void T806f131(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_kernel_types */
extern void T806f135(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_type */
extern void T806f177(TC* ac, T0* C);
/* ET_ECF_LIBRARY.tokens */
extern T0* T806s102(TC* ac);
/* ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T806f176(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_type_type */
extern void T806f175(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_string_type */
extern void T806f174(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_object_type */
extern void T806f173(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_type */
extern void T806f172(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_32_type */
extern void T806f171(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_8_type */
extern void T806f170(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_special_type */
extern void T806f169(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_routine_type */
extern void T806f168(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_64_type */
extern void T806f167(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_32_type */
extern void T806f166(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_type */
extern void T806f165(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_procedure_type */
extern void T806f164(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_predicate_type */
extern void T806f163(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_pointer_type */
extern void T806f162(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_64_type */
extern void T806f161(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_32_type */
extern void T806f160(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_16_type */
extern void T806f159(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_8_type */
extern void T806f158(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_type */
extern void T806f157(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_iterable_type */
extern void T806f156(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T806f155(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_64_type */
extern void T806f154(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_32_type */
extern void T806f153(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_16_type */
extern void T806f152(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_8_type */
extern void T806f151(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_type */
extern void T806f150(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_32_type */
extern void T806f149(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_8_type */
extern void T806f148(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_function_type */
extern void T806f147(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_manager_type */
extern void T806f146(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_type */
extern void T806f145(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_double_type */
extern void T806f144(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_32_type */
extern void T806f143(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_8_type */
extern void T806f142(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_type */
extern void T806f141(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_boolean_type */
extern void T806f140(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_array_type */
extern void T806f139(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_tuple_type */
extern void T806f138(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_none_type */
extern void T806f137(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_any_type */
extern void T806f136(TC* ac, T0* C);
/* ET_ECF_LIBRARY.make_adapted */
extern void T806f134(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.default_read_only_value */
extern T1 T806f103(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T806f133(TC* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T806f132(TC* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T806f132p1(TC* ac, T0* C);
/* ET_ECF_LIBRARY.class_name_tester */
extern T0* T806s120(TC* ac);
/* XM_ELEMENT.attribute_by_name */
extern T0* T789f5(TC* ac, T0* C, T0* a1);
extern T1 T789f5ot1(TC* ac, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].go_after */
extern void T1056f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_go_after */
extern void T1643f16(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_after */
extern void T1056f16(TC* ac, T0* C);
/* XM_ELEMENT.attribute_same_name */
extern T1 T789f7(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T789f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T789s9(TC* ac);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].forth */
extern void T822f11(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_forth */
extern void T821f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].add_traversing_cursor */
extern void T821f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_next_cursor */
extern void T822f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_position */
extern void T822f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove_traversing_cursor */
extern void T821f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_after */
extern void T822f13(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_item */
extern T6 T821f29(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eadp_error */
extern void T86f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eadp */
extern T0* T832c100(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T1512f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T1512f5p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_PLATFORM_CONDITION.is_capability_supported */
extern T1 T1521f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_supported */
extern T1 T1520f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_CONDITION.is_capability_supported */
extern T1 T1519f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.is_capability_supported */
extern T1 T1518f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T1 T1517f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T0* T1517f5ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T0* T1517f5ac2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [STRING_8]].set_rout_disp_final */
extern void T2043f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_SET [STRING_8].go_after */
extern void T99f80(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T99f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].put_last */
extern void T99f79(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T99f82(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T99f84(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_LINKED_LIST [STRING_8].do_all */
extern void T221f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].append_last */
extern void T99f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].extend_last */
extern void T99f81(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].extendible */
extern T1 T99f37(TC* ac, T0* C, T6 a1);
/* ET_ECF_VOID_SAFETY_CONDITION.supported_void_safety_capability_values */
extern T0* T1517s9(TC* ac);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.supported_void_safety_capability_values */
extern T0* T1517s9ac1(TC* ac, T0* a1);
/* DS_HASH_SET [STRING_8].set_hash_function */
extern void T99f77(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.string_ */
extern T0* T1517s7(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T1517s8(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T1 T1516f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T1516f5ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T1516f5ac2(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T1516s9(TC* ac);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T1516s9ac1(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T1516s7(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T1516s8(TC* ac);
/* ET_ECF_BUILD_CONDITION.is_capability_supported */
extern T1 T1515f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_supported */
extern T1 T1524f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_supported */
extern T1 T1523f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_PLATFORM_CONDITION.is_capability_aware */
extern T1 T1521f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_aware */
extern T1 T1520f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_capability_aware */
extern T1 T1519f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_capability_aware */
extern T1 T1518f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.is_capability_aware */
extern T1 T1517f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_aware */
extern T1 T1516f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.is_capability_aware */
extern T1 T1515f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_aware */
extern T1 T1524f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_aware */
extern T1 T1523f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].item */
extern T0* T1951f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T1511f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].item */
extern T0* T1950f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T1511f5p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CAPABILITIES.is_capability_supported */
extern T1 T91f9(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].found_item */
extern T0* T2045f24(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_item */
extern T0* T2045f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].found */
extern T1 T2045f25(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].search */
extern void T2045f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].search_position */
extern void T2045f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].hash_position */
extern T6 T2045f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_item */
extern T0* T2045f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_item */
extern T6 T2045f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_item */
extern T6 T2045f23(TC* ac, T0* C, T6 a1);
/* ET_ECF_CAPABILITIES.capability_order */
extern T0* T91f12(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.capability_order */
extern T0* T91f12ac1(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].put_last */
extern void T2045f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_put */
extern void T2045f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_put */
extern void T2045f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_put */
extern void T2045f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].compress */
extern void T2045f41(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_wipe_out */
extern void T2045f50(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_wipe_out */
extern void T2045f49(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_keep_head */
extern void T2045f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_keep_head */
extern void T2045f47(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].keep_head */
extern void T2202f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].set_count */
extern void T2202f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].move_all_cursors */
extern void T2045f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_position */
extern void T2206f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_put */
extern void T2045f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].force */
extern void T2205s3(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].fill_with */
extern void T2202f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].extend */
extern void T2202f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].unset_found_item */
extern void T2045f39(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_last */
extern void T1041f60(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].compress */
extern void T1041f61(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_wipe_out */
extern void T1041f66(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_wipe_out */
extern void T1041f65(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_keep_head */
extern void T1041f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_keep_head */
extern void T1041f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].move_all_cursors */
extern void T1041f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].set_position */
extern void T1672f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_hash_function */
extern void T1041f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_hash_function */
extern void T2045f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_key_equality_tester */
extern void T2045f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_map */
extern T0* T2045c32(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_with_equality_testers */
extern void T2045f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_sparse_container */
extern void T2045f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_internal_cursor */
extern void T2045f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].new_cursor */
extern T0* T2045f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make */
extern T0* T2206c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_slots */
extern void T2045f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].new_modulus */
extern T6 T2045f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_clashes */
extern void T2045f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_key_storage */
extern void T2045f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_item_storage */
extern void T2045f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].make */
extern T0* T2205s1(TC* ac, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].make_empty */
extern T0* T2202c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].default_create */
extern T0* T2205c2(TC* ac);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].key */
extern T0* T822f8(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_key */
extern T0* T821f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_item */
extern T0* T821f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].after */
extern T1 T822f4(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_iterator */
extern T0* T821f23(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].start */
extern void T822f12(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_start */
extern void T821f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_off */
extern T1 T821f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].off */
extern T1 T822f9(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].is_empty */
extern T1 T821f35(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor */
extern T0* T821f25(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T822c10(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T85s28(TC* ac);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T85s28ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.void_safety_detection_capability_value_regexp */
extern T0* T85s37(TC* ac);
/* ET_ECF_SYSTEM_PARSER.concurrency_capability_value_regexp */
extern T0* T85s36(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].force_last */
extern void T821f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_put */
extern void T821f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_put */
extern void T821f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_put */
extern void T821f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_item */
extern T6 T821f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].hash_position */
extern T6 T821f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].resize */
extern void T821f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_resize */
extern void T821f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].special_integer_ */
extern T0* T821s30(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_resize */
extern void T821f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_resize */
extern void T821f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T1269s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T1270f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_resize */
extern void T821f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_modulus */
extern T6 T821f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_capacity */
extern T6 T821f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_put */
extern void T821f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].force */
extern void T1269s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].fill_with */
extern void T1270f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].extend */
extern void T1270f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].search_position */
extern void T821f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].unset_found_item */
extern void T821f46(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.catcall_detection_capability_value_regexp */
extern T0* T85s35(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_hash_function */
extern void T821f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_key_equality_tester */
extern void T821f42(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].internal_set_equality_tester */
extern void T1268f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T85s14(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_map */
extern T0* T821c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_with_equality_testers */
extern void T821f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_sparse_container */
extern void T821f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_internal_cursor */
extern void T821f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_slots */
extern void T821f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_clashes */
extern void T821f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_key_storage */
extern void T821f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_item_storage */
extern void T821f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].make */
extern T0* T1269s2(TC* ac, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].make_empty */
extern T0* T1270c6(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].default_create */
extern T0* T1269c3(TC* ac);
/* ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T86f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabw */
extern T0* T832c99(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T825f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T86f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabv */
extern T0* T832c98(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.pathname */
extern T0* T825f20(TC* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.library */
extern T0* T174f4(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T174f3(TC* ac, T0* C);
/* DS_CELL [detachable ET_ECF_LIBRARY].make */
extern T0* T824c2(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.build_ise_eiffel_to_gobo_uuid_mappings */
extern void T85f229(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].put */
extern void T831f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.uuid_from_ecf_file */
extern T0* T85f31(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.uuid_from_ecf_file */
extern T0* T85f31ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_config */
extern void T85f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_SYSTEM_PARSER.new_redirection_config */
extern T0* T85f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_REDIRECTION_CONFIG.set_ecf_version */
extern void T1058f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_ecf_namespace */
extern void T1058f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_message */
extern void T1058f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_uuid */
extern void T1058f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_redirection_config */
extern T0* T784f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_REDIRECTION_CONFIG.make */
extern T0* T1058c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_system_config */
extern T0* T784f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_CONFIG.make */
extern T0* T805c12(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_CELL [detachable ET_ECF_CONFIG].put */
extern void T1050f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_system_config */
extern T0* T85f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_CELL [detachable ET_ECF_CONFIG].make */
extern T0* T1050c2(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.make */
extern T0* T87c167(TC* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make_system */
extern void T87f168(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_kernel_types */
extern void T87f173(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_type */
extern void T87f215(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tokens */
extern T0* T87s153(TC* ac);
/* ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T87f214(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_type_type */
extern void T87f213(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_string_type */
extern void T87f212(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_object_type */
extern void T87f211(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_type */
extern void T87f210(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_32_type */
extern void T87f209(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_8_type */
extern void T87f208(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_type */
extern void T87f207(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_routine_type */
extern void T87f206(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_64_type */
extern void T87f205(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_32_type */
extern void T87f204(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_type */
extern void T87f203(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_procedure_type */
extern void T87f202(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_predicate_type */
extern void T87f201(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_pointer_type */
extern void T87f200(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_64_type */
extern void T87f199(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_32_type */
extern void T87f198(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_16_type */
extern void T87f197(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_8_type */
extern void T87f196(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_type */
extern void T87f195(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_type */
extern void T87f194(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T87f193(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_64_type */
extern void T87f192(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_32_type */
extern void T87f191(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_16_type */
extern void T87f190(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_8_type */
extern void T87f189(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_type */
extern void T87f188(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_32_type */
extern void T87f187(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_8_type */
extern void T87f186(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_type */
extern void T87f185(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_manager_type */
extern void T87f184(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_type */
extern void T87f183(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_double_type */
extern void T87f182(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_32_type */
extern void T87f181(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_8_type */
extern void T87f180(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_type */
extern void T87f179(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_boolean_type */
extern void T87f178(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_array_type */
extern void T87f177(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_tuple_type */
extern void T87f176(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_none_type */
extern void T87f175(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_any_type */
extern void T87f174(TC* ac, T0* C);
/* ET_ECF_SYSTEM.make_adapted */
extern void T87f172(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.default_read_only_value */
extern T1 T87f154(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T87f171(TC* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T87f169(TC* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T87f169p1(TC* ac, T0* C);
/* ET_ECF_SYSTEM.class_name_tester */
extern T0* T87s149(TC* ac);
/* ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T85s25(TC* ac);
/* ET_ECF_SYSTEM_PARSER.select_target */
extern void T85f225(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.select_target */
extern T0* T85f225ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T85f228(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].put */
extern void T818f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_universe */
extern void T88f56(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T88f56ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern void T1487f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern T0* T1487f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]].set_rout_disp_final */
extern void T2100f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LINKER_FLAG.fill_external_linker_flags */
extern void T1499f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.add_external_value */
extern void T1499f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.is_enabled */
extern T1 T1499f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_ANDED_CONDITIONS.is_enabled */
extern T1 T1512f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T1521f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T1521f3ac1(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [STRING_8].there_exists */
extern T1 T221f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T1521s7(TC* ac);
/* ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T1521s6(TC* ac);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T1520f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T1519f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T1518f5(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile_case_sensitive */
extern T0* T1967c21(TC* ac, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T1518s8(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.is_enabled */
extern T1 T1517f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.is_enabled */
extern T0* T1517f3ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities */
extern T0* T1517s6(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_0_0 */
extern T0* T1517s16(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_0_0 */
extern void T1517s22(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_11_0 */
extern void T1517s21(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_13_0 */
extern void T1517s20(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_16_0 */
extern void T1517s19(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_latest */
extern void T1517s23(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_11_0 */
extern T0* T1517s15(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_11_0 */
extern T0* T1517s14(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_13_0 */
extern T0* T1517s13(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_13_0 */
extern T0* T1517s12(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_16_0 */
extern T0* T1517s11(TC* ac);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_16_0 */
extern T0* T1517s10(TC* ac);
/* UT_SHARED_ECF_VERSIONS.ecf_last_known */
extern T0* T2265s1(TC* ac);
/* UT_SHARED_ECF_VERSIONS.ecf_1_23_0 */
extern T0* T2265s2(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T1516f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T1516f3ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities */
extern T0* T1516s6(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_0_0 */
extern T0* T1516s16(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_0_0 */
extern void T1516s22(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_11_0 */
extern void T1516s21(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_13_0 */
extern void T1516s20(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_16_0 */
extern void T1516s19(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_latest */
extern void T1516s23(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_11_0 */
extern T0* T1516s15(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_11_0 */
extern T0* T1516s14(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_13_0 */
extern T0* T1516s13(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_13_0 */
extern T0* T1516s12(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_16_0 */
extern T0* T1516s11(TC* ac);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_16_0 */
extern T0* T1516s10(TC* ac);
/* ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T1515f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_BUILD_CONDITION.is_enabled */
extern T0* T1515f3ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_BUILD_CONDITION.string_ */
extern T0* T1515s6(TC* ac);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_enabled */
extern T1 T1524f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_included */
extern T1 T1524f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T1523f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T1523f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.is_enabled */
extern T1 T1511f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].do_all */
extern void T1935f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].item */
extern T0* T1935f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern void T1484f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern T0* T1484f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]].set_rout_disp_final */
extern void T2093f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_CFLAG.fill_external_cflags */
extern void T1496f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.add_external_value */
extern void T1496f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.is_enabled */
extern T1 T1496f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].do_all */
extern void T1932f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].item */
extern T0* T1932f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern void T1488f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern T0* T1488f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]].set_rout_disp_final */
extern void T2102f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_MAKE.fill_external_makes */
extern void T1500f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.add_external_value */
extern void T1500f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.file_system */
extern T0* T1500s5(TC* ac);
/* ET_ECF_EXTERNAL_MAKE.unix_file_system */
extern T0* T1500s8(TC* ac);
/* ET_ECF_EXTERNAL_MAKE.windows_file_system */
extern T0* T1500s7(TC* ac);
/* ET_ECF_EXTERNAL_MAKE.operating_system */
extern T0* T1500s6(TC* ac);
/* ET_ECF_EXTERNAL_MAKE.is_enabled */
extern T1 T1500f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].do_all */
extern void T1936f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].item */
extern T0* T1936f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern void T1490f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern T0* T1490f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]].set_rout_disp_final */
extern void T2106f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_RESOURCE.fill_external_resources */
extern void T1502f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.add_external_value */
extern void T1502f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.file_system */
extern T0* T1502s5(TC* ac);
/* ET_ECF_EXTERNAL_RESOURCE.unix_file_system */
extern T0* T1502s8(TC* ac);
/* ET_ECF_EXTERNAL_RESOURCE.windows_file_system */
extern T0* T1502s7(TC* ac);
/* ET_ECF_EXTERNAL_RESOURCE.operating_system */
extern T0* T1502s6(TC* ac);
/* ET_ECF_EXTERNAL_RESOURCE.is_enabled */
extern T1 T1502f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].do_all */
extern void T1938f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].item */
extern T0* T1938f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T1486f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T1486f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]].set_rout_disp_final */
extern void T2098f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T1498f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.add_external_value */
extern void T1498f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T1498s5(TC* ac);
/* ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T1498s8(TC* ac);
/* ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T1498s7(TC* ac);
/* ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T1498s6(TC* ac);
/* ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T1498f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T1934f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T1934f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T1489f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T1489f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]].set_rout_disp_final */
extern void T2104f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T1501f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.add_external_value */
extern void T1501f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T1501s5(TC* ac);
/* ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T1501s8(TC* ac);
/* ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T1501s7(TC* ac);
/* ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T1501s6(TC* ac);
/* ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T1501f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T1937f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T1937f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T1485f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T1485f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]].set_rout_disp_final */
extern void T2096f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T1497f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.add_external_value */
extern void T1497f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T1497s5(TC* ac);
/* ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T1497s8(TC* ac);
/* ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T1497s7(TC* ac);
/* ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T1497s6(TC* ac);
/* ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T1497f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T1933f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T1933f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dotnet */
extern void T87f269(TC* ac, T0* C, T1 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T175f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1081f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1687s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1686f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1686f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1081f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1687s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1686f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1081f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1081f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T830f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T1481f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1929f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T1481f3(TC* ac, T0* C);
/* ET_ECF_STATE.is_dotnet */
extern T1 T804f3(TC* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.put_last */
extern void T174f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].force_last */
extern void T1080f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].force */
extern void T1684s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].fill_with */
extern void T1683f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].extend */
extern void T1683f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].resize */
extern void T1080f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1684s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1683f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T1080f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].extendible */
extern T1 T1080f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T825f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T1480f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T1928f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T1480f3(TC* ac, T0* C);
/* ET_ECF_CLUSTER.fill_file_rules */
extern void T89f101(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_CLUSTER.fill_file_rules */
extern T0* T89f101ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_CLUSTER]].set_rout_disp_final */
extern void T2034f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_CLUSTERS.do_all */
extern void T834f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.fill_file_rules */
extern void T1482f7(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T1482f7ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T1482f7ac2(TC* ac, T0* a1);
/* ET_ECF_FILE_RULE.is_enabled */
extern T1 T1503f10(TC* ac, T0* C, T0* a1);
/* PROCEDURE [TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2197f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].do_if */
extern void T1930f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.fill_file_rules */
extern void T88f69(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULES.make_empty */
extern T0* T1482c6(TC* ac);
/* ET_ECF_CLUSTER.fill_subclusters */
extern void T89f100(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_enabled */
extern T1 T89f66(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.cluster */
extern T0* T834f4(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTERS.count */
extern T6 T834f3(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epcd_error */
extern void T86f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR.make_epcd */
extern T0* T832c97(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR_HANDLER.report_epcl_error */
extern void T86f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_epcl */
extern T0* T832c96(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_epcr_error */
extern void T86f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_epcr */
extern T0* T832c95(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eadq_error */
extern void T86f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadq */
extern T0* T832c94(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].before */
extern T1 T816f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_before */
extern T1 T816f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].before */
extern T1 T1263f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].back */
extern void T816f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_back */
extern void T816f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].add_traversing_cursor */
extern void T816f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_next_cursor */
extern void T1263f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_position */
extern void T1263f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].remove_traversing_cursor */
extern void T816f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_before */
extern void T1263f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_item */
extern T6 T816f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].finish */
extern void T816f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_finish */
extern void T816f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_off */
extern T1 T816f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].off */
extern T1 T1263f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].is_empty */
extern T1 T816f36(TC* ac, T0* C);
/* ET_ECF_TARGET_PARENT.set_target */
extern void T817f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_epcy_error */
extern void T86f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epcy */
extern T0* T832c93(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_for_iteration */
extern T0* T816f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_item */
extern T0* T816f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_item */
extern T0* T816f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].forth */
extern void T816f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_forth */
extern void T816f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_after */
extern void T1263f10(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_for_iteration */
extern T0* T816f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_key */
extern T0* T816f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_item */
extern T0* T816f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].after */
extern T1 T816f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_after */
extern T1 T816f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].after */
extern T1 T1263f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].start */
extern void T816f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_start */
extern void T816f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].has */
extern T1 T816f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].search_position */
extern void T816f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].hash_position */
extern T6 T816f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_item */
extern T6 T816f24(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_internal_error */
extern void T86f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_internal */
extern T0* T832c92(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epud_error */
extern void T86f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epud */
extern T0* T832c91(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.library_target */
extern T0* T806f10(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T805f11(TC* ac, T0* C);
/* ET_ECF_SYSTEM.library_target */
extern T0* T87f103(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epul_error */
extern void T86f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_epul */
extern T0* T832c90(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epur_error */
extern void T86f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epur */
extern T0* T832c89(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.targets */
extern T0* T806f7(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T805f8(TC* ac, T0* C);
/* ET_ECF_SYSTEM.targets */
extern T0* T87f102(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epfe_error */
extern void T86f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epfe */
extern T0* T832c88(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].found_item */
extern T0* T815f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_item */
extern T0* T815f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].found */
extern T1 T815f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].search */
extern void T815f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].search_position */
extern void T815f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].hash_position */
extern T6 T815f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_item */
extern T0* T815f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_item */
extern T6 T815f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_item */
extern T6 T815f26(TC* ac, T0* C, T6 a1);
/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].make */
extern T0* T818c2(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].force_last */
extern void T816f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_put */
extern void T816f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_put */
extern void T816f55(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_put */
extern void T816f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].resize */
extern void T816f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_resize */
extern void T816f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].special_integer_ */
extern T0* T816s39(TC* ac);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_resize */
extern void T816f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_resize */
extern void T816f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_resize */
extern void T816f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_modulus */
extern T6 T816f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_capacity */
extern T6 T816f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_put */
extern void T816f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].unset_found_item */
extern void T816f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_default */
extern T0* T816c43(TC* ac);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make */
extern void T816f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_with_equality_testers */
extern void T816f61(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_sparse_container */
extern void T816f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].set_internal_cursor */
extern void T816f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_cursor */
extern T0* T816f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].make */
extern T0* T1263c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_slots */
extern void T816f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_clashes */
extern void T816f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_key_storage */
extern void T816f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_item_storage */
extern void T816f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].default_capacity */
extern T6 T816f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].force_last */
extern void T815f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_put */
extern void T815f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_put */
extern void T815f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_put */
extern void T815f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].resize */
extern void T815f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_resize */
extern void T815f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].special_integer_ */
extern T0* T815s29(TC* ac);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_resize */
extern void T815f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_resize */
extern void T815f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T1261s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T1259f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_resize */
extern void T815f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_modulus */
extern T6 T815f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_capacity */
extern T6 T815f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_put */
extern void T815f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].force */
extern void T1261s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].fill_with */
extern void T1259f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].extend */
extern void T1259f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].unset_found_item */
extern void T815f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_default */
extern T0* T815c34(TC* ac);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make */
extern void T815f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_with_equality_testers */
extern void T815f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_sparse_container */
extern void T815f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].set_internal_cursor */
extern void T815f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_cursor */
extern T0* T815f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8].make */
extern T0* T1262c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_slots */
extern void T815f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_clashes */
extern void T815f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_key_storage */
extern void T815f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_item_storage */
extern void T815f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].make */
extern T0* T1261s2(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].make_empty */
extern T0* T1259c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].default_create */
extern T0* T1261c3(TC* ac);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].default_capacity */
extern T6 T815f27(TC* ac, T0* C);
/* ET_ECF_LIBRARY.select_target */
extern void T806f178(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.select_target */
extern void T87f217(TC* ac, T0* C, T0* a1);
/* ET_ECF_STATE.make */
extern T0* T804c4(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_etnu_error */
extern void T86f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_etnu */
extern T0* T832c81(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T85f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.target_with_name */
extern T0* T87f150(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.target */
extern T0* T820f4(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T85f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_system */
extern T0* T784f1(TC* ac, T0* C, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_TARGET]].set_rout_disp_final */
extern void T787f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.override_target */
extern void T85f222(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_variables */
extern void T88f61(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_capabilities */
extern void T88f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].forth */
extern void T1277f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_forth */
extern void T840f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].add_traversing_cursor */
extern void T840f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_next_cursor */
extern void T1277f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_position */
extern void T1277f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].remove_traversing_cursor */
extern void T840f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_after */
extern void T1277f13(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].item */
extern T0* T1277f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_item */
extern T0* T840f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].key */
extern T0* T1277f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_key */
extern T0* T840f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].after */
extern T1 T1277f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_iterator */
extern T0* T840f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].start */
extern void T1277f12(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_start */
extern void T840f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_off */
extern T1 T840f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].off */
extern T1 T1277f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].is_empty */
extern T1 T840f37(TC* ac, T0* C);
/* ET_ECF_TARGET.override_settings */
extern void T88f59(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_settings */
extern T0* T88f59ac1(TC* ac, T0* a1);
/* ET_ECF_TARGET.override_all_assertions */
extern void T88f65(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T88f65ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T88f65ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T88f65ac3(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T2040f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T2038f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_TARGET.override_all_assertions_in_cluster */
extern void T88f67(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_cluster */
extern T0* T88f67ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern void T88f68(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern T0* T88f68ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.class_options */
extern T0* T830f13(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.class_options */
extern T0* T825f10(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.class_options */
extern T0* T1492f11(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.options */
extern T0* T830f1(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.options */
extern T0* T825f1(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.options */
extern T0* T1492f1(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T1481f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.do_adapted */
extern void T1480f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_explicit */
extern void T834f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_all_assertions_in_option */
extern void T88f66(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_option */
extern T0* T88f66ac1(TC* ac, T0* a1, T0* a2);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].do_all */
extern void T1268f9(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].forth */
extern void T2261f7(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_forth */
extern void T1268f12(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].item */
extern T0* T2261f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_item */
extern T0* T1268f6(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].after */
extern T1 T2261f3(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].start */
extern void T2261f6(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_start */
extern void T1268f11(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor */
extern T0* T1268f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T2261c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].keys */
extern T0* T821f37(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T1268c7(TC* ac, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].set_internal_cursor */
extern void T1268f10(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor_with_table_cursor */
extern T0* T1268f5(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make_with_table_cursor */
extern T0* T2261c8(TC* ac, T0* a1, T0* a2);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T2041s2(TC* ac);
/* Creation of agent #1 in feature ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T2041s2ac1(TC* ac, T0* a1);
/* ET_ECF_OPTION_DEFAULTS.boolean_option_value_regexp */
extern T0* T2041s8(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.string_ */
extern T0* T2041s7(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.case_insensitive_string_equality_tester */
extern T0* T2041s6(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions */
extern T0* T2041s1(TC* ac, T0* a1);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_1_0_0 */
extern T0* T2041s5(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove */
extern void T821f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove_position */
extern void T821f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_keep_head */
extern void T821f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_keep_head */
extern void T821f78(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].keep_head */
extern void T1270f10(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].set_count */
extern void T1270f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].move_cursors_forth */
extern void T821f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].internal_set_key_equality_tester */
extern void T821f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].twin */
extern T0* T821f38(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].copy */
extern void T821f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].copy */
extern void T821f68p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_clashes */
extern void T821f75(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_slots */
extern void T821f74(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_key_storage */
extern void T821f73(TC* ac, T0* C);
/* SPECIAL [STRING_8].resized_area */
extern T0* T35f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T35f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].force */
extern void T35f15(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].move_data */
extern void T35f14(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T35f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T35f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_item_storage */
extern void T821f72(TC* ac, T0* C);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].resized_area */
extern T0* T1270f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].copy_data */
extern void T1270f11(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].force */
extern void T1270f14(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].move_data */
extern void T1270f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].overlapping_move */
extern void T1270f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].non_overlapping_move */
extern void T1270f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].valid_cursor */
extern T1 T821f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].move_all_cursors_after */
extern void T821f70(TC* ac, T0* C);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_1_2_0 */
extern T0* T2041s4(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.ecf_1_2_0 */
extern T0* T2041s3(TC* ac);
/* ET_ECF_TARGETS.do_all */
extern void T820f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].do_all */
extern void T1652f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.parse_file_with_action */
extern void T85f224(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T803f11(TC* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T790c4(TC* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1648c7(TC* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].set_internal_cursor */
extern void T1648f8(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.is_position_table_enabled */
extern T1 T803f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T799f120(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.position */
extern T0* T799f114(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T1213f6(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T799f118(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T799f88(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T1214f7(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T1214f4(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T1214f3(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T1213f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].put_right */
extern void T1752f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].attach_left */
extern void T1752f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].make */
extern T0* T1752c4(TC* ac, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T1213c7(TC* ac);
/* DS_BILINKED_LIST [XM_POSITION].set_internal_cursor */
extern void T1213f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T1213f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T1753c3(TC* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T1214f6(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T1754f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T1754c3(TC* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T1214c5(TC* ac);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T1248f59(TC* ac, T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T1211c5(TC* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T1251f61(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T1249f59(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T1210f70(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T86f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_syntax */
extern T0* T832c87(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T800f5(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T86f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabx */
extern T0* T832c86(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadf_error */
extern void T86f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadf */
extern T0* T832c85(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eadi_error */
extern void T86f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadi */
extern T0* T832c84(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T85s30(TC* ac);
/* ET_ECF_ERROR_HANDLER.report_eadh_error */
extern void T86f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadh */
extern T0* T832c83(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadg_error */
extern void T86f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadg */
extern T0* T832c82(TC* ac, T0* a1, T0* a2);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T800f8(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T799f90(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T799f208(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T799f213(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T799f219(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T1252f29(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T813f10(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T813f10p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T803f16(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.on_finish */
extern void T1215f3(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T799f218(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T799f228(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T799f227(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T799f226(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T799f256(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T1220f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T1228f5(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T1227s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T1229f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T1228f4(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T799f168(TC* ac, T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T1228c3(TC* ac);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T799f255(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force_new */
extern void T1216f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T1216f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T1216f51(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].force */
extern void T1759s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1755f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].extend */
extern void T1755f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T1216f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T1216f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T1216f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T1216f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T1216f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T1216f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T1216f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T1216s33(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T1216f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T1216f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1759s1(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1755f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T1216f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T1216f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T1216f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T1216f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T1216f43(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T1216f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T1216f40(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T1251c214(TC* ac, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T1251f216(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T1218c3(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T1251f217(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T1251f219(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T1251f222(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T1251f219p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T1251f219p0(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T1251f219p2(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T1251f219p3(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T1251f218(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T1251f221(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T1251f224(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T1251f220(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T1251f220p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T1251f223(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern T0* T1251f54(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T1251f58(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T1251f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T1251f279(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T1251s60(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T1251f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T1251f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T1251f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern T0* T1251f52(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern T0* T1251f73(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T1251f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T1251f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern T0* T1251f68(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T1251f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T1251f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T1251f227(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T1251f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T1251f225(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern T0* T1251f57(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T1251f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T1251f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T1251f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T1251f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T1251f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern T0* T1251f55(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T1251f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T1251f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T1251f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T1251f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T1251f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T1251f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T1251f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T1251f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T1251f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T1251f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T1251f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T1251f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T1251f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T1251f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T1251f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T1251f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T1251f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T1251f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern T0* T1251f97(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T1251f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T1251f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T1251f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T1251f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T1251f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T1251f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T1251f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T1251f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T1251f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T1251f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T1251f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T1251f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T1251f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T1251f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T1251f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T1251f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T1251f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T1251f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T1251f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T1251f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T1251s56(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T1251f53(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1751c8(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T1251f215(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T799f167(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T1248c213(TC* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T1248f214(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T1248f216(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T1248f216p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T1248f216p0(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T1248f216p2(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T1248f215(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T1248f218(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T1248f220(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T1248f217(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T1248f217p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T1248f219(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T1248f52(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T1248f56(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T1248f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T1248f275(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T1248s58(TC* ac);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T1248f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T1248f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T1248f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T1248f50(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T1248f71(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T1248f227(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T1248f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T1248f66(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T1248f225(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T1248f224(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T1248f223(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T1248f222(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T1248f221(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T1248f55(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T1248f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T1248f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T1248f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T1248f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T1248f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T1248f53(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T1248f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T1248f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T1248f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T1248f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T1248f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T1248f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T1248f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T1248f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T1248f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T1248f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T1248f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T1248f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T1248f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T1248f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T1248f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T1248f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T1248f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T1248f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T1248f94(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T1248f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T1248f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T1248f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T1248f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T1248f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T1248f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T1248f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T1248f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T1248f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T1248f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T1248f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T1248f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T1248f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T1248f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T1248f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T1248f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T1248f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T1248f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T1248f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T1248f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T1248s70(TC* ac);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T1248f60(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T799f254(TC* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T1220f7(TC* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T799f253(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T799f166(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T1248c212(TC* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T1248f281(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T1248f290(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T1248f277(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T1248f63(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T1251f285(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T1251f295(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T1251f281(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T1251f65(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T1249f209(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T1249f223(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T1249f212(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T1249f53(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T1249s65(TC* ac);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T1210f207(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T1210f218(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T1210f226(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T1210f46(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T1210s54(TC* ac);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T1237f26(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T1237f25(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T1237f24(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T1237f23(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T1239s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T1241f4(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T1240f11(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].put_right */
extern void T1768f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].attach_left */
extern void T1768f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].make */
extern T0* T1768c4(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T799f163(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T1240f12(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T799s177(TC* ac);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T1240c10(TC* ac);
/* DS_BILINKED_LIST [STRING_8].set_internal_cursor */
extern void T1240f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T1240f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1767c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].force */
extern void T1239s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].fill_with */
extern void T1241f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].extend */
extern void T1241f10(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T1237f22(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T1237f27(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern T0* T1237f11(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T1237f21(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T1237f20(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T1237f19(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T1237f18(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T1237f17(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T1237f16(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T1237f15(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T799f162(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T1236s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T1238f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T1237c12(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T1236s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T1238f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T1238f10(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T1237f14(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T1237f10(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T1237f9(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T1237f8(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T1237f7(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T1237f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T1233s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T1235f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T1235f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T1233s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T1235f4(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T1234f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1766f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1766f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1766c4(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T799f160(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1234c7(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T1234f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T1234f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1765c8(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T799f252(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1765f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T1234f11(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T1234f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1765f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T1234f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1765f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T799f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T1220f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1765f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1765f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T1234f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T1234f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1765f7(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T1231f11(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T1231c10(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T1231f21(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T1231f19(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T1231f16(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T1231f22(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T1231f12(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T1231f20(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1764c6(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1764f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1764f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T2024c3(TC* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T1231c9(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1764f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T2025f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T2025f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T2025c4(TC* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T1231c8(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1764f7(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T799f155(TC* ac, T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T1231c15(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T799f251(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T1231f14(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T1231f13(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T1231c7(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T1231f18(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].force */
extern void T1230s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T1232f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].extend */
extern void T1232f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T1230s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T1232f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T1231c6(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T1231f17(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T799f250(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T1220f6(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T799f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T1252f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1769f14(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T831f95(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T2027f5(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T1252f37(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_error */
extern void T1215f11(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T813f17(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T813f17p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T803f23(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1769f4(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T1252f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T1773f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_QUEUE [detachable STRING_8].force */
extern void T1772f7(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [detachable STRING_8].put_right */
extern void T2029f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [detachable STRING_8].make */
extern T0* T2029c3(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1769f13(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern T0* T1769f7(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T1252f9(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T1252f23(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T1252s26(TC* ac);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern T0* T1252f22(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T1252f10(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T1215f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T1225f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T1225f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T1225f24(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T1222f16(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T1222f17(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T1240f8(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1762f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T1225f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T1225f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T1225f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T1225f17(TC* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T1225f25(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].force */
extern void T1224s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T1226f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].extend */
extern void T1226f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T1224s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T1226f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T1225f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T1225f39(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T1225f38(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T1225f37(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T1225f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T1225f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T1225s28(TC* ac);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T1225f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T1225f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T1225f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T1225f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T1225f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T1225f35(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T799f148(TC* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T1225c31(TC* ac, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1762c2(TC* ac);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T1225f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T1225f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T1225f21(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1763c4(TC* ac, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T1225f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T1225f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T1225f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T1225f40(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1221s1(TC* ac, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T1223c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1221c3(TC* ac);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T799f248(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T1252f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1769f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T2027f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T2182f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T2182f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T2182c4(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1769f8(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T831f94(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1769s9(TC* ac);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T1215f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T799f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T1252f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1769f11(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T2027f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T2027f14(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T2182f7(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T2027f13(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T2028f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T2028f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T2027f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T2027f15(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1769f3(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T1252f34p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T813f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T813f16p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T803f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T789f10(TC* ac, T0* C);
extern T1 T789f10ot1(TC* ac, T0* a1);
/* XM_ELEMENT.is_root_node */
extern T1 T789f11(TC* ac, T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T810f8(TC* ac, T0* C);
/* XM_DOCUMENT.parent */
extern T0* T810f9(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1769f2(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T2028f11(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T2027f18(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T2027f19(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T2027f20(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T2028f14(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T2028f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T2027f17(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T2028f15(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T2027f7(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].off */
extern T1 T2028f7(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T2028f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T2028f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T2027f16(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T2027f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T2028c8(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern T0* T1769f6(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T1215f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T1222f11(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1767f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T1240f15(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T1240f16(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1767f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T1240f17(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1767f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1767f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1767f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T1240f14(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T1240f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].off */
extern T1 T1767f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T1222s10(TC* ac);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T1222f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T1240f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T1222f8(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T1222f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T1222f18(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T1222c18(TC* ac);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T1222f15(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T1222s14(TC* ac);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T799f246(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T1252f33(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T1252f33p1(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T813f15(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T813f15p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T803f21(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T1252s14(TC* ac);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T1252f40(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T1252f44(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T1773f7(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T1773f8(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].remove */
extern void T1772f8(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].wipe_out */
extern void T1772f9(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T1252f19(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern T0* T1252f25(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern T0* T1252f18(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern T0* T1252f17(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T1252f16(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern T0* T1252f24(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T813f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T813f18p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T803f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T803f25(TC* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T790f5(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T1648f9(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T2116f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T2116c3(TC* ac, T0* a1);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T1649c3(TC* ac, T0* a1, T0* a2);
/* XM_ATTRIBUTE.make_last */
extern T0* T814c5(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ELEMENT.force_last */
extern void T789f20(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T1643f13(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T1643f13p1(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].put_right */
extern void T2082f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].make */
extern T0* T2082c3(TC* ac, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].before_addition */
extern void T1643f18(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T789f22(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1869f4(TC* ac, T0* C, T0* a1);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1868f6(TC* ac, T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1867f5(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T789f17(TC* ac, T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T814f6(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T810f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].forth */
extern void T1651f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_forth */
extern void T1256f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T1256f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_next_cursor */
extern void T1651f16(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T1256f23(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set */
extern void T1651f15(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].remove */
extern void T1651f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_at_cursor */
extern void T1256f16(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors */
extern void T1256f22(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_current_cell */
extern void T1651f17(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].put */
extern void T1778f6(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].put_right */
extern void T1778f4(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_last_cell */
extern void T1256f21(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].forget_right */
extern void T1778f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_last */
extern void T1256f20(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T1256f26(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_after */
extern void T1651f18(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].wipe_out */
extern void T1256f24(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T1256f27(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_last */
extern T1 T1651f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T1256f10(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_first */
extern void T1256f19(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_first_cell */
extern void T1256f25(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_first */
extern T1 T1651f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T1256f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].item */
extern T0* T1651f8(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].start */
extern void T1651f11(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_start */
extern void T1256f15(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_off */
extern T1 T1256f8(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].off */
extern T1 T1651f9(TC* ac, T0* C);
/* XM_DOCUMENT.new_cursor */
extern T0* T810f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].new_cursor */
extern T0* T1256f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].make */
extern T0* T1651c10(TC* ac, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T789f21(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].remove */
extern void T1056f14(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_at_cursor */
extern void T1643f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors */
extern void T1643f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_current_cell */
extern void T1056f18(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].put */
extern void T2082f6(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_last_cell */
extern void T1643f23(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].forget_right */
extern void T2082f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_last */
extern void T1643f22(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_last_cursors_after */
extern void T1643f27(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].wipe_out */
extern void T1643f25(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors_after */
extern void T1643f28(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_last */
extern T1 T1056f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_last */
extern T1 T1643f10(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_first */
extern void T1643f21(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_first_cell */
extern void T1643f26(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_first */
extern T1 T1056f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_first */
extern T1 T1643f9(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.parent */
extern T0* T1869f2(TC* ac, T0* C);
/* XM_PROCESSING_INSTRUCTION.parent */
extern T0* T1868f3(TC* ac, T0* C);
/* XM_COMMENT.parent */
extern T0* T1867f2(TC* ac, T0* C);
/* XM_ELEMENT.parent */
extern T0* T789f3(TC* ac, T0* C);
/* XM_ATTRIBUTE.parent */
extern T0* T814f4(TC* ac, T0* C);
/* XM_ELEMENT.last */
extern T0* T789f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].last */
extern T0* T1643f8(TC* ac, T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T789f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].is_empty */
extern T1 T1643f7(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T803f9(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T1255f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T1255f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T1255f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T1255f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T1255f20(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T1055f6(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T1255f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T1255f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T1255s29(TC* ac);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T1255f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T1255f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].aliased_resized_area */
extern T0* T1776s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].aliased_resized_area */
extern T0* T1777f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T1255f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T1255f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T1255f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T1255f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T1255f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T1255f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T1255f41(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].force */
extern void T1776s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].fill_with */
extern void T1777f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].extend */
extern void T1777f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T1255f40(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1774f1(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.is_equal */
extern T1 T1055f4(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T1055s5(TC* ac);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T1255f25(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T1255f37(TC* ac, T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T1055f3(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T1255f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T1255f30(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.make */
extern void T1055f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T1055c8(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T1773f4(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].item */
extern T0* T1772f5(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T1252f12(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].is_empty */
extern T1 T1772f4(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T813f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T813f14p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T803f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T789c19(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T810f15(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.force_last */
extern void T810f12(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T1256f12(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T1256f12p1(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].make */
extern T0* T1778c3(TC* ac, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].before_addition */
extern void T1256f14(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.before_addition */
extern void T810f13(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.last */
extern T0* T810f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].last */
extern T0* T1256f7(TC* ac, T0* C);
/* XM_DOCUMENT.is_empty */
extern T1 T810f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].is_empty */
extern T1 T1256f6(TC* ac, T0* C);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T810f16(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].go_after */
extern void T1651f14(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_go_after */
extern void T1256f28(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].make */
extern T0* T1643c11(TC* ac);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_internal_cursor */
extern void T1643f12(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.make_last */
extern T0* T789c18(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1769f5(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T1215f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T1222f6(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T1222f13(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T799f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T1248f283(TC* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T1218f2(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T1251f287(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T1249f211(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T1210f209(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T1249c205(TC* ac);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T1249f205p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T1249f214(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T1249f214p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T1249f214p0(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T1249f213(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T1249f225(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T1249f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T1249f224(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T1249f224p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T1249f229(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T1249f199(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T1249f202(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T1249f283(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T1249f284(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T1249s204(TC* ac);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T1249f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T1249f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T1249f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T1249f198(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T1249f197(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T1249f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T1249f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T1249f196(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T1249f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T1249f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T1249f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T1249f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T1249f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T1249f195(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T1249f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T1249f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T1249f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T1249f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T1249f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T1249f194(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T1249f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T1249f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T1249f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T1249f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T1249f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T1249f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T1249f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T1249f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T1249f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T1249f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T1249f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T1249f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T1249f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T1249f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T1249f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T1249f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T1249f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T1249f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T1249f193(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T1249f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T1249f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T1249f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T1249f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T1249f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T1249f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T1249f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T1249f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T1249f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T1249f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T1249f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T1249f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T1249f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T1249f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T1249f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T1249f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T1249f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T1249f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T1249f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T1249f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T1249f52(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T1214f8(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.null_resolver */
extern T0* T799f112(TC* ac, T0* C);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T1218f1(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T799f261(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T1218f5(TC* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T1218f4(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].force */
extern void T1227s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].fill_with */
extern void T1229f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].extend */
extern void T1229f10(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T799f244(TC* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T1220f5(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T799f243(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T1220f4(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T1244f9(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T1244f8(TC* ac, T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T1244f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].force */
extern void T1243s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].fill_with */
extern void T1245f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].extend */
extern void T1245f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T1243s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T1245f4(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T1244c7(TC* ac);
/* XM_EIFFEL_DECLARATION.process */
extern void T1244f10(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T799f287(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T1252f45(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T813f19(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T803f26(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T1215f12(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T799f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T1248f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T1650f31(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T1251f286(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T1249f210(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T1210f208(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T1248f62(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T1650f21(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T1650f14(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T1251f64(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T1249f51(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T1210f74(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T799f241(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T1252f32(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T813f13(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T813f13p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T803f19(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1869c3(TC* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T1215f6(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T799f240(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T1220f3(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T799f239(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T1252f31(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T813f12(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T813f12p1(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T803f18(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1868c5(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1868c4(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T1215f5(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T799f238(TC* ac, T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T1220f2(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T799f237(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T1252f30(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T813f11(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T813f11p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T803f17(TC* ac, T0* C, T0* a1);
/* XM_COMMENT.make_last_in_document */
extern T0* T1867c4(TC* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last */
extern T0* T1867c3(TC* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_comment */
extern void T1215f4(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T799f138(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T799f191(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T799f198(TC* ac, T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f84(TC* ac, T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T1218f6(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T1650f30(TC* ac, T0* C, T6 a1);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T1360s3(TC* ac);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T799s203(TC* ac);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T1650c29(TC* ac, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1971c5(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T1216f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T1216f35(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T799s137(TC* ac);
/* XM_EIFFEL_PARSER.force_error */
extern void T799f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T799f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T799f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T799f173(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T799f193(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T799f201(TC* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T799f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T1248f280(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.close */
extern void T1819f11(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1819f8(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T1251f284(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T1249f208(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T1210f206(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T799f126(TC* ac, T0* C, T0* a1);
/* STRING_8.string */
extern T0* T17f45(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T10 T799f186(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T799f185(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T799s181(TC* ac, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T1078c73(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T1078f93(TC* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T168s39(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8_substring */
extern T1 T168s47(TC* ac, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T799s184(TC* ac);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T799f182(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T799f124(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T799f180(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T799f135(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern T0* T799f190(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern T0* T799f189(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T799s197(TC* ac);
/* UC_UTF8_STRING.make_empty */
extern T0* T1078c84(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].force */
extern void T1221s4(TC* ac, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].fill_with */
extern void T1223f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].extend */
extern void T1223f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T1221s2(TC* ac, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T1223f4(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T799f235(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T1222f19(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T1222f12(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T799f134(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T1222c20(TC* ac);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T799f225(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T799f224(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T799f222(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T799f233(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T799f221(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T799f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T799f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T1248f276(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T168s54(TC* ac, T0* a1);
extern T1 T168s54ot1(TC* ac, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T1248s69(TC* ac);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T1248f284(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T1251f280(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T1251s71(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T1251f288(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T1248f64(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T1248f67(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T1251f66(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T1251f69(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.process_entity */
extern void T799f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T799f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T1248f61(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T1251f63(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T1249f69(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T1210f72(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.last_value */
extern T0* T1248f10(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.last_value */
extern T0* T1251f10(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.last_value */
extern T0* T1249f2(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.last_value */
extern T0* T1210f2(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.last_token */
extern T6 T1248f45(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.last_token */
extern T6 T1251f47(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.last_token */
extern T6 T1249f1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.last_token */
extern T6 T1210f1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T1248f279(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T1248f279p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T1248f289(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1751f10(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T108s21(TC* ac, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1751s7(TC* ac);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1751f3(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1751s6(TC* ac);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1751f2(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1751f5(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T916s52(TC* ac, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1751s4(TC* ac);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1751f9(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T1248f204(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T1248f184(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T1248f183(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T1248f165(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T1248f211(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T1248f124(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T1248f124p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T1248f294(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T1248f108(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T1248f293(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T1248f292(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T1248f288(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T1248f291(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T1248f102(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T1248f287(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T1248f101(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T1248f100(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.report_invalid_unicode_character_error */
extern void T1248f286(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_at_beginning_of_line */
extern T6 T1248f89(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T1251f283(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T1251f283p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T1251f283p0(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T1251f294(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T1251f207(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T1251f187(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T1251f186(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T1251f168(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T1251f213(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T1251f127(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T1251f127p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T1251f298(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T1251f111(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T1251f297(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T1251f296(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T1251f293(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T1251f105(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T1251f292(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T1251f104(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T1251f103(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.report_invalid_unicode_character_error */
extern void T1251f291(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_at_beginning_of_line */
extern T6 T1251f92(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T1251f290(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T1249f207(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T1249f207p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T1249f222(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T1249f187(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T1249f167(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T1249f166(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T1249f148(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T1249f201(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T1249f110(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T1249f228(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T1249f84(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T1249f227(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T1249f221(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T1249f72(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T1249f220(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T1249f71(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T1249f70(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T1249f219(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.report_invalid_unicode_character_error */
extern void T1249f218(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_at_beginning_of_line */
extern T6 T1249f62(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T1249f217(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T1249f216(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.read_token */
extern void T1210f205(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T1210f217(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T1210f185(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T1210f165(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T1210f164(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T1210f146(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T1210f199(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T1210f105(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T1210f225(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T1210f79(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T1210f224(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T1210f223(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T1210f216(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T1210f222(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T1210f67(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T1210f215(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T1210f221(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T1210f66(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T1210f65(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T1210f214(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.report_invalid_unicode_character_error */
extern void T1210f213(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_SCANNER.yy_at_beginning_of_line */
extern T6 T1210f50(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T799s97(TC* ac);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T799f220(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T799f229(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T799f257(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T799f263(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T799f264(TC* ac, T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].keep_head */
extern void T1245f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].set_count */
extern void T1245f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].keep_head */
extern void T1241f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].set_count */
extern void T1241f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T1238f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T1238f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T1235f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T1235f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T1232f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].set_count */
extern void T1232f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].keep_head */
extern void T1229f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].set_count */
extern void T1229f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T1226f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].set_count */
extern void T1226f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].keep_head */
extern void T1223f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].set_count */
extern void T1223f9(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.abort */
extern void T799f223(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T799f217(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T1252f28(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T813f9(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T813f9p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T803f15(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T803f13(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T1255c31(TC* ac, T6 a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1774c2(TC* ac);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T1255f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].set_internal_cursor */
extern void T1255f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T1255f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1775c4(TC* ac, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T1255f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T1255f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T1255f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T1255f33(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1776s1(TC* ac, T6 a1);
/* SPECIAL [XM_NAMESPACE].make_empty */
extern T0* T1777c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1776c3(TC* ac);
/* XM_DOCUMENT.make */
extern T0* T810c10(TC* ac);
/* XM_DOCUMENT.make_with_root_named */
extern void T810f11(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.make */
extern T0* T789c16(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].make */
extern T0* T1256c11(TC* ac);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_internal_cursor */
extern void T1256f13(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.default_ns */
extern T0* T810f3(TC* ac, T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T1055c7(TC* ac);
/* XM_NAMESPACE_RESOLVER.initialize */
extern void T1252f39(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T1252f43(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T1252f21(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T1773c5(TC* ac);
/* XM_NAMESPACE_RESOLVER.new_detachable_string_queue */
extern T0* T1252f20(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].make */
extern T0* T1772c6(TC* ac);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1769c10(TC* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T2027c8(TC* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_internal_cursor */
extern void T2027f11(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T1215f2(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T799f216(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T1248f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T1248f285(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T1120f16(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T1248f285p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T1248f72(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T1251f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T1251f289(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T1251f289p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T1251f74(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T1249f206(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T1249f215(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T1249f215p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T1249f58(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T1210f204(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T1210f212(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T1210f212p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T1210f220(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T1210f48(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.reset */
extern void T799f212(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T1216f37(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T1216f47(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T1216f46(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T1216f45(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T1216f44(TC* ac, T0* C);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1755f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1755f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T1216f42(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1758f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_after */
extern void T1758f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T799f210(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T1210c203(TC* ac);
/* XM_EIFFEL_SCANNER.reset */
extern void T1210f211(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T1210f211p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T1210f211p0(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T1210f210(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T1210f219(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T1210f219p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T1210f227(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T1210f197(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T1210f200(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T1210f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T1210f282(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T1210s202(TC* ac);
/* XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T1210f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T1210f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T1210f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T1210f196(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T1210f195(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T1210f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T1210f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T1210f194(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T1210f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T1210f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T1210f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T1210f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T1210f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T1210f193(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T1210f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T1210f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T1210f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T1210f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T1210f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T1210f192(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T1210f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T1210f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T1210f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T1210f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T1210f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T1210f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T1210f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T1210f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T1210f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T1210f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T1210f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T1210f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T1210f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T1210f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T1210f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T1210f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T1210f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T1210f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T1210f191(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T1210f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T1210f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T1210f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T1210f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T1210f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T1210f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T1210f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T1210f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T1210f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T1210f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T1210f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T1210f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T1210f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T1210f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T1210f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T1210f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T1210f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T1210f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T1210f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T1210f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T1210f45(TC* ac, T0* C);
/* DS_CELL [detachable ET_ECF_SYSTEM].make */
extern T0* T785c2(TC* ac, T0* a1);
/* GEC.target_name */
extern T0* T26f42(TC* ac, T0* C);
/* AP_STRING_OPTION.parameter */
extern T0* T54f15(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_override_variables */
extern void T85f219(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_override_capabilities */
extern void T85f218(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_override_settings */
extern void T85f217(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make */
extern T0* T85c216(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T85f221(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T799f207(TC* ac, T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T800c10(TC* ac);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T800f9(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T813f8(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T1252f42(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T803f14(TC* ac, T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T1253f4(TC* ac, T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T803c10(TC* ac);
/* XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T803f12(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T803f8(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T1215c1(TC* ac);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T800f7(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T813c5(TC* ac);
/* XM_STOP_ON_ERROR_FILTER.make_next */
extern void T813f6(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.initialize */
extern void T813f7(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T813f4(TC* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T800f6(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T1252c27(TC* ac);
/* XM_NAMESPACE_RESOLVER.make_next */
extern void T1252f38(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T1252f13(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T799f206(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T799c205(TC* ac);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T799f85(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T1216f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T1216c36(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T1216f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T1216f53(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T1216f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_internal_cursor */
extern void T1216f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T1216f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1758c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T1216f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T1216f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T1216f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T1216f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1759s2(TC* ac, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1755c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1759c3(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T1216f30(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T799f211(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T799f215(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern T0* T799f121(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T799f178(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T799f285(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T799f286(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PARSER.integer_array_ */
extern T0* T799s204(TC* ac);
/* XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T799f284(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T799f283(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T799f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern T0* T799f119(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytable_template_4 */
extern void T799f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_3 */
extern void T799f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_2 */
extern void T799f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_1 */
extern void T799f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern T0* T799f117(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern T0* T799f115(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template_3 */
extern void T799f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_2 */
extern void T799f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_1 */
extern void T799f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern T0* T799f113(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern T0* T799f105(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T799f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T799f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T799f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern T0* T799f98(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern T0* T799f93(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T799f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T799f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T799f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template */
extern T0* T799f89(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T799f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T799f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern T0* T799f87(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T799f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T799f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T799f214(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T1243s1(TC* ac, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].make_empty */
extern T0* T1245c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T1243c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T1239s1(TC* ac, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make_empty */
extern T0* T1241c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T1239c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1236s1(TC* ac, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T1238c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T1236c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T1233s1(TC* ac, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T1235c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T1233c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1230s1(TC* ac, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T1232c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T1230c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T1227s1(TC* ac, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T1229c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T1227c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T1224s1(TC* ac, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T1226c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T1224c3(TC* ac);
/* XM_EIFFEL_PARSER.initialize */
extern void T799f209(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T799f86(TC* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T1220c1(TC* ac);
/* XM_EIFFEL_PARSER.null_callbacks */
extern T0* T799f84(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_key_equality_tester */
extern void T797f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_map */
extern T0* T797c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_with_equality_testers */
extern void T797f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_sparse_container */
extern void T797f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_internal_cursor */
extern void T797f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_cursor */
extern T0* T797f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make */
extern T0* T1208c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_slots */
extern void T797f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_clashes */
extern void T797f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_key_storage */
extern void T797f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_item_storage */
extern void T797f57(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T1209s2(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T1205c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T1209c3(TC* ac);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_key_equality_tester */
extern void T795f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_map */
extern T0* T795c40(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_with_equality_testers */
extern void T795f47(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_sparse_container */
extern void T795f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_internal_cursor */
extern void T795f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_cursor */
extern T0* T795f37(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].make */
extern T0* T1200c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_slots */
extern void T795f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_clashes */
extern void T795f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_key_storage */
extern void T795f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_item_storage */
extern void T795f69(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].make */
extern T0* T1204s2(TC* ac, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].make_empty */
extern T0* T1201c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].default_create */
extern T0* T1204c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T85f221p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T85s15(TC* ac);
/* ET_ECF_AST_FACTORY.make */
extern T0* T784c56(TC* ac);
/* ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T86c10(TC* ac);
/* ET_ECF_ERROR_HANDLER.std */
extern T0* T86s7(TC* ac);
/* ET_ECF_ERROR_HANDLER.make_null */
extern T0* T86c9(TC* ac);
/* ET_ECF_ERROR_HANDLER.null_output_stream */
extern T0* T86s6(TC* ac);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T49f2(TC* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.expanded_string */
extern T0* T49f5(TC* ac, T0* C, T0* a1, T1 a2);
/* GEC.execution_environment */
extern T0* T26s62(TC* ac);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T152s3(TC* ac, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T151s3(TC* ac, T0* a1, T0* a2);
/* GEC.report_cannot_read_error */
extern void T26f79(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.close */
extern void T43f63(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T43f65(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T43s28(TC* ac);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T43s70(TC* ac, T14 a1);
/* GEC.parse_eiffel_file */
extern void T26f78(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature GEC.parse_eiffel_file */
extern T0* T26f78ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature GEC.parse_eiffel_file */
extern T0* T26f78ac2(TC* ac);
/* ET_SYSTEM.classes_do_if_recursive */
extern void T50f140(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_SYSTEM.classes_do_if_recursive */
extern T0* T50f140ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.universes_do_recursive */
extern void T50f146(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.add_universe_recursive */
extern void T50f189(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.add_universe_recursive */
extern T0* T50f189ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.add_universe_recursive */
extern T0* T50f189ac2(TC* ac, T0* a1);
/* ET_SYSTEM.initial_universes_capacity */
extern T6 T50f128(TC* ac, T0* C);
/* ET_CLUSTER.make */
extern T0* T67c40(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T67f41(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_ast_factory */
extern void T66f49(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ast_factory_only */
extern void T66f53(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T43f30(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T43f21(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T43f62(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T43f67(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T43f67p1(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T43s31(TC* ac, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T43f24(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.make */
extern void T43f61(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T43c61(TC* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern void T43f61p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T43f66(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make_with_name */
extern void T43f66p1(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T152s2(TC* ac, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T151s2(TC* ac, T0* a1, T0* a2);
/* GEC.file_system */
extern T0* T26s44(TC* ac);
/* GEC.unix_file_system */
extern T0* T26s71(TC* ac);
/* GEC.windows_file_system */
extern T0* T26s70(TC* ac);
/* AP_FLAG.was_found */
extern T1 T46f9(TC* ac, T0* C);
/* GEC.parse_arguments */
extern void T26f77(TC* ac, T0* C, T0* a1);
/* GEC.set_new_instance_types */
extern void T26f89(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].force */
extern void T99f39(TC* ac, T0* C, T0* a1);
/* GEC.set_split_size */
extern void T26f88(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.set_override_variables */
extern void T26f87(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].forth */
extern void T220f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_forth */
extern void T219f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_position */
extern void T220f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].add_traversing_cursor */
extern void T219f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_next_cursor */
extern void T220f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable STRING_8].remove_traversing_cursor */
extern void T219f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].item */
extern T0* T220f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_item */
extern T0* T219f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].after */
extern T1 T220f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].new_iterator */
extern T0* T219f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].start */
extern void T220f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_start */
extern void T219f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_after */
extern void T220f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].off */
extern T1 T220f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].before */
extern T1 T220f8(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T49s19(TC* ac, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.put */
extern void T105f11(TC* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T105s6(TC* ac, T14 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].force */
extern void T910f35(TC* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [NATIVE_STRING].force */
extern void T1351f5(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATIVE_STRING].extend */
extern void T1351f7(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].position */
extern T6 T910f22(TC* ac, T0* C);
/* SPECIAL [IMMUTABLE_STRING_32].force */
extern void T1074f5(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].force */
extern void T155f6(TC* ac, T0* C, T1 a1, T6 a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].deleted_position */
extern T6 T910f21(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].add_space */
extern void T910f37(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].accommodate */
extern void T910f38(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_indexes_map */
extern void T910f42(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_deleted_marks */
extern void T910f41(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_keys */
extern void T910f40(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_content */
extern void T910f39(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].put */
extern void T910f43(TC* ac, T0* C, T0* a1, T0* a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_conflict */
extern void T910f45(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].found */
extern T1 T910f31(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].occupied */
extern T1 T910f29(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T910f28(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].compare_objects */
extern void T910f44(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].make */
extern T0* T910c34(TC* ac, T6 a1);
/* SPECIAL [NATIVE_STRING].make_empty */
extern T0* T1351c4(TC* ac, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].soon_full */
extern T1 T910f20(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].not_found */
extern T1 T910f19(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].internal_search */
extern void T910f36(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].same_keys */
extern T1 T910f26(TC* ac, T0* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.is_equal */
extern T1 T20f11(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].hash_code_of */
extern T6 T910f25(TC* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.hash_code */
extern T6 T20f10(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T20c13(TC* ac, T0* a1);
extern T1 T20f13ot1(TC* ac, T0* a1);
extern T1 T20f13ot2(TC* ac, T0* a1);
/* STRING_32.to_string_32 */
extern T0* T18f11(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_32 */
extern void T20f15(TC* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_string_8 */
extern void T20f14(TC* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.environ */
extern T0* T105f4(TC* ac, T0* C);
/* GEC.set_override_capabilities */
extern void T26f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.set_primary_use_values_from_definitions */
extern void T91f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.set_primary_use_value_from_definition */
extern void T91f15(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_iterator */
extern T0* T221f12(TC* ac, T0* C);
/* GEC.set_override_settings */
extern void T26f85(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SETTINGS.set_primary_values_from_definitions */
extern void T90f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.set_primary_value_from_definition */
extern void T90f10(TC* ac, T0* C, T0* a1);
/* GEC.set_ise_version */
extern void T26f84(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.report_usage_message */
extern void T26f83(TC* ac, T0* C, T0* a1);
/* GEC.report_version_number */
extern void T26f82(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.force_last */
extern void T53f14(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [AP_OPTION].put_right */
extern void T217f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [AP_OPTION].make */
extern T0* T217c3(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T58f28(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T58f27(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T58c26(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T58f30(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T58f29(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T58f29p1(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T58f29p0(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T57f28(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T57f27(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T57f32(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T221f22(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T221f11(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T221f8(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T221f10(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T221f7(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T221f13(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T221f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T221f21(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T57f26(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T57c25(TC* ac, T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T57f30(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T57f29(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T221f20(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T57s14(TC* ac);
/* AP_ENUMERATION_OPTION.initialize */
extern void T57f29p1(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T57f29p0(TC* ac, T0* C);
/* AP_STRING_OPTION.set_default_parameter */
extern void T54f27(TC* ac, T0* C, T0* a1);
/* UT_VERSION.out */
extern T0* T56f10(TC* ac, T0* C);
/* GEC.ise_latest */
extern T0* T26s39(TC* ac);
/* AP_FLAG.make_with_long_form */
extern T0* T46c17(TC* ac, T0* a1);
/* AP_STRING_OPTION.set_parameter_description */
extern void T54f26(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.set_description */
extern void T54f25(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.make_with_long_form */
extern T0* T54c24(TC* ac, T0* a1);
/* AP_STRING_OPTION.set_long_form */
extern void T54f29(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.initialize */
extern void T54f28(TC* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T54f28p1(TC* ac, T0* C);
/* UT_ISE_VARIABLES.set_ise_variables */
extern void T45s18(TC* ac);
/* UT_ISE_VARIABLES.set_ise_c_compiler_variable */
extern void T45s22(TC* ac);
/* UT_ISE_VARIABLES.string_ */
extern T0* T45s11(TC* ac);
/* UT_ISE_VARIABLES.file_system */
extern T0* T45s10(TC* ac);
/* UT_ISE_VARIABLES.unix_file_system */
extern T0* T45s16(TC* ac);
/* UT_ISE_VARIABLES.windows_file_system */
extern T0* T45s15(TC* ac);
/* UT_ISE_VARIABLES.operating_system */
extern T0* T45s14(TC* ac);
/* UT_ISE_VARIABLES.ise_c_compiler_value */
extern T0* T45s9(TC* ac);
/* UT_ISE_VARIABLES.set_ise_platform_variable */
extern void T45s21(TC* ac);
/* UT_ISE_VARIABLES.set_eiffel_library_variable */
extern void T45s20(TC* ac);
/* UT_ISE_VARIABLES.ise_eiffel_value */
extern T0* T45s2(TC* ac);
/* UT_ISE_VARIABLES.eiffel_library_value */
extern T0* T45s5(TC* ac);
/* UT_ISE_VARIABLES.set_ise_library_variable */
extern void T45s19(TC* ac);
/* UT_ISE_VARIABLES.ise_library_value */
extern T0* T45s1(TC* ac);
/* GEC.ise_variables */
extern T0* T26s36(TC* ac);
/* UT_GOBO_VARIABLES.set_gobo_variables */
extern void T44s16(TC* ac);
/* UT_GOBO_VARIABLES.set_zig_variable */
extern void T44s20(TC* ac);
/* UT_GOBO_VARIABLES.set_boehm_gc_variable */
extern void T44s19(TC* ac);
/* UT_GOBO_VARIABLES.set_gobo_library_variable */
extern void T44s18(TC* ac);
/* UT_GOBO_VARIABLES.gobo_library_value */
extern T0* T44s11(TC* ac);
/* UT_GOBO_VARIABLES.set_gobo_variable */
extern void T44s17(TC* ac);
/* GEC.gobo_variables */
extern T0* T26s53(TC* ac);
/* KL_ARGUMENTS.set_program_name */
extern void T33f7(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T42c193(TC* ac);
/* ET_ERROR_HANDLER.make_standard */
extern void T42f193p1(TC* ac, T0* C);
/* ET_ERROR_HANDLER.std */
extern T0* T42s26(TC* ac);
/* KL_ARGUMENTS.to_array */
extern T0* T33f5(TC* ac, T0* C);
/* KL_ARGUMENTS.argument_count */
extern T6 T33s2(TC* ac);
/* GEC.arguments */
extern T0* T26s41(TC* ac);
/* KL_EXCEPTIONS.die */
extern void T36s2(TC* ac, T6 a1);
/* KL_EXCEPTIONS.exceptions_die */
extern void T36s3(TC* ac, T6 a1);
/* GEC.exceptions */
extern T0* T26s40(TC* ac);
/* KL_STDERR_FILE.put_string */
extern void T39f6(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.string_ */
extern T0* T39s2(TC* ac);
/* UTF_CONVERTER.escaped_utf_32_string_to_utf_8_string_8 */
extern T0* T40s3(TC* ac, T0* a1);
/* KL_STANDARD_FILES.error */
extern T0* T38s1(TC* ac);
/* KL_STDERR_FILE.make */
extern T0* T39c5(TC* ac);
/* GEC.std */
extern T0* T26s43(TC* ac);
/* EXCEPTIONS.exception_trace */
extern T0* T37s1(TC* ac);
/* SERIALIZATION_FAILURE.trace */
extern T0* T150f7(TC* ac, T0* C);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.trace */
extern T0* T149f7(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.trace */
extern T0* T148f7(TC* ac, T0* C);
/* MISMATCH_FAILURE.trace */
extern T0* T147f7(TC* ac, T0* C);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.trace */
extern T0* T146f7(TC* ac, T0* C);
/* VOID_ASSIGNED_TO_EXPANDED.trace */
extern T0* T145f7(TC* ac, T0* C);
/* EXTERNAL_FAILURE.trace */
extern T0* T144f7(TC* ac, T0* C);
/* CREATE_ON_DEFERRED.trace */
extern T0* T143f7(TC* ac, T0* C);
/* RESUMPTION_FAILURE.trace */
extern T0* T142f7(TC* ac, T0* C);
/* RESCUE_FAILURE.trace */
extern T0* T141f7(TC* ac, T0* C);
/* LOOP_INVARIANT_VIOLATION.trace */
extern T0* T140f7(TC* ac, T0* C);
/* VARIANT_VIOLATION.trace */
extern T0* T139f7(TC* ac, T0* C);
/* BAD_INSPECT_VALUE.trace */
extern T0* T138f7(TC* ac, T0* C);
/* CHECK_VIOLATION.trace */
extern T0* T137f7(TC* ac, T0* C);
/* FLOATING_POINT_FAILURE.trace */
extern T0* T136f7(TC* ac, T0* C);
/* POSTCONDITION_VIOLATION.trace */
extern T0* T135f7(TC* ac, T0* C);
/* PRECONDITION_VIOLATION.trace */
extern T0* T134f7(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.trace */
extern T0* T132f8(TC* ac, T0* C);
/* COM_FAILURE.trace */
extern T0* T131f13(TC* ac, T0* C);
/* OPERATING_SYSTEM_FAILURE.trace */
extern T0* T130f7(TC* ac, T0* C);
/* IO_FAILURE.trace */
extern T0* T129f9(TC* ac, T0* C);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.trace */
extern T0* T128f7(TC* ac, T0* C);
/* INVARIANT_VIOLATION.trace */
extern T0* T127f7(TC* ac, T0* C);
/* NO_MORE_MEMORY.trace */
extern T0* T126f8(TC* ac, T0* C);
/* OLD_VIOLATION.trace */
extern T0* T124f7(TC* ac, T0* C);
/* ROUTINE_FAILURE.trace */
extern T0* T122f9(TC* ac, T0* C);
/* VOID_TARGET.trace */
extern T0* T120f7(TC* ac, T0* C);
/* NO_MORE_MEMORY.original */
extern T0* T126f7(TC* ac, T0* C);
/* SERIALIZATION_FAILURE.original */
extern T0* T150f6(TC* ac, T0* C);
/* OLD_VIOLATION.original */
extern T0* T124f6(TC* ac, T0* C);
/* COM_FAILURE.original */
extern T0* T131f11(TC* ac, T0* C);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.original */
extern T0* T149f6(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.original */
extern T0* T148f6(TC* ac, T0* C);
/* MISMATCH_FAILURE.original */
extern T0* T147f6(TC* ac, T0* C);
/* OPERATING_SYSTEM_FAILURE.original */
extern T0* T130f8(TC* ac, T0* C);
/* IO_FAILURE.original */
extern T0* T129f8(TC* ac, T0* C);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.original */
extern T0* T146f6(TC* ac, T0* C);
/* VOID_ASSIGNED_TO_EXPANDED.original */
extern T0* T145f6(TC* ac, T0* C);
/* EXTERNAL_FAILURE.original */
extern T0* T144f6(TC* ac, T0* C);
/* CREATE_ON_DEFERRED.original */
extern T0* T143f6(TC* ac, T0* C);
/* RESUMPTION_FAILURE.original */
extern T0* T142f6(TC* ac, T0* C);
/* RESCUE_FAILURE.original */
extern T0* T141f6(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.original */
extern T0* T132f7(TC* ac, T0* C);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.original */
extern T0* T128f8(TC* ac, T0* C);
/* LOOP_INVARIANT_VIOLATION.original */
extern T0* T140f6(TC* ac, T0* C);
/* VARIANT_VIOLATION.original */
extern T0* T139f6(TC* ac, T0* C);
/* BAD_INSPECT_VALUE.original */
extern T0* T138f6(TC* ac, T0* C);
/* ROUTINE_FAILURE.original */
extern T0* T122f8(TC* ac, T0* C);
/* CHECK_VIOLATION.original */
extern T0* T137f6(TC* ac, T0* C);
/* INVARIANT_VIOLATION.original */
extern T0* T127f8(TC* ac, T0* C);
/* FLOATING_POINT_FAILURE.original */
extern T0* T136f6(TC* ac, T0* C);
/* POSTCONDITION_VIOLATION.original */
extern T0* T135f6(TC* ac, T0* C);
/* PRECONDITION_VIOLATION.original */
extern T0* T134f6(TC* ac, T0* C);
/* VOID_TARGET.original */
extern T0* T120f6(TC* ac, T0* C);
/* EXCEPTIONS.exception_manager */
extern T0* T37s2(TC* ac);
/* ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T21s16(TC* ac, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* NO_MORE_MEMORY.set_type_name */
extern void T126f16(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_type_name */
extern void T150f13(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_type_name */
extern void T124f13(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_type_name */
extern void T131f21(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T149f13(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_type_name */
extern void T148f17(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_type_name */
extern void T147f13(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T130f15(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_type_name */
extern void T129f17(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T146f13(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T145f13(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_type_name */
extern void T144f13(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_type_name */
extern void T143f13(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_type_name */
extern void T142f13(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_type_name */
extern void T141f13(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T132f16(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T128f15(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T140f13(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_type_name */
extern void T139f13(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_type_name */
extern void T138f13(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_type_name */
extern void T122f17(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_type_name */
extern void T137f13(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_type_name */
extern void T127f15(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_type_name */
extern void T136f13(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_type_name */
extern void T135f13(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_type_name */
extern void T134f13(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_type_name */
extern void T120f13(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_recipient_name */
extern void T126f15(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_recipient_name */
extern void T150f12(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_recipient_name */
extern void T124f12(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_recipient_name */
extern void T131f20(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T149f12(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_recipient_name */
extern void T148f16(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_recipient_name */
extern void T147f12(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T130f14(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_recipient_name */
extern void T129f16(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T146f12(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T145f12(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_recipient_name */
extern void T144f12(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_recipient_name */
extern void T143f12(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_recipient_name */
extern void T142f12(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_recipient_name */
extern void T141f12(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T132f15(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T128f14(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T140f12(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_recipient_name */
extern void T139f12(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_recipient_name */
extern void T138f12(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_recipient_name */
extern void T122f16(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_recipient_name */
extern void T137f12(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_recipient_name */
extern void T127f14(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_recipient_name */
extern void T136f12(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_recipient_name */
extern void T135f12(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_recipient_name */
extern void T134f12(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_recipient_name */
extern void T120f12(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_exception_trace */
extern void T126f11(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_exception_trace */
extern void T150f10(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_exception_trace */
extern void T124f10(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_trace */
extern void T131f18(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T149f10(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_exception_trace */
extern void T148f14(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_exception_trace */
extern void T147f10(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T130f12(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_exception_trace */
extern void T129f14(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T146f10(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T145f10(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_exception_trace */
extern void T144f10(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_exception_trace */
extern void T143f10(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_exception_trace */
extern void T142f10(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_exception_trace */
extern void T141f10(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T132f13(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T128f12(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T140f10(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_exception_trace */
extern void T139f10(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_exception_trace */
extern void T138f10(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_exception_trace */
extern void T122f14(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_exception_trace */
extern void T137f10(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_exception_trace */
extern void T127f12(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_exception_trace */
extern void T136f10(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_exception_trace */
extern void T135f10(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_exception_trace */
extern void T134f10(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_exception_trace */
extern void T120f10(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T21s10(TC* ac);
extern T1 T21s10ot1(TC* ac, T0* a1);
extern T1 T21s10ot2(TC* ac, T0* a1);
extern T1 T21s10ot3(TC* ac, T0* a1);
extern T1 T21s10ot4(TC* ac, T0* a1);
extern T1 T21s10ot5(TC* ac, T0* a1);
extern T1 T21s10ot6(TC* ac, T0* a1);
extern T1 T21s10ot7(TC* ac, T0* a1);
/* NO_MORE_MEMORY.set_description */
extern void T126f14(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_description */
extern void T150f11(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_description */
extern void T124f11(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_description */
extern void T131f19(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T149f11(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_description */
extern void T147f11(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_description */
extern void T130f13(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_description */
extern void T129f15(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T146f11(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T145f11(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_description */
extern void T144f11(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_description */
extern void T143f11(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_description */
extern void T142f11(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_description */
extern void T141f11(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_description */
extern void T132f14(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T128f13(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_description */
extern void T140f11(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_description */
extern void T139f11(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_description */
extern void T138f11(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_description */
extern void T122f15(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_description */
extern void T137f11(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_description */
extern void T127f13(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_description */
extern void T136f11(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_description */
extern void T135f11(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_description */
extern void T134f11(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_description */
extern void T120f11(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_information */
extern void T131f17(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.ccom_hresult_to_string */
extern T0* T131f12(TC* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f32(TC* ac, T6 volatile* C);
/* INTEGER_32.to_hex_character */
extern T2 T6f33(TC* ac, T6 volatile* C);
/* COM_FAILURE.set_hresult_code */
extern void T131f16(TC* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T130f11(TC* ac, T0* C, T6 a1);
/* IO_FAILURE.set_error_code */
extern void T129f13(TC* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T128f11(TC* ac, T0* C, T6 a1);
/* INVARIANT_VIOLATION.set_is_entry */
extern void T127f11(TC* ac, T0* C, T1 a1);
/* ROUTINE_FAILURE.set_class_name */
extern void T122f12(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_routine_name */
extern void T122f11(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_throwing_exception */
extern void T126f13(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_throwing_exception */
extern void T150f9(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_throwing_exception */
extern void T124f9(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_throwing_exception */
extern void T131f15(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T149f9(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_throwing_exception */
extern void T147f9(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T130f10(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_throwing_exception */
extern void T129f12(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T146f9(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T145f9(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_throwing_exception */
extern void T144f9(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_throwing_exception */
extern void T143f9(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_throwing_exception */
extern void T142f9(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_throwing_exception */
extern void T141f9(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T132f12(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T128f10(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T140f9(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_throwing_exception */
extern void T139f9(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_throwing_exception */
extern void T138f9(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_throwing_exception */
extern void T122f13(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_throwing_exception */
extern void T137f9(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_throwing_exception */
extern void T127f10(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T136f9(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T135f9(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_throwing_exception */
extern void T134f9(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_throwing_exception */
extern void T120f9(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T21s12(TC* ac, T6 a1);
/* SERIALIZATION_FAILURE.default_create */
extern T0* T150c8(TC* ac);
/* OLD_VIOLATION.default_create */
extern T0* T124c8(TC* ac);
/* COM_FAILURE.default_create */
extern T0* T131c14(TC* ac);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T149c8(TC* ac);
/* MISMATCH_FAILURE.default_create */
extern T0* T147c8(TC* ac);
/* OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T130c9(TC* ac);
/* IO_FAILURE.set_code */
extern void T129f11(TC* ac, T0* C, T6 a1);
/* IO_FAILURE.default_create */
extern T0* T129c10(TC* ac);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T146c8(TC* ac);
/* VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T145c8(TC* ac);
/* EXTERNAL_FAILURE.default_create */
extern T0* T144c8(TC* ac);
/* CREATE_ON_DEFERRED.default_create */
extern T0* T143c8(TC* ac);
/* RESUMPTION_FAILURE.default_create */
extern T0* T142c8(TC* ac);
/* RESCUE_FAILURE.default_create */
extern T0* T141c8(TC* ac);
/* EIFFEL_RUNTIME_PANIC.set_code */
extern void T132f11(TC* ac, T0* C, T6 a1);
/* EIFFEL_RUNTIME_PANIC.code */
extern T6 T132f9(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T132c10(TC* ac);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T128c9(TC* ac);
/* LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T140c8(TC* ac);
/* VARIANT_VIOLATION.default_create */
extern T0* T139c8(TC* ac);
/* BAD_INSPECT_VALUE.default_create */
extern T0* T138c8(TC* ac);
/* ROUTINE_FAILURE.default_create */
extern T0* T122c10(TC* ac);
/* CHECK_VIOLATION.default_create */
extern T0* T137c8(TC* ac);
/* INVARIANT_VIOLATION.default_create */
extern T0* T127c9(TC* ac);
/* FLOATING_POINT_FAILURE.default_create */
extern T0* T136c8(TC* ac);
/* POSTCONDITION_VIOLATION.default_create */
extern T0* T135c8(TC* ac);
/* PRECONDITION_VIOLATION.default_create */
extern T0* T134c8(TC* ac);
/* NO_MORE_MEMORY.set_code */
extern void T126f12(TC* ac, T0* C, T6 a1);
/* NO_MORE_MEMORY.code */
extern T6 T126f9(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern T0* T21s7(TC* ac);
/* CELL [NO_MORE_MEMORY].put */
extern T0* T30c2(TC* ac, T0* a1);
/* NO_MORE_MEMORY.default_create */
extern T0* T126c10(TC* ac);
/* VOID_TARGET.default_create */
extern T0* T120c8(TC* ac);
/* ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T21s11(TC* ac);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern void T29f2(TC* ac, T0* C, T0* a1);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern T0* T29c2(TC* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_data_cell */
extern T0* T21s6(TC* ac);
/* ISE_EXCEPTION_MANAGER.once_raise */
extern void T21s15(TC* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T21s1(TC* ac);
/* ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T21s14(TC* ac);
/* CELL [NO_MORE_MEMORY].do_nothing */
extern void T30s3(TC* ac);
/* CELL [detachable EXCEPTION].do_nothing */
extern void T27s3(TC* ac);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].do_nothing */
extern void T29s3(TC* ac);
/* ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern T0* T21s5(TC* ac);
/* HASH_TABLE [INTEGER_32, INTEGER_32].force */
extern void T28f37(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].position */
extern T6 T28f22(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].deleted_position */
extern T6 T28f21(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].add_space */
extern void T28f39(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].accommodate */
extern void T28f40(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_indexes_map */
extern void T28f44(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_deleted_marks */
extern void T28f43(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_keys */
extern void T28f42(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_content */
extern void T28f41(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].put */
extern void T28f45(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_conflict */
extern void T28f47(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].found */
extern T1 T28f31(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].occupied */
extern T1 T28f29(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].empty_duplicate */
extern T0* T28f28(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].compare_objects */
extern void T28f46(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].soon_full */
extern T1 T28f20(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].not_found */
extern T1 T28f19(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].internal_search */
extern void T28f38(TC* ac, T0* C, T6 a1);
/* ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern T0* T21s4(TC* ac);
/* HASH_TABLE [INTEGER_32, INTEGER_32].do_nothing */
extern void T28s36(TC* ac);
/* KL_UNIX_INPUT_FILE.dispose */
extern void T1072f32(TC* ac, T0* C);
/* KL_WINDOWS_INPUT_FILE.dispose */
extern void T1071f32(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T963f32(TC* ac, T0* C);
/* KL_DIRECTORY.dispose */
extern void T167f36(TC* ac, T0* C);
/* MANAGED_POINTER.dispose */
extern void T162f9(TC* ac, T0* C);
/* MUTEX.dispose */
extern void T159f9(TC* ac, T0* C);
/* MUTEX.destroy */
extern void T159f13(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_destroy */
extern void T159s16(TC* ac, T14 a1);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T43f60(TC* ac, T0* C);
/* Call to STRING_8.to_integer */
extern T6 T17x2228289(TC* ac, T0* C);
/* Call to STRING_8.is_integer */
extern T1 T17x2228255(TC* ac, T0* C);
/* Call to STRING_8.is_empty */
extern T1 T17x2228241(TC* ac, T0* C);
/* Call to STRING_8.as_lower */
extern T0* T17x2228285(TC* ac, T0* C);
/* Call to STRING_8.item */
extern T2 T17x2572289T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.count */
extern T6 T17x2228263(TC* ac, T0* C);
/* Call to STRING_8.hash_code */
extern T6 T17x655361(TC* ac, T0* C);
/* Call to STRING_8.has */
extern T1 T17x2211867T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.alias "+" */
extern T0* T17x2211872T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.substring */
extern T0* T17x2228304T6T6(TC* ac, T0* C, T6 a1, T6 a2);
/* Call to STRING_8.starts_with */
extern T1 T17x2211868T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.code */
extern T10 T17x2228225T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.to_boolean */
extern T1 T17x2228301(TC* ac, T0* C);
/* Call to STRING_8.is_boolean */
extern T1 T17x2228252(TC* ac, T0* C);
/* Call to STRING_8.same_string */
extern T1 T17x2211860T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.has_substring */
extern T1 T17x2228268T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.twin */
extern T0* T17x229387(TC* ac, T0* C);
/* Call to STRING_8.ends_with */
extern T1 T17x2211869T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.as_upper */
extern T0* T17x2228286(TC* ac, T0* C);
/* Call to STRING_8.occurrences */
extern T6 T17x2211855T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.same_type */
extern T1 T17x229380T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.index_of */
extern T6 T17x2211845T2T6(TC* ac, T0* C, T2 a1, T6 a2);
/* Call to EXCEPTION.original */
extern T0* T22x1753096(TC* ac, T0* C);
/* Call to EXCEPTION.trace */
extern T0* T22x1753094(TC* ac, T0* C);
/* Call to ANY.same_type */
extern T1 T25x229380T0(TC* ac, T0* C, T0* a1);
/* Call to READABLE_STRING_GENERAL.item */
extern T3 T41x2228226T6(TC* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.count */
extern T6 T41x2228263(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.code */
extern T10 T41x2228225T6(TC* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.is_empty */
extern T1 T41x2228241(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.as_string_8 */
extern T0* T41x2228280(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring_index */
extern T6 T41x2228274T0T6(TC* ac, T0* C, T0* a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.as_string_32 */
extern T0* T41x2228283(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.to_string_32 */
extern T0* T41x2228284(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring */
extern T0* T41x2228304T6T6(TC* ac, T0* C, T6 a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.same_string */
extern T1 T41x2228269T0(TC* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T51x6193159(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T51x6078465T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T51x6193157(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T51x6193160(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T51x6193154(TC* ac, T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T61x5586952(TC* ac, T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T61x5586947(TC* ac, T0* C);
/* Call to AP_OPTION.description */
extern T0* T61x5586945(TC* ac, T0* C);
/* Call to AP_OPTION.names */
extern T0* T61x5586949(TC* ac, T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T61x5586955(TC* ac, T0* C);
/* Call to AP_OPTION.name */
extern T0* T61x5586948(TC* ac, T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T61x5586958(TC* ac, T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T61x5586954(TC* ac, T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T61x5586957(TC* ac, T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T61x5586951(TC* ac, T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T61x5586950(TC* ac, T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T61x5586961(TC* ac, T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T61x5586956(TC* ac, T0* C);
/* Call to AP_OPTION.example */
extern T0* T61x5586946(TC* ac, T0* C);
/* Call to ET_UNIVERSE.adapted_universe */
extern T0* T72x19677202T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.full_lower_name */
extern T0* T72x19677207T2(TC* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.kind_name */
extern T0* T72x19677209(TC* ac, T0* C);
/* Call to ET_UNIVERSE.master_class */
extern T0* T72x19677191T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.hash_code */
extern T6 T72x655361(TC* ac, T0* C);
/* Call to ET_UNIVERSE.has_master_class */
extern T1 T72x19677185T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.any_clients */
extern T0* T72x19677220(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_convert_feature */
extern T0* T72x19677284(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_type */
extern T0* T72x19677228(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_convert_feature */
extern T0* T72x19677283(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_type */
extern T0* T72x19677227(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_convert_feature */
extern T0* T72x19677294(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_type */
extern T0* T72x19677255(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_convert_feature */
extern T0* T72x19677293(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_type */
extern T0* T72x19677254(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_convert_feature */
extern T0* T72x19677292(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_type */
extern T0* T72x19677247(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_convert_feature */
extern T0* T72x19677291(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_type */
extern T0* T72x19677246(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_convert_feature */
extern T0* T72x19677290(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_type */
extern T0* T72x19677245(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_convert_feature */
extern T0* T72x19677289(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_type */
extern T0* T72x19677244(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_convert_feature */
extern T0* T72x19677288(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_type */
extern T0* T72x19677240(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_convert_feature */
extern T0* T72x19677287(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_type */
extern T0* T72x19677239(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_convert_feature */
extern T0* T72x19677286(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_type */
extern T0* T72x19677238(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_convert_feature */
extern T0* T72x19677285(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_type */
extern T0* T72x19677237(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_convert_feature */
extern T0* T72x19677296(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_type */
extern T0* T72x19677264(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_convert_feature */
extern T0* T72x19677295(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_type */
extern T0* T72x19677262(TC* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_type */
extern T0* T72x19677268(TC* ac, T0* C);
/* Call to ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T72x19677271(TC* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T72x19677281(TC* ac, T0* C);
/* Call to ET_UNIVERSE.boolean_type */
extern T0* T72x19677225(TC* ac, T0* C);
/* Call to ET_UNIVERSE.shortest_path */
extern T0* T72x19677203T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.detachable_separate_any_type */
extern T0* T72x19677217(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T72x19677260(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T72x19677236(TC* ac, T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T72x19677229(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T72x19677253(TC* ac, T0* C);
/* Call to ET_UNIVERSE.pointer_type */
extern T0* T72x19677250(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_any_type */
extern T0* T72x19677216(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_string_8_type */
extern T0* T72x19677263(TC* ac, T0* C);
/* Call to ET_UNIVERSE.any_type */
extern T0* T72x19677215(TC* ac, T0* C);
/* Call to ET_UNIVERSE.special_any_type */
extern T0* T72x19677257(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_any_type */
extern T0* T72x19677272(TC* ac, T0* C);
/* Call to ET_UNIVERSE.special_detachable_any_type */
extern T0* T72x19677258(TC* ac, T0* C);
/* Call to ET_UNIVERSE.exception_manager_type */
extern T0* T72x19677232(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_exception_type */
extern T0* T72x19677274(TC* ac, T0* C);
/* Call to ET_UNIVERSE.exception_type */
extern T0* T72x19677230(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_exception_type */
extern T0* T72x19677273(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_exception_type */
extern T0* T72x19677231(TC* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_32_type */
extern T0* T72x19677235(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T72x19677275(TC* ac, T0* C);
/* Call to ET_UNIVERSE.function_identity_any_type */
extern T0* T72x19677233(TC* ac, T0* C);
/* Call to ET_UNIVERSE.predicate_identity_type */
extern T0* T72x19677251(TC* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_identity_type */
extern T0* T72x19677270(TC* ac, T0* C);
/* Call to ET_UNIVERSE.procedure_identity_type */
extern T0* T72x19677252(TC* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_8_type */
extern T0* T72x19677234(TC* ac, T0* C);
/* Call to ET_UNIVERSE.iterable_detachable_separate_any_type */
extern T0* T72x19677242(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_type */
extern T0* T72x19677226(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_identity_type */
extern T0* T72x19677276(TC* ac, T0* C);
/* Call to ET_UNIVERSE.typed_pointer_identity_type */
extern T0* T72x19677277(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_string_type */
extern T0* T72x19677267(TC* ac, T0* C);
/* Call to ET_UNIVERSE.full_name */
extern T0* T72x19677206T2(TC* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.classes_in_group */
extern T0* T72x19677196T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.any_parents */
extern T0* T72x19677219(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_parents */
extern T0* T72x19677266(TC* ac, T0* C);
/* Call to ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T72x19677279(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_type */
extern T0* T72x19677265(TC* ac, T0* C);
/* Call to ET_UNIVERSE.current_system */
extern T0* T72x19677201(TC* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_iteration_mode */
extern T1 T72x19677280(TC* ac, T0* C);
/* Call to ET_UNIVERSE.use_obsolete_syntax_mode */
extern T1 T72x19677282(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T73x19529749T0T2(TC* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_PRIMARY_GROUP.kind_name */
extern T0* T73x19529755(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_hidden */
extern T1 T73x19529738(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.full_lower_name */
extern T0* T73x19529751T2(TC* ac, T0* C, T2 a1);
/* Call to ET_PRIMARY_GROUP.is_cluster */
extern T1 T73x19529731(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T73x19529770(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.cluster */
extern T0* T73x19529768(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T73x19529733(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_unknown */
extern T1 T73x19529735(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_none */
extern T1 T73x19529734(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.universe */
extern T0* T73x19529744(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_override */
extern T1 T73x19529736(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.current_system */
extern T0* T73x19529745(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T73x19529739(TC* ac, T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T84x11878403(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.index_of_label */
extern T6 T101x22249481T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T101x22822915(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_type_non_separate */
extern T1 T101x15482886T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T101x15482889T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.is_type_attached */
extern T1 T101x15482885T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_type_expanded */
extern T1 T101x15482884T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T101x22790227(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_type_non_separate_with_type_mark */
extern T1 T101x22790174T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T101x22790155T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T101x22675458(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T101x22675457(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T101x22790180T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T101x22790178T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T101x22790218T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T101x22790210T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T101x22822918T6(TC* ac, T0* C, T6 a1);
/* Call to ET_BASE_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T101x22822917T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T101x22790157T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T101x22790194T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T101x22249488(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_attached */
extern T1 T101x22249489(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.type_with_type_mark */
extern T0* T101x22790165T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T101x22249476(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_controlled */
extern T1 T101x22790185(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T101x22790150T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.adapted_base_class_with_named_feature */
extern T0* T101x22790149T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T101x22249484(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.named_base_class */
extern T0* T101x22822916(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T101x22790154T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T101x22790161T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T101x22790200T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.canonical_to_text */
extern T0* T101x22790229(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T101x22790182T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_separate_with_type_mark */
extern T1 T101x22790172T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T101x22790176T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T101x22790219T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T101x22790217T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.base_type_actual_count */
extern T6 T101x22790167T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T101x22790152T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T101x22790211T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T101x22790209T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T101x22790159T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type */
extern T1 T101x22790199T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_as_base_class */
extern T1 T101x22249498(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.runtime_name_to_text */
extern T0* T101x22790230(TC* ac, T0* C);
/* Call to READABLE_STRING_8.area */
extern T0* T104x2211878(TC* ac, T0* C);
/* Call to READABLE_STRING_8.count */
extern T6 T104x2228263(TC* ac, T0* C);
/* Call to READABLE_STRING_8.area_lower */
extern T6 T104x2211879(TC* ac, T0* C);
/* Call to READABLE_STRING_8.to_string_8 */
extern T0* T104x2228277(TC* ac, T0* C);
/* Call to STRING_GENERAL.item */
extern T3 T169x2228226T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.count */
extern T6 T169x2228263(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.first_leaf */
extern T0* T176x20791300(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_implicit_mark */
extern T1 T176x21217300(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_detachable_mark */
extern T1 T176x21217284(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attached_mark */
extern T1 T176x21217283(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attachment_mark */
extern T1 T176x21217281(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separate_mark */
extern T1 T176x21217291(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_non_separate_mark */
extern T1 T176x21217292(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.position */
extern T0* T176x20791297(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_reference_mark */
extern T1 T176x21217297(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expanded_mark */
extern T1 T176x21217296(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.overridden_type_mark */
extern T0* T176x21217301T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.is_explicit_attachment_mark */
extern T1 T176x21217282(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separateness_mark */
extern T1 T176x21217289(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expandedness_mark */
extern T1 T176x21217294(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.type */
extern T0* T185x22167555T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T185x22167554T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.folded_actual_parameters */
extern T0* T185x22167558(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.count */
extern T6 T185x22167553(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T185x20791301(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T185x22167572T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T185x22167567T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T185x22167559(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T185x22167562(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T185x22167557T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T185x22167566T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T185x22167563T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T185x22167564T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T185x22167561(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T185x22167568T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T185x22167569T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_ACTUAL_PARAMETERS.named_types */
extern T0* T185x22167556T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T201x22200325T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T201x22200322(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.is_last_entity */
extern T1 T201x22200324(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.label */
extern T0* T201x22200323(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T201x22200321(TC* ac, T0* C);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T203x15482888T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.named_type */
extern T0* T203x22790158T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T203x22790220T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T203x22790197T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.has_identifier_anchored_type */
extern T1 T203x22790188(TC* ac, T0* C);
/* Call to ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T203x22790189T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T203x22790190T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_unqualified_anchored_type */
extern T1 T203x22790187(TC* ac, T0* C);
/* Call to ET_TYPE.same_named_type */
extern T1 T203x22790199T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.to_text */
extern T0* T203x22790227(TC* ac, T0* C);
/* Call to ET_TYPE.type */
extern T0* T203x22839297(TC* ac, T0* C);
/* Call to ET_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T203x22151174T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.position */
extern T0* T203x20791297(TC* ac, T0* C);
/* Call to ET_TYPE.type_with_type_mark */
extern T0* T203x22790165T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T203x22790205T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T203x22790208T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T203x22790203T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T203x22790204T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T203x22790207T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T203x22790206T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T203x22790150T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.adapted_base_class_with_named_feature */
extern T0* T203x22790149T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T203x22790157T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T203x22790194T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.base_type_actual */
extern T0* T203x22790155T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T203x22790198T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_non_separate_with_type_mark */
extern T1 T203x22790174T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_to_constraint */
extern T1 T203x22790215T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.named_base_class */
extern T0* T203x22790148T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_attached_with_type_mark */
extern T1 T203x22790180T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_reference_with_type_mark */
extern T1 T203x22790178T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T203x22790218T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T203x22790210T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_class */
extern T0* T203x22790147T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_reference */
extern T1 T203x22790177T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T203x15482884T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_named_type_with_type_marks */
extern T1 T203x22790200T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T203x22790154T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T203x22790161T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_controlled */
extern T1 T203x22790185(TC* ac, T0* C);
/* Call to ET_TYPE.base_type_with_type_mark */
extern T0* T203x22790152T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.named_type_with_type_mark */
extern T0* T203x22790159T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T203x22790182T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_separate_with_type_mark */
extern T1 T203x22790172T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T203x22790176T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T203x22790219T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T203x22790217T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T203x22790167T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T203x15482889T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T203x22790211T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T203x22790209T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_named_type */
extern T1 T203x15482883(TC* ac, T0* C);
/* Call to ET_TYPE.is_base_type */
extern T1 T203x22790170(TC* ac, T0* C);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T203x22790153T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_detachable */
extern T1 T203x22790181T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T203x22790160T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_like_current */
extern T1 T203x22790168(TC* ac, T0* C);
/* Call to ET_TYPE.is_type_attached */
extern T1 T203x15482885T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_separate */
extern T1 T203x22790171T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_non_separate */
extern T1 T203x15482886T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_self_initializing */
extern T1 T203x22790183T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type_mark */
extern T0* T203x22790145(TC* ac, T0* C);
/* Call to KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T223x7602177T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYMBOL.break */
extern T0* T286x20791302(TC* ac, T0* C);
/* Call to ET_SYMBOL.text */
extern T0* T286x20873218(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_left_bracket */
extern T1 T286x21119003(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_left_parenthesis */
extern T1 T286x21119004(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_left_brace */
extern T1 T286x21119002(TC* ac, T0* C);
/* Call to ET_SYMBOL.position */
extern T0* T286x20791297(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_equal_symbol */
extern T1 T286x21118995(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_not_tilde */
extern T1 T286x21119010(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_not_equal */
extern T1 T286x21119009(TC* ac, T0* C);
/* Call to ET_SYMBOL.column */
extern T6 T286x21004290(TC* ac, T0* C);
/* Call to ET_SYMBOL.line */
extern T6 T286x21004289(TC* ac, T0* C);
/* Call to ET_POSITION.column */
extern T6 T289x21004290(TC* ac, T0* C);
/* Call to ET_POSITION.line */
extern T6 T289x21004289(TC* ac, T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T289x21004295(TC* ac, T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T289x21004291(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T3 T298x16400390(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value_position */
extern T0* T298x16400395(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T298x16400391(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.is_character_32 */
extern T1 T298x16400386(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.is_character_8 */
extern T1 T298x16400385(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T298x17612808(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.break */
extern T0* T310x20791302(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T310x16482305(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T310x16482315(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.cast_type */
extern T0* T310x16482316(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value_position */
extern T0* T310x16482320(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T310x16482323(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T11 T310x16482306(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T310x16482309(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T310x16482335(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_binary */
extern T1 T310x16482326(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T310x16482325(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T310x16482331(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T310x16482330(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T310x16482334(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T310x16482333(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T310x16482332(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T310x16482329(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T310x16482328(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T310x17612808(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T316x20791297(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T316x16498694(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value_position */
extern T0* T316x16498699(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T316x16498696(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.is_string_32 */
extern T1 T316x16498690(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.is_string_8 */
extern T1 T316x16498689(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T316x17612808(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_instance_free */
extern T1 T356x17612802(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_typed_object_test */
extern T1 T356x17612807(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_address_expression */
extern T1 T356x17612805(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_result */
extern T1 T356x17612804(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T356x17612801(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T356x17612808(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T359x14647297(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_instance_free */
extern T1 T365x17612802(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_typed_object_test */
extern T1 T365x17612807(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_address_expression */
extern T1 T365x17612805(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_result */
extern T1 T365x17612804(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T365x20791297(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T365x17612801(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T365x17612808(TC* ac, T0* C);
/* Call to ET_CHOICE.has_typed_object_test */
extern T1 T389x19873797(TC* ac, T0* C);
/* Call to ET_CHOICE.has_agent */
extern T1 T389x19873796(TC* ac, T0* C);
/* Call to ET_CHOICE.has_address_expression */
extern T1 T389x19873795(TC* ac, T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T389x19873798(TC* ac, T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T389x19873799(TC* ac, T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T389x19873793(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T392x20791297(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_typed_object_test */
extern T1 T392x19873797(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_agent */
extern T1 T392x19873796(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_address_expression */
extern T1 T392x19873795(TC* ac, T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T395x19922945(TC* ac, T0* C);
/* Call to ET_CHOICE_ITEM.position */
extern T0* T395x20791297(TC* ac, T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T410x16908289(TC* ac, T0* C);
/* Call to ET_CONDITIONAL.first_leaf */
extern T0* T410x20791300(TC* ac, T0* C);
/* Call to ET_CONDITIONAL.position */
extern T0* T410x20791297(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T413x16416771(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T413x16416770(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T413x16416769(TC* ac, T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T413x17612808(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T416x22380548T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T416x22380546(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T416x22380547(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T428x22495234T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T431x15548419(TC* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T431x15548418(TC* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T431x15548417(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T470x16793604(TC* ac, T0* C);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T470x20791301(TC* ac, T0* C);
/* Call to ET_EXPRESSION.first_leaf */
extern T0* T470x20791300(TC* ac, T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T470x20791297(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_typed_object_test */
extern T1 T470x16793608(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_agent */
extern T1 T470x16793607(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_address_expression */
extern T1 T470x16793606(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_result */
extern T1 T470x16793605(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_prefix_expression */
extern T1 T470x17154055(TC* ac, T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T470x17612808(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_false */
extern T1 T470x17154053(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_true */
extern T1 T470x17154054(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T470x17612802(TC* ac, T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T470x17154061T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.unparenthesized_expression */
extern T0* T470x17154051(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T470x17612803(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_never_void */
extern T1 T470x17154052(TC* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T473x17219585(TC* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T473x20791297(TC* ac, T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T479x18317313(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.position */
extern T0* T519x20791297(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T519x14581764(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T519x18006025(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T519x18006023(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.result_index */
extern T6 T519x14893057(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T519x14581763(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T519x14581762(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.attached_result_index */
extern T6 T519x14893058(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T519x18006022(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.first_leaf */
extern T0* T540x20791300(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.last_leaf */
extern T0* T540x20791301(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.is_semicolon */
extern T1 T540x20299777(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.position */
extern T0* T540x20791297(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_inline_separate_instruction */
extern T1 T540x20299782(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_typed_object_test */
extern T1 T540x20299781(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_agent */
extern T1 T540x20299780(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_address_expression */
extern T1 T540x20299779(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.nested_instruction_count */
extern T6 T540x20299783(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.to_text */
extern T0* T548x22790227(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T548x20791297(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T548x22790220T0(TC* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.has_formal_types */
extern T1 T548x22790190T0(TC* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.has_unqualified_anchored_type */
extern T1 T548x22790187(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T548x22659073(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T566x17481729(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING_ITEM.position */
extern T0* T566x20791297(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.note_term_value */
extern T0* T581x15974402(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.position */
extern T0* T581x20791297(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.has_note_term_value */
extern T1 T581x15974403T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NOTE_TERM_ITEM.note_term */
extern T0* T584x15974401(TC* ac, T0* C);
/* Call to ET_NOTE_TERM_ITEM.position */
extern T0* T584x20791297(TC* ac, T0* C);
/* Call to ET_NOTE_TERM_ITEM.has_note_term_value */
extern T1 T584x15974403T0(TC* ac, T0* C, T0* a1);
/* Call to ET_OBSOLETE.manifest_string */
extern T0* T590x16023553(TC* ac, T0* C);
/* Call to ET_PROCEDURE.synonym */
extern T0* T611x18415636(TC* ac, T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T611x18497544(TC* ac, T0* C);
/* Call to ET_PROCEDURE.feature_clause */
extern T0* T611x18415634(TC* ac, T0* C);
/* Call to ET_PROCEDURE.position */
extern T0* T611x20791297(TC* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_names */
extern T0* T611x18415623(TC* ac, T0* C);
/* Call to ET_PROCEDURE.alias_names */
extern T0* T611x18415619(TC* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T611x18415622(TC* ac, T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T611x655361(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T611x18415664T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T611x18497547(TC* ac, T0* C);
/* Call to ET_PROCEDURE.lower_name */
extern T0* T611x19152909(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_static */
extern T1 T611x18006021(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T611x18415662T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T611x18006032(TC* ac, T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T611x18497546(TC* ac, T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T611x18497542T6(TC* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.implementation_class */
extern T0* T611x19152911(TC* ac, T0* C);
/* Call to ET_PROCEDURE.postconditions */
extern T0* T611x18006027(TC* ac, T0* C);
/* Call to ET_PROCEDURE.preconditions */
extern T0* T611x18006026(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_parenthesisable */
extern T1 T611x18415654(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T611x18415643(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T611x18415644(TC* ac, T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T611x18415668T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.synonym */
extern T0* T620x18415636(TC* ac, T0* C);
/* Call to ET_QUERY.name */
extern T0* T620x18497544(TC* ac, T0* C);
/* Call to ET_QUERY.feature_clause */
extern T0* T620x18415634(TC* ac, T0* C);
/* Call to ET_QUERY.position */
extern T0* T620x20791297(TC* ac, T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T620x19152903(TC* ac, T0* C);
/* Call to ET_QUERY.overloaded_alias_names */
extern T0* T620x18415623(TC* ac, T0* C);
/* Call to ET_QUERY.alias_names */
extern T0* T620x18415619(TC* ac, T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T620x18415622(TC* ac, T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T620x655361(TC* ac, T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T620x18497542T6(TC* ac, T0* C, T6 a1);
/* Call to ET_QUERY.type */
extern T0* T620x18497545(TC* ac, T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T620x18415662T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.first_seed */
extern T6 T620x18497547(TC* ac, T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T620x19152909(TC* ac, T0* C);
/* Call to ET_QUERY.is_stable_attribute */
extern T1 T620x18415650(TC* ac, T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T620x18956291(TC* ac, T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T620x18497546(TC* ac, T0* C);
/* Call to ET_QUERY.is_static */
extern T1 T620x18006021(TC* ac, T0* C);
/* Call to ET_QUERY.arguments_count */
extern T6 T620x18006032(TC* ac, T0* C);
/* Call to ET_QUERY.implementation_feature */
extern T0* T620x18006031(TC* ac, T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T620x19152911(TC* ac, T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T620x19152905(TC* ac, T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T620x19152904(TC* ac, T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T620x18415652(TC* ac, T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T620x18415651(TC* ac, T0* C);
/* Call to ET_QUERY.postconditions */
extern T0* T620x18006027(TC* ac, T0* C);
/* Call to ET_QUERY.preconditions */
extern T0* T620x18006026(TC* ac, T0* C);
/* Call to ET_QUERY.is_once_per_object */
extern T1 T620x18006020(TC* ac, T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T620x18006017(TC* ac, T0* C);
/* Call to ET_QUERY.is_parenthesisable */
extern T1 T620x18415654(TC* ac, T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T620x18415653(TC* ac, T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T620x18415643(TC* ac, T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T620x18415644(TC* ac, T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T620x18415668T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONSTRAINT.type */
extern T0* T639x16269314(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT.renames */
extern T0* T639x16269315(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT_ITEM.type_constraint */
extern T0* T642x16269313(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT_ITEM.type */
extern T0* T642x16269314(TC* ac, T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T648x22839297(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.last_leaf */
extern T0* T705x20791301(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T705x22511617(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.position */
extern T0* T705x20791297(TC* ac, T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T713x18350081(TC* ac, T0* C);
/* Call to ET_QUALIFIED_CALL.arguments */
extern T0* T736x19824642(TC* ac, T0* C);
/* Call to ET_QUALIFIED_CALL.qualified_name */
extern T0* T736x20463617(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.first_leaf */
extern T0* T737x20791300(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T737x22757377(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T737x20791297(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T737x20791301(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.expression */
extern T0* T758x17563652(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.index */
extern T6 T758x17612808(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.type */
extern T0* T758x17563651(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.name */
extern T0* T758x17563653(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.last_leaf */
extern T0* T771x20791301(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.types_to_text */
extern T0* T771x15482890(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.type_constraint */
extern T0* T771x15482881T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTRAINT.count */
extern T6 T771x15482887(TC* ac, T0* C);
/* Call to ET_UNTAGGED_ASSERTION.last_leaf */
extern T0* T775x20791301(TC* ac, T0* C);
/* Call to ET_UNTAGGED_ASSERTION.is_class_assertion */
extern T1 T775x15056897(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.last_leaf */
extern T0* T777x20791301(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T777x15089665(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.first_leaf */
extern T0* T777x20791300(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T777x20791297(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.ecf_version */
extern T0* T805x13418500(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T805x13418501(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T805x13418497(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T805x14221315(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T805x14221316(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.conforms_to_primary_type */
extern T1 T843x24297493T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_query */
extern T0* T843x24297511T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_basic */
extern T1 T843x24707076(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_expanded */
extern T1 T843x24739841(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.base_class */
extern T0* T843x24707085(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.base_type */
extern T0* T843x24707084(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.separate_type */
extern T0* T843x24297488(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_special */
extern T1 T843x24297475(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_agent_type */
extern T1 T843x24297474(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_procedure */
extern T0* T843x24297512T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T843x24297502(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_redefined_copy_routine */
extern T1 T843x24297501(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.queries */
extern T0* T843x24297505(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attribute_count */
extern T6 T843x24297495(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_redefined_is_equal_routine */
extern T1 T843x24297503(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_once_per_object_routines */
extern T1 T843x24297498(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.id */
extern T6 T843x24297491(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T843x24297504(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.primary_type */
extern T0* T843x24707086(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.dynamic_procedure */
extern T0* T843x24297509T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.dynamic_query */
extern T0* T843x24297508T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.hash_code */
extern T6 T843x655361(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_builtin_attribute */
extern T1 T843x24297513T0T8T8(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.invariants */
extern T0* T843x24297507(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_fields */
extern T1 T843x24297500(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_attributes */
extern T1 T843x24297497(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_alive */
extern T1 T843x24297473(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attached_type */
extern T0* T843x24297487(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.next_type */
extern T0* T843x24297520(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.conforming_ancestors */
extern T0* T843x24297494(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.type_mark */
extern T0* T843x24707088(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attached_separate_type */
extern T0* T843x24297489(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_boolean */
extern T1 T843x24297477(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.meta_type */
extern T0* T843x24707087(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.procedures */
extern T0* T843x24297506(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_tuple */
extern T1 T843x24297476(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.procedure_calls */
extern T0* T843x24297517(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.query_calls */
extern T0* T843x24297516(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_static */
extern T1 T843x24297481(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.dynamic_invariants */
extern T0* T843x24297510T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T851x22822913(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T851x22822968(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_root_context */
extern T1 T851x22822928(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T851x22822921T6(TC* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T851x22822926(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T851x22822915(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T851x22822947(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.scoop_mode */
extern T1 T851x22822948(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T851x22822969(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_type_non_separate_with_type_mark */
extern T1 T851x22822933T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T851x22822939T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T851x22822937T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T851x22822966T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T851x22822956T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.adapted_base_class_with_seeded_feature */
extern T0* T851x22822918T6(TC* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.adapted_base_class_with_named_feature */
extern T0* T851x22822917T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T851x22822924(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_type_separate */
extern T1 T851x22822930(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T851x22822925T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T851x22822962T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T851x22822950T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T851x22822967T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T851x22822965T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T851x22822957T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T851x22822955T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T851x22822941T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_separate_with_type_mark */
extern T1 T851x22822931T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T851x22822935T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.named_base_class */
extern T0* T851x22822916(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T851x22822920T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T853x22675457(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.type_mark */
extern T0* T853x22790145(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T853x22528004(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T853x22528003(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T853x22790182T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T853x22790180T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_non_separate_with_type_mark */
extern T1 T853x22790174T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T853x22839297(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T853x22790165T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T853x22790146T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_separate_with_type_mark */
extern T1 T853x22790172T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T856x24739845(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T856x24313860(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T856x24739847(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T856x24313857T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T856x24313864(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T856x24313862T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T856x24739842(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T856x24739843(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T856x24739841(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T856x24313858(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T856x24313861(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.primary_type */
extern T0* T857x24707086(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.type_mark */
extern T0* T857x24707088(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_attached */
extern T1 T857x24707081(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_separate */
extern T1 T857x24707082(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T857x24739841(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T857x24707094T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T857x24707085(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_basic */
extern T1 T857x24707076(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T857x24707087(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T857x24707084(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_self_initializing */
extern T1 T857x24707080(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T857x655361(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_character_n */
extern T1 T857x24707077(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_real_n */
extern T1 T857x24707079(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_integer_n */
extern T1 T857x24707078(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.type_id */
extern T6 T857x24707089(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T870x19152911(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T870x19152917(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T870x18006031(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.postconditions */
extern T0* T870x18006027(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.preconditions */
extern T0* T870x18006026(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T870x19152919(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T870x19152898(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T870x19152918(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T870x19152897(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_seed */
extern T6 T870x19152913(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.name */
extern T0* T870x19152908(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T870x19152915(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T870x18006025(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T870x18006023(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T870x19152910(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T870x18006022(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_seed */
extern T1 T870x19152907T6(TC* ac, T0* C, T6 a1);
/* Call to ET_STANDALONE_CLOSURE.is_unique_attribute */
extern T1 T870x19152905(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_constant_attribute */
extern T1 T870x19152904(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments_count */
extern T6 T870x18006032(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_static */
extern T1 T870x18006021(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_attribute */
extern T1 T870x19152903(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_once_per_thread */
extern T1 T870x18006019(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_once_per_process */
extern T1 T870x18006018(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_once_per_object */
extern T1 T870x18006020(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_once */
extern T1 T870x18006017(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.lower_name */
extern T0* T870x19152909(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.other_seeds */
extern T0* T870x19152914(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.hash_code */
extern T6 T870x655361(TC* ac, T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T871x19152909(TC* ac, T0* C);
/* Call to ET_FEATURE.name */
extern T0* T871x18497544(TC* ac, T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T871x18497542T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.are_postconditions_instance_free_recursive */
extern T1 T871x18415656(TC* ac, T0* C);
/* Call to ET_FEATURE.are_preconditions_instance_free_recursive */
extern T1 T871x18415655(TC* ac, T0* C);
/* Call to ET_FEATURE.extended_name */
extern T0* T871x18415620(TC* ac, T0* C);
/* Call to ET_FEATURE.alias_names */
extern T0* T871x18415619(TC* ac, T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T871x19152915(TC* ac, T0* C);
/* Call to ET_FEATURE.version */
extern T6 T871x18415628(TC* ac, T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T871x18415644(TC* ac, T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T871x18497547(TC* ac, T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T871x18497546(TC* ac, T0* C);
/* Call to ET_FEATURE.type */
extern T0* T871x18497545(TC* ac, T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T871x18497548(TC* ac, T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T871x19152911(TC* ac, T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T871x19152901(TC* ac, T0* C);
/* Call to ET_FEATURE.is_static */
extern T1 T871x18006021(TC* ac, T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T871x18415662T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.arguments_count */
extern T6 T871x18006032(TC* ac, T0* C);
/* Call to ET_FEATURE.has_class_postcondition_recursive */
extern T1 T871x18415657(TC* ac, T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T871x19152903(TC* ac, T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T871x655361(TC* ac, T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T871x18006026(TC* ac, T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T871x18415630(TC* ac, T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T871x19152910(TC* ac, T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T871x19152905(TC* ac, T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T871x19152904(TC* ac, T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T871x18006031(TC* ac, T0* C);
/* Call to ET_FEATURE.has_validity_error */
extern T1 T871x19152917(TC* ac, T0* C);
/* Call to ET_FEATURE.validity_checked */
extern T1 T871x19152916(TC* ac, T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T871x18006027(TC* ac, T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T871x18415651(TC* ac, T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T871x18415652(TC* ac, T0* C);
/* Call to ET_FEATURE.is_parenthesisable */
extern T1 T871x18415654(TC* ac, T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T871x18415653(TC* ac, T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T871x18415643(TC* ac, T0* C);
/* Call to ET_FEATURE.id */
extern T6 T871x18415627(TC* ac, T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T871x18415669T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T871x18415670T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T871x18415667T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T871x18497541(TC* ac, T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T871x19152900(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T871x18006017(TC* ac, T0* C);
/* Call to ET_FEATURE.is_routine */
extern T1 T871x19152902(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.item_name */
extern T0* T895x20316167(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.hash_code */
extern T6 T895x655361(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.new_cursor_expression */
extern T0* T895x20316170(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_item_expression */
extern T0* T895x20316171(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.has_cursor_name */
extern T1 T895x20316161(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_forth_instruction */
extern T0* T895x20316173(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_after_expression */
extern T0* T895x20316172(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.unfolded_cursor_name */
extern T0* T895x20316169(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.iterable_expression */
extern T0* T895x20316166(TC* ac, T0* C);
/* Call to ET_ASSERTIONS.item */
extern T0* T899x20938753T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ASSERTIONS.count */
extern T6 T899x20938756(TC* ac, T0* C);
/* Call to ET_ASSERTIONS.assertion */
extern T0* T899x15073289T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ASSERTIONS.are_all_true */
extern T1 T899x15073282(TC* ac, T0* C);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T900x22790205T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T900x22790208T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T900x22790203T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T900x22790204T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T900x22790207T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T900x22790206T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T900x22790198T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.is_type_non_separate_with_type_mark */
extern T1 T900x22790174T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T900x22790194T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T900x22790227(TC* ac, T0* C);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T900x22790190T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T900x22790218T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T900x22790178T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T900x22790180T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T900x22790182T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_separate_with_type_mark */
extern T1 T900x22790172T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T900x22790176T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T900x22790219T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T900x22790217T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T900x15482889T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T900x22790200T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T900x22790210T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T900x22790211T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T900x22790209T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.type_with_type_mark */
extern T0* T900x22790165T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T900x22790147T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.last_leaf */
extern T0* T901x20791301(TC* ac, T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T901x15056898(TC* ac, T0* C);
/* Call to ET_ASSERTION.is_class_assertion */
extern T1 T901x15056897(TC* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T902x16793609T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T902x16793610(TC* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T902x16793602(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T903x16842754(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T903x16842755(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_call_agent */
extern T1 T903x16842758(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T903x20791297(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T903x16842757(TC* ac, T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T905x21381122(TC* ac, T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T905x20791297(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not_symbol */
extern T1 T905x21381163(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T905x21381162(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T905x21381160(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T905x21381159(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T905x21381157(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor_symbol */
extern T1 T905x21381156(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T905x21381155(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T905x21381154(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T905x21381153(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T905x21381152(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else_symbol */
extern T1 T905x21381151(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T905x21381150(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_symbol */
extern T1 T905x21381149(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T905x21381148(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T905x21381147(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T905x21381146(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T905x21381145(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T905x21381144(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies_symbol */
extern T1 T905x21381143(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T905x21381142(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T905x21381141(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T905x21381140(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T905x21381138(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T905x21381137(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then_symbol */
extern T1 T905x21381136(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T905x21381135(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_symbol */
extern T1 T905x21381134(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T905x21381133(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_parenthesis */
extern T1 T905x21381165(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T905x21381164(TC* ac, T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T905x21381123(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T905x21381129(TC* ac, T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T905x21381169(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T905x21381167(TC* ac, T0* C);
/* Call to ET_CALL_NAME.hash_code */
extern T6 T905x655361(TC* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T949x16793609T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T949x16793610(TC* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T949x16793602(TC* ac, T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T976x14581763(TC* ac, T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T976x14581774(TC* ac, T0* C);
/* Call to ET_AGENT.target */
extern T0* T976x14581762(TC* ac, T0* C);
/* Call to ET_AGENT.position */
extern T0* T976x20791297(TC* ac, T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T976x14581768(TC* ac, T0* C);
/* Call to ET_AGENT.index */
extern T6 T976x17612808(TC* ac, T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T976x14581765(TC* ac, T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T976x14581764(TC* ac, T0* C);
/* Call to ET_OPERAND.index */
extern T6 T989x17612808(TC* ac, T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T989x17612801(TC* ac, T0* C);
/* Call to ET_OPERAND.is_current */
extern T1 T989x17612803(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.dynamic_type */
extern T0* T991x24313857T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.count */
extern T6 T991x24313860(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.has_type */
extern T1 T991x24313862T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.index_of */
extern T6 T991x24313859T0(TC* ac, T0* C, T0* a1);
/* Call to ET_SEPARATE_CALL.arguments */
extern T0* T1003x19824642(TC* ac, T0* C);
/* Call to ET_SEPARATE_CALL.target */
extern T0* T1003x20627457(TC* ac, T0* C);
/* Call to ET_SEPARATE_CALL.name */
extern T0* T1003x19824641(TC* ac, T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T1004x18006022(TC* ac, T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T1004x18006025(TC* ac, T0* C);
/* Call to ET_CLOSURE.inline_separate_arguments */
extern T0* T1004x18006030(TC* ac, T0* C);
/* Call to ET_CLOSURE.iteration_components */
extern T0* T1004x18006029(TC* ac, T0* C);
/* Call to ET_CLOSURE.object_tests */
extern T0* T1004x18006028(TC* ac, T0* C);
/* Call to ET_CLOSURE.postconditions */
extern T0* T1004x18006027(TC* ac, T0* C);
/* Call to ET_CLOSURE.preconditions */
extern T0* T1004x18006026(TC* ac, T0* C);
/* Call to ET_CLOSURE.is_static */
extern T1 T1004x18006021(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T1008x16842754(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T1008x16842753(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1008x16842755(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T1008x19824648(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T1008x20119555(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T1008x17612808(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T1008x16842758(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T1008x16842757(TC* ac, T0* C);
/* Call to ET_CREATION_COMPONENT.position */
extern T0* T1009x20791297(TC* ac, T0* C);
/* Call to ET_CREATION_COMPONENT.name */
extern T0* T1009x19824641(TC* ac, T0* C);
/* Call to ET_CREATION_COMPONENT.is_scoop_region_passive */
extern T1 T1009x20021254(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T1010x16842753(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T1010x16842754(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T1010x16842758(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T1010x16842757(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T1010x16842755(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.position */
extern T0* T1010x20791297(TC* ac, T0* C);
/* Call to ET_AST_LEAF.break */
extern T0* T1038x20791302(TC* ac, T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T1038x20791299(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.label */
extern T0* T1039x22200323(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.position */
extern T0* T1039x20791297(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1039x22151172T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T1039x22200322(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1039x22151174T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T1039x20791301(TC* ac, T0* C);
/* Call to ET_OPERATOR.first_leaf */
extern T0* T1040x20791300(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_plus */
extern T1 T1040x21381160(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_minus */
extern T1 T1040x21381159(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not_symbol */
extern T1 T1040x21381163(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not */
extern T1 T1040x21381162(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then_symbol */
extern T1 T1040x21381136(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_symbol */
extern T1 T1040x21381134(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then */
extern T1 T1040x21381135(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and */
extern T1 T1040x21381133(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies_symbol */
extern T1 T1040x21381143(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies */
extern T1 T1040x21381142(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else_symbol */
extern T1 T1040x21381151(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_symbol */
extern T1 T1040x21381149(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else */
extern T1 T1040x21381150(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or */
extern T1 T1040x21381148(TC* ac, T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T1040x20791297(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T1040x21381129(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T1210x12713994(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T1210x29474820T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T1210x12714000(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T1210x29474829(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T1210x12713985(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T1210x29474827(TC* ac, T0* C);
/* Call to XM_DOCUMENT_NODE.parent */
extern T0* T1258x30392321(TC* ac, T0* C);
/* Call to ET_TOKEN.break */
extern T0* T1472x20791302(TC* ac, T0* C);
/* Call to ET_TOKEN.text */
extern T0* T1472x21168129(TC* ac, T0* C);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_supported */
extern T1 T1514x13352962T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_aware */
extern T1 T1514x13402113T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_CONDITION_ITEM.is_enabled */
extern T1 T1514x13352961T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T1532x655361(TC* ac, T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T1579x19529751T2(TC* ac, T0* C, T2 a1);
/* Call to ET_GROUP.kind_lower_name */
extern T0* T1579x19529756(TC* ac, T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T1579x19529731(TC* ac, T0* C);
/* Call to ET_GROUP.absolute_pathname */
extern T0* T1579x19529754(TC* ac, T0* C);
/* Call to ET_GROUP.universe */
extern T0* T1579x19529744(TC* ac, T0* C);
/* Call to ET_GROUP.parent */
extern T0* T1579x19529771(TC* ac, T0* C);
/* Call to ET_GROUP.full_name */
extern T0* T1579x19529750T2(TC* ac, T0* C, T2 a1);
/* Call to ET_GROUP.cluster */
extern T0* T1579x19529768(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1581x18497553(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1581x18497540(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1581x18497551(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1581x18497538(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1581x18497552(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1581x18497539(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1581x18497537(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1581x18497549(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1581x18497550(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_BASE_TYPES.type_constraint */
extern T0* T1589x15482881T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.count */
extern T6 T1589x15482887(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_non_separate_type */
extern T1 T1589x15482886T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.types_to_text */
extern T0* T1589x15482890(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_attached_type */
extern T1 T1589x15482885T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_expanded_type */
extern T1 T1589x15482884T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.conforms_to_type_with_type_marks */
extern T1 T1589x15482889T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE_CONSTRAINT.type */
extern T0* T1590x16269314(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.renames */
extern T0* T1590x16269315(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.is_type_non_separate */
extern T1 T1590x15482886T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.is_type_attached */
extern T1 T1590x15482885T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.is_type_expanded */
extern T1 T1590x15482884T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.base_class */
extern T0* T1590x15253505(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.named_feature */
extern T0* T1590x15253509T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T1655x19316739(TC* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.name */
extern T0* T1655x19316738(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1716x19005443(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1716x19005442(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1716x19005441(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1716x19005444(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.base_type */
extern T0* T1798x15253506(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.base_class */
extern T0* T1798x15253505(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.named_query */
extern T0* T1798x15253507T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_CLASS.named_procedure */
extern T0* T1798x15253508T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_CLASS.named_feature */
extern T0* T1798x15253509T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_CLASS.base_type_index_of_label */
extern T6 T1798x15253510T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CALL_EXPRESSION_WITH_ACTUAL_ARGUMENTS.index */
extern T6 T1842x17612808(TC* ac, T0* C);
/* Call to ET_CALL_EXPRESSION_WITH_ACTUAL_ARGUMENTS.is_call_agent */
extern T1 T1842x19824643(TC* ac, T0* C);
/* Call to ET_CALL_EXPRESSION_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T1842x19824642(TC* ac, T0* C);
/* Call to ET_CALL_EXPRESSION_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T1842x19824641(TC* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1843x14581764(TC* ac, T0* C);
/* Call to ET_REPETITION_COMPONENT.variant_part */
extern T0* T1844x20578310(TC* ac, T0* C);
/* Call to ET_REPETITION_COMPONENT.invariant_part */
extern T0* T1844x20578309(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.locals */
extern T0* T1845x18006025(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.compound */
extern T0* T1845x18644993(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.is_once_per_process */
extern T1 T1845x18006018(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.inline_separate_arguments */
extern T0* T1845x18006030(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.rescue_clause */
extern T0* T1845x18644995(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.arguments */
extern T0* T1845x18006023(TC* ac, T0* C);
/* Call to ET_REPETITION_INSTRUCTION.loop_compound */
extern T0* T1862x20594690(TC* ac, T0* C);
/* Call to ET_REPETITION_INSTRUCTION.until_conditional */
extern T0* T1862x20578311(TC* ac, T0* C);
/* Call to ET_REPETITION_INSTRUCTION.variant_part */
extern T0* T1862x20578310(TC* ac, T0* C);
/* Call to ET_REPETITION_INSTRUCTION.invariant_part */
extern T0* T1862x20578309(TC* ac, T0* C);
/* Call to ET_ROUTINE.arguments */
extern T0* T1865x18497546(TC* ac, T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1865x18006031(TC* ac, T0* C);
/* Call to XM_ELEMENT_NODE.parent */
extern T0* T1870x30392321(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T1871x19824641(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T1871x19824642(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T1873x16842754(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.expression */
extern T0* T1878x16941057(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.index */
extern T6 T1878x17612808(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T1878x16941058(TC* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1880x18006022(TC* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1880x18006023(TC* ac, T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1883x18006023(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T1886x20119555(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.name */
extern T0* T1886x16842754(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.target */
extern T0* T1886x16842753(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T1886x16842755(TC* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1889x16842755(TC* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T1889x16842753(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.arguments */
extern T0* T1891x19824642(TC* ac, T0* C);
/* Call to ET_ECF_GROUP.class_options */
extern T0* T2036x13877254(TC* ac, T0* C);
/* Call to ET_ECF_GROUP.options */
extern T0* T2036x13877253(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_attribute */
extern T1 T2053x19152903(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.implementation_feature */
extern T0* T2053x18006031(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_object */
extern T1 T2053x18006020(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_thread */
extern T1 T2053x18006019(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_process */
extern T1 T2053x18006018(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once */
extern T1 T2053x18006017(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.lower_name */
extern T0* T2053x19152909(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.rescue_clause */
extern T0* T2053x18644995(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.compound */
extern T0* T2053x18644993(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.arguments */
extern T0* T2053x18497546(TC* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.name */
extern T0* T2071x22626305(TC* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.to_text */
extern T0* T2071x22790227(TC* ac, T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T2089x20791297(TC* ac, T0* C);
/* Call to LX_TRANSITION [LX_NFA_STATE].target */
extern T0* T2299x27017217(TC* ac, T0* C);
/* Call to LX_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2299x27017218T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.append_character */
extern void T17x2293809T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.append_string */
extern void T17x2293820T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.remove_head */
extern void T17x2326533T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.replace_substring_all */
extern void T17x2293845T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to STRING_8.append_code */
extern void T17x2326558T10(TC* ac, T0* C, T10 a1);
/* Call to STRING_8.put */
extern void T17x2588678T2T6(TC* ac, T0* C, T2 a1, T6 a2);
/* Call to STRING_8.remove_tail */
extern void T17x2326531T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.append_substring */
extern void T17x2293821T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to STRING_8.append_string_general */
extern void T17x2326547T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.append_substring_general */
extern void T17x2326546T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to STRING_8.wipe_out */
extern void T17x2326530(TC* ac, T0* C);
/* Call to STRING_8.keep_head */
extern void T17x2326539T6(TC* ac, T0* C, T6 a1);
/* Call to EXCEPTION.set_type_name */
extern void T22x1753112T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_recipient_name */
extern void T22x1753115T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_description */
extern void T22x1753117T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_exception_trace */
extern void T22x1753111T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_throwing_exception */
extern void T22x1753116T0(TC* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T51x6193164(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T51x6193162(TC* ac, T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T61x5586963T0(TC* ac, T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T61x5586962(TC* ac, T0* C);
/* Call to ET_UNIVERSE.universes_do_if */
extern void T72x19677318T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_if_until */
extern void T72x19677324T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.master_classes_do_if */
extern void T72x19677325T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_until */
extern void T72x19677326T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_all */
extern void T72x19677327T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.classes_do_if */
extern void T72x19677335T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_until */
extern void T72x19677336T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_all */
extern void T72x19677337T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PRIMARY_GROUP.fill_options */
extern void T73x19529779T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.append_to_string */
extern void T101x22790235T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.add_adapted_base_classes_to_list */
extern void T101x22790236T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_add_adapted_base_classes_to_list */
extern void T101x22822971T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.process */
extern void T101x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.append_canonical_to_string */
extern void T101x22790233T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T115x6094862T6(TC* ac, T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T115x6225926T2(TC* ac, T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T115x6307842(TC* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T115x6094864T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T115x6225925T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T115x6307843T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_GENERAL.keep_head */
extern void T169x2326539T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.remove_head */
extern void T169x2326533T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.append_code */
extern void T169x2326558T10(TC* ac, T0* C, T10 a1);
/* Call to ET_TYPE_MARK.process */
extern void T176x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.append_to_string_with_space */
extern void T176x21217305T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.process */
extern void T185x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T185x22167577(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.reset */
extern void T185x22167578(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.append_to_string */
extern void T185x22167576T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T185x22167573T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T185x22167574T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.process */
extern void T201x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T203x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T203x22790237(TC* ac, T0* C);
/* Call to ET_TYPE.reset */
extern void T203x15482893(TC* ac, T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T203x22790235T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_runtime_name_to_string */
extern void T203x22790232T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.add_adapted_base_classes_to_list */
extern void T203x22790236T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.append_canonical_to_string */
extern void T203x22790233T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_canonical_actual_parameter_to_string */
extern void T203x22151177T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tagged_assertion */
extern void T231x25313305T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_agent_typed_open_argument */
extern void T231x25313505T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_agent_open_target */
extern void T231x25313506T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_assertion */
extern void T231x25313473T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_elseif_part */
extern void T231x25313433T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_elseif_expression */
extern void T231x25313435T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_actual_argument_list */
extern void T231x25313515T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_question_mark_symbol */
extern void T231x25313323T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T231x25313456T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_from_expression */
extern void T231x25313458T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T231x25313462T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unfolded_tuple_actual_argument_list */
extern void T231x25313294T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_agent_implicit_current_target */
extern void T231x25313509T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T231x25313465T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T231x25313409T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T231x25313390T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T231x25313478T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_instruction */
extern void T231x25313516T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T231x25313313T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T231x25313368T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T231x25313302T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T231x25313472T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T231x25313290T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T231x25313406T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T231x25313309T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T231x25313332T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T231x25313327T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T231x25313454T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T231x25313491T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T231x25313361T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T231x25313495T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T231x25313496T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T231x25313497T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T231x25313325T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T231x25313326T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T231x25313367T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T231x25313421T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T231x25313445T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T231x25313345T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T231x25313442T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T231x25313423T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T231x25313446T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T231x25313348T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T231x25313444T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T231x25313292T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T231x25313466T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_extended_attribute */
extern void T231x25313425T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T231x25313492T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_repeat_instruction */
extern void T231x25313316T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_invariants */
extern void T231x25313378T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T231x25313380T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inline_separate_instruction */
extern void T231x25313383T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T231x25313397T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T231x25313447T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T231x25313291T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T231x25313420T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T231x25313344T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T231x25313441T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T231x25313422T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T231x25313347T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T231x25313443T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_iteration_cursor */
extern void T231x25313377T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T231x25313346T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_named_object_test */
extern void T231x25313354T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_test */
extern void T231x25313352T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_object_test */
extern void T231x25313349T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T231x25313350T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T231x25313330T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T231x25313355T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_equality_expression */
extern void T231x25313353T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T231x25313431T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T231x25313388T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T231x25313427T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T231x25313314T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T231x25313449T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T231x25313418T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T231x25313333T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T231x25313482T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T231x25313303T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T231x25313296T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T231x25313488T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T231x25313351T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T231x25313402T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T231x25313297T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T231x25313288T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T231x25313311T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T231x25313480T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T231x25313308T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T231x25313310T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_quantifier_expression */
extern void T231x25313324T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T231x25313336T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T231x25313356T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T231x25313359T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_expression */
extern void T231x25313381T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_expression */
extern void T231x25313398T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T231x25313455T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T231x25313479T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T231x25313484T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_expression */
extern void T231x25313517T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T231x25313315T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T231x25313450T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T231x25313474T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inlined_expression */
extern void T231x25313382T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T231x25313481T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T231x25313419T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T231x25313320T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T231x25313322T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T231x25313321T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T231x25313328T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T231x25313287T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T231x25313401T0(TC* ac, T0* C, T0* a1);
/* Call to ET_SYMBOL.process */
extern void T286x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T298x16400398T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_cast_type */
extern void T298x16400399T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T310x16482344T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T310x16482346T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T310x16482345T0(TC* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.process */
extern void T316x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.reset */
extern void T316x15056900(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T316x16498704T0(TC* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_cast_type */
extern void T316x16498705T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T356x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T356x17612811(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.add_old_expressions */
extern void T356x17612809T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.process */
extern void T359x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.process */
extern void T365x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T365x17612811(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.add_old_expressions */
extern void T365x17612809T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHOICE.process */
extern void T389x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHOICE.reset */
extern void T389x19873801(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.process */
extern void T392x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T392x19873801(TC* ac, T0* C);
/* Call to ET_CHOICE_ITEM.process */
extern void T395x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONDITIONAL.process */
extern void T410x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.process */
extern void T413x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T413x17612810T6(TC* ac, T0* C, T6 a1);
/* Call to ET_EXPRESSION.process */
extern void T470x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T470x15056900(TC* ac, T0* C);
/* Call to ET_EXPRESSION.add_old_expressions */
extern void T470x16793611T0(TC* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.add_separate_arguments */
extern void T470x17154062T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_EXPRESSION.set_index */
extern void T470x17612810T6(TC* ac, T0* C, T6 a1);
/* Call to ET_EXPRESSION_ITEM.process */
extern void T473x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_EXTERNAL_ALIAS.process */
extern void T479x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_attached_result_index */
extern void T519x14893067T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_result_index */
extern void T519x14893068T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_inline_separate_arguments */
extern void T519x18006033T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_iteration_components */
extern void T519x18006034T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_object_tests */
extern void T519x18006035T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_actual_arguments */
extern void T519x14581777T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.process */
extern void T540x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T540x20299784(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.process */
extern void T548x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T548x22790237(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T548x15482893(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T548x22790235T0(TC* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING_ITEM.process */
extern void T566x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NOTE_TERM.process */
extern void T581x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NOTE_TERM_ITEM.process */
extern void T584x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_OBSOLETE.process */
extern void T590x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.process */
extern void T611x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_after_interface_checked */
extern void T611x18415693(TC* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T611x18415694(TC* ac, T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T611x18415695(TC* ac, T0* C);
/* Call to ET_PROCEDURE.add_creation_clients_to */
extern void T611x18415691T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.reset_validity_checked */
extern void T611x19152921(TC* ac, T0* C);
/* Call to ET_PROCEDURE.set_inline_separate_arguments */
extern void T611x18006033T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_iteration_components */
extern void T611x18006034T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_object_tests */
extern void T611x18006035T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T611x18415679T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.process */
extern void T620x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.reset_after_interface_checked */
extern void T620x18415693(TC* ac, T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T620x18415694(TC* ac, T0* C);
/* Call to ET_QUERY.reset */
extern void T620x18415695(TC* ac, T0* C);
/* Call to ET_QUERY.reset_validity_checked */
extern void T620x19152921(TC* ac, T0* C);
/* Call to ET_QUERY.set_inline_separate_arguments */
extern void T620x18006033T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_iteration_components */
extern void T620x18006034T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_object_tests */
extern void T620x18006035T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T620x18415679T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONSTRAINT.process */
extern void T639x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONSTRAINT.reset */
extern void T639x15482893(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT.reset_renames */
extern void T639x15482892(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT_ITEM.process */
extern void T642x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_ITEM.process */
extern void T648x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DECLARED_TYPE.process */
extern void T705x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_EXTERNAL_LANGUAGE.process */
extern void T713x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TARGET_TYPE.process */
extern void T737x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT.process */
extern void T771x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT.reset */
extern void T771x15482893(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.reset_renames */
extern void T771x15482892(TC* ac, T0* C);
/* Call to ET_UNTAGGED_ASSERTION.process */
extern void T775x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNTAGGED_ASSERTION.reset */
extern void T775x15056900(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.process */
extern void T777x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T801x28524546T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T802x28459021T0T0T1(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_attribute */
extern void T802x28459016T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_error */
extern void T802x28459020T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T802x28459014T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T802x28459015(TC* ac, T0* C);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T802x28459017T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T802x28459013T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T802x28459019T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T802x28459018T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_finish */
extern void T802x28459022(TC* ac, T0* C);
/* Call to XM_CALLBACKS.on_start */
extern void T802x28459023(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T805x14221323T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T805x13418505T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T805x14221326T1(TC* ac, T0* C, T1 a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T805x14221324T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T805x14221321T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_description */
extern void T805x14221322T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T805x13418503T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T805x13418504T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_static */
extern void T843x24297540T1(TC* ac, T0* C, T1 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_query_call */
extern void T843x24297528T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_procedure_call */
extern void T843x24297527T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_object_equality_expression */
extern void T843x24297525T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_equality_expression */
extern void T843x24297526T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.use_all_attributes */
extern void T843x24297533T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_alive */
extern void T843x24297541(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attribute_position */
extern void T843x24297534T0T6(TC* ac, T0* C, T0* a1, T6 a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_next_type */
extern void T843x24297524T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_hash_code */
extern void T843x24297535T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attached_type */
extern void T843x24297539T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attached_separate_type */
extern void T843x24297537T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_separate_type */
extern void T843x24297538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_id */
extern void T843x24297536T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T856x24739850T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.add_common_types_to_list */
extern void T856x24313867T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T856x24313865T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T856x24739851(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T856x24625153T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_type_from_type_set */
extern void T856x24625155T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T857x24739850T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T857x24707099T0(TC* ac, T0* C, T0* a1);
/* Call to ET_STANDALONE_CLOSURE.process */
extern void T870x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.add_precursors */
extern void T871x18415674T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.process */
extern void T871x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_validity_error */
extern void T871x19152922(TC* ac, T0* C);
/* Call to ET_FEATURE.set_validity_checked */
extern void T871x19152923(TC* ac, T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T871x18415682T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T871x18415683T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T871x18415690T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T871x18415686T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T871x18415680T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T871x18415681T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T871x18415675(TC* ac, T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T871x18415676(TC* ac, T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T871x18415685T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T871x18415684T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T871x18415689T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ASSERTION.reset */
extern void T901x15056900(TC* ac, T0* C);
/* Call to ET_ASSERTION.process */
extern void T901x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CALL_NAME.set_seed */
extern void T905x21381177T6(TC* ac, T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T976x14581777T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T976x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_OPERAND.set_index */
extern void T989x17612810T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T1039x22151177T0(TC* ac, T0* C, T0* a1);
/* Call to ET_OPERATOR.process */
extern void T1040x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to ET_OPERATOR.reset */
extern void T1040x21381178(TC* ac, T0* C);
/* Call to ET_OPERATOR.set_seed */
extern void T1040x21381177T6(TC* ac, T0* C, T6 a1);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T1210x29474840(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T1210x29474841T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T1210x29474839T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T1210x29474844(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T1210x12714042(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T1210x29474842T0(TC* ac, T0* C, T0* a1);
/* Call to XM_DOCUMENT_NODE.node_set_parent */
extern void T1258x30244866T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T1458x24625153T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T1458x24625155T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T1532x19562538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T1532x19562531T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ADAPTED_CLASS.add_overloaded_procedures */
extern void T1798x15253511T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ADAPTED_CLASS.add_overloaded_queries */
extern void T1798x15253512T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_ELEMENT_NODE.node_set_parent */
extern void T1870x30244866T0(TC* ac, T0* C, T0* a1);
/* Call to ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T1886x20545538T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.set_arguments */
extern void T1891x19841026T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_NODE.process */
extern void T2089x20791306T0(TC* ac, T0* C, T0* a1);
/* Call to LX_TRANSITION [LX_NFA_STATE].record */
extern void T2299x27017220T0(TC* ac, T0* C, T0* a1);
extern T0* GE_ma34(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma1924(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma1923(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma953(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma917(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma854(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma1253(TC* ac, T6 c, T6 n, ...);
extern T0* GE_mt76(TC* ac);
extern T0* GE_mt1315(TC* ac, T0* a1, T0* a2, T0* a3);
extern T0* GE_mt2083(TC* ac, T0* a1, T0* a2, T8 a3);
extern T0* GE_mt973(TC* ac, T0* a1, T0* a2);
extern T0* GE_mt1541(TC* ac, T0* a1);
extern T0* GE_mt32(TC* ac, T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* ge375ov6144044;
extern T0* ge412ov6307841;
extern T0* ge401ov6307841;
extern T0* ge488ov7995457;
extern T0* ge498ov8159289;
extern T0* ge1869ov30621755;
extern T0* ge421ov6144033;
extern T0* ge418ov6144033;
extern T0* ge421ov6144043;
extern T0* ge418ov6144043;
extern T0* ge396ov6488072;
extern T0* ge418ov6144032;
extern T0* ge403ov6602764;
extern T0* ge403ov6602763;
extern T0* ge421ov6144032;
extern T0* ge396ov6488074;
extern T0* ge397ov6504465;
extern T0* ge410ov6307841;
extern T0* ge1673ov11878404;
extern T0* ge366ov5996588;
extern T0* ge1658ov11878404;
extern T0* ge1664ov11878404;
extern T0* ge1663ov11878404;
extern T0* ge1662ov11878404;
extern T0* ge1653ov11878404;
extern T0* ge1652ov11878404;
extern T0* ge1670ov11878404;
extern T0* ge1667ov11878404;
extern T0* ge1683ov11878404;
extern T0* ge730ov11878404;
extern T0* ge735ov11878404;
extern T0* ge723ov11878404;
extern T0* ge725ov11878406;
extern T0* ge332ov5439510;
extern T0* ge748ov12255233;
extern T0* ge334ov5472263;
extern T0* ge337ov5521413;
extern T0* ge337ov5521420;
extern T0* ge337ov5521411;
extern T0* ge337ov5521418;
extern T0* ge332ov5439511;
extern T0* ge332ov5439512;
extern T0* ge332ov5439513;
extern T0* ge337ov5521410;
extern T0* ge337ov5521417;
extern T0* ge337ov5521412;
extern T0* ge337ov5521419;
extern T0* ge337ov5521414;
extern T0* ge337ov5521421;
extern T0* ge337ov5521415;
extern T0* ge337ov5521422;
extern T0* ge334ov5472258;
extern T0* ge334ov5472257;
extern T0* ge334ov5472265;
extern T0* ge334ov5472264;
extern T0* ge747ov12238849;
extern T0* ge1526ov25002663;
extern T0* ge1526ov25002671;
extern T0* ge1526ov25002056;
extern T0* ge747ov12238855;
extern T0* ge747ov12238853;
extern T0* ge749ov12271623;
extern T0* ge1526ov25002669;
extern T0* ge1526ov25002668;
extern T0* ge1526ov25002670;
extern T0* ge731ov11878404;
extern T0* ge724ov11878404;
extern T0* ge732ov11878404;
extern T0* ge728ov11878404;
extern T0* ge416ov6307841;
extern T0* ge395ov6471699;
extern T0* ge395ov6471700;
extern T0* ge790ov12943391;
extern T0* ge790ov12943377;
extern T0* ge790ov12943375;
extern T0* ge790ov12943361;
extern T0* ge790ov12943379;
extern T0* ge790ov12943376;
extern T0* ge790ov12943380;
extern T0* ge790ov12943385;
extern T0* ge790ov12943382;
extern T0* ge790ov12943378;
extern T0* ge790ov12943372;
extern T0* ge790ov12943373;
extern T0* ge790ov12943381;
extern T0* ge790ov12943374;
extern T0* ge790ov12943386;
extern T0* ge790ov12943362;
extern T0* ge790ov12943388;
extern T0* ge790ov12943389;
extern T0* ge790ov12943364;
extern T0* ge790ov12943363;
extern T0* ge790ov12943387;
extern T0* ge790ov12943390;
extern T0* ge790ov12943370;
extern T0* ge790ov12943371;
extern T0* ge790ov12943367;
extern T0* ge790ov12943384;
extern T0* ge790ov12943383;
extern T0* ge790ov12943368;
extern T0* ge790ov12943369;
extern T0* ge790ov12943366;
extern T0* ge790ov12943365;
extern T0* ge786ov12877842;
extern T0* ge1526ov25002667;
extern T0* ge1526ov25002235;
extern T0* ge1526ov25002271;
extern T0* ge1526ov25002244;
extern T0* ge1526ov25002591;
extern T0* ge1526ov25002594;
extern T0* ge1526ov25002593;
extern T0* ge1526ov25002507;
extern T0* ge1526ov25002240;
extern T0* ge1526ov25002242;
extern T0* ge1526ov25002604;
extern T0* ge1526ov25002233;
extern T0* ge1526ov25002609;
extern T0* ge1526ov25002279;
extern T0* ge1526ov25002357;
extern T0* ge1526ov25002358;
extern T0* ge1526ov25002360;
extern T0* ge1526ov25002361;
extern T0* ge1526ov25002356;
extern T0* ge1526ov25002586;
extern T0* ge1526ov25002590;
extern T0* ge1526ov25002587;
extern T0* ge1526ov25002589;
extern T0* ge1526ov25002588;
extern T0* ge1526ov25002595;
extern T0* ge1526ov25002597;
extern T0* ge1526ov25002596;
extern T0* ge1526ov25002598;
extern T0* ge1288ov21102603;
extern T0* ge1520ov24903687;
extern T0* ge1520ov24903684;
extern T0* ge1520ov24903681;
extern T0* ge1294ov21201730;
extern T0* ge1294ov21201715;
extern T0* ge1294ov21201883;
extern T0* ge1294ov21201884;
extern T0* ge1294ov21201885;
extern T0* ge1294ov21201886;
extern T0* ge1294ov21201887;
extern T0* ge1294ov21201891;
extern T0* ge1294ov21201892;
extern T0* ge1294ov21201893;
extern T0* ge1294ov21201894;
extern T0* ge1294ov21201895;
extern T0* ge1294ov21201896;
extern T0* ge1294ov21201897;
extern T0* ge1294ov21201898;
extern T0* ge1294ov21201900;
extern T0* ge1294ov21201901;
extern T0* ge1294ov21201903;
extern T0* ge1294ov21201904;
extern T0* ge1294ov21201905;
extern T0* ge1294ov21201906;
extern T0* ge1294ov21201907;
extern T0* ge1294ov21201908;
extern T0* ge1294ov21201909;
extern T0* ge1294ov21201910;
extern T0* ge1294ov21201912;
extern T0* ge1294ov21201913;
extern T0* ge1294ov21201918;
extern T0* ge1294ov21201919;
extern T0* ge1294ov21201920;
extern T0* ge1294ov21201921;
extern T0* ge1294ov21201922;
extern T0* ge1294ov21201923;
extern T0* ge1294ov21201924;
extern T0* ge1294ov21201925;
extern T0* ge1294ov21201927;
extern T0* ge1294ov21201928;
extern T0* ge1294ov21201930;
extern T0* ge1525ov24986331;
extern T0* ge1525ov24986048;
extern T0* ge1525ov24985780;
extern T0* ge1383ov22659079;
extern T0* ge1390ov22773786;
extern T0* ge1379ov22593580;
extern T0* ge1294ov21201830;
extern T0* ge1294ov21201877;
extern T0* ge1294ov21201856;
extern T0* ge1294ov21201878;
extern T0* ge1294ov21201880;
extern T0* ge1294ov21201863;
extern T0* ge1294ov21201879;
extern T0* ge1294ov21201814;
extern T0* ge1294ov21201875;
extern T0* ge1294ov21201824;
extern T0* ge1294ov21201876;
extern T0* ge1525ov24986308;
extern T0* ge1525ov24986043;
extern T0* ge1525ov24985758;
extern T0* ge1525ov24986414;
extern T0* ge1525ov24986093;
extern T0* ge1525ov24985863;
extern T0* ge1525ov24986415;
extern T0* ge1525ov24985864;
extern T0* ge1525ov24986418;
extern T0* ge1525ov24986094;
extern T0* ge1525ov24985867;
extern T0* ge1525ov24986445;
extern T0* ge1525ov24986104;
extern T0* ge1525ov24985892;
extern T0* ge1294ov21201842;
extern T0* ge1525ov24986342;
extern T0* ge1525ov24986054;
extern T0* ge1525ov24985791;
extern T0* ge1525ov24986343;
extern T0* ge1525ov24986055;
extern T0* ge1525ov24985792;
extern T0* ge1294ov21201978;
extern T0* ge1294ov21201977;
extern T0* ge1294ov21201974;
extern T0* ge1294ov21201973;
extern T0* ge1321ov21643271;
extern T0* ge1294ov21201951;
extern T0* ge1294ov21201954;
extern T0* ge1294ov21201956;
extern T0* ge1294ov21201959;
extern T0* ge1294ov21201975;
extern T0* ge1294ov21201961;
extern T0* ge1294ov21201962;
extern T0* ge1294ov21201963;
extern T0* ge1294ov21201964;
extern T0* ge1294ov21201965;
extern T0* ge1294ov21201966;
extern T0* ge1294ov21201967;
extern T0* ge1294ov21201968;
extern T0* ge1294ov21201969;
extern T0* ge1294ov21201970;
extern T0* ge1294ov21201971;
extern T0* ge1294ov21201972;
extern T0* ge1294ov21201854;
extern T0* ge1525ov24986340;
extern T0* ge1525ov24985789;
extern T0* ge1525ov24986433;
extern T0* ge1525ov24986102;
extern T0* ge1525ov24985880;
extern T0* ge1294ov21201477;
extern T0* ge1294ov21201844;
extern T0* ge1525ov24986432;
extern T0* ge1525ov24986101;
extern T0* ge1525ov24985879;
extern T0* ge1525ov24986431;
extern T0* ge1525ov24985878;
extern T0* ge1525ov24986192;
extern T0* ge1525ov24985999;
extern T0* ge1525ov24985644;
extern T0* ge1294ov21201799;
extern T0* ge1525ov24986168;
extern T0* ge1525ov24985985;
extern T0* ge1525ov24985620;
extern T0* ge1525ov24986299;
extern T0* ge1525ov24986038;
extern T0* ge1525ov24985749;
extern T0* ge1525ov24986429;
extern T0* ge1525ov24986100;
extern T0* ge1525ov24985876;
extern T0* ge1525ov24986428;
extern T0* ge1525ov24985875;
extern T0* ge1525ov24986191;
extern T0* ge1525ov24985998;
extern T0* ge1525ov24985643;
extern T0* ge1294ov21201537;
extern T0* ge1525ov24986167;
extern T0* ge1525ov24985984;
extern T0* ge1525ov24985619;
extern T0* ge1525ov24986447;
extern T0* ge1525ov24986105;
extern T0* ge1525ov24985894;
extern T0* ge1525ov24986464;
extern T0* ge1525ov24986112;
extern T0* ge1525ov24985911;
extern T0* ge1525ov24986462;
extern T0* ge1525ov24986111;
extern T0* ge1525ov24985909;
extern T0* ge1294ov21201984;
extern T0* ge1294ov21201987;
extern T0* ge1525ov24986166;
extern T0* ge1525ov24985618;
extern T0* ge1525ov24986438;
extern T0* ge1525ov24986103;
extern T0* ge1525ov24985885;
extern T0* ge1525ov24986320;
extern T0* ge1525ov24986046;
extern T0* ge1525ov24985769;
extern T0* ge1525ov24986323;
extern T0* ge1525ov24985772;
extern T0* ge1525ov24986322;
extern T0* ge1525ov24985771;
extern T0* ge1525ov24986321;
extern T0* ge1525ov24985770;
extern T0* ge1525ov24986524;
extern T0* ge1525ov24986148;
extern T0* ge1525ov24985971;
extern T0* ge1525ov24986522;
extern T0* ge1525ov24985969;
extern T0* ge1525ov24986523;
extern T0* ge1525ov24985970;
extern T0* ge1525ov24986506;
extern T0* ge1525ov24986141;
extern T0* ge1525ov24985953;
extern T0* ge1525ov24986504;
extern T0* ge1525ov24985951;
extern T0* ge1525ov24986505;
extern T0* ge1525ov24985952;
extern T0* ge1525ov24986229;
extern T0* ge1525ov24986016;
extern T0* ge1525ov24985681;
extern T0* ge1525ov24986228;
extern T0* ge1525ov24985680;
extern T0* ge1525ov24986527;
extern T0* ge1525ov24986149;
extern T0* ge1525ov24985974;
extern T0* ge1525ov24986525;
extern T0* ge1525ov24985972;
extern T0* ge1525ov24986526;
extern T0* ge1525ov24985973;
extern T0* ge1525ov24986514;
extern T0* ge1525ov24986144;
extern T0* ge1525ov24985961;
extern T0* ge1525ov24986512;
extern T0* ge1525ov24985959;
extern T0* ge1525ov24986513;
extern T0* ge1525ov24985960;
extern T0* ge1525ov24986233;
extern T0* ge1525ov24986018;
extern T0* ge1525ov24985685;
extern T0* ge1525ov24986232;
extern T0* ge1525ov24985684;
extern T0* ge1525ov24986519;
extern T0* ge1525ov24986146;
extern T0* ge1525ov24985966;
extern T0* ge1525ov24986517;
extern T0* ge1525ov24985964;
extern T0* ge1525ov24986518;
extern T0* ge1525ov24985965;
extern T0* ge1525ov24986231;
extern T0* ge1525ov24986017;
extern T0* ge1525ov24985683;
extern T0* ge1525ov24986230;
extern T0* ge1525ov24985682;
extern T0* ge1525ov24986520;
extern T0* ge1525ov24986147;
extern T0* ge1525ov24985967;
extern T0* ge1525ov24986521;
extern T0* ge1525ov24985968;
extern T0* ge1525ov24986507;
extern T0* ge1525ov24986142;
extern T0* ge1525ov24985954;
extern T0* ge1525ov24986508;
extern T0* ge1525ov24985955;
extern T0* ge1525ov24986235;
extern T0* ge1525ov24986020;
extern T0* ge1525ov24985687;
extern T0* ge1525ov24986223;
extern T0* ge1525ov24986015;
extern T0* ge1525ov24985675;
extern T0* ge1525ov24986225;
extern T0* ge1525ov24985677;
extern T0* ge1525ov24986515;
extern T0* ge1525ov24986145;
extern T0* ge1525ov24985962;
extern T0* ge1525ov24986516;
extern T0* ge1525ov24985963;
extern T0* ge1525ov24986502;
extern T0* ge1525ov24986140;
extern T0* ge1525ov24985949;
extern T0* ge1525ov24986503;
extern T0* ge1525ov24985950;
extern T0* ge1525ov24986446;
extern T0* ge1525ov24985893;
extern T0* ge1525ov24986341;
extern T0* ge1525ov24985790;
extern T0* ge1525ov24986430;
extern T0* ge1525ov24985877;
extern T0* ge1525ov24986465;
extern T0* ge1525ov24985912;
extern T0* ge1525ov24986463;
extern T0* ge1525ov24985910;
extern T0* ge1526ov25002222;
extern T0* ge1526ov25002330;
extern T0* ge1526ov25002305;
extern T0* ge1526ov25002224;
extern T0* ge1526ov25002298;
extern T0* ge1526ov25002599;
extern T0* ge1526ov25002600;
extern T0* ge1526ov25002321;
extern T0* ge1526ov25002457;
extern T0* ge1526ov25002585;
extern T0* ge1526ov25002458;
extern T0* ge1526ov25002341;
extern T0* ge1526ov25002659;
extern T0* ge1526ov25002155;
extern T0* ge1526ov25002257;
extern T0* ge1526ov25002584;
extern T0* ge1526ov25002583;
extern T0* ge1526ov25002555;
extern T0* ge1526ov25002554;
extern T0* ge1526ov25002553;
extern T0* ge1526ov25002552;
extern T0* ge1526ov25002551;
extern T0* ge1526ov25002550;
extern T0* ge1526ov25002549;
extern T0* ge1526ov25002548;
extern T0* ge1526ov25002547;
extern T0* ge1526ov25002546;
extern T0* ge1526ov25002545;
extern T0* ge1526ov25002544;
extern T0* ge1526ov25002543;
extern T0* ge1526ov25002542;
extern T0* ge1526ov25002541;
extern T0* ge1526ov25002540;
extern T0* ge1526ov25002539;
extern T0* ge1526ov25002538;
extern T0* ge1526ov25002537;
extern T0* ge1526ov25002536;
extern T0* ge1526ov25002535;
extern T0* ge1526ov25002534;
extern T0* ge1526ov25002533;
extern T0* ge1526ov25002532;
extern T0* ge1526ov25002530;
extern T0* ge1526ov25002529;
extern T0* ge1526ov25002528;
extern T0* ge1526ov25002527;
extern T0* ge1526ov25002526;
extern T0* ge1526ov25002525;
extern T0* ge1526ov25002402;
extern T0* ge1526ov25002400;
extern T0* ge1526ov25002328;
extern T0* ge1526ov25002446;
extern T0* ge1526ov25002311;
extern T0* ge1526ov25002622;
extern T0* ge1526ov25002231;
extern T0* ge1526ov25002629;
extern T0* ge1526ov25002642;
extern T0* ge1526ov25002581;
extern T0* ge1526ov25002288;
extern T0* ge1526ov25002566;
extern T0* ge1526ov25002602;
extern T0* ge1526ov25002286;
extern T0* ge1526ov25002517;
extern T0* ge1526ov25002640;
extern T0* ge1526ov25002511;
extern T0* ge1526ov25002643;
extern T0* ge1526ov25002636;
extern T0* ge1526ov25002660;
extern T0* ge1526ov25002502;
extern T0* ge1526ov25002435;
extern T0* ge1526ov25002515;
extern T0* ge1526ov25002523;
extern T0* ge1526ov25002560;
extern T0* ge1526ov25002603;
extern T0* ge1526ov25002228;
extern T0* ge1526ov25002522;
extern T0* ge1526ov25002617;
extern T0* ge1526ov25002512;
extern T0* ge1526ov25002518;
extern T0* ge1526ov25002278;
extern T0* ge1526ov25002519;
extern T0* ge1526ov25002521;
extern T0* ge1526ov25002514;
extern T0* ge1526ov25002513;
extern T0* ge1526ov25002634;
extern T0* ge1526ov25002619;
extern T0* ge1526ov25002524;
extern T0* ge1526ov25002516;
extern T0* ge1526ov25002397;
extern T0* ge1526ov25002637;
extern T0* ge1526ov25002520;
extern T0* ge1526ov25002504;
extern T0* ge1526ov25002638;
extern T0* ge1526ov25002433;
extern T0* ge1526ov25002653;
extern T0* ge1526ov25002646;
extern T0* ge1526ov25002426;
extern T0* ge1526ov25002272;
extern T0* ge1526ov25002327;
extern T0* ge1294ov21201462;
extern T0* ge1526ov25002299;
extern T0* ge1526ov25002350;
extern T0* ge1526ov25002273;
extern T0* ge1526ov25002652;
extern T0* ge1526ov25002245;
extern T0* ge1526ov25002384;
extern T0* ge1526ov25002381;
extern T0* ge1526ov25002482;
extern T0* ge1526ov25002499;
extern T0* ge1526ov25002481;
extern T0* ge1526ov25002498;
extern T0* ge1526ov25002480;
extern T0* ge1526ov25002497;
extern T0* ge1526ov25002453;
extern T0* ge1526ov25002237;
extern T0* ge1526ov25002479;
extern T0* ge1526ov25002496;
extern T0* ge1526ov25002478;
extern T0* ge1526ov25002495;
extern T0* ge1526ov25002477;
extern T0* ge1526ov25002494;
extern T0* ge1526ov25002476;
extern T0* ge1526ov25002493;
extern T0* ge1526ov25002270;
extern T0* ge1526ov25002474;
extern T0* ge1526ov25002491;
extern T0* ge1526ov25002473;
extern T0* ge1526ov25002490;
extern T0* ge1526ov25002472;
extern T0* ge1526ov25002489;
extern T0* ge1526ov25002471;
extern T0* ge1526ov25002488;
extern T0* ge1526ov25002470;
extern T0* ge1526ov25002487;
extern T0* ge1526ov25002469;
extern T0* ge1526ov25002486;
extern T0* ge1526ov25002468;
extern T0* ge1526ov25002485;
extern T0* ge1526ov25002349;
extern T0* ge1526ov25002313;
extern T0* ge1526ov25002616;
extern T0* ge1526ov25002267;
extern T0* ge1526ov25002265;
extern T0* ge1526ov25002255;
extern T0* ge1526ov25002254;
extern T0* ge1526ov25002253;
extern T0* ge1526ov25002252;
extern T0* ge1526ov25002251;
extern T0* ge1526ov25002380;
extern T0* ge1526ov25002249;
extern T0* ge1526ov25002268;
extern T0* ge1526ov25002241;
extern T0* ge1526ov25002239;
extern T0* ge1526ov25002287;
extern T0* ge1526ov25002332;
extern T0* ge1526ov25002331;
extern T0* ge1526ov25002559;
extern T0* ge1526ov25002442;
extern T0* ge1526ov25002501;
extern T0* ge1526ov25002500;
extern T0* ge1526ov25002484;
extern T0* ge1526ov25002483;
extern T0* ge1526ov25002467;
extern T0* ge1526ov25002466;
extern T0* ge1526ov25002462;
extern T0* ge1526ov25002463;
extern T0* ge1526ov25002452;
extern T0* ge1526ov25002451;
extern T0* ge1526ov25002450;
extern T0* ge1526ov25002630;
extern T0* ge1526ov25002447;
extern T0* ge1526ov25002440;
extern T0* ge1526ov25002439;
extern T0* ge1526ov25002436;
extern T0* ge1526ov25002429;
extern T0* ge1526ov25002425;
extern T0* ge1526ov25002424;
extern T0* ge1526ov25002423;
extern T0* ge1526ov25002422;
extern T0* ge1526ov25002421;
extern T0* ge1526ov25002420;
extern T0* ge1526ov25002419;
extern T0* ge1526ov25002418;
extern T0* ge1526ov25002394;
extern T0* ge1526ov25002395;
extern T0* ge1526ov25002391;
extern T0* ge1526ov25002393;
extern T0* ge1526ov25002392;
extern T0* ge1526ov25002390;
extern T0* ge1526ov25002388;
extern T0* ge1526ov25002389;
extern T0* ge1526ov25002387;
extern T0* ge1526ov25002386;
extern T0* ge1526ov25002385;
extern T0* ge1526ov25002383;
extern T0* ge1526ov25002382;
extern T0* ge1526ov25002379;
extern T0* ge1526ov25002378;
extern T0* ge1526ov25002377;
extern T0* ge1526ov25002376;
extern T0* ge1526ov25002375;
extern T0* ge1526ov25002374;
extern T0* ge1526ov25002373;
extern T0* ge1526ov25002372;
extern T0* ge1526ov25002355;
extern T0* ge1526ov25002353;
extern T0* ge1526ov25002352;
extern T0* ge1526ov25002351;
extern T0* ge1526ov25002348;
extern T0* ge1526ov25002347;
extern T0* ge1526ov25002346;
extern T0* ge1526ov25002345;
extern T0* ge1526ov25002344;
extern T0* ge1526ov25002354;
extern T0* ge1526ov25002444;
extern T0* ge1526ov25002443;
extern T0* ge1526ov25002441;
extern T0* ge1526ov25002319;
extern T0* ge1526ov25002318;
extern T0* ge1526ov25002317;
extern T0* ge1526ov25002316;
extern T0* ge1526ov25002315;
extern T0* ge1526ov25002314;
extern T0* ge1526ov25002297;
extern T0* ge1526ov25002296;
extern T0* ge1526ov25002294;
extern T0* ge1526ov25002445;
extern T0* ge1526ov25002359;
extern T0* ge1526ov25002307;
extern T0* ge1526ov25002306;
extern T0* ge1526ov25002310;
extern T0* ge1526ov25002309;
extern T0* ge1526ov25002308;
extern T0* ge1526ov25002312;
extern T0* ge1526ov25002396;
extern T0* ge1526ov25002293;
extern T0* ge1526ov25002292;
extern T0* ge1526ov25002621;
extern T0* ge1526ov25002475;
extern T0* ge1526ov25002492;
extern T0* ge1526ov25002406;
extern T0* ge1526ov25002405;
extern T0* ge1526ov25002582;
extern T0* ge1526ov25002326;
extern T0* ge1526ov25002650;
extern T0* ge1526ov25002456;
extern T0* ge1526ov25002658;
extern T0* ge1294ov21201983;
extern T0* ge1294ov21201986;
extern T0* ge1288ov21102601;
extern T0* ge1294ov21201985;
extern T0* ge1288ov21102602;
extern T0* ge1526ov25002631;
extern T0* ge1520ov24903688;
extern T0* ge1520ov24903685;
extern T0* ge1520ov24903682;
extern T0* ge1294ov21201789;
extern T0* ge1520ov24903689;
extern T0* ge1520ov24903686;
extern T0* ge1520ov24903683;
extern T0* ge1526ov25002620;
extern T0* ge1526ov25002647;
extern T0* ge1526ov25002230;
extern T0* ge1526ov25002226;
extern T0* ge1294ov21201825;
extern T0* ge1525ov24986163;
extern T0* ge1525ov24985981;
extern T0* ge1525ov24985615;
extern T0* ge1525ov24986162;
extern T0* ge1525ov24985614;
extern T0* ge1525ov24986161;
extern T0* ge1525ov24985613;
extern T0* ge1525ov24986160;
extern T0* ge1525ov24985612;
extern T0* ge1525ov24986159;
extern T0* ge1525ov24985611;
extern T0* ge1525ov24986158;
extern T0* ge1525ov24985610;
extern T0* ge1525ov24986157;
extern T0* ge1525ov24985980;
extern T0* ge1525ov24985609;
extern T0* ge1525ov24986164;
extern T0* ge1525ov24985982;
extern T0* ge1525ov24985616;
extern T0* ge1526ov25002508;
extern T0* ge1526ov25002639;
extern T0* ge1526ov25002434;
extern T0* ge1526ov25002506;
extern T0* ge1526ov25002509;
extern T0* ge1525ov24986472;
extern T0* ge1525ov24986116;
extern T0* ge1525ov24985919;
extern T0* ge1525ov24986170;
extern T0* ge1525ov24985986;
extern T0* ge1525ov24985622;
extern T0* ge1525ov24986365;
extern T0* ge1525ov24986068;
extern T0* ge1525ov24985814;
extern T0* ge1525ov24986364;
extern T0* ge1525ov24985813;
extern T0* ge1525ov24986363;
extern T0* ge1525ov24985812;
extern T0* ge1525ov24986362;
extern T0* ge1525ov24985811;
extern T0* ge1525ov24986361;
extern T0* ge1525ov24985810;
extern T0* ge1525ov24986360;
extern T0* ge1525ov24986067;
extern T0* ge1525ov24985809;
extern T0* ge1526ov25002661;
extern T0* ge1526ov25002338;
extern T0* ge1526ov25002461;
extern T0* ge1526ov25002342;
extern T0* ge1526ov25002606;
extern T0* ge1294ov21201846;
extern T0* ge1294ov21201870;
extern T0* ge1526ov25002335;
extern T0* ge1294ov21201791;
extern T0* ge1525ov24986449;
extern T0* ge1525ov24986107;
extern T0* ge1525ov24985896;
extern T0* ge1294ov21201981;
extern T0* ge1294ov21201980;
extern T0* ge1525ov24986450;
extern T0* ge1525ov24985897;
extern T0* ge1525ov24986448;
extern T0* ge1525ov24986106;
extern T0* ge1525ov24985895;
extern T0* ge1525ov24986187;
extern T0* ge1525ov24985997;
extern T0* ge1525ov24985639;
extern T0* ge1294ov21201481;
extern T0* ge1525ov24986186;
extern T0* ge1525ov24985638;
extern T0* ge1525ov24986185;
extern T0* ge1525ov24985996;
extern T0* ge1525ov24985637;
extern T0* ge1525ov24986442;
extern T0* ge1525ov24985889;
extern T0* ge1525ov24986189;
extern T0* ge1525ov24985641;
extern T0* ge1525ov24986190;
extern T0* ge1525ov24985642;
extern T0* ge1525ov24986183;
extern T0* ge1525ov24985995;
extern T0* ge1525ov24985635;
extern T0* ge1294ov21201822;
extern T0* ge1294ov21201866;
extern T0* ge1294ov21201841;
extern T0* ge1525ov24986368;
extern T0* ge1525ov24986071;
extern T0* ge1525ov24985817;
extern T0* ge1525ov24986369;
extern T0* ge1525ov24985818;
extern T0* ge1525ov24986367;
extern T0* ge1525ov24986070;
extern T0* ge1525ov24985816;
extern T0* ge1526ov25002416;
extern T0* ge1526ov25002234;
extern T0* ge1526ov25002343;
extern T0* ge1526ov25002368;
extern T0* ge1526ov25002369;
extern T0* ge1526ov25002403;
extern T0* ge1526ov25002370;
extern T0* ge1526ov25002303;
extern T0* ge1526ov25002404;
extern T0* ge1526ov25002371;
extern T0* ge1526ov25002414;
extern T0* ge1526ov25002415;
extern T0* ge1526ov25002304;
extern T0* ge1526ov25002417;
extern T0* ge1294ov21201827;
extern T0* ge1294ov21201837;
extern T0* ge1525ov24986346;
extern T0* ge1525ov24986057;
extern T0* ge1525ov24985795;
extern T0* ge1525ov24986300;
extern T0* ge1525ov24985750;
extern T0* ge1525ov24986169;
extern T0* ge1525ov24985621;
extern T0* ge1525ov24986301;
extern T0* ge1525ov24986039;
extern T0* ge1525ov24985751;
extern T0* ge1525ov24986294;
extern T0* ge1525ov24986035;
extern T0* ge1525ov24985744;
extern T0* ge1525ov24986296;
extern T0* ge1525ov24986037;
extern T0* ge1525ov24985746;
extern T0* ge1525ov24986420;
extern T0* ge1525ov24986096;
extern T0* ge1525ov24985869;
extern T0* ge1525ov24986421;
extern T0* ge1525ov24985870;
extern T0* ge1525ov24986295;
extern T0* ge1525ov24986036;
extern T0* ge1525ov24985745;
extern T0* ge1525ov24986437;
extern T0* ge1525ov24985884;
extern T0* ge1525ov24986336;
extern T0* ge1525ov24986052;
extern T0* ge1525ov24985785;
extern T0* ge1525ov24986219;
extern T0* ge1525ov24986014;
extern T0* ge1525ov24985671;
extern T0* ge1525ov24986220;
extern T0* ge1525ov24985672;
extern T0* ge1525ov24986337;
extern T0* ge1525ov24985786;
extern T0* ge1525ov24986338;
extern T0* ge1525ov24985787;
extern T0* ge1525ov24986221;
extern T0* ge1525ov24985673;
extern T0* ge1525ov24986227;
extern T0* ge1525ov24985679;
extern T0* ge1294ov21201819;
extern T0* ge1294ov21201835;
extern T0* ge1525ov24986339;
extern T0* ge1525ov24986053;
extern T0* ge1525ov24985788;
extern T0* ge1526ov25002275;
extern T0* ge1525ov24986335;
extern T0* ge1525ov24986051;
extern T0* ge1525ov24985784;
extern T0* ge1525ov24986334;
extern T0* ge1525ov24985783;
extern T0* ge1525ov24986434;
extern T0* ge1525ov24985881;
extern T0* ge1525ov24986171;
extern T0* ge1525ov24985987;
extern T0* ge1525ov24985623;
extern T0* ge1525ov24986172;
extern T0* ge1525ov24985988;
extern T0* ge1525ov24985624;
extern T0* ge1525ov24986325;
extern T0* ge1525ov24985774;
extern T0* ge1525ov24986324;
extern T0* ge1525ov24985773;
extern T0* ge1294ov21201861;
extern T0* ge1525ov24986485;
extern T0* ge1525ov24986124;
extern T0* ge1525ov24985932;
extern T0* ge1526ov25002608;
extern T0* ge1526ov25002651;
extern T0* ge1526ov25002281;
extern T0* ge1526ov25002284;
extern T0* ge1526ov25002601;
extern T0* ge1526ov25002503;
extern T0* ge1525ov24986298;
extern T0* ge1525ov24985748;
extern T0* ge1525ov24986487;
extern T0* ge1525ov24986127;
extern T0* ge1525ov24985934;
extern T0* ge1525ov24986419;
extern T0* ge1525ov24986095;
extern T0* ge1525ov24985868;
extern T0* ge1525ov24986500;
extern T0* ge1525ov24986139;
extern T0* ge1525ov24985947;
extern T0* ge1525ov24986501;
extern T0* ge1525ov24985948;
extern T0* ge1525ov24986427;
extern T0* ge1525ov24986099;
extern T0* ge1525ov24985874;
extern T0* ge1525ov24986426;
extern T0* ge1525ov24986098;
extern T0* ge1525ov24985873;
extern T0* ge1525ov24986422;
extern T0* ge1525ov24986097;
extern T0* ge1525ov24985871;
extern T0* ge1525ov24986416;
extern T0* ge1525ov24985865;
extern T0* ge1525ov24986528;
extern T0* ge1525ov24986150;
extern T0* ge1525ov24985975;
extern T0* ge1525ov24986478;
extern T0* ge1525ov24986121;
extern T0* ge1525ov24985925;
extern T0* ge1525ov24986529;
extern T0* ge1525ov24985976;
extern T0* ge1525ov24986480;
extern T0* ge1525ov24985927;
extern T0* ge1525ov24986366;
extern T0* ge1525ov24986069;
extern T0* ge1525ov24985815;
extern T0* ge1294ov21201864;
extern T0* ge1294ov21201809;
extern T0* ge1525ov24986461;
extern T0* ge1525ov24986110;
extern T0* ge1525ov24985908;
extern T0* ge1525ov24986460;
extern T0* ge1525ov24985907;
extern T0* ge1525ov24986456;
extern T0* ge1525ov24986108;
extern T0* ge1525ov24985903;
extern T0* ge1525ov24986455;
extern T0* ge1525ov24985902;
extern T0* ge1525ov24986454;
extern T0* ge1525ov24985901;
extern T0* ge1525ov24986453;
extern T0* ge1525ov24985900;
extern T0* ge1525ov24986452;
extern T0* ge1525ov24985899;
extern T0* ge1525ov24986451;
extern T0* ge1525ov24985898;
extern T0* ge1525ov24986457;
extern T0* ge1525ov24985904;
extern T0* ge1525ov24986234;
extern T0* ge1525ov24986019;
extern T0* ge1525ov24985686;
extern T0* ge1525ov24986439;
extern T0* ge1525ov24985886;
extern T0* ge1526ov25002618;
extern T0* ge1525ov24986344;
extern T0* ge1525ov24985793;
extern T0* ge1525ov24986511;
extern T0* ge1525ov24986143;
extern T0* ge1525ov24985958;
extern T0* ge1525ov24986509;
extern T0* ge1525ov24985956;
extern T0* ge1525ov24986510;
extern T0* ge1525ov24985957;
extern T0* ge1294ov21201808;
extern T0* ge1294ov21201832;
extern T0* ge1525ov24986390;
extern T0* ge1525ov24986078;
extern T0* ge1525ov24985839;
extern T0* ge1525ov24986378;
extern T0* ge1525ov24986076;
extern T0* ge1525ov24985827;
extern T0* ge1525ov24986377;
extern T0* ge1525ov24985826;
extern T0* ge1525ov24986376;
extern T0* ge1525ov24986075;
extern T0* ge1525ov24985825;
extern T0* ge1525ov24986375;
extern T0* ge1525ov24985824;
extern T0* ge1525ov24986374;
extern T0* ge1525ov24986074;
extern T0* ge1525ov24985823;
extern T0* ge1525ov24986373;
extern T0* ge1525ov24985822;
extern T0* ge1525ov24986459;
extern T0* ge1525ov24986109;
extern T0* ge1525ov24985906;
extern T0* ge1525ov24986387;
extern T0* ge1525ov24986077;
extern T0* ge1525ov24985836;
extern T0* ge1525ov24986385;
extern T0* ge1525ov24985834;
extern T0* ge1525ov24986383;
extern T0* ge1525ov24985832;
extern T0* ge1525ov24986380;
extern T0* ge1525ov24985829;
extern T0* ge1525ov24986379;
extern T0* ge1525ov24985828;
extern T0* ge1525ov24986407;
extern T0* ge1525ov24986088;
extern T0* ge1525ov24985856;
extern T0* ge1525ov24986402;
extern T0* ge1525ov24986086;
extern T0* ge1525ov24985851;
extern T0* ge1525ov24986443;
extern T0* ge1525ov24985890;
extern T0* ge1294ov21201851;
extern T0* ge1525ov24986389;
extern T0* ge1525ov24985838;
extern T0* ge1525ov24986469;
extern T0* ge1525ov24986114;
extern T0* ge1525ov24985916;
extern T0* ge1525ov24986467;
extern T0* ge1525ov24986113;
extern T0* ge1525ov24985914;
extern T0* ge957ov15974402;
extern T0* ge1525ov24986466;
extern T0* ge1525ov24985913;
extern T0* ge1525ov24986470;
extern T0* ge1525ov24985917;
extern T0* ge1525ov24986468;
extern T0* ge1525ov24985915;
extern T0* ge1525ov24986388;
extern T0* ge1525ov24985837;
extern T0* ge1525ov24986386;
extern T0* ge1525ov24985835;
extern T0* ge1525ov24986384;
extern T0* ge1525ov24985833;
extern T0* ge1525ov24986382;
extern T0* ge1525ov24985831;
extern T0* ge1525ov24986381;
extern T0* ge1525ov24985830;
extern T0* ge1525ov24986411;
extern T0* ge1525ov24986091;
extern T0* ge1525ov24985860;
extern T0* ge1525ov24986413;
extern T0* ge1525ov24986092;
extern T0* ge1525ov24985862;
extern T0* ge1525ov24986403;
extern T0* ge1525ov24985852;
extern T0* ge1526ov25002505;
extern T0* ge1526ov25002655;
extern T0* ge1526ov25002227;
extern T0* ge1526ov25002649;
extern T0* ge1526ov25002336;
extern T0* ge1526ov25002339;
extern T0* ge1526ov25002413;
extern T0* ge1526ov25002455;
extern T0* ge1526ov25002624;
extern T0* ge1526ov25002644;
extern T0* ge1526ov25002635;
extern T0* ge1526ov25002283;
extern T0* ge1526ov25002399;
extern T0* ge1526ov25002340;
extern T0* ge1526ov25002454;
extern T0* ge1526ov25002607;
extern T0* ge1526ov25002291;
extern T0* ge1526ov25002645;
extern T0* ge1525ov24986238;
extern T0* ge1525ov24985690;
extern T0* ge1294ov21201807;
extern T0* ge1525ov24986326;
extern T0* ge1525ov24985775;
extern T0* ge1525ov24986371;
extern T0* ge1525ov24986072;
extern T0* ge1525ov24985820;
extern T0* ge1525ov24986372;
extern T0* ge1525ov24986073;
extern T0* ge1525ov24985821;
extern T0* ge1294ov21201802;
extern T0* ge1525ov24986370;
extern T0* ge1525ov24985819;
extern T0* ge1525ov24986444;
extern T0* ge1525ov24985891;
extern T0* ge1525ov24986484;
extern T0* ge1525ov24986123;
extern T0* ge1525ov24985931;
extern T0* ge1525ov24986482;
extern T0* ge1525ov24986122;
extern T0* ge1525ov24985929;
extern T0* ge1526ov25002408;
extern T0* ge1525ov24986477;
extern T0* ge1525ov24986120;
extern T0* ge1525ov24985924;
extern T0* ge1525ov24986476;
extern T0* ge1525ov24986119;
extern T0* ge1525ov24985923;
extern T0* ge1526ov25002401;
extern T0* ge1526ov25002611;
extern T0* ge1526ov25002295;
extern T0* ge1525ov24986165;
extern T0* ge1525ov24985983;
extern T0* ge1525ov24985617;
extern T0* ge1526ov25002459;
extern T0* ge1525ov24986475;
extern T0* ge1525ov24986118;
extern T0* ge1525ov24985922;
extern T0* ge1294ov21201622;
extern T0* ge1526ov25002625;
extern T0* ge1526ov25002626;
extern T0* ge1526ov25002280;
extern T0* ge1525ov24986474;
extern T0* ge1525ov24985921;
extern T0* ge1525ov24986222;
extern T0* ge1525ov24985678;
extern T0* ge1525ov24986224;
extern T0* ge1525ov24985676;
extern T0* ge1525ov24985674;
extern T0* ge1525ov24986441;
extern T0* ge1525ov24985888;
extern T0* ge1525ov24986184;
extern T0* ge1525ov24985636;
extern T0* ge1294ov21201826;
extern T0* ge1525ov24986345;
extern T0* ge1525ov24986056;
extern T0* ge1525ov24985794;
extern T0* ge1294ov21201817;
extern T0* ge1525ov24986440;
extern T0* ge1525ov24985887;
extern T0* ge1525ov24986236;
extern T0* ge1525ov24985688;
extern T0* ge1294ov21201800;
extern T0* ge1294ov21201804;
extern T0* ge1294ov21201803;
extern T0* ge1525ov24986479;
extern T0* ge1525ov24985926;
extern T0* ge1526ov25002334;
extern T0* ge1294ov21201849;
extern T0* ge1294ov21201843;
extern T0* ge1294ov21201979;
extern T0* ge1525ov24986491;
extern T0* ge1525ov24986131;
extern T0* ge1525ov24985938;
extern T0* ge1294ov21201469;
extern T0* ge1294ov21201949;
extern T0* ge1525ov24986490;
extern T0* ge1525ov24986130;
extern T0* ge1525ov24985937;
extern T0* ge1294ov21201788;
extern T0* ge1294ov21201787;
extern T0* ge1294ov21201786;
extern T0* ge1294ov21201780;
extern T0* ge1294ov21201716;
extern T0* ge1294ov21201699;
extern T0* ge1294ov21201697;
extern T0* ge1294ov21201691;
extern T0* ge1294ov21201689;
extern T0* ge1294ov21201688;
extern T0* ge1294ov21201659;
extern T0* ge1294ov21201633;
extern T0* ge1294ov21201631;
extern T0* ge1294ov21201630;
extern T0* ge1294ov21201628;
extern T0* ge1294ov21201593;
extern T0* ge1294ov21201592;
extern T0* ge1294ov21201591;
extern T0* ge1294ov21201590;
extern T0* ge1294ov21201589;
extern T0* ge1294ov21201588;
extern T0* ge1294ov21201587;
extern T0* ge1294ov21201586;
extern T0* ge1294ov21201571;
extern T0* ge1294ov21201570;
extern T0* ge1294ov21201515;
extern T0* ge1294ov21201514;
extern T0* ge1294ov21201468;
extern T0* ge1294ov21201751;
extern T0* ge1294ov21201696;
extern T0* ge1294ov21201676;
extern T0* ge1294ov21201661;
extern T0* ge1294ov21201649;
extern T0* ge1294ov21201948;
extern T0* ge1294ov21201461;
extern T0* ge1294ov21201945;
extern T0* ge1294ov21201460;
extern T0* ge1294ov21201944;
extern T0* ge1294ov21201459;
extern T0* ge1294ov21201943;
extern T0* ge1294ov21201458;
extern T0* ge1294ov21201942;
extern T0* ge1294ov21201449;
extern T0* ge1294ov21201940;
extern T0* ge1294ov21201448;
extern T0* ge1294ov21201939;
extern T0* ge1294ov21201447;
extern T0* ge1294ov21201938;
extern T0* ge1294ov21201785;
extern T0* ge1294ov21201784;
extern T0* ge1294ov21201783;
extern T0* ge1294ov21201779;
extern T0* ge1294ov21201778;
extern T0* ge1294ov21201612;
extern T0* ge1294ov21201611;
extern T0* ge1294ov21201502;
extern T0* ge1294ov21201501;
extern T0* ge1294ov21201500;
extern T0* ge1294ov21201499;
extern T0* ge1294ov21201498;
extern T0* ge1294ov21201497;
extern T0* ge1294ov21201493;
extern T0* ge1294ov21201492;
extern T0* ge1294ov21201491;
extern T0* ge1294ov21201490;
extern T0* ge1294ov21201489;
extern T0* ge1294ov21201488;
extern T0* ge1294ov21201487;
extern T0* ge1294ov21201486;
extern T0* ge1294ov21201446;
extern T0* ge1294ov21201937;
extern T0* ge1294ov21201760;
extern T0* ge1294ov21201714;
extern T0* ge1294ov21201713;
extern T0* ge1294ov21201712;
extern T0* ge1294ov21201711;
extern T0* ge1294ov21201710;
extern T0* ge1294ov21201709;
extern T0* ge1294ov21201708;
extern T0* ge1294ov21201707;
extern T0* ge1294ov21201706;
extern T0* ge1294ov21201705;
extern T0* ge1294ov21201704;
extern T0* ge1294ov21201703;
extern T0* ge1294ov21201702;
extern T0* ge1294ov21201701;
extern T0* ge1294ov21201725;
extern T0* ge1294ov21201722;
extern T0* ge1294ov21201695;
extern T0* ge1294ov21201684;
extern T0* ge1294ov21201674;
extern T0* ge1294ov21201671;
extern T0* ge1294ov21201667;
extern T0* ge1294ov21201664;
extern T0* ge1294ov21201650;
extern T0* ge1294ov21201609;
extern T0* ge1294ov21201606;
extern T0* ge1294ov21201603;
extern T0* ge1294ov21201600;
extern T0* ge1294ov21201532;
extern T0* ge1294ov21201521;
extern T0* ge1294ov21201518;
extern T0* ge1294ov21201506;
extern T0* ge1294ov21201558;
extern T0* ge1294ov21201441;
extern T0* ge1294ov21201557;
extern T0* ge1294ov21201508;
extern T0* ge1294ov21201466;
extern T0* ge1294ov21201798;
extern T0* ge1294ov21201726;
extern T0* ge1294ov21201692;
extern T0* ge1294ov21201648;
extern T0* ge1294ov21201647;
extern T0* ge1294ov21201646;
extern T0* ge1294ov21201645;
extern T0* ge1294ov21201642;
extern T0* ge1294ov21201635;
extern T0* ge1294ov21201629;
extern T0* ge1294ov21201621;
extern T0* ge1294ov21201613;
extern T0* ge1294ov21201610;
extern T0* ge1294ov21201544;
extern T0* ge1294ov21201522;
extern T0* ge1294ov21201503;
extern T0* ge1294ov21201463;
extern T0* ge1294ov21201796;
extern T0* ge1294ov21201795;
extern T0* ge1294ov21201770;
extern T0* ge1294ov21201769;
extern T0* ge1294ov21201768;
extern T0* ge1294ov21201767;
extern T0* ge1294ov21201766;
extern T0* ge1294ov21201765;
extern T0* ge1294ov21201764;
extern T0* ge1294ov21201763;
extern T0* ge1294ov21201762;
extern T0* ge1294ov21201759;
extern T0* ge1294ov21201758;
extern T0* ge1294ov21201757;
extern T0* ge1294ov21201756;
extern T0* ge1294ov21201755;
extern T0* ge1294ov21201754;
extern T0* ge1294ov21201753;
extern T0* ge1294ov21201752;
extern T0* ge1294ov21201749;
extern T0* ge1294ov21201748;
extern T0* ge1294ov21201747;
extern T0* ge1294ov21201746;
extern T0* ge1294ov21201745;
extern T0* ge1294ov21201744;
extern T0* ge1294ov21201743;
extern T0* ge1294ov21201742;
extern T0* ge1294ov21201739;
extern T0* ge1294ov21201738;
extern T0* ge1294ov21201737;
extern T0* ge1294ov21201736;
extern T0* ge1294ov21201735;
extern T0* ge1294ov21201734;
extern T0* ge1294ov21201657;
extern T0* ge1294ov21201653;
extern T0* ge1294ov21201792;
extern T0* ge1294ov21201790;
extern T0* ge1294ov21201775;
extern T0* ge1294ov21201729;
extern T0* ge1294ov21201728;
extern T0* ge1294ov21201727;
extern T0* ge1294ov21201724;
extern T0* ge1294ov21201723;
extern T0* ge1294ov21201721;
extern T0* ge1294ov21201720;
extern T0* ge1294ov21201719;
extern T0* ge1294ov21201718;
extern T0* ge1294ov21201698;
extern T0* ge1294ov21201694;
extern T0* ge1294ov21201693;
extern T0* ge1294ov21201690;
extern T0* ge1294ov21201686;
extern T0* ge1294ov21201685;
extern T0* ge1294ov21201683;
extern T0* ge1294ov21201682;
extern T0* ge1294ov21201681;
extern T0* ge1294ov21201679;
extern T0* ge1294ov21201673;
extern T0* ge1294ov21201672;
extern T0* ge1294ov21201670;
extern T0* ge1294ov21201669;
extern T0* ge1294ov21201666;
extern T0* ge1294ov21201665;
extern T0* ge1294ov21201663;
extern T0* ge1294ov21201662;
extern T0* ge1294ov21201644;
extern T0* ge1294ov21201643;
extern T0* ge1294ov21201641;
extern T0* ge1294ov21201640;
extern T0* ge1294ov21201639;
extern T0* ge1294ov21201638;
extern T0* ge1294ov21201637;
extern T0* ge1294ov21201636;
extern T0* ge1294ov21201632;
extern T0* ge1294ov21201625;
extern T0* ge1294ov21201624;
extern T0* ge1294ov21201623;
extern T0* ge1294ov21201617;
extern T0* ge1294ov21201615;
extern T0* ge1294ov21201608;
extern T0* ge1294ov21201607;
extern T0* ge1294ov21201605;
extern T0* ge1294ov21201604;
extern T0* ge1294ov21201602;
extern T0* ge1294ov21201601;
extern T0* ge1294ov21201599;
extern T0* ge1294ov21201598;
extern T0* ge1294ov21201596;
extern T0* ge1294ov21201580;
extern T0* ge1294ov21201579;
extern T0* ge1294ov21201578;
extern T0* ge1294ov21201576;
extern T0* ge1294ov21201575;
extern T0* ge1294ov21201568;
extern T0* ge1294ov21201566;
extern T0* ge1294ov21201564;
extern T0* ge1294ov21201563;
extern T0* ge1294ov21201561;
extern T0* ge1294ov21201548;
extern T0* ge1294ov21201546;
extern T0* ge1294ov21201545;
extern T0* ge1294ov21201538;
extern T0* ge1294ov21201527;
extern T0* ge1294ov21201524;
extern T0* ge1294ov21201520;
extern T0* ge1294ov21201519;
extern T0* ge1294ov21201517;
extern T0* ge1294ov21201516;
extern T0* ge1294ov21201505;
extern T0* ge1294ov21201504;
extern T0* ge1294ov21201494;
extern T0* ge1294ov21201452;
extern T0* ge1294ov21201552;
extern T0* ge1294ov21201551;
extern T0* ge1294ov21201550;
extern T0* ge1294ov21201549;
extern T0* ge1294ov21201547;
extern T0* ge1294ov21201442;
extern T0* ge1294ov21201539;
extern T0* ge1294ov21201451;
extern T0* ge1294ov21201555;
extern T0* ge1294ov21201440;
extern T0* ge1294ov21201750;
extern T0* ge1294ov21201717;
extern T0* ge1294ov21201594;
extern T0* ge1294ov21201510;
extern T0* ge1294ov21201793;
extern T0* ge1294ov21201651;
extern T0* ge1294ov21201634;
extern T0* ge1294ov21201627;
extern T0* ge1294ov21201626;
extern T0* ge1294ov21201616;
extern T0* ge1294ov21201554;
extern T0* ge1294ov21201439;
extern T0* ge1294ov21201573;
extern T0* ge1294ov21201569;
extern T0* ge1294ov21201455;
extern T0* ge1294ov21201534;
extern T0* ge1294ov21201533;
extern T0* ge1294ov21201523;
extern T0* ge1294ov21201513;
extern T0* ge1294ov21201512;
extern T0* ge1294ov21201511;
extern T0* ge1294ov21201507;
extern T0* ge1294ov21201435;
extern T0* ge1294ov21201585;
extern T0* ge1294ov21201584;
extern T0* ge1294ov21201485;
extern T0* ge1294ov21201429;
extern T0* ge1294ov21201781;
extern T0* ge1294ov21201619;
extern T0* ge1294ov21201583;
extern T0* ge1294ov21201464;
extern T0* ge1294ov21201946;
extern T0* ge1294ov21201675;
extern T0* ge1294ov21201595;
extern T0* ge1294ov21201542;
extern T0* ge1294ov21201541;
extern T0* ge1294ov21201540;
extern T0* ge1294ov21201530;
extern T0* ge1294ov21201529;
extern T0* ge1294ov21201431;
extern T0* ge1294ov21201931;
extern T0* ge1294ov21201434;
extern T0* ge1294ov21201934;
extern T0* ge1294ov21201668;
extern T0* ge1294ov21201526;
extern T0* ge1294ov21201433;
extern T0* ge1294ov21201933;
extern T0* ge1294ov21201740;
extern T0* ge1294ov21201700;
extern T0* ge1294ov21201656;
extern T0* ge1294ov21201556;
extern T0* ge1294ov21201553;
extern T0* ge1294ov21201509;
extern T0* ge1294ov21201495;
extern T0* ge1294ov21201483;
extern T0* ge1294ov21201471;
extern T0* ge1294ov21201732;
extern T0* ge1294ov21201620;
extern T0* ge1294ov21201614;
extern T0* ge1294ov21201582;
extern T0* ge1294ov21201581;
extern T0* ge1294ov21201536;
extern T0* ge1294ov21201478;
extern T0* ge1294ov21201772;
extern T0* ge1294ov21201531;
extern T0* ge1294ov21201776;
extern T0* ge1294ov21201774;
extern T0* ge1294ov21201773;
extern T0* ge1294ov21201733;
extern T0* ge1294ov21201618;
extern T0* ge1294ov21201577;
extern T0* ge1294ov21201574;
extern T0* ge1294ov21201535;
extern T0* ge1294ov21201528;
extern T0* ge1294ov21201428;
extern T0* ge1526ov25002322;
extern T0* ge1526ov25002300;
extern T0* ge1526ov25002648;
extern T0* ge1526ov25002628;
extern T0* ge1526ov25002229;
extern T0* ge1526ov25002666;
extern T0* ge1526ov25002258;
extern T0* ge1526ov25002623;
extern T0* ge1526ov25002633;
extern T0* ge1526ov25002290;
extern T0* ge1526ov25002282;
extern T0* ge1525ov24986458;
extern T0* ge1525ov24985905;
extern T0* ge1526ov25002432;
extern T0* ge1526ov25002411;
extern T0* ge1526ov25002412;
extern T0* ge1526ov25002460;
extern T0* ge1526ov25002448;
extern T0* ge1525ov24986436;
extern T0* ge1525ov24985883;
extern T0* ge1525ov24986408;
extern T0* ge1525ov24986089;
extern T0* ge1525ov24985857;
extern T0* ge1525ov24986409;
extern T0* ge1525ov24986090;
extern T0* ge1525ov24985858;
extern T0* ge1525ov24986405;
extern T0* ge1525ov24986087;
extern T0* ge1525ov24985854;
extern T0* ge1525ov24986293;
extern T0* ge1525ov24986032;
extern T0* ge1525ov24985743;
extern T0* ge1525ov24986237;
extern T0* ge1525ov24985689;
extern T0* ge1294ov21201869;
extern T0* ge1525ov24986399;
extern T0* ge1525ov24986085;
extern T0* ge1525ov24985848;
extern T0* ge1525ov24986397;
extern T0* ge1525ov24986083;
extern T0* ge1525ov24985846;
extern T0* ge1525ov24986398;
extern T0* ge1525ov24985847;
extern T0* ge1525ov24986530;
extern T0* ge1525ov24985977;
extern T0* ge1525ov24986481;
extern T0* ge1525ov24985928;
extern T0* ge1525ov24986396;
extern T0* ge1525ov24986082;
extern T0* ge1525ov24985845;
extern T0* ge1525ov24986394;
extern T0* ge1525ov24986081;
extern T0* ge1525ov24985843;
extern T0* ge1525ov24986395;
extern T0* ge1525ov24985844;
extern T0* ge1525ov24986392;
extern T0* ge1525ov24986080;
extern T0* ge1525ov24985841;
extern T0* ge1525ov24986393;
extern T0* ge1525ov24985842;
extern T0* ge1525ov24986391;
extern T0* ge1525ov24986079;
extern T0* ge1525ov24985840;
extern T0* ge1525ov24986156;
extern T0* ge1525ov24985979;
extern T0* ge1525ov24985608;
extern T0* ge1525ov24986154;
extern T0* ge1525ov24985606;
extern T0* ge1525ov24986155;
extern T0* ge1525ov24985607;
extern T0* ge1525ov24986153;
extern T0* ge1525ov24985605;
extern T0* ge1525ov24986435;
extern T0* ge1525ov24985882;
extern T0* ge1525ov24986471;
extern T0* ge1525ov24986115;
extern T0* ge1525ov24985918;
extern T0* ge1525ov24986239;
extern T0* ge1525ov24985691;
extern T0* ge1526ov25002407;
extern T0* ge1526ov25002363;
extern T0* ge1526ov25002362;
extern T0* ge498ov8159244;
extern T0* ge1516ov24838150;
extern T0* ge1516ov24838148;
extern T0* ge1516ov24838146;
extern T0* ge1515ov24821773;
extern T0* ge1515ov24821768;
extern T0* ge1515ov24821763;
extern T0* ge1525ov24986499;
extern T0* ge1525ov24986138;
extern T0* ge1525ov24985946;
extern T0* ge1294ov21201480;
extern T0* ge1294ov21201479;
extern T0* ge1294ov21201476;
extern T0* ge1294ov21201840;
extern T0* ge1294ov21201828;
extern T0* ge1294ov21201475;
extern T0* ge1294ov21201472;
extern T0* ge1294ov21201474;
extern T0* ge1294ov21201473;
extern T0* ge1294ov21201470;
extern T0* ge1294ov21201467;
extern T0* ge1294ov21201465;
extern T0* ge1294ov21201457;
extern T0* ge1294ov21201453;
extern T0* ge1294ov21201445;
extern T0* ge1294ov21201444;
extern T0* ge1294ov21201443;
extern T0* ge1294ov21201438;
extern T0* ge1294ov21201437;
extern T0* ge1294ov21201432;
extern T0* ge1294ov21201430;
extern T0* ge1294ov21201454;
extern T0* ge1294ov21201436;
extern T0* ge856ov14024709;
extern T0* ge856ov14024710;
extern T0* ge856ov14024708;
extern T0* ge856ov14024706;
extern T0* ge856ov14024705;
extern T0* ge856ov14024707;
extern T0* ge1294ov21201677;
extern T0* ge1294ov21201482;
extern T0* ge1294ov21201572;
extern T0* ge1294ov21201812;
extern T0* ge1294ov21201806;
extern T0* ge1294ov21201865;
extern T0* ge1294ov21201850;
extern T0* ge1294ov21201852;
extern T0* ge1294ov21201810;
extern T0* ge1294ov21201873;
extern T0* ge1294ov21201816;
extern T0* ge1294ov21201859;
extern T0* ge1294ov21201815;
extern T0* ge1294ov21201871;
extern T0* ge1294ov21201829;
extern T0* ge1294ov21201858;
extern T0* ge1522ov24936451;
extern T0* ge1522ov24936450;
extern T0* ge1294ov21201845;
extern T0* ge1294ov21201823;
extern T0* ge1294ov21201834;
extern T0* ge1294ov21201818;
extern T0* ge1294ov21201855;
extern T0* ge1294ov21201831;
extern T0* ge1294ov21201857;
extern T0* ge1525ov24986498;
extern T0* ge1525ov24985945;
extern T0* ge1294ov21201848;
extern T0* ge1537ov25182259;
extern T0* ge1294ov21201932;
extern T0* ge1294ov21201935;
extern T0* ge1294ov21201936;
extern T0* ge1294ov21201941;
extern T0* ge1294ov21201947;
extern T0* ge1294ov21201950;
extern T0* ge1294ov21201450;
extern T0* ge1294ov21201456;
extern T0* ge1294ov21201484;
extern T0* ge1294ov21201496;
extern T0* ge1294ov21201525;
extern T0* ge1294ov21201543;
extern T0* ge1294ov21201559;
extern T0* ge1294ov21201560;
extern T0* ge1294ov21201562;
extern T0* ge1294ov21201565;
extern T0* ge1294ov21201567;
extern T0* ge1294ov21201597;
extern T0* ge1294ov21201652;
extern T0* ge1294ov21201654;
extern T0* ge1294ov21201655;
extern T0* ge1294ov21201658;
extern T0* ge1294ov21201660;
extern T0* ge1294ov21201678;
extern T0* ge1294ov21201680;
extern T0* ge1294ov21201687;
extern T0* ge1294ov21201731;
extern T0* ge1294ov21201741;
extern T0* ge1294ov21201761;
extern T0* ge1294ov21201771;
extern T0* ge1294ov21201777;
extern T0* ge1294ov21201782;
extern T0* ge1294ov21201794;
extern T0* ge1294ov21201797;
extern T0* ge1294ov21201801;
extern T0* ge1294ov21201805;
extern T0* ge1294ov21201813;
extern T0* ge1294ov21201820;
extern T0* ge1294ov21201821;
extern T0* ge1294ov21201833;
extern T0* ge1294ov21201836;
extern T0* ge1294ov21201838;
extern T0* ge1294ov21201839;
extern T0* ge1294ov21201847;
extern T0* ge1294ov21201860;
extern T0* ge1294ov21201862;
extern T0* ge1294ov21201867;
extern T0* ge1294ov21201868;
extern T0* ge1294ov21201872;
extern T0* ge1294ov21201874;
extern T0* ge411ov6733834;
extern T0* ge398ov6520842;
extern T0* ge1537ov25182280;
extern T0* ge1525ov24986195;
extern T0* ge1525ov24986000;
extern T0* ge1525ov24985647;
extern T0* ge1525ov24986196;
extern T0* ge1525ov24985648;
extern T0* ge1525ov24986179;
extern T0* ge1525ov24985993;
extern T0* ge1525ov24985631;
extern T0* ge1525ov24986178;
extern T0* ge1525ov24985630;
extern T0* ge1525ov24986180;
extern T0* ge1525ov24985632;
extern T0* ge1525ov24986204;
extern T0* ge1525ov24986004;
extern T0* ge1525ov24985656;
extern T0* ge1525ov24986193;
extern T0* ge1525ov24985645;
extern T0* ge1525ov24986194;
extern T0* ge1525ov24985646;
extern T0* ge1525ov24986356;
extern T0* ge1525ov24986063;
extern T0* ge1525ov24985805;
extern T0* ge1525ov24986355;
extern T0* ge1525ov24985804;
extern T0* ge1525ov24986357;
extern T0* ge1525ov24986064;
extern T0* ge1525ov24985806;
extern T0* ge1525ov24986208;
extern T0* ge1525ov24986006;
extern T0* ge1525ov24985660;
extern T0* ge1525ov24986214;
extern T0* ge1525ov24986010;
extern T0* ge1525ov24985666;
extern T0* ge1525ov24986348;
extern T0* ge1525ov24986059;
extern T0* ge1525ov24985797;
extern T0* ge1525ov24986332;
extern T0* ge1525ov24986049;
extern T0* ge1525ov24985781;
extern T0* ge1525ov24986358;
extern T0* ge1525ov24986065;
extern T0* ge1525ov24985807;
extern T0* ge1525ov24986211;
extern T0* ge1525ov24986008;
extern T0* ge1525ov24985663;
extern T0* ge1525ov24986218;
extern T0* ge1525ov24986013;
extern T0* ge1525ov24985670;
extern T0* ge1525ov24986349;
extern T0* ge1525ov24986060;
extern T0* ge1525ov24985798;
extern T0* ge1525ov24986347;
extern T0* ge1525ov24986058;
extern T0* ge1525ov24985796;
extern T0* ge1525ov24986333;
extern T0* ge1525ov24986050;
extern T0* ge1525ov24985782;
extern T0* ge1525ov24986350;
extern T0* ge1525ov24986061;
extern T0* ge1525ov24985799;
extern T0* ge1525ov24986496;
extern T0* ge1525ov24986136;
extern T0* ge1525ov24985943;
extern T0* ge1525ov24986492;
extern T0* ge1525ov24986132;
extern T0* ge1525ov24985939;
extern T0* ge1525ov24986495;
extern T0* ge1525ov24986135;
extern T0* ge1525ov24985942;
extern T0* ge1525ov24986303;
extern T0* ge1525ov24986041;
extern T0* ge1525ov24985753;
extern T0* ge1525ov24986304;
extern T0* ge1525ov24985754;
extern T0* ge1525ov24986297;
extern T0* ge1525ov24985747;
extern T0* ge1525ov24986306;
extern T0* ge1525ov24986042;
extern T0* ge1525ov24985756;
extern T0* ge1525ov24986305;
extern T0* ge1525ov24985755;
extern T0* ge1525ov24986302;
extern T0* ge1525ov24986040;
extern T0* ge1525ov24985752;
extern T0* ge1525ov24986244;
extern T0* ge1525ov24986024;
extern T0* ge1525ov24985696;
extern T0* ge1525ov24986243;
extern T0* ge1525ov24986023;
extern T0* ge1525ov24985695;
extern T0* ge1525ov24986242;
extern T0* ge1525ov24986022;
extern T0* ge1525ov24985694;
extern T0* ge1525ov24986241;
extern T0* ge1525ov24986021;
extern T0* ge1525ov24985693;
extern T0* ge1525ov24986240;
extern T0* ge1525ov24985692;
extern T0* ge1525ov24986175;
extern T0* ge1525ov24985990;
extern T0* ge1525ov24985627;
extern T0* ge1525ov24986173;
extern T0* ge1525ov24985989;
extern T0* ge1525ov24985625;
extern T0* ge1525ov24986250;
extern T0* ge1525ov24986025;
extern T0* ge1525ov24985702;
extern T0* ge1298ov21266443;
extern T0* ge1525ov24986247;
extern T0* ge1525ov24985699;
extern T0* ge1525ov24986269;
extern T0* ge1525ov24986027;
extern T0* ge1525ov24985721;
extern T0* ge1525ov24986262;
extern T0* ge1525ov24986026;
extern T0* ge1525ov24985714;
extern T0* ge1525ov24986251;
extern T0* ge1525ov24985703;
extern T0* ge1525ov24986248;
extern T0* ge1525ov24985700;
extern T0* ge1525ov24986270;
extern T0* ge1525ov24985722;
extern T0* ge1525ov24986263;
extern T0* ge1525ov24985715;
extern T0* ge1525ov24986252;
extern T0* ge1525ov24985704;
extern T0* ge1525ov24986249;
extern T0* ge1525ov24985701;
extern T0* ge1525ov24986271;
extern T0* ge1525ov24985723;
extern T0* ge1525ov24986264;
extern T0* ge1525ov24985716;
extern T0* ge1525ov24986417;
extern T0* ge1525ov24985866;
extern T0* ge1525ov24986292;
extern T0* ge1525ov24986031;
extern T0* ge1525ov24985742;
extern T0* ge1525ov24986291;
extern T0* ge1525ov24985741;
extern T0* ge1525ov24986287;
extern T0* ge1525ov24986029;
extern T0* ge1525ov24985739;
extern T0* ge1525ov24986253;
extern T0* ge1525ov24985705;
extern T0* ge1525ov24986246;
extern T0* ge1525ov24985698;
extern T0* ge1525ov24986278;
extern T0* ge1525ov24986028;
extern T0* ge1525ov24985730;
extern T0* ge1525ov24986245;
extern T0* ge1525ov24985697;
extern T0* ge1525ov24986277;
extern T0* ge1525ov24985729;
extern T0* ge1525ov24986268;
extern T0* ge1525ov24985720;
extern T0* ge1525ov24986276;
extern T0* ge1525ov24985728;
extern T0* ge1525ov24986261;
extern T0* ge1525ov24985713;
extern T0* ge1525ov24986275;
extern T0* ge1525ov24985727;
extern T0* ge1525ov24986288;
extern T0* ge1525ov24986030;
extern T0* ge1525ov24985740;
extern T0* ge1525ov24986406;
extern T0* ge1525ov24985855;
extern T0* ge1525ov24986404;
extern T0* ge1525ov24985853;
extern T0* ge1525ov24986182;
extern T0* ge1525ov24985994;
extern T0* ge1525ov24985634;
extern T0* ge1525ov24986354;
extern T0* ge1525ov24986062;
extern T0* ge1525ov24985803;
extern T0* ge1525ov24986181;
extern T0* ge1525ov24985633;
extern T0* ge1525ov24986353;
extern T0* ge1525ov24985802;
extern T0* ge1525ov24986352;
extern T0* ge1525ov24985801;
extern T0* ge1525ov24986212;
extern T0* ge1525ov24986009;
extern T0* ge1525ov24985664;
extern T0* ge1525ov24986210;
extern T0* ge1525ov24986007;
extern T0* ge1525ov24985662;
extern T0* ge1525ov24986209;
extern T0* ge1525ov24985661;
extern T0* ge1525ov24986216;
extern T0* ge1525ov24986011;
extern T0* ge1525ov24985668;
extern T0* ge1525ov24986215;
extern T0* ge1525ov24985667;
extern T0* ge1525ov24986217;
extern T0* ge1525ov24986012;
extern T0* ge1525ov24985669;
extern T0* ge1525ov24986256;
extern T0* ge1525ov24985708;
extern T0* ge1525ov24986255;
extern T0* ge1525ov24985707;
extern T0* ge1525ov24986282;
extern T0* ge1525ov24985734;
extern T0* ge1525ov24986254;
extern T0* ge1525ov24985706;
extern T0* ge1525ov24986281;
extern T0* ge1525ov24985733;
extern T0* ge1525ov24986272;
extern T0* ge1525ov24985724;
extern T0* ge1525ov24986280;
extern T0* ge1525ov24985732;
extern T0* ge1525ov24986265;
extern T0* ge1525ov24985717;
extern T0* ge1525ov24986279;
extern T0* ge1525ov24985731;
extern T0* ge1525ov24986198;
extern T0* ge1525ov24986001;
extern T0* ge1525ov24985650;
extern T0* ge1525ov24986197;
extern T0* ge1525ov24985649;
extern T0* ge1525ov24986203;
extern T0* ge1525ov24985655;
extern T0* ge1525ov24986200;
extern T0* ge1525ov24986002;
extern T0* ge1525ov24985652;
extern T0* ge1525ov24986201;
extern T0* ge1525ov24985653;
extern T0* ge1525ov24986351;
extern T0* ge1525ov24985800;
extern T0* ge1525ov24986199;
extern T0* ge1525ov24985651;
extern T0* ge1525ov24986213;
extern T0* ge1525ov24985665;
extern T0* ge1525ov24986202;
extern T0* ge1525ov24986003;
extern T0* ge1525ov24985654;
extern T0* ge1525ov24986207;
extern T0* ge1525ov24986005;
extern T0* ge1525ov24985659;
extern T0* ge1525ov24986205;
extern T0* ge1525ov24985657;
extern T0* ge1525ov24986206;
extern T0* ge1525ov24985658;
extern T0* ge1525ov24986359;
extern T0* ge1525ov24986066;
extern T0* ge1525ov24985808;
extern T0* ge1525ov24986328;
extern T0* ge1525ov24986033;
extern T0* ge1525ov24985777;
extern T0* ge1525ov24986177;
extern T0* ge1525ov24985992;
extern T0* ge1525ov24985629;
extern T0* ge1525ov24986176;
extern T0* ge1525ov24985991;
extern T0* ge1525ov24985628;
extern T0* ge1525ov24986486;
extern T0* ge1525ov24986125;
extern T0* ge1525ov24985933;
extern T0* ge1525ov24986330;
extern T0* ge1525ov24986034;
extern T0* ge1525ov24985779;
extern T0* ge1525ov24986489;
extern T0* ge1525ov24986129;
extern T0* ge1525ov24985936;
extern T0* ge1525ov24986488;
extern T0* ge1525ov24986128;
extern T0* ge1525ov24985935;
extern T0* ge1525ov24986327;
extern T0* ge1525ov24986047;
extern T0* ge1525ov24985776;
extern T0* ge1525ov24986329;
extern T0* ge1525ov24985778;
extern T0* ge1515ov24821774;
extern T0* ge1515ov24821769;
extern T0* ge1515ov24821764;
extern T0* ge1515ov24821775;
extern T0* ge1515ov24821770;
extern T0* ge1515ov24821765;
extern T0* ge865ov14172185;
extern T0* ge1525ov24986317;
extern T0* ge1525ov24986045;
extern T0* ge1525ov24985766;
extern T0* ge1525ov24986316;
extern T0* ge1525ov24985765;
extern T0* ge1525ov24986318;
extern T0* ge1525ov24985767;
extern T0* ge1525ov24986319;
extern T0* ge1525ov24985768;
extern T0* ge1525ov24986307;
extern T0* ge1525ov24985757;
extern T0* ge1525ov24986260;
extern T0* ge1525ov24985712;
extern T0* ge1525ov24986259;
extern T0* ge1525ov24985711;
extern T0* ge1525ov24986274;
extern T0* ge1525ov24985726;
extern T0* ge1525ov24986267;
extern T0* ge1525ov24985719;
extern T0* ge1525ov24986314;
extern T0* ge1525ov24986044;
extern T0* ge1525ov24985764;
extern T0* ge1525ov24986313;
extern T0* ge1525ov24985763;
extern T0* ge1525ov24986258;
extern T0* ge1525ov24985710;
extern T0* ge1525ov24986286;
extern T0* ge1525ov24985738;
extern T0* ge1525ov24986257;
extern T0* ge1525ov24985709;
extern T0* ge1525ov24986285;
extern T0* ge1525ov24985737;
extern T0* ge1525ov24986273;
extern T0* ge1525ov24985725;
extern T0* ge1525ov24986284;
extern T0* ge1525ov24985736;
extern T0* ge1525ov24986266;
extern T0* ge1525ov24985718;
extern T0* ge1525ov24986283;
extern T0* ge1525ov24985735;
extern T0* ge1525ov24986309;
extern T0* ge1525ov24985759;
extern T0* ge1525ov24986312;
extern T0* ge1525ov24985762;
extern T0* ge1525ov24986311;
extern T0* ge1525ov24985761;
extern T0* ge1525ov24986310;
extern T0* ge1525ov24985760;
extern T0* ge1526ov25002427;
extern T0* ge1526ov25002428;
extern T0* ge1526ov25002366;
extern T0* ge1526ov25002398;
extern T0* ge1526ov25002449;
extern T0* ge1526ov25002531;
extern T0* ge1526ov25002409;
extern T0* ge1526ov25002561;
extern T0* ge1526ov25002367;
extern T0* ge1526ov25002364;
extern T0* ge1526ov25002324;
extern T0* ge1526ov25002510;
extern T0* ge1526ov25002556;
extern T0* ge1526ov25002579;
extern T0* ge1526ov25002580;
extern T0* ge1526ov25002575;
extern T0* ge1526ov25002562;
extern T0* ge1526ov25002563;
extern T0* ge1526ov25002564;
extern T0* ge1526ov25002567;
extern T0* ge1526ov25002568;
extern T0* ge1526ov25002569;
extern T0* ge1526ov25002570;
extern T0* ge1526ov25002571;
extern T0* ge1526ov25002572;
extern T0* ge1526ov25002573;
extern T0* ge1526ov25002574;
extern T0* ge1526ov25002576;
extern T0* ge1526ov25002577;
extern T0* ge1526ov25002578;
extern T0* ge1526ov25002565;
extern T0* ge1526ov25002274;
extern T0* ge1526ov25002365;
extern T0* ge1526ov25002325;
extern T0* ge1526ov25002329;
extern T0* ge1526ov25002410;
extern T0* ge1526ov25002301;
extern T0* ge1526ov25002465;
extern T0* ge1526ov25002610;
extern T0* ge1526ov25002641;
extern T0* ge1526ov25002302;
extern T0* ge1526ov25002464;
extern T0* ge1526ov25002558;
extern T0* ge1526ov25002557;
extern T0* ge1526ov25002431;
extern T0* ge1526ov25002430;
extern T0* ge1526ov25002438;
extern T0* ge1526ov25002437;
extern T0* ge414ov6307841;
extern T0* ge1526ov25002664;
extern T0* ge1526ov25002238;
extern T0* ge1526ov25002657;
extern T0* ge1526ov25002269;
extern T0* ge1526ov25002654;
extern T0* ge1526ov25002263;
extern T0* ge1526ov25002262;
extern T0* ge1526ov25002261;
extern T0* ge1526ov25002260;
extern T0* ge1526ov25002250;
extern T0* ge1526ov25002248;
extern T0* ge1526ov25002247;
extern T0* ge1526ov25002243;
extern T0* ge1526ov25002266;
extern T0* ge1526ov25002259;
extern T0* ge1526ov25002246;
extern T0* ge1526ov25002276;
extern T0* ge1526ov25002656;
extern T0* ge1526ov25002277;
extern T0* ge1526ov25002605;
extern T0* ge1526ov25002665;
extern T0* ge1526ov25002256;
extern T0* ge411ov6193159;
extern T0* ge1869ov30621751;
extern T0* ge1869ov30621752;
extern T0* ge1523ov24952849;
extern T0* ge1523ov24952843;
extern T0* ge1523ov24952837;
extern T0* ge1523ov24952845;
extern T0* ge1523ov24952839;
extern T0* ge1523ov24952833;
extern T0* ge1523ov24952848;
extern T0* ge1523ov24952842;
extern T0* ge1523ov24952836;
extern T0* ge1523ov24952850;
extern T0* ge1523ov24952844;
extern T0* ge1523ov24952838;
extern T0* ge1523ov24952847;
extern T0* ge1523ov24952841;
extern T0* ge1523ov24952835;
extern T0* ge1525ov24986497;
extern T0* ge1525ov24986137;
extern T0* ge1525ov24985944;
extern T0* ge1525ov24986494;
extern T0* ge1525ov24986134;
extern T0* ge1525ov24985941;
extern T0* ge1525ov24986493;
extern T0* ge1525ov24986133;
extern T0* ge1525ov24985940;
extern T0* ge1523ov24952846;
extern T0* ge1523ov24952840;
extern T0* ge1523ov24952834;
extern T0* ge1524ov24969226;
extern T0* ge1524ov24969222;
extern T0* ge1524ov24969221;
extern T0* ge1524ov24969225;
extern T0* ge1524ov24969220;
extern T0* ge1524ov24969224;
extern T0* ge1524ov24969219;
extern T0* ge1524ov24969223;
extern T0* ge1524ov24969218;
extern T0* ge1688ov27656209;
extern T0* ge1696ov27787287;
extern T0* ge542ov8880132;
extern T0* ge1515ov24821772;
extern T0* ge1515ov24821767;
extern T0* ge1515ov24821762;
extern T0* ge1181ov19349555;
extern T0* ge1181ov19349556;
extern T0* ge856ov14024714;
extern T0* ge856ov14024715;
extern T0* ge856ov14024716;
extern T0* ge856ov14024725;
extern T0* ge810ov13271042;
extern T0* ge810ov13271049;
extern T0* ge810ov13271048;
extern T0* ge810ov13271043;
extern T0* ge810ov13271047;
extern T0* ge810ov13271044;
extern T0* ge810ov13271050;
extern T0* ge865ov14172170;
extern T0* ge865ov14172165;
extern T0* ge865ov14172175;
extern T0* ge865ov14172176;
extern T0* ge865ov14172202;
extern T0* ge865ov14172186;
extern T0* ge865ov14172182;
extern T0* ge865ov14172183;
extern T0* ge884ov14483543;
extern T0* ge884ov14483513;
extern T0* ge884ov14483479;
extern T0* ge884ov14483516;
extern T0* ge884ov14483537;
extern T0* ge884ov14483502;
extern T0* ge884ov14483527;
extern T0* ge878ov14385218;
extern T0* ge878ov14385183;
extern T0* ge878ov14385227;
extern T0* ge878ov14385192;
extern T0* ge878ov14385210;
extern T0* ge878ov14385175;
extern T0* ge887ov14532679;
extern T0* ge887ov14532678;
extern T0* ge884ov14483486;
extern T0* ge884ov14483487;
extern T0* ge884ov14483459;
extern T0* ge884ov14483466;
extern T0* ge884ov14483470;
extern T0* ge884ov14483514;
extern T0* ge884ov14483488;
extern T0* ge884ov14483489;
extern T0* ge884ov14483490;
extern T0* ge884ov14483491;
extern T0* ge884ov14483492;
extern T0* ge884ov14483493;
extern T0* ge884ov14483494;
extern T0* ge884ov14483497;
extern T0* ge884ov14483519;
extern T0* ge884ov14483501;
extern T0* ge884ov14483505;
extern T0* ge884ov14483518;
extern T0* ge884ov14483522;
extern T0* ge884ov14483523;
extern T0* ge884ov14483524;
extern T0* ge884ov14483532;
extern T0* ge884ov14483533;
extern T0* ge884ov14483545;
extern T0* ge884ov14483546;
extern T0* ge884ov14483457;
extern T0* ge865ov14172180;
extern T0* ge856ov14024713;
extern T0* ge856ov14024724;
extern T0* ge856ov14024723;
extern T0* ge856ov14024751;
extern T0* ge856ov14024754;
extern T0* ge856ov14024753;
extern T0* ge856ov14024726;
extern T0* ge856ov14024742;
extern T0* ge856ov14024717;
extern T0* ge856ov14024711;
extern T0* ge810ov13271041;
extern T0* ge865ov14172169;
extern T0* ge865ov14172197;
extern T0* ge884ov14483504;
extern T0* ge884ov14483510;
extern T0* ge884ov14483530;
extern T0* ge884ov14483465;
extern T0* ge884ov14483526;
extern T0* ge884ov14483472;
extern T0* ge884ov14483476;
extern T0* ge884ov14483538;
extern T0* ge878ov14385216;
extern T0* ge878ov14385181;
extern T0* ge878ov14385213;
extern T0* ge878ov14385178;
extern T0* ge884ov14483544;
extern T0* ge865ov14172171;
extern T0* ge865ov14172209;
extern T0* ge865ov14172215;
extern T0* ge865ov14172219;
extern T0* ge865ov14172210;
extern T0* ge884ov14483458;
extern T0* ge884ov14483467;
extern T0* ge884ov14483495;
extern T0* ge884ov14483503;
extern T0* ge884ov14483475;
extern T0* ge884ov14483468;
extern T0* ge884ov14483531;
extern T0* ge884ov14483547;
extern T0* ge884ov14483482;
extern T0* ge884ov14483525;
extern T0* ge884ov14483541;
extern T0* ge884ov14483469;
extern T0* ge884ov14483496;
extern T0* ge884ov14483517;
extern T0* ge884ov14483515;
extern T0* ge878ov14385211;
extern T0* ge878ov14385176;
extern T0* ge884ov14483474;
extern T0* ge884ov14483548;
extern T0* ge884ov14483477;
extern T0* ge884ov14483480;
extern T0* ge884ov14483481;
extern T0* ge884ov14483512;
extern T0* ge884ov14483521;
extern T0* ge884ov14483509;
extern T0* ge884ov14483507;
extern T0* ge884ov14483539;
extern T0* ge884ov14483473;
extern T0* ge884ov14483511;
extern T0* ge878ov14385200;
extern T0* ge878ov14385165;
extern T0* ge878ov14385199;
extern T0* ge878ov14385164;
extern T0* ge878ov14385198;
extern T0* ge878ov14385163;
extern T0* ge878ov14385197;
extern T0* ge878ov14385162;
extern T0* ge878ov14385196;
extern T0* ge878ov14385161;
extern T0* ge884ov14483485;
extern T0* ge878ov14385215;
extern T0* ge878ov14385180;
extern T0* ge878ov14385217;
extern T0* ge878ov14385182;
extern T0* ge884ov14483506;
extern T0* ge884ov14483471;
extern T0* ge884ov14483534;
extern T0* ge884ov14483550;
extern T0* ge884ov14483464;
extern T0* ge884ov14483478;
extern T0* ge884ov14483549;
extern T0* ge856ov14024727;
extern T0* ge856ov14024746;
extern T0* ge856ov14024750;
extern T0* ge856ov14024755;
extern T0* ge856ov14024756;
extern T0* ge856ov14024731;
extern T0* ge884ov14483483;
extern T0* ge856ov14024744;
extern T0* ge884ov14483520;
extern T0* ge884ov14483542;
extern T0* ge884ov14483499;
extern T0* ge884ov14483528;
extern T0* ge884ov14483498;
extern T0* ge884ov14483484;
extern T0* ge884ov14483500;
extern T0* ge884ov14483535;
extern T0* ge884ov14483540;
extern T0* ge884ov14483460;
extern T0* ge884ov14483461;
extern T0* ge884ov14483462;
extern T0* ge884ov14483463;
extern T0* ge856ov14024718;
extern T0* ge856ov14024749;
extern T0* ge856ov14024729;
extern T0* ge856ov14024712;
extern T0* ge856ov14024719;
extern T0* ge856ov14024721;
extern T0* ge856ov14024722;
extern T0* ge856ov14024728;
extern T0* ge856ov14024730;
extern T0* ge856ov14024732;
extern T0* ge856ov14024733;
extern T0* ge856ov14024734;
extern T0* ge856ov14024735;
extern T0* ge856ov14024736;
extern T0* ge856ov14024737;
extern T0* ge856ov14024738;
extern T0* ge856ov14024739;
extern T0* ge856ov14024740;
extern T0* ge856ov14024741;
extern T0* ge865ov14172161;
extern T0* ge865ov14172162;
extern T0* ge865ov14172163;
extern T0* ge865ov14172164;
extern T0* ge865ov14172166;
extern T0* ge865ov14172167;
extern T0* ge865ov14172168;
extern T0* ge865ov14172205;
extern T0* ge865ov14172172;
extern T0* ge865ov14172173;
extern T0* ge865ov14172174;
extern T0* ge865ov14172179;
extern T0* ge865ov14172181;
extern T0* ge865ov14172184;
extern T0* ge865ov14172187;
extern T0* ge865ov14172206;
extern T0* ge865ov14172193;
extern T0* ge865ov14172194;
extern T0* ge865ov14172208;
extern T0* ge865ov14172196;
extern T0* ge865ov14172198;
extern T0* ge865ov14172199;
extern T0* ge865ov14172203;
extern T0* ge865ov14172204;
extern T0* ge878ov14385212;
extern T0* ge878ov14385177;
extern T0* ge878ov14385214;
extern T0* ge878ov14385179;
extern T0* ge878ov14385208;
extern T0* ge878ov14385173;
extern T0* ge810ov13271052;
extern T0* ge810ov13271045;
extern T0* ge810ov13271046;
extern T0* ge878ov14385202;
extern T0* ge878ov14385167;
extern T0* ge878ov14385201;
extern T0* ge878ov14385166;
extern T0* ge884ov14483536;
extern T0* ge884ov14483508;
extern T0* ge865ov14172222;
extern T0* ge865ov14172220;
extern T0* ge820ov13434885;
extern T0* ge820ov13434886;
extern T0* ge820ov13434887;
extern T0* ge865ov14172178;
extern T0* ge865ov14172211;
extern T0* ge865ov14172223;
extern T0* ge878ov14385219;
extern T0* ge878ov14385184;
extern T0* ge878ov14385220;
extern T0* ge878ov14385185;
extern T0* ge878ov14385221;
extern T0* ge878ov14385186;
extern T0* ge878ov14385209;
extern T0* ge878ov14385174;
extern T0* ge878ov14385222;
extern T0* ge878ov14385187;
extern T0* ge878ov14385195;
extern T0* ge878ov14385160;
extern T0* ge878ov14385224;
extern T0* ge878ov14385189;
extern T0* ge878ov14385225;
extern T0* ge878ov14385190;
extern T0* ge878ov14385226;
extern T0* ge878ov14385191;
extern T0* ge878ov14385223;
extern T0* ge878ov14385188;
extern T0* ge884ov14483529;
extern T0* ge878ov14385194;
extern T0* ge878ov14385159;
extern T0* ge878ov14385203;
extern T0* ge878ov14385168;
extern T0* ge878ov14385204;
extern T0* ge878ov14385169;
extern T0* ge878ov14385207;
extern T0* ge878ov14385172;
extern T0* ge878ov14385206;
extern T0* ge878ov14385171;
extern T0* ge878ov14385205;
extern T0* ge878ov14385170;
extern T0* ge1792ov29360170;
extern T0* ge1792ov29360132;
extern T0* ge1792ov29360130;
extern T0* ge1792ov29360171;
extern T0* ge1792ov29360143;
extern T0* ge1792ov29360142;
extern T0* ge1792ov29360153;
extern T0* ge1792ov29360147;
extern T0* ge1792ov29360146;
extern T0* ge1792ov29360145;
extern T0* ge1792ov29360151;
extern T0* ge1792ov29360150;
extern T0* ge1792ov29360152;
extern T0* ge1792ov29360129;
extern T0* ge1792ov29360155;
extern T0* ge1792ov29360164;
extern T0* ge1795ov29409307;
extern T0* ge1795ov29409305;
extern T0* ge1795ov29409306;
extern T0* ge1792ov29360165;
extern T0* ge1792ov29360166;
extern T0* ge1792ov29360169;
extern T0* ge1792ov29360167;
extern T0* ge1792ov29360168;
extern T0* ge1759ov28819469;
extern T0* ge1759ov28819468;
extern T0* ge1792ov29360162;
extern T0* ge1788ov29294593;
extern T0* ge1788ov29294594;
extern T0* ge1792ov29360135;
extern T0* ge1790ov29327364;
extern T0* ge1790ov29327366;
extern T0* ge1790ov29327363;
extern T0* ge1790ov29327365;
extern T0* ge1792ov29360158;
extern T0* ge1803ov29540369;
extern T0* ge1803ov29540368;
extern T0* ge1792ov29360178;
extern T0* ge1792ov29360179;
extern T0* ge1792ov29360180;
extern T0* ge1792ov29360173;
extern T0* ge1792ov29360156;
extern T0* ge1792ov29360157;
extern T0* ge1792ov29360159;
extern T0* ge1792ov29360163;
extern T0* ge1799ov29474836;
extern T0* ge1799ov29474835;
extern T0* ge1847ov30261249;
extern T0* ge1869ov30621750;
extern T0* ge1869ov30621749;
extern T0* ge1869ov30621748;
extern T0* ge1869ov30621747;
extern T0* ge749ov12271625;
extern T0* ge749ov12271621;
extern T0* ge749ov12271617;
extern T0* ge749ov12271619;
extern T0* ge747ov12238851;
extern T0* geic25001985;
extern T0* geic25001986;
extern T0* geic13287425;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const21(void);
extern void GE_init_const22(void);
extern void GE_init_const23(void);
extern void GE_init_const24(void);
extern void GE_init_const(void);

#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_TIME_H
#define GE_TIME_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void*) ((char*) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type*)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type*)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field(eif_array, "area", EIF_REFERENCE); \
		memcpy((type *)area, c_array, nelts * sizeof(type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference(EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef __LCC__
#		define rt_stat_buf	struct stat
#	elif defined EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen(EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date(EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date(EIF_FILENAME name);

/*
 * Generate a temporary file with a name based on a template and
 * return a file descriptor to the file.
 * The template is overwritten with the name of the new file.
 * Return a non-zero file descriptor for the temporary file upon success, -1 otherwise.
 * `template'is the template to use for creating the temporary file.
 * It must match the rules for mk[s]temp (i.e. end in "XXXXXX").
 * On exit, it is updated with the new name.
 * `is_text_mode', if non-zero, then the temporary file is created
 * in text mode, otherwise in binary mode.<param>
 * Note: Code was inspired from https://github.com/mirror/mingw-w64/blob/master/mingw-w64-crt/misc/mkstemp.c
 */
extern EIF_INTEGER eif_file_mkstemp(EIF_FILENAME a_template, EIF_BOOLEAN is_text_mode);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
 * Raise an Eiffel exception.
 */
extern void eraise(const char* name, long code);

/*
 * Raise an Eiffel exception of the given code with no associated tag.
 */
extern void xraise(int code);

/*
 * Raise an "Operating system error" exception.
 */
extern void esys(void);

/*
 * As a special case, an I/O error is raised when a system call which is I/O bound fails.
 */
extern void eise_io(const char* tag);

/*
 * Raise a "No more memory" exception.
 */
extern void enomem(void);

/*
 * Raise EiffelCOM exception.
 */
extern void com_eraise(const char* tag, long num);

/*
 * Terminate execution with exit status `code',
 * without triggering an exception.
 */
extern void esdie(int code);

/*
 * Exception tag associated with `code'.
 * This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
 */
extern EIF_REFERENCE eename(long except);

/*
 * Is exception `ex' defined?
 * Used in EiffelCOM.
 */
extern char eedefined(long ex);

/*
 * Enable/diable printing of the exception trace.
 * Per thead information.
 */
extern void eetrace(char b);

/*
 * Is current execution during rescue?
 */
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void set_windows_exception_filter(void);
#endif

/*
 * Used in EiffelCOM.
 */
#define echval GE_current_context()->exception_code
#define echtg GE_current_context()->exception_tag

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_REAL_H
#define GE_REAL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v) != (v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v) != (v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))
#define GE_real_32_is_equal(v1,v2) ((v1) == (v1) ? (v1) == (v2) : (v2) != (v2))
#define GE_real_64_is_equal(v1,v2) ((v1) == (v1) ? (v1) == (v2) : (v2) != (v2))
#define GE_real_32_is_less(v1,v2) ((v1) == (v1) ? (v1) < (v2) : (v2) == (v2))
#define GE_real_64_is_less(v1,v2) ((v1) == (v1) ? (v1) < (v2) : (v2) == (v2))
#define GE_real_32_ieee_is_equal(v1,v2) (v1) == (v2)
#define GE_real_64_ieee_is_equal(v1,v2) (v1) == (v2)
#define GE_real_32_ieee_is_greater(v1,v2) isgreater(v1,v2)
#define GE_real_64_ieee_is_greater(v1,v2) isgreater(v1,v2)
#define GE_real_32_ieee_is_greater_equal(v1,v2) isgreaterequal(v1,v2)
#define GE_real_64_ieee_is_greater_equal(v1,v2) isgreaterequal(v1,v2)
#define GE_real_32_ieee_is_less(v1,v2) isless(v1,v2)
#define GE_real_64_ieee_is_less(v1,v2) isless(v1,v2)
#define GE_real_32_ieee_is_less_equal(v1,v2) islessequal(v1,v2)
#define GE_real_64_ieee_is_less_equal(v1,v2) islessequal(v1,v2)
#define GE_real_32_ieee_maximum_number(v1,v2) fmaxf(v1,v2)
#define GE_real_64_ieee_maximum_number(v1,v2) fmax(v1,v2)
#define GE_real_32_ieee_minimum_number(v1,v2) fminf(v1,v2)
#define GE_real_64_ieee_minimum_number(v1,v2) fmin(v1,v2)

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif
#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_H
#include "ge_thread.h"
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GE_USE_THREADS

/*
 * Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
 */

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, set_terminated_func, attr)
#define eif_thr_wait(obj,get_terminated)
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) EIF_TRUE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_TRUE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 1
#define eif_thr_cond_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_TRUE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,set_terminated_func,attr) GE_thread_create_with_attr((current_obj),(void (*)(EIF_REFERENCE,EIF_INTEGER))(init_func),(void (*)(EIF_REFERENCE,EIF_BOOLEAN))(set_terminated_func),(EIF_THR_ATTR_TYPE*)(attr),0)
#define eif_thr_wait(obj,get_terminated) GE_thread_wait((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated))
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) GE_thread_wait_with_timeout((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_try_lock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() GE_condition_variable_create()
#define eif_thr_cond_broadcast(a_cond_ptr) GE_condition_variable_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr) GE_condition_variable_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr) GE_condition_variable_wait((a_cond_ptr),(a_mutex_ptr))
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) GE_condition_variable_wait_with_timeout((a_cond_ptr),(a_mutex_ptr),(a_timeout))
#define eif_thr_cond_destroy(a_cond_ptr) GE_condition_variable_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) GE_semaphore_create(a_count)
#define eif_thr_sem_wait(a_sem_pointer) GE_semaphore_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer) GE_semaphore_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) GE_semaphore_try_wait(a_sem_pointer)
#define eif_thr_sem_destroy(a_sem_pointer) GE_semaphore_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() GE_read_write_lock_create()
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer) GE_read_write_lock_read_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer) GE_read_write_lock_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer) GE_read_write_lock_write_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer) GE_read_write_lock_destroy(a_read_write_lock_pointer)

/* WEL */
#ifdef EIF_WINDOWS
#define eif_thr_create_wel_per_thread_data(a_size) GE_thread_create_wel_per_thread_data(a_size)
#endif

/* To compile the C code of EiffelNet. */
extern int socket_fides;

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile ISE's compiler."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_SIZE_H
#define EIF_SIZE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Basic sizes */
#define EIF_ALIGN	8	/* Alignment restrictions */
#define R64SIZ	8	/* Size of double */
#define I64SIZ	8	/* Size of integer 64 bits */
#define R32SIZ	4	/* Size of float */
#define REFSIZ	sizeof(char*)	/* Size of char* */
#define LNGSIZ	4	/* Size of long */
#define I16SIZ	2	/* Size of integer 16 bits */
#define CHRSIZ	1	/* Size of char */
#define PTRSIZ	sizeof(void*)	/* Size of a function pointer */

/* Macros used to access fields in the object */
#define REFACS(n) ((n)*REFSIZ)
#define CHRACS(n) ((n)*CHRSIZ)
#define I16ACS(n) ((n)*I16SIZ)
#define LNGACS(n) ((n)*LNGSIZ)
#define R32ACS(n) ((n)*R32SIZ)
#define I64ACS(n) ((n)*I64SIZ)
#define R64ACS(n) ((n)*R64SIZ)
#define PTRACS(n) ((n)*PTRSIZ)

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif
#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif
#ifndef EIF_SIZE_H
#include "eif_size.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_THREADS
#define EIF_GET_CONTEXT \
	GE_thread_context* eif_globals = GE_current_context()->thread;
#else
#define EIF_GET_CONTEXT
#endif

#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_STRING_H
#include "ge_string.h"
#endif
#ifndef GE_GC_H
#include "ge_gc.h"
#endif
#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open(EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next(EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind(EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close(EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable(EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current(EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir(EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_DLL_H
#define GE_DLL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)(name))

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_DLL_H
#include "ge_dll.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		""Part of ISE Eiffel runtime. Needed to compile class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2018-2020, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_SYSTEM_H
#define EIF_SYSTEM_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef EIF_WINDOWS
#include "Winbase.h"
# include <stdlib.h>

#elif defined(EIF_VMS) || defined(EIF_MACOSX)
#include "sysctl.conf"

#elif EIF_OS == EIF_OS_DARWIN
#include <unistd.h>
#include <mach-o/dyld.h>
#include <limits.h>

#elif EIF_OS == EIF_OS_FREEBSD
#include <unistd.h>
#include <sys/types.h>
#include <sys/sysctl.h>

#elif defined(EIF_SOLARIS)
#include <unistd.h>
#include <stdlib.h>
#include <limits.h>

#else
#include <unistd.h>
#include <limits.h>

#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size(void);

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
